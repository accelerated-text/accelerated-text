concrete DictEng of DictEngAbs = CatEng ** open MorphoEng, ResEng, ParadigmsEng, IrregEng, Prelude in {

flags
  coding=utf8 ;

lin a_bomb_N = mkN "a-bomb" "a-bombs";
lin a_fortiori_Adv = mkAdv "a fortiori";
lin a_la_carte_Adv = mkAdv "à la carte";
lin a_la_mode_Adv = mkAdv "à la mode";
lin a_level_N = mkN "a-level" "a-levels";
lin a_posteriori_A = compoundA (mkA "a posteriori");
lin a_posteriori_Adv = mkAdv "a posteriori";
lin a_priori_A = compoundA (mkA "a priori");
lin a_priori_Adv = mkAdv "a priori";
lin aa_N = mkN "aa" ;
lin aachen_PN = mkPN "Aachen";
lin aalii_N = mkN "aalii" ;
lin aardvark_N = mkN "aardvark" ;
lin aardwolf_N = mkN "aardwolf" ;
lin aarhus_PN = mkPN "Aarhus";
lin ab_initio_Adv = mkAdv "ab initio";
lin aba_N = mkN "aba" ;
lin abaca_N = mkN "abaca" ;
lin aback_Adv = mkAdv "aback";
lin abactinal_A = mkA "abactinal" ;
lin abacus_N = mkN "abacus" "abacuses";
lin abaft_Adv = mkAdv "abaft";
lin abaft_Prep = mkPrep "abaft";
lin abalone_N = mkN "abalone" ;
lin abampere_N = mkN "abampere" ;
lin abandon_N = mkN "abandon" ;
lin abandon_V2 = mkV2 (mkV "abandon" "abandons" "abandoned" "abandoned" "abandoning");
lin abandonment_N = mkN "abandonment" ;
lin abarticulation_N = mkN "abarticulation" ;
lin abase_V2 = mkV2 (mkV "abase" "abases" "abased" "abased" "abasing");
lin abasement_N = mkN "abasement" ;
lin abash_V2 = mkV2 (mkV "abash" "abashes" "abashed" "abashed" "abashing");
lin abashment_N = mkN "abashment" ;
lin abasia_N = mkN "abasia" ;
lin abasic_A = mkA "abasic" ;
lin abatable_A = mkA "abatable" ;
lin abate_V = mkV "abate" "abates" "abated" "abated" "abating";
lin abate_V2 = mkV2 (mkV "abate" "abates" "abated" "abated" "abating");
lin abatement_N = mkN "abatement" ;
lin abator_N = mkN "abator" ;
lin abattis_N = mkN "abattis" ;
lin abattoir_N = mkN "abattoir" "abattoirs";
lin abaxial_A = mkA "abaxial" ;
lin abaya_N = mkN "abaya" ;
lin abbacy_N = mkN "abbacy" ;
lin abbatial_A = mkA "abbatial" ;
lin abbe_N = mkN masculine (mkN (variants {"abbé"; "abbe"}));
lin abbess_N = mkN feminine (mkN "abbess" "abbesses");
lin abbey_N = mkN "abbey" "abbeys";
lin abbot_N = mkN "abbot" "abbots";
lin abbreviate_V2 = mkV2 (mkV "abbreviate" "abbreviates" "abbreviated" "abbreviated" "abbreviating");
lin abbreviation_N = mkN "abbreviation" "abbreviations";
lin abc_N = mkN "abc" "abcs" ;
lin abcoulomb_N = mkN "abcoulomb" ;
lin abdicable_A = mkA "abdicable" ;
lin abdicate_V = mkV "abdicate" "abdicates" "abdicated" "abdicated" "abdicating";
lin abdicate_V2 = mkV2 (mkV "abdicate" "abdicates" "abdicated" "abdicated" "abdicating");
lin abdication_N = mkN "abdication" "abdications";
lin abdicator_N = mkN "abdicator" ;
lin abdomen_N = mkN "abdomen" "abdomens";
lin abdominal_A = compoundA (mkA "abdominal");
lin abdominal_N = mkN "abdominal" ;
lin abdominocentesis_N = mkN "abdominocentesis" ;
lin abdominoplasty_N = mkN "abdominoplasty" ;
lin abdominous_A = mkA "abdominous" ;
lin abdominousness_N = mkN "abdominousness" ;
lin abdominovesical_A = mkA "abdominovesical" ;
lin abducent_A = mkA "abducent" ;
lin abducent_N = mkN "abducent" ;
lin abduct_V2 = mkV2 (mkV "abduct" "abducts" "abducted" "abducted" "abducting");
lin abduction_N = mkN "abduction" "abductions";
lin abductor_N = mkN "abductor" ;
lin abe_PN = mkPN "Abe";
lin abeam_Adv = mkAdv "abeam";
lin abecedarian_A = mkA "abecedarian" ;
lin abecedarian_N = mkN human (mkN "abecedarian");
lin abecedarius_N = mkN "abecedarius" ;
lin abed_Adv = mkAdv "abed";
lin abelia_N = mkN "abelia" ;
lin abelmosk_N = mkN "abelmosk" ;
lin abercarn_PN = mkPN "Abercarn";
lin aberdare_PN = mkPN "Aberdare";
lin aberdeen_PN = mkPN "Aberdeen";
lin abergavenny_PN = mkPN "Abergavenny";
lin abergele_PN = mkPN "Abergele";
lin aberrance_N = mkN "aberrance" ;
lin aberrant_A = compoundA (mkA "aberrant");
lin aberrant_N = mkN "aberrant" ;
lin aberration_N = mkN "aberration" "aberrations";
lin abertillery_PN = mkPN "Abertillery";
lin aberystwyth_PN = mkPN "Aberystwyth";
lin abet_V = mkV "abet";
lin abet_V2 = mkV2 (mkV "abet" "abets" "abetted" "abetted" "abetting");
lin abetalipoproteinemia_N = mkN "abetalipoproteinemia" ;
lin abetment_N = mkN "abetment" ;
lin abettor_N = mkN "abettor" ;
lin abeyance_N = mkN "abeyance" ;
lin abeyant_A = mkA "abeyant" ;
lin abfarad_N = mkN "abfarad" ;
lin abhenry_N = mkN "abhenry" ;
lin abhor_V2 = mkV2 (mkV "abhor" "abhors" "abhorred" "abhorred" "abhorring");
lin abhorrence_N = mkN "abhorrence" ;
lin abhorrent_A = compoundA (mkA "abhorrent");
lin abhorrer_N = mkN "abhorrer" ;
lin abidance_N = mkN "abidance" ;
lin abide_V = mkV "abide" "abides" "abided" "abided" "abiding";
lin abide_V2 = mkV2 (mkV "abide" "abides" "abided" "abided" "abiding");
lin abience_N = mkN "abience" ;
lin abient_A = mkA "abient" ;
lin ability_N = mkN "ability" "abilities";
lin abingdon_PN = mkPN "Abingdon";
lin abiogenesis_N = mkN "abiogenesis" ;
lin abiogenetic_A = mkA "abiogenetic" ;
lin abiogenist_N = mkN "abiogenist" ;
lin abiotrophy_N = mkN "abiotrophy" ;
lin abject_A = compoundA (mkA "abject");
lin abjection_N = mkN "abjection" "abjections";
lin abjuration_N = mkN "abjuration" "abjurations";
lin abjure_V2 = mkV2 (mkV "abjure" "abjures" "abjured" "abjured" "abjuring");
lin abjurer_N = mkN "abjurer" ;
lin ablactation_N = mkN "ablactation" ;
lin ablated_A = mkA "ablated" ;
lin ablation_N = mkN "ablation" ;
lin ablative_A = compoundA (mkA "ablative");
lin ablative_N = mkN "ablative" "ablatives";
lin ablaut_N = mkN "ablaut" "ablauts";
lin ablaze_A = compoundA (mkA "ablaze");
lin ablaze_Adv = mkAdv "ablaze";
lin able_A = mkA "able" "abler";
lin able_bodied_A = compoundA (mkA "able-bodied");
lin ableism_N = mkN "ableism" ;
lin ablepharia_N = mkN "ablepharia" ;
lin abloom_A = mkA "abloom" ;
lin ablution_N = mkN "ablution" "ablutions";
lin ablutionary_A = mkA "ablutionary" ;
lin abnegation_N = mkN "abnegation" ;
lin abnegator_N = mkN "abnegator" ;
lin abnormal_A = compoundA (mkA "abnormal");
lin abnormality_N = mkN "abnormality" "abnormalities";
lin abo_N = mkN "abo" "abos";
lin aboard_Adv = mkAdv "aboard";
lin aboard_Prep = mkPrep "aboard";
lin abocclusion_N = mkN "abocclusion" ;
lin abode_N = mkN "abode" "abodes";
lin abohm_N = mkN "abohm" ;
lin abolish_V2 = mkV2 (mkV "abolish" "abolishes" "abolished" "abolished" "abolishing");
lin abolishable_A = mkA "abolishable" ;
lin abolition_N = mkN "abolition" ;
lin abolitionary_A = mkA "abolitionary" ;
lin abolitionism_N = mkN "abolitionism" ;
lin abolitionist_N = mkN "abolitionist" "abolitionists";
lin abomasal_A = mkA "abomasal" ;
lin abomasum_N = mkN "abomasum" ;
lin abominable_A = compoundA (mkA "abominable");
lin abominate_V2 = mkV2 (mkV "abominate" "abominates" "abominated" "abominated" "abominating");
lin abomination_N = mkN "abomination" "abominations";
lin abominator_N = mkN "abominator" ;
lin aborad_Adv = mkAdv "aborad" ;
lin aboral_A = mkA "aboral" ;
lin aboriginal_A = compoundA (mkA "aboriginal");
lin aboriginal_N = mkN "aboriginal" "aboriginals";
lin aborigine_N = mkN "aborigine" "aborigines";
lin abort_N = mkN "abort" ;
lin abort_V = mkV "abort" "aborts" "aborted" "aborted" "aborting";
lin abort_V2 = mkV2 (mkV "abort" "aborts" "aborted" "aborted" "aborting");
lin aborticide_N = mkN "aborticide" ;
lin abortifacient_A = mkA "abortifacient" ;
lin abortifacient_N = mkN "abortifacient" ;
lin abortion_N = mkN "abortion" "abortions";
lin abortionist_N = mkN "abortionist" "abortionists";
lin abortive_A = compoundA (mkA "abortive");
lin abortus_N = mkN "abortus" ;
lin abound_V = mkV "abound" "abounds" "abounded" "abounded" "abounding";
lin about_AdN = mkAdN "about";
lin about_Adv = mkAdv "about";
lin about_Prep = mkPrep "about";
lin about_face_N = mkN "about-face" "about-faces";
lin about_face_V = mkV "about-face" "about-faces" "about-faced" "about-faced" "about-facing";
lin above_A = mkA "above" ;
lin above_Adv = mkAdv "above";
lin above_N = mkN "above" ;
lin above_Prep = mkPrep "above";
lin above_board_A = compoundA (mkA "above board");
lin above_board_Adv = mkAdv "above board";
lin above_mentioned_A = compoundA (mkA "above-mentioned");
lin above_named_A = compoundA (mkA "above-named");
lin aboveboard_A = mkA "aboveboard" ;
lin aboveground_A = mkA "aboveground" ;
lin abracadabra_N = mkN "abracadabra" ;
lin abrachia_N = mkN "abrachia" ;
lin abrade_V2 = mkV2 (mkV "abrade" "abrades" "abraded" "abraded" "abrading");
lin abrader_N = mkN "abrader" ;
lin abraham_PN = mkPN "Abraham";
lin abranchiate_A = mkA "abranchiate" ;
lin abrasion_N = mkN "abrasion" "abrasions";
lin abrasive_A = compoundA (mkA "abrasive");
lin abrasive_N = mkN "abrasive" "abrasives";
lin abrasiveness_N = mkN "abrasiveness" ;
lin abreast_Adv = mkAdv "abreast";
lin abridge_V2 = mkV2 (mkV "abridge" "abridges" "abridged" "abridged" "abridging");
lin abridgement_N = mkN "abridgement" "abridgements";
lin abridger_N = mkN "abridger" ;
lin abridgment_N = mkN "abridgment" "abridgments";
lin abroach_A = mkA "abroach" ;
lin abroad_A = mkA "abroad" ;
lin abroad_Adv = mkAdv "abroad";
lin abrocome_N = mkN "abrocome" ;
lin abrogate_V2 = mkV2 (mkV "abrogate" "abrogates" "abrogated" "abrogated" "abrogating");
lin abrogation_N = mkN "abrogation" "abrogations";
lin abrogator_N = mkN "abrogator" ;
lin abrupt_A = compoundA (mkA "abrupt");
lin abruptness_N = mkN "abruptness" ;
lin abscess_N = mkN "abscess" "abscesses";
lin abscessed_A = mkA "abscessed" ;
lin abscissa_N = mkN "abscissa" ;
lin abscission_N = mkN "abscission" ;
lin abscond_V = mkV "abscond" "absconds" "absconded" "absconded" "absconding";
lin absconder_N = mkN "absconder" ;
lin abscondment_N = mkN "abscondment" ;
lin abseiler_N = mkN "abseiler" ;
lin absence_N = mkN "absence" "absences";
lin absent_A = compoundA (mkA "absent");
lin absent_V2 = mkV2 (mkV "absent" "absents" "absented" "absented" "absenting");
lin absent_minded_A = compoundA (mkA "absent-minded");
lin absent_mindedness_N = mkN "absent-mindedness" ;
lin absentee_N = mkN "absentee" "absentees";
lin absenteeism_N = mkN "absenteeism" ;
lin absentmindedness_N = mkN "absentmindedness" ;
lin absinth_N = mkN "absinth" ;
lin absinthe_N = mkN "absinthe" ;
lin absolute_A = compoundA (mkA "absolute");
lin absolute_N = mkN "absolute" ;
lin absoluteness_N = mkN "absoluteness" ;
lin absolution_N = mkN "absolution" ;
lin absolutism_N = mkN "absolutism" ;
lin absolutist_A = mkA "absolutist" ;
lin absolutist_N = mkN "absolutist" ;
lin absolve_V2 = mkV2 (mkV "absolve" "absolves" "absolved" "absolved" "absolving");
lin absolver_N = mkN "absolver" ;
lin absolvitory_A = mkA "absolvitory" ;
lin absorb_V2 = mkV2 (mkV "absorb" "absorbs" "absorbed" "absorbed" "absorbing");
lin absorbable_A = mkA "absorbable" ;
lin absorbate_N = mkN "absorbate" ;
lin absorbefacient_A = mkA "absorbefacient" ;
lin absorbency_N = mkN "absorbency" ;
lin absorbent_A = compoundA (mkA "absorbent");
lin absorbent_N = mkN "absorbent" "absorbents";
lin absorber_N = mkN "absorber" ;
lin absorbing_A = mkA "absorbing" ;
lin absorption_N = mkN "absorption" ;
lin absorptivity_N = mkN "absorptivity" ;
lin abstain_V = mkV "abstain" "abstains" "abstained" "abstained" "abstaining";
lin abstainer_N = mkN "abstainer" "abstainers";
lin abstemious_A = compoundA (mkA "abstemious");
lin abstemiousness_N = mkN "abstemiousness" ;
lin abstention_N = mkN "abstention" "abstentions";
lin abstinence_N = mkN "abstinence" ;
lin abstinent_A = mkA "abstinent" ;
lin abstract_A = compoundA (mkA "abstract");
lin abstract_N = mkN "abstract" "abstracts";
lin abstract_V2 = mkV2 (mkV "abstract" "abstracts" "abstracted" "abstracted" "abstracting");
lin abstractedness_N = mkN "abstractedness" ;
lin abstraction_N = mkN "abstraction" "abstractions";
lin abstractionism_N = mkN "abstractionism" ;
lin abstractionist_N = mkN "abstractionist" ;
lin abstractive_A = mkA "abstractive" ;
lin abstractness_N = mkN "abstractness" ;
lin abstractor_N = mkN "abstractor" ;
lin abstruse_A = compoundA (mkA "abstruse");
lin abstruseness_N = mkN "abstruseness" ;
lin absurd_A = compoundA (mkA "absurd");
lin absurd_N = mkN "absurd" ;
lin absurdity_N = mkN "absurdity" "absurdities";
lin abulia_N = mkN "abulia" ;
lin abulic_A = mkA "abulic" ;
lin abundance_N = mkN "abundance" ;
lin abundant_A = compoundA (mkA "abundant");
lin abuse_N = mkN "abuse" "abuses";
lin abuse_V2 = mkV2 (mkV "abuse" "abuses" "abused" "abused" "abusing");
lin abuser_N = mkN "abuser" ;
lin abusive_A = compoundA (mkA "abusive");
lin abut_V = mkV "abut" "abuts" "abutted" "abutted" "abutting";
lin abutment_N = mkN "abutment" "abutments";
lin abutter_N = mkN "abutter" ;
lin abuzz_A = mkA "abuzz" ;
lin abvolt_N = mkN "abvolt" ;
lin abwatt_N = mkN "abwatt" ;
lin abysm_N = mkN "abysm" "abysms";
lin abysmal_A = compoundA (mkA "abysmal");
lin abyss_N = mkN "abyss" "abysses";
lin abyssal_A = mkA "abyssal" ;
lin acacia_N = mkN "acacia" "acacias";
lin academia_N = mkN "academia" ;
lin academic_A = compoundA (mkA "academic");
lin academic_N = mkN human (mkN "academic" "academics");
lin academically_Adv = mkAdv "academically";
lin academicianMasc_N = mkN masculine (mkN "academician" "academicians");
lin academicianFem_N = mkN feminine (mkN "academician" "academicians");
lin academicianship_N = mkN "academicianship" ;
lin academy_N = mkN "academy" "academies";
lin acanthion_N = mkN "acanthion" ;
lin acanthocephalan_N = mkN "acanthocephalan" ;
lin acanthocyte_N = mkN "acanthocyte" ;
lin acanthocytosis_N = mkN "acanthocytosis" ;
lin acanthoid_A = mkA "acanthoid" ;
lin acantholysis_N = mkN "acantholysis" ;
lin acanthoma_N = mkN "acanthoma" ;
lin acanthosis_N = mkN "acanthosis" ;
lin acanthotic_A = mkA "acanthotic" ;
lin acanthus_N = mkN "acanthus" ;
lin acapnic_A = mkA "acapnic" ;
lin acardia_N = mkN "acardia" ;
lin acariasis_N = mkN "acariasis" ;
lin acaricide_N = mkN "acaricide" ;
lin acarid_N = mkN "acarid" ;
lin acarine_N = mkN "acarine" ;
lin acarophobia_N = mkN "acarophobia" ;
lin acarpelous_A = mkA "acarpelous" ;
lin acarpous_A = mkA "acarpous" ;
lin acarus_N = mkN "acarus" ;
lin acatalectic_A = mkA "acatalectic" ;
lin acatalectic_N = mkN "acatalectic" ;
lin acataphasia_N = mkN "acataphasia" ;
lin acathexia_N = mkN "acathexia" ;
lin acathexis_N = mkN "acathexis" ;
lin acaudate_A = mkA "acaudate" ;
lin acaulescent_A = mkA "acaulescent" ;
lin accede_V = mkV "accede" "accedes" "acceded" "acceded" "acceding";
lin accelerando_A = compoundA (mkA "accelerando");
lin accelerando_Adv = mkAdv "accelerando";
lin accelerando_N = mkN "accelerando" "accelerandos";
lin accelerate_V = mkV "accelerate" "accelerates" "accelerated" "accelerated" "accelerating";
lin accelerate_V2 = mkV2 (mkV "accelerate" "accelerates" "accelerated" "accelerated" "accelerating");
lin acceleration_N = mkN "acceleration" ;
lin accelerative_A = mkA "accelerative" ;
lin accelerator_N = mkN "accelerator" "accelerators";
lin accelerometer_N = mkN "accelerometer" ;
lin accent_N = mkN "accent" "accents";
lin accent_V2 = mkV2 (mkV "accent" "accents" "accented" "accented" "accenting");
lin accentor_N = mkN "accentor" ;
lin accentual_A = mkA "accentual" ;
lin accentuate_V2 = mkV2 (mkV "accentuate" "accentuates" "accentuated" "accentuated" "accentuating");
lin accentuation_N = mkN "accentuation" "accentuations";
lin accept_V = mkV "accept" "accepts" "accepted" "accepted" "accepting";
lin accept_V2 = mkV2 (mkV "accept" "accepts" "accepted" "accepted" "accepting");
lin accept_VS = mkVS (mkV "accept" "accepts" "accepted" "accepted" "accepting");
lin acceptability_N = mkN "acceptability" ;
lin acceptable_A = compoundA (mkA "acceptable");
lin acceptance_N = mkN "acceptance" ;
lin acceptation_N = mkN "acceptation" "acceptations";
lin acceptive_A = mkA "acceptive" ;
lin acceptor_N = mkN "acceptor" ;
lin access_N = mkN "access" ;
lin access_V2 = mkV2 (mkV "access");
lin accessary_A = mkA "accessary" ;
lin accessary_N = mkN "accessary" "accessaries";
lin accessibility_N = mkN "accessibility" ;
lin accessible_A = compoundA (mkA "accessible");
lin accession_N = mkN "accession" "accessions";
lin accessional_A = mkA "accessional" ;
lin accessorial_A = mkA "accessorial" ;
lin accessory_A = mkA "accessory" ;
lin accessory_N = mkN "accessory" "accessories";
lin accidence_N = mkN "accidence" ;
lin accident_N = mkN "accident" "accidents";
lin accident_prone_A = compoundA (mkA "accident-prone");
lin accidental_A = compoundA (mkA "accidental");
lin accidental_N = mkN "accidental" ;
lin accipitrine_A = mkA "accipitrine" ;
lin acclaim_N = mkN "acclaim" ;
lin acclaim_V2 = mkV2 (mkV "acclaim" "acclaims" "acclaimed" "acclaimed" "acclaiming");
lin acclamation_N = mkN "acclamation" ;
lin acclimate_V = mkV "acclimate" "acclimates" "acclimated" "acclimated" "acclimating";
lin acclimate_V2 = mkV2 (mkV "acclimate" "acclimates" "acclimated" "acclimated" "acclimating");
lin acclimation_N = mkN "acclimation" ;
lin acclimatization_N = mkN "acclimatization" ;
lin acclimatize_V = mkV "acclimatize" "acclimatizes" "acclimatized" "acclimatized" "acclimatizing";
lin acclimatize_V2 = mkV2 (mkV "acclimatize" "acclimatizes" "acclimatized" "acclimatized" "acclimatizing");
lin acclivitous_A = mkA "acclivitous" ;
lin acclivity_N = mkN "acclivity" "acclivities";
lin accolade_N = mkN "accolade" "accolades";
lin accommodate_V = mkV "accommodate";
lin accommodate_V2 = mkV2 (mkV "accommodate" "accommodates" "accommodated" "accommodated" "accommodating");
lin accommodation_N = mkN "accommodation" "accommodations";
lin accommodational_A = mkA "accommodational" ;
lin accommodative_A = mkA "accommodative" ;
lin accompaniment_N = mkN "accompaniment" "accompaniments";
lin accompanist_N = mkN "accompanist" "accompanists";
lin accompany_V2 = mkV2 (mkV "accompany" "accompanies" "accompanied" "accompanied" "accompanying");
lin accomplice_N = mkN human (mkN "accomplice" "accomplices");
lin accomplish_V2 = mkV2 (mkV "accomplish" "accomplishes" "accomplished" "accomplished" "accomplishing");
lin accomplishable_A = mkA "accomplishable" ;
lin accomplishment_N = mkN "accomplishment" "accomplishments";
lin accord_N = mkN "accord" "accords";
lin accord_V = mkV "accord" "accords" "accorded" "accorded" "according";
lin accord_V2 = mkV2 (mkV "accord" "accords" "accorded" "accorded" "according");
lin accordance_N = mkN "accordance" "accordances";
lin accordant_A = mkA "accordant" ;
lin according_to_Prep = mkPrep "according to";
lin accordingly_Adv = mkAdv "accordingly";
lin accordion_N = mkN "accordion" "accordions";
lin accordionist_N = mkN "accordionist" ;
lin accost_V2 = mkV2 (mkV "accost" "accosts" "accosted" "accosted" "accosting");
lin accouchement_N = mkN "accouchement" "accouchements";
lin account_N = mkN "account" "accounts";
lin account_V = mkV "account" "accounts" "accounted" "accounted" "accounting";
lin account_V2 = mkV2 (mkV "account" "accounts" "accounted" "accounted" "accounting");
lin accountability_N = mkN "accountability";
lin accountable_A = compoundA (mkA "accountable");
lin accountancy_N = mkN "accountancy" ;
lin accountant_N = mkN "accountant" "accountants";
lin accountantship_N = mkN "accountantship" ;
lin accounting_N = mkN "accounting" ;
lin accoutered_A = mkA "accoutered" ;
lin accra_PN = mkPN "Accra";
lin accredit_V2 = mkV2 (mkV "accredit" "accredits" "accredited" "accredited" "accrediting");
lin accreditation_N = mkN "accreditation";
lin accretion_N = mkN "accretion" "accretions";
lin accretionary_A = mkA "accretionary" ;
lin accretive_A = mkA "accretive" ;
lin accrington_PN = mkPN "Accrington";
lin accrue_V = mkV "accrue" "accrues" "accrued" "accrued" "accruing";
lin accrue_V2 = mkV2 (mkV "accrue" "accrues" "accrued" "accrued" "accruing");
lin acculturation_N = mkN "acculturation" ;
lin acculturational_A = mkA "acculturational" ;
lin accumbent_A = mkA "accumbent" ;
lin accumulate_V = mkV "accumulate" "accumulates" "accumulated" "accumulated" "accumulating";
lin accumulate_V2 = mkV2 (mkV "accumulate" "accumulates" "accumulated" "accumulated" "accumulating");
lin accumulation_N = mkN "accumulation" "accumulations";
lin accumulative_A = compoundA (mkA "accumulative");
lin accumulator_N = mkN "accumulator" "accumulators";
lin accuracy_N = mkN "accuracy" "accuracies";
lin accurate_A = compoundA (mkA "accurate");
lin accursed_A = compoundA (mkA "accursed");
lin accurst_A = compoundA (mkA "accurst");
lin accusation_N = mkN "accusation" "accusations";
lin accusative_A = compoundA (mkA "accusative");
lin accusative_N = mkN "accusative" "accusatives";
lin accusatorial_A = mkA "accusatorial" ;
lin accuse_V2 = mkV2 (mkV "accuse" "accuses" "accused" "accused" "accusing");
lin accused_N = mkN "accused" ;
lin accuserMasc_N = mkN masculine (mkN "accuser" "accusers");
lin accuserFem_N = mkN feminine (mkN "accuser" "accusers");
lin accusingly_Adv = mkAdv "accusingly";
lin accustom_V2 = mkV2 (mkV "accustom" "accustoms" "accustomed" "accustomed" "accustoming");
lin ace_A = mkA "ace" ;
lin ace_N = mkN "ace" "aces";
lin acebutolol_N = mkN "acebutolol" ;
lin acentric_A = mkA "acentric" ;
lin acephalia_N = mkN "acephalia" ;
lin acephalous_A = mkA "acephalous" ;
lin acerate_A = mkA "acerate" ;
lin acerb_A = mkA "acerb" ;
lin acerbity_N = mkN "acerbity" "acerbities";
lin acerola_N = mkN "acerola" ;
lin acervate_A = mkA "acervate" ;
lin acervulus_N = mkN "acervulus" ;
lin acetabular_A = mkA "acetabular" ;
lin acetabulum_N = mkN "acetabulum" ;
lin acetal_N = mkN "acetal" ;
lin acetaldehyde_N = mkN "acetaldehyde" ;
lin acetaldol_N = mkN "acetaldol" ;
lin acetamide_N = mkN "acetamide" ;
lin acetaminophen_N = mkN "acetaminophen" ;
lin acetanilide_N = mkN "acetanilide" ;
lin acetate_N = mkN "acetate" "acetates";
lin acetic_A = compoundA (mkA "acetic");
lin acetin_N = mkN "acetin" ;
lin acetone_N = mkN "acetone" ;
lin acetonic_A = mkA "acetonic" ;
lin acetophenetidin_N = mkN "acetophenetidin" ;
lin acetose_A = mkA "acetose" ;
lin acetum_N = mkN "acetum" ;
lin acetyl_N = mkN "acetyl" ;
lin acetylation_N = mkN "acetylation" ;
lin acetylcholine_N = mkN "acetylcholine" ;
lin acetylene_N = mkN "acetylene" ;
lin acetylenic_A = mkA "acetylenic" ;
lin acetylic_A = mkA "acetylic" ;
lin ache_N = mkN "ache" "aches";
lin ache_V = mkV "ache" "aches" "ached" "ached" "aching";
lin achene_N = mkN "achene" ;
lin achenial_A = mkA "achenial" ;
lin achievability_N = mkN "achievability" ;
lin achievable_A = compoundA (mkA "achievable");
lin achieve_V2 = mkV2 (mkV "achieve" "achieves" "achieved" "achieved" "achieving");
lin achievement_N = mkN "achievement" "achievements";
lin achiever_N = mkN "achiever" ;
lin achillea_N = mkN "achillea" ;
lin achilles_PN = mkPN "Achilles";
lin achimenes_N = mkN "achimenes" ;
lin achira_N = mkN "achira" ;
lin achlamydeous_A = mkA "achlamydeous" ;
lin achlorhydria_N = mkN "achlorhydria" ;
lin achlorhydric_A = mkA "achlorhydric" ;
lin acholia_N = mkN "acholia" ;
lin achondrite_N = mkN "achondrite" ;
lin achondritic_A = mkA "achondritic" ;
lin achondroplasia_N = mkN "achondroplasia" ;
lin achondroplastic_A = mkA "achondroplastic" ;
lin achromatic_A = mkA "achromatic" ;
lin achromatin_N = mkN "achromatin" ;
lin achromatinic_A = mkA "achromatinic" ;
lin achromatous_A = mkA "achromatous" ;
lin achromia_N = mkN "achromia" ;
lin achromic_A = mkA "achromic" ;
lin achylia_N = mkN "achylia" ;
lin acicula_N = mkN "acicula" ;
lin aciculate_A = mkA "aciculate" ;
lin acid_A = compoundA (mkA "acid");
lin acid_N = mkN "acid" "acids";
lin acidemia_N = mkN "acidemia" ;
lin acidic_A = compoundA (mkA "acidic");
lin acidification_N = mkN "acidification" ;
lin acidify_V = mkV "acidify" "acidifies" "acidified" "acidified" "acidifying";
lin acidify_V2 = mkV2 (mkV "acidify" "acidifies" "acidified" "acidified" "acidifying");
lin acidimetric_A = mkA "acidimetric" ;
lin acidimetry_N = mkN "acidimetry" ;
lin acidity_N = mkN "acidity" ;
lin acidophil_N = mkN "acidophil" ;
lin acidophilic_A = mkA "acidophilic" ;
lin acidophilus_N = mkN "acidophilus" ;
lin acidosis_N = mkN "acidosis" ;
lin acidotic_A = mkA "acidotic" ;
lin acidulated_A = compoundA (mkA "acidulated");
lin acidulous_A = compoundA (mkA "acidulous");
lin acinar_A = mkA "acinar" ;
lin acinus_N = mkN "acinus" ;
lin ack_ack_N = mkN "ack-ack" ;
lin ackee_N = mkN "ackee" ;
lin acknowledge_V = mkV "acknowledge";
lin acknowledge_V2 = mkV2 (mkV "acknowledge" "acknowledges" "acknowledged" "acknowledged" "acknowledging");
lin acknowledge_VS = mkVS (mkV "acknowledge");
lin acknowledgeable_A = mkA "acknowledgeable" ;
lin acknowledgement_N = mkN "acknowledgement" "acknowledgements";
lin acknowledgment_N = mkN "acknowledgment" ;
lin acme_N = mkN "acme" "IRREG";
lin acne_N = mkN "acne" ;
lin acned_A = mkA "acned" ;
lin acneiform_A = mkA "acneiform" ;
lin acold_A = mkA "acold" ;
lin acolyte_N = mkN "acolyte" "acolytes";
lin aconite_N = mkN "aconite" "aconites";
lin acorea_N = mkN "acorea" ;
lin acorn_N = mkN "acorn" "acorns";
lin acorn_cup_N = mkN "acorn-cup" "acorn-cups";
lin acoustic_A = compoundA (mkA "acoustic");
lin acoustic_N = mkN "acoustic" "acoustics";
lin acoustically_Adv = mkAdv "acoustically" ;
lin acoustician_N = mkN "acoustician" ;
lin acoustics_N = mkN "acoustics" "acoustics";
lin acquaint_V2 = mkV2 (mkV "acquaint" "acquaints" "acquainted" "acquainted" "acquainting");
lin acquaintance_N = mkN "acquaintance" "acquaintances";
lin acquaintanceship_N = mkN "acquaintanceship" "acquaintanceships";
lin acquiesce_V = mkV "acquiesce" "acquiesces" "acquiesced" "acquiesced" "acquiescing";
lin acquiescence_N = mkN "acquiescence" "acquiescences";
lin acquiescent_A = compoundA (mkA "acquiescent");
lin acquirable_A = mkA "acquirable" ;
lin acquire_V2 = mkV2 (mkV "acquire" "acquires" "acquired" "acquired" "acquiring");
lin acquirement_N = mkN "acquirement" "acquirements";
lin acquirer_N = mkN "acquirer" ;
lin acquiring_N = mkN "acquiring" ;
lin acquisition_N = mkN "acquisition" "acquisitions";
lin acquisitive_A = compoundA (mkA "acquisitive");
lin acquisitiveness_N = mkN "acquisitiveness" ;
lin acquit_V2 = mkV2 (mkV "acquit" "acquits" "acquitted" "acquitted" "acquitting");
lin acquittal_N = mkN "acquittal" "acquittals";
lin acquittance_N = mkN "acquittance" ;
lin acre_N = mkN "acre" "acres";
lin acreage_N = mkN "acreage" ;
lin acrid_A = compoundA (mkA "acrid");
lin acridity_N = mkN "acridity" ;
lin acrimonious_A = compoundA (mkA "acrimonious");
lin acrimony_N = mkN "acrimony" ;
lin acritical_A = mkA "acritical" ;
lin acroanesthesia_N = mkN "acroanesthesia" ;
lin acrobatMasc_N = mkN masculine (mkN "acrobat" "acrobats");
lin acrobatFem_N = mkN feminine (mkN "acrobat" "acrobats");
lin acrobatic_A = compoundA (mkA "acrobatic");
lin acrobatics_N = mkN "acrobatics" "acrobatics";
lin acrocarp_N = mkN "acrocarp" ;
lin acrocarpous_A = mkA "acrocarpous" ;
lin acrocentric_A = mkA "acrocentric" ;
lin acrocyanosis_N = mkN "acrocyanosis" ;
lin acrodont_N = mkN "acrodont" ;
lin acrogen_N = mkN "acrogen" ;
lin acrogenic_A = mkA "acrogenic" ;
lin acromegalic_A = mkA "acromegalic" ;
lin acromegaly_N = mkN "acromegaly" ;
lin acromicria_N = mkN "acromicria" ;
lin acromion_N = mkN "acromion" ;
lin acromphalus_N = mkN "acromphalus" ;
lin acromyotonia_N = mkN "acromyotonia" ;
lin acronym_N = mkN "acronym" "acronyms";
lin acronymic_A = mkA "acronymic" ;
lin acropetal_A = mkA "acropetal" ;
lin acrophobia_N = mkN "acrophobia" ;
lin acrophobic_A = mkA "acrophobic" ;
lin acrophony_N = mkN "acrophony" ;
lin acropolis_N = mkN "acropolis" "acropolises";
lin acroscopic_A = mkA "acroscopic" ;
lin acrosome_N = mkN "acrosome" ;
lin across_Adv = mkAdv "across";
lin across_Prep = mkPrep "across";
lin acrostic_N = mkN "acrostic" "acrostics";
lin acrylamide_N = mkN "acrylamide" ;
lin acrylic_N = mkN "acrylic" "acrylics";
lin act_N = mkN "act" "acts";
lin act_V = mkV "act" "acts" "acted" "acted" "acting";
lin act_V2 = mkV2 (mkV "act" "acts" "acted" "acted" "acting");
lin act_V2V = mkV2V (mkV "act" "acts" "acted" "acted" "acting") noPrep to_Prep ;
lin act_VA = mkVA (mkV "act" "acts" "acted" "acted" "acting");
lin actable_A = mkA "actable" ;
lin actin_N = mkN "actin" ;
lin actinal_A = mkA "actinal" ;
lin acting_N = mkN "acting" ;
lin actinia_N = mkN "actinia" ;
lin actinic_A = compoundA (mkA "actinic");
lin actinism_N = mkN "actinism" ;
lin actinium_N = mkN "actinium" ;
lin actinoid_A = mkA "actinoid" ;
lin actinoid_N = mkN "actinoid" ;
lin actinolite_N = mkN "actinolite" ;
lin actinometer_N = mkN "actinometer" ;
lin actinometric_A = mkA "actinometric" ;
lin actinometry_N = mkN "actinometry" ;
lin actinomorphic_A = mkA "actinomorphic" ;
lin actinomyces_N = mkN "actinomyces" ;
lin actinomycetal_A = mkA "actinomycetal" ;
lin actinomycete_N = mkN "actinomycete" ;
lin actinomycin_N = mkN "actinomycin" ;
lin actinomycosis_N = mkN "actinomycosis" ;
lin actinomycotic_A = mkA "actinomycotic" ;
lin actinomyxidian_N = mkN "actinomyxidian" ;
lin actinopod_N = mkN "actinopod" ;
lin action_N = mkN "action" "actions";
lin actionable_A = compoundA (mkA "actionable");
lin activate_V2 = mkV2 (mkV "activate" "activates" "activated" "activated" "activating");
lin activation_N = mkN "activation" "activations";
lin activator_N = mkN "activator" ;
lin active_A = compoundA (mkA "active");
lin active_N = mkN "active" ;
lin activeness_N = mkN "activeness" ;
lin activism_N = mkN "activism";
lin activist_A = mkA "activist" ;
lin activistMasc_N = mkN masculine (mkN "activist" "activists");
lin activistFem_N = mkN feminine (mkN "activist" "activists");
lin activity_N = mkN "activity" "activities";
lin actomyosin_N = mkN "actomyosin" ;
lin actor_N = mkN masculine (mkN "actor" "actors");
lin actress_N = mkN feminine (mkN "actress" "actresses");
lin actual_A = compoundA (mkA "actual");
lin actuality_N = mkN "actuality" "actualities";
lin actuarial_A = compoundA (mkA "actuarial");
lin actuary_N = mkN "actuary" "actuaries";
lin actuate_V2 = mkV2 (mkV "actuate" "actuates" "actuated" "actuated" "actuating");
lin actuator_N = mkN "actuator" ;
lin acuate_A = mkA "acuate" ;
lin acuity_N = mkN "acuity" ;
lin aculea_N = mkN "aculea" ;
lin aculeate_A = mkA "aculeate" ;
lin aculeus_N = mkN "aculeus" ;
lin acumen_N = mkN "acumen" ;
lin acuminate_A = mkA "acuminate" ;
lin acupressure_N = mkN "acupressure" ;
lin acupuncture_N = mkN "acupuncture" ;
lin acute_A = compoundA (mkA "acute");
lin acuteness_N = mkN "acuteness" ;
lin acyclic_A = mkA "acyclic" ;
lin acyclovir_N = mkN "acyclovir" ;
lin acyl_N = mkN "acyl" ;
lin acylation_N = mkN "acylation" ;
lin ad_N = mkN "ad" "ads";
lin ad_PN = mkPN "Ad";
lin ad_hoc_A = compoundA (mkA "ad hoc");
lin ad_hoc_Adv = mkAdv "ad hoc";
lin ad_infinitum_Adv = mkAdv "ad infinitum";
lin ad_interim_Adv = mkAdv "ad interim";
lin ad_lib_A = compoundA (mkA "ad-lib");
lin ad_lib_Adv = mkAdv "ad lib";
lin ad_lib_V = mkV "ad-lib" "ad-libs" "ad-libbed" "ad-libbed" "ad-libbing";
lin ad_libitum_Adv = mkAdv "ad libitum";
lin ad_man_N = mkN "ad-man" "ad-men";
lin ad_nauseam_Adv = mkAdv "ad nauseam";
lin ad_valorem_Adv = mkAdv "ad valorem";
lin ada_PN = mkPN "Ada";
lin adactylia_N = mkN "adactylia" ;
lin adactylous_A = mkA "adactylous" ;
lin adage_N = mkN "adage" "adages";
lin adagio_A = compoundA (mkA "adagio");
lin adagio_Adv = mkAdv "adagio";
lin adagio_N = mkN "adagio" "adagios";
lin adam_PN = mkPN "Adam";
lin adamance_N = mkN "adamance" ;
lin adamant_A = compoundA (mkA "adamant");
lin adamant_N = mkN "adamant" "adamants";
lin adamantine_A = compoundA (mkA "adamantine");
lin adapt_V = mkV "adapt";
lin adapt_V2 = mkV2 (mkV "adapt" "adapts" "adapted" "adapted" "adapting");
lin adaptability_N = mkN "adaptability" ;
lin adaptable_A = compoundA (mkA "adaptable");
lin adaptation_N = mkN "adaptation" "adaptations";
lin adaptational_A = mkA "adaptational" ;
lin adapter_N = mkN "adapter" "adapters";
lin adaptive_A = mkA "adaptive" ;
lin adaptor_N = mkN "adaptor" "adaptors";
lin adaxial_A = mkA "adaxial" ;
lin add_V = mkV "add";
lin add_V2 = mkV2 (mkV "add");
lin add_VS = mkVS (mkV "add");
lin addable_A = mkA "addable" ;
lin addax_N = mkN "addax" ;
lin addend_N = mkN "addend" ;
lin addendum_N = mkN "addendum" "addenda" {- FIXME: guessed plural form -};
lin adder_N = mkN "adder" "adders";
lin addict_N = mkN "addict" "addicts";
lin addict_V2 = mkV2 (mkV "addict" "addicts" "addicted" "addicted" "addicting");
lin addiction_N = mkN "addiction" "addictions";
lin addictive_A = compoundA (mkA "addictive");
lin adding_machine_N = mkN "adding-machine" "adding-machines";
lin addis_ababa_PN = mkPN "Addis Ababa";
lin addition_N = mkN "addition" "additions";
lin additional_A = compoundA (mkA "additional");
lin additive_A = mkA "additive" ;
lin additive_N = mkN "additive" "additives";
lin addle_A = compoundA (mkA "addle");
lin addle_V = mkV "addle" "addles" "addled" "addled" "addling";
lin addle_V2 = mkV2 (mkV "addle" "addles" "addled" "addled" "addling");
lin addle_brained_A = compoundA (mkA "addle-brained");
lin addle_head_N = mkN "addle-head" "addle-heads";
lin addle_pated_A = compoundA (mkA "addle-pated");
lin addlebrained_A = mkA "addlebrained" ;
lin address_N = mkN "address" "addresses";
lin address_V2 = mkV2 (mkV "address" "addresses" "addressed" "addressed" "addressing");
lin addressable_A = mkA "addressable" ;
lin addressee_N = mkN "addressee" "addressees";
lin addressograph_N = mkN "addressograph" "addressographs";
lin adduce_V2 = mkV2 (mkV "adduce" "adduces" "adduced" "adduced" "adducing");
lin adducent_A = mkA "adducent" ;
lin adducer_N = mkN "adducer" ;
lin adducing_N = mkN "adducing" ;
lin adduct_N = mkN "adduct" ;
lin adduction_N = mkN "adduction" ;
lin adductor_N = mkN "adductor" ;
lin adelaide_PN = mkPN "Adelaide";
lin adelgid_N = mkN "adelgid" ;
lin adenine_N = mkN "adenine" ;
lin adenitis_N = mkN "adenitis" ;
lin adenocarcinoma_N = mkN "adenocarcinoma" ;
lin adenocarcinomatous_A = mkA "adenocarcinomatous" ;
lin adenoid_A = mkA "adenoid" ;
lin adenoidal_A = compoundA (mkA "adenoidal");
lin adenoidectomy_N = mkN "adenoidectomy" ;
lin adenoma_N = mkN "adenoma" ;
lin adenomegaly_N = mkN "adenomegaly" ;
lin adenopathy_N = mkN "adenopathy" ;
lin adenosine_N = mkN "adenosine" ;
lin adenovirus_N = mkN "adenovirus" ;
lin adept_A = compoundA (mkA "adept");
lin adept_N = mkN "adept" "adepts";
lin adeptness_N = mkN "adeptness" ;
lin adequacy_N = mkN "adequacy" ;
lin adequate_A = compoundA (mkA "adequate");
lin adesite_N = mkN "adesite" ;
lin adhere_V = mkV "adhere" "adheres" "adhered" "adhered" "adhering";
lin adherence_N = mkN "adherence" "adherences";
lin adherent_A = mkA "adherent" ;
lin adherent_N = mkN human (mkN "adherent" "adherents");
lin adhesion_N = mkN "adhesion" "adhesions";
lin adhesive_A = compoundA (mkA "adhesive");
lin adhesive_N = mkN "adhesive" "adhesives";
lin adhesiveness_N = mkN "adhesiveness" ;
lin adhocracy_N = mkN "adhocracy" ;
lin adiabatic_A = mkA "adiabatic" ;
lin adience_N = mkN "adience" ;
lin adient_A = mkA "adient" ;
lin adieu_N = mkN "adieu" "adieus";
lin adipose_A = compoundA (mkA "adipose");
lin adiposity_N = mkN "adiposity" ;
lin adit_N = mkN "adit" ;
lin adjacency_N = mkN "adjacency" ;
lin adjacent_A = compoundA (mkA "adjacent");
lin adjectival_A = compoundA (mkA "adjectival");
lin adjective_A = mkA "adjective" ;
lin adjective_N = mkN "adjective" "adjectives";
lin adjoin_V = mkV "adjoin" "adjoins" "adjoined" "adjoined" "adjoining";
lin adjoin_V2 = mkV2 (mkV "adjoin" "adjoins" "adjoined" "adjoined" "adjoining");
lin adjourn_V = mkV "adjourn" "adjourns" "adjourned" "adjourned" "adjourning";
lin adjourn_V2 = mkV2 (mkV "adjourn" "adjourns" "adjourned" "adjourned" "adjourning");
lin adjournment_N = mkN "adjournment" "adjournments";
lin adjudge_V2 = mkV2 (mkV "adjudge" "adjudges" "adjudged" "adjudged" "adjudging");
lin adjudicate_V = mkV "adjudicate" "adjudicates" "adjudicated" "adjudicated" "adjudicating";
lin adjudicate_V2 = mkV2 (mkV "adjudicate" "adjudicates" "adjudicated" "adjudicated" "adjudicating");
lin adjudication_N = mkN "adjudication" "adjudications";
lin adjudicative_A = mkA "adjudicative" ;
lin adjudicator_N = mkN "adjudicator" "adjudicators";
lin adjunct_A = mkA "adjunct" ;
lin adjunct_N = mkN "adjunct" "adjuncts";
lin adjunctive_A = mkA "adjunctive" ;
lin adjuration_N = mkN "adjuration" "adjurations";
lin adjuratory_A = mkA "adjuratory" ;
lin adjure_V2 = mkV2 (mkV "adjure" "adjures" "adjured" "adjured" "adjuring");
lin adjust_V = mkV "adjust";
lin adjust_V2 = mkV2 (mkV "adjust" "adjusts" "adjusted" "adjusted" "adjusting");
lin adjust_V2V = mkV2V (mkV "adjust") noPrep to_Prep ;
lin adjustable_A = compoundA (mkA "adjustable");
lin adjuster_N = mkN "adjuster" "adjusters";
lin adjustive_A = mkA "adjustive" ;
lin adjustment_N = mkN "adjustment" "adjustments";
lin adjutant_N = mkN "adjutant" "adjutants";
lin adjuvant_A = mkA "adjuvant" ;
lin adjuvant_N = mkN "adjuvant" ;
lin admass_N = mkN "admass" ;
lin administer_V = mkV "administer" "administers" "administered" "administered" "administering";
lin administer_V2 = mkV2 (mkV "administer" "administers" "administered" "administered" "administering");
lin administrable_A = mkA "administrable" ;
lin administration_N = mkN "administration" "administrations";
lin administrative_A = compoundA (mkA "administrative");
lin administratorFem_N = mkN feminine (mkN "administrator" "administrators");
lin administratorMasc_N = mkN masculine (mkN "administrator" "administrators");
lin administrivia_N = mkN "administrivia" ;
lin admirability_N = mkN "admirability" ;
lin admirable_A = compoundA (mkA "admirable");
lin admiral_N = mkN human (mkN "admiral" "admirals");
lin admiralty_N = mkN "admiralty" "admiralties";
lin admiration_N = mkN "admiration" ;
lin admire_V2 = mkV2 (mkV "admire" "admires" "admired" "admired" "admiring");
lin admirer_N = mkN "admirer" "admirers";
lin admiringly_Adv = mkAdv "admiringly" ;
lin admissibility_N = mkN "admissibility" ;
lin admissible_A = compoundA (mkA "admissible");
lin admission_N = mkN "admission" "admissions";
lin admissive_A = mkA "admissive" ;
lin admit_V = mkV "admit" "admits" "admitted" "admitted" "admitting";
lin admit_V2 = mkV2 (mkV "admit" "admits" "admitted" "admitted" "admitting");
lin admit_VS = mkVS (mkV "admit" "admits" "admitted" "admitted" "admitting");
lin admittable_A = mkA "admittable" ;
lin admittance_N = mkN "admittance" ;
lin admittedly_Adv = mkAdv "admittedly";
lin admix_V = mkV "admix" "admixes" "admixed" "admixed" "admixing";
lin admix_V2 = mkV2 (mkV "admix" "admixes" "admixed" "admixed" "admixing");
lin admixture_N = mkN "admixture" "admixtures";
lin admonish_V2 = mkV2 (mkV "admonish" "admonishes" "admonished" "admonished" "admonishing");
lin admonisher_N = mkN "admonisher" ;
lin admonition_N = mkN "admonition" "admonitions";
lin admonitory_A = compoundA (mkA "admonitory");
lin adnate_A = mkA "adnate" ;
lin adnexa_N = mkN "adnexa" ;
lin adnexal_A = mkA "adnexal" ;
lin adnoun_N = mkN "adnoun" ;
lin ado_N = mkN "ado" ;
lin adobe_N = mkN "adobe" ;
lin adobo_N = mkN "adobo" ;
lin adolescence_N = mkN "adolescence" ;
lin adolescent_A = compoundA (mkA "adolescent");
lin adolescent_N = mkN "adolescent" "adolescents";
lin adonis_N = mkN "adonis" ;
lin adopt_V2 = mkV2 (mkV "adopt" "adopts" "adopted" "adopted" "adopting");
lin adoptable_A = mkA "adoptable" ;
lin adoptee_N = mkN "adoptee" ;
lin adoption_N = mkN "adoption" "adoptions";
lin adoptive_A = compoundA (mkA "adoptive");
lin adorability_N = mkN "adorability" ;
lin adorable_A = compoundA (mkA "adorable");
lin adoration_N = mkN "adoration" ;
lin adore_V2 = mkV2 (mkV "adore" "adores" "adored" "adored" "adoring");
lin adorer_N = mkN "adorer" "adorers";
lin adoring_A = compoundA (mkA "adoring");
lin adorn_V2 = mkV2 (mkV "adorn" "adorns" "adorned" "adorned" "adorning");
lin adornment_N = mkN "adornment" "adornments";
lin adoxography_N = mkN "adoxography" ;
lin adrenal_A = compoundA (mkA "adrenal");
lin adrenalectomy_N = mkN "adrenalectomy" ;
lin adrenalin_N = mkN "adrenalin" ;
lin adrenarche_N = mkN "adrenarche" ;
lin adrenergic_A = mkA "adrenergic" ;
lin adrenergic_N = mkN "adrenergic" ;
lin adrenocortical_A = mkA "adrenocortical" ;
lin adrenocorticotropic_A = mkA "adrenocorticotropic" ;
lin adrenosterone_N = mkN "adrenosterone" ;
lin adrian_PN = mkPN "Adrian";
lin adrift_A = compoundA (mkA "adrift");
lin adrift_Adv = mkAdv "adrift";
lin adroit_A = compoundA (mkA "adroit");
lin adroitness_N = mkN "adroitness" ;
lin adscititious_A = mkA "adscititious" ;
lin adscript_A = mkA "adscript" ;
lin adsorbable_A = mkA "adsorbable" ;
lin adsorbate_N = mkN "adsorbate" ;
lin adsorbent_A = mkA "adsorbent" ;
lin adsorbent_N = mkN "adsorbent" ;
lin adsorption_N = mkN "adsorption" ;
lin adulation_N = mkN "adulation" ;
lin adulatory_A = mkA "adulatory" ;
lin adult_A = compoundA (mkA "adult");
lin adult_N = mkN "adult" "adults";
lin adulterant_N = mkN "adulterant" "adulterants";
lin adulterate_A = mkA "adulterate" ;
lin adulterate_V2 = mkV2 (mkV "adulterate" "adulterates" "adulterated" "adulterated" "adulterating");
lin adulterating_A = mkA "adulterating" ;
lin adulteration_N = mkN "adulteration" "adulterations";
lin adulterator_N = mkN "adulterator" ;
lin adulterer_N = mkN "adulterer" "adulterers";
lin adulteress_N = mkN "adulteress" "adulteresses";
lin adulterine_A = mkA "adulterine" ;
lin adulterous_A = compoundA (mkA "adulterous");
lin adultery_N = mkN "adultery" "adulteries";
lin adulthood_N = mkN "adulthood" "adulthoods";
lin adumbrate_V2 = mkV2 (mkV "adumbrate" "adumbrates" "adumbrated" "adumbrated" "adumbrating");
lin adumbration_N = mkN "adumbration" ;
lin adumbrative_A = mkA "adumbrative" ;
lin adust_A = mkA "adust" ;
lin advance_N = mkN "advance" "advances";
lin advance_V = mkV "advance" "advances" "advanced" "advanced" "advancing";
lin advance_V2 = mkV2 (mkV "advance" "advances" "advanced" "advanced" "advancing");
lin advancement_N = mkN "advancement" ;
lin advancer_N = mkN "advancer" ;
lin advantage_N = mkN "advantage" "advantages";
lin advantage_V2 = mkV2 (mkV "advantage" "advantages" "advantaged" "advantaged" "advantaging");
lin advantageous_A = compoundA (mkA "advantageous");
lin advection_N = mkN "advection" ;
lin advective_A = mkA "advective" ;
lin advent_N = mkN "advent" "advents";
lin adventistMasc_N = mkN masculine (mkN "adventist" "adventists");
lin adventistFem_N = mkN feminine (mkN "adventist" "adventists");
lin adventitial_A = mkA "adventitial" ;
lin adventitious_A = compoundA (mkA "adventitious");
lin adventive_A = mkA "adventive" ;
lin adventure_N = mkN "adventure" "adventures";
lin adventure_V2 = mkV2 (mkV "adventure" "adventures" "adventured" "adventured" "adventuring");
lin adventurer_N = mkN "adventurer" "adventurers";
lin adventuresome_A = compoundA (mkA "adventuresome");
lin adventuress_N = mkN "adventuress" "adventuresses";
lin adventurism_N = mkN "adventurism" ;
lin adventuristic_A = mkA "adventuristic" ;
lin adventurous_A = compoundA (mkA "adventurous");
lin adventurousness_N = mkN "adventurousness" ;
lin adverb_N = mkN "adverb" "adverbs";
lin adverbial_A = compoundA (mkA "adverbial");
lin adverbial_N = mkN "adverbial" ;
lin adversary_N = mkN "adversary" "adversaries";
lin adversative_A = mkA "adversative" ;
lin adverse_A = compoundA (mkA "adverse");
lin adversity_N = mkN "adversity" "adversities";
lin advert_N = mkN "advert" "adverts";
lin advert_V = mkV "advert" "adverts" "adverted" "adverted" "adverting";
lin advertence_N = mkN "advertence" ;
lin advertent_A = mkA "advertent" ;
lin advertise_V = mkV "advertise" "advertises" "advertised" "advertised" "advertising";
lin advertise_V2 = mkV2 (mkV "advertise" "advertises" "advertised" "advertised" "advertising");
lin advertisement_N = mkN "advertisement" "advertisements";
lin advertiser_N = mkN "advertiser" "advertisers";
lin advertising_N = mkN "advertising" ;
lin advertorial_N = mkN "advertorial" ;
lin advice_N = mkN "advice" "advices";
lin advisability_N = mkN "advisability" ;
lin advisable_A = compoundA (mkA "advisable");
lin advise_V = mkV "advise" "advises" "advised" "advised" "advising";
lin advise_V2 = mkV2 (mkV "advise" "advises" "advised" "advised" "advising");
lin advise_VS = mkVS (mkV "advise" "advises" "advised" "advised" "advising");
lin advisee_N = mkN "advisee" ;
lin adviserMasc_N = mkN masculine (mkN "adviser" "advisers");
lin adviserFem_N = mkN feminine (mkN "adviser" "advisers");
lin advisory_A = compoundA (mkA "advisory");
lin advisory_N = mkN "advisory" ;
lin advocacy_N = mkN "advocacy" ;
lin advocateMasc_N = mkN masculine (mkN "advocate" "advocates");
lin advocateFem_N = mkN feminine (mkN "advocate" "advocates");
lin advocate_V2 = mkV2 (mkV "advocate" "advocates" "advocated" "advocated" "advocating");
lin advocate_VS = mkVS (mkV "advocate");
lin advowson_N = mkN "advowson" "advowsons";
lin adynamia_N = mkN "adynamia" ;
lin adynamic_A = mkA "adynamic" ;
lin adz_N = mkN "adz" "adzes";
lin adze_N = mkN "adze" "adzes";
lin aecial_A = mkA "aecial" ;
lin aeciospore_N = mkN "aeciospore" ;
lin aecium_N = mkN "aecium" ;
lin aegis_N = mkN "aegis" "aegises";
lin aeolotropic_A = mkA "aeolotropic" ;
lin aeon_N = mkN "aeon" "aeons";
lin aerate_V2 = mkV2 (mkV "aerate" "aerates" "aerated" "aerated" "aerating");
lin aeration_N = mkN "aeration" "aerations";
lin aerator_N = mkN "aerator" ;
lin aerial_A = compoundA (mkA "aerial");
lin aerial_N = mkN "aerial" "aerials";
lin aerialist_N = mkN "aerialist" ;
lin aerides_N = mkN "aerides" ;
lin aerie_N = mkN "aerie" "aeries";
lin aeriferous_A = mkA "aeriferous" ;
lin aeriform_A = mkA "aeriform" ;
lin aerobatics_N = mkN "aerobatics" "aerobatics";
lin aerobe_N = mkN "aerobe" ;
lin aerobic_A = mkA "aerobic" ;
lin aerobics_N = mkN "aerobics" ;
lin aerobiosis_N = mkN "aerobiosis" ;
lin aerobiotic_A = mkA "aerobiotic" ;
lin aerodontalgia_N = mkN "aerodontalgia" ;
lin aerodrome_N = mkN "aerodrome" "aerodromes";
lin aerodynamic_A = compoundA (mkA "aerodynamic");
lin aerodynamics_N = mkN "aerodynamics" "aerodynamics";
lin aerolite_N = mkN "aerolite" ;
lin aerolitic_A = mkA "aerolitic" ;
lin aerological_A = mkA "aerological" ;
lin aerology_N = mkN "aerology" ;
lin aeromechanic_A = mkA "aeromechanic" ;
lin aeromechanics_N = mkN "aeromechanics" ;
lin aeromedical_A = mkA "aeromedical" ;
lin aeromedicine_N = mkN "aeromedicine" ;
lin aeronaut_N = mkN human (mkN "aeronaut" "aeronauts");
lin aeronautical_A = mkA "aeronautical" ;
lin aeronautics_N = mkN "aeronautics" "aeronautics";
lin aerophagia_N = mkN "aerophagia" ;
lin aerophilatelic_A = mkA "aerophilatelic" ;
lin aerophilately_N = mkN "aerophilately" ;
lin aerophile_N = mkN "aerophile" ;
lin aeroplane_N = mkN "aeroplane" "aeroplanes";
lin aerosol_N = mkN "aerosol" "aerosols";
lin aerosolized_A = mkA "aerosolized" ;
lin aerospace_N = mkN "aerospace" ;
lin aertex_N = mkN "aertex" ;
lin aery_N = mkN "aery" "aeries";
lin aeschynanthus_N = mkN "aeschynanthus" ;
lin aesculapian_A = mkA "aesculapian" ;
lin aestheteMasc_N = mkN masculine (mkN "aesthete" "aesthetes");
lin aestheteFem_N = mkN feminine (mkN "aesthete" "aesthetes");
lin aesthetic_A = compoundA (mkA "aesthetic");
lin aesthetic_N = mkN "aesthetic" ;
lin aesthetical_A = compoundA (mkA "aesthetical");
lin aesthetics_N = mkN "aesthetics" "aesthetics";
lin aestival_A = mkA "aestival" ;
lin aether_N = mkN "aether" ;
lin aetiology_N = mkN "aetiology" "aetiologies";
lin afar_Adv = mkAdv "afar";
lin afebrile_A = mkA "afebrile" ;
lin affability_N = mkN "affability" ;
lin affable_A = compoundA (mkA "affable");
lin affair_N = mkN "affair" "affairs";
lin affairs_N = mkN "affairs" ;
lin affect_N = mkN "affect" ;
lin affect_V2 = mkV2 (mkV "affect" "affects" "affected" "affected" "affecting");
lin affectation_N = mkN "affectation" "affectations";
lin affectedly_Adv = mkAdv "affectedly" ;
lin affectedness_N = mkN "affectedness" ;
lin affecting_A = mkA "affecting" ;
lin affection_N = mkN "affection" "affections";
lin affectional_A = mkA "affectional" ;
lin affectionate_A = compoundA (mkA "affectionate");
lin affectionateness_N = mkN "affectionateness" ;
lin affenpinscher_N = mkN "affenpinscher" ;
lin afferent_A = mkA "afferent" ;
lin affiance_V2 = mkV2 (mkV "affiance" "affiances" "affianced" "affianced" "affiancing");
lin affiant_N = mkN "affiant" ;
lin affidavit_N = mkN "affidavit" "affidavits";
lin affiliate_N = mkN human (mkN "affiliate");
lin affiliate_V = mkV "affiliate" "affiliates" "affiliated" "affiliated" "affiliating";
lin affiliate_V2 = mkV2 (mkV "affiliate" "affiliates" "affiliated" "affiliated" "affiliating");
lin affiliation_N = mkN "affiliation" "affiliations";
lin affinal_A = mkA "affinal" ;
lin affine_A = mkA "affine" ;
lin affine_N = mkN "affine" ;
lin affined_A = mkA "affined" ;
lin affinity_N = mkN "affinity" "affinities";
lin affirm_V = mkV "affirm" "affirms" "affirmed" "affirmed" "affirming";
lin affirm_V2 = mkV2 (mkV "affirm" "affirms" "affirmed" "affirmed" "affirming");
lin affirm_VS = mkVS (mkV "affirm" "affirms" "affirmed" "affirmed" "affirming");
lin affirmable_A = mkA "affirmable" ;
lin affirmation_N = mkN "affirmation" "affirmations";
lin affirmative_A = compoundA (mkA "affirmative");
lin affirmative_N = mkN "affirmative" "affirmatives";
lin affirmativeness_N = mkN "affirmativeness" ;
lin affix_N = mkN "affix" "affixes";
lin affix_V2 = mkV2 (mkV "affix" "affixes" "affixed" "affixed" "affixing");
lin affixal_A = mkA "affixal" ;
lin affixation_N = mkN "affixation" ;
lin afflatus_N = mkN "afflatus" ;
lin afflict_V2 = mkV2 (mkV "afflict" "afflicts" "afflicted" "afflicted" "afflicting");
lin affliction_N = mkN "affliction" "afflictions";
lin afflictive_A = mkA "afflictive" ;
lin affluence_N = mkN "affluence" ;
lin affluent_A = compoundA (mkA "affluent");
lin affluent_N = mkN "affluent" "affluents";
lin afford_V2 = mkV2 (mkV "afford" "affords" "afforded" "afforded" "affording");
lin afford_V2V = mkV2V (mkV "afford") noPrep to_Prep ;
lin afforest_V2 = mkV2 (mkV "afforest" "afforests" "afforested" "afforested" "afforesting");
lin afforestation_N = mkN "afforestation" "afforestations";
lin affranchise_V2 = mkV2 (mkV "affranchise" "affranchises" "affranchised" "affranchised" "affranchising");
lin affray_N = mkN "affray" "affrays";
lin affricate_N = mkN "affricate" ;
lin affrication_N = mkN "affrication" ;
lin affront_N = mkN "affront" "affronts";
lin affront_V2 = mkV2 (mkV "affront" "affronts" "affronted" "affronted" "affronting");
lin affusion_N = mkN "affusion" ;
lin afghan_A = compoundA (mkA "Afghan");
lin afghanMasc_N = mkN masculine (mkN "Afghan" "Afghans");
lin afghanFem_N = mkN feminine (mkN "Afghan" "Afghans");
lin afghani_N = mkN "Afghani" ;
lin afghanistan_PN = mkPN "Afghanistan";
lin afghanistaniFem_N = mkN feminine (mkN "afghanistani" "afghanistanis");
lin afghanistaniMasc_N = mkN masculine (mkN "afghanistani" "afghanistanis");
lin afghanistani_A = compoundA (mkA "afghanistani");
lin afibrinogenemia_N = mkN "afibrinogenemia" ;
lin aficionado_N = mkN "aficionado" ;
lin afield_Adv = mkAdv "afield";
lin afire_A = compoundA (mkA "afire");
lin aflame_A = compoundA (mkA "aflame");
lin aflare_A = mkA "aflare" ;
lin aflatoxin_N = mkN "aflatoxin" ;
lin afloat_A = compoundA (mkA "afloat");
lin aflutter_A = mkA "aflutter" ;
lin afoot_A = compoundA (mkA "afoot");
lin afoot_Adv = mkAdv "afoot" ;
lin afore_Adv = mkAdv "afore";
lin afore_Prep = mkPrep "afore";
lin aforesaid_A = compoundA (mkA "aforesaid");
lin aforethought_Adv = mkAdv "aforethought";
lin afoul_Adv = mkAdv "afoul";
lin afraid_A = compoundA (mkA "afraid");
lin afresh_Adv = mkAdv "afresh";
lin africa_PN = mkPN "Africa";
lin africanFem_N = mkN feminine (mkN "African" "Africans");
lin africanMasc_N = mkN masculine (mkN "African" "Africans");
lin african_A = compoundA (mkA "African");
lin afrikaans_N = mkN "Afrikaans" ;
lin afrikaner_A = compoundA (mkA "Afrikaner");
lin afrikanerFem_N = mkN feminine (mkN "Afrikaner" "Afrikaners");
lin afrikanerMasc_N = mkN masculine (mkN "Afrikaner" "Afrikaners");
lin afro_americanFem_N = mkN feminine (mkN "Afro-American" "Afro-Americans");
lin afro_americanMasc_N = mkN masculine (mkN "Afro-American" "Afro-Americans");
lin afro_asian_A = compoundA (mkA "Afro-Asian");
lin afro_wig_N = mkN "afro-wig" "afro-wigs";
lin afropavo_N = mkN "afropavo" ;
lin aft_Adv = mkAdv "aft";
lin after_A = compoundA (mkA "after");
lin after_Adv = mkAdv "after";
lin after_Prep = mkPrep "after";
lin after_Subj = mkSubj "after";
lin afterbirth_N = mkN "afterbirth" ;
lin afterburner_N = mkN "afterburner" ;
lin aftercare_N = mkN "aftercare" ;
lin afterdamp_N = mkN "afterdamp" ;
lin afterdeck_N = mkN "afterdeck" ;
lin aftereffect_N = mkN "aftereffect" "aftereffects";
lin afterglow_N = mkN "afterglow";
lin afterimage_N = mkN "afterimage" ;
lin afterlife_N = mkN "afterlife" ;
lin aftermath_N = mkN "aftermath";
lin aftermost_A = mkA "aftermost" ;
lin afternoon_N = mkN "afternoon" "afternoons";
lin afterpains_N = mkN "afterpains" ;
lin afterpiece_N = mkN "afterpiece" ;
lin aftershaft_N = mkN "aftershaft" ;
lin aftershafted_A = mkA "aftershafted" ;
lin aftershock_N = mkN "aftershock" ;
lin aftertaste_N = mkN "aftertaste" ;
lin afterthought_N = mkN "afterthought" "afterthoughts";
lin afterwards_Adv = mkAdv "afterwards";
lin afterworld_N = mkN "afterworld" ;
lin again_Adv = mkAdv "again";
lin against_Prep = mkPrep "against";
lin agal_N = mkN "agal" ;
lin agalactia_N = mkN "agalactia" ;
lin agama_N = mkN "agama" ;
lin agamete_N = mkN "agamete" ;
lin agamic_A = mkA "agamic" ;
lin agamid_N = mkN "agamid" ;
lin agammaglobulinemia_N = mkN "agammaglobulinemia" ;
lin agapanthus_N = mkN "agapanthus" ;
lin agape_A = compoundA (mkA "agape");
lin agape_N = mkN "agape" ;
lin agar_N = mkN "agar" ;
lin agar_agar_N = mkN "agar-agar" ;
lin agaric_N = mkN "agaric" ;
lin agate_N = mkN "agate" "agates";
lin agateware_N = mkN "agateware" ;
lin agatha_PN = mkPN "Agatha";
lin agave_N = mkN "agave" "agaves";
lin agaze_A = mkA "agaze" ;
lin age_N = mkN "age" "ages";
lin age_V = mkV "age" "ages" "aged" "aged" "aging";
lin age_V2 = mkV2 (mkV "age" "ages" "aged" "aged" "aging");
lin age_bracket_N = mkN "age-bracket" "age-brackets";
lin age_group_N = mkN "age-group" "age-groups";
lin age_long_A = compoundA (mkA "age-long");
lin age_old_A = compoundA (mkA "age-old");
lin aged_N = mkN "aged" ;
lin agedness_N = mkN "agedness" ;
lin ageing_N = mkN "ageing" ;
lin ageism_N = mkN "ageism" ;
lin ageless_A = compoundA (mkA "ageless");
lin agelessness_N = mkN "agelessness" ;
lin agelong_A = mkA "agelong" ;
lin agency_N = mkN "agency" "agencies";
lin agenda_N = mkN "agenda" "agendas";
lin agenesis_N = mkN "agenesis" ;
lin agentMasc_N = mkN masculine (mkN "agent" "agents");
lin agentFem_N = mkN feminine (mkN "agent" "agents");
lin agent_provocateur_N = mkN "agent provocateur" "agents provocateurs";
lin agential_A = mkA "agential" ;
lin agerasia_N = mkN "agerasia" ;
lin ageratum_N = mkN "ageratum" ;
lin aggie_PN = mkPN "Aggie";
lin agglomerate_A = compoundA (mkA "agglomerate");
lin agglomerate_N = mkN "agglomerate" ;
lin agglomerate_V = mkV "agglomerate" "agglomerates" "agglomerated" "agglomerated" "agglomerating";
lin agglomerate_V2 = mkV2 (mkV "agglomerate" "agglomerates" "agglomerated" "agglomerated" "agglomerating");
lin agglomeration_N = mkN "agglomeration" "agglomerations";
lin agglomerator_N = mkN "agglomerator" ;
lin agglutinate_A = mkA "agglutinate" ;
lin agglutinate_V2 = mkV2 (mkV "agglutinate" "agglutinates" "agglutinated" "agglutinated" "agglutinating");
lin agglutination_N = mkN "agglutination" ;
lin agglutinative_A = compoundA (mkA "agglutinative");
lin agglutinin_N = mkN "agglutinin" ;
lin agglutinogen_N = mkN "agglutinogen" ;
lin aggrandize_V2 = mkV2 (mkV "aggrandize" "aggrandizes" "aggrandized" "aggrandized" "aggrandizing");
lin aggrandizement_N = mkN "aggrandizement" "aggrandizements";
lin aggravate_V2 = mkV2 (mkV "aggravate" "aggravates" "aggravated" "aggravated" "aggravating");
lin aggravating_A = mkA "aggravating" ;
lin aggravation_N = mkN "aggravation" "aggravations";
lin aggravator_N = mkN "aggravator" ;
lin aggregate_A = mkA "aggregate" ;
lin aggregate_N = mkN "aggregate" "aggregates";
lin aggregate_V = mkV "aggregate" "aggregates" "aggregated" "aggregated" "aggregating";
lin aggregate_V2 = mkV2 (mkV "aggregate" "aggregates" "aggregated" "aggregated" "aggregating");
lin aggregation_N = mkN "aggregation" "aggregations";
lin aggression_N = mkN "aggression" "aggressions";
lin aggressive_A = compoundA (mkA "aggressive");
lin aggressiveness_N = mkN "aggressiveness" ;
lin aggressorMasc_N = mkN masculine (mkN "aggressor" "aggressors");
lin aggressorFem_N = mkN feminine (mkN "aggressor" "aggressors");
lin aggrieve_V2 = mkV2 (mkV "aggrieve" "aggrieves" "aggrieved" "aggrieved" "aggrieving");
lin aggro_N = mkN "aggro" ;
lin aghast_A = compoundA (mkA "aghast");
lin agile_A = compoundA (mkA "agile");
lin agility_N = mkN "agility" ;
lin agin_Prep = mkPrep "agin";
lin aging_N = mkN "aging" ;
lin agio_N = mkN "agio" ;
lin agitate_V = mkV "agitate" "agitates" "agitated" "agitated" "agitating";
lin agitate_V2 = mkV2 (mkV "agitate" "agitates" "agitated" "agitated" "agitating");
lin agitation_N = mkN "agitation" "agitations";
lin agitative_A = mkA "agitative" ;
lin agitator_N = mkN "agitator" "agitators";
lin agitprop_N = mkN "agitprop" ;
lin agleam_A = mkA "agleam" ;
lin aglet_N = mkN "aglet" ;
lin aglow_A = compoundA (mkA "aglow");
lin agm_N = mkN "agm" ;
lin agnail_N = mkN "agnail" ;
lin agnate_A = mkA "agnate" ;
lin agnate_N = mkN "agnate" ;
lin agnes_PN = mkPN "Agnes";
lin agnomen_N = mkN "agnomen" ;
lin agnosia_N = mkN "agnosia" ;
lin agnostic_A = compoundA (mkA "agnostic");
lin agnostic_N = mkN human (mkN "agnostic" "agnostics");
lin agnosticism_N = mkN "agnosticism" ;
lin ago_Adv = mkAdv "ago";
lin ago_Prep = mkPost "ago";
lin agog_A = compoundA (mkA "agog");
lin agon_N = mkN "agon" ;
lin agonadal_A = mkA "agonadal" ;
lin agonal_A = mkA "agonal" ;
lin agonist_N = mkN "agonist" ;
lin agonistic_A = mkA "agonistic" ;
lin agonize_V = mkV "agonize";
lin agonized_A = mkA "agonized" ;
lin agonizingly_Adv = mkAdv "agonizingly" ;
lin agony_N = mkN "agony" "agonies";
lin agora_N = mkN "agora" "agoras";
lin agoraphobia_N = mkN "agoraphobia" ;
lin agoraphobic_A = mkA "agoraphobic" ;
lin agouti_N = mkN "agouti" ;
lin agra_PN = mkPN "Agra";
lin agranulocytic_A = mkA "agranulocytic" ;
lin agranulocytosis_N = mkN "agranulocytosis" ;
lin agrapha_N = mkN "agrapha" ;
lin agraphia_N = mkN "agraphia" ;
lin agraphic_A = mkA "agraphic" ;
lin agrarian_A = compoundA (mkA "agrarian");
lin agree_V = mkV "agree";
lin agree_V2 = mkV2 (mkV "agree");
lin agree_VS = mkVS (mkV "agree");
lin agree_VV = mkVV (mkV "agree");
lin agreeable_A = compoundA (mkA "agreeable");
lin agreeableness_N = mkN "agreeableness" ;
lin agreement_N = mkN "agreement" "agreements";
lin agrestic_A = mkA "agrestic" ;
lin agribusiness_N = mkN "agribusiness" ;
lin agricultural_A = compoundA (mkA "agricultural");
lin agriculture_N = mkN "agriculture" ;
lin agriculturist_N = mkN "agriculturist" ;
lin agrimonia_N = mkN "agrimonia" ;
lin agrobiologic_A = mkA "agrobiologic" ;
lin agrobiology_N = mkN "agrobiology" ;
lin agrologic_A = mkA "agrologic" ;
lin agrology_N = mkN "agrology" ;
lin agromania_N = mkN "agromania" ;
lin agronomic_A = mkA "agronomic" ;
lin agronomist_N = mkN "agronomist" ;
lin agronomy_N = mkN "agronomy" ;
lin aground_A = compoundA (mkA "aground");
lin aground_Adv = mkAdv "aground";
lin agrypnia_N = mkN "agrypnia" ;
lin agrypnotic_A = mkA "agrypnotic" ;
lin agua_N = mkN "agua" ;
lin ague_N = mkN "ague" "agues";
lin agueweed_N = mkN "agueweed" ;
lin aguish_A = mkA "aguish" ;
lin ah_Interj = ss "ah";
lin ahead_Adv = mkAdv "ahead";
lin ahimsa_N = mkN "ahimsa" ;
lin ahistorical_A = mkA "ahistorical" ;
lin ahmedabad_PN = mkPN "Ahmedabad";
lin aid_N = mkN "aid" "aids";
lin aid_V = mkV "aid";
lin aid_V2 = mkV2 (mkV "aid" "aids" "aided" "aided" "aiding");
lin aide_N = mkN "aide" ;
lin aide_de_camp_N = mkN "aide-de-camp";
lin aide_memoire_N = mkN "aide-mémoire" "aide-mémoires";
lin aids_N = mkN "aids" ;
lin aigret_N = mkN "aigret" "aigrets";
lin aigrette_N = mkN "aigrette" "aigrettes";
lin aikido_N = mkN "aikido" ;
lin ail_V = mkV "ail" "ails" "ailed" "ailed" "ailing";
lin ail_V2 = mkV2 (mkV "ail" "ails" "ailed" "ailed" "ailing");
lin ailanthus_N = mkN "ailanthus" ;
lin aileron_N = mkN "aileron" "ailerons";
lin ailment_N = mkN "ailment" "ailments";
lin ailurophobia_N = mkN "ailurophobia" ;
lin aim_N = mkN "aim" "aims";
lin aim_V = mkV "aim" "aims" "aimed" "aimed" "aiming";
lin aim_V2 = mkV2 (mkV "aim" "aims" "aimed" "aimed" "aiming");
lin aim_VV = mkVV (mkV "aim" "aims" "aimed" "aimed" "aiming");
lin aimless_A = compoundA (mkA "aimless");
lin aioli_N = mkN "aioli" ;
lin air_N = mkN "air" "airs";
lin air_V = mkV "air";
lin air_V2 = mkV2 (mkV "air" "airs" "aired" "aired" "airing");
lin air_bladder_N = mkN "air-bladder" "air-bladders";
lin air_conditioned_A = compoundA (mkA "air-conditioned");
lin air_conditioning_N = mkN "air-conditioning" ;
lin air_cooled_A = compoundA (mkA "air-cooled");
lin air_minded_A = compoundA (mkA "air-minded");
lin air_pump_N = mkN "air-pump" "air-pumps";
lin air_raid_N = mkN "air-raid" "air-raids";
lin air_shaft_N = mkN "air-shaft" "air-shafts";
lin air_sick_A = compoundA (mkA "air-sick");
lin air_sickness_N = mkN "air-sickness" ;
lin air_to_air_A = compoundA (mkA "air-to-air");
lin air_to_ground_A = compoundA (mkA "air-to-ground");
lin airbed_N = mkN "airbed" "airbeds";
lin airborne_A = compoundA (mkA "airborne");
lin airbrake_N = mkN "airbrake" "airbrakes";
lin airbrush_N = mkN "airbrush" ;
lin airburst_N = mkN "airburst" ;
lin airbus_N = mkN "airbus" ;
lin aircraft_N = mkN "aircraft" "aircraft";
lin aircraftman_N = mkN masculine (mkN "aircraftman" "aircraftmen");
lin aircraftsman_N = mkN masculine (mkN "aircraftsman");
lin aircrew_N = mkN "aircrew" "aircrews";
lin aircrewman_N = mkN masculine (mkN "aircrewman");
lin airdock_N = mkN "airdock" ;
lin airdrie_PN = mkPN "Airdrie";
lin airdrome_N = mkN "airdrome" "airdromes";
lin airdrop_N = mkN "airdrop" ;
lin aireborough_PN = mkPN "Aireborough";
lin airedale_N = mkN "airedale" "airedales";
lin airfare_N = mkN "airfare" ;
lin airfield_N = mkN "airfield" "airfields";
lin airflow_N = mkN "airflow" "airflows";
lin airfoil_N = mkN "airfoil" ;
lin airforce_N = mkN "airforce";
lin airframe_N = mkN "airframe" "airframes";
lin airhead_N = mkN "airhead" ;
lin airheaded_A = mkA "airheaded" ;
lin airiness_N = mkN "airiness" ;
lin airing_N = mkN "airing" "airings";
lin airing_cupboard_N = mkN "airing-cupboard" "airing-cupboards";
lin airless_A = compoundA (mkA "airless");
lin airlift_N = mkN "airlift" ;
lin airline_N = mkN "airline" "airlines";
lin airliner_N = mkN "airliner" "airliners";
lin airlock_N = mkN "airlock" ;
lin airmail_N = mkN "airmail" ;
lin airmailer_N = mkN "airmailer" ;
lin airman_N = mkN masculine (mkN "airman" "airmen");
lin airplane_N = mkN "airplane" "airplanes";
lin airport_N = mkN "airport" "airports";
lin airs_N = mkN "airs" ;
lin airscrew_N = mkN "airscrew" "airscrews";
lin airship_N = mkN "airship" "airships";
lin airsick_A = mkA "airsick" ;
lin airsickness_N = mkN "airsickness" ;
lin airspace_N = mkN "airspace" ;
lin airspeed_N = mkN "airspeed" ;
lin airstream_N = mkN "airstream" ;
lin airstrip_N = mkN "airstrip" "airstrips";
lin airtight_A = compoundA (mkA "airtight");
lin airway_N = mkN "airway" "airways";
lin airwoman_N = mkN feminine (mkN "airwoman" "airwomen");
lin airworthiness_N = mkN "airworthiness" ;
lin airworthy_A = compoundA (mkA "airworthy");
lin airy_A = compoundA (mkA "airy");
lin aisle_N = mkN "aisle" "aisles";
lin aitch_N = mkN "aitch" "aitches";
lin aitch_bone_N = mkN "aitch-bone" "aitch-bones";
lin aitchbone_N = mkN "aitchbone" ;
lin ajar_A = compoundA (mkA "ajar");
lin aka_Prep = mkPrep "a/k/a";
lin akaryocyte_N = mkN "akaryocyte" ;
lin akee_N = mkN "akee" ;
lin akimbo_Adv = mkAdv "akimbo";
lin akin_A = compoundA (mkA "akin");
lin akinesis_N = mkN "akinesis" ;
lin akron_PN = mkPN "Akron";
lin al_PN = mkPN "Al";
lin ala_N = mkN "ala" ;
lin alabama_PN = mkPN "Alabama";
lin alabaster_A = compoundA (mkA "alabaster");
lin alabaster_N = mkN "alabaster" ;
lin alacritous_A = mkA "alacritous" ;
lin alacrity_N = mkN "alacrity" ;
lin alalia_N = mkN "alalia" ;
lin alan_PN = mkPN "Alan";
lin alanine_N = mkN "alanine" ;
lin alar_A = mkA "alar" ;
lin alarm_N = mkN "alarm" "alarms";
lin alarm_V2 = mkV2 (mkV "alarm" "alarms" "alarmed" "alarmed" "alarming");
lin alarm_clock_N = mkN "alarm-clock" "alarm-clocks";
lin alarming_A = compoundA (mkA "alarming");
lin alarmism_N = mkN "alarmism" ;
lin alarmist_N = mkN "alarmist" "alarmists";
lin alas_Interj = ss "alas";
lin alaska_PN = mkPN "Alaska";
lin alastrim_N = mkN "alastrim" ;
lin alate_A = mkA "alate" ;
lin alb_N = mkN "alb" "albs";
lin albacore_N = mkN "albacore" ;
lin albania_PN = mkPN "Albania";
lin albanian_A = compoundA (mkA "Albanian");
lin albanian_N = mkN "Albanian" "Albanians";
lin albatross_N = mkN "albatross" "albatrosses";
lin albedo_N = mkN "albedo" ;
lin albeit_Subj = mkSubj "albeit";
lin albert_PN = mkPN "Albert";
lin alberta_PN = mkPN "Alberta";
lin albescent_A = mkA "albescent" ;
lin albinal_A = mkA "albinal" ;
lin albinism_N = mkN "albinism" ;
lin albino_N = mkN "albino" "albinos";
lin albite_N = mkN "albite" ;
lin albitic_A = mkA "albitic" ;
lin albizzia_N = mkN "albizzia" ;
lin albuca_N = mkN "albuca" ;
lin albuginea_N = mkN "albuginea" ;
lin album_N = mkN "album" "albums";
lin albumen_N = mkN "albumen" ;
lin albumin_N = mkN "albumin" ;
lin albuminous_A = mkA "albuminous" ;
lin albuminuria_N = mkN "albuminuria" ;
lin albuminuric_A = mkA "albuminuric" ;
lin albuterol_N = mkN "albuterol" ;
lin alcalde_N = mkN "alcalde" ;
lin alcazar_N = mkN "alcazar" ;
lin alchemic_A = mkA "alchemic" ;
lin alchemist_N = mkN human (mkN "alchemist" "alchemists");
lin alchemistic_A = mkA "alchemistic" ;
lin alchemy_N = mkN "alchemy" ;
lin alcohol_N = mkN "alcohol" "alcohols";
lin alcoholic_A = compoundA (mkA "alcoholic");
lin alcoholic_N = mkN human (mkN "alcoholic" "alcoholics");
lin alcoholism_N = mkN "alcoholism" ;
lin alcove_N = mkN "alcove" "alcoves";
lin aldehyde_N = mkN "aldehyde" ;
lin aldehydic_A = mkA "aldehydic" ;
lin alder_N = mkN "alder" "alders";
lin alderfly_N = mkN "alderfly" ;
lin alderman_N = mkN masculine (mkN "alderman" "aldermen");
lin aldermanic_A = compoundA (mkA "aldermanic");
lin aldershot_PN = mkPN "Aldershot";
lin aldohexose_N = mkN "aldohexose" ;
lin aldol_N = mkN "aldol" ;
lin aldose_N = mkN "aldose" ;
lin aldosterone_N = mkN "aldosterone" ;
lin aldosteronism_N = mkN "aldosteronism" ;
lin ale_N = mkN "ale" "ales";
lin ale_house_N = mkN "ale-house" "ale-houses";
lin aleatory_A = mkA "aleatory" ;
lin alee_A = compoundA (mkA "alee");
lin alee_Adv = mkAdv "alee";
lin alehouse_N = mkN "alehouse" ;
lin alembic_N = mkN "alembic" ;
lin alendronate_N = mkN "alendronate" ;
lin aleph_N = mkN "aleph" ;
lin aleppo_PN = mkPN "Aleppo";
lin alert_A = compoundA (mkA "alert");
lin alert_N = mkN "alert" "alerts";
lin alert_V2 = mkV2 (mkV "alert" "alerts" "alerted" "alerted" "alerting");
lin alertness_N = mkN "alertness" ;
lin alessandria_PN = mkPN "Alessandria";
lin aleurone_N = mkN "aleurone" ;
lin aleuronic_A = mkA "aleuronic" ;
lin alewife_N = mkN "alewife" ;
lin alex_PN = mkPN "Alex";
lin alexander_PN = mkPN "Alexander";
lin alexandra_PN = mkPN "Alexandra";
lin alexandria_PN = mkPN "Alexandria";
lin alexandrine_N = mkN "alexandrine" "alexandrines";
lin alexandrite_N = mkN "alexandrite" ;
lin alexia_N = mkN "alexia" ;
lin alexic_A = compoundA (mkA "alexic");
lin alexic_N = mkN "alexic" "alexics";
lin alf_PN = mkPN "Alf";
lin alfalfa_N = mkN "alfalfa" ;
lin alfred_PN = mkPN "Alfred";
lin alfresco_A = compoundA (mkA "alfresco");
lin alfresco_Adv = mkAdv "alfresco";
lin alfreton_PN = mkPN "Alfreton";
lin alga_N = mkN "alga" "algae" {- FIXME: guessed plural form -};
lin algal_A = mkA "algal" ;
lin algarroba_N = mkN "algarroba" ;
lin algebra_N = mkN "algebra" "algebras";
lin algebraic_A = compoundA (mkA "algebraic");
lin algebraical_A = compoundA (mkA "algebraical");
lin algebraist_N = mkN "algebraist" ;
lin alger_PN = mkPN "Alger";
lin algeria_PN = mkPN "Algeria";
lin algerian_A = compoundA (mkA "algerian");
lin algerian_N = mkN "algerian" "algerians";
lin algid_A = mkA "algid" ;
lin algidity_N = mkN "algidity" ;
lin algin_N = mkN "algin" ;
lin algoid_A = mkA "algoid" ;
lin algolagnia_N = mkN "algolagnia" ;
lin algolagnic_A = mkA "algolagnic" ;
lin algometer_N = mkN "algometer" ;
lin algometric_A = mkA "algometric" ;
lin algometry_N = mkN "algometry" ;
lin algophobia_N = mkN "algophobia" ;
lin algophobic_A = mkA "algophobic" ;
lin algorism_N = mkN "algorism" ;
lin algorithm_N = mkN "algorithm" ;
lin algorithmic_A = mkA "algorithmic" ;
lin ali_PN = mkPN "Ali";
lin alias_Adv = mkAdv "alias";
lin alias_N = mkN "alias" "aliases";
lin alibi_N = mkN "alibi" "alibis";
lin alicante_PN = mkPN "Alicante";
lin alice_PN = mkPN "Alice";
lin alidade_N = mkN "alidade" ;
lin alien_A = compoundA (mkA "alien");
lin alienFem_N = mkN feminine (mkN "alien" "aliens");
lin alienMasc_N = mkN masculine (mkN "alien" "aliens");
lin alienable_A = mkA "alienable" ;
lin alienage_N = mkN "alienage" ;
lin alienate_V2 = mkV2 (mkV "alienate" "alienates" "alienated" "alienated" "alienating");
lin alienating_A = mkA "alienating" ;
lin alienation_N = mkN "alienation" ;
lin alienator_N = mkN "alienator" ;
lin alienee_N = mkN "alienee" ;
lin alienism_N = mkN "alienism" ;
lin alienist_N = mkN "alienist" "alienists";
lin alienor_N = mkN "alienor" ;
lin alight_A = compoundA (mkA "alight");
lin alight_V = mkV "alight" "alights" "alighted" "alighted" "alighting";
lin align_V = mkV "align" "aligns" "aligned" "aligned" "aligning";
lin align_V2 = mkV2 (mkV "align" "aligns" "aligned" "aligned" "aligning");
lin alignment_N = mkN "alignment" "alignments";
lin alike_A = compoundA (mkA "alike");
lin alike_Adv = mkAdv "alike";
lin alimentary_A = compoundA (mkA "alimentary");
lin alimentative_A = mkA "alimentative" ;
lin alimony_N = mkN "alimony" ;
lin aliphatic_A = mkA "aliphatic" ;
lin aliquant_N = mkN "aliquant" ;
lin aliquot_A = mkA "aliquot" ;
lin aliquot_N = mkN "aliquot" ;
lin alison_PN = mkPN "Alison";
lin aliterate_N = mkN "aliterate" ;
lin alive_A = compoundA (mkA "alive");
lin aliyah_N = mkN "aliyah" ;
lin alizarin_N = mkN "alizarin" ;
lin alkahest_N = mkN "alkahest" ;
lin alkahestic_A = mkA "alkahestic" ;
lin alkalemia_N = mkN "alkalemia" ;
lin alkalescent_A = mkA "alkalescent" ;
lin alkali_N = mkN "alkali" "alkalis";
lin alkalimetry_N = mkN "alkalimetry" ;
lin alkaline_A = compoundA (mkA "alkaline");
lin alkalinity_N = mkN "alkalinity" ;
lin alkalinuria_N = mkN "alkalinuria" ;
lin alkaloid_N = mkN "alkaloid" ;
lin alkaloidal_A = mkA "alkaloidal" ;
lin alkalosis_N = mkN "alkalosis" ;
lin alkalotic_A = mkA "alkalotic" ;
lin alkapton_N = mkN "alkapton" ;
lin alkaptonuria_N = mkN "alkaptonuria" ;
lin alkene_N = mkN "alkene" ;
lin alkyd_N = mkN "alkyd" ;
lin alkyl_N = mkN "alkyl" ;
lin alkylbenzene_N = mkN "alkylbenzene" ;
lin alkylbenzenesulfonate_N = mkN "alkylbenzenesulfonate" ;
lin alkylic_A = mkA "alkylic" ;
lin all_A = mkA "all" ;
lin all_Predet = ss "all";
lin all_mains_A = compoundA (mkA "all-mains");
lin all_round_A = compoundA (mkA "all-round");
lin all_rounder_N = mkN "all-rounder" "all-rounders";
lin allah_PN = mkPN "Allah";
lin allahabad_PN = mkPN "Allahabad";
lin allamanda_N = mkN "allamanda" ;
lin allan_PN = mkPN "Allan";
lin allantoic_A = mkA "allantoic" ;
lin allantoid_A = mkA "allantoid" ;
lin allantois_N = mkN "allantois" ;
lin allargando_A = mkA "allargando" ;
lin allay_V2 = mkV2 (mkV "allay" "allays" "allayed" "allayed" "allaying");
lin allegation_N = mkN "allegation" "allegations";
lin allege_V2 = mkV2 (mkV "allege" "alleges" "alleged" "alleged" "alleging");
lin allege_V2V = mkV2V (mkV "allege") noPrep to_Prep ;
lin allege_VS = mkVS (mkV "allege");
lin allegedly_AdV = mkAdV "allegedly";
lin allegedly_AdA = mkAdA "allegedly";
lin allegiance_N = mkN "allegiance" ;
lin allegiant_A = mkA "allegiant" ;
lin allegoric_A = compoundA (mkA "allegoric");
lin allegorical_A = compoundA (mkA "allegorical");
lin allegorizer_N = mkN "allegorizer" ;
lin allegory_N = mkN "allegory" "allegories";
lin allegretto_A = compoundA (mkA "allegretto");
lin allegretto_Adv = mkAdv "allegretto";
lin allegretto_N = mkN "allegretto" "allegrettos";
lin allegro_A = compoundA (mkA "allegro");
lin allegro_Adv = mkAdv "allegro";
lin allegro_N = mkN "allegro" "allegros";
lin allele_N = mkN "allele" ;
lin allelic_A = mkA "allelic" ;
lin allemande_N = mkN "allemande" ;
lin allen_PN = mkPN "Allen";
lin allergen_N = mkN "allergen" "allergens";
lin allergenic_A = mkA "allergenic" ;
lin allergic_A = compoundA (mkA "allergic");
lin allergist_N = mkN "allergist" ;
lin allergology_N = mkN "allergology" ;
lin allergy_N = mkN "allergy" "allergies";
lin alleviate_V2 = mkV2 (mkV "alleviate" "alleviates" "alleviated" "alleviated" "alleviating");
lin alleviation_N = mkN "alleviation" "alleviations";
lin alleviative_A = mkA "alleviative" ;
lin alleviator_N = mkN "alleviator" ;
lin alley_N = mkN "alley" "alleys";
lin alleyway_N = mkN "alleyway" "alleyways";
lin alliaceous_A = mkA "alliaceous" ;
lin alliance_N = mkN "alliance" "alliances";
lin allies_N = mkN "allies" ;
lin alligator_N = mkN "alligator" "alligators";
lin alligatored_A = mkA "alligatored" ;
lin alligatorfish_N = mkN "alligatorfish" ;
lin alliteration_N = mkN "alliteration" ;
lin alliterative_A = compoundA (mkA "alliterative");
lin alliterator_N = mkN "alliterator" ;
lin alloa_PN = mkPN "Alloa";
lin allocable_A = mkA "allocable" ;
lin allocate_V = mkV "allocate";
lin allocate_V2 = mkV2 (mkV "allocate" "allocates" "allocated" "allocated" "allocating");
lin allocation_N = mkN "allocation" "allocations";
lin allocator_N = mkN "allocator" ;
lin allochronic_A = mkA "allochronic" ;
lin allochthonous_A = mkA "allochthonous" ;
lin allocution_N = mkN "allocution" ;
lin allogamous_A = mkA "allogamous" ;
lin allogamy_N = mkN "allogamy" ;
lin allogeneic_A = mkA "allogeneic" ;
lin allograph_N = mkN "allograph" ;
lin allographic_A = mkA "allographic" ;
lin allomerism_N = mkN "allomerism" ;
lin allomerous_A = mkA "allomerous" ;
lin allometric_A = mkA "allometric" ;
lin allometry_N = mkN "allometry" ;
lin allomorph_N = mkN "allomorph" ;
lin allomorphic_A = mkA "allomorphic" ;
lin allopathic_A = mkA "allopathic" ;
lin allopathy_N = mkN "allopathy" ;
lin allopatric_A = mkA "allopatric" ;
lin allopatry_N = mkN "allopatry" ;
lin allophone_N = mkN "allophone" ;
lin allophonic_A = mkA "allophonic" ;
lin allopurinol_N = mkN "allopurinol" ;
lin allosaur_N = mkN "allosaur" ;
lin allot_V2 = mkV2 (mkV "allot" "allots" "allotted" "allotted" "allotting");
lin allotment_N = mkN "allotment" "allotments";
lin allotrope_N = mkN "allotrope" ;
lin allotropic_A = mkA "allotropic" ;
lin allotropy_N = mkN "allotropy" ;
lin allover_A = mkA "allover" ;
lin allow_V = mkV "allow" "allows" "allowed" "allowed" "allowing";
lin allow_V2 = mkV2 (mkV "allow" "allows" "allowed" "allowed" "allowing");
lin allow_V2V = mkV2V (mkV "allow" "allows" "allowed" "allowed" "allowing") noPrep to_Prep ;
lin allow_VS = mkVS (mkV "allow" "allows" "allowed" "allowed" "allowing");
lin allowable_A = compoundA (mkA "allowable");
lin allowance_N = mkN "allowance" "allowances";
lin alloy_N = mkN "alloy" "alloys";
lin alloy_V2 = mkV2 (mkV "alloy" "alloys" "alloyed" "alloyed" "alloying");
lin allspice_N = mkN "allspice" ;
lin allude_V = mkV "allude" "alludes" "alluded" "alluded" "alluding";
lin allure_N = mkN "allure" "allures";
lin allure_V2 = mkV2 (mkV "allure" "allures" "allured" "allured" "alluring");
lin allurement_N = mkN "allurement" "allurements";
lin alluring_A = compoundA (mkA "alluring");
lin allusion_N = mkN "allusion" "allusions";
lin allusive_A = compoundA (mkA "allusive");
lin allusiveness_N = mkN "allusiveness" ;
lin alluvial_A = compoundA (mkA "alluvial");
lin alluvion_N = mkN "alluvion" ;
lin ally_N = mkN human (mkN "ally" "allies");
lin ally_V2 = mkV2 (mkV "ally" "allies" "allied" "allied" "allying");
lin allyl_N = mkN "allyl" ;
lin allylic_A = mkA "allylic" ;
lin alma_ata_PN = mkPN "Alma-ata";
lin alma_mater_N = mkN "alma mater" "alma maters";
lin almanac_N = mkN "almanac" "almanacs";
lin almandine_N = mkN "almandine" ;
lin almandite_N = mkN "almandite" ;
lin almeria_PN = mkPN "Almeria";
lin almighty_A = compoundA (mkA "almighty");
lin almighty_N = mkN "almighty";
lin almond_N = mkN "almond" "almonds";
lin almond_eyed_A = compoundA (mkA "almond-eyed");
lin almoner_N = mkN "almoner" "almoners";
lin almost_AdA = mkAdA "almost" ;
lin almost_AdN = mkAdN "almost" ;
lin almost_Adv = mkAdv "almost";
lin almost_Predet = {s="almost"} ;
lin alms_N = mkN "alms" ;
lin alms_box_N = mkN "alms-box" "alms-boxes";
lin alms_giving_N = mkN "alms-giving" ;
lin alms_house_N = mkN "alms-house" "alms-houses";
lin almsgiver_N = mkN "almsgiver" ;
lin alnwick_PN = mkPN "Alnwick";
lin alocasia_N = mkN "alocasia" ;
lin aloe_N = mkN "aloe" "aloes";
lin aloes_N = mkN "aloes" ;
lin aloft_Adv = mkAdv "aloft";
lin aloha_N = mkN "aloha" ;
lin alone_A = irregAdv (compoundA (mkA "alone")) "alone";
lin aloneness_N = mkN "aloneness" ;
lin along_Adv = mkAdv "along";
lin along_Prep = mkPrep "along";
lin alongside_Adv = mkAdv "alongside";
lin alongside_Prep = mkPrep "alongside";
lin aloof_A = compoundA (mkA "aloof");
lin aloof_Adv = mkAdv "aloof";
lin aloofness_N = mkN "aloofness" ;
lin alopecia_N = mkN "alopecia" ;
lin alopecic_A = mkA "alopecic" ;
lin aloud_Adv = mkAdv "aloud";
lin alp_N = mkN "alp" "alps";
lin alpaca_N = mkN "alpaca" "alpacas";
lin alpenstock_N = mkN "alpenstock" "alpenstocks";
lin alpestrine_A = mkA "alpestrine" ;
lin alpha_A = mkA "alpha" ;
lin alpha_N = mkN "alpha" "alphas";
lin alphabet_N = mkN "alphabet" "alphabets";
lin alphabetic_A = mkA "alphabetic" ;
lin alphabetical_A = compoundA (mkA "alphabetical");
lin alphabetization_N = mkN "alphabetization" ;
lin alphabetized_A = mkA "alphabetized" ;
lin alphabetizer_N = mkN "alphabetizer" ;
lin alphanumeric_A = mkA "alphanumeric" ;
lin alphanumerics_N = mkN "alphanumerics" ;
lin alphavirus_N = mkN "alphavirus" ;
lin alpine_A = compoundA (mkA "alpine");
lin alpinist_N = mkN human (mkN "alpinist" "alpinists");
lin alprazolam_N = mkN "alprazolam" ;
lin already_AdV = mkAdV "already";
lin already_Adv = mkAdv "already";
lin alright_A = mkA "alright" ;
lin alright_Adv = mkAdv "alright";
lin alsatianMasc_N = mkN masculine (mkN "alsatian" "alsatians");
lin alsatianFem_N = mkN feminine (mkN "alsatian" "alsatians");
lin also_AdV = mkAdV "also";
lin also_Adv = mkAdv "also";
lin also_ran_N = mkN "also-ran" "also-rans";
lin alstroemeria_N = mkN "alstroemeria" ;
lin altar_N = mkN "altar" "altars";
lin altar_piece_N = mkN "altar-piece" "altar-pieces";
lin altarpiece_N = mkN "altarpiece" ;
lin altazimuth_N = mkN "altazimuth" ;
lin alter_V = mkV "alter" "alters" "altered" "altered" "altering";
lin alter_V2 = mkV2 (mkV "alter" "alters" "altered" "altered" "altering");
lin alter_ego_N = mkN "alter ego" "alter egos";
lin alterability_N = mkN "alterability" ;
lin alterable_A = compoundA (mkA "alterable");
lin alteration_N = mkN "alteration" "alterations";
lin altercation_N = mkN "altercation" "altercations";
lin alternate_A = compoundA (mkA "alternate");
lin alternate_V = mkV "alternate" "alternates" "alternated" "alternated" "alternating";
lin alternate_V2 = mkV2 (mkV "alternate" "alternates" "alternated" "alternated" "alternating");
lin alternation_N = mkN "alternation" "alternations";
lin alternative_A = compoundA (mkA "alternative");
lin alternative_N = mkN "alternative" "alternatives";
lin alternator_N = mkN "alternator" ;
lin althea_N = mkN "althea" ;
lin although_Subj = mkSubj "although";
lin altimeter_N = mkN "altimeter" "altimeters";
lin altissimo_A = mkA "altissimo" ;
lin altitude_N = mkN "altitude" "altitudes";
lin altitudinal_A = mkA "altitudinal" ;
lin altitudinous_A = mkA "altitudinous" ;
lin alto_A = mkA "alto" ;
lin alto_N = mkN "alto" "altos";
lin altocumulus_N = mkN "altocumulus" ;
lin altogether_Adv = mkAdv "altogether";
lin alton_PN = mkPN "Alton";
lin altostratus_N = mkN "altostratus" ;
lin altricial_A = mkA "altricial" ;
lin altrincham_PN = mkPN "Altrincham";
lin altruism_N = mkN "altruism" "altruisms";
lin altruist_N = mkN human (mkN "altruist" "altruists");
lin altruistic_A = compoundA (mkA "altruistic");
lin altruistically_Adv = mkAdv "altruistically";
lin alula_N = mkN "alula" ;
lin alular_A = mkA "alular" ;
lin alum_N = mkN "alum" ;
lin alumina_N = mkN "alumina" ;
lin aluminate_N = mkN "aluminate" ;
lin aluminiferous_A = mkA "aluminiferous" ;
lin aluminium_N = mkN "aluminium" ;
lin aluminous_A = mkA "aluminous" ;
lin aluminum_N = mkN "aluminum" ;
lin alumna_N = mkN "alumna" "alumnae" {- FIXME: guessed plural form -};
lin alumnus_N = mkN "alumnus" "alumni" {- FIXME: guessed plural form -};
lin alumroot_N = mkN "alumroot" ;
lin alundum_N = mkN "alundum" ;
lin alvechurch_PN = mkPN "Alvechurch";
lin alveolar_A = compoundA (mkA "alveolar");
lin alveolar_N = mkN "alveolar" "alveolars";
lin alveolate_A = mkA "alveolate" ;
lin alveolitis_N = mkN "alveolitis" ;
lin alveolus_N = mkN "alveolus" ;
lin alvine_A = mkA "alvine" ;
lin always_AdV = mkAdV "always";
lin alyssum_N = mkN "alyssum" ;
lin amah_N = mkN "amah" "amahs";
lin amain_Adv = mkAdv "amain";
lin amalgam_N = mkN "amalgam" "amalgams";
lin amalgamate_A = mkA "amalgamate" ;
lin amalgamate_V = mkV "amalgamate" "amalgamates" "amalgamated" "amalgamated" "amalgamating";
lin amalgamate_V2 = mkV2 (mkV "amalgamate" "amalgamates" "amalgamated" "amalgamated" "amalgamating");
lin amalgamation_N = mkN "amalgamation" "amalgamations";
lin amalgamative_A = mkA "amalgamative" ;
lin amalgamator_N = mkN "amalgamator" ;
lin amanda_PN = mkPN "Amanda";
lin amanuensis_N = mkN "amanuensis" "amanuenses" {- FIXME: guessed plural form -};
lin amaranth_N = mkN "amaranth" ;
lin amaranthine_A = mkA "amaranthine" ;
lin amarelle_N = mkN "amarelle" ;
lin amaretto_N = mkN "amaretto" ;
lin amaryllis_N = mkN "amaryllis" "amaryllises";
lin amass_V2 = mkV2 (mkV "amass" "amasses" "amassed" "amassed" "amassing");
lin amastia_N = mkN "amastia" ;
lin amateur_A = mkA "amateur" ;
lin amateurMasc_N = mkN masculine (mkN "amateur" "amateurs");
lin amateurFem_N = mkN feminine (mkN "amateur" "amateurs");
lin amateurish_A = compoundA (mkA "amateurish");
lin amateurishness_N = mkN "amateurishness" ;
lin amateurism_N = mkN "amateurism" ;
lin amative_A = mkA "amative" ;
lin amatory_A = compoundA (mkA "amatory");
lin amaurosis_N = mkN "amaurosis" ;
lin amaurotic_A = mkA "amaurotic" ;
lin amaze_V2 = mkV2 (mkV "amaze" "amazes" "amazed" "amazed" "amazing");
lin amaze_V2V = mkV2V (mkV "amaze") noPrep to_Prep ;
lin amazement_N = mkN "amazement" ;
lin amazing_A = compoundA (mkA "amazing");
lin amazon_N = mkN "amazon" "amazons";
lin ambages_N = mkN "ambages" ;
lin ambassador_N = mkN masculine (mkN "ambassador" "ambassadors");
lin ambassadorial_A = compoundA (mkA "ambassadorial");
lin ambassadorship_N = mkN "ambassadorship" ;
lin ambassadress_N = mkN feminine (mkN "ambassadress" "ambassadresses");
lin amber_A = mkA "amber" ;
lin amber_N = mkN "amber" ;
lin ambergris_N = mkN "ambergris" ;
lin amberjack_N = mkN "amberjack" ;
lin ambiance_N = mkN "ambiance" ;
lin ambidexterity_N = mkN "ambidexterity" ;
lin ambidextrous_A = compoundA (mkA "ambidextrous");
lin ambience_N = mkN "ambience";
lin ambient_A = compoundA (mkA "ambient");
lin ambiguity_N = mkN "ambiguity" "ambiguities";
lin ambiguous_A = compoundA (mkA "ambiguous");
lin ambit_N = mkN "ambit" "ambits";
lin ambition_N = mkN "ambition" "ambitions";
lin ambitious_A = compoundA (mkA "ambitious");
lin ambivalence_N = mkN "ambivalence" ;
lin ambivalent_A = compoundA (mkA "ambivalent");
lin ambiversion_N = mkN "ambiversion" ;
lin ambiversive_A = mkA "ambiversive" ;
lin amble_N = mkN "amble" "ambles";
lin amble_V = mkV "amble" "ambles" "ambled" "ambled" "ambling";
lin amblygonite_N = mkN "amblygonite" ;
lin amblyopia_N = mkN "amblyopia" ;
lin amblyopic_A = mkA "amblyopic" ;
lin amboyna_N = mkN "amboyna" ;
lin ambrosia_N = mkN "ambrosia" ;
lin ambrosial_A = mkA "ambrosial" ;
lin ambulacral_A = mkA "ambulacral" ;
lin ambulacrum_N = mkN "ambulacrum" ;
lin ambulance_N = mkN "ambulance" "ambulances";
lin ambulant_A = mkA "ambulant" ;
lin ambulation_N = mkN "ambulation" ;
lin ambulatory_A = mkA "ambulatory" ;
lin ambulatory_N = mkN "ambulatory" ;
lin ambuscade_N = mkN "ambuscade" "ambuscades";
lin ambuscade_V2 = mkV2 (mkV "ambuscade" "ambuscades" "ambuscaded" "ambuscaded" "ambuscading");
lin ambush_N = mkN "ambush" "ambushes";
lin ambush_V2 = mkV2 (mkV "ambush" "ambushes" "ambushed" "ambushed" "ambushing");
lin ambusher_N = mkN "ambusher" ;
lin ambystomid_N = mkN "ambystomid" ;
lin ameba_N = mkN "ameba" "amebas";
lin amebiasis_N = mkN "amebiasis" ;
lin ameboid_A = mkA "ameboid" ;
lin ameer_N = mkN "ameer" "ameers";
lin amelia_N = mkN "amelia" ;
lin ameliorate_V = mkV "ameliorate" "ameliorates" "ameliorated" "ameliorated" "ameliorating";
lin ameliorate_V2 = mkV2 (mkV "ameliorate" "ameliorates" "ameliorated" "ameliorated" "ameliorating");
lin amelioration_N = mkN "amelioration" "ameliorations";
lin ameloblast_N = mkN "ameloblast" ;
lin amelogenesis_N = mkN "amelogenesis" ;
lin amen_Interj = ss "amen";
lin amenability_N = mkN "amenability" ;
lin amenable_A = compoundA (mkA "amenable");
lin amend_V = mkV "amend" "amends" "amended" "amended" "amending";
lin amend_V2 = mkV2 (mkV "amend" "amends" "amended" "amended" "amending");
lin amend_V2V = mkV2V (mkV "amend" "amends" "amended" "amended" "amending") noPrep to_Prep ;
lin amendable_A = compoundA (mkA "amendable");
lin amendatory_A = mkA "amendatory" ;
lin amendment_N = mkN "amendment" "amendments";
lin amenity_N = mkN "amenity" "amenities";
lin amenorrhea_N = mkN "amenorrhea" ;
lin amenorrheic_A = mkA "amenorrheic" ;
lin amentiferous_A = mkA "amentiferous" ;
lin amerciable_A = mkA "amerciable" ;
lin america_PN = mkPN "America";
lin americanFem_N = mkN feminine (mkN "American" "Americans");
lin americanMasc_N = mkN masculine (mkN "American" "Americans");
lin american_A = compoundA (mkA "American");
lin americanism_N = mkN "americanism" "americanisms";
lin americanize_V2 = mkV2 (mkV "americanize");
lin americium_N = mkN "americium" ;
lin amesbury_PN = mkPN "Amesbury";
lin ametabolic_A = mkA "ametabolic" ;
lin amethyst_A = mkA "amethyst" ;
lin amethyst_N = mkN "amethyst" "amethysts";
lin amethystine_A = mkA "amethystine" ;
lin ametria_N = mkN "ametria" ;
lin ametropia_N = mkN "ametropia" ;
lin ametropic_A = mkA "ametropic" ;
lin amharic_N = mkN "amharic" ;
lin amiability_N = mkN "amiability" ;
lin amiable_A = compoundA (mkA "amiable");
lin amicability_N = mkN "amicability" ;
lin amicable_A = compoundA (mkA "amicable");
lin amid_Prep = mkPrep "amid";
lin amide_N = mkN "amide" ;
lin amidship_A = mkA "amidship" ;
lin amidship_Adv = mkAdv "amidship" ;
lin amidships_Adv = mkAdv "amidships";
lin amidst_Prep = mkPrep "amidst";
lin amiens_PN = mkPN "Amiens";
lin amigo_N = mkN "amigo" ;
lin amine_N = mkN "amine" ;
lin amino_A = mkA "amino" ;
lin amino_N = mkN "amino" ;
lin aminoaciduria_N = mkN "aminoaciduria" ;
lin aminomethane_N = mkN "aminomethane" ;
lin aminophylline_N = mkN "aminophylline" ;
lin aminopyrine_N = mkN "aminopyrine" ;
lin amiodarone_N = mkN "amiodarone" ;
lin amir_N = mkN "amir" "amirs";
lin amiss_A = compoundA (mkA "amiss");
lin amiss_Adv = mkAdv "amiss";
lin amitosis_N = mkN "amitosis" ;
lin amitotic_A = mkA "amitotic" ;
lin amitriptyline_N = mkN "amitriptyline" ;
lin amity_N = mkN "amity" ;
lin ammanford_PN = mkPN "Ammanford";
lin ammeter_N = mkN "ammeter" "ammeters";
lin ammine_N = mkN "ammine" ;
lin ammino_A = mkA "ammino" ;
lin ammobium_N = mkN "ammobium" ;
lin ammonia_N = mkN "ammonia" ;
lin ammoniac_A = mkA "ammoniac" ;
lin ammoniac_N = mkN "ammoniac" ;
lin ammoniated_A = compoundA (mkA "ammoniated");
lin ammonification_N = mkN "ammonification" ;
lin ammonite_N = mkN "ammonite" "ammonites";
lin ammonitic_A = mkA "ammonitic" ;
lin ammonium_N = mkN "ammonium" ;
lin ammoniuria_N = mkN "ammoniuria" ;
lin ammunition_N = mkN "ammunition" ;
lin amnesia_N = mkN "amnesia" ;
lin amnesic_A = mkA "amnesic" ;
lin amnesic_N = mkN "amnesic" ;
lin amnestic_A = mkA "amnestic" ;
lin amnesty_N = mkN "amnesty" "amnesties";
lin amniocentesis_N = mkN "amniocentesis" ;
lin amnion_N = mkN "amnion" ;
lin amniote_N = mkN "amniote" ;
lin amniotic_A = mkA "amniotic" ;
lin amobarbital_N = mkN "amobarbital" ;
lin amoeba_N = mkN "amoeba" "amoebas";
lin amoebic_A = compoundA (mkA "amoebic");
lin amok_Adv = mkAdv "amok";
lin among_Prep = mkPrep "among";
lin amongst_Prep = mkPrep "amongst";
lin amora_N = mkN "amora" ;
lin amoral_A = compoundA (mkA "amoral");
lin amoralism_N = mkN "amoralism" ;
lin amoralist_N = mkN "amoralist" ;
lin amorality_N = mkN "amorality" ;
lin amorist_N = mkN "amorist" ;
lin amoristic_A = mkA "amoristic" ;
lin amorous_A = compoundA (mkA "amorous");
lin amorousness_N = mkN "amorousness" ;
lin amorpha_N = mkN "amorpha" ;
lin amorphophallus_N = mkN "amorphophallus" ;
lin amorphous_A = compoundA (mkA "amorphous");
lin amort_A = mkA "amort" ;
lin amortization_N = mkN "amortization" "amortizations";
lin amortize_V2 = mkV2 (mkV "amortize" "amortizes" "amortized" "amortized" "amortizing");
lin amount_N = mkN "amount" "amounts";
lin amount_V = mkV "amount" "amounts" "amounted" "amounted" "amounting";
lin amour_N = mkN "amour" "amours";
lin amour_propre_N = mkN "amour-propre" ;
lin amoxicillin_N = mkN "amoxicillin" ;
lin amp_Conj = mkConj "&";
lin amp_N = mkN "amp" "amps";
lin amperage_N = mkN "amperage" ;
lin ampere_N = mkN "ampere" "amperes";
lin ampersand_N = mkN "ampersand" ;
lin amphetamine_N = mkN "amphetamine" "amphetamines";
lin amphibia_N = mkN "amphibia" ;
lin amphibian_N = mkN "amphibian" "amphibians";
lin amphibiotic_A = mkA "amphibiotic" ;
lin amphibious_A = compoundA (mkA "amphibious");
lin amphibole_N = mkN "amphibole" ;
lin amphibolite_N = mkN "amphibolite" ;
lin amphibology_N = mkN "amphibology" ;
lin amphibrach_N = mkN "amphibrach" ;
lin amphictyony_N = mkN "amphictyony" ;
lin amphidiploid_N = mkN "amphidiploid" ;
lin amphidiploidy_N = mkN "amphidiploidy" ;
lin amphigory_N = mkN "amphigory" ;
lin amphimixis_N = mkN "amphimixis" ;
lin amphipod_N = mkN "amphipod" ;
lin amphiprostylar_A = mkA "amphiprostylar" ;
lin amphisbaena_N = mkN "amphisbaena" ;
lin amphistylar_A = mkA "amphistylar" ;
lin amphitheater_N = mkN "amphitheater" ;
lin amphitheatre_N = mkN "amphitheatre" "amphitheatres";
lin amphitheatric_A = mkA "amphitheatric" ;
lin amphitropous_A = mkA "amphitropous" ;
lin amphiuma_N = mkN "amphiuma" ;
lin amphora_N = mkN "amphora" "amphoras";
lin amphoric_A = mkA "amphoric" ;
lin amphoteric_A = mkA "amphoteric" ;
lin amphotericin_N = mkN "amphotericin" ;
lin ampicillin_N = mkN "ampicillin" ;
lin ample_A = irregAdv (mkA "ample" "ampler") "amply" ;
lin ampleness_N = mkN "ampleness" ;
lin amplification_N = mkN "amplification" "amplifications";
lin amplifier_N = mkN "amplifier" "amplifiers";
lin amplify_V2 = mkV2 (mkV "amplify" "amplifies" "amplified" "amplified" "amplifying");
lin amplitude_N = mkN "amplitude" ;
lin ampoule_N = mkN "ampoule" "ampoules";
lin ampulla_N = mkN "ampulla" ;
lin ampullar_A = mkA "ampullar" ;
lin amputate_V2 = mkV2 (mkV "amputate" "amputates" "amputated" "amputated" "amputating");
lin amputation_N = mkN "amputation" "amputations";
lin amputator_N = mkN "amputator" ;
lin amputee_N = mkN "amputee" ;
lin amrinone_N = mkN "amrinone" ;
lin amsterdam_PN = mkPN "Amsterdam";
lin amuck_A = mkA "amuck" ;
lin amuck_Adv = mkAdv "amuck";
lin amulet_N = mkN "amulet" "amulets";
lin amuse_V2 = mkV2 (mkV "amuse" "amuses" "amused" "amused" "amusing");
lin amusement_N = mkN "amusement" "amusements";
lin amusing_A = compoundA (mkA "amusing");
lin amy_PN = mkPN "Amy";
lin amygdala_N = mkN "amygdala" ;
lin amygdalin_N = mkN "amygdalin" ;
lin amygdaline_A = mkA "amygdaline" ;
lin amygdaloid_N = mkN "amygdaloid" ;
lin amygdalotomy_N = mkN "amygdalotomy" ;
lin amyl_N = mkN "amyl" ;
lin amylase_N = mkN "amylase" ;
lin amyloid_N = mkN "amyloid" ;
lin amyloidosis_N = mkN "amyloidosis" ;
lin amylolysis_N = mkN "amylolysis" ;
lin amylolytic_A = mkA "amylolytic" ;
lin amyotrophia_N = mkN "amyotrophia" ;
lin amyxia_N = mkN "amyxia" ;
lin ana_N = mkN "ana" ;
lin anabatic_A = mkA "anabatic" ;
lin anabiosis_N = mkN "anabiosis" ;
lin anabiotic_A = mkA "anabiotic" ;
lin anabolic_A = mkA "anabolic" ;
lin anabolism_N = mkN "anabolism" ;
lin anachronic_A = mkA "anachronic" ;
lin anachronism_N = mkN "anachronism" "anachronisms";
lin anachronistic_A = compoundA (mkA "anachronistic");
lin anachronistically_Adv = mkAdv "anachronistically" ;
lin anaclinal_A = mkA "anaclinal" ;
lin anaclisis_N = mkN "anaclisis" ;
lin anaclitic_A = mkA "anaclitic" ;
lin anacoluthia_N = mkN "anacoluthia" ;
lin anacoluthic_A = mkA "anacoluthic" ;
lin anaconda_N = mkN "anaconda" "anacondas";
lin anadiplosis_N = mkN "anadiplosis" ;
lin anadromous_A = mkA "anadromous" ;
lin anaemia_N = mkN "anaemia" ;
lin anaemic_A = compoundA (mkA "anaemic");
lin anaerobe_N = mkN "anaerobe" ;
lin anaerobic_A = mkA "anaerobic" ;
lin anaesthesia_N = mkN "anaesthesia" ;
lin anaesthetic_A = compoundA (mkA "anaesthetic");
lin anaesthetic_N = mkN "anaesthetic" "anaesthetics";
lin anaesthetist_N = mkN human (mkN "anaesthetist" "anaesthetists");
lin anaesthetize_V2 = mkV2 (mkV "anaesthetize" "anaesthetizes" "anaesthetized" "anaesthetized" "anaesthetizing");
lin anaglyph_N = mkN "anaglyph" ;
lin anaglyphic_A = mkA "anaglyphic" ;
lin anaglyphy_N = mkN "anaglyphy" ;
lin anagnost_N = mkN "anagnost" ;
lin anagoge_N = mkN "anagoge" ;
lin anagogic_A = mkA "anagogic" ;
lin anagram_N = mkN "anagram" "anagrams";
lin anagrammatic_A = mkA "anagrammatic" ;
lin anagrams_N = mkN "anagrams" ;
lin anal_A = compoundA (mkA "anal");
lin analbuminemia_N = mkN "analbuminemia" ;
lin analects_N = mkN "analects" ;
lin analeptic_A = mkA "analeptic" ;
lin analeptic_N = mkN "analeptic" ;
lin analgesia_N = mkN "analgesia" ;
lin analgesic_A = mkA "analgesic" ;
lin analgesic_N = mkN "analgesic" "analgesics";
lin analog_N = mkN "analog" "analogs";
lin analogical_A = mkA "analogical" ;
lin analogist_N = mkN "analogist" ;
lin analogous_A = compoundA (mkA "analogous");
lin analogue_A = mkA "analogue" ;
lin analogue_N = mkN "analogue" "analogues";
lin analogy_N = mkN "analogy" "analogies";
lin analphabet_N = mkN "analphabet" ;
lin analphabetic_A = mkA "analphabetic" ;
lin analysand_N = mkN "analysand" ;
lin analyse_V2 = mkV2 (mkV "analyse" "analyses" "analysed" "analysed" "analysing");
lin analysis_N = mkN "analysis" "analyses" {- FIXME: guessed plural form -};
lin analyst_N = mkN human (mkN "analyst" "analysts");
lin analytic_A = compoundA (mkA "analytic");
lin analytical_A = compoundA (mkA "analytical");
lin analyticity_N = mkN "analyticity" ;
lin analyzable_A = mkA "analyzable" ;
lin analyze_V2 = mkV2 (mkV "analyze" "analyzes" "analyzed" "analyzed" "analyzing");
lin analyzer_N = mkN "analyzer" ;
lin anamnestic_A = mkA "anamnestic" ;
lin anamorphic_A = mkA "anamorphic" ;
lin anamorphism_N = mkN "anamorphism" ;
lin anamorphosis_N = mkN "anamorphosis" ;
lin anapaest_N = mkN "anapaest" "anapaests";
lin anapaestic_A = compoundA (mkA "anapaestic");
lin anapest_N = mkN "anapest" ;
lin anapestic_A = mkA "anapestic" ;
lin anaphase_N = mkN "anaphase" ;
lin anaphasic_A = mkA "anaphasic" ;
lin anaphor_N = mkN "anaphor" ;
lin anaphora_N = mkN "anaphora" ;
lin anaphoric_A = mkA "anaphoric" ;
lin anaphrodisia_N = mkN "anaphrodisia" ;
lin anaphrodisiac_A = mkA "anaphrodisiac" ;
lin anaphylactic_A = mkA "anaphylactic" ;
lin anaphylaxis_N = mkN "anaphylaxis" ;
lin anaplasia_N = mkN "anaplasia" ;
lin anaplasmosis_N = mkN "anaplasmosis" ;
lin anaplastic_A = mkA "anaplastic" ;
lin anapsid_N = mkN "anapsid" ;
lin anarchic_A = compoundA (mkA "anarchic");
lin anarchically_Adv = mkAdv "anarchically";
lin anarchism_N = mkN "anarchism" ;
lin anarchistMasc_N = mkN masculine (mkN "anarchist" "anarchists");
lin anarchistFem_N = mkN feminine (mkN "anarchist" "anarchists");
lin anarchistic_A = mkA "anarchistic" ;
lin anarchy_N = mkN "anarchy" ;
lin anarthria_N = mkN "anarthria" ;
lin anasarca_N = mkN "anasarca" ;
lin anasarcous_A = mkA "anasarcous" ;
lin anaspid_N = mkN "anaspid" ;
lin anastalsis_N = mkN "anastalsis" ;
lin anastigmat_N = mkN "anastigmat" ;
lin anastigmatic_A = mkA "anastigmatic" ;
lin anastomosis_N = mkN "anastomosis" ;
lin anastomotic_A = mkA "anastomotic" ;
lin anastrophe_N = mkN "anastrophe" ;
lin anastylosis_N = mkN "anastylosis" ;
lin anathema_N = mkN "anathema" "anathemas";
lin anathematization_N = mkN "anathematization" ;
lin anathematize_V = mkV "anathematize" "anathematizes" "anathematized" "anathematized" "anathematizing";
lin anathematize_V2 = mkV2 (mkV "anathematize" "anathematizes" "anathematized" "anathematized" "anathematizing");
lin anatomic_A = mkA "anatomic" ;
lin anatomical_A = compoundA (mkA "anatomical");
lin anatomist_N = mkN "anatomist" "anatomists";
lin anatomy_N = mkN "anatomy" ;
lin anatotitan_N = mkN "anatotitan" ;
lin anatoxin_N = mkN "anatoxin" ;
lin anatropous_A = mkA "anatropous" ;
lin ancestor_N = mkN masculine (mkN "ancestor" "ancestors");
lin ancestral_A = compoundA (mkA "ancestral");
lin ancestress_N = mkN feminine (mkN "ancestress" "ancestresses");
lin ancestry_N = mkN "ancestry" "ancestries";
lin anchor_N = mkN "anchor" "anchors";
lin anchor_V = mkV "anchor" "anchors" "anchored" "anchored" "anchoring";
lin anchor_V2 = mkV2 (mkV "anchor" "anchors" "anchored" "anchored" "anchoring");
lin anchorage_N = mkN "anchorage" "anchorages";
lin anchorite_N = mkN human (mkN "anchorite" "anchorites");
lin anchoritic_A = mkA "anchoritic" ;
lin anchorman_N = mkN masculine (mkN "anchorman" "anchormen");
lin anchovy_N = mkN "anchovy" "anchovies";
lin anchusa_N = mkN "anchusa" ;
lin ancient_A = compoundA (mkA "ancient");
lin ancient_N = mkN "ancient" ;
lin ancientness_N = mkN "ancientness" ;
lin ancients_N = mkN "ancients" ;
lin ancillary_A = compoundA (mkA "ancillary");
lin ancona_PN = mkPN "Ancona";
lin and_Conj = mkConj "and" ;
lin andante_A = compoundA (mkA "andante");
lin andante_Adv = mkAdv "andante";
lin andante_N = mkN "andante" "andantes";
lin andantino_A = mkA "andantino" ;
lin andesite_N = mkN "andesite" ;
lin andiron_N = mkN "andiron" "andirons";
lin andorra_PN = mkPN "Andorra";
lin andorran_A = compoundA (mkA "andorran");
lin andorran_N = mkN "andorran" "andorrans";
lin andover_PN = mkPN "Andover";
lin andradite_N = mkN "andradite" ;
lin andrena_N = mkN "andrena" ;
lin andrew_PN = mkPN "Andrew";
lin androecium_N = mkN "androecium" ;
lin androgen_N = mkN "androgen" ;
lin androgenesis_N = mkN "androgenesis" ;
lin androgenetic_A = mkA "androgenetic" ;
lin androgenic_A = mkA "androgenic" ;
lin androglossia_N = mkN "androglossia" ;
lin androgynous_A = mkA "androgynous" ;
lin androgyny_N = mkN "androgyny" ;
lin android_N = mkN "android" ;
lin andromeda_N = mkN "andromeda" ;
lin androphobia_N = mkN "androphobia" ;
lin androsterone_N = mkN "androsterone" ;
lin andryala_N = mkN "andryala" ;
lin andy_PN = mkPN "Andy";
lin anecdotal_A = compoundA (mkA "anecdotal");
lin anecdote_N = mkN "anecdote" "anecdotes";
lin anecdotic_A = mkA "anecdotic" ;
lin anecdotist_N = mkN "anecdotist" ;
lin anechoic_A = mkA "anechoic" ;
lin anemia_N = mkN "anemia" ;
lin anemic_A = mkA "anemic" ;
lin anemographic_A = mkA "anemographic" ;
lin anemography_N = mkN "anemography" ;
lin anemometer_N = mkN "anemometer" "anemometers";
lin anemometric_A = mkA "anemometric" ;
lin anemometry_N = mkN "anemometry" ;
lin anemone_N = mkN "anemone" "anemones";
lin anemophilous_A = mkA "anemophilous" ;
lin anencephalic_A = mkA "anencephalic" ;
lin anencephaly_N = mkN "anencephaly" ;
lin anent_Prep = mkPrep "anent";
lin anergy_N = mkN "anergy" ;
lin aneroid_A = compoundA (mkA "aneroid");
lin aneroid_N = mkN "aneroid" "aneroids";
lin anesthesia_N = mkN "anesthesia" ;
lin anesthesiologist_N = mkN "anesthesiologist" ;
lin anesthesiology_N = mkN "anesthesiology" ;
lin anesthetic_A = compoundA (mkA "anesthetic");
lin anesthetic_N = mkN "anesthetic" "anesthetics";
lin anesthetist_N = mkN "anesthetist" "anesthetists";
lin anesthetize_V2 = mkV2 (mkV "anesthetize" "anesthetizes" "anesthetized" "anesthetized" "anesthetizing");
lin anesthyl_N = mkN "anesthyl" ;
lin anestrous_A = mkA "anestrous" ;
lin anestrus_N = mkN "anestrus" ;
lin aneuploid_A = mkA "aneuploid" ;
lin aneuploidy_N = mkN "aneuploidy" ;
lin aneurysm_N = mkN "aneurysm" ;
lin aneurysmal_A = mkA "aneurysmal" ;
lin anew_Adv = mkAdv "anew";
lin anfractuous_A = mkA "anfractuous" ;
lin angel_N = mkN "angel" "angels";
lin angela_PN = mkPN "Angela";
lin angelfish_N = mkN "angelfish" ;
lin angelic_A = compoundA (mkA "angelic");
lin angelica_N = mkN "angelica" ;
lin angelically_Adv = mkAdv "angelically";
lin angelim_N = mkN "angelim" ;
lin angelology_N = mkN "angelology" ;
lin angelus_N = mkN "angelus" "angeluses";
lin anger_N = mkN "anger" ;
lin anger_V2 = mkV2 (mkV "anger" "angers" "angered" "angered" "angering");
lin angers_PN = mkPN "Angers";
lin angie_PN = mkPN "Angie";
lin angiitis_N = mkN "angiitis" ;
lin angina_N = mkN "angina" ;
lin anginal_A = mkA "anginal" ;
lin angiocardiogram_N = mkN "angiocardiogram" ;
lin angiocarp_N = mkN "angiocarp" ;
lin angiocarpic_A = mkA "angiocarpic" ;
lin angioedema_N = mkN "angioedema" ;
lin angiogenesis_N = mkN "angiogenesis" ;
lin angiogram_N = mkN "angiogram" ;
lin angiography_N = mkN "angiography" ;
lin angiologist_N = mkN "angiologist" ;
lin angiology_N = mkN "angiology" ;
lin angioma_N = mkN "angioma" ;
lin angiomatous_A = mkA "angiomatous" ;
lin angiopathy_N = mkN "angiopathy" ;
lin angioplasty_N = mkN "angioplasty" ;
lin angiopteris_N = mkN "angiopteris" ;
lin angiosarcoma_N = mkN "angiosarcoma" ;
lin angioscope_N = mkN "angioscope" ;
lin angiosperm_N = mkN "angiosperm" ;
lin angiospermous_A = mkA "angiospermous" ;
lin angiotelectasia_N = mkN "angiotelectasia" ;
lin angiotensin_N = mkN "angiotensin" ;
lin angle_N = mkN "angle" "angles";
lin angle_V = mkV "angle" "angles" "angled" "angled" "angling";
lin angle_V2 = mkV2 (mkV "angle" "angles" "angled" "angled" "angling");
lin angle_dozer_N = mkN "angle-dozer" "angle-dozers";
lin angle_iron_N = mkN "angle-iron" "angle-irons";
lin angle_park_V = mkV "angle-park" "angle-parks" "angle-parked" "angle-parked" "angle-parking";
lin angle_park_V2 = mkV2 (mkV "angle-park" "angle-parks" "angle-parked" "angle-parked" "angle-parking");
lin angledozer_N = mkN "angledozer" ;
lin angler_N = mkN "angler" "anglers";
lin anglewing_N = mkN "anglewing" ;
lin anglican_A = compoundA (mkA "anglican");
lin anglican_N = mkN "anglican" "anglicans";
lin anglicism_N = mkN "anglicism" "anglicisms";
lin anglicize_V2 = mkV2 (mkV "anglicize" "anglicizes" "anglicized" "anglicized" "anglicizing");
lin angling_N = mkN "angling" ;
lin anglo_catholic_A = compoundA (mkA "anglo-catholic");
lin anglo_catholic_N = mkN "anglo-catholic" "anglo-catholics";
lin anglo_indian_A = compoundA (mkA "anglo-indian");
lin anglo_indian_N = mkN "anglo-indian" "anglo-indians";
lin anglo_saxon_A = compoundA (mkA "anglo-saxon");
lin anglo_saxon_N = mkN "anglo-saxon" "anglo-saxons";
lin anglomania_N = mkN "anglomania" ;
lin anglophilMasc_N = mkN masculine (mkN "anglophil" "anglophils");
lin anglophilFem_N = mkN feminine (mkN "anglophil" "anglophils");
lin anglophileMasc_N = mkN masculine (mkN "anglophile" "anglophiles");
lin anglophileFem_N = mkN feminine (mkN "anglophile" "anglophiles");
lin anglophobe_N = mkN "anglophobe" "anglophobes";
lin anglophobia_N = mkN "anglophobia" ;
lin angola_PN = mkPN "Angola";
lin angolan_A = compoundA (mkA "angolan");
lin angolan_N = mkN "angolan" "angolans";
lin angora_N = mkN "angora" "angoras";
lin angostura_N = mkN "angostura" ;
lin angrecum_N = mkN "angrecum" ;
lin angry_A = mkA "angry" "angrier";
lin angst_N = mkN "angst" ;
lin angstrom_N = mkN "angstrom" ;
lin anguilla_PN = mkPN "Anguilla";
lin anguillan_A = compoundA (mkA "anguillan");
lin anguillan_N = mkN "anguillan" "anguillans";
lin anguine_A = mkA "anguine" ;
lin anguish_N = mkN "anguish" ;
lin anguished_A = compoundA (mkA "anguished");
lin angular_A = compoundA (mkA "angular");
lin angularity_N = mkN "angularity" "angularities";
lin angulation_N = mkN "angulation" ;
lin angus_PN = mkPN "Angus";
lin angwantibo_N = mkN "angwantibo" ;
lin anhedonia_N = mkN "anhedonia" ;
lin anhidrosis_N = mkN "anhidrosis" ;
lin anhydride_N = mkN "anhydride" ;
lin anhydrous_A = mkA "anhydrous" ;
lin ani_N = mkN "ani" ;
lin anicteric_A = mkA "anicteric" ;
lin anil_N = mkN "anil" ;
lin anile_A = mkA "anile" ;
lin aniline_N = mkN "aniline" "anilines";
lin anima_N = mkN "anima" ;
lin animadversion_N = mkN "animadversion" "animadversions";
lin animadvert_V = mkV "animadvert" "animadverts" "animadverted" "animadverted" "animadverting";
lin animal_N = mkN "animal" "animals";
lin animalcule_N = mkN "animalcule" "animalcules";
lin animalism_N = mkN "animalism" ;
lin animalistic_A = mkA "animalistic" ;
lin animality_N = mkN "animality" ;
lin animalization_N = mkN "animalization" ;
lin animate_A = compoundA (mkA "animate");
lin animate_V2 = mkV2 (mkV "animate" "animates" "animated" "animated" "animating");
lin animatedly_A = compoundA (mkA "animatedly");
lin animatedly_Adv = mkAdv "animatedly" ;
lin animateness_N = mkN "animateness" ;
lin animating_A = mkA "animating" ;
lin animation_N = mkN "animation" ;
lin animatism_N = mkN "animatism" ;
lin animatistic_A = mkA "animatistic" ;
lin animator_N = mkN "animator" ;
lin animatronics_N = mkN "animatronics" ;
lin anime_N = mkN "anime" ;
lin animism_N = mkN "animism" ;
lin animist_A = mkA "animist" ;
lin animist_N = mkN "animist" ;
lin animosity_N = mkN "animosity" "animosities";
lin animus_N = mkN "animus" ;
lin anion_N = mkN "anion" ;
lin anionic_A = mkA "anionic" ;
lin anise_N = mkN "anise" "anises";
lin aniseed_N = mkN "aniseed" ;
lin aniseikonia_N = mkN "aniseikonia" ;
lin aniseikonic_A = mkA "aniseikonic" ;
lin anisette_N = mkN "anisette" ;
lin anisogamete_N = mkN "anisogamete" ;
lin anisogametic_A = mkA "anisogametic" ;
lin anisogamic_A = mkA "anisogamic" ;
lin anisogamy_N = mkN "anisogamy" ;
lin anisometric_A = mkA "anisometric" ;
lin anisometropia_N = mkN "anisometropia" ;
lin anisometropic_A = mkA "anisometropic" ;
lin anisotropic_A = mkA "anisotropic" ;
lin anisotropically_Adv = mkAdv "anisotropically" ;
lin anisotropy_N = mkN "anisotropy" ;
lin anita_PN = mkPN "Anita";
lin anjou_N = mkN "anjou" ;
lin ankara_PN = mkPN "Ankara";
lin ankle_N = mkN "ankle" "ankles";
lin anklebone_N = mkN "anklebone" ;
lin anklet_N = mkN "anklet" "anklets";
lin ankus_N = mkN "ankus" ;
lin ankylosaur_N = mkN "ankylosaur" ;
lin ankylosis_N = mkN "ankylosis" ;
lin ankylotic_A = mkA "ankylotic" ;
lin ann_PN = mkPN "Ann";
lin anna_N = mkN "anna" "annas";
lin annabel_PN = mkPN "Annabel";
lin annalist_N = mkN "annalist" "annalists";
lin annalistic_A = mkA "annalistic" ;
lin annals_N = mkN "annals" ;
lin annan_PN = mkPN "Annan";
lin anne_PN = mkPN "Anne";
lin anneal_V2 = mkV2 (mkV "anneal" "anneals" "annealed" "annealed" "annealing");
lin annealing_N = mkN "annealing" ;
lin annelid_A = mkA "annelid" ;
lin annelid_N = mkN "annelid" ;
lin annex_N = mkN "annex" "annexes";
lin annex_V2 = mkV2 (mkV "annex" "annexes" "annexed" "annexed" "annexing");
lin annexation_N = mkN "annexation" ;
lin annexational_A = mkA "annexational" ;
lin annexe_N = mkN "annexe" "annexes";
lin annfield_PN = mkPN "Annfield";
lin annfield_plain_PN = mkPN "Annfield plain";
lin annie_PN = mkPN "Annie";
lin annihilate_V2 = mkV2 (mkV "annihilate" "annihilates" "annihilated" "annihilated" "annihilating");
lin annihilating_A = mkA "annihilating" ;
lin annihilation_N = mkN "annihilation" ;
lin annihilative_A = mkA "annihilative" ;
lin annihilator_N = mkN "annihilator" ;
lin anniversary_N = mkN "anniversary" "anniversaries";
lin annotate_V2 = mkV2 (mkV "annotate" "annotates" "annotated" "annotated" "annotating");
lin annotation_N = mkN "annotation" "annotations";
lin annotator_N = mkN "annotator" ;
lin announce_V2 = mkV2 (mkV "announce" "announces" "announced" "announced" "announcing");
lin announce_VS = mkVS (mkV "announce" "announces" "announced" "announced" "announcing");
lin announcement_N = mkN "announcement" "announcements";
lin announcer_N = mkN "announcer" "announcers";
lin annoy_V2 = mkV2 (mkV "annoy" "annoys" "annoyed" "annoyed" "annoying");
lin annoyance_N = mkN "annoyance" "annoyances";
lin annoying_A = compoundA (mkA "annoying");
lin annual_A = compoundA (mkA "annual");
lin annual_N = mkN "annual" "annuals";
lin annuitant_N = mkN "annuitant" "annuitants";
lin annuity_N = mkN "annuity" "annuities";
lin annul_V2 = mkV2 (mkV "annul" "annuls" "annulled" "annulled" "annulling");
lin annular_A = compoundA (mkA "annular");
lin annulet_N = mkN "annulet" ;
lin annulment_N = mkN "annulment" "annulments";
lin annulus_N = mkN "annulus" ;
lin annum_N = mkN "annum" ;
lin annunciate_V2 = mkV2 (mkV "annunciate" "annunciates" "annunciated" "annunciated" "annunciating");
lin annunciation_N = mkN "annunciation" "annunciations";
lin annunciator_N = mkN "annunciator" ;
lin annunciatory_A = mkA "annunciatory" ;
lin anoa_N = mkN "anoa" ;
lin anode_N = mkN "anode" "anodes";
lin anodic_A = mkA "anodic" ;
lin anodyne_A = compoundA (mkA "anodyne");
lin anodyne_N = mkN "anodyne" "anodynes";
lin anoint_V2 = mkV2 (mkV "anoint" "anoints" "anointed" "anointed" "anointing");
lin anointer_N = mkN "anointer" ;
lin anointing_N = mkN "anointing" ;
lin anointment_N = mkN "anointment" "anointments";
lin anomalist_N = mkN "anomalist" ;
lin anomalops_N = mkN "anomalops" ;
lin anomalopteryx_N = mkN "anomalopteryx" ;
lin anomalous_A = compoundA (mkA "anomalous");
lin anomaly_N = mkN "anomaly" "anomalies";
lin anomie_N = mkN "anomie" ;
lin anon_Adv = mkAdv "anon";
lin anon_PN = mkPN "Anon";
lin anonymity_N = mkN "anonymity" ;
lin anonymous_A = compoundA (mkA "anonymous");
lin anoperineal_A = mkA "anoperineal" ;
lin anopheles_N = mkN "anopheles" "anopheles";
lin anopheline_A = mkA "anopheline" ;
lin anopheline_N = mkN "anopheline" ;
lin anopia_N = mkN "anopia" ;
lin anorak_N = mkN "anorak" "anoraks";
lin anorchism_N = mkN "anorchism" ;
lin anorectal_A = mkA "anorectal" ;
lin anorectic_A = mkA "anorectic" ;
lin anorexia_N = mkN "anorexia" ;
lin anorexic_A = mkA "anorexic" ;
lin anorexic_N = mkN "anorexic" ;
lin anorgasmia_N = mkN "anorgasmia" ;
lin anorthite_N = mkN "anorthite" ;
lin anorthitic_A = mkA "anorthitic" ;
lin anorthopia_N = mkN "anorthopia" ;
lin anosmia_N = mkN "anosmia" ;
lin anosmic_A = mkA "anosmic" ;
lin another_Quant = mkQuant "another" "other";
lin anovulation_N = mkN "anovulation" ;
lin anoxemia_N = mkN "anoxemia" ;
lin anoxemic_A = mkA "anoxemic" ;
lin anoxia_N = mkN "anoxia" ;
lin anoxic_A = mkA "anoxic" ;
lin anserine_A = mkA "anserine" ;
lin anshan_PN = mkPN "Anshan";
lin answer_N = mkN "answer" "answers";
lin answer_V = mkV "answer" "answers" "answered" "answered" "answering";
lin answer_V2 = mkV2 (mkV "answer" "answers" "answered" "answered" "answering");
lin answerable_A = compoundA (mkA "answerable");
lin ant_N = mkN "ant" "ants";
lin ant_eater_N = mkN "ant-eater" "ant-eaters";
lin ant_hill_N = mkN "ant-hill" "ant-hills";
lin antacid_A = mkA "antacid" ;
lin antacid_N = mkN "antacid" ;
lin antagonism_N = mkN "antagonism" "antagonisms";
lin antagonist_N = mkN "antagonist" "antagonists";
lin antagonistic_A = compoundA (mkA "antagonistic");
lin antagonistically_Adv = mkAdv "antagonistically";
lin antagonize_V2 = mkV2 (mkV "antagonize" "antagonizes" "antagonized" "antagonized" "antagonizing");
lin antapex_N = mkN "antapex" ;
lin antarctic_A = compoundA (mkA "antarctic");
lin antbird_N = mkN "antbird" ;
lin ante_N = mkN "ante" "antes";
lin ante_meridiem_Adv = mkAdv "ante meridiem";
lin anteater_N = mkN "anteater" ;
lin antebellum_A = mkA "antebellum" ;
lin antecedence_N = mkN "antecedence" "antecedences";
lin antecedent_A = compoundA (mkA "antecedent");
lin antecedent_N = mkN "antecedent" "antecedents";
lin antechamber_N = mkN "antechamber" "antechambers";
lin antecubital_A = mkA "antecubital" ;
lin antedate_V2 = mkV2 (mkV "antedate" "antedates" "antedated" "antedated" "antedating");
lin antediluvian_A = compoundA (mkA "antediluvian");
lin antediluvian_N = mkN "antediluvian" "antediluvians";
lin antefix_N = mkN "antefix" ;
lin antelope_N = mkN "antelope" "antelopes";
lin antemeridian_A = mkA "antemeridian" ;
lin antemortem_A = mkA "antemortem" ;
lin antenatal_A = compoundA (mkA "antenatal");
lin antenna_N = mkN "antenna" "antennae" {- FIXME: guessed plural form -};
lin antennal_A = mkA "antennal" ;
lin antenuptial_A = compoundA (mkA "antenuptial");
lin antepenult_N = mkN "antepenult" ;
lin antepenultimate_A = compoundA (mkA "antepenultimate");
lin anterior_A = compoundA (mkA "anterior");
lin anteriority_N = mkN "anteriority" ;
lin anterograde_A = mkA "anterograde" ;
lin anteroom_N = mkN "anteroom" "anterooms";
lin anthea_PN = mkPN "Anthea";
lin anthelmintic_A = mkA "anthelmintic" ;
lin anthem_N = mkN "anthem" "anthems";
lin anther_N = mkN "anther" "anthers";
lin antheral_A = mkA "antheral" ;
lin antheridial_A = mkA "antheridial" ;
lin antheridiophore_N = mkN "antheridiophore" ;
lin antheridium_N = mkN "antheridium" ;
lin antherozoid_N = mkN "antherozoid" ;
lin anthill_N = mkN "anthill" ;
lin anthologist_N = mkN "anthologist" ;
lin anthology_N = mkN "anthology" "anthologies";
lin anthony_PN = mkPN "Anthony";
lin anthophagous_A = mkA "anthophagous" ;
lin anthophyllite_N = mkN "anthophyllite" ;
lin anthozoan_N = mkN "anthozoan" ;
lin anthracite_N = mkN "anthracite" ;
lin anthracitic_A = mkA "anthracitic" ;
lin anthracosis_N = mkN "anthracosis" ;
lin anthrax_N = mkN "anthrax" ;
lin anthropic_A = mkA "anthropic" ;
lin anthropocentric_A = mkA "anthropocentric" ;
lin anthropocentrism_N = mkN "anthropocentrism" ;
lin anthropogenesis_N = mkN "anthropogenesis" ;
lin anthropogenetic_A = mkA "anthropogenetic" ;
lin anthropoid_A = compoundA (mkA "anthropoid");
lin anthropoid_N = mkN "anthropoid" "anthropoids";
lin anthropolatry_N = mkN "anthropolatry" ;
lin anthropological_A = compoundA (mkA "anthropological");
lin anthropologistMasc_N = mkN masculine (mkN "anthropologist" "anthropologists");
lin anthropologistFem_N = mkN feminine (mkN "anthropologist" "anthropologists");
lin anthropology_N = mkN "anthropology" ;
lin anthropometric_A = mkA "anthropometric" ;
lin anthropometry_N = mkN "anthropometry" ;
lin anthropomorphic_A = mkA "anthropomorphic" ;
lin anthropomorphism_N = mkN "anthropomorphism" ;
lin anthropophagous_A = mkA "anthropophagous" ;
lin anthropophagy_N = mkN "anthropophagy" ;
lin anthroposophy_N = mkN "anthroposophy" ;
lin anthurium_N = mkN "anthurium" ;
lin anti_A = mkA "anti" ;
lin anti_N = mkN "anti" ;
lin anti_aircraft_A = compoundA (mkA "anti-aircraft");
lin anti_hero_N = mkN "anti-hero" "anti-heroes";
lin anti_personnel_A = compoundA (mkA "anti-personnel");
lin anti_semite_A = compoundA (mkA "anti-semite");
lin anti_semite_N = mkN "anti-semite" "anti-semites";
lin anti_semitic_A = compoundA (mkA "anti-semitic");
lin anti_semitism_N = mkN "anti-semitism" ;
lin antiadrenergic_A = mkA "antiadrenergic" ;
lin antiaircraft_A = mkA "antiaircraft" ;
lin antiaircraft_N = mkN "antiaircraft" ;
lin antialiasing_N = mkN "antialiasing" ;
lin antiapartheid_A = mkA "antiapartheid" ;
lin antiarrhythmic_N = mkN "antiarrhythmic" ;
lin antiauthoritarian_A = mkA "antiauthoritarian" ;
lin antibacterial_A = mkA "antibacterial" ;
lin antibacterial_N = mkN "antibacterial" ;
lin antibaryon_N = mkN "antibaryon" ;
lin antibiosis_N = mkN "antibiosis" ;
lin antibiotic_A = compoundA (mkA "antibiotic");
lin antibiotic_N = mkN "antibiotic" "antibiotics";
lin antibody_N = mkN "antibody" "antibodies";
lin antic_A = mkA "antic" ;
lin antic_N = mkN "antic" "antics";
lin anticancer_A = mkA "anticancer" ;
lin anticatalyst_N = mkN "anticatalyst" ;
lin anticholinergic_A = mkA "anticholinergic" ;
lin anticholinergic_N = mkN "anticholinergic" ;
lin anticholinesterase_N = mkN "anticholinesterase" ;
lin anticipant_A = mkA "anticipant" ;
lin anticipate_V = mkV "anticipate";
lin anticipate_V2 = mkV2 (mkV "anticipate" "anticipates" "anticipated" "anticipated" "anticipating");
lin anticipate_VS = mkVS (mkV "anticipate" "anticipates" "anticipated" "anticipated" "anticipating");
lin anticipate_VV = ingVV (mkV "anticipate" "anticipates" "anticipated" "anticipated" "anticipating");
lin anticipation_N = mkN "anticipation" "anticipations";
lin anticipator_N = mkN "anticipator" ;
lin anticipatory_A = compoundA (mkA "anticipatory");
lin anticlimactic_A = mkA "anticlimactic" ;
lin anticlimax_N = mkN "anticlimax" "anticlimaxes";
lin anticlinal_A = mkA "anticlinal" ;
lin anticlockwise_Adv = mkAdv "anticlockwise";
lin anticoagulant_N = mkN "anticoagulant" ;
lin anticoagulation_N = mkN "anticoagulation" ;
lin anticoagulative_A = mkA "anticoagulative" ;
lin anticonvulsant_N = mkN "anticonvulsant" ;
lin anticyclone_N = mkN "anticyclone" "anticyclones";
lin anticyclonic_A = mkA "anticyclonic" ;
lin antidepressant_N = mkN "antidepressant" ;
lin antidiabetic_N = mkN "antidiabetic" ;
lin antidiarrheal_N = mkN "antidiarrheal" ;
lin antidiuretic_N = mkN "antidiuretic" ;
lin antidotal_A = mkA "antidotal" ;
lin antidote_N = mkN "antidote" "antidotes";
lin antidromic_A = mkA "antidromic" ;
lin antiemetic_N = mkN "antiemetic" ;
lin antiestablishmentarianism_N = mkN "antiestablishmentarianism" ;
lin antifeminist_N = mkN "antifeminist" ;
lin antiferromagnetic_A = mkA "antiferromagnetic" ;
lin antiferromagnetism_N = mkN "antiferromagnetism" ;
lin antiflatulent_N = mkN "antiflatulent" ;
lin antifreeze_N = mkN "antifreeze" ;
lin antifungal_N = mkN "antifungal" ;
lin antigen_N = mkN "antigen" ;
lin antigenic_A = mkA "antigenic" ;
lin antigram_N = mkN "antigram" ;
lin antigua_PN = mkPN "Antigua";
lin antiguan_A = compoundA (mkA "antiguan");
lin antiguan_N = mkN "antiguan" "antiguans";
lin antiheretical_A = mkA "antiheretical" ;
lin antihero_N = mkN "antihero" ;
lin antihistamine_N = mkN "antihistamine" ;
lin antihypertensive_N = mkN "antihypertensive" ;
lin antiknock_A = mkA "antiknock" ;
lin antiknock_N = mkN "antiknock" ;
lin antilepton_N = mkN "antilepton" ;
lin antilogarithm_N = mkN "antilogarithm" "antilogarithms";
lin antimacassar_N = mkN "antimacassar" "antimacassars";
lin antimagnetic_A = mkA "antimagnetic" ;
lin antimalarial_N = mkN "antimalarial" ;
lin antimatter_N = mkN "antimatter" ;
lin antimeson_N = mkN "antimeson" ;
lin antimetabolite_N = mkN "antimetabolite" ;
lin antimicrobial_A = mkA "antimicrobial" ;
lin antimonial_A = mkA "antimonial" ;
lin antimonic_A = mkA "antimonic" ;
lin antimonopoly_A = mkA "antimonopoly" ;
lin antimony_N = mkN "antimony" ;
lin antimuon_N = mkN "antimuon" ;
lin antimycin_N = mkN "antimycin" ;
lin antineoplastic_N = mkN "antineoplastic" ;
lin antineutrino_N = mkN "antineutrino" ;
lin antineutron_N = mkN "antineutron" ;
lin antinode_N = mkN "antinode" ;
lin antinomasia_N = mkN "antinomasia" ;
lin antinomian_A = mkA "antinomian" ;
lin antinomian_N = mkN "antinomian" ;
lin antinomianism_N = mkN "antinomianism" ;
lin antinomy_N = mkN "antinomy" ;
lin antioxidant_N = mkN "antioxidant" ;
lin antiparallel_A = mkA "antiparallel" ;
lin antiparticle_N = mkN "antiparticle" ;
lin antipasto_N = mkN "antipasto" ;
lin antipathetic_A = compoundA (mkA "antipathetic");
lin antipathy_N = mkN "antipathy" "antipathies";
lin antipersonnel_A = mkA "antipersonnel" ;
lin antiperspirant_N = mkN "antiperspirant" ;
lin antiphlogistic_A = mkA "antiphlogistic" ;
lin antiphon_N = mkN "antiphon" ;
lin antiphonary_A = mkA "antiphonary" ;
lin antiphonary_N = mkN "antiphonary" ;
lin antiphony_N = mkN "antiphony" ;
lin antiphrasis_N = mkN "antiphrasis" ;
lin antipodal_A = mkA "antipodal" ;
lin antipodal_N = mkN "antipodal" ;
lin antipode_N = mkN "antipode" ;
lin antipodes_N = mkN "antipodes" ;
lin antipollution_A = mkA "antipollution" ;
lin antipope_N = mkN "antipope" ;
lin antiproton_N = mkN "antiproton" ;
lin antiprotozoal_N = mkN "antiprotozoal" ;
lin antipruritic_N = mkN "antipruritic" ;
lin antipyresis_N = mkN "antipyresis" ;
lin antipyretic_A = mkA "antipyretic" ;
lin antipyretic_N = mkN "antipyretic" ;
lin antiquarian_A = compoundA (mkA "antiquarian");
lin antiquarian_N = mkN "antiquarian" "antiquarians";
lin antiquark_N = mkN "antiquark" ;
lin antiquary_N = mkN "antiquary" "antiquaries";
lin antiquated_A = compoundA (mkA "antiquated");
lin antique_A = compoundA (mkA "antique");
lin antique_N = mkN "antique" "antiques";
lin antiquity_N = mkN "antiquity" "antiquities";
lin antiredeposition_N = mkN "antiredeposition" ;
lin antirrhinum_N = mkN "antirrhinum" "antirrhinums";
lin antisatellite_A = mkA "antisatellite" ;
lin antisepsis_N = mkN "antisepsis" ;
lin antiseptic_A = compoundA (mkA "antiseptic");
lin antiseptic_N = mkN "antiseptic" "antiseptics";
lin antiserum_N = mkN "antiserum" ;
lin antisocial_A = compoundA (mkA "antisocial");
lin antispasmodic_N = mkN "antispasmodic" ;
lin antistrophe_N = mkN "antistrophe" ;
lin antistrophic_A = mkA "antistrophic" ;
lin antisubmarine_A = mkA "antisubmarine" ;
lin antisyphilitic_N = mkN "antisyphilitic" ;
lin antitank_A = compoundA (mkA "antitank");
lin antitauon_N = mkN "antitauon" ;
lin antithesis_N = mkN "antithesis" "antitheses" {- FIXME: guessed plural form -};
lin antithetic_A = compoundA (mkA "antithetic");
lin antithetical_A = compoundA (mkA "antithetical");
lin antithyroid_A = mkA "antithyroid" ;
lin antitoxic_A = mkA "antitoxic" ;
lin antitoxin_N = mkN "antitoxin" "antitoxins";
lin antitrade_A = compoundA (mkA "antitrade");
lin antitrade_N = mkN "antitrade" "antitrades";
lin antitrades_N = mkN "antitrades" ;
lin antitussive_N = mkN "antitussive" ;
lin antitype_N = mkN "antitype" ;
lin antitypic_A = mkA "antitypic" ;
lin antivenin_N = mkN "antivenin" ;
lin antiviral_A = mkA "antiviral" ;
lin antiviral_N = mkN "antiviral" ;
lin antler_N = mkN "antler" "antlers";
lin antlered_A = mkA "antlered" ;
lin antony_PN = mkPN "Antony";
lin antonym_N = mkN "antonym" "antonyms";
lin antonymous_A = mkA "antonymous" ;
lin antonymy_N = mkN "antonymy" ;
lin antrim_PN = mkPN "Antrim";
lin antrorse_A = mkA "antrorse" ;
lin antrum_N = mkN "antrum" ;
lin antsy_A = mkA "antsy" ;
lin antwerp_PN = mkPN "Antwerp";
lin anuran_A = mkA "anuran" ;
lin anuresis_N = mkN "anuresis" ;
lin anuretic_A = mkA "anuretic" ;
lin anurous_A = mkA "anurous" ;
lin anus_N = mkN "anus" "anuses";
lin anvil_N = mkN "anvil" "anvils";
lin anxiety_N = mkN "anxiety" "anxieties";
lin anxiolytic_A = mkA "anxiolytic" ;
lin anxious_A = compoundA (mkA "anxious");
lin anxiousness_N = mkN "anxiousness" ;
lin anyPl_Det = mkDeterminer plural   "any";
lin anySg_Det = mkDeterminer singular "any";
lin any_Adv = mkAdv "any" ;
lin anybody_NP = mkNP "anybody" "anybody" "anybody's" singular P3 human;
lin anyhow_Adv = mkAdv "anyhow";
lin anymore_Adv = mkAdv "anymore";
lin anyone_NP = mkNP "anyone" "anyone" "anyone's" singular P3 human;
lin anyplace_Adv = mkAdv "anyplace";
lin anything_NP = regNP "anything" singular;
lin anyway_Adv = mkAdv "anyway";
lin anywhere_Adv = mkAdv "anywhere";
lin aorist_N = mkN "aorist" ;
lin aoristic_A = mkA "aoristic" ;
lin aorta_N = mkN "aorta" "aortas";
lin aortal_A = mkA "aortal" ;
lin aortitis_N = mkN "aortitis" ;
lin aoudad_N = mkN "aoudad" ;
lin apace_Adv = mkAdv "apace";
lin apache_N = mkN "apache" "apaches";
lin apadana_N = mkN "apadana" ;
lin apanage_N = mkN "apanage" ;
lin apar_N = mkN "apar" ;
lin apart_Adv = mkAdv "apart";
lin apartheid_N = mkN "apartheid" ;
lin apartment_N = mkN "apartment" "apartments";
lin apathetic_A = compoundA (mkA "apathetic");
lin apathetically_Adv = mkAdv "apathetically";
lin apathy_N = mkN "apathy" ;
lin apatite_N = mkN "apatite" ;
lin apatosaur_N = mkN "apatosaur" ;
lin ape_N = mkN "ape" "apes";
lin ape_V2 = mkV2 (mkV "ape" "apes" "aped" "aped" "aping");
lin apeldoorn_PN = mkPN "Apeldoorn";
lin apercu_N = mkN "apercu" ;
lin aperea_N = mkN "aperea" ;
lin aperient_A = compoundA (mkA "aperient");
lin aperient_N = mkN "aperient" "aperients";
lin aperiodic_A = mkA "aperiodic" ;
lin aperitif_N = mkN "aperitif" "aperitifs";
lin aperture_N = mkN "aperture" "apertures";
lin apery_N = mkN "apery" ;
lin apetalous_A = mkA "apetalous" ;
lin apex_N = mkN "apex" "apexes";
lin aphaeresis_N = mkN "aphaeresis" ;
lin aphaeretic_A = mkA "aphaeretic" ;
lin aphagia_N = mkN "aphagia" ;
lin aphakia_N = mkN "aphakia" ;
lin aphakic_A = mkA "aphakic" ;
lin aphakic_N = mkN "aphakic" ;
lin aphanite_N = mkN "aphanite" ;
lin aphanitic_A = mkA "aphanitic" ;
lin aphasia_N = mkN "aphasia" ;
lin aphasic_A = mkA "aphasic" ;
lin aphasic_N = mkN "aphasic" ;
lin aphelion_N = mkN "aphelion" ;
lin apheresis_N = mkN "apheresis" ;
lin aphesis_N = mkN "aphesis" ;
lin aphetic_A = mkA "aphetic" ;
lin aphid_N = mkN "aphid" "aphids";
lin aphis_N = mkN "aphis" "aphes" {- FIXME: guessed plural form -};
lin aphonia_N = mkN "aphonia" ;
lin aphonic_A = mkA "aphonic" ;
lin aphorism_N = mkN "aphorism" "aphorisms";
lin aphorist_N = mkN "aphorist" ;
lin aphoristic_A = mkA "aphoristic" ;
lin aphotic_A = mkA "aphotic" ;
lin aphrodisia_N = mkN "aphrodisia" ;
lin aphrodisiac_A = compoundA (mkA "aphrodisiac");
lin aphrodisiac_N = mkN "aphrodisiac" "aphrodisiacs";
lin aphyllous_A = mkA "aphyllous" ;
lin apian_A = mkA "apian" ;
lin apiarian_A = mkA "apiarian" ;
lin apiarist_N = mkN "apiarist" "apiarists";
lin apiary_N = mkN "apiary" "apiaries";
lin apical_A = mkA "apical" ;
lin apiculate_A = mkA "apiculate" ;
lin apicultural_A = mkA "apicultural" ;
lin apiculture_N = mkN "apiculture" "apicultures";
lin apiece_Adv = mkAdv "apiece";
lin apish_A = compoundA (mkA "apish");
lin apishamore_N = mkN "apishamore" ;
lin apivorous_A = mkA "apivorous" ;
lin aplacental_A = mkA "aplacental" ;
lin aplanatic_A = mkA "aplanatic" ;
lin aplasia_N = mkN "aplasia" ;
lin aplite_N = mkN "aplite" ;
lin aplitic_A = mkA "aplitic" ;
lin aplomb_N = mkN "aplomb" ;
lin apnea_N = mkN "apnea" ;
lin apneic_A = mkA "apneic" ;
lin apoapsis_N = mkN "apoapsis" ;
lin apocalypse_N = mkN "apocalypse" "apocalypses";
lin apocalyptic_A = compoundA (mkA "apocalyptic");
lin apocarpous_A = mkA "apocarpous" ;
lin apochromatic_A = mkA "apochromatic" ;
lin apocope_N = mkN "apocope" ;
lin apocrine_A = mkA "apocrine" ;
lin apocrypha_N = mkN "apocrypha" "apocrypha";
lin apocryphal_A = compoundA (mkA "apocryphal");
lin apocynaceous_A = mkA "apocynaceous" ;
lin apodal_A = mkA "apodal" ;
lin apodeme_N = mkN "apodeme" ;
lin apodictic_A = mkA "apodictic" ;
lin apoenzyme_N = mkN "apoenzyme" ;
lin apogamic_A = mkA "apogamic" ;
lin apogamy_N = mkN "apogamy" ;
lin apogean_A = mkA "apogean" ;
lin apogee_N = mkN "apogee" "apogees";
lin apojove_N = mkN "apojove" ;
lin apolemia_N = mkN "apolemia" ;
lin apolitical_A = mkA "apolitical" ;
lin apologetic_A = compoundA (mkA "apologetic");
lin apologetically_Adv = mkAdv "apologetically";
lin apologetics_N = mkN "apologetics" "apologetics";
lin apologist_N = mkN "apologist" "apologists";
lin apologize_V = mkV "apologize" "apologizes" "apologized" "apologized" "apologizing";
lin apology_N = mkN "apology" "apologies";
lin apomict_N = mkN "apomict" ;
lin apomictic_A = mkA "apomictic" ;
lin apomixis_N = mkN "apomixis" ;
lin apomorphine_N = mkN "apomorphine" ;
lin aponeurosis_N = mkN "aponeurosis" ;
lin aponeurotic_A = mkA "aponeurotic" ;
lin apopemptic_A = mkA "apopemptic" ;
lin apophasis_N = mkN "apophasis" ;
lin apophatic_A = mkA "apophatic" ;
lin apophatism_N = mkN "apophatism" ;
lin apophthegm_N = mkN "apophthegm" "apophthegms";
lin apophyseal_A = mkA "apophyseal" ;
lin apophysis_N = mkN "apophysis" ;
lin apoplectic_A = compoundA (mkA "apoplectic");
lin apoplectiform_A = mkA "apoplectiform" ;
lin apoplexy_N = mkN "apoplexy" ;
lin apoptosis_N = mkN "apoptosis" ;
lin aposelene_N = mkN "aposelene" ;
lin aposiopesis_N = mkN "aposiopesis" ;
lin aposiopetic_A = mkA "aposiopetic" ;
lin apostasy_N = mkN "apostasy" "apostasies";
lin apostate_A = compoundA (mkA "apostate");
lin apostate_N = mkN "apostate" "apostates";
lin apostle_N = mkN "apostle" "apostles";
lin apostleship_N = mkN "apostleship" ;
lin apostolic_A = compoundA (mkA "apostolic");
lin apostrophe_N = mkN "apostrophe" "apostrophes";
lin apostrophic_A = mkA "apostrophic" ;
lin apostrophize_V2 = mkV2 (mkV "apostrophize" "apostrophizes" "apostrophized" "apostrophized" "apostrophizing");
lin apothecary_N = mkN "apothecary" "apothecaries";
lin apothecial_A = mkA "apothecial" ;
lin apothecium_N = mkN "apothecium" ;
lin apothegm_N = mkN "apothegm" "apothegms";
lin apothegmatic_A = mkA "apothegmatic" ;
lin apotheosis_N = mkN "apotheosis" "apotheoses" {- FIXME: guessed plural form -};
lin apotropaic_A = mkA "apotropaic" ;
lin appal_V2 = mkV2 (mkV "appal" "appals" "appalled" "appalled" "appalling");
lin appalling_A = compoundA (mkA "appalling");
lin appalling_N = mkN "appalling" ;
lin appanage_N = mkN "appanage" ;
lin apparatchik_N = mkN "apparatchik" ;
lin apparatus_N = mkN "apparatus" "apparatuses";
lin apparel_N = mkN "apparel" ;
lin apparel_V2 = mkV2 (mkV "apparel" "apparels" "apparelled" "apparelled" "apparelling");
lin appareled_A = mkA "appareled" ;
lin apparent_A = compoundA (mkA "apparent");
lin apparentness_N = mkN "apparentness" ;
lin apparition_N = mkN "apparition" "apparitions";
lin apparitional_A = mkA "apparitional" ;
lin appeal_N = mkN "appeal" "appeals";
lin appeal_V = mkV "appeal";
lin appeal_V2 = mkV2 (mkV "appeal");
lin appeal_V2V = mkV2V (mkV "appeal" "appeals" "appealed" "appealed" "appealing") to_Prep to_Prep;
lin appealable_A = mkA "appealable" ;
lin appealingly_Adv = mkAdv "appealingly" ;
lin appear_V = mkV "appear" "appears" "appeared" "appeared" "appearing";
lin appear_V2 = mkV2 (mkV "appear" "appears" "appeared" "appeared" "appearing");
lin appear_VA = mkVA (mkV "appear" "appears" "appeared" "appeared" "appearing");
lin appear_VS = mkVS (mkV "appear" "appears" "appeared" "appeared" "appearing");
lin appear_VV = mkVV (mkV "appear" "appears" "appeared" "appeared" "appearing");
lin appearance_N = mkN "appearance" "appearances";
lin appeasable_A = mkA "appeasable" ;
lin appease_V2 = mkV2 (mkV "appease" "appeases" "appeased" "appeased" "appeasing");
lin appeasement_N = mkN "appeasement" ;
lin appeaser_N = mkN "appeaser" ;
lin appellant_A = compoundA (mkA "appellant");
lin appellant_N = mkN "appellant" "appellants";
lin appellate_A = mkA "appellate" ;
lin appellation_N = mkN "appellation" "appellations";
lin appellative_A = mkA "appellative" ;
lin append_V2 = mkV2 (mkV "append" "appends" "appended" "appended" "appending");
lin appendage_N = mkN "appendage" "appendages";
lin appendaged_A = mkA "appendaged" ;
lin appendant_A = mkA "appendant" ;
lin appendectomy_N = mkN "appendectomy" "appendectomies";
lin appendicitis_N = mkN "appendicitis" ;
lin appendicle_N = mkN "appendicle" ;
lin appendicular_A = mkA "appendicular" ;
lin appendicularia_N = mkN "appendicularia" ;
lin appendix_N = mkN "appendix" "appendixes";
lin apperception_N = mkN "apperception" ;
lin apperceptive_A = mkA "apperceptive" ;
lin appertain_V = mkV "appertain" "appertains" "appertained" "appertained" "appertaining";
lin appetent_A = mkA "appetent" ;
lin appetite_N = mkN "appetite" "appetites";
lin appetitive_A = mkA "appetitive" ;
lin appetizer_N = mkN "appetizer" "appetizers";
lin appetizing_A = compoundA (mkA "appetizing");
lin appetizingness_N = mkN "appetizingness" ;
lin applaud_V = mkV "applaud" "applauds" "applauded" "applauded" "applauding";
lin applaud_V2 = mkV2 (mkV "applaud" "applauds" "applauded" "applauded" "applauding");
lin applaudable_A = mkA "applaudable" ;
lin applause_N = mkN "applause" ;
lin apple_N = mkN "apple" "apples";
lin applecart_N = mkN "applecart" ;
lin applejack_N = mkN "applejack" ;
lin applesauce_N = mkN "applesauce" ;
lin applet_N = mkN "applet" ;
lin applewood_N = mkN "applewood" ;
lin appliance_N = mkN "appliance" "appliances";
lin applicability_N = mkN "applicability" ;
lin applicable_A = compoundA (mkA "applicable");
lin applicant_N = mkN "applicant" "applicants";
lin application_N = mkN "application" "applications";
lin applicative_A = mkA "applicative" ;
lin applicator_N = mkN "applicator" ;
lin applique_N = mkN "appliqué" ;
lin applique_V2 = mkV2 (mkV "appliqué" "appliqués" "appliquéed" "appliquéed" "appliquéing");
lin apply_V = mkV "apply" "applies" "applied" "applied" "applying";
lin apply_V2 = mkV2 (mkV "apply" "applies" "applied" "applied" "applying");
lin apply_V2V = mkV2V (mkV "apply" "applies" "applied" "applied" "applying") noPrep to_Prep ;
lin apply_VV = mkVV (mkV "apply" "applies" "applied" "applied" "applying");
lin appoint_V2 = mkV2 (mkV "appoint" "appoints" "appointed" "appointed" "appointing");
lin appoint_V2V = mkV2V (mkV "appoint") noPrep to_Prep ;
lin appoint_V3 = mkV3 (mkV "appoint" "appoints" "appointed" "appointed" "appointing");
lin appoint_VS = mkVS (mkV "appoint");
lin appointee_N = mkN "appointee" "appointees";
lin appointive_A = mkA "appointive" ;
lin appointment_N = mkN "appointment" "appointments";
lin apportion_V2 = mkV2 (mkV "apportion" "apportions" "apportioned" "apportioned" "apportioning");
lin apportionment_N = mkN "apportionment" ;
lin apposite_A = compoundA (mkA "apposite");
lin apposition_N = mkN "apposition" ;
lin appositional_A = mkA "appositional" ;
lin appositively_Adv = mkAdv "appositively" ;
lin appraisal_N = mkN "appraisal" "appraisals";
lin appraise_V2 = mkV2 (mkV "appraise" "appraises" "appraised" "appraised" "appraising");
lin appraiser_N = mkN "appraiser" ;
lin appreciable_A = compoundA (mkA "appreciable");
lin appreciate_V = mkV "appreciate" "appreciates" "appreciated" "appreciated" "appreciating";
lin appreciate_V2 = mkV2 (mkV "appreciate" "appreciates" "appreciated" "appreciated" "appreciating");
lin appreciation_N = mkN "appreciation" "appreciations";
lin appreciative_A = compoundA (mkA "appreciative");
lin appreciator_N = mkN "appreciator" ;
lin apprehend_V2 = mkV2 (mkV "apprehend" "apprehends" "apprehended" "apprehended" "apprehending");
lin apprehender_N = mkN "apprehender" ;
lin apprehensible_A = compoundA (mkA "apprehensible");
lin apprehension_N = mkN "apprehension" "apprehensions";
lin apprehensive_A = compoundA (mkA "apprehensive");
lin apprentice_N = mkN "apprentice" "apprentices";
lin apprentice_V2 = mkV2 (mkV "apprentice" "apprentices" "apprenticed" "apprenticed" "apprenticing");
lin apprenticeship_N = mkN "apprenticeship" "apprenticeships";
lin appressed_A = mkA "appressed" ;
lin apprise_V2 = mkV2 (mkV "apprise" "apprises" "apprised" "apprised" "apprising");
lin appro_N = mkN "appro" ;
lin approach_N = mkN "approach" "approaches";
lin approach_V = mkV "approach" "approaches" "approached" "approached" "approaching";
lin approach_V2 = mkV2 (mkV "approach" "approaches" "approached" "approached" "approaching");
lin approachability_N = mkN "approachability";
lin approachable_A = compoundA (mkA "approachable");
lin approbation_N = mkN "approbation" ;
lin appropriable_A = mkA "appropriable" ;
lin appropriate_A = compoundA (mkA "appropriate");
lin appropriate_V2 = mkV2 (mkV "appropriate" "appropriates" "appropriated" "appropriated" "appropriating");
lin appropriateness_N = mkN "appropriateness" ;
lin appropriation_N = mkN "appropriation" "appropriations";
lin appropriative_A = mkA "appropriative" ;
lin appropriator_N = mkN "appropriator" ;
lin approval_N = mkN "approval" ;
lin approve_V = mkV "approve" "approves" "approved" "approved" "approving";
lin approve_V2 = mkV2 (mkV "approve" "approves" "approved" "approved" "approving");
lin approver_N = mkN "approver" ;
lin approvingly_Adv = mkAdv "approvingly";
lin approx_PN = mkPN "Approx";
lin approximate_A = compoundA (mkA "approximate");
lin approximate_V = mkV "approximate" "approximates" "approximated" "approximated" "approximating";
lin approximate_V2 = mkV2 (mkV "approximate" "approximates" "approximated" "approximated" "approximating");
lin approximation_N = mkN "approximation" "approximations";
lin appurtenance_N = mkN "appurtenance" "appurtenances";
lin apr_PN = mkPN "Apr";
lin apractic_A = mkA "apractic" ;
lin apraxia_N = mkN "apraxia" ;
lin apres_ski_A = compoundA (mkA "après-ski");
lin apricot_N = mkN "apricot" "apricots";
lin april_N = mkN "April" "Aprils";
lin april_PN = mkPN "April";
lin apron_N = mkN "apron" "aprons";
lin apropos_A = compoundA (mkA "apropos");
lin apropos_Adv = mkAdv "apropos";
lin apse_N = mkN "apse" "apses";
lin apsidal_A = mkA "apsidal" ;
lin apt_A = mkA "apt" "apter";
lin apteral_A = mkA "apteral" ;
lin apterous_A = mkA "apterous" ;
lin aptitude_N = mkN "aptitude" "aptitudes";
lin aptitudinal_A = mkA "aptitudinal" ;
lin aptness_N = mkN "aptness" ;
lin aquaculture_N = mkN "aquaculture" ;
lin aqualung_N = mkN "aqualung" "aqualungs";
lin aquamarine_N = mkN "aquamarine" "aquamarines";
lin aquanaut_N = mkN "aquanaut" "aquanauts";
lin aquaphobia_N = mkN "aquaphobia" ;
lin aquaplane_N = mkN "aquaplane" "aquaplanes";
lin aquaplane_V = mkV "aquaplane" "aquaplanes" "aquaplaned" "aquaplaned" "aquaplaning";
lin aquarium_N = mkN "aquarium" "aquariums";
lin aquarius_PN = mkPN "Aquarius";
lin aquatic_A = compoundA (mkA "aquatic");
lin aquatic_N = mkN "aquatic" ;
lin aquatint_N = mkN "aquatint" "aquatints";
lin aquavit_N = mkN "aquavit" ;
lin aqueduct_N = mkN "aqueduct" "aqueducts";
lin aqueous_A = compoundA (mkA "aqueous");
lin aquicultural_A = mkA "aquicultural" ;
lin aquifer_N = mkN "aquifer" ;
lin aquiferous_A = mkA "aquiferous" ;
lin aquiline_A = compoundA (mkA "aquiline");
lin arab_N = mkN "Arab" "Arabs";
lin arabesque_N = mkN "arabesque" "arabesques";
lin arabian_A = compoundA (mkA "Arabian");
lin arabianMasc_N = mkN masculine (mkN "Arabian" "Arabians");
lin arabianFem_N = mkN feminine (mkN "Arabian" "Arabians");
lin arabic_A = compoundA (mkA "Arabic");
lin arabic_N = mkN "Arabic" ;
lin arability_N = mkN "arability" ;
lin arabist_N = mkN "arabist" "arabists";
lin arable_A = compoundA (mkA "arable");
lin arachnid_N = mkN "arachnid" "arachnids";
lin arachnoid_A = mkA "arachnoid" ;
lin arachnoid_N = mkN "arachnoid" ;
lin arachnophobia_N = mkN "arachnophobia" ;
lin aragonite_N = mkN "aragonite" ;
lin aralia_N = mkN "aralia" ;
lin arame_N = mkN "arame" ;
lin araneidal_A = mkA "araneidal" ;
lin arariba_N = mkN "arariba" ;
lin araroba_N = mkN "araroba" ;
lin araucaria_N = mkN "araucaria" ;
lin arbiter_N = mkN "arbiter" "arbiters";
lin arbitrable_A = mkA "arbitrable" ;
lin arbitrage_N = mkN "arbitrage" ;
lin arbitrageur_N = mkN (variants {"arbitrager"; "arbitrageur"}) ;
lin arbitral_A = mkA "arbitral" ;
lin arbitrament_N = mkN "arbitrament" "arbitraments";
lin arbitrary_A = compoundA (mkA "arbitrary");
lin arbitrate_V = mkV "arbitrate" "arbitrates" "arbitrated" "arbitrated" "arbitrating";
lin arbitrate_V2 = mkV2 (mkV "arbitrate" "arbitrates" "arbitrated" "arbitrated" "arbitrating");
lin arbitration_N = mkN "arbitration" "arbitrations";
lin arbitrative_A = mkA "arbitrative" ;
lin arbitrator_N = mkN "arbitrator" "arbitrators";
lin arbor_N = mkN "arbor" ;
lin arboraceous_A = mkA "arboraceous" ;
lin arboreal_A = compoundA (mkA "arboreal");
lin arboretum_N = mkN "arboretum" ;
lin arborical_A = mkA "arborical" ;
lin arboriculture_N = mkN "arboriculture" ;
lin arborolatry_N = mkN "arborolatry" ;
lin arborvitae_N = mkN "arborvitae" ;
lin arbour_N = mkN "arbour" "arbours";
lin arbovirus_N = mkN "arbovirus" ;
lin arbroath_PN = mkPN "Arbroath";
lin arbutus_N = mkN "arbutus" ;
lin arc_N = mkN "arc" "arcs";
lin arc_lamp_N = mkN "arc-lamp" "arc-lamps";
lin arc_light_N = mkN "arc-light" "arc-lights";
lin arcade_N = mkN "arcade" "arcades";
lin arcadian_A = compoundA (mkA "arcadian");
lin arcadian_N = mkN "arcadian" "arcadians";
lin arcane_A = compoundA (mkA "arcane");
lin arced_A = mkA "arced" ;
lin arcella_N = mkN "arcella" ;
lin arch_A = compoundA (mkA "arch");
lin arch_N = mkN "arch" "arches";
lin arch_V = mkV "arch" "arches" "arched" "arched" "arching";
lin arch_V2 = mkV2 (mkV "arch" "arches" "arched" "arched" "arching");
lin archaebacteria_N = mkN "archaebacteria" ;
lin archaeological_A = compoundA (mkA "archaeological");
lin archaeologist_N = mkN "archaeologist" "archaeologists";
lin archaeology_N = mkN "archaeology" ;
lin archaeopteryx_N = mkN "archaeopteryx" ;
lin archaeornis_N = mkN "archaeornis" ;
lin archaic_A = compoundA (mkA "archaic");
lin archaism_N = mkN "archaism" "archaisms";
lin archaist_N = mkN "archaist" ;
lin archaistic_A = mkA "archaistic" ;
lin archangel_N = mkN "archangel" "archangels";
lin archangelic_A = mkA "archangelic" ;
lin archbishop_N = mkN "archbishop" "archbishops";
lin archbishopric_N = mkN "archbishopric" "archbishoprics";
lin archdeacon_N = mkN "archdeacon" "archdeacons";
lin archdeaconry_N = mkN "archdeaconry" "archdeaconries";
lin archdiocesan_A = mkA "archdiocesan" ;
lin archdiocese_N = mkN "archdiocese" "archdioceses";
lin archducal_A = mkA "archducal" ;
lin archduchess_N = mkN "archduchess" ;
lin archduchy_N = mkN "archduchy" ;
lin archduke_N = mkN "archduke" "archdukes";
lin archean_A = mkA "archean" ;
lin archegonial_A = mkA "archegonial" ;
lin archegonium_N = mkN "archegonium" ;
lin archenteron_N = mkN "archenteron" ;
lin archeologist_N = mkN "archeologist" ;
lin archeology_N = mkN "archeology" ;
lin archeozoic_A = mkA "archeozoic" ;
lin archer_N = mkN "archer" "archers";
lin archerfish_N = mkN "archerfish" ;
lin archery_N = mkN "archery" ;
lin archespore_N = mkN "archespore" ;
lin archesporial_A = mkA "archesporial" ;
lin archetypal_A = compoundA (mkA "archetypal");
lin archetype_N = mkN "archetype" "archetypes";
lin archiannelid_N = mkN "archiannelid" ;
lin archidiaconal_A = mkA "archidiaconal" ;
lin archidiaconate_N = mkN "archidiaconate" ;
lin archiepiscopal_A = mkA "archiepiscopal" ;
lin archil_N = mkN "archil" ;
lin archimandrite_N = mkN "archimandrite" "archimandrites";
lin archine_N = mkN "archine" ;
lin archipallium_N = mkN "archipallium" ;
lin archipelagic_A = mkA "archipelagic" ;
lin archipelago_N = mkN "archipelago" "archipelagos";
lin architectMasc_N = mkN masculine (mkN "architect" "architects");
lin architectFem_N = mkN feminine (mkN "architect" "architects");
lin architectonics_N = mkN "architectonics" ;
lin architectural_A = compoundA (mkA "architectural");
lin architecture_N = mkN "architecture" ;
lin architeuthis_N = mkN "architeuthis" ;
lin architrave_N = mkN "architrave" ;
lin archival_A = mkA "archival" ;
lin archive_N = mkN "archive" ;
lin archives_N = mkN "archives" ;
lin archivist_N = mkN "archivist" "archivists";
lin archosaur_N = mkN "archosaur" ;
lin archosaurian_A = mkA "archosaurian" ;
lin archpriest_N = mkN "archpriest" ;
lin archway_N = mkN "archway" "archways";
lin arco_A = mkA "arco" ;
lin arctic_A = compoundA (mkA "arctic");
lin arctic_N = mkN "arctic" ;
lin arctiid_N = mkN "arctiid" ;
lin arcus_N = mkN "arcus" ;
lin ardeb_N = mkN "ardeb" ;
lin ardent_A = compoundA (mkA "ardent");
lin ardor_N = mkN "ardor" ;
lin ardour_N = mkN "ardour" "ardours";
lin ardrossan_PN = mkPN "Ardrossan";
lin arduous_A = compoundA (mkA "arduous");
lin arduousness_N = mkN "arduousness" ;
lin are_N = mkN "are" "ares";
lin area_1_N = mkN "area" "areas";
lin area_2_N = mkN "area" "areas";
lin area_3_N = mkN "area" "areas";
lin area_4_N = mkN "area" "areas";
lin area_5_N = mkN "area" "areas";
lin area_6_N = mkN "area" "areas";
lin areal_A = mkA "areal" ;
lin areaway_N = mkN "areaway" ;
lin areca_N = mkN "areca" "arecas";
lin areflexia_N = mkN "areflexia" ;
lin arena_N = mkN "arena" "arenas";
lin arenaceous_A = mkA "arenaceous" ;
lin arenavirus_N = mkN "arenavirus" ;
lin arenicolous_A = mkA "arenicolous" ;
lin areola_N = mkN "areola" ;
lin areolar_A = mkA "areolar" ;
lin arete_N = mkN "arête" "arêtes";
lin arethusa_N = mkN "arethusa" ;
lin argali_N = mkN "argali" ;
lin argent_A = compoundA (mkA "argent");
lin argent_N = mkN "argent" "argents";
lin argentic_A = mkA "argentic" ;
lin argentiferous_A = mkA "argentiferous" ;
lin argentina_PN = mkPN "Argentina";
lin argentine_N = mkN "argentine" ;
lin argentine_PN = mkPN "Argentine";
lin argentinian_A = compoundA (mkA "argentinian");
lin argentinian_N = mkN "argentinian" "argentinians";
lin argentinosaur_N = mkN "argentinosaur" ;
lin argentite_N = mkN "argentite" ;
lin argentous_A = mkA "argentous" ;
lin argil_N = mkN "argil" ;
lin argillaceous_A = mkA "argillaceous" ;
lin argillite_N = mkN "argillite" ;
lin arginine_N = mkN "arginine" ;
lin argon_N = mkN "argon" ;
lin argonaut_N = mkN "argonaut" "argonauts";
lin argosy_N = mkN "argosy" "argosies";
lin argot_N = mkN "argot" ;
lin arguable_A = compoundA (mkA "arguable");
lin argue_V = mkV "argue" "argues" "argued" "argued" "arguing";
lin argue_V2 = mkV2 (mkV "argue" "argues" "argued" "argued" "arguing");
lin argue_VS = mkVS (mkV "argue" "argues" "argued" "argued" "arguing");
lin argument_N = mkN "argument" "arguments";
lin argumentation_N = mkN "argumentation" ;
lin argumentative_A = compoundA (mkA "argumentative");
lin argus_N = mkN "argus" "arguses";
lin argus_eyed_A = compoundA (mkA "argus-eyed");
lin argyle_N = mkN "argyle" ;
lin argyll_N = mkN "argyll" ;
lin argyrodite_N = mkN "argyrodite" ;
lin aria_N = mkN "aria" "arias";
lin arianist_N = mkN "arianist" ;
lin arid_A = compoundA (mkA "arid");
lin aridity_N = mkN "aridity" ;
lin aries_PN = mkPN "Aries";
lin arietta_N = mkN "arietta" ;
lin aright_Adv = mkAdv "aright";
lin aril_N = mkN "aril" ;
lin ariled_A = mkA "ariled" ;
lin ariose_A = mkA "ariose" ;
lin arioso_N = mkN "arioso" ;
lin arise_V = mkV "a" IrregEng.rise_V;
lin arise_VS = mkVS (mkV "a" IrregEng.rise_V);
lin arista_N = mkN "arista" ;
lin aristocracy_N = mkN "aristocracy" "aristocracies";
lin aristocrat_N = mkN "aristocrat" "aristocrats";
lin aristocratic_A = compoundA (mkA "aristocratic");
lin aristocratically_Adv = mkAdv "aristocratically";
lin arithmancy_N = mkN "arithmancy" ;
lin arithmetic_N = mkN "arithmetic" ;
lin arithmetical_A = compoundA (mkA "arithmetical");
lin arithmetician_N = mkN "arithmetician" "arithmeticians";
lin arity_N = mkN "arity" ;
lin arizona_PN = mkPN "Arizona";
lin ark_N = mkN "ark" "arks";
lin arkansas_PN = mkPN "Arkansas";
lin arm_N = mkN "arm" "arms";
lin arm_V = mkV "arm" "arms" "armed" "armed" "arming";
lin arm_V2 = mkV2 (mkV "arm" "arms" "armed" "armed" "arming");
lin arm_hole_N = mkN "arm-hole" "arm-holes";
lin armada_N = mkN "armada" "armadas";
lin armadale_PN = mkPN "Armadale";
lin armadillo_N = mkN "armadillo" "armadillos";
lin armageddon_PN = mkPN "Armageddon";
lin armagh_PN = mkPN "Armagh";
lin armament_N = mkN "armament" "armaments";
lin armamentarium_N = mkN "armamentarium" ;
lin armature_N = mkN "armature" "armatures";
lin armband_N = mkN "armband" "armbands";
lin armchair_N = mkN "armchair" "armchairs";
lin armenian_N = mkN "Armenian";
lin armet_N = mkN "armet" ;
lin armful_N = mkN "armful" "armfuls";
lin armhole_N = mkN "armhole" ;
lin armiger_N = mkN "armiger" ;
lin armilla_N = mkN "armilla" ;
lin armillary_A = mkA "armillary" ;
lin arming_N = mkN "arming" ;
lin armistice_N = mkN "armistice" "armistices";
lin armless_A = mkA "armless" ;
lin armlet_N = mkN "armlet" "armlets";
lin armlike_A = mkA "armlike" ;
lin armoire_N = mkN "armoire" "armoires";
lin armor_N = mkN "armor" ;
lin armored_A = mkA "armored" ;
lin armorer_N = mkN "armorer" ;
lin armorial_A = compoundA (mkA "armorial");
lin armory_N = mkN "armory" ;
lin armour_N = mkN "armour" ;
lin armour_plate_N = mkN "armour-plate" "armour-plates";
lin armoured_A = compoundA (mkA "armoured");
lin armourer_N = mkN "armourer" "armourers";
lin armoury_N = mkN "armoury" "armouries";
lin armpit_N = mkN "armpit" "armpits";
lin armrest_N = mkN "armrest" ;
lin arms_race_N = mkN "arms-race" "IRREG";
lin arms_runner_N = mkN "arms-runner" "arms-runners";
lin army_N = mkN "army" "armies";
lin armyworm_N = mkN "armyworm" ;
lin arnhem_PN = mkPN "Arnhem";
lin arnica_N = mkN "arnica" ;
lin arnold_PN = mkPN "Arnold";
lin aroid_A = mkA "aroid" ;
lin aroma_N = mkN "aroma" "aromas";
lin aromatherapy_N = mkN "aromatherapy" ;
lin aromatic_A = compoundA (mkA "aromatic");
lin arose_V2 = mkV2 (mkV "arose");
lin around_AdN = mkAdN "around";
lin around_Adv = mkAdv "around";
lin around_Prep = mkPrep "around";
lin arousal_N = mkN "arousal" ;
lin arouse_V2 = mkV2 (mkV "arouse" "arouses" "aroused" "aroused" "arousing");
lin arouse_V2V = mkV2V (mkV "arouse") noPrep to_Prep ;
lin arpeggio_N = mkN "arpeggio" "arpeggios";
lin arpent_N = mkN "arpent" ;
lin arquebus_N = mkN "arquebus" "arquebuses";
lin arr_PN = mkPN "Arr";
lin arrack_N = mkN "arrack" ;
lin arraign_V2 = mkV2 (mkV "arraign" "arraigns" "arraigned" "arraigned" "arraigning");
lin arraignment_N = mkN "arraignment" "arraignments";
lin arrange_V = mkV "arrange" "arranges" "arranged" "arranged" "arranging";
lin arrange_V2 = mkV2 (mkV "arrange" "arranges" "arranged" "arranged" "arranging");
lin arrangement_N = mkN "arrangement" "arrangements";
lin arranger_N = mkN "arranger" ;
lin arrant_A = compoundA (mkA "arrant");
lin arras_N = mkN "arras" "arrases";
lin array_N = mkN "array" "arrays";
lin array_V2 = mkV2 (mkV "array" "arrays" "arrayed" "arrayed" "arraying");
lin arrears_N = mkN "arrears" ;
lin arrest_N = mkN "arrest" "arrests";
lin arrest_V2 = mkV2 (mkV "arrest" "arrests" "arrested" "arrested" "arresting");
lin arrester_N = mkN "arrester" "arresters";
lin arresting_A = compoundA (mkA "arresting");
lin arrhythmic_A = mkA "arrhythmic" ;
lin arriere_pensee_N = mkN "arrière pensée" "arrière pensées";
lin arrival_N = mkN "arrival" "arrivals";
lin arrive_V = mkV "arrive" "arrives" "arrived" "arrived" "arriving";
lin arrive_V2 = mkV2 (mkV "arrive" "arrives" "arrived" "arrived" "arriving");
lin arroba_N = mkN "arroba" ;
lin arrogance_N = mkN "arrogance" ;
lin arrogant_A = compoundA (mkA "arrogant");
lin arrogate_V2 = mkV2 (mkV "arrogate" "arrogates" "arrogated" "arrogated" "arrogating");
lin arrogator_N = mkN "arrogator" ;
lin arrow_N = mkN "arrow" "arrows";
lin arrowhead_N = mkN "arrowhead" "arrowheads";
lin arrowroot_N = mkN "arrowroot" ;
lin arrowsmith_N = mkN "arrowsmith" ;
lin arrowworm_N = mkN "arrowworm" ;
lin arroyo_N = mkN "arroyo" ;
lin arse_N = mkN "arse" "arses";
lin arsehole_N = mkN "arsehole" "arseholes";
lin arsenal_N = mkN "arsenal" "arsenals";
lin arsenate_N = mkN "arsenate" ;
lin arsenic_N = mkN "arsenic" ;
lin arsenical_A = mkA "arsenical" ;
lin arsenical_N = mkN "arsenical" ;
lin arsenide_N = mkN "arsenide" ;
lin arsenious_A = mkA "arsenious" ;
lin arsenopyrite_N = mkN "arsenopyrite" ;
lin arsine_N = mkN "arsine" ;
lin arson_N = mkN "arson" ;
lin arsonist_N = mkN "arsonist" ;
lin art_N = mkN "art" "arts";
lin art_PN = mkPN "Art";
lin artefact_N = mkN "artefact" "artefacts";
lin artemisia_N = mkN "artemisia" ;
lin arterial_A = compoundA (mkA "arterial");
lin arteriectasis_N = mkN "arteriectasis" ;
lin arteriogram_N = mkN "arteriogram" ;
lin arteriography_N = mkN "arteriography" ;
lin arteriolar_A = mkA "arteriolar" ;
lin arteriole_N = mkN "arteriole" ;
lin arteriolosclerosis_N = mkN "arteriolosclerosis" ;
lin arteriosclerosis_N = mkN "arteriosclerosis" ;
lin arteriosclerotic_A = mkA "arteriosclerotic" ;
lin arteriovenous_A = mkA "arteriovenous" ;
lin arteritis_N = mkN "arteritis" ;
lin artery_N = mkN "artery" "arteries";
lin artesian_A = compoundA (mkA "artesian");
lin artful_A = compoundA (mkA "artful");
lin artfulness_N = mkN "artfulness" ;
lin arthralgia_N = mkN "arthralgia" ;
lin arthralgic_A = mkA "arthralgic" ;
lin arthritic_A = compoundA (mkA "arthritic");
lin arthritic_N = mkN "arthritic" ;
lin arthritis_N = mkN "arthritis" ;
lin arthrocentesis_N = mkN "arthrocentesis" ;
lin arthrodesis_N = mkN "arthrodesis" ;
lin arthrogram_N = mkN "arthrogram" ;
lin arthrography_N = mkN "arthrography" ;
lin arthromere_N = mkN "arthromere" ;
lin arthromeric_A = mkA "arthromeric" ;
lin arthropathy_N = mkN "arthropathy" ;
lin arthroplasty_N = mkN "arthroplasty" ;
lin arthropod_N = mkN "arthropod" ;
lin arthropodal_A = mkA "arthropodal" ;
lin arthroscope_N = mkN "arthroscope" ;
lin arthroscopy_N = mkN "arthroscopy" ;
lin arthrospore_N = mkN "arthrospore" ;
lin arthrosporic_A = mkA "arthrosporic" ;
lin arthur_PN = mkPN "Arthur";
lin artichoke_N = mkN "artichoke" "artichokes";
lin article_N = mkN "article" "articles";
lin article_V2 = mkV2 (mkV "article" "articles" "articled" "articled" "articling");
lin articular_A = mkA "articular" ;
lin articulate_A = compoundA (mkA "articulate");
lin articulate_V = mkV "articulate" "articulates" "articulated" "articulated" "articulating";
lin articulate_V2 = mkV2 (mkV "articulate" "articulates" "articulated" "articulated" "articulating");
lin articulation_N = mkN "articulation" ;
lin articulator_N = mkN "articulator" ;
lin articulatory_A = mkA "articulatory" ;
lin artie_PN = mkPN "Artie";
lin artifact_N = mkN "artifact" "artifacts";
lin artifactual_A = mkA "artifactual" ;
lin artifice_N = mkN "artifice" "artifices";
lin artificer_N = mkN "artificer" "artificers";
lin artificial_A = compoundA (mkA "artificial");
lin artificiality_N = mkN "artificiality" ;
lin artillery_N = mkN "artillery" ;
lin artilleryman_N = mkN masculine (mkN "artilleryman");
lin artiodactyl_A = mkA "artiodactyl" ;
lin artisan_N = mkN "artisan" "artisans";
lin artist_N = mkN "artist" "artists";
lin artiste_N = mkN "artiste" "artistes";
lin artistic_A = compoundA (mkA "artistic");
lin artistically_Adv = mkAdv "artistically";
lin artistry_N = mkN "artistry" ;
lin artless_A = compoundA (mkA "artless");
lin artlessness_N = mkN "artlessness" ;
lin artwork_N = mkN "artwork" ;
lin arty_A = compoundA (mkA "arty");
lin arty_crafty_A = compoundA (mkA "arty-crafty");
lin arum_N = mkN "arum" "arums";
lin arundinaceous_A = mkA "arundinaceous" ;
lin aryan_A = compoundA (mkA "aryan");
lin aryanMasc_N = mkN masculine (mkN "aryan" "aryans");
lin aryanFem_N = mkN feminine (mkN "aryan" "aryans");
lin arytenoid_N = mkN "arytenoid" ;
lin as_Prep = mkPrep "as";
lin as_Subj = mkSubj "as";
lin as_long_as_Subj = mkSubj "as long as";
lin as_well_Adv = mkAdv "as well";
lin as_well_as_Conj = mkConj "as well as";
lin asafetida_N = mkN "asafetida" ;
lin asana_N = mkN "asana" ;
lin asap_PN = mkPN "Asap";
lin asarabacca_N = mkN "asarabacca" ;
lin asbestos_N = mkN "asbestos" ;
lin asbestosis_N = mkN "asbestosis" ;
lin ascariasis_N = mkN "ascariasis" ;
lin ascend_V = mkV "ascend" "ascends" "ascended" "ascended" "ascending";
lin ascend_V2 = mkV2 (mkV "ascend" "ascends" "ascended" "ascended" "ascending");
lin ascendable_A = mkA "ascendable" ;
lin ascendancy_N = mkN "ascendancy" ;
lin ascendant_A = mkA "ascendant" ;
lin ascendant_N = mkN "ascendant" "ascendants";
lin ascendency_N = mkN "ascendency" ;
lin ascendent_N = mkN "ascendent" "ascendents";
lin ascender_N = mkN "ascender" ;
lin ascension_N = mkN "ascension" "ascensions";
lin ascensional_A = mkA "ascensional" ;
lin ascent_N = mkN "ascent" "ascents";
lin ascertain_V2 = mkV2 (mkV "ascertain" "ascertains" "ascertained" "ascertained" "ascertaining");
lin ascertainable_A = compoundA (mkA "ascertainable");
lin ascetic_A = compoundA (mkA "ascetic");
lin ascetic_N = mkN "ascetic" "ascetics";
lin ascetically_Adv = mkAdv "ascetically";
lin asceticism_N = mkN "asceticism" ;
lin ascidian_N = mkN "ascidian" ;
lin ascites_N = mkN "ascites" ;
lin ascitic_A = mkA "ascitic" ;
lin asclepiad_N = mkN "asclepiad" ;
lin asclepiadaceous_A = mkA "asclepiadaceous" ;
lin ascocarp_N = mkN "ascocarp" ;
lin ascocarpous_A = mkA "ascocarpous" ;
lin ascolichen_N = mkN "ascolichen" ;
lin ascoma_N = mkN "ascoma" ;
lin ascomycete_N = mkN "ascomycete" ;
lin ascomycetous_A = mkA "ascomycetous" ;
lin ascorbic_A = compoundA (mkA "ascorbic");
lin ascospore_N = mkN "ascospore" ;
lin ascosporic_A = mkA "ascosporic" ;
lin ascot_N = mkN "ascot" ;
lin ascot_PN = mkPN "Ascot";
lin ascribable_A = compoundA (mkA "ascribable");
lin ascribe_V2 = mkV2 (mkV "ascribe" "ascribes" "ascribed" "ascribed" "ascribing");
lin ascription_N = mkN "ascription" "ascriptions";
lin ascus_N = mkN "ascus" ;
lin asdic_N = mkN "asdic" "asdics";
lin asepsis_N = mkN "asepsis" ;
lin aseptic_A = compoundA (mkA "aseptic");
lin asexual_A = compoundA (mkA "asexual");
lin asexuality_N = mkN "asexuality" ;
lin ash_N = mkN "ash" "ashes";
lin ash_bin_N = mkN "ash-bin" "ash-bins";
lin ash_can_N = mkN "ash-can" "ash-cans";
lin ash_key_N = mkN "ash-key" "ash-keys";
lin ash_pan_N = mkN "ash-pan" "ash-pans";
lin ashamed_A = compoundA (mkA "ashamed");
lin ashbourne_PN = mkPN "Ashbourne";
lin ashby_PN = mkPN "Ashby";
lin ashby_de_la_zouch_PN = mkPN "Ashby de la Zouch";
lin ashby_woulds_PN = mkPN "Ashby Woulds";
lin ashcake_N = mkN "ashcake" ;
lin ashcan_N = mkN "ashcan" ;
lin ashen_A = compoundA (mkA "ashen");
lin ashford_PN = mkPN "Ashford";
lin ashington_PN = mkPN "Ashington";
lin ashlar_N = mkN "ashlar" ;
lin ashore_Adv = mkAdv "ashore";
lin ashram_N = mkN "ashram" ;
lin ashton_in_makerfield_PN = mkPN "Ashton-in-makerfield";
lin ashton_under_lyne_PN = mkPN "Ashton-under-lyne";
lin ashtray_N = mkN "ashtray" "ashtrays";
lin ashy_A = compoundA (mkA "ashy");
lin asian_A = compoundA (mkA "Asian");
lin asian_N = mkN "Asian" "Asians";
lin asiatic_A = compoundA (mkA "asiatic");
lin asiatic_N = mkN "asiatic" "asiatics";
lin aside_Adv = mkAdv "aside";
lin aside_N = mkN "aside" "asides";
lin asinine_A = compoundA (mkA "asinine");
lin asininity_N = mkN "asininity" ;
lin ask_V = mkV "ask" "asks" "asked" "asked" "asking";
lin ask_V2 = mkV2 (mkV "ask");
lin ask_V2V = mkV2V (mkV "ask") noPrep to_Prep;
lin ask_VQ = mkVQ (mkV "ask" "asks" "asked" "asked" "asking");
lin ask_VS = mkVS (mkV "ask" "asks" "asked" "asked" "asking");
lin ask_VV = mkVV (mkV "ask" "asks" "asked" "asked" "asking");
lin askance_A = mkA "askance" ;
lin askance_Adv = mkAdv "askance";
lin askern_PN = mkPN "Askern";
lin askew_A = compoundA (mkA "askew");
lin askew_Adv = mkAdv "askew";
lin asking_N = mkN "asking" "IRREG";
lin aslant_A = mkA "aslant" ;
lin aslant_Adv = mkAdv "aslant";
lin asleep_A = compoundA (mkA "asleep");
lin asleep_Adv = mkAdv "asleep";
lin asocial_A = mkA "asocial" ;
lin asp_N = mkN "asp" "asps";
lin asparaginase_N = mkN "asparaginase" ;
lin asparagine_N = mkN "asparagine" ;
lin asparagus_N = mkN "asparagus" ;
lin aspartame_N = mkN "aspartame" ;
lin aspect_N = mkN "aspect" "aspects";
lin aspectual_A = compoundA (mkA "aspectual");
lin aspen_N = mkN "aspen" "aspens";
lin asper_N = mkN "asper" ;
lin aspergill_N = mkN "aspergill" ;
lin aspergillosis_N = mkN "aspergillosis" ;
lin asperity_N = mkN "asperity" "asperities";
lin asperse_V2 = mkV2 (mkV "asperse" "asperses" "aspersed" "aspersed" "aspersing");
lin aspersion_N = mkN "aspersion" "aspersions";
lin aspersorium_N = mkN "aspersorium" ;
lin asphalt_N = mkN "asphalt" ;
lin asphalt_V2 = mkV2 (mkV "asphalt" "asphalts" "asphalted" "asphalted" "asphalting");
lin asphaltic_A = mkA "asphaltic" ;
lin aspheric_A = mkA "aspheric" ;
lin asphodel_N = mkN "asphodel" "asphodels";
lin asphyxia_N = mkN "asphyxia" ;
lin asphyxiate_V2 = mkV2 (mkV "asphyxiate" "asphyxiates" "asphyxiated" "asphyxiated" "asphyxiating");
lin asphyxiating_A = mkA "asphyxiating" ;
lin asphyxiation_N = mkN "asphyxiation" ;
lin aspic_N = mkN "aspic" ;
lin aspidistra_N = mkN "aspidistra" "aspidistras";
lin aspirant_A = mkA "aspirant" ;
lin aspirant_N = mkN "aspirant" "aspirants";
lin aspirate_N = mkN "aspirate" "aspirates";
lin aspirate_V2 = mkV2 (mkV "aspirate" "aspirates" "aspirated" "aspirated" "aspirating");
lin aspiration_N = mkN "aspiration" "aspirations";
lin aspirator_N = mkN "aspirator" ;
lin aspire_V = mkV "aspire" "aspires" "aspired" "aspired" "aspiring";
lin aspire_VV = mkVV (mkV "aspire" "aspires" "aspired" "aspired" "aspiring");
lin aspirin_N = mkN "aspirin" "aspirins";
lin aspull_PN = mkPN "Aspull";
lin ass_N = mkN "ass" "asses";
lin assagai_N = mkN "assagai" "assagais";
lin assail_V2 = mkV2 (mkV "assail" "assails" "assailed" "assailed" "assailing");
lin assailability_N = mkN "assailability" ;
lin assailable_A = compoundA (mkA "assailable");
lin assailant_N = mkN "assailant" "assailants";
lin assassin_N = mkN "assassin" "assassins";
lin assassinate_V2 = mkV2 (mkV "assassinate" "assassinates" "assassinated" "assassinated" "assassinating");
lin assassination_N = mkN "assassination" "assassinations";
lin assault_N = mkN "assault" "assaults";
lin assault_V2 = mkV2 (mkV "assault" "assaults" "assaulted" "assaulted" "assaulting");
lin assaultive_A = mkA "assaultive" ;
lin assay_N = mkN "assay" "assays";
lin assay_V2 = mkV2 (mkV "assay" "assays" "assayed" "assayed" "assaying");
lin assayer_N = mkN "assayer" ;
lin assegai_N = mkN "assegai" "assegais";
lin assemblage_N = mkN "assemblage" "assemblages";
lin assemble_V = mkV "assemble" "assembles" "assembled" "assembled" "assembling";
lin assemble_V2 = mkV2 (mkV "assemble" "assembles" "assembled" "assembled" "assembling");
lin assembler_N = mkN "assembler" ;
lin assembly_N = mkN "assembly" "assemblies";
lin assemblyman_N = mkN masculine (mkN "assemblyman");
lin assemblywoman_N = mkN feminine (mkN "assemblywoman");
lin assent_N = mkN "assent" "assents";
lin assent_V = mkV "assent" "assents" "assented" "assented" "assenting";
lin assenter_N = mkN "assenter" ;
lin assentient_A = mkA "assentient" ;
lin assert_V = mkV "assert";
lin assert_V2 = mkV2 (mkV "assert" "asserts" "asserted" "asserted" "asserting");
lin assert_VS = mkVS (mkV "assert");
lin asserter_N = mkN "asserter" ;
lin assertion_N = mkN "assertion" "assertions";
lin assertive_A = compoundA (mkA "assertive");
lin assertiveness_N = mkN "assertiveness" ;
lin assess_V2 = mkV2 (mkV "assess" "assesses" "assessed" "assessed" "assessing");
lin assessable_A = mkA "assessable" ;
lin assessee_N = mkN "assessee" ;
lin assessment_N = mkN "assessment" "assessments";
lin assessor_N = mkN "assessor" "assessors";
lin asset_N = mkN "asset" "assets";
lin assets_N = mkN "assets" ;
lin asseverate_V2 = mkV2 (mkV "asseverate" "asseverates" "asseverated" "asseverated" "asseverating");
lin asseveration_N = mkN "asseveration" "asseverations";
lin asshole_N = mkN "asshole" "assholes";
lin assibilation_N = mkN "assibilation" ;
lin assiduity_N = mkN "assiduity" "assiduities";
lin assiduous_A = compoundA (mkA "assiduous");
lin assign_V2 = mkV2 (mkV "assign" "assigns" "assigned" "assigned" "assigning");
lin assign_V2V = mkV2V (mkV "assign") noPrep to_Prep ;
lin assignable_A = compoundA (mkA "assignable");
lin assignation_N = mkN "assignation" "assignations";
lin assignee_N = mkN "assignee" ;
lin assignment_N = mkN "assignment" "assignments";
lin assignor_N = mkN "assignor" ;
lin assimilable_A = mkA "assimilable" ;
lin assimilate_V = mkV "assimilate" "assimilates" "assimilated" "assimilated" "assimilating";
lin assimilate_V2 = mkV2 (mkV "assimilate" "assimilates" "assimilated" "assimilated" "assimilating");
lin assimilation_N = mkN "assimilation" ;
lin assimilative_A = mkA "assimilative" ;
lin assist_N = mkN "assist" ;
lin assist_V = mkV "assist" "assists" "assisted" "assisted" "assisting";
lin assist_V2 = mkV2 (mkV "assist" "assists" "assisted" "assisted" "assisting");
lin assistance_N = mkN "assistance" ;
lin assistant_N = mkN human (mkN "assistant" "assistants");
lin assistive_A = mkA "assistive" ;
lin assize_N = mkN "assize" ;
lin assizes_N = mkN "assizes" ;
lin assoc_N = mkN "assoc" ;
lin associability_N = mkN "associability" ;
lin associable_A = mkA "associable" ;
lin associate_A = compoundA (mkA "associate");
lin associate_N = mkN "associate" "associates";
lin associate_V = mkV "associate" "associates" "associated" "associated" "associating";
lin associate_V2 = mkV2 (mkV "associate" "associates" "associated" "associated" "associating");
lin associateship_N = mkN "associateship" ;
lin association_N = mkN "association" "associations";
lin associational_A = mkA "associational" ;
lin associationism_N = mkN "associationism" ;
lin associative_A = mkA "associative" ;
lin assonance_N = mkN "assonance" "assonances";
lin assonant_A = mkA "assonant" ;
lin assorted_A = compoundA (mkA "assorted");
lin assortment_N = mkN "assortment" "assortments";
lin asst_N = mkN "asst" ;
lin assuage_V2 = mkV2 (mkV "assuage" "assuages" "assuaged" "assuaged" "assuaging");
lin assuasive_A = mkA "assuasive" ;
lin assume_V = mkV "assume";
lin assume_V2 = mkV2 (mkV "assume" "assumes" "assumed" "assumed" "assuming");
lin assume_VS = mkVS (mkV "assume");
lin assumption_N = mkN "assumption" "assumptions";
lin assumptive_A = mkA "assumptive" ;
lin assurance_N = mkN "assurance" "assurances";
lin assure_V2 = mkV2 (mkV "assure" "assures" "assured" "assured" "assuring");
lin assure_V2S = mkV2S (mkV "assure") noPrep;
lin assuredly_Adv = mkAdv "assuredly" ;
lin assuredness_N = mkN "assuredness" ;
lin assurgent_A = mkA "assurgent" ;
lin assuring_A = mkA "assuring" ;
lin astasia_N = mkN "astasia" ;
lin astatic_A = mkA "astatic" ;
lin astatine_N = mkN "astatine" ;
lin aster_N = mkN "aster" "asters";
lin astereognosis_N = mkN "astereognosis" ;
lin asteriated_A = mkA "asteriated" ;
lin asterion_N = mkN "asterion" ;
lin asterisk_N = mkN "asterisk" "asterisks";
lin asterisked_A = mkA "asterisked" ;
lin asterism_N = mkN "asterism" ;
lin asterismal_A = mkA "asterismal" ;
lin astern_Adv = mkAdv "astern";
lin asternal_A = mkA "asternal" ;
lin asteroid_A = mkA "asteroid" ;
lin asteroid_N = mkN "asteroid" "asteroids";
lin asteroidal_A = mkA "asteroidal" ;
lin asthenia_N = mkN "asthenia" ;
lin asthenic_A = mkA "asthenic" ;
lin asthenosphere_N = mkN "asthenosphere" ;
lin asthma_N = mkN "asthma" ;
lin asthmatic_A = compoundA (mkA "asthmatic");
lin asthmatic_N = mkN "asthmatic" ;
lin astigmatic_A = compoundA (mkA "astigmatic");
lin astigmatism_N = mkN "astigmatism" ;
lin astilbe_N = mkN "astilbe" ;
lin astir_A = compoundA (mkA "astir");
lin astir_Adv = mkAdv "astir";
lin astomatal_A = mkA "astomatal" ;
lin astomatous_A = mkA "astomatous" ;
lin aston_PN = mkPN "Aston";
lin astonish_V2 = mkV2 (mkV "astonish" "astonishes" "astonished" "astonished" "astonishing");
lin astonishing_A = compoundA (mkA "astonishing");
lin astonishment_N = mkN "astonishment" ;
lin astound_V2 = mkV2 (mkV "astound" "astounds" "astounded" "astounded" "astounding");
lin astounding_A = mkA "astounding" ;
lin astragalar_A = mkA "astragalar" ;
lin astrakhan_N = mkN "astrakhan" ;
lin astral_A = compoundA (mkA "astral");
lin astrantia_N = mkN "astrantia" ;
lin astraphobia_N = mkN "astraphobia" ;
lin astray_A = compoundA (mkA "astray");
lin astray_Adv = mkAdv "astray";
lin astride_A = compoundA (mkA "astride");
lin astride_Adv = mkAdv "astride";
lin astride_Prep = mkPrep "astride";
lin astringency_N = mkN "astringency" ;
lin astringent_A = compoundA (mkA "astringent");
lin astringent_N = mkN "astringent" "astringents";
lin astrocyte_N = mkN "astrocyte" ;
lin astrocytic_A = mkA "astrocytic" ;
lin astrodome_N = mkN "astrodome" "astrodomes";
lin astrodynamics_N = mkN "astrodynamics" ;
lin astrogator_N = mkN "astrogator" ;
lin astroglia_N = mkN "astroglia" ;
lin astrolabe_N = mkN "astrolabe" "astrolabes";
lin astrolatry_N = mkN "astrolatry" ;
lin astrologer_N = mkN "astrologer" "astrologers";
lin astrological_A = compoundA (mkA "astrological");
lin astrology_N = mkN "astrology" ;
lin astrometry_N = mkN "astrometry" ;
lin astronaut_N = mkN "astronaut" "astronauts";
lin astronautic_A = mkA "astronautic" ;
lin astronautics_N = mkN "astronautics" "astronautics";
lin astronomer_N = mkN "astronomer" "astronomers";
lin astronomic_A = mkA "astronomic" ;
lin astronomical_A = compoundA (mkA "astronomical");
lin astronomy_N = mkN "astronomy" ;
lin astrophysical_A = mkA "astrophysical" ;
lin astrophysicist_N = mkN "astrophysicist" ;
lin astrophysics_N = mkN "astrophysics" "astrophysics";
lin astute_A = compoundA (mkA "astute");
lin astuteness_N = mkN "astuteness" ;
lin astylar_A = mkA "astylar" ;
lin asunder_Adv = mkAdv "asunder";
lin asylum_N = mkN "asylum" "asylums";
lin asymmetric_A = compoundA (mkA "asymmetric");
lin asymmetrical_A = compoundA (mkA "asymmetrical");
lin asymmetry_N = mkN "asymmetry" ;
lin asymptomatic_A = mkA "asymptomatic" ;
lin asymptote_N = mkN "asymptote" "asymptotes";
lin asymptotic_A = compoundA (mkA "asymptotic");
lin asymptotically_Adv = mkAdv "asymptotically";
lin asynchronism_N = mkN "asynchronism" ;
lin asynchronous_A = mkA "asynchronous" ;
lin asynclitism_N = mkN "asynclitism" ;
lin asyndetic_A = mkA "asyndetic" ;
lin asyndeton_N = mkN "asyndeton" ;
lin asynergic_A = mkA "asynergic" ;
lin asynergy_N = mkN "asynergy" ;
lin asystole_N = mkN "asystole" ;
lin at_N = mkN "at" ;
lin at_all_Adv = mkAdv "at all";
lin at_Prep = mkPrep "at";
lin at_home_Adv = mkAdv "at home" ;
lin at_home_N = mkN "at-home" "at-homes";
lin at_least_AdN = mkAdN "at least";
lin atabrine_N = mkN "atabrine" ;
lin ataractic_A = mkA "ataractic" ;
lin ataraxia_N = mkN "ataraxia" ;
lin atavism_N = mkN "atavism" "atavisms";
lin atavist_N = mkN "atavist" ;
lin atavistic_A = compoundA (mkA "atavistic");
lin ataxia_N = mkN "ataxia" ;
lin ataxic_A = mkA "ataxic" ;
lin atelectasis_N = mkN "atelectasis" ;
lin ateleiosis_N = mkN "ateleiosis" ;
lin ateleiotic_A = mkA "ateleiotic" ;
lin atelier_N = mkN "atelier" "ateliers";
lin atenolol_N = mkN "atenolol" ;
lin athanor_N = mkN "athanor" ;
lin atheism_N = mkN "atheism" ;
lin atheist_A = mkA "atheist" ;
lin atheist_N = mkN "atheist" "atheists";
lin atheistic_A = compoundA (mkA "atheistic");
lin athenaeum_N = mkN "athenaeum" ;
lin athenian_A = compoundA (mkA "athenian");
lin athenianMasc_N = mkN masculine (mkN "athenian" "athenians");
lin athenianFem_N = mkN feminine (mkN "athenian" "athenians");
lin athens_PN = mkPN "Athens";
lin atherogenesis_N = mkN "atherogenesis" ;
lin atheroma_N = mkN "atheroma" ;
lin atheromatous_A = mkA "atheromatous" ;
lin atherosclerosis_N = mkN "atherosclerosis" ;
lin atherosclerotic_A = mkA "atherosclerotic" ;
lin atherstone_PN = mkPN "Atherstone";
lin athetosis_N = mkN "athetosis" ;
lin athirst_A = compoundA (mkA "athirst");
lin athlete_N = mkN "athlete" "athletes";
lin athletic_A = compoundA (mkA "athletic");
lin athleticism_N = mkN "athleticism" ;
lin athletics_N = mkN "athletics" "athletics";
lin athlone_PN = mkPN "Athlone";
lin athwart_Adv = mkAdv "athwart";
lin atilt_A = mkA "atilt" ;
lin atlanta_PN = mkPN "Atlanta";
lin atlantic_PN = mkPN "Atlantic";
lin atlas_N = mkN "atlas" "atlases";
lin atmometer_N = mkN "atmometer" ;
lin atmosphere_N = mkN "atmosphere" "atmospheres";
lin atmospheric_A = compoundA (mkA "atmospheric");
lin atmospherics_N = mkN "atmospherics" "atmospherics";
lin atole_N = mkN "atole" ;
lin atoll_N = mkN "atoll" "atolls";
lin atom_N = mkN "atom" "atoms";
lin atomic_A = compoundA (mkA "atomic");
lin atomism_N = mkN "atomism" ;
lin atomistic_A = mkA "atomistic" ;
lin atomization_N = mkN "atomization" ;
lin atomize_V2 = mkV2 (mkV "atomize" "atomizes" "atomized" "atomized" "atomizing");
lin atomizer_N = mkN "atomizer" "atomizers";
lin atonal_A = compoundA (mkA "atonal");
lin atonalistic_A = mkA "atonalistic" ;
lin atonality_N = mkN "atonality" ;
lin atone_V = mkV "atone" "atones" "atoned" "atoned" "atoning";
lin atonement_N = mkN "atonement" ;
lin atonic_A = mkA "atonic" ;
lin atonicity_N = mkN "atonicity" ;
lin atop_Adv = mkAdv "atop";
lin atop_Prep = mkPrep "atop";
lin atopognosia_N = mkN "atopognosia" ;
lin atorvastatin_N = mkN "atorvastatin" ;
lin atrabilious_A = compoundA (mkA "atrabilious");
lin atrazine_N = mkN "atrazine" ;
lin atresia_N = mkN "atresia" ;
lin atrial_A = mkA "atrial" ;
lin atrioventricular_A = mkA "atrioventricular" ;
lin atrium_N = mkN "atrium" ;
lin atrocious_A = compoundA (mkA "atrocious");
lin atrocity_N = mkN "atrocity" "atrocities";
lin atrophic_A = mkA "atrophic" ;
lin atrophy_N = mkN "atrophy" ;
lin atrophy_V = mkV "atrophy" "atrophies" "atrophied" "atrophied" "atrophying";
lin atrophy_V2 = mkV2 (mkV "atrophy" "atrophies" "atrophied" "atrophied" "atrophying");
lin atropine_N = mkN "atropine" ;
lin attach_V = mkV "attach" "attaches" "attached" "attached" "attaching";
lin attach_V2 = mkV2 (mkV "attach" "attaches" "attached" "attached" "attaching");
lin attachable_A = mkA "attachable" ;
lin attache_N = mkN "attaché" "attachés";
lin attachment_N = mkN "attachment" "attachments";
lin attack_N = mkN "attack" "attacks";
lin attack_V2 = mkV2 (mkV "attack" "attacks" "attacked" "attacked" "attacking");
lin attacker_N = mkN "attacker" "attackers";
lin attain_V = mkV "attain" "attains" "attained" "attained" "attaining";
lin attain_V2 = mkV2 (mkV "attain" "attains" "attained" "attained" "attaining");
lin attainable_A = compoundA (mkA "attainable");
lin attainder_N = mkN "attainder" "attainders";
lin attainment_N = mkN "attainment" "attainments";
lin attar_N = mkN "attar" ;
lin attempt_N = mkN "attempt" "attempts";
lin attempt_V2 = mkV2 (mkV "attempt" "attempts" "attempted" "attempted" "attempting");
lin attempt_VV = mkVV (mkV "attempt");
lin attend_V = mkV "attend" "attends" "attended" "attended" "attending";
lin attend_V2 = mkV2 (mkV "attend" "attends" "attended" "attended" "attending");
lin attendance_N = mkN "attendance" "attendances";
lin attendant_A = compoundA (mkA "attendant");
lin attendant_N = mkN human (mkN "attendant" "attendants");
lin attention_N = mkN "attention" "attentions";
lin attentional_A = mkA "attentional" ;
lin attentive_A = compoundA (mkA "attentive");
lin attentiveness_N = mkN "attentiveness" ;
lin attenuate_A = mkA "attenuate" ;
lin attenuate_V2 = mkV2 (mkV "attenuate" "attenuates" "attenuated" "attenuated" "attenuating");
lin attenuation_N = mkN "attenuation" ;
lin attenuator_N = mkN "attenuator" ;
lin attest_V = mkV "attest" "attests" "attested" "attested" "attesting";
lin attest_V2 = mkV2 (mkV "attest" "attests" "attested" "attested" "attesting");
lin attest_VS = mkVS (mkV "attest" "attests" "attested" "attested" "attesting");
lin attestation_N = mkN "attestation" ;
lin attester_N = mkN "attester" ;
lin attic_A = compoundA (mkA "attic");
lin attic_N = mkN "attic" "attics";
lin attire_N = mkN "attire" ;
lin attire_V2 = mkV2 (mkV "attire" "attires" "attired" "attired" "attiring");
lin attitude_N = mkN "attitude" "attitudes";
lin attitudinal_A = mkA "attitudinal" ;
lin attitudinize_V = mkV "attitudinize" "attitudinizes" "attitudinized" "attitudinized" "attitudinizing";
lin attorney_N = mkN "attorney" "attorneys";
lin attorneyship_N = mkN "attorneyship" ;
lin attosecond_N = mkN "attosecond" ;
lin attract_V2 = mkV2 (mkV "attract" "attracts" "attracted" "attracted" "attracting");
lin attractable_A = mkA "attractable" ;
lin attraction_N = mkN "attraction" "attractions";
lin attractive_A = compoundA (mkA "attractive");
lin attractiveness_N = mkN "attractiveness" ;
lin attractor_N = mkN "attractor" ;
lin attributable_A = compoundA (mkA "attributable");
lin attribute_N = mkN "attribute" "attributes";
lin attribute_V2 = mkV2 (mkV "attribute" "attributes" "attributed" "attributed" "attributing");
lin attribution_N = mkN "attribution" "attributions";
lin attributive_A = compoundA (mkA "attributive");
lin attrited_A = mkA "attrited" ;
lin attrition_N = mkN "attrition" ;
lin attritional_A = mkA "attritional" ;
lin attune_V2 = mkV2 (mkV "attune" "attunes" "attuned" "attuned" "attuning");
lin atypical_A = compoundA (mkA "atypical");
lin atypicality_N = mkN "atypicality" ;
lin au_fait_A = compoundA (mkA "au fait");
lin au_fond_Adv = mkAdv "au fond";
lin au_pair_N = mkN "au pair" "au pairs";
lin aubergine_N = mkN "aubergine" "aubergines";
lin aubrietia_N = mkN "aubrietia" "aubrietias";
lin auburn_A = compoundA (mkA "auburn");
lin auckland_PN = mkPN "Auckland";
lin auction_N = mkN "auction" "auctions";
lin auction_V2 = mkV2 (mkV "auction" "auctions" "auctioned" "auctioned" "auctioning");
lin auctioneer_N = mkN "auctioneer" "auctioneers";
lin audacious_A = compoundA (mkA "audacious");
lin audacity_N = mkN "audacity" ;
lin audibility_N = mkN "audibility" ;
lin audible_A = compoundA (mkA "audible");
lin audible_N = mkN "audible" ;
lin audience_N = mkN "audience" "audiences";
lin audile_N = mkN "audile" ;
lin audio_N = mkN "audio" ;
lin audio_lingual_A = compoundA (mkA "audio-lingual");
lin audiocassette_N = mkN "audiocassette" ;
lin audiogram_N = mkN "audiogram" ;
lin audiology_N = mkN "audiology" ;
lin audiometer_N = mkN "audiometer" ;
lin audiometric_A = mkA "audiometric" ;
lin audiometry_N = mkN "audiometry" ;
lin audiotape_N = mkN "audiotape" ;
lin audiovisual_A = mkA "audiovisual" ;
lin audiovisual_N = mkN "audiovisual" ;
lin audit_N = mkN "audit" "audits";
lin audit_V2 = mkV2 (mkV "audit" "audits" "audited" "audited" "auditing");
lin audition_N = mkN "audition" "auditions";
lin audition_V = mkV "audition";
lin audition_V2 = mkV2 (mkV "audition" "auditions" "auditioned" "auditioned" "auditioning");
lin auditor_N = mkN "auditor" "auditors";
lin auditorium_N = mkN "auditorium" "auditoriums";
lin auditory_A = compoundA (mkA "auditory");
lin audley_PN = mkPN "Audley";
lin audrey_PN = mkPN "Audrey";
lin aug_PN = mkPN "Aug";
lin augend_N = mkN "augend" ;
lin auger_N = mkN "auger" "augers";
lin aught_N = mkN "aught" ;
lin augite_N = mkN "augite" ;
lin augitic_A = mkA "augitic" ;
lin augment_V = mkV "augment" "augments" "augmented" "augmented" "augmenting";
lin augment_V2 = mkV2 (mkV "augment" "augments" "augmented" "augmented" "augmenting");
lin augmentation_N = mkN "augmentation" "augmentations";
lin augmentative_A = mkA "augmentative" ;
lin augsburg_PN = mkPN "Augsburg";
lin augur_N = mkN "augur" "augurs";
lin augur_V = mkV "augur" "augurs" "augured" "augured" "auguring";
lin augur_V2 = mkV2 (mkV "augur" "augurs" "augured" "augured" "auguring");
lin augury_N = mkN "augury" "auguries";
lin august_A = compoundA (mkA "august");
lin august_N = mkN "August" "Augusts";
lin august_PN = mkPN "August";
lin augustan_A = compoundA (mkA "augustan");
lin auk_N = mkN "auk" "auks";
lin auklet_N = mkN "auklet" ;
lin auld_A = mkA "auld" ;
lin auld_lang_syne_N = mkN "auld lang syne" "IRREG";
lin aunt_N = mkN "aunt" "aunts";
lin auntie_N = mkN "auntie" "aunties";
lin aunty_N = mkN "aunty" "aunties";
lin aura_N = mkN "aura" "auras";
lin aural_A = compoundA (mkA "aural");
lin aureate_A = mkA "aureate" ;
lin aureole_N = mkN "aureole" "aureoles";
lin auricle_N = mkN "auricle" "auricles";
lin auricula_N = mkN "auricula" ;
lin auricular_A = compoundA (mkA "auricular");
lin auriculare_N = mkN "auriculare" ;
lin auriculate_A = mkA "auriculate" ;
lin auriferous_A = compoundA (mkA "auriferous");
lin auriform_A = mkA "auriform" ;
lin aurochs_N = mkN "aurochs" ;
lin aurora_N = mkN "aurora" "auroras";
lin auroral_A = mkA "auroral" ;
lin aurous_A = mkA "aurous" ;
lin auscultation_N = mkN "auscultation" ;
lin auscultatory_A = mkA "auscultatory" ;
lin auspice_N = mkN "auspice" ;
lin auspices_N = mkN "auspices" ;
lin auspicious_A = compoundA (mkA "auspicious");
lin auspiciousness_N = mkN "auspiciousness" ;
lin aussie_N = mkN "aussie" "aussies";
lin austenite_N = mkN "austenite" ;
lin austenitic_A = mkA "austenitic" ;
lin austere_A = compoundA (mkA "austere");
lin austereness_N = mkN "austereness" ;
lin austerity_N = mkN "austerity" "austerities";
lin austral_A = mkA "austral" ;
lin austral_N = mkN "austral" ;
lin australia_PN = mkPN "Australia";
lin australian_A = compoundA (mkA "australian");
lin australianMasc_N = mkN masculine (mkN "australian" "australians");
lin australianFem_N = mkN feminine (mkN "australian" "australians");
lin australopithecine_A = mkA "australopithecine" ;
lin australopithecine_N = mkN "australopithecine" ;
lin austria_PN = mkPN "Austria";
lin austrian_A = compoundA (mkA "austrian");
lin austrianMasc_N = mkN masculine (mkN "austrian" "austrians");
lin austrianFem_N = mkN feminine (mkN "austrian" "austrians");
lin autacoid_N = mkN "autacoid" ;
lin autacoidal_A = mkA "autacoidal" ;
lin autarchic_A = mkA "autarchic" ;
lin autarchy_N = mkN "autarchy" "autarchies";
lin autarkic_A = mkA "autarkic" ;
lin autarky_N = mkN "autarky" ;
lin auteur_N = mkN "auteur" ;
lin authentic_A = compoundA (mkA "authentic");
lin authentically_Adv = mkAdv "authentically";
lin authenticate_V2 = mkV2 (mkV "authenticate" "authenticates" "authenticated" "authenticated" "authenticating");
lin authentication_N = mkN "authentication" ;
lin authenticity_N = mkN "authenticity" ;
lin author_N = mkN masculine (mkN "author" "authors");
lin authore_V2 = mkV2 (mkV "authore");
lin authoress_N = mkN feminine (mkN "authoress" "authoresses");
lin authorial_A = mkA "authorial" ;
lin authoritarian_A = compoundA (mkA "authoritarian");
lin authoritarian_N = mkN human (mkN "authoritarian" "authoritarians");
lin authoritarianism_N = mkN "authoritarianism" ;
lin authoritative_A = compoundA (mkA "authoritative");
lin authority_N = mkN "authority" "authorities";
lin authorization_N = mkN "authorization" ;
lin authorize_V2 = mkV2 (mkV "authorize" "authorizes" "authorized" "authorized" "authorizing");
lin authorize_V2V = mkV2V (mkV "authorize") noPrep to_Prep ;
lin authorizer_N = mkN "authorizer" ;
lin authorship_N = mkN "authorship" ;
lin autism_N = mkN "autism" ;
lin autistic_A = compoundA (mkA "autistic");
lin auto_N = mkN "auto" "autos";
lin auto_changer_N = mkN "auto-changer" "auto-changers";
lin auto_da_fe_N = mkN "auto-da-fé" (variants {"autos-de-fé"; "auto-de-fés"});
lin autoantibody_N = mkN "autoantibody" ;
lin autobahn_N = mkN "autobahn" "autobahns";
lin autobiographer_N = mkN "autobiographer" ;
lin autobiographic_A = compoundA (mkA "autobiographic");
lin autobiographical_A = compoundA (mkA "autobiographical");
lin autobiography_N = mkN "autobiography" "autobiographies";
lin autocatalysis_N = mkN "autocatalysis" ;
lin autocatalytic_A = mkA "autocatalytic" ;
lin autochthon_N = mkN "autochthon" ;
lin autochthonal_A = mkA "autochthonal" ;
lin autochthonous_A = mkA "autochthonous" ;
lin autoclave_N = mkN "autoclave" ;
lin autocracy_N = mkN "autocracy" "autocracies";
lin autocrat_N = mkN "autocrat" "autocrats";
lin autocratic_A = compoundA (mkA "autocratic");
lin autocratically_Adv = mkAdv "autocratically";
lin autodidact_N = mkN "autodidact" ;
lin autodidactic_A = mkA "autodidactic" ;
lin autoecious_A = mkA "autoecious" ;
lin autoerotic_A = mkA "autoerotic" ;
lin autoeroticism_N = mkN "autoeroticism" ;
lin autofluorescence_N = mkN "autofluorescence" ;
lin autofluorescent_A = mkA "autofluorescent" ;
lin autofocus_N = mkN "autofocus" ;
lin autogamous_A = mkA "autogamous" ;
lin autogamy_N = mkN "autogamy" ;
lin autogenetic_A = mkA "autogenetic" ;
lin autogenous_A = mkA "autogenous" ;
lin autogiro_N = mkN "autogiro" "autogiros";
lin autograft_N = mkN "autograft" ;
lin autograph_N = mkN "autograph" "autographs";
lin autograph_V2 = mkV2 (mkV "autograph" "autographs" "autographed" "autographed" "autographing");
lin autographic_A = mkA "autographic" ;
lin autogyro_N = mkN "autogyro" "autogyros";
lin autoicous_A = mkA "autoicous" ;
lin autoimmune_A = mkA "autoimmune" ;
lin autoimmunity_N = mkN "autoimmunity" ;
lin autoinjector_N = mkN "autoinjector" ;
lin autoloader_N = mkN "autoloader" ;
lin autologous_A = mkA "autologous" ;
lin autolysis_N = mkN "autolysis" ;
lin autolytic_A = mkA "autolytic" ;
lin automat_N = mkN "automat" "automats";
lin automate_V2 = mkV2 (mkV "automate" "automates" "automated" "automated" "automating");
lin automatic_A = compoundA (mkA "automatic");
lin automatic_N = mkN "automatic" "automatics";
lin automatically_Adv = mkAdv "automatically";
lin automation_N = mkN "automation" ;
lin automatism_N = mkN "automatism" ;
lin automaton_N = mkN "automaton" "automatons";
lin automobile_N = mkN "automobile" "automobiles";
lin automotive_A = mkA "automotive" ;
lin automysophobia_N = mkN "automysophobia" ;
lin autonomic_A = mkA "autonomic" ;
lin autonomous_A = compoundA (mkA "autonomous");
lin autonomy_N = mkN "autonomy" "autonomies";
lin autophyte_N = mkN "autophyte" ;
lin autopilot_N = mkN "autopilot" ;
lin autoplastic_A = mkA "autoplastic" ;
lin autoplasty_N = mkN "autoplasty" ;
lin autopsy_N = mkN "autopsy" "autopsies";
lin autoradiograph_N = mkN "autoradiograph" ;
lin autoradiographic_A = mkA "autoradiographic" ;
lin autoradiography_N = mkN "autoradiography" ;
lin autoregulation_N = mkN "autoregulation" ;
lin autosemantic_A = mkA "autosemantic" ;
lin autosexing_N = mkN "autosexing" ;
lin autosomal_A = mkA "autosomal" ;
lin autosome_N = mkN "autosome" ;
lin autostrada_N = mkN "autostrada" "autostradas";
lin autosuggestion_N = mkN "autosuggestion" ;
lin autotelic_A = mkA "autotelic" ;
lin autotelism_N = mkN "autotelism" ;
lin autotomic_A = mkA "autotomic" ;
lin autotomy_N = mkN "autotomy" ;
lin autotrophic_A = mkA "autotrophic" ;
lin autotype_N = mkN "autotype" ;
lin autotypic_A = mkA "autotypic" ;
lin autumn_N = mkN "autumn" "autumns";
lin autumnal_A = compoundA (mkA "autumnal");
lin auxesis_N = mkN "auxesis" ;
lin auxetic_A = mkA "auxetic" ;
lin auxiliary_A = compoundA (mkA "auxiliary");
lin auxiliary_N = mkN "auxiliary" "auxiliaries";
lin auxin_N = mkN "auxin" ;
lin auxinic_A = mkA "auxinic" ;
lin avadavat_N = mkN "avadavat" ;
lin avail_N = mkN "avail" ;
lin avail_V = mkV "avail" "avails" "availed" "availed" "availing";
lin avail_V2 = mkV2 (mkV "avail" "avails" "availed" "availed" "availing");
lin availability_N = mkN "availability" ;
lin available_A = compoundA (mkA "available");
lin avalanche_N = mkN "avalanche" "avalanches";
lin avant_garde_N = mkN "avant-garde" "avant-gardes";
lin avaram_N = mkN "avaram" ;
lin avarice_N = mkN "avarice" ;
lin avaricious_A = compoundA (mkA "avaricious");
lin avascular_A = mkA "avascular" ;
lin avatar_N = mkN "avatar" "avatars";
lin ave_PN = mkPN "Ave";
lin aveley_PN = mkPN "Aveley";
lin avellan_A = mkA "avellan" ;
lin avenge_V2 = mkV2 (mkV "avenge" "avenges" "avenged" "avenged" "avenging");
lin avenger_N = mkN "avenger" "avengers";
lin avens_N = mkN "avens" ;
lin avenue_N = mkN "avenue" "avenues";
lin aver_V2 = mkV2 (mkV "aver" "avers" "averred" "averred" "averring");
lin average_A = compoundA (mkA "average");
lin average_N = mkN "average" "averages";
lin average_V = mkV "average" "averages" "averaged" "averaged" "averaging";
lin average_V2 = mkV2 (mkV "average" "averages" "averaged" "averaged" "averaging");
lin averageness_N = mkN "averageness" ;
lin averr_VS = mkVS (mkV "averr");
lin averse_A = compoundA (mkA "averse");
lin aversion_N = mkN "aversion" "aversions";
lin aversive_A = mkA "aversive" ;
lin avert_V2 = mkV2 (mkV "avert" "averts" "averted" "averted" "averting");
lin averting_N = mkN "averting" ;
lin avian_A = mkA "avian" ;
lin aviary_N = mkN "aviary" "aviaries";
lin aviation_N = mkN "aviation" ;
lin aviatorMasc_N = mkN masculine (mkN "aviator" "aviators");
lin aviatorFem_N = mkN feminine (mkN "aviator" "aviators");
lin aviatrix_N = mkN "aviatrix" ;
lin avid_A = compoundA (mkA "avid");
lin avidity_N = mkN "avidity" ;
lin avifauna_N = mkN "avifauna" ;
lin avifaunal_A = mkA "avifaunal" ;
lin avignon_PN = mkPN "Avignon";
lin avionic_A = mkA "avionic" ;
lin avionics_N = mkN "avionics" ;
lin avirulent_A = mkA "avirulent" ;
lin avitaminosis_N = mkN "avitaminosis" ;
lin avitaminotic_A = mkA "avitaminotic" ;
lin avo_N = mkN "avo" ;
lin avocado_A = mkA "avocado" ;
lin avocado_N = mkN "avocado" "avocados";
lin avocation_N = mkN "avocation" "avocations";
lin avocational_A = mkA "avocational" ;
lin avocet_N = mkN "avocet" ;
lin avoid_V2 = mkV2 (mkV "avoid" "avoids" "avoided" "avoided" "avoiding");
lin avoid_VV = ingVV (mkV "avoid" "avoids" "avoided" "avoided" "avoiding");
lin avoidable_A = compoundA (mkA "avoidable");
lin avoidance_N = mkN "avoidance" ;
lin avoirdupois_N = mkN "avoirdupois" ;
lin avon_PN = mkPN "Avon";
lin avouch_V = mkV "avouch" "avouches" "avouched" "avouched" "avouching";
lin avouch_V2 = mkV2 (mkV "avouch" "avouches" "avouched" "avouched" "avouching");
lin avow_V2 = mkV2 (mkV "avow" "avows" "avowed" "avowed" "avowing");
lin avowal_N = mkN "avowal" "avowals";
lin avowedly_Adv = mkAdv "avowedly";
lin avower_N = mkN "avower" ;
lin avulsion_N = mkN "avulsion" ;
lin avuncular_A = compoundA (mkA "avuncular");
lin await_V2 = mkV2 (mkV "await" "awaits" "awaited" "awaited" "awaiting");
lin awake_A = compoundA (mkA "awake");
lin awake_V = IrregEng.awake_V;
lin awaken_V2 = mkV2 (mkV "awaken" "awakens" "awakened" "awakened" "awakening");
lin awakening_N = mkN "awakening" "awakenings";
lin award_N = mkN "award" "awards";
lin award_V2 = mkV2 (mkV "award" "awards" "awarded" "awarded" "awarding");
lin award_V3 = mkV3 (mkV "award" "awards" "awarded" "awarded" "awarding");
lin aware_A = compoundA (mkA "aware");
lin aware_of_A2 = mkA2 (compoundA (mkA "aware")) (mkPrep "of");
lin awareness_N = mkN "awareness" ;
lin awash_A = compoundA (mkA "awash");
lin away_A = compoundA (mkA "away");
lin away_Adv = mkAdv "away";
lin awayness_N = mkN "awayness" ;
lin awe_N = mkN "awe" ;
lin awe_V2 = mkV2 (mkV "awe" "awes" "awed" "awed" "awing");
lin awe_inspiring_A = compoundA (mkA "awe-inspiring");
lin awe_stricken_A = compoundA (mkA "awe-stricken");
lin awe_struck_A = compoundA (mkA "awe-struck");
lin aweary_A = mkA "aweary" ;
lin aweigh_A = mkA "aweigh" ;
lin aweigh_Adv = mkAdv "aweigh";
lin aweless_A = mkA "aweless" ;
lin awesome_A = compoundA (mkA "awesome");
lin awful_A = compoundA (mkA "awful");
lin awfulness_N = mkN "awfulness" ;
lin awheel_A = mkA "awheel" ;
lin awhile_Adv = mkAdv "awhile";
lin awkward_A = compoundA (mkA "awkward");
lin awkwardness_N = mkN "awkwardness" ;
lin awl_N = mkN "awl" "awls";
lin awlwort_N = mkN "awlwort" ;
lin awn_N = mkN "awn" ;
lin awned_A = mkA "awned" ;
lin awning_N = mkN "awning" "awnings";
lin awninged_A = mkA "awninged" ;
lin awnless_A = mkA "awnless" ;
lin awol_PN = mkPN "Awol";
lin awry_A = compoundA (mkA "awry");
lin awry_Adv = mkAdv "awry";
lin ax_N = mkN "ax" "axes";
lin ax_V2 = mkV2 (mkV "ax" "axes" "axed" "axed" "axing");
lin axe_N = mkN "axe" "axes";
lin axe_V2 = mkV2 (mkV "axe" "axes" "axed" "axed" "axing");
lin axenic_A = mkA "axenic" ;
lin axial_A = mkA "axial" ;
lin axil_N = mkN "axil" ;
lin axile_A = mkA "axile" ;
lin axillary_A = mkA "axillary" ;
lin axiological_A = mkA "axiological" ;
lin axiology_N = mkN "axiology" ;
lin axiom_N = mkN "axiom" "axioms";
lin axiomatic_A = compoundA (mkA "axiomatic");
lin axiomatically_Adv = mkAdv "axiomatically";
lin axis_N = mkN "axis" "axes" {- FIXME: guessed plural form -};
lin axle_N = mkN "axle" "axles";
lin axletree_N = mkN "axletree" ;
lin axolemma_N = mkN "axolemma" ;
lin axolotl_N = mkN "axolotl" ;
lin axon_N = mkN "axon" ;
lin axonal_A = mkA "axonal" ;
lin axseed_N = mkN "axseed" ;
lin ay_Adv = mkAdv "ay";
lin ayah_N = mkN "ayah" "ayahs";
lin ayapana_N = mkN "ayapana" ;
lin ayatollah_N = mkN "ayatollah" ;
lin aycliffe_PN = mkPN "Aycliffe";
lin aye_Adv = mkAdv "aye";
lin ayin_N = mkN "ayin" ;
lin aylesbury_PN = mkPN "Aylesbury";
lin aylesford_PN = mkPN "Aylesford";
lin ayr_PN = mkPN "Ayr";
lin azadirachtin_N = mkN "azadirachtin" ;
lin azalea_N = mkN "azalea" "azaleas";
lin azathioprine_N = mkN "azathioprine" ;
lin azide_N = mkN "azide" ;
lin azido_A = mkA "azido" ;
lin azimuth_N = mkN "azimuth" "azimuths";
lin azimuthal_A = mkA "azimuthal" ;
lin azithromycin_N = mkN "azithromycin" ;
lin azo_A = mkA "azo" ;
lin azoic_A = mkA "azoic" ;
lin azonal_A = mkA "azonal" ;
lin azonic_A = mkA "azonic" ;
lin azote_N = mkN "azote" ;
lin azotemic_A = mkA "azotemic" ;
lin azotic_A = mkA "azotic" ;
lin azoturia_N = mkN "azoturia" ;
lin aztreonam_N = mkN "aztreonam" ;
lin azure_A = compoundA (mkA "azure");
lin azure_N = mkN "azure" "azures";
lin azurite_N = mkN "azurite" ;
lin azygous_A = mkA "azygous" ;
lin azymia_N = mkN "azymia" ;
lin b_ed_N = mkN "b ed" ;
lin ba_N = mkN "ba" ;
lin baa_N = mkN "baa" "baas";
lin baa_V = mkV "baa" "baas" "baaed" "baaed" "baaing";
lin baa_lamb_N = mkN "baa-lamb" "baa-lambs";
lin baas_N = mkN "baas" ;
lin baba_N = mkN "baba" ;
lin babassu_N = mkN "babassu" ;
lin babbitting_N = mkN "babbitting" ;
lin babble_N = mkN "babble" ;
lin babble_V = mkV "babble" "babbles" "babbled" "babbled" "babbling";
lin babble_V2 = mkV2 (mkV "babble" "babbles" "babbled" "babbled" "babbling");
lin babbler_N = mkN "babbler" "babblers";
lin babe_N = mkN "babe" "babes";
lin babel_N = mkN "babel" "babels";
lin babelike_A = mkA "babelike" ;
lin babirusa_N = mkN "babirusa" ;
lin babka_N = mkN "babka" ;
lin baboo_N = mkN "baboo" "baboos";
lin baboon_N = mkN "baboon" "baboons";
lin baboonish_A = mkA "baboonish" ;
lin babs_PN = mkPN "Babs";
lin babu_N = mkN "babu" "babus";
lin babushka_N = mkN "babushka" ;
lin baby_N = mkN "baby" "babies";
lin baby_V2 = mkV2 (mkV "baby" "babies" "babied" "babied" "babying");
lin baby_faced_A = compoundA (mkA "baby-faced");
lin baby_farmer_N = mkN "baby-farmer" "baby-farmers";
lin baby_minder_N = mkN "baby-minder" "baby-minders";
lin baby_talk_N = mkN "baby-talk";
lin babyhood_N = mkN "babyhood";
lin babyish_A = compoundA (mkA "babyish");
lin babyminder_N = mkN "babyminder" ;
lin babysit_V = mkV "baby" IrregEng.sit_V;
lin babysitter_N = mkN "babysitter" "babysitters";
lin babysitting_N = mkN "babysitting" ;
lin baccalaureate_N = mkN "baccalaureate" "baccalaureates";
lin baccarat_N = mkN "baccarat" ;
lin baccate_A = mkA "baccate" ;
lin bacchanal_A = compoundA (mkA "bacchanal");
lin bacchanal_N = mkN "bacchanal" "bacchanals";
lin bacchanalian_A = compoundA (mkA "bacchanalian");
lin bacchant_N = mkN "bacchant" ;
lin bacchante_N = mkN "bacchante" ;
lin bacchantic_A = mkA "bacchantic" ;
lin baccivorous_A = mkA "baccivorous" ;
lin baccy_N = mkN "baccy" ;
lin bachelor_N = mkN "bachelor" "bachelors";
lin bachelorhood_N = mkN "bachelorhood" ;
lin bacillar_A = mkA "bacillar" ;
lin bacillus_N = mkN "bacillus" "bacilli" {- FIXME: guessed plural form -};
lin bacitracin_N = mkN "bacitracin" ;
lin back_Adv = mkAdv "back";
lin back_N = mkN "back" "backs";
lin back_V = mkV "back" "backs" "backed" "backed" "backing";
lin back_V2 = mkV2 (mkV "back" "backs" "backed" "backed" "backing");
lin back_breaking_A = compoundA (mkA "back-breaking");
lin back_down_N = mkN "back-down" "back-downs";
lin back_formation_N = mkN "back-formation" "back-formations";
lin back_up_N = mkN "back-up" "back-ups";
lin backache_N = mkN "backache" "backaches";
lin backband_N = mkN "backband" "backbands";
lin backbeat_N = mkN "backbeat" ;
lin backbench_N = mkN "backbench" "backbenches";
lin backbencher_N = mkN "backbencher" "backbenchers";
lin backbend_N = mkN "backbend" ;
lin backbite_V = mkV "back" IrregEng.bite_V;
lin backbite_V2 = mkV2 (mkV "back" IrregEng.bite_V);
lin backbiter_N = mkN "backbiter" "backbiters";
lin backblast_N = mkN "backblast" ;
lin backboard_N = mkN "backboard" "backboards";
lin backbone_N = mkN "backbone" "backbones";
lin backchat_N = mkN "backchat" ;
lin backcloth_N = mkN "backcloth" "backcloths";
lin backdate_V2 = mkV2 (mkV "backdate" "backdates" "backdated" "backdated" "backdating");
lin backdoor_N = mkN "backdoor" "backdoors";
lin backdrop_N = mkN "backdrop" "backdrops";
lin backerMasc_N = mkN masculine (mkN "backer" "backers");
lin backerFem_N = mkN feminine (mkN "backer" "backers");
lin backfield_N = mkN "backfield" ;
lin backfire_N = mkN "backfire" "backfires";
lin backfire_V = mkV "backfire" "backfires" "backfired" "backfired" "backfiring";
lin backflow_N = mkN "backflow" ;
lin backgammon_N = mkN "backgammon" ;
lin background_N = mkN "background" "backgrounds";
lin backgrounder_N = mkN "backgrounder" ;
lin backhand_A = compoundA (mkA "backhand");
lin backhand_N = mkN "backhand" ;
lin backhanded_A = compoundA (mkA "backhanded");
lin backhander_N = mkN "backhander" ;
lin backhoe_N = mkN "backhoe" ;
lin backing_N = mkN "backing" "backings";
lin backlash_N = mkN "backlash" ;
lin backless_A = compoundA (mkA "backless");
lin backlighting_N = mkN "backlighting" ;
lin backlog_N = mkN "backlog" "backlogs";
lin backmost_A = compoundA (mkA "backmost");
lin backpack_N = mkN "backpack" ;
lin backpacker_N = mkN "backpacker" ;
lin backpedal_V = mkV "backpedal" "backpedals" "backpedalled" "backpedalled" "backpedalling";
lin backpedaling_V = mkV "backpedaling";
lin backplate_N = mkN "backplate" ;
lin backroom_N = mkN "backroom" "backrooms";
lin backsaw_N = mkN "backsaw" ;
lin backscratcher_N = mkN "backscratcher" "backscratchers";
lin backseat_N = mkN "backseat" "backseats";
lin backsheesh_N = mkN "backsheesh" "backsheesh";
lin backside_N = mkN "backside" "backsides";
lin backslapper_N = mkN "backslapper" ;
lin backslide_V = mkV "back" IrregEng.slide_V;
lin backsliding_N = mkN "backsliding" ;
lin backspace_V = mkV "backspace" "backspaces" "backspaced" "backspaced" "backspacing";
lin backspin_N = mkN "backspin" ;
lin backstage_Adv = mkAdv "backstage";
lin backstair_A = compoundA (mkA "backstair");
lin backstairs_N = mkN "backstairs" ;
lin backstay_N = mkN "backstay" ;
lin backstitch_N = mkN "backstitch" ;
lin backstop_N = mkN "backstop" ;
lin backstroke_N = mkN "backstroke" "backstrokes";
lin backstroker_N = mkN "backstroker" ;
lin backswept_A = mkA "backswept" ;
lin backswimmer_N = mkN "backswimmer" ;
lin backsword_N = mkN "backsword" "backswords";
lin backtalk_N = mkN "backtalk" ;
lin backup_N = mkN "backup" ;
lin backward_A = compoundA (mkA "backward");
lin backward_Adv = mkAdv "backward";
lin backwards_A = compoundA (mkA "backwards");
lin backwards_Adv = mkAdv "backwards";
lin backwash_N = mkN "backwash" ;
lin backwater_N = mkN "backwater" "backwaters";
lin backwoods_N = mkN "backwoods" ;
lin backwoodsman_N = mkN masculine (mkN "backwoodsman" "backwoodsmen");
lin backworth_PN = mkPN "Backworth";
lin backyard_N = mkN "backyard" ;
lin bacon_N = mkN "bacon" ;
lin bacteremia_N = mkN "bacteremia" ;
lin bacteremic_A = mkA "bacteremic" ;
lin bacteria_N = mkN "bacteria" ;
lin bacterial_A = compoundA (mkA "bacterial");
lin bactericidal_A = mkA "bactericidal" ;
lin bactericide_N = mkN "bactericide" ;
lin bacteriochlorophyll_N = mkN "bacteriochlorophyll" ;
lin bacteriological_A = mkA "bacteriological" ;
lin bacteriologist_N = mkN "bacteriologist" "bacteriologists";
lin bacteriology_N = mkN "bacteriology" ;
lin bacteriolysis_N = mkN "bacteriolysis" ;
lin bacteriolytic_A = mkA "bacteriolytic" ;
lin bacteriophage_N = mkN "bacteriophage" ;
lin bacteriophagic_A = mkA "bacteriophagic" ;
lin bacteriostasis_N = mkN "bacteriostasis" ;
lin bacteriostat_N = mkN "bacteriostat" ;
lin bacteriostatic_A = mkA "bacteriostatic" ;
lin bacterium_N = mkN "bacterium" "bacteria" {- FIXME: guessed plural form -};
lin bacteroid_N = mkN "bacteroid" ;
lin bacteroidal_A = mkA "bacteroidal" ;
lin bacup_PN = mkPN "Bacup";
lin bad_A = mkA "bad" "worse" "worst" "badly";
lin bad_N = mkN "bad" ;
lin badajoz_PN = mkPN "Badajoz";
lin badalona_PN = mkPN "Badalona";
lin baddeleyite_N = mkN "baddeleyite" ;
lin badge_N = mkN "badge" "badges";
lin badger_N = mkN "badger" "badgers";
lin badger_V2 = mkV2 (mkV "badger" "badgers" "badgered" "badgered" "badgering");
lin badgering_N = mkN "badgering" ;
lin badinage_N = mkN "badinage" ;
lin badlands_N = mkN "badlands" ;
lin badly_behaved_A = compoundA (mkA "badly-behaved");
lin badminton_N = mkN "badminton" ;
lin badness_N = mkN "badness" ;
lin baedeker_N = mkN "baedeker" ;
lin baffle_N = mkN "baffle" "baffles";
lin baffle_V2 = mkV2 (mkV "baffle" "baffles" "baffled" "baffled" "baffling");
lin baffled_N = mkN "baffled" ;
lin baffling_A = mkA "baffling" ;
lin bag_N = mkN "bag" "bags";
lin bag_V = mkV "bag" "bags" "bagged" "bagged" "bagging";
lin bag_V2 = mkV2 (mkV "bag" "bags" "bagged" "bagged" "bagging");
lin bagasse_N = mkN "bagasse" ;
lin bagassosis_N = mkN "bagassosis" ;
lin bagatelle_N = mkN "bagatelle" "bagatelles";
lin bagel_N = mkN "bagel" ;
lin baggage_N = mkN "baggage" ;
lin baggageman_N = mkN masculine (mkN "baggageman" "baggagemen");
lin bagger_N = mkN "bagger" ;
lin baggy_A = compoundA (mkA "baggy");
lin baghdad_PN = mkPN "Baghdad";
lin bagman_N = mkN masculine (mkN "bagman");
lin bagnio_N = mkN "bagnio" "bagnios";
lin bagpipe_N = mkN "bagpipe" "bagpipes";
lin baguet_N = mkN "baguet" ;
lin bahamas_PN = mkPN "Bahamas";
lin bahamian_A = compoundA (mkA "bahamian");
lin bahamian_N = mkN "bahamian" "bahamians";
lin bahasa_N = mkN "bahasa" ;
lin bahrain_PN = mkPN "Bahrain";
lin bahraini_A = compoundA (mkA "bahraini");
lin bahraini_N = mkN "bahraini" "bahrainis";
lin baht_N = mkN "baht" ;
lin bail_N = mkN "bail" "bails";
lin bail_V = mkV "bail" "bails" "bailed" "bailed" "bailing";
lin bail_V2 = mkV2 (mkV "bail" "bails" "bailed" "bailed" "bailing");
lin bailable_A = mkA "bailable" ;
lin bailee_N = mkN "bailee" "bailees";
lin bailey_N = mkN "bailey" "baileys";
lin bailey_PN = mkPN "Bailey";
lin bailiff_N = mkN "bailiff" "bailiffs";
lin bailiffship_N = mkN "bailiffship" ;
lin bailiwick_N = mkN "bailiwick" ;
lin bailment_N = mkN "bailment" "bailments";
lin bailor_N = mkN "bailor" "bailors";
lin bairn_N = mkN "bairn" "bairns";
lin bait_N = mkN "bait" "baits";
lin bait_V = mkV "bait" "baits" "baited" "baited" "baiting";
lin bait_V2 = mkV2 (mkV "bait" "baits" "baited" "baited" "baiting");
lin baiting_N = mkN "baiting" ;
lin baiza_N = mkN "baiza" ;
lin baize_N = mkN "baize" ;
lin bake_V = mkV "bake" "bakes" "baked" "baked" "baking";
lin bake_V2 = mkV2 (mkV "bake" "bakes" "baked" "baked" "baking");
lin bakelite_N = mkN "bakelite" ;
lin baker_N = mkN "baker" "bakers";
lin bakery_N = mkN "bakery" "bakeries";
lin baking_N = mkN "baking" ;
lin baking_hot_A = compoundA (mkA "baking-hot");
lin baking_powder_N = mkN "baking-powder" "baking-powders";
lin baklava_N = mkN "baklava" ;
lin baksheesh_N = mkN "baksheesh" "baksheesh";
lin baku_PN = mkPN "Baku";
lin balaclava_N = mkN "balaclava" "balaclavas";
lin balagan_N = mkN "balagan" ;
lin balalaika_N = mkN "balalaika" "balalaikas";
lin balance_N = mkN "balance" "balances";
lin balance_V = mkV "balance" "balances" "balanced" "balanced" "balancing";
lin balance_V2 = mkV2 (mkV "balance" "balances" "balanced" "balanced" "balancing");
lin balance_sheet_N = mkN "balance-sheet" "balance-sheets";
lin balance_wheel_N = mkN "balance-wheel" "balance-wheels";
lin balancer_N = mkN "balancer" ;
lin balanitis_N = mkN "balanitis" ;
lin balanoposthitis_N = mkN "balanoposthitis" ;
lin balas_N = mkN "balas" ;
lin balata_N = mkN "balata" ;
lin balboa_N = mkN "balboa" ;
lin balbriggan_N = mkN "balbriggan" ;
lin balconied_A = compoundA (mkA "balconied");
lin balcony_N = mkN "balcony" "balconies";
lin bald_A = mkA "bald" "balder";
lin bald_head_N = mkN "bald-head" "bald-heads";
lin bald_pate_N = mkN "bald-pate" "bald-pates";
lin baldachin_N = mkN "baldachin" ;
lin balderdash_N = mkN "balderdash" ;
lin baldhead_N = mkN "baldhead" ;
lin balding_A = mkA "balding" ;
lin baldness_N = mkN "baldness" ;
lin baldock_PN = mkPN "Baldock";
lin baldric_N = mkN "baldric" "baldrics";
lin bale_N = mkN "bale" "bales";
lin bale_V2 = mkV2 (mkV "bale" "bales" "baled" "baled" "baling");
lin baleful_A = compoundA (mkA "baleful");
lin balk_N = mkN "balk" "balks";
lin balk_V = mkV "balk" "balks" "balked" "balked" "balking";
lin balk_V2 = mkV2 (mkV "balk" "balks" "balked" "balked" "balking");
lin balker_N = mkN "balker" ;
lin balkiness_N = mkN "balkiness" ;
lin balkline_N = mkN "balkline" ;
lin ball_N = mkN "ball" "balls";
lin ball_V = mkV "ball" "balls" "balled" "balled" "balling";
lin ball_V2 = mkV2 (mkV "ball" "balls" "balled" "balled" "balling");
lin ball_cartridge_N = mkN "ball-cartridge" "ball-cartridges";
lin ball_dress_N = mkN "ball-dress" "ball-dresses";
lin ballade_N = mkN (variants {"ballade"; "ballad"});
lin ballast_N = mkN "ballast" ;
lin ballast_V2 = mkV2 (mkV "ballast" "ballasts" "ballasted" "ballasted" "ballasting");
lin ballbearing_N = mkN "ballbearing" "ballbearings";
lin ballcock_N = mkN "ballcock" "ballcocks";
lin balldress_N = mkN "balldress" ;
lin ballerina_N = mkN "ballerina" "ballerinas";
lin ballet_N = mkN "ballet" "ballets";
lin ballet_dancer_N = mkN "ballet-dancer" "ballet-dancers";
lin ballet_skirt_N = mkN "ballet-skirt" "ballet-skirts";
lin balletic_A = mkA "balletic" ;
lin balletomane_N = mkN "balletomane" ;
lin balletomania_N = mkN "balletomania" ;
lin ballgame_N = mkN "ballgame" ;
lin ballistic_A = compoundA (mkA "ballistic");
lin ballistics_N = mkN "ballistics" "ballistics";
lin ballistocardiogram_N = mkN "ballistocardiogram" ;
lin ballistocardiograph_N = mkN "ballistocardiograph" ;
lin ballock_N = mkN "ballock" "ballocks";
lin balloon_N = mkN "balloon" "balloons";
lin balloon_V = mkV "balloon" "balloons" "ballooned" "ballooned" "ballooning";
lin balloon_V2 = mkV2 (mkV "balloon" "balloons" "ballooned" "ballooned" "ballooning");
lin balloonfish_N = mkN "balloonfish" ;
lin ballooning_N = mkN "ballooning" ;
lin balloonist_N = mkN "balloonist" "balloonists";
lin ballot_N = mkN "ballot" "ballots";
lin ballot_V = mkV "ballot" "ballots" "balloted" "balloted" "balloting";
lin ballot_box_N = mkN "ballot-box" "ballot-boxes";
lin ballottement_N = mkN "ballottement" ;
lin ballpark_N = mkN "ballpark" ;
lin ballpen_N = mkN "ballpen" "ballpens";
lin ballplayer_N = mkN "ballplayer" ;
lin ballpoint_N = mkN "ballpoint" "ballpoints";
lin ballpoint_pen_N = mkN "ballpoint-pen" "ballpoint-pens";
lin ballroom_N = mkN "ballroom" "ballrooms";
lin balls_up_N = mkN "balls-up" "balls-ups";
lin ballup_N = mkN "ballup" ;
lin bally_A = compoundA (mkA "bally");
lin bally_Adv = mkAdv "bally";
lin ballyhoo_N = mkN "ballyhoo" ;
lin balm_N = mkN "balm" ;
lin balminess_N = mkN "balminess" ;
lin balmoral_N = mkN "balmoral" ;
lin balmy_A = mkA "balmy" "balmier";
lin baloney_N = mkN "baloney" ;
lin balsa_N = mkN "balsa" "balsas";
lin balsam_N = mkN "balsam" "balsams";
lin balsamic_A = mkA "balsamic" ;
lin balsamroot_N = mkN "balsamroot" ;
lin baltimore_PN = mkPN "Baltimore";
lin baluster_N = mkN "baluster" "balusters";
lin balustrade_N = mkN "balustrade" "balustrades";
lin bambino_N = mkN "bambino" "bambinos";
lin bamboo_N = mkN "bamboo" "bamboos";
lin bamboozle_V2 = mkV2 (mkV "bamboozle" "bamboozles" "bamboozled" "bamboozled" "bamboozling");
lin ban_N = mkN "ban" "bans";
lin ban_V2 = mkV2 (mkV "ban" "bans" "banned" "banned" "banning");
lin banal_A = compoundA (mkA "banal");
lin banality_N = mkN "banality" "banalities";
lin banana_N = mkN "banana" "bananas";
lin banausic_A = mkA "banausic" ;
lin banbury_PN = mkPN "Banbury";
lin band_N = mkN "band" "bands";
lin band_V = mkV "band" "bands" "banded" "banded" "banding";
lin band_V2 = mkV2 (mkV "band" "bands" "banded" "banded" "banding");
lin band_saw_N = mkN "band-saw" "band-saws";
lin bandage_N = mkN "bandage" "bandages";
lin bandage_V2 = mkV2 (mkV "bandage" "bandages" "bandaged" "bandaged" "bandaging");
lin bandanna_N = mkN "bandanna" "bandannas";
lin bandbox_N = mkN "bandbox" "bandboxes";
lin bandeau_N = mkN "bandeau" "bandeaux";
lin banderilla_N = mkN "banderilla" ;
lin banderillero_N = mkN "banderillero" ;
lin bandicoot_N = mkN "bandicoot" ;
lin bandit_N = mkN human (mkN "bandit" "bandits");
lin banditry_N = mkN "banditry" ;
lin bandleader_N = mkN "bandleader" "bandleaders";
lin bandmaster_N = mkN "bandmaster" "bandmasters";
lin bandoleer_N = mkN "bandoleer" "bandoleers";
lin bandolier_N = mkN "bandolier" "bandoliers";
lin bandoneon_N = mkN "bandoneon" ;
lin bandsaw_N = mkN "bandsaw" ;
lin bandsman_N = mkN masculine (mkN "bandsman" "bandsmen");
lin bandstand_N = mkN "bandstand" "bandstands";
lin bandung_PN = mkPN "Bandung";
lin bandwagon_N = mkN "bandwagon" "bandwagons";
lin bandwidth_N = mkN "bandwidth" ;
lin bandy_A = mkA "bandy" "bandier";
lin bandy_V2 = mkV2 (mkV "bandy" "bandies" "bandied" "bandied" "bandying");
lin bandy_legged_A = compoundA (mkA "bandy-legged");
lin bane_N = mkN "bane" ;
lin baneberry_N = mkN "baneberry" ;
lin baneful_A = compoundA (mkA "baneful");
lin bang_Adv = mkAdv "bang";
lin bang_N = mkN "bang" "bangs";
lin bang_V = mkV "bang" "bangs" "banged" "banged" "banging";
lin bang_V2 = mkV2 (mkV "bang" "bangs" "banged" "banged" "banging");
lin bangalore_PN = mkPN "Bangalore";
lin banger_N = mkN "banger" "bangers";
lin banging_N = mkN "banging" ;
lin bangkok_PN = mkPN "Bangkok";
lin bangladesh_PN = mkPN "Bangladesh";
lin bangladeshi_A = compoundA (mkA "bangladeshi");
lin bangladeshi_N = mkN "bangladeshi" "bangladeshis";
lin bangle_N = mkN "bangle" "bangles";
lin bangor_PN = mkPN "Bangor";
lin banian_N = mkN "banian" "banians";
lin banian_tree_N = mkN "banian-tree" "banian-trees";
lin banish_V2 = mkV2 (mkV "banish" "banishes" "banished" "banished" "banishing");
lin banishment_N = mkN "banishment" ;
lin banister_N = mkN "banister" "banisters";
lin banjo_N = mkN "banjo" "banjos";
lin bank_N = mkN "bank" "banks";
lin bank_V = mkV "bank" "banks" "banked" "banked" "banking";
lin bank_V2 = mkV2 (mkV "bank" "banks" "banked" "banked" "banking");
lin bank_bill_N = mkN "bank-bill" "bank-bills";
lin bank_book_N = mkN "bank-book" "bank-books";
lin bank_draft_N = mkN "bank-draft" "bank-drafts";
lin bank_rate_N = mkN "bank-rate" "bank-rates";
lin bankable_A = mkA "bankable" ;
lin bankbook_N = mkN "bankbook" ;
lin banker_N = mkN "banker" "bankers";
lin banking_N = mkN "banking" ;
lin banknote_N = mkN "banknote" "banknotes";
lin bankroll_N = mkN "bankroll" "bankrolls";
lin bankrupt_A = compoundA (mkA "bankrupt");
lin bankrupt_N = mkN "bankrupt" "bankrupts";
lin bankrupt_V2 = mkV2 (mkV "bankrupt" "bankrupts" "bankrupted" "bankrupted" "bankrupting");
lin bankruptcy_N = mkN "bankruptcy" "bankruptcies";
lin banksia_N = mkN "banksia" ;
lin banner_A = mkA "banner" ;
lin banner_N = mkN "banner" "banners";
lin bannerlike_Adv = mkAdv "bannerlike" ;
lin banning_order_N = mkN "banning-order" "banning-orders";
lin bannister_N = mkN "bannister" "bannisters";
lin bannock_N = mkN "bannock" "bannocks";
lin bannockburn_PN = mkPN "Bannockburn";
lin banns_N = mkN "banns" ;
lin banquet_N = mkN "banquet" "banquets";
lin banquet_V = mkV "banquet" "banquets" "banqueted" "banqueted" "banqueting";
lin banquet_V2 = mkV2 (mkV "banquet" "banquets" "banqueted" "banqueted" "banqueting");
lin banquette_N = mkN "banquette" ;
lin banshee_N = mkN "banshee" "banshees";
lin bant_V = mkV "bant" "bants" "banted" "banted" "banting";
lin bantam_A = mkA "bantam" ;
lin bantam_N = mkN "bantam" "bantams";
lin bantamweight_N = mkN "bantamweight" ;
lin banteng_N = mkN "banteng" ;
lin banter_N = mkN "banter" ;
lin banter_V = mkV "banter" "banters" "bantered" "bantered" "bantering";
lin banter_V2 = mkV2 (mkV "banter" "banters" "bantered" "bantered" "bantering");
lin banteringly_Adv = mkAdv "banteringly" ;
lin banting_N = mkN "banting" ;
lin bantry_PN = mkPN "Bantry";
lin bantu_A = compoundA (mkA "bantu");
lin bantu_N = mkN "bantu" "bantu";
lin banyan_N = mkN "banyan" "banyans";
lin banzai_N = mkN "banzai" ;
lin baobab_N = mkN "baobab" "baobabs";
lin bap_N = mkN "bap" ;
lin baptism_N = mkN "baptism" "baptisms";
lin baptismal_A = compoundA (mkA "baptismal");
lin baptist_A = compoundA (mkA "baptist");
lin baptist_N = mkN "baptist" "baptists";
lin baptize_V2 = mkV2 (mkV "baptize" "baptizes" "baptized" "baptized" "baptizing");
lin bar_N = mkN "bar" "bars";
lin bar_Prep = mkPrep "bar";
lin bar_V2 = mkV2 (mkV "bar" "bars" "barred" "barred" "barring");
lin baracaldo_PN = mkPN "Baracaldo";
lin barb_N = mkN "barb" "barbs";
lin barbadian_A = compoundA (mkA "barbadian");
lin barbadian_N = mkN "barbadian" "barbadians";
lin barbados_PN = mkPN "Barbados";
lin barbara_PN = mkPN "Barbara";
lin barbarian_A = compoundA (mkA "barbarian");
lin barbarian_N = mkN "barbarian" "barbarians";
lin barbaric_A = compoundA (mkA "barbaric");
lin barbarism_N = mkN "barbarism" "barbarisms";
lin barbarity_N = mkN "barbarity" "barbarities";
lin barbarization_N = mkN "barbarization" ;
lin barbarize_V2 = mkV2 (mkV "barbarize" "barbarizes" "barbarized" "barbarized" "barbarizing");
lin barbarous_A = compoundA (mkA "barbarous");
lin barbasco_N = mkN "barbasco" ;
lin barbecue_N = mkN "barbecue" "barbecues";
lin barbecue_V2 = mkV2 (mkV "barbecue" "barbecues" "barbecued" "barbecued" "barbecuing");
lin barbecuing_N = mkN "barbecuing" ;
lin barbed_A = compoundA (mkA "barbed");
lin barbel_N = mkN "barbel" "barbels";
lin barbell_N = mkN "barbell" ;
lin barber_N = mkN "barber" "barbers";
lin barberry_N = mkN "barberry" ;
lin barbershop_N = mkN "barbershop" ;
lin barbet_N = mkN "barbet" ;
lin barbette_N = mkN "barbette" ;
lin barbican_N = mkN "barbican" "barbicans";
lin barbital_N = mkN "barbital" ;
lin barbitone_N = mkN "barbitone" ;
lin barbiturate_N = mkN "barbiturate" "barbiturates";
lin barbu_N = mkN "barbu" ;
lin barcarole_N = mkN "barcarole" "barcaroles";
lin barcarolle_N = mkN "barcarolle" "barcarolles";
lin barcelona_PN = mkPN "Barcelona";
lin bard_N = mkN "bard" "bards";
lin bardic_A = compoundA (mkA "bardic");
lin bardolatry_N = mkN "bardolatry" ;
lin bare_A = mkA "bare" "barer";
lin bare_V2 = mkV2 (mkV "bare" "bares" "bared" "bared" "baring");
lin bareback_A = mkA "bareback" ;
lin bareback_Adv = mkAdv "bareback";
lin barebacked_A = compoundA (mkA "barebacked");
lin barebacked_Adv = mkAdv "barebacked";
lin bareboat_N = mkN "bareboat" ;
lin bareboating_N = mkN "bareboating" ;
lin barefaced_A = compoundA (mkA "barefaced");
lin barefoot_A = mkA "barefoot" ;
lin barefoot_Adv = mkAdv "barefoot";
lin barefooted_A = compoundA (mkA "barefooted");
lin barefooted_Adv = mkAdv "barefooted";
lin barehanded_A = mkA "barehanded" ;
lin bareheaded_A = compoundA (mkA "bareheaded");
lin barelegged_A = compoundA (mkA "barelegged");
lin bareness_N = mkN "bareness" ;
lin bargain_N = mkN "bargain" "bargains";
lin bargain_V = mkV "bargain" "bargains" "bargained" "bargained" "bargaining";
lin bargain_V2 = mkV2 (mkV "bargain" "bargains" "bargained" "bargained" "bargaining");
lin bargainer_N = mkN "bargainer" ;
lin bargaining_N = mkN "bargaining" ;
lin barge_N = mkN "barge" "barges";
lin barge_V = mkV "barge" "barges" "barged" "barged" "barging";
lin bargee_N = mkN "bargee" "bargees";
lin bargello_N = mkN "bargello" ;
lin bargepole_N = mkN "bargepole" "bargepoles";
lin bargoed_PN = mkPN "Bargoed";
lin bari_PN = mkPN "Bari";
lin baric_A = mkA "baric" ;
lin barilla_N = mkN "barilla" ;
lin baritone_A = mkA "baritone" ;
lin baritone_N = mkN "baritone" "baritones";
lin barium_N = mkN "barium" ;
lin bark_N = mkN "bark" "barks";
lin bark_V = mkV "bark" "barks" "barked" "barked" "barking";
lin bark_V2 = mkV2 (mkV "bark" "barks" "barked" "barked" "barking");
lin barker_N = mkN "barker" "barkers";
lin barking_PN = mkPN "Barking";
lin barky_A = mkA "barky" ;
lin barley_N = mkN "barley" ;
lin barley_sugar_N = mkN "barley-sugar" "barley-sugars";
lin barley_water_N = mkN "barley-water" ;
lin barleycorn_N = mkN "barleycorn" "barleycorns";
lin barm_N = mkN "barm" ;
lin barmaid_N = mkN "barmaid" "barmaids";
lin barman_N = mkN masculine (mkN "barman" "barmen");
lin barmbrack_N = mkN "barmbrack" ;
lin barmy_A = compoundA (mkA "barmy");
lin barn_N = mkN "barn" "barns";
lin barn_door_N = mkN "barn-door" "barn-doors";
lin barnacle_N = mkN "barnacle" "barnacles";
lin barnard_castle_PN = mkPN "Barnard castle";
lin barnburner_N = mkN "barnburner" ;
lin barndoor_N = mkN "barndoor" ;
lin barnet_PN = mkPN "Barnet";
lin barnful_N = mkN "barnful" ;
lin barnoldswick_PN = mkPN "Barnoldswick";
lin barnsley_PN = mkPN "Barnsley";
lin barnstaple_PN = mkPN "Barnstaple";
lin barnstorm_V = mkV "barnstorm" "barnstorms" "barnstormed" "barnstormed" "barnstorming";
lin barnstormer_N = mkN "barnstormer" "barnstormers";
lin barnyard_N = mkN "barnyard" "barnyards";
lin barograph_N = mkN "barograph" ;
lin barographic_A = mkA "barographic" ;
lin barometer_N = mkN "barometer" "barometers";
lin barometric_A = compoundA (mkA "barometric");
lin baron_N = mkN "baron" "barons";
lin baronage_N = mkN "baronage" "baronages";
lin baronduki_N = mkN "baronduki" ;
lin baroness_N = mkN "baroness" "baronesses";
lin baronet_N = mkN "baronet" "baronets";
lin baronetage_N = mkN "baronetage" ;
lin baronetcy_N = mkN "baronetcy" "baronetcies";
lin barong_N = mkN "barong" ;
lin baronial_A = compoundA (mkA "baronial");
lin barony_N = mkN "barony" "baronies";
lin baroque_A = compoundA (mkA "baroque");
lin baroque_N = mkN "baroque" "IRREG";
lin baroreceptor_N = mkN "baroreceptor" ;
lin barosaur_N = mkN "barosaur" ;
lin barouche_N = mkN "barouche" "barouches";
lin barque_N = mkN "barque" "barques";
lin barrack_N = mkN "barrack" "barracks";
lin barrack_V = mkV "barrack" "barracks" "barracked" "barracked" "barracking";
lin barrack_V2 = mkV2 (mkV "barrack" "barracks" "barracked" "barracked" "barracking");
lin barracking_N = mkN "barracking" ;
lin barracouta_N = mkN "barracouta" ;
lin barracuda_N = mkN "barracuda" "barracudas";
lin barrage_N = mkN "barrage" "barrages";
lin barramundi_N = mkN "barramundi" ;
lin barranquilla_PN = mkPN "Barranquilla";
lin barrator_N = mkN "barrator" ;
lin barratry_N = mkN "barratry" ;
lin barrel_N = mkN "barrel" "barrels";
lin barrel_V2 = mkV2 (mkV "barrel" "barrels" "barrelled" "barrelled" "barrelling");
lin barreled_A = mkA "barreled" ;
lin barrelfish_N = mkN "barrelfish" ;
lin barrelhouse_N = mkN "barrelhouse" ;
lin barrels_N = mkN "barrels" ;
lin barren_A = compoundA (mkA "barren");
lin barren_N = mkN "barren" ;
lin barrenness_N = mkN "barrenness" ;
lin barrenwort_N = mkN "barrenwort" ;
lin barrette_N = mkN "barrette" ;
lin barrhead_PN = mkPN "Barrhead";
lin barricade_N = mkN "barricade" "barricades";
lin barricade_V2 = mkV2 (mkV "barricade" "barricades" "barricaded" "barricaded" "barricading");
lin barrier_N = mkN "barrier" "barriers";
lin barring_N = mkN "barring" ;
lin barrio_N = mkN "barrio" ;
lin barrister_N = mkN "barrister" "barristers";
lin barroom_N = mkN "barroom" ;
lin barrow_N = mkN "barrow" "barrows";
lin barrow_boy_N = mkN "barrow-boy" "barrow-boys";
lin barrow_in_furness_PN = mkPN "Barrow-in-furness";
lin barrow_man_N = mkN masculine (mkN "barrow-man" "barrow-men");
lin barry_PN = mkPN "Barry";
lin bart_PN = mkPN "Bart";
lin bartender_N = mkN "bartender" "bartenders";
lin barter_N = mkN "barter" ;
lin barter_V = mkV "barter" "barters" "bartered" "bartered" "bartering";
lin barter_V2 = mkV2 (mkV "barter" "barters" "bartered" "bartered" "bartering");
lin barterer_N = mkN "barterer" "barterers";
lin bartholomew_PN = mkPN "Bartholomew";
lin bartlett_N = mkN "bartlett" ;
lin barton_upon_humber_PN = mkPN "Barton-upon-humber";
lin bartonia_N = mkN "bartonia" ;
lin barycenter_N = mkN "barycenter" ;
lin barye_N = mkN "barye" ;
lin baryon_N = mkN "baryon" ;
lin baryta_N = mkN "baryta" ;
lin barytic_A = mkA "barytic" ;
lin bas_relief_N = mkN "bas-relief" "bas-reliefs";
lin basal_A = compoundA (mkA "basal");
lin basalt_N = mkN "basalt" ;
lin basaltic_A = mkA "basaltic" ;
lin bascule_N = mkN "bascule" "bascules";
lin base_A = mkA "base" "baser";
lin base_N = mkN "base" "bases";
lin base_V = mkV "base";
lin base_V2 = mkV2 (mkV "base" "bases" "based" "based" "basing");
lin baseball_N = mkN "baseball" "baseballs";
lin baseboard_N = mkN "baseboard" "baseboards";
lin basel_PN = mkPN "Basel";
lin baseless_A = compoundA (mkA "baseless");
lin baseline_N = mkN "baseline" ;
lin basement_N = mkN "basement" "basements";
lin baseness_N = mkN "baseness" ;
lin basenji_N = mkN "basenji" ;
lin bash_N = mkN "bash" "bashes";
lin bash_V2 = mkV2 (mkV "bash" "bashes" "bashed" "bashed" "bashing");
lin bashful_A = compoundA (mkA "bashful");
lin basic_A = compoundA (mkA "basic");
lin basic_N = mkN "basic" ;
lin basically_Adv = mkAdv "basically";
lin basics_N = mkN "basics" ;
lin basidial_A = mkA "basidial" ;
lin basidiocarp_N = mkN "basidiocarp" ;
lin basidiolichen_N = mkN "basidiolichen" ;
lin basidiomycete_N = mkN "basidiomycete" ;
lin basidiomycetous_A = mkA "basidiomycetous" ;
lin basidiospore_N = mkN "basidiospore" ;
lin basidiosporous_A = mkA "basidiosporous" ;
lin basidium_N = mkN "basidium" ;
lin basifixed_A = mkA "basifixed" ;
lin basil_N = mkN "basil" ;
lin basil_PN = mkPN "Basil";
lin basilar_A = mkA "basilar" ;
lin basildon_PN = mkPN "Basildon";
lin basileus_N = mkN "basileus" ;
lin basilica_N = mkN "basilica" "basilicas";
lin basilican_A = mkA "basilican" ;
lin basilisk_N = mkN "basilisk" "basilisks";
lin basin_N = mkN "basin" "basins";
lin basinal_A = mkA "basinal" ;
lin basined_A = mkA "basined" ;
lin basinet_N = mkN "basinet" ;
lin basingstoke_PN = mkPN "Basingstoke";
lin basipetal_A = mkA "basipetal" ;
lin basis_N = mkN "basis" "bases" {- FIXME: guessed plural form -};
lin basiscopic_A = mkA "basiscopic" ;
lin bask_V = mkV "bask" "basks" "basked" "basked" "basking";
lin basket_N = mkN "basket" "baskets";
lin basketball_N = mkN "basketball" "basketballs";
lin basketry_N = mkN "basketry" ;
lin basketweaver_N = mkN "basketweaver" ;
lin basophil_N = mkN "basophil" ;
lin basophilia_N = mkN "basophilia" ;
lin basophilic_A = mkA "basophilic" ;
lin bass_A = compoundA (mkA "bass");
lin bass_N = mkN "bass" ;
lin bassarisk_N = mkN "bassarisk" ;
lin basset_N = mkN "basset" ;
lin bassine_N = mkN "bassine" ;
lin bassinet_N = mkN "bassinet" "bassinets";
lin bassist_N = mkN "bassist" ;
lin bassoon_N = mkN "bassoon" "bassoons";
lin bassoonist_N = mkN "bassoonist" ;
lin basswood_N = mkN "basswood" ;
lin bast_N = mkN "bast" ;
lin bastard_N = mkN "bastard" "bastards";
lin bastardization_N = mkN "bastardization" ;
lin bastardize_V2 = mkV2 (mkV "bastardize" "bastardizes" "bastardized" "bastardized" "bastardizing");
lin bastardly_A = mkA "bastardly" ;
lin bastardy_N = mkN "bastardy" "bastardies";
lin baste_N = mkN "baste" ;
lin baste_V2 = mkV2 (mkV "baste" "bastes" "basted" "basted" "basting");
lin baster_N = mkN "baster" ;
lin bastille_N = mkN "bastille" ;
lin bastinado_N = mkN "bastinado" "bastinadi" {- FIXME: guessed plural form -};
lin bastinado_V2 = mkV2 (mkV "bastinado" "bastinados" "bastinadoed" "bastinadoed" "bastinadoing");
lin basting_N = mkN "basting" ;
lin bastion_N = mkN "bastion" "bastions";
lin bastioned_A = mkA "bastioned" ;
lin bastnasite_N = mkN "bastnasite" ;
lin basuco_N = mkN "basuco" ;
lin bat_N = mkN "bat" "bats";
lin bat_V = mkV "bat" "bats" "batted" "batted" "batting";
lin bat_V2 = mkV2 (mkV "bat" "bats" "batted" "batted" "batting");
lin batch_N = mkN "batch" "batches";
lin bate_V2 = mkV2 (mkV "bate" "bates" "bated" "bated" "bating");
lin batfish_N = mkN "batfish" ;
lin bath_N = mkN "bath" "baths";
lin bath_PN = mkPN "Bath";
lin bath_V = mkV "bath" "baths" "bathed" "bathed" "bathing";
lin bath_V2 = mkV2 (mkV "bath" "baths" "bathed" "bathed" "bathing");
lin bath_chair_N = mkN "bath-chair" "bath-chairs";
lin bathe_N = mkN "bathe" "bathes";
lin bathe_V = mkV "bathe" "bathes" "bathed" "bathed" "bathing";
lin bathe_V2 = mkV2 (mkV "bathe" "bathes" "bathed" "bathed" "bathing");
lin bather_N = mkN "bather" "bathers";
lin bathetic_A = mkA "bathetic" ;
lin bathgate_PN = mkPN "Bathgate";
lin bathhouse_N = mkN "bathhouse" ;
lin bathing_N = mkN "bathing" "bathings";
lin bathing_cap_N = mkN "bathing-cap" "bathing-caps";
lin bathing_costume_N = mkN "bathing-costume" "bathing-costumes";
lin bathing_machine_N = mkN "bathing-machine" "bathing-machines";
lin bathing_suit_N = mkN "bathing-suit" "bathing-suits";
lin batholith_N = mkN "batholith" ;
lin batholithic_A = mkA "batholithic" ;
lin bathos_N = mkN "bathos" ;
lin bathrobe_N = mkN "bathrobe" "bathrobes";
lin bathroom_N = mkN "bathroom" "bathrooms";
lin bathtub_N = mkN "bathtub" "bathtubs";
lin bathyal_A = mkA "bathyal" ;
lin bathymeter_N = mkN "bathymeter" ;
lin bathymetric_A = mkA "bathymetric" ;
lin bathymetry_N = mkN "bathymetry" ;
lin bathyscaphe_N = mkN "bathyscaphe" ;
lin bathysphere_N = mkN "bathysphere" "bathyspheres";
lin batik_N = mkN "batik" "batiks";
lin batiste_N = mkN "batiste" ;
lin batley_PN = mkPN "Batley";
lin batman_N = mkN masculine (mkN "batman" "batmen");
lin baton_N = mkN "baton" "batons";
lin batrachomyomachia_N = mkN "batrachomyomachia" ;
lin bats_A = compoundA (mkA "bats");
lin batsman_N = mkN masculine (mkN "batsman" "batsmen");
lin battalion_N = mkN "battalion" "battalions";
lin batten_N = mkN "batten" "battens";
lin batten_V = mkV "batten" "battens" "battened" "battened" "battening";
lin batten_V2 = mkV2 (mkV "batten" "battens" "battened" "battened" "battening");
lin batter_N = mkN "batter" ;
lin batter_V = mkV "batter" "batters" "battered" "battered" "battering";
lin batter_V2 = mkV2 (mkV "batter" "batters" "battered" "battered" "battering");
lin battering_N = mkN "battering" ;
lin battery_N = mkN "battery" "batteries";
lin batting_N = mkN "batting" ;
lin batting_N = mkN "batting";
lin battle_N = mkN "battle" "battles";
lin battle_V = mkV "battle" "battles" "battled" "battled" "battling";
lin battle_V2 = mkV2 (mkV "battle" "battles" "battled" "battled" "battling");
lin battle_axe_N = mkN "battle-axe" "battle-axes";
lin battle_cruiser_N = mkN "battle-cruiser" "battle-cruisers";
lin battledore_N = mkN "battledore" "battledores";
lin battledress_N = mkN "battledress";
lin battlefield_N = mkN "battlefield" "battlefields";
lin battlefront_N = mkN "battlefront" ;
lin battleful_A = mkA "battleful" ;
lin battleground_N = mkN "battleground" "battlegrounds";
lin battlement_N = mkN "battlement" ;
lin battlemented_A = mkA "battlemented" ;
lin battleship_N = mkN "battleship" "battleships";
lin battue_N = mkN "battue" "battues";
lin batty_A = compoundA (mkA "batty");
lin batwing_A = mkA "batwing" ;
lin batwing_N = mkN "batwing" ;
lin bauble_N = mkN "bauble" "baubles";
lin baud_N = mkN "baud" ;
lin baulk_N = mkN "baulk" "baulks";
lin baulk_V = mkV "baulk" "baulks" "baulked" "baulked" "baulking";
lin baulk_V2 = mkV2 (mkV "baulk" "baulks" "baulked" "baulked" "baulking");
lin bauxite_N = mkN "bauxite" ;
lin bauxitic_A = mkA "bauxitic" ;
lin bawbee_N = mkN "bawbee" "bawbees";
lin bawd_N = mkN "bawd" "bawds";
lin bawdry_N = mkN "bawdry" ;
lin bawdy_A = mkA "bawdy" "bawdier";
lin bawdy_N = mkN "bawdy" ;
lin bawl_V = mkV "bawl" "bawls" "bawled" "bawled" "bawling";
lin bawl_V2 = mkV2 (mkV "bawl" "bawls" "bawled" "bawled" "bawling");
lin bawler_N = mkN "bawler" ;
lin bay_A = compoundA (mkA "bay");
lin bay_N = mkN "bay" "bays";
lin bay_V = mkV "bay" "bays" "bayed" "bayed" "baying";
lin bay_wreath_N = mkN "bay-wreath" "bay-wreaths";
lin baya_N = mkN "baya" ;
lin bayat_N = mkN "bayat" ;
lin bayberry_N = mkN "bayberry" ;
lin bayonet_N = mkN "bayonet" "bayonets";
lin bayonet_V2 = mkV2 (mkV "bayonet" "bayonets" "bayoneted" "bayoneted" "bayoneting");
lin bayou_N = mkN "bayou" "bayous";
lin bazaar_N = mkN "bazaar" "bazaars";
lin bazooka_N = mkN "bazooka" "bazookas";
lin bbc_PN = mkPN "BBC";
lin bdellium_N = mkN "bdellium" ;
lin beach_N = mkN "beach" "beaches";
lin beach_V2 = mkV2 (mkV "beach" "beaches" "beached" "beached" "beaching");
lin beachcomber_N = mkN "beachcomber" "beachcombers";
lin beachfront_N = mkN "beachfront" ;
lin beachhead_N = mkN "beachhead" "beachheads";
lin beachwear_N = mkN "beachwear" ;
lin beacon_N = mkN "beacon" "beacons";
lin beacon_fire_N = mkN "beacon-fire" "beacon-fires";
lin beacon_light_N = mkN "beacon-light" "beacon-lights";
lin beaconsfield_PN = mkPN "Beaconsfield";
lin bead_N = mkN "bead" "beads";
lin beaded_A = mkA "beaded" ;
lin beading_N = mkN "beading" ;
lin beadle_N = mkN "beadle" "beadles";
lin beads_N = mkN "beads" ;
lin beadsman_N = mkN masculine (mkN "beadsman");
lin beady_A = compoundA (mkA "beady");
lin beagle_N = mkN "beagle" "beagles";
lin beagling_N = mkN "beagling" ;
lin beak_N = mkN "beak" "beaks";
lin beaked_A = mkA "beaked" ;
lin beaker_N = mkN "beaker" "beakers";
lin beakless_A = mkA "beakless" ;
lin beaklike_A = mkA "beaklike" ;
lin beam_N = mkN "beam" "beams";
lin beam_V = mkV "beam" "beams" "beamed" "beamed" "beaming";
lin beam_V2 = mkV2 (mkV "beam" "beams" "beamed" "beamed" "beaming");
lin beamish_A = mkA "beamish" ;
lin beamy_A = mkA "beamy" ;
lin bean_N = mkN "bean" "beans";
lin beanbag_N = mkN "beanbag" ;
lin beanball_N = mkN "beanball" ;
lin beanfeast_N = mkN "beanfeast" "beanfeasts";
lin beanie_N = mkN "beanie" ;
lin beano_N = mkN "beano" "beanos";
lin beanstalk_N = mkN "beanstalk" "beanstalks";
lin bear_N = mkN "bear" "bears";
lin bear_V = IrregEng.bear_V;
lin bear_V2 = mkV2 (IrregEng.bear_V);
lin bearable_A = compoundA (mkA "bearable");
lin bearberry_N = mkN "bearberry" ;
lin beard_N = mkN "beard" "beards";
lin beard_V2 = mkV2 (mkV "beard" "beards" "bearded" "bearded" "bearding");
lin beardless_A = compoundA (mkA "beardless");
lin bearer_N = mkN "bearer" "bearers";
lin bearing_N = mkN "bearing" "bearings";
lin bearish_A = compoundA (mkA "bearish");
lin bearnaise_N = mkN "bearnaise" ;
lin bearsden_PN = mkPN "Bearsden";
lin bearskin_N = mkN "bearskin" "bearskins";
lin beast_N = mkN "beast" "beasts";
lin beastliness_N = mkN "beastliness" ;
lin beastly_A = mkA "beastly" "beastlier";
lin beastly_Adv = mkAdv "beastly";
lin beat_N = mkN "beat" "beats";
lin beat_V = IrregEng.beat_V;
lin beat_V2 = mkV2 (IrregEng.beat_V);
lin beatable_A = mkA "beatable" ;
lin beaten_A = compoundA (mkA "beaten");
lin beater_N = mkN "beater" "beaters";
lin beatific_A = compoundA (mkA "beatific");
lin beatification_N = mkN "beatification" "beatifications";
lin beatify_V2 = mkV2 (mkV "beatify" "beatifies" "beatified" "beatified" "beatifying");
lin beating_N = mkN "beating" "beatings";
lin beatitude_N = mkN "beatitude" "beatitudes";
lin beatnik_N = mkN "beatnik" "beatniks";
lin beatrice_PN = mkPN "Beatrice";
lin beau_N = mkN "beau" "beaux" {- FIXME: guessed plural form -};
lin beaugregory_N = mkN "beaugregory" ;
lin beaujolais_N = mkN "beaujolais" ;
lin beaumaris_PN = mkPN "Beaumaris";
lin beauteous_A = compoundA (mkA "beauteous");
lin beautician_N = mkN "beautician" "beauticians";
lin beautification_N = mkN "beautification" ;
lin beautiful_A = compoundA (mkA "beautiful");
lin beautify_V2 = mkV2 (mkV "beautify" "beautifies" "beautified" "beautified" "beautifying");
lin beauty_N = mkN "beauty" "beauties";
lin beauty_parlour_N = mkN "beauty-parlour" "beauty-parlours";
lin beauty_salon_N = mkN "beauty-salon" "beauty-salons";
lin beauty_sleep_N = mkN "beauty-sleep" ;
lin beauty_spot_N = mkN "beauty-spot" "beauty-spots";
lin beaver_N = mkN "beaver" "beavers";
lin beaver_V = mkV "beaver" "beavers" "beavered" "beavered" "beavering";
lin bebington_PN = mkPN "Bebington";
lin becalmed_A = compoundA (mkA "becalmed");
lin because_Subj = mkSubj "because";
lin because_of_Prep = mkPrep "because of";
lin beccles_PN = mkPN "Beccles";
lin beck_N = mkN "beck" "becks";
lin becket_N = mkN "becket" ;
lin beckon_V = mkV "beckon" "beckons" "beckoned" "beckoned" "beckoning";
lin beckon_V2 = mkV2 (mkV "beckon" "beckons" "beckoned" "beckoned" "beckoning");
lin become_V = IrregEng.become_V;
lin become_V2 = mkV2 (IrregEng.become_V);
lin become_VA = mkVA (IrregEng.become_V);
lin become_VS = mkVS (IrregEng.become_V);
lin becomingly_Adv = mkAdv "becomingly" ;
lin becomingness_N = mkN "becomingness" ;
lin bed_N = mkN "bed" "beds";
lin bed_V2 = mkV2 (mkV "bed" "beds" "bedded" "bedded" "bedding");
lin bedaubed_A = compoundA (mkA "bedaubed");
lin bedbug_N = mkN "bedbug" "bedbugs";
lin bedclothes_N = mkN "bedclothes" ;
lin beddau_PN = mkPN "Beddau";
lin bedder_N = mkN "bedder" ;
lin bedding_N = mkN "bedding" ;
lin bedecked_A = compoundA (mkA "bedecked");
lin bedevil_V2 = mkV2 (mkV "bedevil" "bedevils" "bedevilled" "bedevilled" "bedevilling");
lin bedevilment_N = mkN "bedevilment" "bedevilments";
lin bedewed_A = compoundA (mkA "bedewed");
lin bedfast_A = mkA "bedfast" ;
lin bedfellow_N = mkN "bedfellow" "bedfellows";
lin bedford_PN = mkPN "Bedford";
lin bedfordshire_PN = mkPN "Bedfordshire";
lin bedimmed_A = compoundA (mkA "bedimmed");
lin bedlam_N = mkN "bedlam" "bedlams";
lin bedlamite_N = mkN "bedlamite" ;
lin bedless_A = mkA "bedless" ;
lin bedlington_PN = mkPN "Bedlington";
lin bedouin_N = mkN "bedouin" "bedouin";
lin bedpan_N = mkN "bedpan" "bedpans";
lin bedpost_N = mkN "bedpost" "bedposts";
lin bedraggled_A = compoundA (mkA "bedraggled");
lin bedrest_N = mkN "bedrest" ;
lin bedridden_A = compoundA (mkA "bedridden");
lin bedrock_N = mkN "bedrock" "bedrocks";
lin bedroll_N = mkN "bedroll" "bedrolls";
lin bedroom_N = mkN "bedroom" "bedrooms";
lin bedroomed_A = compoundA (mkA "bedroomed");
lin bedside_N = mkN "bedside" "bedsides";
lin bedsit_N = mkN "bedsit" "bedsits";
lin bedsitter_N = mkN "bedsitter" "bedsitters";
lin bedsitting_room_N = mkN "bedsitting-room" "bedsitting-rooms";
lin bedsore_N = mkN "bedsore" "bedsores";
lin bedspread_N = mkN "bedspread" "bedspreads";
lin bedspring_N = mkN "bedspring" ;
lin bedstead_N = mkN "bedstead" "bedsteads";
lin bedstraw_N = mkN "bedstraw" ;
lin bedtime_N = mkN "bedtime" "bedtimes";
lin beduin_N = mkN "beduin" "beduin";
lin bedwas_PN = mkPN "Bedwas";
lin bedwetter_N = mkN "bedwetter" ;
lin bee_N = mkN "bee" "bees";
lin beebread_N = mkN "beebread" ;
lin beech_N = mkN "beech" "beeches";
lin beechen_A = mkA "beechen" ;
lin beechnut_N = mkN "beechnut" ;
lin beef_N = mkN "beef" "beeves" {- FIXME: guessed plural form -};
lin beef_V = mkV "beef" "beefs" "beefed" "beefed" "beefing";
lin beefcake_N = mkN "beefcake" ;
lin beefeater_N = mkN "beefeater" "beefeaters";
lin beefsteak_N = mkN "beefsteak" "beefsteaks";
lin beefwood_N = mkN "beefwood" ;
lin beefy_A = mkA "beefy" "beefier";
lin beehive_N = mkN "beehive" "beehives";
lin beekeeper_N = mkN "beekeeper" ;
lin beekeeping_N = mkN "beekeeping" ;
lin beeline_N = mkN "beeline" ;
lin beep_N = mkN "beep" "beeps";
lin beeper_N = mkN "beeper" ;
lin beer_N = mkN "beer" "beers";
lin beery_A = mkA "beery" "beerier";
lin beeswax_N = mkN "beeswax" ;
lin beeswax_V2 = mkV2 (mkV "beeswax" "beeswaxes" "beeswaxed" "beeswaxed" "beeswaxing");
lin beet_N = mkN "beet" "beets";
lin beetle_A = mkA "beetle" ;
lin beetle_N = mkN "beetle" "beetles";
lin beetle_V = mkV "beetle" "beetles" "beetled" "beetled" "beetling";
lin beetle_browed_A = compoundA (mkA "beetle-browed");
lin beetroot_N = mkN "beetroot" "beetroots";
lin befall_V = mkV "be" IrregEng.fall_V;
lin befall_V2 = mkV2 (mkV "be" IrregEng.fall_V);
lin befit_V2 = mkV2 (mkV "befit" "befits" "befitted" "befitted" "befitting");
lin befitting_A = compoundA (mkA "befitting");
lin befogged_A = compoundA (mkA "befogged");
lin before_Adv = mkAdv "before";
lin before_Prep = mkPrep "before";
lin before_Subj = mkSubj "before";
lin beforehand_A = compoundA (mkA "beforehand");
lin beforehand_Adv = mkAdv "beforehand";
lin befoul_V2 = mkV2 (mkV "befoul" "befouls" "befouled" "befouled" "befouling");
lin befoulment_N = mkN "befoulment" ;
lin befriend_V2 = mkV2 (mkV "befriend" "befriends" "befriended" "befriended" "befriending");
lin beg_V = mkV "beg" "begs" "begged" "begged" "begging";
lin beg_V2 = mkV2 (mkV "beg" "begs" "begged" "begged" "begging");
lin beget_V2 = mkV2 (mkV "be" IrregEng.get_V);
lin begetter_N = mkN "begetter" "begetters";
lin beggar_N = mkN human (mkN "beggar" "beggars");
lin beggar_V2 = mkV2 (mkV "beggar" "beggars" "beggared" "beggared" "beggaring");
lin beggarly_A = compoundA (mkA "beggarly");
lin beggarman_N = mkN masculine (mkN "beggarman" "beggarmen");
lin beggarweed_N = mkN "beggarweed" ;
lin beggarwoman_N = mkN feminine (mkN "beggarwoman" "beggarwomen");
lin beggary_N = mkN "beggary" ;
lin begin_V = IrregEng.begin_V;
lin begin_V2 = mkV2 (IrregEng.begin_V);
lin begin_to_VV = mkVV (IrregEng.begin_V);
lin begin_ing_VV = ingVV (IrregEng.begin_V);
lin beginner_N = mkN "beginner" "beginners";
lin beginning_N = mkN "beginning" "beginnings";
lin begonia_N = mkN "begonia" "begonias";
lin begrimed_A = compoundA (mkA "begrimed");
lin begrudge_V2 = mkV2 (mkV "begrudge" "begrudges" "begrudged" "begrudged" "begrudging");
lin beguile_V2 = mkV2 (mkV "beguile" "beguiles" "beguiled" "beguiled" "beguiling");
lin beguilement_N = mkN "beguilement" ;
lin beguiling_A = mkA "beguiling" ;
lin beguine_N = mkN "beguine" ;
lin begum_N = mkN "begum" "begums";
lin behalf_N = mkN "behalf" "behalves" {- FIXME: guessed plural form -};
lin behave_V = mkV "behave" "behaves" "behaved" "behaved" "behaving";
lin behaved_A = compoundA (mkA "behaved");
lin behavior_N = mkN "behavior" ;
lin behavioral_A = mkA "behavioral" ;
lin behaviorism_N = mkN "behaviorism" ;
lin behaviorist_N = mkN "behaviorist" ;
lin behavioristic_A = mkA "behavioristic" ;
lin behaviour_N = mkN "behaviour" ;
lin behaviourism_N = mkN "behaviourism" ;
lin behaviourist_N = mkN "behaviourist" "behaviourists";
lin behead_V2 = mkV2 (mkV "behead" "beheads" "beheaded" "beheaded" "beheading");
lin behest_N = mkN "behest" "behests";
lin behind_Adv = mkAdv "behind";
lin behind_N = mkN "behind" "behinds";
lin behind_Prep = mkPrep "behind";
lin behindhand_A = compoundA (mkA "behindhand");
lin behold_V2 = mkV2 (mkV "be" IrregEng.hold_V);
lin beholden_A = compoundA (mkA "beholden");
lin beholder_N = mkN "beholder" "beholders";
lin behove_V2 = mkV2 (mkV "behove" "behoves" "behoved" "behoved" "behoving");
lin beige_A = mkA "beige" ;
lin beige_N = mkN "beige" ;
lin being_N = mkN "being" "beings";
lin beirut_PN = mkPN "Beirut";
lin beith_PN = mkPN "Beith";
lin bejewelled_A = compoundA (mkA "bejewelled");
lin belabour_V2 = mkV2 (mkV "belabour" "belabours" "belaboured" "belaboured" "belabouring");
lin belated_A = compoundA (mkA "belated");
lin belay_N = mkN "belay" "belays";
lin belay_V2 = mkV2 (mkV "belay" "belays" "belayed" "belayed" "belaying");
lin belaying_pin_N = mkN "belaying-pin" "belaying-pins";
lin belch_N = mkN "belch" "belches";
lin belch_V = mkV "belch" "belches" "belched" "belched" "belching";
lin belch_V2 = mkV2 (mkV "belch" "belches" "belched" "belched" "belching");
lin belching_N = mkN "belching" ;
lin beldam_N = mkN "beldam" "beldams";
lin beldame_N = mkN "beldame" "beldames";
lin beleaguer_V2 = mkV2 (mkV "beleaguer" "beleaguers" "beleaguered" "beleaguered" "beleaguering");
lin belem_PN = mkPN "Belem";
lin belemnite_N = mkN "belemnite" ;
lin belemnitic_A = mkA "belemnitic" ;
lin belfast_PN = mkPN "Belfast";
lin belfry_N = mkN "belfry" "belfries";
lin belgian_A = compoundA (mkA "belgian");
lin belgian_N = mkN "belgian" "belgians";
lin belgium_PN = mkPN "Belgium";
lin belgrade_PN = mkPN "Belgrade";
lin belie_V2 = mkV2 (mkV "be" IrregEng.lie_V);
lin belief_N = mkN "belief" "beliefs";
lin believable_A = compoundA (mkA "believable");
lin believe_V = mkV "believe" "believes" "believed" "believed" "believing";
lin believe_V2 = mkV2 (mkV "believe" "believes" "believed" "believed" "believing");
lin believe_V2V = mkV2V (mkV "believe" "believes" "believed" "believed" "believing") noPrep to_Prep ;
lin believe_VS = mkVS (mkV "believe" "believes" "believed" "believed" "believing");
lin believer_N = mkN "believer" "believers";
lin believing_N = mkN "believing" ;
lin belike_Adv = mkAdv "belike";
lin belinda_PN = mkPN "Belinda";
lin belittle_V2 = mkV2 (mkV "belittle" "belittles" "belittled" "belittled" "belittling");
lin belittling_A = mkA "belittling" ;
lin belittling_N = mkN "belittling" ;
lin bell_N = mkN "bell" "bells";
lin bell_V2 = mkV2 (mkV "bell" "bells" "belled" "belled" "belling");
lin bell_bottomed_A = compoundA (mkA "bell-bottomed");
lin bell_buoy_N = mkN "bell-buoy" "bell-buoys";
lin bell_flower_N = mkN "bell-flower" "bell-flowers";
lin bell_founder_N = mkN "bell-founder" "bell-founders";
lin bell_foundry_N = mkN "bell-foundry" "bell-foundries";
lin bell_metal_N = mkN "bell-metal" ;
lin bell_push_N = mkN "bell-push" "bell-pushes";
lin bell_ringer_N = mkN "bell-ringer" "bell-ringers";
lin bell_tent_N = mkN "bell-tent" "bell-tents";
lin bella_PN = mkPN "Bella";
lin belladonna_N = mkN "belladonna" "belladonnas";
lin bellarmine_N = mkN "bellarmine" ;
lin bellbird_N = mkN "bellbird" ;
lin bellboy_N = mkN "bellboy" "bellboys";
lin belle_N = mkN "belle" "belles";
lin belle_PN = mkPN "Belle";
lin belletristic_A = mkA "belletristic" ;
lin bellhop_N = mkN "bellhop" "bellhops";
lin bellicose_A = compoundA (mkA "bellicose");
lin bellicosity_N = mkN "bellicosity" ;
lin belligerence_N = mkN "belligerence" ;
lin belligerency_N = mkN "belligerency" ;
lin belligerent_A = compoundA (mkA "belligerent");
lin belligerent_N = mkN "belligerent" "belligerents";
lin bellow_N = mkN "bellow" ;
lin bellow_V = mkV "bellow" "bellows" "bellowed" "bellowed" "bellowing";
lin bellow_V2 = mkV2 (mkV "bellow" "bellows" "bellowed" "bellowed" "bellowing");
lin bellows_N = mkN "bellows" ;
lin bellpull_N = mkN "bellpull" ;
lin bellshill_PN = mkPN "Bellshill";
lin bellwether_N = mkN "bellwether" "bellwethers";
lin bellwort_N = mkN "bellwort" ;
lin belly_N = mkN "belly" "bellies";
lin belly_V = mkV "belly" "bellies" "bellied" "bellied" "bellying";
lin belly_V2 = mkV2 (mkV "belly" "bellies" "bellied" "bellied" "bellying");
lin bellyache_N = mkN "bellyache" "bellyaches";
lin bellyache_V = mkV "bellyache" "bellyaches" "bellyached" "bellyached" "bellyaching";
lin bellyband_N = mkN "bellyband" ;
lin bellyflop_N = mkN "bellyflop" "bellyflops";
lin bellyful_N = mkN "bellyful" "bellyfuls";
lin bellyland_V = mkV "bellyland" "bellylands" "bellylanded" "bellylanded" "bellylanding";
lin bellylaugh_N = mkN "bellylaugh" "bellylaughs";
lin bellylaugh_V = mkV "bellylaugh" "bellylaughs" "bellylaughed" "bellylaughed" "bellylaughing";
lin bellyless_A = mkA "bellyless" ;
lin belo_horizonte_PN = mkPN "Belo Horizonte";
lin belong_V = mkV "belong" "belongs" "belonged" "belonged" "belonging";
lin belonging_N = mkN "belonging" ;
lin beloved_A = compoundA (mkA "beloved");
lin beloved_N = mkN "beloved" "beloveds";
lin below_Adv = mkAdv "below";
lin below_Prep = mkPrep "below";
lin belowground_A = mkA "belowground" ;
lin belper_PN = mkPN "Belper";
lin belt_N = mkN "belt" "belts";
lin belt_V2 = mkV2 (mkV "belt" "belts" "belted" "belted" "belting");
lin belting_N = mkN "belting" "beltings";
lin beltlike_A = mkA "beltlike" ;
lin beltway_N = mkN "beltway" ;
lin beluga_N = mkN "beluga" ;
lin belvedere_N = mkN "belvedere" ;
lin bemoan_V2 = mkV2 (mkV "bemoan" "bemoans" "bemoaned" "bemoaned" "bemoaning");
lin bemused_A = compoundA (mkA "bemused");
lin ben_N = mkN "ben" "bens";
lin ben_PN = mkPN "Ben";
lin bench_N = mkN "bench" "benches";
lin benchmark_N = mkN "benchmark" ;
lin bend_N = mkN "bend" "bends";
lin bend_V = mkV "bend" "bends" "bended" "bended" "bending";
lin bend_V2 = mkV2 (mkV "bend" "bends" "bended" "bended" "bending");
lin bendability_N = mkN "bendability" ;
lin bendable_A = mkA "bendable" ;
lin bender_N = mkN "bender" ;
lin bending_N = mkN "bending" ;
lin beneath_Adv = mkAdv "beneath";
lin beneath_Prep = mkPrep "beneath";
lin benedick_N = mkN "benedick" "benedicks";
lin benedictine_A = compoundA (mkA "benedictine");
lin benedictine_N = mkN "benedictine" "benedictines";
lin benediction_N = mkN "benediction" "benedictions";
lin benedictory_A = mkA "benedictory" ;
lin benefaction_N = mkN "benefaction" "benefactions";
lin benefactor_N = mkN "benefactor" "benefactors";
lin benefactress_N = mkN "benefactress" "benefactresses";
lin benefic_A = mkA "benefic" ;
lin benefice_N = mkN "benefice" "benefices";
lin beneficed_A = compoundA (mkA "beneficed");
lin beneficence_N = mkN "beneficence" ;
lin beneficent_A = compoundA (mkA "beneficent");
lin beneficial_A = compoundA (mkA "beneficial");
lin beneficiary_A = mkA "beneficiary" ;
lin beneficiary_N = mkN "beneficiary" "beneficiaries";
lin benefit_N = mkN "benefit" "benefits";
lin benefit_V = mkV "benefit" "benefits" "benefited" "benefited" "benefiting";
lin benefit_V2 = mkV2 (mkV "benefit" "benefits" "benefited" "benefited" "benefiting");
lin benevolence_N = mkN "benevolence" ;
lin benevolent_A = compoundA (mkA "benevolent");
lin bengali_A = compoundA (mkA "bengali");
lin bengali_N = mkN "bengali" "bengalis";
lin benighted_A = compoundA (mkA "benighted");
lin benign_A = compoundA (mkA "benign");
lin benignant_A = compoundA (mkA "benignant");
lin benignity_N = mkN "benignity" "benignities";
lin benin_PN = mkPN "Benin";
lin beninese_A = compoundA (mkA "beninese");
lin beninese_N = mkN "beninese" "beninese";
lin benison_N = mkN "benison" "benisons";
lin benjamin_PN = mkPN "Benjamin";
lin bennet_N = mkN "bennet" ;
lin benny_PN = mkPN "Benny";
lin bent_A = compoundA (mkA "bent");
lin bent_N = mkN "bent" "bents";
lin benthic_A = mkA "benthic" ;
lin benthos_N = mkN "benthos" ;
lin bentonite_N = mkN "bentonite" ;
lin bentonitic_A = mkA "bentonitic" ;
lin bentwood_N = mkN "bentwood" ;
lin benumbed_A = compoundA (mkA "benumbed");
lin benzedrine_N = mkN "benzedrine" "benzedrines";
lin benzene_N = mkN "benzene" ;
lin benzenoid_A = mkA "benzenoid" ;
lin benzine_N = mkN "benzine" ;
lin benzoate_N = mkN "benzoate" ;
lin benzocaine_N = mkN "benzocaine" ;
lin benzodiazepine_N = mkN "benzodiazepine" ;
lin benzofuran_N = mkN "benzofuran" ;
lin benzoic_A = mkA "benzoic" ;
lin benzoin_N = mkN "benzoin" ;
lin benzol_N = mkN "benzol" ;
lin benzyl_N = mkN "benzyl" ;
lin benzylic_A = mkA "benzylic" ;
lin beograd_PN = mkPN "Beograd";
lin bequeath_V2 = mkV2 (mkV "bequeath" "bequeaths" "bequeathed" "bequeathed" "bequeathing");
lin bequest_N = mkN "bequest" "bequests";
lin berate_V2 = mkV2 (mkV "berate" "berates" "berated" "berated" "berating");
lin berating_N = mkN "berating" ;
lin bereave_V2 = mkV2 (mkV "bereave" "bereaves" "bereaved" "bereaved" "bereaving");
lin bereaved_N = mkN "bereaved" ;
lin bereavement_N = mkN "bereavement" "bereavements";
lin bereft_A = mkA "bereft" ;
lin beret_N = mkN "beret" "berets";
lin berg_N = mkN "berg" "bergs";
lin bergamo_PN = mkPN "Bergamo";
lin bergamot_N = mkN "bergamot" ;
lin bergen_PN = mkPN "Bergen";
lin bergenia_N = mkN "bergenia" ;
lin beri_beri_N = mkN "beri-beri" ;
lin beriberi_N = mkN "beriberi" ;
lin berk_N = mkN "berk" ;
lin berkelium_N = mkN "berkelium" ;
lin berkhamsted_PN = mkPN "Berkhamsted";
lin berkshire_PN = mkPN "Berkshire";
lin berlin_N = mkN "berlin" ;
lin berlin_PN = mkPN "Berlin";
lin berm_N = mkN "berm" ;
lin bermuda_PN = mkPN "Bermuda";
lin bermudan_A = compoundA (mkA "bermudan");
lin bermudan_N = mkN "bermudan" "bermudans";
lin bern_PN = mkPN "Bern";
lin bernard_PN = mkPN "Bernard";
lin bernie_PN = mkPN "Bernie";
lin beroe_N = mkN "beroe" ;
lin berried_A = mkA "berried" ;
lin berry_N = mkN "berry" "berries";
lin berserk_A = compoundA (mkA "berserk");
lin berserker_N = mkN "berserker" ;
lin bert_PN = mkPN "Bert";
lin berth_N = mkN "berth" "berths";
lin berth_V = mkV "berth" "berths" "berthed" "berthed" "berthing";
lin berth_V2 = mkV2 (mkV "berth" "berths" "berthed" "berthed" "berthing");
lin bertha_PN = mkPN "Bertha";
lin bertie_PN = mkPN "Bertie";
lin berwick_upon_tweed_PN = mkPN "Berwick-upon-tweed";
lin beryl_N = mkN "beryl" "beryls";
lin beryl_PN = mkPN "Beryl";
lin beryllium_N = mkN "beryllium" ;
lin beseech_V2 = mkV2 (mkV "beseech" "beseeches" "beseeched" "beseeched" "beseeching");
lin beseeching_A = compoundA (mkA "beseeching");
lin beseem_V2 = mkV2 (mkV "beseem" "beseems" "beseemed" "beseemed" "beseeming");
lin beset_V2 = mkV2 (IrregEng.beset_V);
lin beshrew_V2 = mkV2 (mkV "beshrew" "beshrews" "beshrewed" "beshrewed" "beshrewing");
lin beside_Prep = mkPrep "beside";
lin besides_Adv = mkAdv "besides";
lin besides_Prep = mkPrep "besides";
lin besiege_V2 = mkV2 (mkV "besiege" "besieges" "besieged" "besieged" "besieging");
lin besieger_N = mkN "besieger" "besiegers";
lin besmear_V2 = mkV2 (mkV "besmear" "besmears" "besmeared" "besmeared" "besmearing");
lin besmirch_V2 = mkV2 (mkV "besmirch" "besmirches" "besmirched" "besmirched" "besmirching");
lin besom_N = mkN "besom" "besoms";
lin besotted_A = compoundA (mkA "besotted");
lin bespangled_A = compoundA (mkA "bespangled");
lin bespattered_A = compoundA (mkA "bespattered");
lin bespeak_V2 = mkV2 (mkV "be" IrregEng.speak_V);
lin bespectacled_A = compoundA (mkA "bespectacled");
lin bespoke_A = mkA "bespoke" ;
lin besprent_A = mkA "besprent" ;
lin bess_PN = mkPN "Bess";
lin bessie_PN = mkPN "Bessie";
lin best_A = mkA "best" ;
lin best_Adv = mkAdv "best";
lin best_N = mkN "best" ;
lin best_V2 = mkV2 (mkV "best" "bests" "bested" "bested" "besting");
lin best_seller_N = mkN "best-seller" "best-sellers";
lin bestial_A = compoundA (mkA "bestial");
lin bestiality_N = mkN "bestiality" "bestialities";
lin bestiary_N = mkN "bestiary" "bestiaries";
lin bestir_V2 = mkV2 (mkV "bestir" "bestirs" "bestirred" "bestirred" "bestirring");
lin bestow_V2 = mkV2 (mkV "bestow" "bestows" "bestowed" "bestowed" "bestowing");
lin bestowal_N = mkN "bestowal" "bestowals";
lin bestrew_V2 = mkV2 (mkV "bestrew" "bestrews" "bestrewed" "bestrewed" "bestrewing");
lin bestride_V2 = mkV2 (mkV "be" IrregEng.stride_V);
lin bestubbled_A = mkA "bestubbled" ;
lin bet_N = mkN "bet" "bets";
lin bet_V = mkV "bet" "bets" "betted" "betted" "betting";
lin bet_V2 = mkV2 (mkV "bet" "bets" "betted" "betted" "betting");
lin bet_VS = mkVS (mkV "bet" "bets" "betted" "betted" "betting");
lin beta_A = mkA "beta" ;
lin beta_N = mkN "beta" "betas";
lin betaine_N = mkN "betaine" ;
lin betake_V2 = mkV2 (mkV "be" IrregEng.take_V);
lin betatron_N = mkN "betatron" ;
lin bete_noire_N = mkN "bête noire" "IRREG";
lin betel_N = mkN "betel" "betels";
lin betel_nut_N = mkN "betel-nut" "betel-nuts";
lin beth_N = mkN "beth" ;
lin bethel_N = mkN "bethel" "bethels";
lin bethink_V2 = mkV2 (mkV "be" IrregEng.think_V);
lin bethune_PN = mkPN "Bethune";
lin betide_V2 = mkV2 (mkV "betide" "betides" "betided" "betided" "betiding");
lin betimes_Adv = mkAdv "betimes";
lin betoken_V2 = mkV2 (mkV "betoken" "betokens" "betokened" "betokened" "betokening");
lin betray_V2 = mkV2 (mkV "betray" "betrays" "betrayed" "betrayed" "betraying");
lin betrayal_N = mkN "betrayal" "betrayals";
lin betrayer_N = mkN "betrayer" "betrayers";
lin betroth_V2 = mkV2 (mkV "betroth" "betroths" "betrothed" "betrothed" "betrothing");
lin betrothal_N = mkN "betrothal" "betrothals";
lin betrothed_N = mkN "betrothed" "betrotheds";
lin betsy_PN = mkPN "Betsy";
lin better_A = mkA "better" ;
lin better_Adv = mkAdv "better";
lin better_N = mkN "better" "betters";
lin better_V2 = mkV2 (mkV "better" "betters" "bettered" "bettered" "bettering");
lin bettering_A = mkA "bettering" ;
lin betterment_N = mkN "betterment" ;
lin bettong_N = mkN "bettong" ;
lin bettor_N = mkN "bettor" "bettors";
lin betty_PN = mkPN "Betty";
lin betulaceous_A = mkA "betulaceous" ;
lin between_Adv = mkAdv "between";
lin between_Prep = mkPrep "between";
lin betwixt_Prep = mkPrep "betwixt";
lin bevatron_N = mkN "bevatron" ;
lin bevel_N = mkN "bevel" "bevels";
lin bevel_V2 = mkV2 (mkV "bevel" "bevels" "bevelled" "bevelled" "bevelling");
lin beverage_N = mkN "beverage" "beverages";
lin beverley_PN = mkPN "Beverley";
lin bevy_N = mkN "bevy" "bevies";
lin bewail_V2 = mkV2 (mkV "bewail" "bewails" "bewailed" "bewailed" "bewailing");
lin beware_V = mkV "beware" "IRREG" "IRREG" "IRREG" "IRREG";
lin beware_V2 = mkV2 (mkV "beware" "IRREG" "IRREG" "IRREG" "IRREG");
lin bewdley_PN = mkPN "Bewdley";
lin bewilder_V2 = mkV2 (mkV "bewilder" "bewilders" "bewildered" "bewildered" "bewildering");
lin bewilderedly_Adv = mkAdv "bewilderedly" ;
lin bewildering_A = compoundA (mkA "bewildering");
lin bewilderment_N = mkN "bewilderment" ;
lin bewitch_V2 = mkV2 (mkV "bewitch" "bewitches" "bewitched" "bewitched" "bewitching");
lin bewitchery_N = mkN "bewitchery" ;
lin bewitching_A = compoundA (mkA "bewitching");
lin bexhill_PN = mkPN "Bexhill";
lin bexley_PN = mkPN "Bexley";
lin bey_N = mkN "bey" "beys";
lin beyond_Adv = mkAdv "beyond";
lin beyond_Prep = mkPrep "beyond";
lin bezant_N = mkN "bezant" ;
lin bezel_N = mkN "bezel" ;
lin bezique_N = mkN "bezique" ;
lin bhakti_N = mkN "bhakti" ;
lin bhang_N = mkN "bhang" "bhangs";
lin bhutan_PN = mkPN "Bhutan";
lin bhutani_A = compoundA (mkA "bhutani");
lin bhutani_N = mkN "bhutani" "bhutanis";
lin bialy_N = mkN "bialy" ;
lin biannually_Adv = mkAdv "biannually" ;
lin bias_A = mkA "bias" ;
lin bias_N = mkN "bias" "biases";
lin bias_V2 = mkV2 (mkV "bias" "biases" "biased" "biased" "biasing");
lin biauricular_A = mkA "biauricular" ;
lin biaxial_A = mkA "biaxial" ;
lin bib_N = mkN "bib" "bibs";
lin bib_V = mkV "bib" "bibs" "bibbed" "bibbed" "bibbing";
lin bibbed_A = mkA "bibbed" ;
lin bible_N = mkN "bible" "bibles";
lin bibless_A = mkA "bibless" ;
lin biblical_A = compoundA (mkA "biblical");
lin bibliographer_N = mkN "bibliographer" "bibliographers";
lin bibliographic_A = mkA "bibliographic" ;
lin bibliography_N = mkN "bibliography" "bibliographies";
lin bibliolatrous_A = mkA "bibliolatrous" ;
lin bibliolatry_N = mkN "bibliolatry" ;
lin bibliomania_N = mkN "bibliomania" ;
lin bibliomaniacal_A = mkA "bibliomaniacal" ;
lin bibliophile_N = mkN "bibliophile" "bibliophiles";
lin bibliophilic_A = mkA "bibliophilic" ;
lin bibliopole_N = mkN "bibliopole" ;
lin bibliopolic_A = mkA "bibliopolic" ;
lin bibliotheca_N = mkN "bibliotheca" ;
lin bibliothecal_A = mkA "bibliothecal" ;
lin bibliotic_A = mkA "bibliotic" ;
lin bibliotics_N = mkN "bibliotics" ;
lin bibliotist_N = mkN "bibliotist" ;
lin bibulous_A = compoundA (mkA "bibulous");
lin bicameral_A = compoundA (mkA "bicameral");
lin bicapsular_A = mkA "bicapsular" ;
lin bicarbonate_N = mkN "bicarbonate" ;
lin bicentenary_N = mkN "bicentenary" "bicentenaries";
lin bicentennial_A = compoundA (mkA "bicentennial");
lin bicentennial_N = mkN "bicentennial" "bicentennials";
lin bicentric_A = mkA "bicentric" ;
lin bicephalous_A = mkA "bicephalous" ;
lin biceps_N = mkN "biceps" "biceps";
lin bicester_PN = mkPN "Bicester";
lin bichromate_N = mkN "bichromate" ;
lin bichromated_A = mkA "bichromated" ;
lin bicipital_A = mkA "bicipital" ;
lin bicker_N = mkN "bicker" ;
lin bicker_V = mkV "bicker" "bickers" "bickered" "bickered" "bickering";
lin bicolor_A = mkA "bicolor" ;
lin biconcave_A = mkA "biconcave" ;
lin biconvex_A = mkA "biconvex" ;
lin bicorn_A = mkA "bicorn" ;
lin bicorn_N = mkN "bicorn" ;
lin bicuspid_A = mkA "bicuspid" ;
lin bicycle_N = mkN "bicycle" "bicycles";
lin bicycle_V = mkV "bicycle" "bicycles" "bicycled" "bicycled" "bicycling";
lin bicyclic_A = mkA "bicyclic" ;
lin bicycling_N = mkN "bicycling" ;
lin bicylindrical_A = mkA "bicylindrical" ;
lin bid_N = mkN "bid" "bids";
lin bid_V = IrregEng.bid_V;
lin bid_V2 = mkV2 (IrregEng.bid_V);
lin biddable_A = compoundA (mkA "biddable");
lin bidder_N = mkN "bidder" "bidders";
lin bidding_N = mkN "bidding";
lin biddulph_PN = mkPN "Biddulph";
lin bide_V2 = mkV2 (mkV "bide" "bides" "bided" "bided" "biding");
lin bideford_PN = mkPN "Bideford";
lin bidentate_A = mkA "bidentate" ;
lin bidet_N = mkN "bidet" "bidets";
lin bidirectional_A = mkA "bidirectional" ;
lin bielefeld_PN = mkPN "Bielefeld";
lin biennial_A = compoundA (mkA "biennial");
lin biennial_N = mkN "biennial" "biennials";
lin bier_N = mkN "bier" "biers";
lin biface_A = mkA "biface" ;
lin biff_N = mkN "biff" "biffs";
lin biff_V2 = mkV2 (mkV "biff" "biffs" "biffed" "biffed" "biffing");
lin bifid_A = mkA "bifid" ;
lin bifilar_A = mkA "bifilar" ;
lin biflagellate_A = mkA "biflagellate" ;
lin bifocal_A = compoundA (mkA "bifocal");
lin bifocals_N = mkN "bifocals" ;
lin bifoliate_A = mkA "bifoliate" ;
lin biform_A = mkA "biform" ;
lin bifurcate_A = compoundA (mkA "bifurcate");
lin bifurcate_V = mkV "bifurcate" "bifurcates" "bifurcated" "bifurcated" "bifurcating";
lin bifurcate_V2 = mkV2 (mkV "bifurcate" "bifurcates" "bifurcated" "bifurcated" "bifurcating");
lin bifurcation_N = mkN "bifurcation" "bifurcations";
lin big_A = mkA "big" "bigger" "biggest" "big";
lin big_boned_A = compoundA (mkA "big-boned");
lin bigamist_N = mkN "bigamist" "bigamists";
lin bigamous_A = compoundA (mkA "bigamous");
lin bigamy_N = mkN "bigamy" ;
lin bigeminal_A = mkA "bigeminal" ;
lin bigeneric_A = mkA "bigeneric" ;
lin bigeye_N = mkN "bigeye";
lin biggin_N = mkN "biggin";
lin biggish_A = mkA "biggish" ;
lin biggleswade_PN = mkPN "Biggleswade";
lin bighead_N = mkN "bighead" ;
lin bigheaded_A = mkA "bigheaded" ;
lin bigheartedness_N = mkN "bigheartedness" ;
lin bighorn_N = mkN "bighorn" ;
lin bight_N = mkN "bight" "bights";
lin bigmouthed_A = mkA "bigmouthed" ;
lin bignoniaceous_A = mkA "bignoniaceous" ;
lin bignoniad_N = mkN "bignoniad" ;
lin bigos_N = mkN "bigos" ;
lin bigot_N = mkN "bigot" "bigots";
lin bigoted_A = compoundA (mkA "bigoted");
lin bigotry_N = mkN "bigotry" "bigotries";
lin bigram_N = mkN "bigram" ;
lin bigwig_N = mkN "bigwig" "bigwigs";
lin bijou_A = compoundA (mkA "bijou");
lin bijou_N = mkN "bijou";
lin bike_N = mkN "bike" "bikes";
lin bike_V = mkV "bike" "bikes" "biked" "biked" "biking";
lin bikini_N = mkN "bikini" "bikinis";
lin bilabial_A = compoundA (mkA "bilabial");
lin bilabial_N = mkN "bilabial" "bilabials";
lin bilabiate_A = mkA "bilabiate" ;
lin bilateral_A = compoundA (mkA "bilateral");
lin bilateralism_N = mkN "bilateralism" "bilateralisms";
lin bilaterality_N = mkN "bilaterality" ;
lin bilbao_PN = mkPN "Bilbao";
lin bilberry_N = mkN "bilberry" "bilberries";
lin bile_N = mkN "bile" ;
lin bile_duct_N = mkN "bile-duct" "bile-ducts";
lin bilge_N = mkN "bilge" ;
lin bilge_water_N = mkN "bilge-water" ;
lin bilges_N = mkN "bilges" ;
lin bilgy_A = mkA "bilgy" ;
lin bilharzia_N = mkN "bilharzia" ;
lin biliary_A = mkA "biliary" ;
lin bilimbi_N = mkN "bilimbi" ;
lin bilinear_A = mkA "bilinear" ;
lin bilingual_A = compoundA (mkA "bilingual");
lin bilingual_N = mkN "bilingual" "bilinguals";
lin bilingualism_N = mkN "bilingualism";
lin bilious_A = compoundA (mkA "bilious");
lin biliousness_N = mkN "biliousness" ;
lin bilirubin_N = mkN "bilirubin" ;
lin bilk_V2 = mkV2 (mkV "bilk" "bilks" "bilked" "bilked" "bilking");
lin bill_N = mkN "bill" "bills";
lin bill_PN = mkPN "Bill";
lin bill_V = mkV "bill" "bills" "billed" "billed" "billing";
lin bill_V2 = mkV2 (mkV "bill" "bills" "billed" "billed" "billing");
lin bill_poster_N = mkN "bill-poster" "bill-posters";
lin bill_sticker_N = mkN "bill-sticker" "bill-stickers";
lin billabong_N = mkN "billabong" ;
lin billboard_N = mkN "billboard" "billboards";
lin billericay_PN = mkPN "Billericay";
lin billet_N = mkN "billet" "billets";
lin billet_V2 = mkV2 (mkV "billet" "billets" "billeted" "billeted" "billeting");
lin billet_doux_N = mkN "billet-doux" "billets-doux";
lin billfish_N = mkN "billfish" ;
lin billfold_N = mkN "billfold" "billfolds";
lin billhook_N = mkN "billhook" "billhooks";
lin billiard_A = mkA "billiard" ;
lin billiard_marker_N = mkN "billiard-marker" "billiard-markers";
lin billiard_player_N = mkN "billiard-player" "billiard-players";
lin billiard_room_N = mkN "billiard-room" "billiard-rooms";
lin billiard_table_N = mkN "billiard-table" "billiard-tables";
lin billiards_N = mkN "billiards" "billiards";
lin billingsgate_N = mkN "billingsgate" ;
lin billington_PN = mkPN "Billington";
lin billion_A = compoundA (mkA "billion");
lin billion_N = mkN "billion" "billions";
lin billionaire_N = mkN human (mkN "billionaire");
lin billionth_A = compoundA (mkA "billionth");
lin billionth_N = mkN "billionth" "billionths";
lin billow_N = mkN "billow" "billows";
lin billow_V = mkV "billow" "billows" "billowed" "billowed" "billowing";
lin billowy_A = compoundA (mkA "billowy");
lin billy_N = mkN "billy" "billies";
lin billy_PN = mkPN "Billy";
lin billy_goat_N = mkN "billy-goat" "billy-goats";
lin billy_ho_N = mkN "billy-ho" "billy-hi" {- FIXME: guessed plural form -};
lin billy_o_N = mkN "billy-o" ;
lin billyo_N = mkN "billyo" ;
lin bilobate_A = mkA "bilobate" ;
lin bilocation_N = mkN "bilocation" ;
lin bilocular_A = mkA "bilocular" ;
lin biltong_N = mkN "biltong" ;
lin bimbo_N = mkN "bimbo" ;
lin bimester_N = mkN "bimester" ;
lin bimestrial_A = mkA "bimestrial" ;
lin bimetal_A = mkA "bimetal" ;
lin bimetal_N = mkN "bimetal" ;
lin bimetallic_A = compoundA (mkA "bimetallic");
lin bimetallism_N = mkN "bimetallism" ;
lin bimetallist_N = mkN "bimetallist" ;
lin bimetallistic_A = mkA "bimetallistic" ;
lin bimillenial_A = mkA "bimillenial" ;
lin bimillennium_N = mkN "bimillennium" ;
lin bimodal_A = mkA "bimodal" ;
lin bimolecular_A = mkA "bimolecular" ;
lin bimonthly_A = mkA "bimonthly" ;
lin bimonthly_Adv = mkAdv "bimonthly" ;
lin bimonthly_N = mkN "bimonthly" ;
lin bimorphemic_A = mkA "bimorphemic" ;
lin bimotored_A = mkA "bimotored" ;
lin bin_N = mkN "bin" "bins";
lin binary_A = compoundA (mkA "binary");
lin binary_N = mkN "binary" ;
lin binate_A = mkA "binate" ;
lin binaural_A = mkA "binaural" ;
lin bind_N = mkN "bind" "binds";
lin bind_V = IrregEng.bind_V;
lin bind_V2 = mkV2 (IrregEng.bind_V);
lin bindable_A = mkA "bindable" ;
lin binder_N = mkN "binder" "binders";
lin bindery_N = mkN "bindery" "binderies";
lin binding_N = mkN "binding" ;
lin bindweed_N = mkN "bindweed" ;
lin bine_N = mkN "bine" "bines";
lin binge_N = mkN "binge" "binges";
lin bingley_PN = mkPN "Bingley";
lin bingo_N = mkN "bingo" ;
lin binnacle_N = mkN "binnacle" "binnacles";
lin binocular_A = mkA "binocular" ;
lin binoculars_N = mkN "binoculars" ;
lin binomial_A = compoundA (mkA "binomial");
lin binomial_N = mkN "binomial" ;
lin binturong_N = mkN "binturong" ;
lin binucleate_A = mkA "binucleate" ;
lin bioassay_N = mkN "bioassay" ;
lin biocatalyst_N = mkN "biocatalyst" ;
lin biocatalytic_A = mkA "biocatalytic" ;
lin biochemical_A = mkA "biochemical" ;
lin biochemist_N = mkN "biochemist" ;
lin biochemistry_N = mkN "biochemistry" ;
lin biochip_N = mkN "biochip" ;
lin bioclimatic_A = mkA "bioclimatic" ;
lin bioclimatology_N = mkN "bioclimatology" ;
lin biodegradable_A = compoundA (mkA "biodegradable");
lin biodiversity_N = mkN "biodiversity" ;
lin bioelectricity_N = mkN "bioelectricity" ;
lin bioethics_N = mkN "bioethics" ;
lin biofeedback_N = mkN "biofeedback" ;
lin biogenesis_N = mkN "biogenesis" ;
lin biogenetic_A = mkA "biogenetic" ;
lin biogenic_A = mkA "biogenic" ;
lin biogenous_A = mkA "biogenous" ;
lin biogeographic_A = mkA "biogeographic" ;
lin biogeography_N = mkN "biogeography" ;
lin biograph_N = mkN "biograph" "biographs";
lin biographer_N = mkN "biographer" "biographers";
lin biographic_A = compoundA (mkA "biographic");
lin biographical_A = compoundA (mkA "biographical");
lin biography_N = mkN "biography" "biographies";
lin biohazard_N = mkN "biohazard" ;
lin biological_A = compoundA (mkA "biological");
lin biologism_N = mkN "biologism" ;
lin biologist_N = mkN "biologist" "biologists";
lin biologistic_A = mkA "biologistic" ;
lin biology_N = mkN "biology" ;
lin bioluminescence_N = mkN "bioluminescence" ;
lin bioluminescent_A = mkA "bioluminescent" ;
lin biomass_N = mkN "biomass" ;
lin biome_N = mkN "biome" ;
lin biomedical_A = mkA "biomedical" ;
lin biomedicine_N = mkN "biomedicine" ;
lin biometrics_N = mkN "biometrics" ;
lin bionic_A = mkA "bionic" ;
lin bionics_N = mkN "bionics" ;
lin biont_N = mkN "biont" ;
lin biophysicist_N = mkN "biophysicist" ;
lin biophysics_N = mkN "biophysics" ;
lin biopiracy_N = mkN "biopiracy" ;
lin biopsy_N = mkN "biopsy" ;
lin bioremediation_N = mkN "bioremediation" ;
lin biosafety_N = mkN "biosafety" ;
lin bioscope_N = mkN "bioscope" "bioscopes";
lin biosphere_N = mkN "biosphere" ;
lin biosynthesis_N = mkN "biosynthesis" ;
lin biosynthetic_A = mkA "biosynthetic" ;
lin biosystematic_A = mkA "biosystematic" ;
lin biosystematics_N = mkN "biosystematics" ;
lin biota_N = mkN "biota" ;
lin biotechnology_N = mkN "biotechnology" ;
lin bioterrorism_N = mkN "bioterrorism" ;
lin biotic_A = mkA "biotic" ;
lin biotin_N = mkN "biotin" ;
lin biotite_N = mkN "biotite" ;
lin biotitic_A = mkA "biotitic" ;
lin biotype_N = mkN "biotype" ;
lin biotypic_A = mkA "biotypic" ;
lin bioweapon_N = mkN "bioweapon" ;
lin biparous_A = mkA "biparous" ;
lin bipartisan_A = compoundA (mkA "bipartisan");
lin bipartite_A = mkA "bipartite" ;
lin biped_N = mkN "biped" "bipeds";
lin bipedal_A = mkA "bipedal" ;
lin bipedalism_N = mkN "bipedalism" ;
lin bipinnate_A = mkA "bipinnate" ;
lin bipinnatifid_A = mkA "bipinnatifid" ;
lin biplane_N = mkN "biplane" "biplanes";
lin bipolar_A = mkA "bipolar" ;
lin biprism_N = mkN "biprism" ;
lin biquadrate_N = mkN "biquadrate" ;
lin biquadratic_A = mkA "biquadratic" ;
lin biquadratic_N = mkN "biquadratic" ;
lin biracial_A = mkA "biracial" ;
lin biradial_A = mkA "biradial" ;
lin birch_A = mkA "birch" ;
lin birch_N = mkN "birch" "birches";
lin birch_V2 = mkV2 (mkV "birch" "birches" "birched" "birched" "birching");
lin birch_rod_N = mkN "birch-rod" "birch-rods";
lin bird's_eye_A = compoundA (mkA "bird's-eye");
lin bird_N = mkN "bird" "birds";
lin bird_fancier_N = mkN "bird-fancier" "bird-fanciers";
lin birdbath_N = mkN "birdbath" ;
lin birdcage_N = mkN "birdcage" "birdcages";
lin birdcall_N = mkN "birdcall" ;
lin birdhouse_N = mkN "birdhouse" ;
lin birdie_N = mkN "birdie" ;
lin birdlime_N = mkN "birdlime" "birdlimes";
lin birdnesting_N = mkN "birdnesting" ;
lin birdwatcher_N = mkN "birdwatcher" "birdwatchers";
lin birefringent_A = mkA "birefringent" ;
lin biretta_N = mkN "biretta" "birettas";
lin birkenhead_PN = mkPN "Birkenhead";
lin birling_N = mkN "birling" ;
lin biro_N = mkN "biro" "biros";
lin birr_N = mkN "birr" ;
lin birstall_PN = mkPN "Birstall";
lin birth_N = mkN "birth" "births";
lin birth_control_N = mkN "birth-control" ;
lin birthday_N = mkN "birthday" "birthdays";
lin birthmark_N = mkN "birthmark" "birthmarks";
lin birthplace_N = mkN "birthplace" "birthplaces";
lin birthrate_N = mkN "birthrate" "birthrates";
lin birthright_N = mkN "birthright" "birthrights";
lin birthwort_N = mkN "birthwort" ;
lin birtley_PN = mkPN "Birtley";
lin biryani_N = mkN "biryani" ;
lin biscuit_N = mkN "biscuit" "biscuits";
lin bise_N = mkN "bise" ;
lin bisect_V2 = mkV2 (mkV "bisect" "bisects" "bisected" "bisected" "bisecting");
lin bisection_N = mkN "bisection" ;
lin bisectional_A = mkA "bisectional" ;
lin biserrate_A = mkA "biserrate" ;
lin bisexual_A = compoundA (mkA "bisexual");
lin bisexual_N = mkN "bisexual" "bisexuals";
lin bisexuality_N = mkN "bisexuality" ;
lin bishop's_cleeve_PN = mkPN "Bishop's cleeve";
lin bishop's_stortford_PN = mkPN "Bishop's stortford";
lin bishop_N = mkN "bishop" "bishops";
lin bishop_auckland_PN = mkPN "Bishop auckland";
lin bishopbriggs_PN = mkPN "Bishopbriggs";
lin bishopric_N = mkN "bishopric" "bishoprics";
lin bishopry_N = mkN "bishopry" ;
lin bismuth_N = mkN "bismuth" ;
lin bismuthal_A = mkA "bismuthal" ;
lin bismuthic_A = mkA "bismuthic" ;
lin bison_N = mkN "bison" "bison";
lin bisontine_A = mkA "bisontine" ;
lin bisque_N = mkN "bisque" ;
lin bister_N = mkN "bister" ;
lin bistered_A = mkA "bistered" ;
lin bistro_N = mkN "bistro" "bistros";
lin bistroic_A = mkA "bistroic" ;
lin bit_N = mkN "bit" "bits";
lin bitartrate_N = mkN "bitartrate" ;
lin bitch_N = mkN "bitch" "bitches";
lin bitch_V = mkV "bitch" "bitches" "bitched" "bitched" "bitching";
lin bitchery_N = mkN "bitchery" ;
lin bitchy_A = mkA "bitchy" "bitchier";
lin bite_N = mkN "bite" "bites";
lin bite_V = IrregEng.bite_V;
lin bite_V2 = mkV2 (IrregEng.bite_V);
lin biter_N = mkN "biter" ;
lin bitewing_N = mkN "bitewing" ;
lin biting_A = compoundA (mkA "biting") ;
lin bitmap_N = mkN "bitmap" ;
lin bitok_N = mkN "bitok" ;
lin bitter_A = compoundA (mkA "bitter");
lin bitter_N = mkN "bitter" "bitters";
lin bitter_sweet_A = compoundA (mkA "bitter-sweet");
lin bittercress_N = mkN "bittercress" ;
lin bitterish_A = mkA "bitterish" ;
lin bittern_N = mkN "bittern" "bitterns";
lin bitterness_N = mkN "bitterness" ;
lin bitternut_N = mkN "bitternut" ;
lin bitterroot_N = mkN "bitterroot" ;
lin bitters_N = mkN "bitters" ;
lin bittersweet_A = mkA "bittersweet" ;
lin bittersweet_N = mkN "bittersweet" ;
lin bitthead_N = mkN "bitthead" ;
lin bitty_A = mkA "bitty" ;
lin bitumastic_N = mkN "bitumastic" ;
lin bitumen_N = mkN "bitumen" ;
lin bituminoid_A = mkA "bituminoid" ;
lin bituminous_A = compoundA (mkA "bituminous");
lin bivalent_A = mkA "bivalent" ;
lin bivalve_A = mkA "bivalve" ;
lin bivalve_N = mkN "bivalve" "bivalves";
lin bivariate_A = mkA "bivariate" ;
lin bivouac_N = mkN "bivouac" "bivouacs";
lin bivouac_V = mkV "bivouac" (variants {"bivouacs"; "bivouacks"})  "bivouacked" "bivouacked" "bivouacking";
lin biweekly_N = mkN "biweekly" ;
lin biz_N = mkN "biz" ;
lin bizarre_A = compoundA (mkA "bizarre");
lin bizonal_A = compoundA (mkA "bizonal");
lin blab_V = mkV "blab" "blabs" "blabbed" "blabbed" "blabbing";
lin blab_V2 = mkV2 (mkV "blab" "blabs" "blabbed" "blabbed" "blabbing");
lin blabber_V = mkV "blabber" "blabbers" "blabbered" "blabbered" "blabbering";
lin blabber_V2 = mkV2 (mkV "blabber" "blabbers" "blabbered" "blabbered" "blabbering");
lin blabbermouth_N = mkN "blabbermouth" "blabbermouths";
lin blabbermouthed_A = mkA "blabbermouthed" ;
lin black_A = mkA "black" "blacker";
lin black_N = mkN "black" "blacks";
lin black_V2 = mkV2 (mkV "black" "blacks" "blacked" "blacked" "blacking");
lin black_beetle_N = mkN "black-beetle" "black-beetles";
lin black_lead_N = mkN "black-lead" ;
lin black_lead_V2 = mkV2 (mkV "black-lead" "black-leads" "black-leaded" "black-leaded" "black-leading");
lin blackamoor_N = mkN "blackamoor" "blackamoors";
lin blackball_V2 = mkV2 (mkV "blackball" "blackballs" "blackballed" "blackballed" "blackballing");
lin blackberry_N = mkN "blackberry" "blackberries";
lin blackbird_N = mkN "blackbird" "blackbirds";
lin blackboard_N = mkN "blackboard" "blackboards";
lin blackbuck_N = mkN "blackbuck" ;
lin blackburn_PN = mkPN "Blackburn";
lin blackcap_N = mkN "blackcap" ;
lin blackcock_N = mkN "blackcock" ;
lin blackcurrant_N = mkN "blackcurrant" "blackcurrants";
lin blacken_V = mkV "blacken" "blackens" "blackened" "blackened" "blackening";
lin blacken_V2 = mkV2 (mkV "blacken" "blackens" "blackened" "blackened" "blackening");
lin blackening_N = mkN "blackening" ;
lin blackface_N = mkN "blackface" ;
lin blackfish_N = mkN "blackfish" ;
lin blackfly_N = mkN "blackfly" ;
lin blackguard_N = mkN "blackguard" "blackguards";
lin blackguard_V2 = mkV2 (mkV "blackguard" "blackguards" "blackguarded" "blackguarded" "blackguarding");
lin blackguardly_A = compoundA (mkA "blackguardly");
lin blackhall_PN = mkPN "Blackhall";
lin blackhead_N = mkN "blackhead" "blackheads";
lin blackheart_N = mkN "blackheart" ;
lin blacking_N = mkN "blacking" ;
lin blackish_A = compoundA (mkA "blackish");
lin blackjack_N = mkN "blackjack" ;
lin blackleg_N = mkN "blackleg" "blacklegs";
lin blackleg_V = mkV "blackleg" "blacklegs" "blacklegged" "blacklegged" "blacklegging";
lin blackleg_V2 = mkV2 (mkV "blackleg" "blacklegs" "blacklegged" "blacklegged" "blacklegging");
lin blacklist_N = mkN "blacklist" "blacklists";
lin blacklist_V2 = mkV2 (mkV "blacklist" "blacklists" "blacklisted" "blacklisted" "blacklisting");
lin blackmail_N = mkN "blackmail" ;
lin blackmail_V2 = mkV2 (mkV "blackmail" "blackmails" "blackmailed" "blackmailed" "blackmailing");
lin blackmailer_N = mkN "blackmailer" "blackmailers";
lin blackness_N = mkN "blackness" ;
lin blackout_N = mkN "blackout" "blackouts";
lin blackpoll_N = mkN "blackpoll" ;
lin blackpool_PN = mkPN "Blackpool";
lin blackshirt_N = mkN "blackshirt" "blackshirts";
lin blacksmith_N = mkN "blacksmith" "blacksmiths";
lin blacksnake_N = mkN "blacksnake" ;
lin blackthorn_N = mkN "blackthorn" "blackthorns";
lin blacktop_N = mkN "blacktop" ;
lin blackwash_N = mkN "blackwash" ;
lin blackwater_A = compoundA (mkA "blackwater");
lin blackwater_N = mkN "blackwater" ;
lin blackwood_N = mkN "blackwood" ;
lin blackwood_PN = mkPN "Blackwood";
lin bladder_N = mkN "bladder" "bladders";
lin bladderpod_N = mkN "bladderpod" ;
lin bladderwort_N = mkN "bladderwort" ;
lin bladderwrack_N = mkN "bladderwrack" ;
lin bladdery_A = mkA "bladdery" ;
lin blade_N = mkN "blade" "blades";
lin bladed_A = mkA "bladed" ;
lin blae_A = mkA "blae" ;
lin blaeberry_N = mkN "blaeberry" "blaeberries";
lin blaenau_ffestiniog_PN = mkPN "Blaenau-ffestiniog";
lin blaenavon_PN = mkPN "Blaenavon";
lin blaengwrach_PN = mkPN "Blaengwrach";
lin blah_N = mkN "blah" ;
lin blahs_N = mkN "blahs" ;
lin blain_N = mkN "blain" ;
lin blaina_PN = mkPN "Blaina";
lin blairgowrie_PN = mkPN "Blairgowrie";
lin blame_N = mkN "blame" ;
lin blame_V = mkV "blame";
lin blame_V2 = mkV2 (mkV "blame" "blames" "blamed" "blamed" "blaming");
lin blameless_A = compoundA (mkA "blameless");
lin blamelessness_N = mkN "blamelessness" ;
lin blameworthiness_N = mkN "blameworthiness" ;
lin blameworthy_A = compoundA (mkA "blameworthy");
lin blanc_N = mkN "blanc" ;
lin blanch_V = mkV "blanch" "blanches" "blanched" "blanched" "blanching";
lin blanch_V2 = mkV2 (mkV "blanch" "blanches" "blanched" "blanched" "blanching");
lin blancmange_N = mkN "blancmange" "blancmanges";
lin bland_A = mkA "bland" "blander";
lin blandishment_N = mkN "blandishment" "blandishments";
lin blandness_N = mkN "blandness" ;
lin blank_A = compoundA (mkA "blank");
lin blank_N = mkN "blank" "blanks";
lin blanket_N = mkN "blanket" "blankets";
lin blanket_V2 = mkV2 (mkV "blanket" "blankets" "blanketed" "blanketed" "blanketing");
lin blankness_N = mkN "blankness" ;
lin blanquillo_N = mkN "blanquillo" ;
lin blantyre_PN = mkPN "Blantyre";
lin blare_N = mkN "blare" ;
lin blare_V = mkV "blare" "blares" "blared" "blared" "blaring";
lin blare_V2 = mkV2 (mkV "blare" "blares" "blared" "blared" "blaring");
lin blarney_N = mkN "blarney" ;
lin blase_A = compoundA (mkA "blasé");
lin blaspheme_V = mkV "blaspheme" "blasphemes" "blasphemed" "blasphemed" "blaspheming";
lin blaspheme_V2 = mkV2 (mkV "blaspheme" "blasphemes" "blasphemed" "blasphemed" "blaspheming");
lin blasphemer_N = mkN "blasphemer" "blasphemers";
lin blasphemous_A = compoundA (mkA "blasphemous");
lin blasphemy_N = mkN "blasphemy" "blasphemies";
lin blast_N = mkN "blast" "blasts";
lin blast_V = mkV "blast";
lin blast_V2 = mkV2 (mkV "blast" "blasts" "blasted" "blasted" "blasting");
lin blast_furnace_N = mkN "blast-furnace" "blast-furnaces";
lin blast_off_N = mkN "blast-off" "blast-offs";
lin blastema_N = mkN "blastema" ;
lin blastemal_A = mkA "blastemal" ;
lin blaster_N = mkN "blaster" ;
lin blastocoel_N = mkN "blastocoel" ;
lin blastocoelic_A = mkA "blastocoelic" ;
lin blastocyst_N = mkN "blastocyst" ;
lin blastocyte_N = mkN "blastocyte" ;
lin blastoderm_N = mkN "blastoderm" ;
lin blastodermatic_A = mkA "blastodermatic" ;
lin blastoff_N = mkN "blastoff" ;
lin blastogenesis_N = mkN "blastogenesis" ;
lin blastogenetic_A = mkA "blastogenetic" ;
lin blastoma_N = mkN "blastoma" ;
lin blastomere_N = mkN "blastomere" ;
lin blastomeric_A = mkA "blastomeric" ;
lin blastomycete_N = mkN "blastomycete" ;
lin blastomycosis_N = mkN "blastomycosis" ;
lin blastomycotic_A = mkA "blastomycotic" ;
lin blastoporal_A = mkA "blastoporal" ;
lin blastopore_N = mkN "blastopore" ;
lin blastospheric_A = mkA "blastospheric" ;
lin blastula_N = mkN "blastula" ;
lin blatancy_N = mkN "blatancy" ;
lin blatant_A = compoundA (mkA "blatant");
lin blather_N = mkN "blather" "blathers";
lin blather_V = mkV "blather" "blathers" "blathered" "blathered" "blathering";
lin blaxploitation_N = mkN "blaxploitation" ;
lin blaze_N = mkN "blaze" "blazes";
lin blaze_V = mkV "blaze" "blazes" "blazed" "blazed" "blazing";
lin blaze_V2 = mkV2 (mkV "blaze" "blazes" "blazed" "blazed" "blazing");
lin blazer_N = mkN "blazer" "blazers";
lin blazon_N = mkN "blazon" "blazons";
lin blazon_V2 = mkV2 (mkV "blazon" "blazons" "blazoned" "blazoned" "blazoning");
lin blazonry_N = mkN "blazonry" "blazonries";
lin bldg_PN = mkPN "Bldg";
lin bldgs_PN = mkPN "Bldgs";
lin bleach_N = mkN "bleach" "bleaches";
lin bleach_V = mkV "bleach" "bleaches" "bleached" "bleached" "bleaching";
lin bleach_V2 = mkV2 (mkV "bleach" "bleaches" "bleached" "bleached" "bleaching");
lin bleacher_N = mkN "bleacher" ;
lin bleachers_N = mkN "bleachers" ;
lin bleaching_powder_N = mkN "bleaching-powder" "bleaching-powders";
lin bleak_A = mkA "bleak" "bleaker";
lin bleakness_N = mkN "bleakness" ;
lin bleary_A = compoundA (mkA "bleary");
lin bleary_eyed_A = compoundA (mkA "bleary-eyed");
lin bleat_N = mkN "bleat" "bleats";
lin bleat_V = mkV "bleat" "bleats" "bleated" "bleated" "bleating";
lin bleat_V2 = mkV2 (mkV "bleat" "bleats" "bleated" "bleated" "bleating");
lin blebbed_A = mkA "blebbed" ;
lin blebby_A = mkA "blebby" ;
lin bleed_V = IrregEng.bleed_V;
lin bleed_V2 = mkV2 (IrregEng.bleed_V);
lin bleed_VS = mkVS (IrregEng.bleed_V);
lin bleeding_N = mkN "bleeding" ;
lin bleep_N = mkN "bleep" "bleeps";
lin bleep_V = mkV "bleep" "bleeps" "bleeped" "bleeped" "bleeping";
lin blemish_N = mkN "blemish" "blemishes";
lin blemish_V2 = mkV2 (mkV "blemish" "blemishes" "blemished" "blemished" "blemishing");
lin blench_V = mkV "blench" "blenches" "blenched" "blenched" "blenching";
lin blend_N = mkN "blend" "blends";
lin blend_V = mkV "blend" "blends" "blended" "blended" "blending";
lin blend_V2 = mkV2 (mkV "blend" "blends" "blended" "blended" "blending");
lin blender_N = mkN "blender" ;
lin blenny_N = mkN "blenny" ;
lin blepharism_N = mkN "blepharism" ;
lin blepharitis_N = mkN "blepharitis" ;
lin blepharospasm_N = mkN "blepharospasm" ;
lin bless_V2 = mkV2 (mkV "bless" "blesses" "blessed" "blessed" "blessing");
lin blessedly_Adv = mkAdv "blessedly" ;
lin blessedness_N = mkN "blessedness" ;
lin blessing_N = mkN "blessing" "blessings";
lin bletchley_PN = mkPN "Bletchley";
lin blether_N = mkN "blether" ;
lin blether_V = mkV "blether" "blethers" "blethered" "blethered" "blethering";
lin bletia_N = mkN "bletia" ;
lin bleu_N = mkN "bleu" ;
lin blewits_N = mkN "blewits" ;
lin blidworth_PN = mkPN "Blidworth";
lin blight_N = mkN "blight" "blights";
lin blight_V2 = mkV2 (mkV "blight" "blights" "blighted" "blighted" "blighting");
lin blighter_N = mkN "blighter" "blighters";
lin blighty_N = mkN "blighty";
lin blimp_N = mkN "blimp" "blimps";
lin blimpish_A = mkA "blimpish" ;
lin blind_A = compoundA (mkA "blind");
lin blind_N = mkN "blind" "blinds";
lin blind_V2 = mkV2 (mkV "blind" "blinds" "blinded" "blinded" "blinding");
lin blindfold_A = compoundA (mkA "blindfold");
lin blindfold_N = mkN "blindfold" "blindfolds";
lin blindfold_V2 = mkV2 (mkV "blindfold" "blindfolds" "blindfolded" "blindfolded" "blindfolding");
lin blindman's_buff_N = mkN "blindman's buff" ;
lin blindness_N = mkN "blindness" ;
lin blindworm_N = mkN "blindworm" ;
lin bling_N = mkN "bling" ;
lin blini_N = mkN "blini" ;
lin blink_N = mkN "blink" "blinks";
lin blink_V = mkV "blink" "blinks" "blinked" "blinked" "blinking";
lin blink_V2 = mkV2 (mkV "blink" "blinks" "blinked" "blinked" "blinking");
lin blinker_N = mkN "blinker" ;
lin blinks_N = mkN "blinks" ;
lin blintz_N = mkN "blintz" ;
lin blip_N = mkN "blip" "blips";
lin bliss_N = mkN "bliss" ;
lin blissful_A = compoundA (mkA "blissful");
lin blister_N = mkN "blister" "blisters";
lin blister_V = mkV "blister" "blisters" "blistered" "blistered" "blistering";
lin blister_V2 = mkV2 (mkV "blister" "blisters" "blistered" "blistered" "blistering");
lin blithe_A = compoundA (mkA "blithe");
lin blithering_A = compoundA (mkA "blithering");
lin blithesome_A = compoundA (mkA "blithesome");
lin blitz_N = mkN "blitz" "blitzes";
lin blitz_V2 = mkV2 (mkV "blitz" "blitzes" "blitzed" "blitzed" "blitzing");
lin blizzard_N = mkN "blizzard" "blizzards";
lin bloat_N = mkN "bloat" ;
lin bloated_A = compoundA (mkA "bloated");
lin bloater_N = mkN "bloater" "bloaters";
lin blob_N = mkN "blob" "blobs";
lin bloc_N = mkN "bloc" "blocs";
lin block_N = mkN "block" "blocks";
lin block_V2 = mkV2 (mkV "block" "blocks" "blocked" "blocked" "blocking");
lin blockade_N = mkN "blockade" "blockades";
lin blockade_V2 = mkV2 (mkV "blockade" "blockades" "blockaded" "blockaded" "blockading");
lin blockade_runner_N = mkN "blockade-runner" "blockade-runners";
lin blockading_A = mkA "blockading" ;
lin blockage_N = mkN "blockage" "blockages";
lin blockbuster_N = mkN "blockbuster" "blockbusters";
lin blocker_N = mkN "blocker" ;
lin blockhead_N = mkN "blockhead" "blockheads";
lin blockheaded_A = mkA "blockheaded" ;
lin blockhouse_N = mkN "blockhouse" "blockhouses";
lin blocking_N = mkN "blocking" ;
lin blockish_A = mkA "blockish" ;
lin blogger_N = mkN "blogger" ;
lin bloke_N = mkN "bloke" "blokes";
lin blolly_N = mkN "blolly" ;
lin blonde_A = variants {compoundA (mkA "blonde"); mkA "blond" "blonder"};
lin blonde_N = variants {mkN "blonde" "blondes"; mkN "blond" "blonds"};
lin blood_N = mkN "blood" "bloods";
lin blood_V2 = mkV2 (variants {mkV "blood" "bloods" "blooded" "blooded" "blooding";
                               mkV "blood" "bloods" "bloodied" "bloodied" "blooding"});
lin blood_bath_N = mkN "blood-bath" "blood-baths";
lin blood_donor_N = mkN "blood-donor" "blood-donors";
lin blood_group_N = mkN "blood-group" "blood-groups";
lin blood_heat_N = mkN "blood-heat" ;
lin blood_letting_N = mkN "blood-letting" "blood-lettings";
lin blood_money_N = mkN "blood-money" ;
lin blood_poisoning_N = mkN "blood-poisoning" ;
lin blood_pressure_N = mkN "blood-pressure" "blood-pressures";
lin blood_relation_N = mkN "blood-relation" "blood-relations";
lin blood_transfusion_N = mkN "blood-transfusion" "blood-transfusions";
lin blood_type_N = mkN "blood-type" "blood-types";
lin blood_vessel_N = mkN "blood-vessel" "blood-vessels";
lin bloodbath_N = mkN "bloodbath" ;
lin bloodberry_N = mkN "bloodberry" ;
lin bloodcurdling_A = compoundA (mkA "bloodcurdling");
lin bloodguilt_N = mkN "bloodguilt" ;
lin bloodguilty_A = mkA "bloodguilty" ;
lin bloodhound_N = mkN "bloodhound" "bloodhounds";
lin bloodiness_N = mkN "bloodiness" ;
lin bloodleaf_N = mkN "bloodleaf" ;
lin bloodless_A = compoundA (mkA "bloodless");
lin bloodletting_N = mkN "bloodletting" ;
lin bloodlust_N = mkN "bloodlust" ;
lin bloodmobile_N = mkN "bloodmobile" ;
lin bloodroot_N = mkN "bloodroot" ;
lin bloodshed_N = mkN "bloodshed" "bloodsheds";
lin bloodshot_A = compoundA (mkA "bloodshot");
lin bloodstain_N = mkN "bloodstain" "bloodstains";
lin bloodstained_A = compoundA (mkA "bloodstained");
lin bloodstock_N = mkN "bloodstock" "bloodstocks";
lin bloodstone_N = mkN "bloodstone" ;
lin bloodstream_N = mkN "bloodstream" ;
lin bloodsucker_N = mkN "bloodsucker" "bloodsuckers";
lin bloodsucking_A = mkA "bloodsucking" ;
lin bloodthirstiness_N = mkN "bloodthirstiness" ;
lin bloodthirsty_A = compoundA (mkA "bloodthirsty");
lin bloodworm_N = mkN "bloodworm" ;
lin bloodwort_N = mkN "bloodwort" ;
lin bloody_A = mkA "bloody" "bloodier";
lin bloody_Adv = mkAdv "bloody";
lin bloody_minded_A = compoundA (mkA "bloody-minded");
lin bloom_N = mkN "bloom" "blooms";
lin bloom_V = mkV "bloom" "blooms" "bloomed" "bloomed" "blooming";
lin bloomer_N = mkN "bloomer" "bloomers";
lin bloomers_N = mkN "bloomers" ;
lin blooming_N = mkN "blooming" ;
lin blossom_N = mkN "blossom" "blossoms";
lin blossom_V = mkV "blossom" "blossoms" "blossomed" "blossomed" "blossoming";
lin blossoming_N = mkN "blossoming" ;
lin blot_N = mkN "blot" "blots";
lin blot_V2 = mkV2 (mkV "blot" "blots" "blotted" "blotted" "blotting");
lin blotch_N = mkN "blotch" "blotches";
lin blotched_A = mkA "blotched" ;
lin blotchy_A = mkA "blotchy" ;
lin blotter_N = mkN "blotter" "blotters";
lin blotting_paper_N = mkN "blotting-paper" "blotting-papers";
lin blotto_A = compoundA (mkA "blotto");
lin blouse_N = mkN "blouse" "blouses";
lin blow_N = mkN "blow" "blows";
lin blow_V = IrregEng.blow_V;
lin blow_V2 = mkV2 (IrregEng.blow_V);
lin blow_dry_V2 = mkV2 (mkV "blow-dry" "blow-dries" "blow-dried" "blow-dried" "blow-drying");
lin blow_up_N = mkN "blow-up" "blow-ups";
lin blowback_N = mkN "blowback" "blowbacks";
lin blower_N = mkN "blower" "blowers";
lin blowfish_N = mkN "blowfish" ;
lin blowfly_N = mkN "blowfly" "blowflies";
lin blowgun_N = mkN "blowgun" ;
lin blowhole_N = mkN "blowhole" "blowholes";
lin blowing_N = mkN "blowing" ;
lin blowing_up_N = mkN "blowing-up" "blowing-ups";
lin blowlamp_N = mkN "blowlamp" "blowlamps";
lin blowout_N = mkN "blowout" "blowouts";
lin blowpipe_N = mkN "blowpipe" "blowpipes";
lin blowsy_A = mkA "blowsy" ;
lin blowtorch_N = mkN "blowtorch" "blowtorches";
lin blowtube_N = mkN "blowtube" ;
lin blowy_A = mkA "blowy" ;
lin blowzy_A = compoundA (mkA "blowzy");
lin blubber_N = mkN "blubber" ;
lin blubber_V = mkV "blubber" "blubbers" "blubbered" "blubbered" "blubbering";
lin blubber_V2 = mkV2 (mkV "blubber" "blubbers" "blubbered" "blubbered" "blubbering");
lin blubberer_N = mkN "blubberer" ;
lin blubbery_A = mkA "blubbery" ;
lin blucher_N = mkN "blucher" ;
lin bludgeon_N = mkN "bludgeon" "bludgeons";
lin bludgeon_V2 = mkV2 (mkV "bludgeon" "bludgeons" "bludgeoned" "bludgeoned" "bludgeoning");
lin bludgeoner_N = mkN "bludgeoner" ;
lin blue_A = mkA "blue" "bluer";
lin blue_N = mkN "blue" "blues";
lin blue_V2 = mkV2 (mkV "blue" "blues" "blued" "blued" "bluing");
lin blue_collar_A = compoundA (mkA "blue-collar");
lin blue_jacket_N = mkN "blue-jacket" "blue-jackets";
lin blue_pencil_V2 = mkV2 (mkV "blue-pencil" "blue-pencils" "blue-pencilled" "blue-pencilled" "blue-pencilling");
lin bluebell_N = mkN "bluebell" "bluebells";
lin blueberry_N = mkN "blueberry" ;
lin bluebird_N = mkN "bluebird" ;
lin bluebonnet_N = mkN "bluebonnet" ;
lin bluebottle_N = mkN "bluebottle" "bluebottles";
lin bluecoat_N = mkN "bluecoat" ;
lin bluefin_N = mkN "bluefin" ;
lin bluefish_N = mkN "bluefish" ;
lin bluegill_N = mkN "bluegill" ;
lin bluegrass_N = mkN "bluegrass" ;
lin bluehead_N = mkN "bluehead" ;
lin bluejacket_N = mkN "bluejacket" ;
lin bluepoint_N = mkN "bluepoint" ;
lin blueprint_N = mkN "blueprint" "blueprints";
lin blues_N = mkN "blues" ;
lin bluestem_N = mkN "bluestem" ;
lin bluestocking_N = mkN "bluestocking" "bluestockings";
lin bluestone_N = mkN "bluestone" ;
lin bluethroat_N = mkN "bluethroat" ;
lin bluetick_N = mkN "bluetick" ;
lin bluetongue_N = mkN "bluetongue" ;
lin blueweed_N = mkN "blueweed" ;
lin bluewing_N = mkN "bluewing" ;
lin bluff_A = compoundA (mkA "bluff");
lin bluff_N = mkN "bluff" "bluffs";
lin bluff_V = mkV "bluff" "bluffs" "bluffed" "bluffed" "bluffing";
lin bluff_V2 = mkV2 (mkV "bluff" "bluffs" "bluffed" "bluffed" "bluffing");
lin bluffer_N = mkN "bluffer" "bluffers";
lin bluffness_N = mkN "bluffness" ;
lin bluing_N = mkN "bluing" ;
lin bluish_A = compoundA (mkA "bluish");
lin blunder_N = mkN "blunder" "blunders";
lin blunder_V = mkV "blunder" "blunders" "blundered" "blundered" "blundering";
lin blunder_V2 = mkV2 (mkV "blunder" "blunders" "blundered" "blundered" "blundering");
lin blunderbuss_N = mkN "blunderbuss" "blunderbusses";
lin blunderer_N = mkN "blunderer" "blunderers";
lin blunt_A = mkA "blunt" "blunter";
lin blunt_V2 = mkV2 (mkV "blunt" "blunts" "blunted" "blunted" "blunting");
lin bluntness_N = mkN "bluntness" ;
lin blur_N = mkN "blur" "blurs";
lin blur_V = mkV "blur" "blurs" "blurred" "blurred" "blurring";
lin blur_V2 = mkV2 (mkV "blur" "blurs" "blurred" "blurred" "blurring");
lin blurb_N = mkN "blurb" "blurbs";
lin blurt_V2 = mkV2 (mkV "blurt" "blurts" "blurted" "blurted" "blurting");
lin blush_N = mkN "blush" "blushes";
lin blush_V = mkV "blush" "blushes" "blushed" "blushed" "blushing";
lin blushful_A = mkA "blushful" ;
lin bluster_N = mkN "bluster" "blusters";
lin bluster_V = mkV "bluster" "blusters" "blustered" "blustered" "blustering";
lin bluster_V2 = mkV2 (mkV "bluster" "blusters" "blustered" "blustered" "blustering");
lin blustery_A = compoundA (mkA "blustery");
lin blvd_N = mkN "blvd" ;
lin blyth_PN = mkPN "Blyth";
lin bma_N = mkN "bma" ;
lin bmus_N = mkN "bmus" ;
lin bo'ness_PN = mkPN "Bo'ness";
lin bo'sn_N = mkN "bo'sn" "bo'sns";
lin bo'sun_N = mkN "bo'sun" "bo'suns";
lin boa_N = mkN "boa" "boas";
lin boa_constrictor_N = mkN "boa-constrictor" "boa-constrictors";
lin boar_N = mkN "boar" "boars";
lin board_N = mkN "board" "boards";
lin board_V = mkV "board" "boards" "boarded" "boarded" "boarding";
lin board_V2 = mkV2 (mkV "board" "boards" "boarded" "boarded" "boarding");
lin boarder_N = mkN human (mkN "boarder" "boarders");
lin boarding_N = mkN "boarding" ;
lin boarding_card_N = mkN "boarding-card" "boarding-cards";
lin boarding_house_N = mkN "boarding-house" "boarding-houses";
lin boarding_school_N = mkN "boarding-school" "boarding-schools";
lin boardroom_N = mkN "boardroom" "boardrooms";
lin boards_N = mkN "boards" ;
lin boardwalk_N = mkN "boardwalk" "boardwalks";
lin boarfish_N = mkN "boarfish" ;
lin boarhound_N = mkN "boarhound" ;
lin boast_N = mkN "boast" "boasts";
lin boast_V = mkV "boast" "boasts" "boasted" "boasted" "boasting";
lin boast_V2 = mkV2 (mkV "boast" "boasts" "boasted" "boasted" "boasting");
lin boast_VS = mkVS (mkV "boast" "boasts" "boasted" "boasted" "boasting");
lin boaster_N = mkN "boaster" "boasters";
lin boastful_A = compoundA (mkA "boastful");
lin boastfulness_N = mkN "boastfulness" ;
lin boat_N = mkN "boat" "boats";
lin boat_V = mkV "boat" "boats" "boated" "boated" "boating";
lin boat_hook_N = mkN "boat-hook" "boat-hooks";
lin boat_house_N = mkN "boat-house" "boat-houses";
lin boat_race_N = mkN "boat-race" "boat-races";
lin boat_train_N = mkN "boat-train" "boat-trains";
lin boatbill_N = mkN "boatbill" ;
lin boatbuilder_N = mkN "boatbuilder" ;
lin boater_N = mkN "boater" "boaters";
lin boathouse_N = mkN "boathouse" ;
lin boating_N = mkN "boating" ;
lin boatload_N = mkN "boatload" ;
lin boatman_N = mkN masculine (mkN "boatman" "boatmen");
lin boatmanship_N = mkN "boatmanship" ;
lin boatswain_N = mkN "boatswain" "boatswains";
lin boatyard_N = mkN "boatyard" ;
lin bob_N = mkN "bob" "bob";
lin bob_PN = mkPN "Bob";
lin bob_V = mkV "bob" "bobs" "bobbed" "bobbed" "bobbing";
lin bob_V2 = mkV2 (mkV "bob" "bobs" "bobbed" "bobbed" "bobbing");
lin bobbin_N = mkN "bobbin" "bobbins";
lin bobble_N = mkN "bobble" ;
lin bobby_N = mkN "bobby" "bobbies";
lin bobby_PN = mkPN "Bobby";
lin bobby_soxer_N = mkN "bobby-soxer" "bobby-soxers";
lin bobbysoxer_N = mkN "bobbysoxer" ;
lin bobcat_N = mkN "bobcat" ;
lin bobolink_N = mkN "bobolink" "bobolinks";
lin bobsled_N = mkN "bobsled" "bobsleds";
lin bobsledding_N = mkN "bobsledding" ;
lin bobsleigh_N = mkN "bobsleigh" "bobsleighs";
lin bobtail_A = mkA "bobtail" ;
lin bobtail_N = mkN "bobtail" "bobtails";
lin bobwhite_N = mkN "bobwhite" ;
lin bocce_N = mkN "bocce" ;
lin bocconia_N = mkN "bocconia" ;
lin boche_A = compoundA (mkA "boche");
lin bochum_PN = mkPN "Bochum";
lin bock_N = mkN "bock" ;
lin bodacious_A = mkA "bodacious" ;
lin bode_V = mkV "bode" "bodes" "boded" "boded" "boding";
lin bode_V2 = mkV2 (mkV "bode" "bodes" "boded" "boded" "boding");
lin bodega_N = mkN "bodega" ;
lin bodice_N = mkN "bodice" "bodices";
lin bodied_A = compoundA (mkA "bodied");
lin bodiless_A = mkA "bodiless" ;
lin bodily_A = compoundA (mkA "bodily");
lin bodily_Adv = mkAdv "bodily";
lin boding_N = mkN "boding" ;
lin bodkin_N = mkN "bodkin" "bodkins";
lin bodmin_PN = mkPN "Bodmin";
lin body_N = mkN "body" "bodies";
lin body_servant_N = mkN "body-servant" "body-servants";
lin body_snatcher_N = mkN "body-snatcher" "body-snatchers";
lin bodybuilder_N = mkN "bodybuilder" ;
lin bodybuilding_N = mkN "bodybuilding" ;
lin bodyguard_N = mkN "bodyguard" "bodyguards";
lin bodywork_N = mkN "bodywork" "bodyworks";
lin boer_A = compoundA (mkA "boer");
lin boer_N = mkN "boer" "boers";
lin boffin_N = mkN "boffin" "boffins";
lin boffo_A = mkA "boffo" ;
lin bog_N = mkN "bog" "bogs";
lin bog_V = mkV "bog" "bogs" "bogged" "bogged" "bogging";
lin bog_V2 = mkV2 (mkV "bog" "bogs" "bogged" "bogged" "bogging");
lin bogey_N = mkN "bogey" "bogeys";
lin bogeyman_N = mkN masculine (mkN "bogeyman" "bogeymen");
lin boggle_V = mkV "boggle" "boggles" "boggled" "boggled" "boggling";
lin boggy_A = mkA "boggy" "boggier";
lin bogie_N = mkN "bogie" "bogies";
lin bognor_PN = mkPN "Bognor";
lin bognor_regis_PN = mkPN "Bognor regis";
lin bogota_PN = mkPN "Bogota";
lin bogus_A = compoundA (mkA "bogus");
lin bogy_N = mkN "bogy" "bogies";
lin bohemia_N = mkN "bohemia" ;
lin bohemian_A = compoundA (mkA "bohemian");
lin bohemian_N = mkN "bohemian" "bohemians";
lin bohemianism_N = mkN "bohemianism" ;
lin bohrium_N = mkN "bohrium" ;
lin boil_N = mkN "boil" "boils";
lin boil_V = mkV "boil" "boils" "boiled" "boiled" "boiling";
lin boil_V2 = mkV2 (mkV "boil" "boils" "boiled" "boiled" "boiling");
lin boiler_N = mkN "boiler" "boilers";
lin boilerplate_N = mkN "boilerplate" ;
lin boilersuit_N = mkN "boilersuit" "boilersuits";
lin boiling_Adv = mkAdv "boiling" ;
lin boiling_N = mkN "boiling" ;
lin boiling_point_N = mkN "boiling-point" "boiling-points";
lin boisterous_A = compoundA (mkA "boisterous");
lin boisterousness_N = mkN "boisterousness" ;
lin bola_N = mkN "bola" ;
lin bold_A = mkA "bold" "bolder";
lin boldface_N = mkN "boldface" ;
lin boldness_N = mkN "boldness" ;
lin boldon_PN = mkPN "Boldon";
lin bole_N = mkN "bole" "boles";
lin bolero_N = mkN "bolero" "boleros";
lin bolete_N = mkN "bolete" ;
lin bolide_N = mkN "bolide" ;
lin bolivar_N = mkN "bolivar" ;
lin bolivia_N = mkN "bolivia" ;
lin bolivia_PN = mkPN "Bolivia";
lin bolivian_A = compoundA (mkA "bolivian");
lin bolivian_N = mkN "bolivian" "bolivians";
lin boliviano_N = mkN "boliviano" ;
lin boll_N = mkN "boll" "bolls";
lin bollard_N = mkN "bollard" "bollards";
lin bollington_PN = mkPN "Bollington";
lin bollock_N = mkN "bollock" "bollocks";
lin bollworm_N = mkN "bollworm" ;
lin bolo_N = mkN "bolo" ;
lin bologna_N = mkN "bologna" ;
lin bologna_PN = mkPN "Bologna";
lin bologram_N = mkN "bologram" ;
lin bolographic_A = mkA "bolographic" ;
lin bolometer_N = mkN "bolometer" ;
lin bolometric_A = mkA "bolometric" ;
lin boloney_N = mkN "boloney" ;
lin bolshevik_N = mkN "bolshevik" "bolsheviks";
lin bolshy_A = compoundA (mkA "bolshy");
lin bolsover_PN = mkPN "Bolsover";
lin bolster_N = mkN "bolster" "bolsters";
lin bolster_V = mkV "bolster";
lin bolster_V2 = mkV2 (mkV "bolster" "bolsters" "bolstered" "bolstered" "bolstering");
lin bolt_Adv = mkAdv "bolt";
lin bolt_N = mkN "bolt" "bolts";
lin bolt_V = mkV "bolt" "bolts" "bolted" "bolted" "bolting";
lin bolt_V2 = mkV2 (mkV "bolt" "bolts" "bolted" "bolted" "bolting");
lin bolt_hole_N = mkN "bolt-hole" "bolt-holes";
lin bolti_N = mkN "bolti" ;
lin bolton_PN = mkPN "Bolton";
lin bolton_le_sands_PN = mkPN "Bolton-le-sands";
lin bolus_N = mkN "bolus" ;
lin bolzano_PN = mkPN "Bolzano";
lin bomb_N = mkN "bomb" "bombs";
lin bomb_V = mkV "bomb" "bombs" "bombed" "bombed" "bombing";
lin bomb_V2 = mkV2 (mkV "bomb" "bombs" "bombed" "bombed" "bombing");
lin bomb_proof_A = compoundA (mkA "bomb-proof");
lin bomb_sight_N = mkN "bomb-sight" "bomb-sights";
lin bomb_site_N = mkN "bomb-site" "bomb-sites";
lin bombard_V2 = mkV2 (mkV "bombard" "bombards" "bombarded" "bombarded" "bombarding");
lin bombardier_N = mkN "bombardier" "bombardiers";
lin bombardment_N = mkN "bombardment" "bombardments";
lin bombardon_N = mkN "bombardon" ;
lin bombast_N = mkN "bombast" ;
lin bombastic_A = compoundA (mkA "bombastic");
lin bombastically_Adv = mkAdv "bombastically";
lin bombay_PN = mkPN "Bombay";
lin bombazine_N = mkN "bombazine" ;
lin bomber_N = mkN "bomber" "bombers";
lin bombie_N = mkN "bombie" ;
lin bombing_N = mkN "bombing" ;
lin bomblet_N = mkN "bomblet" ;
lin bombproof_A = mkA "bombproof" ;
lin bombshell_N = mkN "bombshell" "bombshells";
lin bombsight_N = mkN "bombsight" ;
lin bombycid_N = mkN "bombycid" ;
lin bon_mot_N = mkN "bon mot" "IRREG";
lin bona_fide_A = compoundA (mkA "bona fide");
lin bona_fide_Adv = mkAdv "bona fide";
lin bonanza_N = mkN "bonanza" "bonanzas";
lin bonbon_N = mkN "bonbon" "bonbons";
lin bond_N = mkN "bond" "bonds";
lin bond_V2 = mkV2 (mkV "bond" "bonds" "bonded" "bonded" "bonding");
lin bond_holder_N = mkN "bond-holder" "bond-holders";
lin bondable_A = mkA "bondable" ;
lin bondage_N = mkN "bondage" ;
lin bondholder_N = mkN "bondholder" ;
lin bonding_N = mkN "bonding" ;
lin bondman_N = mkN masculine (mkN "bondman" "bondmen") ;
lin bondsman_N = mkN masculine (mkN "bondsman" "bondsmen") ;
lin bonduc_N = mkN "bonduc" ;
lin bondwoman_N = mkN feminine (mkN "bondwoman" "bondwomen");
lin bone_A = mkA "bone" ;
lin bone_N = mkN "bone" "bones";
lin bone_V2 = mkV2 (mkV "bone" "bones" "boned" "boned" "boning");
lin bone_dry_A = compoundA (mkA "bone-dry");
lin bone_head_N = mkN "bone-head" "bone-heads";
lin bone_idle_A = compoundA (mkA "bone-idle");
lin bone_lazy_A = compoundA (mkA "bone-lazy");
lin bone_setter_N = mkN "bone-setter" "bone-setters";
lin bonefish_N = mkN "bonefish" ;
lin boneless_A = compoundA (mkA "boneless");
lin bonelike_A = mkA "bonelike" ;
lin bonemeal_N = mkN "bonemeal" "bonemeals";
lin boner_N = mkN "boner" "boners";
lin bones_N = mkN "bones" ;
lin boneset_N = mkN "boneset" ;
lin bonesetter_N = mkN "bonesetter" ;
lin boneshaker_N = mkN "boneshaker" "boneshakers";
lin bonfire_N = mkN "bonfire" "bonfires";
lin bong_N = mkN "bong" ;
lin bongo_N = mkN "bongo" "bongos";
lin bonheur_N = mkN "bonheur" ;
lin bonhomie_N = mkN "bonhomie" ;
lin bonito_N = mkN "bonito" "bonitos";
lin bonkers_A = compoundA (mkA "bonkers");
lin bonn_PN = mkPN "Bonn";
lin bonnet_N = mkN "bonnet" "bonnets";
lin bonny_A = mkA "bonny" "bonnier";
lin bonnybridge_PN = mkPN "Bonnybridge";
lin bonnyrigg_PN = mkPN "Bonnyrigg";
lin bonsai_N = mkN "bonsai" ;
lin bonus_N = mkN "bonus" "bonuses";
lin bony_A = mkA "bony" "bonier";
lin bonyness_N = mkN "bonyness" ;
lin bonzer_A = mkA "bonzer" ;
lin boo_N = mkN "boo" "boos";
lin boo_V = mkV "boo" "boos" "booed" "booed" "booing";
lin boo_V2 = mkV2 (mkV "boo" "boos" "booed" "booed" "booing");
lin boob_N = mkN "boob" "boobs";
lin boob_V = mkV "boob" "boobs" "boobed" "boobed" "boobing";
lin booboisie_N = mkN "booboisie" ;
lin booby_N = mkN "booby" "boobies";
lin booby_trap_N = mkN "booby-trap" "booby-traps";
lin boodle_N = mkN "boodle" ;
lin booger_N = mkN "booger" ;
lin boogie_N = mkN "boogie" "boogies";
lin boogie_woogie_N = mkN "boogie-woogie" "boogie-woogies";
lin book_N = mkN "book" "books";
lin book_V2 = mkV2 (mkV "book" "books" "booked" "booked" "booking");
lin book_end_N = mkN "book-end" "book-ends";
lin book_keeper_N = mkN "book-keeper" "book-keepers";
lin bookable_A = compoundA (mkA "bookable");
lin bookbinder_N = mkN "bookbinder" ;
lin bookbindery_N = mkN "bookbindery" ;
lin bookbinding_N = mkN "bookbinding" ;
lin bookcase_N = mkN "bookcase" "bookcases";
lin bookclub_N = mkN "bookclub" "bookclubs";
lin bookdealer_N = mkN "bookdealer" ;
lin bookend_N = mkN "bookend" ;
lin booker_N = mkN "booker" ;
lin bookie_N = mkN "bookie" "bookies";
lin booking_N = mkN "booking" "bookings";
lin bookish_A = compoundA (mkA "bookish");
lin bookishness_N = mkN "bookishness" ;
lin bookkeeper_N = mkN "bookkeeper" "bookkeepers";
lin bookkeeping_N = mkN "bookkeeping" ;
lin booklet_N = mkN "booklet" "booklets";
lin booklouse_N = mkN "booklouse" ;
lin bookmaker_N = mkN "bookmaker" "bookmakers";
lin bookmark_N = mkN "bookmark" "bookmarks";
lin bookmarker_N = mkN "bookmarker" "bookmarkers";
lin bookmobile_N = mkN "bookmobile" "bookmobiles";
lin bookplate_N = mkN "bookplate" ;
lin bookseller_N = mkN "bookseller" "booksellers";
lin bookshelf_N = mkN "bookshelf" ;
lin bookshop_N = mkN "bookshop" "bookshops";
lin bookstall_N = mkN "bookstall" "bookstalls";
lin bookworm_N = mkN "bookworm" "bookworms";
lin boom_N = mkN "boom" "booms";
lin boom_V = mkV "boom" "booms" "boomed" "boomed" "booming";
lin boom_V2 = mkV2 (mkV "boom" "booms" "boomed" "boomed" "booming");
lin boomerang_N = mkN "boomerang" "boomerangs";
lin boon_A = compoundA (mkA "boon");
lin boon_N = mkN "boon" "boons";
lin boondoggle_N = mkN "boondoggle" ;
lin boor_N = mkN "boor" "boors";
lin boorish_A = compoundA (mkA "boorish");
lin boorishness_N = mkN "boorishness" ;
lin boost_N = mkN "boost" "boosts";
lin boost_V2 = mkV2 (mkV "boost" "boosts" "boosted" "boosted" "boosting");
lin booster_N = mkN "booster" "boosters";
lin boot_N = mkN "boot" "boots";
lin boot_V2 = mkV2 (mkV "boot" "boots" "booted" "booted" "booting");
lin bootblack_N = mkN "bootblack" ;
lin bootee_N = mkN "bootee" "bootees";
lin booth_N = mkN "booth" "booths";
lin boothose_N = mkN "boothose" ;
lin bootjack_N = mkN "bootjack" ;
lin bootlace_N = mkN "bootlace" "bootlaces";
lin bootle_PN = mkPN "Bootle";
lin bootleg_A = mkA "bootleg" ;
lin bootleg_N = mkN "bootleg" ;
lin bootleg_V2 = mkV2 (mkV "bootleg" "bootlegs" "bootlegged" "bootlegged" "bootlegging");
lin bootlegger_N = mkN "bootlegger" "bootleggers";
lin bootlegging_N = mkN "bootlegging" ;
lin bootless_A = compoundA (mkA "bootless");
lin bootlicking_A = mkA "bootlicking" ;
lin bootmaker_N = mkN "bootmaker" ;
lin bootstrap_N = mkN "bootstrap" ;
lin booty_N = mkN "booty" ;
lin booze_N = mkN "booze" ;
lin booze_V = mkV "booze" "boozes" "boozed" "boozed" "boozing";
lin booze_up_N = mkN "booze-up" "booze-ups";
lin boozer_N = mkN "boozer" "boozers";
lin boozy_A = mkA "boozy" "boozier";
lin bop_N = mkN "bop" ;
lin bopeep_N = mkN "bopeep" ;
lin boracic_A = compoundA (mkA "boracic");
lin borage_N = mkN "borage" ;
lin borate_N = mkN "borate" ;
lin borated_A = mkA "borated" ;
lin borax_N = mkN "borax" ;
lin bordeaux_N = mkN "bordeaux" ;
lin bordeaux_PN = mkPN "Bordeaux";
lin bordelaise_N = mkN "bordelaise" ;
lin border_N = mkN "border" "borders";
lin border_V = mkV "border" "borders" "bordered" "bordered" "bordering";
lin border_V2 = mkV2 (mkV "border" "borders" "bordered" "bordered" "bordering");
lin borderer_N = mkN "borderer" "borderers";
lin borderland_N = mkN "borderland" "borderlands";
lin borderline_A = mkA "borderline" ;
lin borderline_N = mkN "borderline" "borderlines";
lin borders_PN = mkPN "Borders";
lin bordon_PN = mkPN "Bordon";
lin bore_N = mkN "bore" "bores";
lin bore_V = mkV "bore" "bores" "bored" "bored" "boring";
lin bore_V2 = mkV2 (mkV "bore" "bores" "bored" "bored" "boring");
lin bore_hole_N = mkN "bore-hole" "bore-holes";
lin boreal_A = mkA "boreal" ;
lin boredom_N = mkN "boredom" ;
lin borer_N = mkN "borer" "borers";
lin boric_A = compoundA (mkA "boric");
lin boring_A = mkA "boring" ;
lin boring_N = mkN "boring" ;
lin boringness_N = mkN "boringness" ;
lin boris_PN = mkPN "Boris";
lin bornite_N = mkN "bornite" ;
lin boron_N = mkN "boron" ;
lin boronic_A = mkA "boronic" ;
lin borosilicate_N = mkN "borosilicate" ;
lin borough_N = mkN "borough" "boroughs";
lin borrelia_N = mkN "borrelia" ;
lin borrow_V = mkV "borrow";
lin borrow_V2 = mkV2 (mkV "borrow" "borrows" "borrowed" "borrowed" "borrowing");
lin borrow_VV = mkVV (mkV "borrow" "borrows" "borrowed" "borrowed" "borrowing");
lin borrower_N = mkN "borrower" "borrowers";
lin borrowing_N = mkN "borrowing" ;
lin borsch_N = mkN "borsch" ;
lin borstal_N = mkN "borstal" "borstals";
lin bortsch_N = mkN "bortsch" ;
lin borzoi_N = mkN "borzoi" "borzois";
lin bosc_N = mkN "bosc" ;
lin bosh_N = mkN "bosh" ;
lin bosk_N = mkN "bosk" ;
lin boskopoid_A = mkA "boskopoid" ;
lin bosky_A = compoundA (mkA "bosky");
lin bosom_N = mkN "bosom" "bosoms";
lin bosomed_A = mkA "bosomed" ;
lin bosomy_A = mkA "bosomy" ;
lin boson_N = mkN "boson" ;
lin boss_A = mkA "boss" ;
lin boss_N = mkN "boss" "bosses";
lin boss_V2 = mkV2 (mkV "boss" "bosses" "bossed" "bossed" "bossing");
lin boss_eyed_A = compoundA (mkA "boss-eyed");
lin bossism_N = mkN "bossism" ;
lin bossy_A = mkA "bossy" "bossier";
lin boston_PN = mkPN "Boston";
lin bot_N = mkN "bot" ;
lin bota_N = mkN "bota" ;
lin botanic_A = mkA "botanic" ;
lin botanical_A = compoundA (mkA "botanical");
lin botanical_N = mkN "botanical" ;
lin botanist_N = mkN human (mkN "botanist" "botanists");
lin botanize_V = mkV "botanize" "botanizes" "botanized" "botanized" "botanizing";
lin botany_N = mkN "botany" ;
lin botch_N = mkN "botch" "botches";
lin botch_V2 = mkV2 (mkV "botch" "botches" "botched" "botched" "botching");
lin botcher_N = mkN "botcher" "botchers";
lin botchy_A = mkA "botchy" ;
lin botfly_N = mkN "botfly" ;
lin both7and_DConj = mkConj "both" "and";
lin both_Adv = mkAdv "both";
lin both_Det = mkDeterminer plural "both";
lin bother_N = mkN "bother" ;
lin bother_V = mkV "bother" "bothers" "bothered" "bothered" "bothering";
lin bother_V2 = mkV2 (mkV "bother" "bothers" "bothered" "bothered" "bothering");
lin bother_V2V = mkV2V (mkV "bother" "bothers" "bothered" "bothered" "bothering") noPrep to_Prep ;
lin bother_VV = mkVV (mkV "bother" "bothers" "bothered" "bothered" "bothering") ;
lin bothersome_A = compoundA (mkA "bothersome");
lin botonee_A = mkA "botonee" ;
lin botryoid_A = mkA "botryoid" ;
lin botswana_PN = mkPN "Botswana";
lin bottle_N = mkN "bottle" "bottles";
lin bottle_V2 = mkV2 (mkV "bottle" "bottles" "bottled" "bottled" "bottling");
lin bottle_fed_A = compoundA (mkA "bottle-fed");
lin bottle_green_A = compoundA (mkA "bottle-green");
lin bottlebrush_N = mkN "bottlebrush" ;
lin bottlecap_N = mkN "bottlecap" ;
lin bottleneck_N = mkN "bottleneck" "bottlenecks";
lin bottler_N = mkN "bottler" ;
lin bottom_A = mkA "bottom" ;
lin bottom_N = mkN "bottom" "bottoms";
lin bottom_V = mkV "bottom" "bottoms" "bottomed" "bottomed" "bottoming";
lin bottomed_A = mkA "bottomed" ;
lin bottomland_N = mkN "bottomland" ;
lin bottomless_A = compoundA (mkA "bottomless");
lin bottomlessness_N = mkN "bottomlessness" ;
lin bottommost_A = mkA "bottommost" ;
lin bottrop_PN = mkPN "Bottrop";
lin botuliform_A = mkA "botuliform" ;
lin botulin_N = mkN "botulin" ;
lin botulinal_A = mkA "botulinal" ;
lin botulinus_N = mkN "botulinus" ;
lin botulism_N = mkN "botulism" ;
lin boucle_N = mkN "boucle" ;
lin boudoir_N = mkN "boudoir" "boudoirs";
lin bouffant_A = mkA "bouffant" ;
lin bouffant_N = mkN "bouffant" ;
lin bougainvillea_N = mkN "bougainvillea" "bougainvilleas";
lin bough_N = mkN "bough" "boughs";
lin boughed_A = mkA "boughed" ;
lin boughless_A = mkA "boughless" ;
lin boughten_A = mkA "boughten" ;
lin bouillabaisse_N = mkN "bouillabaisse" ;
lin bouillon_N = mkN "bouillon" ;
lin boulder_N = mkN "boulder" "boulders";
lin boulevard_N = mkN "boulevard" "boulevards";
lin boulevardier_N = mkN "boulevardier" ;
lin boulle_N = mkN "boulle" ;
lin bounce_N = mkN "bounce" "bounces";
lin bounce_V = mkV "bounce" "bounces" "bounced" "bounced" "bouncing";
lin bounce_V2 = mkV2 (mkV "bounce" "bounces" "bounced" "bounced" "bouncing");
lin bouncer_N = mkN "bouncer" ;
lin bouncy_A = mkA "bouncy" "bouncier";
lin bound_N = mkN "bound" "bounds";
lin bound_V = mkV "bound" "bounds" "bounded" "bounded" "bounding";
lin bound_V2 = mkV2 (mkV "bound" "bounds" "bounded" "bounded" "bounding");
lin bound_V2V = mkV2V (mkV "bound" "bounds" "bounded" "bounded" "bounding") noPrep to_Prep ;
lin boundary_N = mkN "boundary" "boundaries";
lin bounden_A = compoundA (mkA "bounden");
lin bounder_N = mkN "bounder" "bounders";
lin boundless_A = compoundA (mkA "boundless");
lin bounteous_A = compoundA (mkA "bounteous");
lin bountied_A = mkA "bountied" ;
lin bountiful_A = compoundA (mkA "bountiful");
lin bounty_N = mkN "bounty" "bounties";
lin bouquet_N = mkN "bouquet" "bouquets";
lin bourbon_N = mkN "bourbon" "bourbons";
lin bourgeois_A = compoundA (mkA "bourgeois");
lin bourgeois_N = mkN "bourgeois" "bourgeois";
lin bourgeoisie_N = mkN "bourgeoisie" "bourgeoisies";
lin bourguignon_N = mkN "bourguignon" ;
lin bourn_N = mkN "bourn" "bourns";
lin bourne_N = mkN "bourne" "bournes";
lin bourne_PN = mkPN "Bourne";
lin bournemouth_PN = mkPN "Bournemouth";
lin bourse_N = mkN "bourse" "bourses";
lin bourtree_N = mkN "bourtree" ;
lin boustrophedon_N = mkN "boustrophedon" ;
lin boustrophedonic_A = mkA "boustrophedonic" ;
lin bout_N = mkN "bout" "bouts";
lin boutique_N = mkN "boutique" "boutiques";
lin boutonniere_N = mkN "boutonniere" ;
lin bovid_N = mkN "bovid" ;
lin bovine_A = compoundA (mkA "bovine");
lin bovine_N = mkN "bovine" ;
lin bovril_N = mkN "bovril" ;
lin bow_N = mkN "bow" "bows";
lin bow_V = mkV "bow" "bows" "bowed" "bowed" "bowing";
lin bow_V2 = mkV2 (mkV "bow" "bows" "bowed" "bowed" "bowing");
lin bow_wow_N = mkN "bow-wow" "bow-wows";
lin bowburn_PN = mkPN "Bowburn";
lin bowdlerization_N = mkN "bowdlerization" ;
lin bowdlerize_V2 = mkV2 (mkV "bowdlerize" "bowdlerizes" "bowdlerized" "bowdlerized" "bowdlerizing");
lin bowel_N = mkN "bowel" "bowels";
lin bowels_N = mkN "bowels" ;
lin bower_N = mkN "bower" "bowers";
lin bowerbird_N = mkN "bowerbird" ;
lin bowery_A = mkA "bowery" ;
lin bowfin_N = mkN "bowfin" ;
lin bowfront_A = mkA "bowfront" ;
lin bowhead_N = mkN "bowhead" ;
lin bowie_knife_N = mkN "bowie knife" "bowie knives";
lin bowing_N = mkN "bowing" ;
lin bowl_N = mkN "bowl" "bowls";
lin bowl_V = mkV "bowl" "bowls" "bowled" "bowled" "bowling";
lin bowl_V2 = mkV2 (mkV "bowl" "bowls" "bowled" "bowled" "bowling");
lin bowleg_N = mkN "bowleg" ;
lin bowler_N = mkN "bowler" "bowlers";
lin bowline_N = mkN "bowline" "bowlines";
lin bowling_N = mkN "bowling" ;
lin bowling_green_N = mkN "bowling-green" "bowling-greens";
lin bowls_N = mkN "bowls" "bowls";
lin bowman_N = mkN masculine (mkN "bowman" "bowmen");
lin bowsprit_N = mkN "bowsprit" "bowsprits";
lin bowstring_N = mkN "bowstring" ;
lin box_N = mkN "box" "boxes";
lin box_V = mkV "box" "boxes" "boxed" "boxed" "boxing";
lin box_V2 = mkV2 (mkV "box" "boxes" "boxed" "boxed" "boxing");
lin box_kite_N = mkN "box-kite" "box-kites";
lin box_number_N = mkN "box-number" "box-numbers";
lin box_office_N = mkN "box-office" "box-offices";
lin boxcar_N = mkN "boxcar" ;
lin boxcars_N = mkN "boxcars" ;
lin boxer_N = mkN "boxer" "boxers";
lin boxfish_N = mkN "boxfish" ;
lin boxful_N = mkN "boxful" "boxfuls";
lin boxing_N = mkN "boxing" ;
lin boxing_day_N = mkN "boxing day" "boxing days";
lin boxing_day_PN = mkPN "Boxing day";
lin boxing_glove_N = mkN "boxing-glove" "boxing-gloves";
lin boxing_match_N = mkN "boxing-match" "boxing-matches";
lin boxlike_A = mkA "boxlike" ;
lin boxwood_N = mkN "boxwood" ;
lin boy_N = mkN masculine (mkN "boy" "boys");
lin boycott_N = mkN "boycott" "boycotts";
lin boycott_V2 = mkV2 (mkV "boycott" "boycotts" "boycotted" "boycotted" "boycotting");
lin boyfriend_N = mkN masculine (mkN "boyfriend" "boyfriends");
lin boyhood_N = mkN "boyhood" ;
lin boyish_A = compoundA (mkA "boyish");
lin boyishness_N = mkN "boyishness" ;
lin boysenberry_N = mkN "boysenberry" ;
lin boza_N = mkN (variants {"boza"; "bosa"});
lin bra_N = mkN "bra" "bras";
lin brace_N = mkN "brace" "brace";
lin brace_V = mkV "brace" "braces" "braced" "braced" "bracing";
lin brace_V2 = mkV2 (mkV "brace" "braces" "braced" "braced" "bracing");
lin bracelet_N = mkN "bracelet" "bracelets";
lin bracer_N = mkN "bracer" ;
lin bracero_N = mkN "bracero" ;
lin brachial_A = mkA "brachial" ;
lin brachiate_A = mkA "brachiate" ;
lin brachiation_N = mkN "brachiation" ;
lin brachiopod_A = mkA "brachiopod" ;
lin brachiopod_N = mkN "brachiopod" ;
lin brachium_N = mkN "brachium" ;
lin brachycephalic_A = mkA "brachycephalic" ;
lin brachycephalic_N = mkN "brachycephalic" ;
lin brachycephaly_N = mkN "brachycephaly" ;
lin brachydactylic_A = mkA "brachydactylic" ;
lin brachydactyly_N = mkN "brachydactyly" ;
lin brachypterous_A = mkA "brachypterous" ;
lin brachyuran_N = mkN "brachyuran" ;
lin brachyurous_A = mkA "brachyurous" ;
lin bracken_N = mkN "bracken" ;
lin bracket_N = mkN "bracket" "brackets";
lin bracket_V2 = mkV2 (mkV "bracket" "brackets" "bracketed" "bracketed" "bracketing");
lin brackish_A = compoundA (mkA "brackish");
lin brackishness_N = mkN "brackishness" ;
lin bracknell_PN = mkPN "Bracknell";
lin bract_N = mkN "bract" "bracts";
lin bracteal_A = mkA "bracteal" ;
lin bracteate_A = mkA "bracteate" ;
lin bracteolate_A = mkA "bracteolate" ;
lin bracteole_N = mkN "bracteole" ;
lin brad_N = mkN "brad" "brads";
lin bradawl_N = mkN "bradawl" "bradawls";
lin bradford_PN = mkPN "Bradford";
lin bradford_on_avon_PN = mkPN "Bradford-on-avon";
lin bradycardia_N = mkN "bradycardia" ;
lin brae_N = mkN "brae" "braes";
lin brag_N = mkN "brag" ;
lin brag_V = mkV "brag" "brags" "bragged" "bragged" "bragging";
lin braggadocio_N = mkN "braggadocio" ;
lin braggart_N = mkN "braggart" "braggarts";
lin bragger_N = mkN "bragger" ;
lin bragging_N = mkN "bragging" ;
lin brahman_N = mkN "brahman" ;
lin brahmin_N = mkN "brahmin" "brahmins";
lin brahminic_A = mkA "brahminic" ;
lin braid_N = mkN "braid" "braids";
lin braid_V2 = mkV2 (mkV "braid" "braids" "braided" "braided" "braiding");
lin brail_N = mkN "brail" ;
lin braille_N = mkN "braille" ;
lin brain_N = mkN "brain" "brains";
lin brain_V2 = mkV2 (mkV "brain" "brains" "brained" "brained" "braining");
lin brain_fag_N = mkN "brain-fag" ;
lin brain_teaser_N = mkN "brain-teaser" "brain-teasers";
lin brainchild_N = mkN "brainchild" "brainchildren" {- FIXME: guessed plural form -};
lin brainless_A = compoundA (mkA "brainless");
lin brainsick_A = mkA "brainsick" ;
lin brainstem_N = mkN "brainstem" ;
lin brainstorm_N = mkN "brainstorm" "brainstorms";
lin brainstorming_N = mkN "brainstorming" ;
lin braintree_PN = mkPN "Braintree";
lin brainwash_V2 = mkV2 (mkV "brainwash" "brainwashes" "brainwashed" "brainwashed" "brainwashing");
lin brainwashing_N = mkN "brainwashing" ;
lin brainwave_N = mkN "brainwave" "brainwaves";
lin brainworker_N = mkN "brainworker" ;
lin brainy_A = mkA "brainy" "brainier";
lin braise_V2 = mkV2 (mkV "braise" "braises" "braised" "braised" "braising");
lin braising_N = mkN "braising" ;
lin brake_N = mkN "brake" "brakes";
lin brake_V = mkV "brake" "brakes" "braked" "braked" "braking";
lin brake_V2 = mkV2 (mkV "brake" "brakes" "braked" "braked" "braking");
lin brakeman_N = mkN masculine (mkN "brakeman" "brakemen");
lin braky_A = mkA "braky" ;
lin bramble_N = mkN "bramble" "brambles";
lin brambling_N = mkN "brambling" ;
lin bran_N = mkN "bran" ;
lin bran_new_A = compoundA (mkA "bran-new");
lin branch_N = mkN "branch" "branches";
lin branch_V = mkV "branch" "branches" "branched" "branched" "branching";
lin branched_A = mkA "branched" ;
lin branchial_A = mkA "branchial" ;
lin branchiate_A = mkA "branchiate" ;
lin branching_N = mkN "branching" ;
lin branchiopod_A = mkA "branchiopod" ;
lin branchless_A = mkA "branchless" ;
lin branchlet_N = mkN "branchlet" ;
lin branchy_A = mkA "branchy" "branchier";
lin brand_N = mkN "brand" "brands";
lin brand_V2 = mkV2 (mkV "brand" "brands" "branded" "branded" "branding");
lin brand_new_A = compoundA (mkA "brand-new");
lin branderburgh_PN = mkPN "Branderburgh";
lin branding_iron_N = mkN "branding-iron" "branding-irons";
lin brandish_V2 = mkV2 (mkV "brandish" "brandishes" "brandished" "brandished" "brandishing");
lin brandy_N = mkN "brandy" "brandies";
lin brandy_ball_N = mkN "brandy-ball" "brandy-balls";
lin brandy_snap_N = mkN "brandy-snap" "brandy-snaps";
lin brandyball_N = mkN "brandyball" ;
lin brandysnap_N = mkN "brandysnap" ;
lin brant_N = mkN "brant" ;
lin brash_A = mkA "brash" "brasher";
lin brashness_N = mkN "brashness" ;
lin brasilia_PN = mkPN "Brasilia";
lin brass_N = mkN "brass" "brasses";
lin brassard_N = mkN "brassard" "brassards";
lin brassavola_N = mkN "brassavola" ;
lin brassbound_A = mkA "brassbound" ;
lin brasserie_N = mkN "brasserie" "brasseries";
lin brassie_N = mkN "brassie" ;
lin brassiere_1_N = mkN "brassiere" "brassieres";
lin brassiere_2_N = mkN "brassière" "brassières";
lin brassiere_N = mkN "brassiere" ;
lin brassy_A = mkA "brassy" "brassier";
lin brat_N = mkN "brat" "brats";
lin bratislava_PN = mkPN "Bratislava";
lin brattice_N = mkN "brattice" ;
lin bratty_A = mkA "bratty" ;
lin bratwurst_N = mkN "bratwurst" ;
lin braunschweig_PN = mkPN "Braunschweig";
lin braunton_PN = mkPN "Braunton";
lin bravado_N = mkN "bravado" "bravados";
lin brave_A = mkA "brave" "braver";
lin brave_N = mkN "brave" "braves";
lin brave_V2 = mkV2 (mkV "brave" "braves" "braved" "braved" "braving");
lin bravery_N = mkN "bravery" ;
lin bravo_N = mkN "bravo" "bravos";
lin bravura_N = mkN "bravura" ;
lin brawl_N = mkN "brawl" "brawls";
lin brawl_V = mkV "brawl" "brawls" "brawled" "brawled" "brawling";
lin brawler_N = mkN "brawler" "brawlers";
lin brawn_N = mkN "brawn" ;
lin brawny_A = mkA "brawny" "brawnier";
lin bray_N = mkN "bray" "brays";
lin bray_V2 = mkV2 (mkV "bray" "brays" "brayed" "brayed" "braying");
lin braze_V2 = mkV2 (mkV "braze" "brazes" "brazed" "brazed" "brazing");
lin brazen_A = compoundA (mkA "brazen");
lin brazen_V2 = mkV2 (mkV "brazen" "brazens" "brazened" "brazened" "brazening");
lin brazen_faced_A = compoundA (mkA "brazen-faced");
lin brazier_N = mkN "brazier" "braziers";
lin brazil_PN = mkPN "Brazil";
lin brazilian_A = compoundA (mkA "Brazilian");
lin brazilian_N = mkN "Brazilian" "Brazilians";
lin brazilwood_N = mkN "brazilwood" ;
lin breach_N = mkN "breach" "breaches";
lin breach_V2 = mkV2 (mkV "breach" "breaches" "breached" "breached" "breaching");
lin bread_N = mkN "bread" ;
lin breadbasket_N = mkN "breadbasket" ;
lin breadboard_N = mkN "breadboard" ;
lin breadcrumb_N = mkN "breadcrumb" "breadcrumbs";
lin breadfruit_N = mkN "breadfruit" "breadfruit";
lin breadline_N = mkN "breadline" "breadlines";
lin breadroot_N = mkN "breadroot" ;
lin breadstick_N = mkN "breadstick" ;
lin breadstuff_N = mkN "breadstuff" ;
lin breadth_N = mkN "breadth" "breadths";
lin breadthways_Adv = mkAdv "breadthways";
lin breadthwise_Adv = mkAdv "breadthwise";
lin breadwinner_N = mkN "breadwinner" "breadwinners";
lin break_N = mkN "break" "breaks";
lin break_V = IrregEng.break_V;
lin break_V2 = mkV2 (IrregEng.break_V);
lin break_in_N = mkN "break-in" "break-ins";
lin break_up_N = mkN "break-up" "break-ups";
lin breakable_A = compoundA (mkA "breakable");
lin breakable_N = mkN "breakable" ;
lin breakableness_N = mkN "breakableness" ;
lin breakage_N = mkN "breakage" "breakages";
lin breakaway_A = mkA "breakaway" ;
lin breakaway_N = mkN "breakaway" "breakaways";
lin breakaways_N = mkN "breakaways" "breakawayss";
lin breakax_N = mkN "breakax" ;
lin breakdown_N = mkN "breakdown" "breakdowns";
lin breaker_N = mkN "breaker" "breakers";
lin breakfast_N = mkN "breakfast" "breakfasts";
lin breakfast_V = mkV "breakfast" "breakfasts" "breakfasted" "breakfasted" "breakfasting";
lin breakneck_A = compoundA (mkA "breakneck");
lin breakthrough_N = mkN "breakthrough" "breakthroughs";
lin breakwater_N = mkN "breakwater" "breakwaters";
lin bream_N = mkN "bream" "bream";
lin breast_N = mkN "breast" "breasts";
lin breast_V2 = mkV2 (mkV "breast" "breasts" "breasted" "breasted" "breasting");
lin breast_deep_Adv = mkAdv "breast-deep";
lin breast_fed_A = compoundA (mkA "breast-fed");
lin breast_high_Adv = mkAdv "breast-high";
lin breast_plate_N = mkN "breast-plate" "breast-plates";
lin breastfeed_V = mkV "breast" IrregEng.feed_V;
lin breastfeed_V2 = mkV2 (mkV "breast" IrregEng.feed_V);
lin breastless_A = mkA "breastless" ;
lin breaston_PN = mkPN "Breaston";
lin breastplate_N = mkN "breastplate" ;
lin breaststroke_N = mkN "breaststroke" ;
lin breaststroker_N = mkN "breaststroker" ;
lin breastwork_N = mkN "breastwork" "breastworks";
lin breath_N = mkN "breath" "breaths";
lin breathalyser_N = mkN "breathalyser" "breathalysers";
lin breathalyzer_N = mkN "breathalyzer" ;
lin breathe_V = mkV "breathe" "breathes" "breathed" "breathed" "breathing";
lin breathe_V2 = mkV2 (mkV "breathe" "breathes" "breathed" "breathed" "breathing");
lin breather_N = mkN "breather" "breathers";
lin breathing_N = mkN "breathing" ;
lin breathing_space_N = mkN "breathing-space" "breathing-spaces";
lin breathless_A = compoundA (mkA "breathless");
lin breathtaking_A = compoundA (mkA "breathtaking");
lin breccia_N = mkN "breccia" ;
lin brecknock_PN = mkPN "Brecknock";
lin breda_PN = mkPN "Breda";
lin breech_N = mkN "breech" "breeches";
lin breech_block_N = mkN "breech-block" "breech-blocks";
lin breechblock_N = mkN "breechblock" ;
lin breechcloth_N = mkN "breechcloth" ;
lin breeched_A = mkA "breeched" ;
lin breeches_N = mkN "breeches" ;
lin breeches_buoy_N = mkN "breeches-buoy" "breeches-buoys";
lin breechloader_N = mkN "breechloader" ;
lin breed_N = mkN "breed" "breeds";
lin breed_V = IrregEng.breed_V;
lin breed_V2 = mkV2 (IrregEng.breed_V);
lin breeder_N = mkN "breeder" "breeders";
lin breeding_N = mkN "breeding" ;
lin breedsall_PN = mkPN "Breedsall";
lin breeze_N = mkN "breeze" "breezes";
lin breeze_V = mkV "breeze" "breezes" "breezed" "breezed" "breezing";
lin breeziness_N = mkN "breeziness" ;
lin breezy_A = mkA "breezy" "breezier";
lin bregma_N = mkN "bregma" ;
lin bregmatic_A = mkA "bregmatic" ;
lin bremen_PN = mkPN "Bremen";
lin bremerhaven_PN = mkPN "Bremerhaven";
lin bren_N = mkN "bren" "brens";
lin bren_gun_N = mkN "bren-gun" "bren-guns";
lin brenda_PN = mkPN "Brenda";
lin brent_PN = mkPN "Brent";
lin brentwood_PN = mkPN "Brentwood";
lin brescia_PN = mkPN "Brescia";
lin brest_PN = mkPN "Brest";
lin brethren_N = mkN "brethren" ;
lin breve_N = mkN "breve" "breves";
lin brevet_N = mkN "brevet" "brevets";
lin breviary_N = mkN "breviary" "breviaries";
lin brevity_N = mkN "brevity" ;
lin brew_N = mkN "brew" "brews";
lin brew_V = mkV "brew" "brews" "brewed" "brewed" "brewing";
lin brew_V2 = mkV2 (mkV "brew" "brews" "brewed" "brewed" "brewing");
lin brewer_N = mkN "brewer" "brewers";
lin brewery_N = mkN "brewery" "breweries";
lin brewing_N = mkN "brewing" ;
lin brewpub_N = mkN "brewpub" ;
lin brian_PN = mkPN "Brian";
lin briar_N = mkN "briar" "briars";
lin briard_N = mkN "briard" ;
lin briarroot_N = mkN "briarroot" ;
lin briarwood_N = mkN "briarwood" ;
lin bribable_A = compoundA (mkA "bribable");
lin bribe_N = mkN "bribe" "bribes";
lin bribe_V = mkV "bribe";
lin bribe_V2 = mkV2 (mkV "bribe" "bribes" "bribed" "bribed" "bribing");
lin briber_N = mkN "briber" ;
lin bribery_N = mkN "bribery" ;
lin bric_a_brac_N = mkN "bric-a-brac" ;
lin brick_N = mkN "brick" "bricks";
lin brick_V2 = mkV2 (mkV "brick" "bricks" "bricked" "bricked" "bricking");
lin brick_field_N = mkN "brick-field" "brick-fields";
lin brickbat_N = mkN "brickbat" "brickbats";
lin bricket_wood_PN = mkPN "Bricket Wood";
lin brickkiln_N = mkN "brickkiln" "brickkilns";
lin bricklayer_N = mkN "bricklayer" "bricklayers";
lin bricklaying_N = mkN "bricklaying" ;
lin brickwork_N = mkN "brickwork" "brickworks";
lin brickyard_N = mkN "brickyard" ;
lin bridal_A = compoundA (mkA "bridal");
lin bridal_N = mkN "bridal" "bridals";
lin bride_N = mkN "bride" "brides";
lin bridecake_N = mkN "bridecake" "bridecakes";
lin bridegroom_N = mkN "bridegroom" "bridegrooms";
lin bridesmaid_N = mkN "bridesmaid" "bridesmaids";
lin bridge_N = mkN "bridge" "bridges";
lin bridge_V2 = mkV2 (mkV "bridge" "bridges" "bridged" "bridged" "bridging");
lin bridgeable_A = mkA "bridgeable" ;
lin bridgehead_N = mkN "bridgehead" "bridgeheads";
lin bridgend_PN = mkPN "Bridgend";
lin bridget_PN = mkPN "Bridget";
lin bridgnorth_PN = mkPN "Bridgnorth";
lin bridgwater_PN = mkPN "Bridgwater";
lin bridle_N = mkN "bridle" "bridles";
lin bridle_V = mkV "bridle" "bridles" "bridled" "bridled" "bridling";
lin bridle_V2 = mkV2 (mkV "bridle" "bridles" "bridled" "bridled" "bridling");
lin bridle_path_N = mkN "bridle-path" "bridle-paths";
lin bridle_road_N = mkN "bridle-road" "bridle-roads";
lin bridlington_PN = mkPN "Bridlington";
lin bridoon_N = mkN "bridoon" ;
lin bridport_PN = mkPN "Bridport";
lin brief_A = mkA "brief" "briefer";
lin brief_N = mkN "brief" "briefs";
lin brief_V2 = mkV2 (mkV "brief" "briefs" "briefed" "briefed" "briefing");
lin briefcase_N = mkN "briefcase" "briefcases";
lin briefing_N = mkN "briefing" "briefings";
lin briefless_A = mkA "briefless" ;
lin briefness_N = mkN "briefness" ;
lin brier_N = mkN "brier" "briers";
lin brig_N = mkN "brig" "brigs";
lin brig_PN = mkPN "Brig";
lin brigade_N = mkN "brigade" "brigades";
lin brigadier_N = mkN "brigadier" "brigadiers";
lin brigand_N = mkN "brigand" "brigands";
lin brigandine_N = mkN "brigandine" ;
lin brigantine_N = mkN "brigantine" "brigantines";
lin brighouse_PN = mkPN "Brighouse";
lin bright_A = mkA "bright" "brighter";
lin bright_Adv = mkAdv "bright";
lin brighten_V = mkV "brighten" "brightens" "brightened" "brightened" "brightening";
lin brighten_V2 = mkV2 (mkV "brighten" "brightens" "brightened" "brightened" "brightening");
lin brightlingsea_PN = mkPN "Brightlingsea";
lin brightness_N = mkN "brightness" ;
lin brighton_PN = mkPN "Brighton";
lin brill_N = mkN "brill" "brill";
lin brilliance_N = mkN "brilliance" ;
lin brilliancy_N = mkN "brilliancy" ;
lin brilliant_A = compoundA (mkA "brilliant");
lin brilliantine_N = mkN "brilliantine" ;
lin brim_N = mkN "brim" "brims";
lin brim_V = mkV "brim" "brims" "brimmed" "brimmed" "brimming";
lin brimful_A = compoundA (mkA "brimful");
lin brimfull_A = compoundA (mkA "brimfull");
lin brimless_A = mkA "brimless" ;
lin brimstone_N = mkN "brimstone" ;
lin brindled_A = compoundA (mkA "brindled");
lin brine_N = mkN "brine" "brines";
lin bring_V2 = mkV2 (IrregEng.bring_V);
lin bring_V2V = mkV2V (IrregEng.bring_V) noPrep to_Prep ;
lin bring_V3 = mkV3 (IrregEng.bring_V);
lin brininess_N = mkN "brininess" ;
lin brink_N = mkN "brink" "brinks";
lin brinkmanship_N = mkN "brinkmanship" ;
lin briny_A = mkA "briny" "brinier";
lin brioche_N = mkN "brioche" "brioches";
lin briquet_N = mkN "briquet" "briquets";
lin briquette_N = mkN "briquette" "briquettes";
lin brisance_N = mkN "brisance" ;
lin brisant_A = mkA "brisant" ;
lin brisbane_PN = mkPN "Brisbane";
lin brisk_A = mkA "brisk" "brisker";
lin brisket_N = mkN "brisket" ;
lin brisling_N = mkN "brisling" ;
lin bristle_N = mkN "bristle" "bristles";
lin bristle_V = mkV "bristle" "bristles" "bristled" "bristled" "bristling";
lin bristlegrass_N = mkN "bristlegrass" ;
lin bristlelike_A = mkA "bristlelike" ;
lin bristletail_N = mkN "bristletail" ;
lin bristly_A = mkA "bristly" "bristlier";
lin bristol_PN = mkPN "Bristol";
lin brit_N = mkN "brit" "brits";
lin britain_PN = mkPN "Britain";
lin britannic_A = compoundA (mkA "britannic");
lin britches_N = mkN "britches" ;
lin british_A = compoundA (mkA "British");
lin britisher_N = mkN masculine (mkN "Britisher" "Britishers");
lin briton_A = compoundA (mkA "briton");
lin briton_N = mkN "briton" "britons";
lin brittle_A = compoundA (mkA "brittle");
lin brittle_N = mkN "brittle" ;
lin brittlebush_N = mkN "brittlebush" ;
lin brittleness_N = mkN "brittleness" ;
lin brixham_PN = mkPN "Brixham";
lin brno_PN = mkPN "Brno";
lin broach_V = mkV "broach" "broaches" "broached" "broached" "broaching";
lin broach_V2 = mkV2 (mkV "broach" "broaches" "broached" "broached" "broaching");
lin broad_A = mkA "broad" "broader";
lin broad_N = mkN "broad" "broads";
lin broad_minded_A = compoundA (mkA "broad-minded");
lin broad_mindedness_N = mkN "broad-mindedness" ;
lin broadax_N = mkN "broadax" ;
lin broadband_A = mkA "broadband" ;
lin broadbill_N = mkN "broadbill" ;
lin broadcast_Adv = mkAdv "broadcast";
lin broadcast_N = mkN "broadcast" "broadcasts";
lin broadcast_V = mkV "broadcast" "broadcasts" "broadcasted" "broadcasted" "broadcasting";
lin broadcast_V2 = mkV2 (mkV "broadcast" "broadcasts" "broadcasted" "broadcasted" "broadcasting");
lin broadcaster_N = mkN "broadcaster" ;
lin broadcasting_N = mkN "broadcasting" ;
lin broadcloth_N = mkN "broadcloth" ;
lin broaden_V = mkV "broaden" "broadens" "broadened" "broadened" "broadening";
lin broaden_V2 = mkV2 (mkV "broaden" "broadens" "broadened" "broadened" "broadening");
lin broadening_N = mkN "broadening" ;
lin broadleaf_A = mkA "broadleaf" ;
lin broadloom_A = mkA "broadloom" ;
lin broadloom_N = mkN "broadloom" ;
lin broadness_N = mkN "broadness" ;
lin broadsheet_N = mkN "broadsheet" "broadsheets";
lin broadside_A = mkA "broadside" ;
lin broadside_Adv = mkAdv "broadside" ;
lin broadside_N = mkN "broadside" "broadsides";
lin broadsword_N = mkN "broadsword" ;
lin broadtail_N = mkN "broadtail" ;
lin broadways_Adv = mkAdv "broadways";
lin broadwise_Adv = mkAdv "broadwise";
lin brocade_N = mkN "brocade" "brocades";
lin brocade_V2 = mkV2 (mkV "brocade" "brocades" "brocaded" "brocaded" "brocading");
lin broccoli_N = mkN "broccoli" ;
lin brochette_N = mkN "brochette" ;
lin brochure_N = mkN "brochure" "brochures";
lin brocket_N = mkN "brocket" ;
lin brodiaea_N = mkN "brodiaea" ;
lin brogan_N = mkN "brogan" ;
lin brogue_N = mkN "brogue" "brogues";
lin broil_N = mkN "broil" ;
lin broil_V = mkV "broil" "broils" "broiled" "broiled" "broiling";
lin broil_V2 = mkV2 (mkV "broil" "broils" "broiled" "broiled" "broiling");
lin broiler_N = mkN "broiler" "broilers";
lin broke_A = compoundA (mkA "broke");
lin broken_hearted_A = compoundA (mkA "broken-hearted");
lin brokenhearted_A = mkA "brokenhearted" ;
lin broker_N = mkN "broker" "brokers";
lin brokerage_N = mkN "brokerage" ;
lin brolly_N = mkN "brolly" "brollies";
lin brome_N = mkN "brome" ;
lin bromic_A = mkA "bromic" ;
lin bromide_N = mkN "bromide" "bromides";
lin bromidic_A = mkA "bromidic" ;
lin bromine_N = mkN "bromine" ;
lin bromley_PN = mkPN "Bromley";
lin bromoform_N = mkN "bromoform" ;
lin bromsgrove_PN = mkPN "Bromsgrove";
lin bronchial_A = compoundA (mkA "bronchial");
lin bronchiolar_A = mkA "bronchiolar" ;
lin bronchiole_N = mkN "bronchiole" ;
lin bronchiolitis_N = mkN "bronchiolitis" ;
lin bronchitic_A = compoundA (mkA "bronchitic");
lin bronchitis_N = mkN "bronchitis" ;
lin bronchodilator_N = mkN "bronchodilator" ;
lin bronchopneumonia_N = mkN "bronchopneumonia" ;
lin bronchoscope_N = mkN "bronchoscope" ;
lin bronchoscopic_A = mkA "bronchoscopic" ;
lin bronchospasm_N = mkN "bronchospasm" ;
lin bronchus_N = mkN "bronchus" "bronchi" {- FIXME: guessed plural form -};
lin bronco_N = mkN "bronco" "broncos";
lin bronze_A = mkA "bronze" ;
lin bronze_N = mkN "bronze" "bronzes";
lin bronze_V = mkV "bronze" "bronzes" "bronzed" "bronzed" "bronzing";
lin bronze_V2 = mkV2 (mkV "bronze" "bronzes" "bronzed" "bronzed" "bronzing");
lin brooch_N = mkN "brooch" "brooches";
lin brood_N = mkN "brood" "broods";
lin brood_V = mkV "brood" "broods" "brooded" "brooded" "brooding";
lin brood_hen_N = mkN "brood-hen" "brood-hens";
lin brood_mare_N = mkN "brood-mare" "brood-mares";
lin brooding_N = mkN "brooding" ;
lin broodmare_N = mkN "broodmare" ;
lin broody_A = mkA "broody" "broodier";
lin brook_N = mkN "brook" "brooks";
lin brook_V2 = mkV2 (mkV "brook" "brooks" "brooked" "brooked" "brooking");
lin brooklet_N = mkN "brooklet" ;
lin brooklime_N = mkN "brooklime" ;
lin brookweed_N = mkN "brookweed" ;
lin broom_N = mkN "broom" "brooms";
lin broomcorn_N = mkN "broomcorn" ;
lin broomstick_N = mkN "broomstick" "broomsticks";
lin broomweed_N = mkN "broomweed" ;
lin bros_PN = mkPN "Bros";
lin broth_N = mkN "broth" ;
lin brothel_N = mkN "brothel" "brothels";
lin brother_N = mkN "brother" "brothers";
lin brother_in_law_N = mkN "brother-in-law" "brothers-in-law";
lin brotherhood_N = mkN "brotherhood" "brotherhoods";
lin brotherly_A = compoundA (mkA "brotherly");
lin brotherly_Adv = mkAdv "brotherly" ;
lin brotula_N = mkN "brotula" ;
lin brougham_N = mkN "brougham" "broughams";
lin brought_V = mkV "brought";
lin broughton_PN = mkPN "Broughton";
lin brouhaha_N = mkN "brouhaha" "brouhahas";
lin brow_N = mkN "brow" "brows";
lin browbeat_V2 = mkV2 (mkV "brow" IrregEng.beat_V);
lin brown_A = mkA "brown" "browner";
lin brown_N = mkN "brown" ;
lin brown_V = mkV "brown" "browns" "browned" "browned" "browning";
lin brown_V2 = mkV2 (mkV "brown" "browns" "browned" "browned" "browning");
lin brownie_N = mkN "brownie" "brownies";
lin brownish_A = compoundA (mkA "brownish");
lin brownstone_N = mkN "brownstone" "brownstones";
lin browntail_N = mkN "browntail" ;
lin browse_N = mkN "browse" "browses";
lin browse_V = mkV "browse" "browses" "browsed" "browsed" "browsing";
lin browser_N = mkN "browser" ;
lin broxburn_PN = mkPN "Broxburn";
lin bruce_PN = mkPN "Bruce";
lin brucellosis_N = mkN "brucellosis" ;
lin brucine_N = mkN "brucine" ;
lin bruges_PN = mkPN "Bruges";
lin bruin_N = mkN "bruin" "bruins";
lin bruise_N = mkN "bruise" "bruises";
lin bruise_V = mkV "bruise" "bruises" "bruised" "bruised" "bruising";
lin bruise_V2 = mkV2 (mkV "bruise" "bruises" "bruised" "bruised" "bruising");
lin bruiser_N = mkN "bruiser" "bruisers";
lin bruit_V2 = mkV2 (mkV "bruit" "bruits" "bruited" "bruited" "bruiting");
lin brumal_A = mkA "brumal" ;
lin brumous_A = mkA "brumous" ;
lin brunch_N = mkN "brunch" "brunches";
lin brunei_PN = mkPN "Brunei";
lin bruneian_A = compoundA (mkA "bruneian");
lin bruneian_N = mkN "bruneian" "bruneians";
lin brunet_A = mkA "brunet" ;
lin brunet_N = mkN "brunet" ;
lin brunetteMasc_N = mkN masculine (mkN "brunette" "brunettes");
lin brunetteFem_N = mkN feminine (mkN "brunette" "brunettes");
lin brunswick_PN = mkPN "Brunswick";
lin brunt_N = mkN "brunt" "brunts";
lin brush_N = mkN "brush" "brushes";
lin brush_V = mkV "brush" "brushes" "brushed" "brushed" "brushing";
lin brush_V2 = mkV2 (mkV "brush" "brushes" "brushed" "brushed" "brushing");
lin brush_off_N = mkN "brush-off" "brush-offs";
lin brush_up_N = mkN "brush-up" "brush-ups";
lin brushlike_A = mkA "brushlike" ;
lin brushwood_N = mkN "brushwood" ;
lin brushwork_N = mkN "brushwork" "brushworks";
lin brusque_A = compoundA (mkA "brusque");
lin brusqueness_N = mkN "brusqueness" ;
lin brussels_PN = mkPN "Brussels";
lin brut_A = mkA "brut" ;
lin brutal_A = compoundA (mkA "brutal");
lin brutality_N = mkN "brutality" "brutalities";
lin brutalization_N = mkN "brutalization" ;
lin brutalize_V2 = mkV2 (mkV "brutalize" "brutalizes" "brutalized" "brutalized" "brutalizing");
lin brute_N = mkN "brute" "brutes";
lin brutish_A = compoundA (mkA "brutish");
lin bruxism_N = mkN "bruxism" ;
lin bryan_PN = mkPN "Bryan";
lin bryanthus_N = mkN "bryanthus" ;
lin bryony_N = mkN "bryony" ;
lin bryophyte_N = mkN "bryophyte" ;
lin bryophytic_A = mkA "bryophytic" ;
lin bryozoan_N = mkN "bryozoan" ;
lin bsc_N = mkN "bsc" ;
lin bst_PN = mkPN "BST";
lin bt_PN = mkPN "BT";
lin bubaline_A = mkA "bubaline" ;
lin bubble_N = mkN "bubble" "bubbles";
lin bubble_V = mkV "bubble" "bubbles" "bubbled" "bubbled" "bubbling";
lin bubbler_N = mkN "bubbler" ;
lin bubbliness_N = mkN "bubbliness" ;
lin bubbly_A = mkA "bubbly" "bubblier";
lin bubbly_N = mkN "bubbly" ;
lin bubo_N = mkN "bubo" ;
lin bubonic_A = compoundA (mkA "bubonic");
lin bucarest_PN = mkPN "Bucarest";
lin buccal_A = mkA "buccal" ;
lin buccaneer_N = mkN "buccaneer" "buccaneers";
lin buck_N = mkN "buck" "bucks";
lin buck_V = mkV "buck" "bucks" "bucked" "bucked" "bucking";
lin buck_V2 = mkV2 (mkV "buck" "bucks" "bucked" "bucked" "bucking");
lin buckboard_N = mkN "buckboard" ;
lin bucket_N = mkN "bucket" "buckets";
lin bucket_V = mkV "bucket" "buckets" "bucketed" "bucketed" "bucketing";
lin bucketful_N = mkN "bucketful" "bucketfuls";
lin buckeye_N = mkN "buckeye" ;
lin buckhaven_PN = mkPN "Buckhaven";
lin buckie_PN = mkPN "Buckie";
lin buckingham_PN = mkPN "Buckingham";
lin buckinghamshire_PN = mkPN "Buckinghamshire";
lin buckle_N = mkN "buckle" "buckles";
lin buckle_V = mkV "buckle" "buckles" "buckled" "buckled" "buckling";
lin buckle_V2 = mkV2 (mkV "buckle" "buckles" "buckled" "buckled" "buckling");
lin buckler_N = mkN "buckler" "bucklers";
lin buckley_PN = mkPN "Buckley";
lin buckleya_N = mkN "buckleya" ;
lin buckminsterfullerene_N = mkN "buckminsterfullerene" ;
lin buckram_N = mkN "buckram" ;
lin bucksaw_N = mkN "bucksaw" ;
lin bucksburn_PN = mkPN "Bucksburn";
lin buckshee_A = mkA "buckshee" ;
lin buckshot_N = mkN "buckshot" ;
lin buckskin_N = mkN "buckskin" ;
lin buckskins_N = mkN "buckskins" ;
lin buckthorn_N = mkN "buckthorn" ;
lin bucktooth_N = mkN "bucktooth" "buckteeth" {- FIXME: guessed plural form -};
lin buckwheat_N = mkN "buckwheat" ;
lin bucolic_A = compoundA (mkA "bucolic");
lin bucolics_N = mkN "bucolics" "bucolics";
lin bud_N = mkN "bud" "buds";
lin bud_V = mkV "bud" "buds" "budded" "budded" "budding";
lin budapest_PN = mkPN "Budapest";
lin buddhism_N = mkN "buddhism" ;
lin buddhistMasc_N = mkN masculine (mkN "buddhist" "buddhists");
lin buddhistFem_N = mkN feminine (mkN "buddhist" "buddhists");
lin budding_N = mkN "budding" ;
lin buddy_N = mkN "buddy" "buddies";
lin budge_V = mkV "budge" "budges" "budged" "budged" "budging";
lin budge_V2 = mkV2 (mkV "budge" "budges" "budged" "budged" "budging");
lin budgerigar_N = mkN "budgerigar" "budgerigars";
lin budget_N = mkN "budget" "budgets";
lin budget_V = mkV "budget" "budgets" "budgeted" "budgeted" "budgeting";
lin budget_V2 = mkV2 (mkV "budget" "budgets" "budgeted" "budgeted" "budgeting");
lin budgetary_A = compoundA (mkA "budgetary");
lin budgie_N = mkN "budgie" "budgies";
lin buenos_aires_PN = mkPN "Buenos aires";
lin buff_A = mkA "buff" ;
lin buff_N = mkN "buff" "buffs";
lin buff_V2 = mkV2 (mkV "buff" "buffs" "buffed" "buffed" "buffing");
lin buffalo_N = mkN "buffalo" "buffalo";
lin buffalo_PN = mkPN "Buffalo";
lin buffalofish_N = mkN "buffalofish" ;
lin buffer_N = mkN "buffer" "buffers";
lin buffer_V2 = mkV2 (mkV "buffer");
lin buffet_N = mkN "buffet" "buffets";
lin buffet_V = mkV "buffet" "buffets" "buffeted" "buffeted" "buffeting";
lin buffet_V2 = mkV2 (mkV "buffet" "buffets" "buffeted" "buffeted" "buffeting");
lin bufflehead_N = mkN "bufflehead" ;
lin buffoon_N = mkN "buffoon" "buffoons";
lin buffoonery_N = mkN "buffoonery" ;
lin buffoonish_A = mkA "buffoonish" ;
lin bufo_N = mkN "bufo" ;
lin bug_N = mkN "bug" "bugs";
lin bug_V2 = mkV2 (mkV "bug" "bugs" "bugged" "bugged" "bugging");
lin bug_hunter_N = mkN "bug-hunter" "bug-hunters";
lin bugaboo_N = mkN "bugaboo" "bugaboos";
lin bugbane_N = mkN "bugbane" ;
lin bugbear_N = mkN "bugbear" "bugbears";
lin bugger_N = mkN "bugger" "buggers";
lin bugger_V = mkV "bugger" "buggers" "buggered" "buggered" "buggering";
lin bugger_V2 = mkV2 (mkV "bugger" "buggers" "buggered" "buggered" "buggering");
lin bugger_all_N = mkN "bugger-all" ;
lin buggery_N = mkN "buggery" ;
lin bugginess_N = mkN "bugginess" ;
lin buggy_A = mkA "buggy" ;
lin buggy_N = mkN "buggy" "buggies";
lin bugle_N = mkN "bugle" "bugles";
lin bugler_N = mkN "bugler" "buglers";
lin bugleweed_N = mkN "bugleweed" ;
lin bugloss_N = mkN "bugloss" ;
lin buhl_N = mkN "buhl" ;
lin build_N = mkN "build" ;
lin build_V = IrregEng.build_V;
lin build_V2 = mkV2 (IrregEng.build_V);
lin build_up_N = mkN "build-up" "build-ups";
lin builder_N = mkN "builder" "builders";
lin building_N = mkN "building" "buildings";
lin building_society_N = mkN "building-society" "building-societies";
lin buildup_N = mkN "buildup" ;
lin built_in_A = compoundA (mkA "built-in");
lin built_up_A = compoundA (mkA "built-up");
lin bulb_N = mkN "bulb" "bulbs";
lin bulbaceous_A = mkA "bulbaceous" ;
lin bulbar_A = mkA "bulbar" ;
lin bulbed_A = mkA "bulbed" ;
lin bulbil_N = mkN "bulbil" ;
lin bulblike_A = mkA "bulblike" ;
lin bulbous_A = compoundA (mkA "bulbous");
lin bulbul_N = mkN "bulbul" "bulbuls";
lin bulgaria_PN = mkPN "Bulgaria";
lin bulgarianFem_N = mkN feminine (mkN "Bulgarian" "Bulgarians");
lin bulgarianMasc_N = mkN masculine (mkN "Bulgarian" "Bulgarians");
lin bulgarian_A = compoundA (mkA "Bulgarian");
lin bulge_N = mkN "bulge" "bulges";
lin bulge_V = mkV "bulge" "bulges" "bulged" "bulged" "bulging";
lin bulge_V2 = mkV2 (mkV "bulge" "bulges" "bulged" "bulged" "bulging");
lin bulgur_N = mkN "bulgur" ;
lin bulimarexia_N = mkN "bulimarexia" ;
lin bulimia_N = mkN "bulimia" ;
lin bulimic_A = mkA "bulimic" ;
lin bulimic_N = mkN "bulimic" ;
lin bulk_N = mkN "bulk" ;
lin bulk_V = mkV "bulk" "bulks" "bulked" "bulked" "bulking";
lin bulkhead_N = mkN "bulkhead" "bulkheads";
lin bulkiness_N = mkN "bulkiness" ;
lin bulkington_PN = mkPN "Bulkington";
lin bulky_A = mkA "bulky" "bulkier";
lin bull's_eye_N = mkN "bull's-eye" "bull's-eyes";
lin bull_N = mkN "bull" "bulls";
lin bull_headed_A = compoundA (mkA "bull-headed");
lin bull_neck_N = mkN "bull-neck" "bull-necks";
lin bull_terrier_N = mkN "bull-terrier" "bull-terriers";
lin bulla_N = mkN "bulla" ;
lin bullace_N = mkN "bullace" ;
lin bullate_A = mkA "bullate" ;
lin bullbrier_N = mkN "bullbrier" ;
lin bulldog_N = mkN "bulldog" "bulldogs";
lin bulldoze_V2 = mkV2 (mkV "bulldoze" "bulldozes" "bulldozed" "bulldozed" "bulldozing");
lin bulldozer_N = mkN "bulldozer" "bulldozers";
lin bullet_N = mkN "bullet" "bullets";
lin bullet_headed_A = compoundA (mkA "bullet-headed");
lin bullethead_N = mkN "bullethead" ;
lin bulletin_N = mkN "bulletin" "bulletins";
lin bulletproof_A = compoundA (mkA "bulletproof");
lin bullfight_N = mkN "bullfight" "bullfights";
lin bullfighter_N = mkN "bullfighter" "bullfighters";
lin bullfighting_N = mkN "bullfighting" ;
lin bullfinch_N = mkN "bullfinch" "bullfinches";
lin bullfrog_N = mkN "bullfrog" "bullfrogs";
lin bullhead_N = mkN "bullhead" ;
lin bullheaded_A = mkA "bullheaded" ;
lin bullhorn_N = mkN "bullhorn" ;
lin bullion_N = mkN "bullion" ;
lin bullish_A = mkA "bullish" ;
lin bullnecked_A = mkA "bullnecked" ;
lin bullnose_N = mkN "bullnose" ;
lin bullock_N = mkN "bullock" "bullocks";
lin bullocky_A = mkA "bullocky" ;
lin bullpen_N = mkN "bullpen" ;
lin bullring_N = mkN "bullring" "bullrings";
lin bullshit_N = mkN "bullshit" ;
lin bullshit_V = mkV "bullshit" "bullshits" "bullshitted" "bullshitted" "bullshitting";
lin bullshot_N = mkN "bullshot" ;
lin bullterrier_N = mkN "bullterrier" ;
lin bully_A = compoundA (mkA "bully");
lin bully_N = mkN "bully" "bullies";
lin bully_V = mkV "bully" "bullies" "bullied" "bullied" "bullying";
lin bully_V2 = mkV2 (mkV "bully" "bullies" "bullied" "bullied" "bullying");
lin bullyboy_N = mkN "bullyboy" ;
lin bullying_N = mkN "bullying" ;
lin bulrush_N = mkN "bulrush" "bulrushes";
lin bulwark_N = mkN "bulwark" "bulwarks";
lin bum_A = compoundA (mkA "bum");
lin bum_N = mkN "bum" "bums";
lin bum_V = mkV "bum" "bums" "bummed" "bummed" "bumming";
lin bum_V2 = mkV2 (mkV "bum" "bums" "bummed" "bummed" "bumming");
lin bumblebee_N = mkN "bumblebee" "bumblebees";
lin bumbling_A = mkA "bumbling" ;
lin bumboat_N = mkN "bumboat" "bumboats";
lin bumf_N = mkN "bumf" ;
lin bummer_N = mkN "bummer" ;
lin bump_Adv = mkAdv "bump";
lin bump_N = mkN "bump" "bumps";
lin bump_V = mkV "bump" "bumps" "bumped" "bumped" "bumping";
lin bump_V2 = mkV2 (mkV "bump" "bumps" "bumped" "bumped" "bumping");
lin bumper_N = mkN "bumper" "bumpers";
lin bumpiness_N = mkN "bumpiness" ;
lin bumpkin_N = mkN "bumpkin" "bumpkins";
lin bumpkinly_A = mkA "bumpkinly" ;
lin bumptious_A = compoundA (mkA "bumptious");
lin bumptiousness_N = mkN "bumptiousness" ;
lin bumpy_A = mkA "bumpy" "bumpier";
lin bun_N = mkN "bun" "buns";
lin buna_N = mkN "buna" ;
lin bunch_N = mkN "bunch" "bunches";
lin bunch_V = mkV "bunch" "bunches" "bunched" "bunched" "bunching";
lin bunch_V2 = mkV2 (mkV "bunch" "bunches" "bunched" "bunched" "bunching");
lin bunchberry_N = mkN "bunchberry" ;
lin bunchgrass_N = mkN "bunchgrass" ;
lin bunchy_A = mkA "bunchy" ;
lin bunco_N = mkN "bunco" ;
lin bundle_N = mkN "bundle" "bundles";
lin bundle_V = mkV "bundle" "bundles" "bundled" "bundled" "bundling";
lin bundle_V2 = mkV2 (mkV "bundle" "bundles" "bundled" "bundled" "bundling");
lin bundling_N = mkN "bundling" ;
lin bunfight_N = mkN "bunfight" ;
lin bung_N = mkN "bung" "bungs";
lin bung_V2 = mkV2 (mkV "bung" "bungs" "bunged" "bunged" "bunging");
lin bung_hole_N = mkN "bung-hole" "bung-holes";
lin bungaloid_A = compoundA (mkA "bungaloid");
lin bungalow_N = mkN "bungalow" "bungalows";
lin bungee_N = mkN "bungee" ;
lin bunghole_N = mkN "bunghole" ;
lin bungle_N = mkN "bungle" "bungles";
lin bungle_V = mkV "bungle" "bungles" "bungled" "bungled" "bungling";
lin bungle_V2 = mkV2 (mkV "bungle" "bungles" "bungled" "bungled" "bungling");
lin bungler_N = mkN "bungler" "bunglers";
lin bunion_N = mkN "bunion" "bunions";
lin bunk_N = mkN "bunk" "bunks";
lin bunk_V = mkV "bunk" "bunks" "bunked" "bunked" "bunking";
lin bunker_N = mkN "bunker" "bunkers";
lin bunker_V = mkV "bunker" "bunkers" "bunkered" "bunkered" "bunkering";
lin bunker_V2 = mkV2 (mkV "bunker" "bunkers" "bunkered" "bunkered" "bunkering");
lin bunkmate_N = mkN "bunkmate" ;
lin bunkum_N = mkN "bunkum" ;
lin bunny_N = mkN "bunny" "bunnies";
lin bunsen_N = mkN "bunsen" "bunsens";
lin bunt_N = mkN "bunt" ;
lin buntal_N = mkN "buntal" ;
lin bunter_N = mkN "bunter" ;
lin bunting_N = mkN "bunting" ;
lin bunyavirus_N = mkN "bunyavirus" ;
lin buoy_N = mkN "buoy" "buoys";
lin buoy_V = mkV "buoy" "buoys" "buoyed" "buoyed" "buoying";
lin buoy_V2 = mkV2 (mkV "buoy" "buoys" "buoyed" "buoyed" "buoying");
lin buoyancy_N = mkN "buoyancy" ;
lin buoyant_A = compoundA (mkA "buoyant");
lin bur_N = mkN "bur" "burs";
lin burberry_N = mkN "burberry" "burberries";
lin burble_V = mkV "burble" "burbles" "burbled" "burbled" "burbling";
lin burble_VS = mkVS (mkV "burble");
lin burbot_N = mkN "burbot" ;
lin burden_N = mkN "burden" "burdens";
lin burden_V2 = mkV2 (mkV "burden" "burdens" "burdened" "burdened" "burdening");
lin burdenless_A = mkA "burdenless" ;
lin burdensome_A = compoundA (mkA "burdensome");
lin burdensomeness_N = mkN "burdensomeness" ;
lin burdock_N = mkN "burdock" "burdocks";
lin bureau_N = mkN "bureau" "bureaux";
lin bureaucracy_N = mkN "bureaucracy" "bureaucracies";
lin bureaucrat_N = mkN human (mkN "bureaucrat" "bureaucrats");
lin bureaucratic_A = compoundA (mkA "bureaucratic");
lin bureaucratically_Adv = mkAdv "bureaucratically";
lin burette_N = mkN "burette" "burettes";
lin burg_N = mkN "burg" "burgs";
lin burgeon_V = mkV "burgeon" "burgeons" "burgeoned" "burgeoned" "burgeoning";
lin burgess_N = mkN "burgess" "burgesses";
lin burgess_PN = mkPN "Burgess";
lin burgh_N = mkN "burgh" "burghs";
lin burgher_N = mkN (variants {"burgher"; "burger"});
lin burglar_N = mkN "burglar" "burglars";
lin burglar_alarm_N = mkN "burglar-alarm" "burglar-alarms";
lin burglar_proof_A = compoundA (mkA "burglar-proof");
lin burglarious_A = compoundA (mkA "burglarious");
lin burglarproof_A = mkA "burglarproof" ;
lin burglary_N = mkN "burglary" "burglaries";
lin burgle_V = mkV "burgle" "burgles" "burgled" "burgled" "burgling";
lin burgle_V2 = mkV2 (mkV "burgle" "burgles" "burgled" "burgled" "burgling");
lin burgomaster_N = mkN "burgomaster" "burgomasters";
lin burgoo_N = mkN "burgoo" ;
lin burgos_PN = mkPN "Burgos";
lin burgrass_N = mkN "burgrass" ;
lin burgrave_N = mkN "burgrave" ;
lin burgundy_N = mkN "burgundy" ;
lin burial_N = mkN "burial" "burials";
lin burial_ground_N = mkN "burial-ground" "burial-grounds";
lin burin_N = mkN "burin" ;
lin burke_V2 = mkV2 (mkV "burke" "burkes" "burked" "burked" "burking");
lin burl_N = mkN "burl" ;
lin burlap_N = mkN "burlap" ;
lin burled_A = mkA "burled" ;
lin burlesque_A = mkA "burlesque" ;
lin burlesque_N = mkN "burlesque" "burlesques";
lin burlesque_V2 = mkV2 (mkV "burlesque" "burlesques" "burlesqued" "burlesqued" "burlesquing");
lin burley_PN = mkPN "Burley";
lin burly_A = mkA "burly" "burlier";
lin burma_PN = mkPN "Burma";
lin burmese_A = compoundA (mkA "burmese");
lin burmese_N = mkN "burmese" "burmese";
lin burn_N = mkN "burn" "burns";
lin burn_V = mkV "burn" "burns" "burned" "burned" "burning";
lin burn_V2 = mkV2 (mkV "burn" "burns" "burned" "burned" "burning");
lin burn_up_N = mkN "burn-up" "burn-ups";
lin burnable_A = mkA "burnable" ;
lin burner_N = mkN "burner" "burners";
lin burnham_on_sea_PN = mkPN "Burnham-on-sea";
lin burning_N = mkN "burning" ;
lin burnish_V = mkV "burnish" "burnishes" "burnished" "burnished" "burnishing";
lin burnish_V2 = mkV2 (mkV "burnish" "burnishes" "burnished" "burnished" "burnishing");
lin burnley_PN = mkPN "Burnley";
lin burnous_N = mkN "burnous" ;
lin burnouse_N = mkN "burnouse" "burnouses";
lin burntisland_PN = mkPN "Burntisland";
lin burntwood_PN = mkPN "Burntwood";
lin burnup_N = mkN "burnup" ;
lin burp_N = mkN "burp" "burps";
lin burp_V = mkV "burp" "burps" "burped" "burped" "burping";
lin burp_V2 = mkV2 (mkV "burp" "burps" "burped" "burped" "burping");
lin burqa_N = mkN "burqa" ;
lin burr_N = mkN "burr" "burrs";
lin burr_drill_N = mkN "burr-drill" "burr-drills";
lin burrawong_N = mkN "burrawong" ;
lin burrfish_N = mkN "burrfish" ;
lin burrito_N = mkN "burrito" ;
lin burrlike_A = mkA "burrlike" ;
lin burro_N = mkN "burro" ;
lin burrow_N = mkN "burrow" "burrows";
lin burrow_V = mkV "burrow" "burrows" "burrowed" "burrowed" "burrowing";
lin burrow_V2 = mkV2 (mkV "burrow" "burrows" "burrowed" "burrowed" "burrowing");
lin burry_port_PN = mkPN "Burry port";
lin bursa_N = mkN "bursa" ;
lin bursal_A = mkA "bursal" ;
lin bursar_N = mkN "bursar" "bursars";
lin bursary_N = mkN "bursary" "bursaries";
lin burscough_PN = mkPN "Burscough";
lin bursiform_A = mkA "bursiform" ;
lin bursitis_N = mkN "bursitis" ;
lin burst_N = mkN "burst" "bursts";
lin burst_V = IrregEng.burst_V;
lin burst_V2 = mkV2 (IrregEng.burst_V);
lin burthen_N = mkN "burthen" "burthens";
lin burthen_V2 = mkV2 (mkV "burthen" "burthens" "burthened" "burthened" "burthening");
lin burton_N = mkN "burton" "burtons";
lin burton_upon_trent_PN = mkPN "Burton-upon-trent";
lin burundi_PN = mkPN "Burundi";
lin burundian_A = compoundA (mkA "burundian");
lin burundian_N = mkN "burundian" "burundians";
lin bury_PN = mkPN "Bury";
lin bury_V = mkV "bury";
lin bury_V2 = mkV2 (mkV "bury" "buries" "buried" "buried" "burying");
lin bury_st__edmunds_PN = mkPN "Bury st. edmunds";
lin burying_N = mkN "burying" ;
lin burying_ground_N = mkN "burying-ground" "burying-grounds";
lin bus_N = mkN "bus" "buses";
lin bus_V = mkV "bus" "buses" "bused" "bused" "busing";
lin bus_V2 = mkV2 (mkV "bus" "buses" "bused" "bused" "busing");
lin busbar_N = mkN "busbar" ;
lin busboy_N = mkN "busboy" ;
lin busby_N = mkN "busby" "busbies";
lin bush_N = mkN "bush" "bushes";
lin bushbuck_N = mkN "bushbuck" ;
lin bushel_N = mkN "bushel" "bushels";
lin bushing_N = mkN "bushing" ;
lin bushman_N = mkN masculine (mkN "bushman" "bushmen");
lin bushtit_N = mkN "bushtit" ;
lin bushwhacker_N = mkN "bushwhacker" ;
lin bushwhacking_A = mkA "bushwhacking" ;
lin bushy_A = compoundA (mkA "bushy");
lin business_N = mkN "business" "businesses";
lin businesslike_A = compoundA (mkA "businesslike");
lin businessman_N = mkN masculine (mkN "businessman" "businessmen");
lin businessperson_N = mkN human (mkN "businessperson");
lin businesswoman_N = mkN feminine (mkN "businesswoman");
lin busker_N = mkN "busker" "buskers";
lin buskin_N = mkN "buskin" ;
lin busload_N = mkN "busload" ;
lin busman_N = mkN masculine (mkN "busman" "busmen");
lin buspirone_N = mkN "buspirone" ;
lin bust_N = mkN "bust" "busts";
lin bust_V = mkV "bust" "busts" "busted" "busted" "busting";
lin bust_V2 = mkV2 (mkV "bust" "busts" "busted" "busted" "busting");
lin bust_up_N = mkN "bust-up" "bust-ups";
lin bustard_N = mkN "bustard" "bustards";
lin buster_N = mkN "buster" "busters";
lin bustier_N = mkN "bustier" ;
lin bustle_N = mkN "bustle" "bustles";
lin bustle_V = mkV "bustle" "bustles" "bustled" "bustled" "bustling";
lin bustle_V2 = mkV2 (mkV "bustle" "bustles" "bustled" "bustled" "bustling");
lin busy_A = mkA "busy" "busier";
lin busy_V2 = mkV2 (mkV "busy" "busies" "busied" "busied" "busying");
lin busybody_N = mkN "busybody" "busybodies";
lin busyness_N = mkN "busyness" ;
lin busywork_N = mkN "busywork" ;
lin but_Adv = mkAdv "but";
lin but_PConj = {s="but"};
lin but_Prep = mkPrep "but";
lin but_Subj = mkSubj "but";
lin butacaine_N = mkN "butacaine" ;
lin butadiene_N = mkN "butadiene" ;
lin butane_N = mkN "butane" ;
lin butanone_N = mkN "butanone" ;
lin butch_A = compoundA (mkA "butch");
lin butch_N = mkN "butch" ;
lin butcher_N = mkN "butcher" "butchers";
lin butcher_V2 = mkV2 (mkV "butcher" "butchers" "butchered" "butchered" "butchering");
lin butcherbird_N = mkN "butcherbird" ;
lin butchery_N = mkN "butchery" ;
lin buteonine_A = mkA "buteonine" ;
lin buteonine_N = mkN "buteonine" ;
lin butler_N = mkN "butler" "butlers";
lin butt_N = mkN "butt" "butts";
lin butt_V = mkV "butt" "butts" "butted" "butted" "butting";
lin butt_V2 = mkV2 (mkV "butt" "butts" "butted" "butted" "butting");
lin butte_N = mkN "butte" ;
lin butter_N = mkN "butter" ;
lin butter_V2 = mkV2 (mkV "butter" "butters" "buttered" "buttered" "buttering");
lin butterbean_N = mkN "butterbean" "butterbeans";
lin butterbur_N = mkN "butterbur" ;
lin buttercrunch_N = mkN "buttercrunch" ;
lin buttercup_N = mkN "buttercup" "buttercups";
lin butterfat_N = mkN "butterfat" ;
lin butterfingers_N = mkN "butterfingers" "butterfingers";
lin butterfish_N = mkN "butterfish" ;
lin butterfly_N = mkN "butterfly" "butterflies";
lin buttermilk_N = mkN "buttermilk" ;
lin butternut_N = mkN "butternut" ;
lin butterscotch_N = mkN "butterscotch" ;
lin butterweed_N = mkN "butterweed" ;
lin butterwort_N = mkN "butterwort" ;
lin buttery_A = mkA "buttery" ;
lin buttery_N = mkN "buttery" "butteries";
lin buttinsky_N = mkN "buttinsky" ;
lin buttock_N = mkN "buttock" "buttocks";
lin buttocks_N = mkN "buttocks" ;
lin button_N = mkN "button" "buttons";
lin button_V = mkV "button" "buttons" "buttoned" "buttoned" "buttoning";
lin button_V2 = mkV2 (mkV "button" "buttons" "buttoned" "buttoned" "buttoning");
lin buttoned_up_A = compoundA (mkA "buttoned-up");
lin buttonhole_N = mkN "buttonhole" "buttonholes";
lin buttonhole_V2 = mkV2 (mkV "buttonhole" "buttonholes" "buttonholed" "buttonholed" "buttonholing");
lin buttonhook_N = mkN "buttonhook" "buttonhooks";
lin buttonwood_N = mkN "buttonwood" "buttonwoods";
lin buttony_A = mkA "buttony" ;
lin buttress_N = mkN "buttress" "buttresses";
lin buttress_V2 = mkV2 (mkV "buttress" "buttresses" "buttressed" "buttressed" "buttressing");
lin butty_N = mkN "butty" ;
lin butut_N = mkN "butut" ;
lin butyl_N = mkN "butyl" ;
lin butylene_N = mkN "butylene" ;
lin butyraceous_A = mkA "butyraceous" ;
lin butyric_A = mkA "butyric" ;
lin butyrin_N = mkN "butyrin" ;
lin buxom_A = compoundA (mkA "buxom");
lin buxomness_N = mkN "buxomness" ;
lin buxton_PN = mkPN "Buxton";
lin buy_N = mkN "buy" "buys";
lin buy_V = IrregEng.buy_V;
lin buy_V2 = mkV2 (IrregEng.buy_V);
lin buyerMasc_N = mkN masculine (mkN "buyer" "buyers");
lin buyerFem_N = mkN feminine (mkN "buyer" "buyers");
lin buying_N = mkN "buying" ;
lin buyout_N = mkN "buyout" ;
lin buzz_N = mkN "buzz" "buzzes";
lin buzz_V = mkV "buzz" "buzzes" "buzzed" "buzzed" "buzzing";
lin buzz_V2 = mkV2 (mkV "buzz" "buzzes" "buzzed" "buzzed" "buzzing");
lin buzzard_N = mkN "buzzard" "buzzards";
lin buzzer_N = mkN "buzzer" "buzzers";
lin buzzword_N = mkN "buzzword" ;
lin bvm_N = mkN "bvm" ;
lin by_Adv = mkAdv "by";
lin by_Prep = mkPrep "by";
lin by_election_N = mkN "by-election" "by-elections";
lin bye_Interj = ss "bye";
lin bye_bye_Interj = ss "bye-bye";
lin bye_law_N = mkN "bye-law" "bye-laws";
lin bygone_A = compoundA (mkA "bygone");
lin bygone_N = mkN "bygone" ;
lin bylaw_N = mkN "bylaw" "bylaws";
lin bypass_N = mkN "bypass" "bypasses";
lin bypass_V2 = mkV2 (mkV "bypass" "bypasses" "bypassed" "bypassed" "bypassing");
lin bypath_N = mkN "bypath" "bypaths";
lin byplay_N = mkN "byplay" ;
lin byproduct_N = mkN "byproduct" "byproducts";
lin byroad_N = mkN "byroad" "byroads";
lin byssus_N = mkN "byssus" ;
lin bystander_N = mkN "bystander" "bystanders";
lin byte_N = mkN "byte" ;
lin byway_N = mkN "byway" "byways";
lin byword_N = mkN "byword" "bywords";
lin c_in_c_PN = mkPN "C-in-c";
lin c_of_e_N = mkN "c of e" ;
lin ca'canny_N = mkN "ca'canny" "IRREG";
lin cab_N = mkN "cab" "cabs";
lin cab_rank_N = mkN "cab-rank" "cab-ranks";
lin cabal_N = mkN "cabal" "cabals";
lin cabala_N = mkN "cabala" ;
lin cabalist_N = mkN "cabalist" ;
lin cabalistic_A = mkA "cabalistic" ;
lin cabana_N = mkN "cabana" ;
lin cabaret_N = mkN "cabaret" "cabarets";
lin cabbage_N = mkN "cabbage" "cabbages";
lin cabbageworm_N = mkN "cabbageworm" ;
lin cabby_N = mkN "cabby" "cabbies";
lin caber_N = mkN "caber" "cabers";
lin cabin_N = mkN "cabin" "cabins";
lin cabinet_N = mkN "cabinet" "cabinets";
lin cabinet_maker_N = mkN "cabinet-maker" "cabinet-makers";
lin cabinetmaker_N = mkN "cabinetmaker" ;
lin cabinetmaking_N = mkN "cabinetmaking" ;
lin cabinetwork_N = mkN "cabinetwork" ;
lin cable's_length_N = mkN "cable's-length" "cable's-lengths";
lin cable_N = mkN "cable" "cables";
lin cable_V = mkV "cable" "cables" "cabled" "cabled" "cabling";
lin cable_V2 = mkV2 (mkV "cable" "cables" "cabled" "cabled" "cabling");
lin cable_car_N = mkN "cable-car" "cable-cars";
lin cable_length_N = mkN "cable-length" "cable-lengths";
lin cable_railway_N = mkN "cable-railway" "cable-railways";
lin cablegram_N = mkN "cablegram" "cablegrams";
lin cabman_N = mkN masculine (mkN "cabman" "cabmen");
lin cabochon_N = mkN "cabochon" ;
lin caboodle_N = mkN "caboodle" "caboodles";
lin caboose_N = mkN "caboose" "cabooses";
lin cabotage_N = mkN "cabotage" ;
lin cabstand_N = mkN "cabstand" "cabstands";
lin cacao_N = mkN "cacao" "cacaos";
lin cacao_bean_N = mkN "cacao-bean" "cacao-beans";
lin cacao_tree_N = mkN "cacao-tree" "cacao-trees";
lin cache_N = mkN "cache" "caches";
lin cache_V2 = mkV2 (mkV "cache" "caches" "cached" "cached" "caching");
lin cachectic_A = mkA "cachectic" ;
lin cachet_N = mkN "cachet" "cachets";
lin cachexia_N = mkN "cachexia" ;
lin cachinnation_N = mkN "cachinnation" ;
lin cachou_N = mkN "cachou" "cachous";
lin cacique_N = mkN "cacique" ;
lin cackle_N = mkN "cackle" "cackles";
lin cackle_V = mkV "cackle" "cackles" "cackled" "cackled" "cackling";
lin cackler_N = mkN "cackler" "cacklers";
lin cackly_A = mkA "cackly" ;
lin cacodemon_N = mkN "cacodemon" ;
lin cacodemonic_A = mkA "cacodemonic" ;
lin cacodyl_N = mkN "cacodyl" ;
lin cacodylic_A = mkA "cacodylic" ;
lin cacogenesis_N = mkN "cacogenesis" ;
lin cacophonous_A = compoundA (mkA "cacophonous");
lin cacophony_N = mkN "cacophony" "cacophonies";
lin cactus_N = mkN "cactus" "cactuses";
lin cacuminal_A = mkA "cacuminal" ;
lin cad_N = mkN human (mkN "cad" "cads");
lin cadaster_N = mkN "cadaster" ;
lin cadastral_A = mkA "cadastral" ;
lin cadaver_N = mkN "cadaver" "cadavers";
lin cadaverine_N = mkN "cadaverine" ;
lin cadaverous_A = compoundA (mkA "cadaverous");
lin caddie_N = mkN "caddie" "caddies";
lin caddish_A = compoundA (mkA "caddish");
lin caddisworm_N = mkN "caddisworm" ;
lin caddy_N = mkN "caddy" "caddies";
lin cadence_N = mkN "cadence" "cadences";
lin cadenced_A = mkA "cadenced" ;
lin cadenza_N = mkN "cadenza" "cadenzas";
lin cadet_N = mkN "cadet" "cadets";
lin cadetship_N = mkN "cadetship" ;
lin cadge_V = mkV "cadge" "cadges" "cadged" "cadged" "cadging";
lin cadge_V2 = mkV2 (mkV "cadge" "cadges" "cadged" "cadged" "cadging");
lin cadger_N = mkN "cadger" "cadgers";
lin cadiz_PN = mkPN "Cadiz";
lin cadmium_N = mkN "cadmium" ;
lin cadre_N = mkN "cadre" "cadres";
lin caducean_A = mkA "caducean" ;
lin caduceus_N = mkN "caduceus" ;
lin caducous_A = mkA "caducous" ;
lin caecilian_A = mkA "caecilian" ;
lin caecilian_N = mkN "caecilian" ;
lin caen_PN = mkPN "Caen";
lin caerleon_PN = mkPN "Caerleon";
lin caernarfon_PN = mkPN "Caernarfon";
lin caerphilly_PN = mkPN "Caerphilly";
lin caesar_N = mkN "caesar" "caesars";
lin caesarian_A = compoundA (mkA "caesarian");
lin caespitose_A = mkA "caespitose" ;
lin caesura_N = mkN "caesura" "caesuras";
lin caesural_A = mkA "caesural" ;
lin cafe_N = mkN "café" "cafés";
lin cafe_au_lait_N = mkN "cafe-au-lait" "cafe-au-laits";
lin cafeteria_N = mkN "cafeteria" "cafeterias";
lin caff_N = mkN "caff" "caffs";
lin caffeine_N = mkN "caffeine" ;
lin caffeinic_A = mkA "caffeinic" ;
lin caffeinism_N = mkN "caffeinism" ;
lin caftan_N = mkN "caftan" "caftans";
lin cage_N = mkN "cage" "cages";
lin cage_V2 = mkV2 (mkV "cage" "cages" "caged" "caged" "caging");
lin cagey_A = compoundA (mkA "cagey");
lin cagily_Adv = mkAdv "cagily";
lin cagliari_PN = mkPN "Cagliari";
lin cagoule_N = mkN "cagoule" "cagoules";
lin cahoot_N = mkN "cahoot" ;
lin caiman_N = mkN "caiman" "caimans";
lin cairn_N = mkN "cairn" "cairns";
lin cairned_A = mkA "cairned" ;
lin cairngorm_N = mkN "cairngorm" ;
lin cairo_PN = mkPN "Cairo";
lin caisson_N = mkN "caisson" "caissons";
lin caitiff_A = mkA "caitiff" ;
lin caitiff_N = mkN "caitiff" "caitiffs";
lin cajole_V2 = mkV2 (mkV "cajole" "cajoles" "cajoled" "cajoled" "cajoling");
lin cajolery_N = mkN "cajolery" ;
lin cake_N = mkN "cake" "cakes";
lin cake_V = mkV "cake" "cakes" "caked" "caked" "caking";
lin cake_V2 = mkV2 (mkV "cake" "cakes" "caked" "caked" "caking");
lin cakewalk_N = mkN "cakewalk" ;
lin calaba_N = mkN "calaba" ;
lin calabash_N = mkN "calabash" "calabashes";
lin caladenia_N = mkN "caladenia" ;
lin caladium_N = mkN "caladium" ;
lin calamint_N = mkN "calamint" ;
lin calamitous_A = compoundA (mkA "calamitous");
lin calamity_N = mkN "calamity" "calamities";
lin calamus_N = mkN "calamus" ;
lin calando_A = mkA "calando" ;
lin calanthe_N = mkN "calanthe" ;
lin calash_N = mkN "calash" ;
lin calcaneal_A = mkA "calcaneal" ;
lin calcareous_A = mkA "calcareous" ;
lin calced_A = mkA "calced" ;
lin calceolaria_N = mkN "calceolaria" ;
lin calceolate_A = mkA "calceolate" ;
lin calceus_N = mkN "calceus" ;
lin calcic_A = mkA "calcic" ;
lin calcicolous_A = mkA "calcicolous" ;
lin calciferous_A = mkA "calciferous" ;
lin calcific_A = mkA "calcific" ;
lin calcification_N = mkN "calcification" ;
lin calcifugous_A = mkA "calcifugous" ;
lin calcify_V = mkV "calcify" "calcifies" "calcified" "calcified" "calcifying";
lin calcify_V2 = mkV2 (mkV "calcify" "calcifies" "calcified" "calcified" "calcifying");
lin calcimine_N = mkN "calcimine" ;
lin calcination_N = mkN "calcination" "calcinations";
lin calcine_V = mkV "calcine" "calcines" "calcined" "calcined" "calcining";
lin calcine_V2 = mkV2 (mkV "calcine" "calcines" "calcined" "calcined" "calcining");
lin calcite_N = mkN "calcite" ;
lin calcitic_A = mkA "calcitic" ;
lin calcitonin_N = mkN "calcitonin" ;
lin calcium_N = mkN "calcium" ;
lin calculable_A = compoundA (mkA "calculable");
lin calculate_V = mkV "calculate" "calculates" "calculated" "calculated" "calculating";
lin calculate_V2 = mkV2 (mkV "calculate" "calculates" "calculated" "calculated" "calculating");
lin calculate_VS = mkVS (mkV "calculate" "calculates" "calculated" "calculated" "calculating");
lin calculatingly_Adv = mkAdv "calculatingly" ;
lin calculation_N = mkN "calculation" "calculations";
lin calculator_N = mkN "calculator" "calculators";
lin calculous_A = mkA "calculous" ;
lin calculus_N = mkN "calculus" "calculuses";
lin calcutta_PN = mkPN "Calcutta";
lin caldera_N = mkN "caldera" ;
lin caldicot_PN = mkPN "Caldicot";
lin caldron_N = mkN "caldron" "caldrons";
lin calefacient_A = mkA "calefacient" ;
lin calefaction_N = mkN "calefaction" ;
lin calefactory_A = mkA "calefactory" ;
lin calendar_N = mkN "calendar" "calendars";
lin calender_N = mkN "calender" "calenders";
lin calender_V2 = mkV2 (mkV "calender" "calenders" "calendered" "calendered" "calendering");
lin calendric_A = mkA "calendric" ;
lin calendula_N = mkN "calendula" ;
lin calf_N = mkN "calf" "calves" {- FIXME: guessed plural form -};
lin calf_love_N = mkN "calf-love" ;
lin cali_PN = mkPN "Cali";
lin calibrate_V2 = mkV2 (mkV "calibrate" "calibrates" "calibrated" "calibrated" "calibrating");
lin calibration_N = mkN "calibration" "calibrations";
lin calibre_N = mkN "calibre" "calibres";
lin caliche_N = mkN "caliche" ;
lin calico_A = mkA "calico" ;
lin calico_N = mkN "calico" ;
lin calif_N = mkN "calif" "califs";
lin california_PN = mkPN "California";
lin californian_A = compoundA (mkA "californian");
lin californian_N = mkN "californian" "californians";
lin californium_N = mkN "californium" ;
lin caliginous_A = mkA "caliginous" ;
lin caliper_N = mkN "caliper" ;
lin caliph_N = mkN "caliph" "caliphs";
lin caliphate_N = mkN "caliphate" "caliphates";
lin calisaya_N = mkN "calisaya" ;
lin calisthenic_A = mkA "calisthenic" ;
lin calisthenics_N = mkN "calisthenics" "calisthenics";
lin calk_N = mkN "calk" "calks";
lin calk_V2 = mkV2 (mkV "calk" "calks" "calked" "calked" "calking");
lin call_N = mkN "call" "calls";
lin call_V = mkV "call" "calls" "called" "called" "calling";
lin call_V2 = mkV2 (mkV "call" "calls" "called" "called" "calling");
lin call_V2A = mkV2A (mkV "call" "calls" "called" "called" "calling") noPrep;
lin call_V2V = mkV2V (mkV "call" "calls" "called" "called" "calling") noPrep to_Prep ;
lin call_V3 = mkV3 (mkV "call" "calls" "called" "called" "calling");
lin call_box_N = mkN "call-box" "call-boxes";
lin call_girl_N = mkN "call-girl" "call-girls";
lin call_over_N = mkN "call-over" "call-overs";
lin call_up_N = mkN "call-up" "call-ups";
lin callable_A = mkA "callable" ;
lin caller_A = mkA "caller" ;
lin caller_N = mkN "caller" "callers";
lin calliandra_N = mkN "calliandra" ;
lin calligrapher_N = mkN "calligrapher" ;
lin calligraphic_A = mkA "calligraphic" ;
lin calligraphy_N = mkN "calligraphy" ;
lin calling_N = mkN "calling" "callings";
lin calliope_N = mkN "calliope" "calliopes";
lin calliopsis_N = mkN "calliopsis" ;
lin callipygian_A = mkA "callipygian" ;
lin callisthenics_N = mkN "callisthenics" "callisthenics";
lin callithump_N = mkN "callithump" ;
lin callithumpian_A = mkA "callithumpian" ;
lin callosity_N = mkN "callosity" "callosities";
lin callosotomy_N = mkN "callosotomy" ;
lin callous_A = compoundA (mkA "callous");
lin calloused_A = mkA "calloused" ;
lin callousness_N = mkN "callousness" ;
lin callow_A = compoundA (mkA "callow");
lin callowness_N = mkN "callowness" ;
lin callus_N = mkN "callus" "calluses";
lin calm_A = mkA "calm" "calmer";
lin calm_N = mkN "calm" "calms";
lin calm_V = mkV "calm" "calms" "calmed" "calmed" "calming";
lin calm_V2 = mkV2 (mkV "calm" "calms" "calmed" "calmed" "calming");
lin calmness_N = mkN "calmness" ;
lin calne_PN = mkPN "Calne";
lin calomel_N = mkN "calomel" ;
lin calor_PN = mkPN "Calor";
lin caloric_A = mkA "caloric" ;
lin calorie_N = mkN "calorie" "calories";
lin calorifacient_A = mkA "calorifacient" ;
lin calorific_A = compoundA (mkA "calorific");
lin calorimeter_N = mkN "calorimeter" ;
lin calorimetric_A = mkA "calorimetric" ;
lin calorimetry_N = mkN "calorimetry" ;
lin calosoma_N = mkN "calosoma" ;
lin calpac_N = mkN "calpac" ;
lin calque_N = mkN "calque" ;
lin caltrop_N = mkN "caltrop" ;
lin calumet_N = mkN "calumet" ;
lin calumniate_V2 = mkV2 (mkV "calumniate" "calumniates" "calumniated" "calumniated" "calumniating");
lin calumniatory_A = mkA "calumniatory" ;
lin calumny_N = mkN "calumny" "calumnies";
lin calvaria_N = mkN "calvaria" ;
lin calvary_N = mkN "calvary" "calvaries";
lin calve_V = mkV "calve" "calves" "calved" "calved" "calving";
lin calverton_PN = mkPN "Calverton";
lin calving_N = mkN "calving" ;
lin calvinism_N = mkN "calvinism" ;
lin calvinist_N = mkN "calvinist" "calvinists";
lin calyceal_A = mkA "calyceal" ;
lin calycular_A = mkA "calycular" ;
lin calyculate_A = mkA "calyculate" ;
lin calyculus_N = mkN "calyculus" ;
lin calypso_N = mkN "calypso" "calypsos";
lin calyptra_N = mkN "calyptra" ;
lin calyptrate_A = mkA "calyptrate" ;
lin calyx_N = mkN "calyx" "calyxes";
lin cam_N = mkN "cam" "cams";
lin camail_N = mkN "camail" ;
lin camaraderie_N = mkN "camaraderie" ;
lin camas_N = mkN "camas" ;
lin camber_N = mkN "camber" "cambers";
lin camber_V = mkV "camber" "cambers" "cambered" "cambered" "cambering";
lin camber_V2 = mkV2 (mkV "camber" "cambers" "cambered" "cambered" "cambering");
lin cambial_A = mkA "cambial" ;
lin cambium_N = mkN "cambium" ;
lin cambodia_PN = mkPN "Cambodia";
lin cambodian_A = compoundA (mkA "cambodian");
lin cambodian_N = mkN "cambodian" "cambodians";
lin cambourne_PN = mkPN "Cambourne";
lin cambric_N = mkN "cambric" ;
lin cambridge_PN = mkPN "Cambridge";
lin cambridgeshire_PN = mkPN "Cambridgeshire";
lin cambuslang_PN = mkPN "Cambuslang";
lin camcorder_N = mkN "camcorder" ;
lin camden_PN = mkPN "Camden";
lin camel_N = mkN "camel" "camels";
lin camel_hair_N = mkN "camel-hair" ;
lin camellia_N = mkN "camellia" "camellias";
lin camelpox_N = mkN "camelpox" ;
lin camembert_N = mkN "camembert" "camemberts";
lin cameo_N = mkN "cameo" "cameos";
lin camera_N = mkN "camera" "cameras";
lin cameraman_N = mkN masculine (mkN "cameraman" "cameramen");
lin cameroon_PN = mkPN "Cameroon";
lin cameroonian_A = compoundA (mkA "cameroonian");
lin cameroonian_N = mkN "cameroonian" "cameroonians";
lin camion_N = mkN "camion" "camions";
lin camise_N = mkN "camise" ;
lin camisole_N = mkN "camisole" ;
lin camlet_N = mkN "camlet" ;
lin camomile_N = mkN "camomile" ;
lin camouflage_N = mkN "camouflage" ;
lin camouflage_V2 = mkV2 (mkV "camouflage" "camouflages" "camouflaged" "camouflaged" "camouflaging");
lin camp_A = compoundA (mkA "camp");
lin camp_N = mkN "camp" "camps";
lin camp_V = mkV "camp" "camps" "camped" "camped" "camping";
lin camp_V2 = mkV2 (mkV "camp" "camps" "camped" "camped" "camping");
lin camp_bed_N = mkN "camp-bed" "camp-beds";
lin camp_chair_N = mkN "camp-chair" "camp-chairs";
lin camp_fire_N = mkN "camp-fire" "camp-fires";
lin camp_follower_N = mkN "camp-follower" "camp-followers";
lin camp_stool_N = mkN "camp-stool" "camp-stools";
lin campaign_N = mkN "campaign" "campaigns";
lin campaign_V = mkV "campaign" "campaigns" "campaigned" "campaigned" "campaigning";
lin campaigner_N = mkN "campaigner" "campaigners";
lin campaigning_N = mkN "campaigning" ;
lin campanile_N = mkN "campanile" "campaniles";
lin campanula_N = mkN "campanula" "campanulas";
lin campanulate_A = mkA "campanulate" ;
lin campbeltown_PN = mkPN "Campbeltown";
lin camper_N = mkN human (mkN "camper" "campers");
lin campestral_A = mkA "campestral" ;
lin campfire_N = mkN "campfire" ;
lin camphor_N = mkN "camphor" ;
lin camphoraceous_A = mkA "camphoraceous" ;
lin camphorated_A = compoundA (mkA "camphorated");
lin camphoric_A = mkA "camphoric" ;
lin camping_N = mkN "camping" ;
lin campion_N = mkN "campion" ;
lin campmate_N = mkN "campmate" ;
lin campsite_N = mkN "campsite" ;
lin campstool_N = mkN "campstool" ;
lin campus_N = mkN "campus" "campuses";
lin campylotropous_A = mkA "campylotropous" ;
lin camshaft_N = mkN "camshaft" "camshafts";
lin camwood_N = mkN "camwood" ;
lin can_N = mkN "can" "cans";
lin can_V2 = mkV2 (mkV "can" "cans" "canned" "canned" "canning");
lin can_VV = {
    s = table {
      VVF VInf => ["be able to"] ;
      VVF VPres => "can" ;
      VVF VPPart => ["been able to"] ;
      VVF VPresPart => ["being able to"] ;
      VVF VPast => "could" ;
      VVPastNeg => "couldn't" ;
      VVPresNeg => "can't"
      } ;
    p = [] ;
    typ = VVAux
    } ;
lin canada_PN = mkPN "Canada";
lin canadian_A = compoundA (mkA "Canadian");
lin canadian_N = mkN "Canadian" "Canadians";
lin canal_N = mkN "canal" "canals";
lin canalicular_A = mkA "canalicular" ;
lin canaliculate_A = mkA "canaliculate" ;
lin canaliculus_N = mkN "canaliculus" ;
lin canalization_N = mkN "canalization" "canalizations";
lin canalize_V2 = mkV2 (mkV "canalize" "canalizes" "canalized" "canalized" "canalizing");
lin canape_N = mkN "canapé" "canapés";
lin canard_N = mkN "canard" "canards";
lin canary_A = mkA "canary" ;
lin canary_N = mkN "canary" "canaries";
lin canary_bird_N = mkN "canary-bird" "canary-birds";
lin canary_wine_N = mkN "canary-wine" "canary-wines";
lin canasta_N = mkN "canasta" "canastas";
lin canavanine_N = mkN "canavanine" ;
lin canberra_PN = mkPN "Canberra";
lin cancan_N = mkN "cancan" "cancans";
lin cancel_V = variants {mkV "cancel" "cancels" "canceled" "canceled" "canceling";
                         mkV "cancel" "cancels" "cancelled" "cancelled" "cancelling"};
lin cancel_V2 = mkV2 (variants {mkV "cancel" "cancels" "canceled" "canceled" "canceling";
                                mkV "cancel" "cancels" "cancelled" "cancelled" "cancelling"});
lin cancellate_A = mkA "cancellate" ;
lin cancellation_N = mkN "cancellation" "cancellations";
lin cancer_N = mkN "cancer" "cancers";
lin cancer_PN = mkPN "Cancer";
lin cancerous_A = compoundA (mkA "cancerous");
lin cancerweed_N = mkN "cancerweed" ;
lin cancroid_A = mkA "cancroid" ;
lin cancroid_N = mkN "cancroid" ;
lin candelabrum_N = mkN "candelabrum" "candelabra" {- FIXME: guessed plural form -};
lin candelilla_N = mkN "candelilla" ;
lin candescent_A = mkA "candescent" ;
lin candid_A = compoundA (mkA "candid");
lin candida_N = mkN "candida" ;
lin candidacy_N = mkN "candidacy";
lin candidateMasc_N = mkN masculine (mkN "candidate" "candidates");
lin candidateFem_N = mkN feminine (mkN "candidate" "candidates");
lin candidature_N = mkN "candidature" "candidatures";
lin candidiasis_N = mkN "candidiasis" ;
lin candle_N = mkN "candle" "candles";
lin candle_power_N = mkN "candle-power" ;
lin candlelight_N = mkN "candlelight" ;
lin candlemaker_N = mkN "candlemaker" ;
lin candlenut_N = mkN "candlenut" ;
lin candlepin_N = mkN "candlepin" ;
lin candlepins_N = mkN "candlepins" ;
lin candlepower_N = mkN "candlepower" ;
lin candlesnuffer_N = mkN "candlesnuffer" ;
lin candlestick_N = mkN "candlestick" "candlesticks";
lin candlewick_N = mkN "candlewick" ;
lin candlewood_N = mkN "candlewood" ;
lin candor_N = mkN "candor" ;
lin candour_N = mkN "candour" ;
lin candy_N = mkN "candy" "candies";
lin candy_V = mkV "candy" "candies" "candied" "candied" "candying";
lin candy_V2 = mkV2 (mkV "candy" "candies" "candied" "candied" "candying");
lin candy_floss_N = mkN "candy-floss" ;
lin candytuft_N = mkN "candytuft" "candytufts";
lin cane_N = mkN "cane" "canes";
lin cane_V2 = mkV2 (mkV "cane" "canes" "caned" "caned" "caning");
lin canebrake_N = mkN "canebrake" ;
lin canella_N = mkN "canella" ;
lin canescent_A = mkA "canescent" ;
lin canfield_N = mkN "canfield" ;
lin cangue_N = mkN "cangue" ;
lin canicular_A = mkA "canicular" ;
lin canine_A = compoundA (mkA "canine");
lin canine_N = mkN "canine" ;
lin canistel_N = mkN "canistel" ;
lin canister_N = mkN "canister" "canisters";
lin canker_N = mkN "canker" ;
lin canker_V2 = mkV2 (mkV "canker" "cankers" "cankered" "cankered" "cankering");
lin cankerous_A = compoundA (mkA "cankerous");
lin cankerworm_N = mkN "cankerworm" ;
lin canna_N = mkN "canna" "cannas";
lin cannabin_N = mkN "cannabin" ;
lin cannabis_N = mkN "cannabis" ;
lin cannelloni_N = mkN "cannelloni" ;
lin cannery_N = mkN "cannery" "canneries";
lin cannes_PN = mkPN "Cannes";
lin cannibal_N = mkN "cannibal" "cannibals";
lin cannibalic_A = mkA "cannibalic" ;
lin cannibalism_N = mkN "cannibalism" ;
lin cannibalistic_A = compoundA (mkA "cannibalistic");
lin cannibalize_V2 = mkV2 (mkV "cannibalize" "cannibalizes" "cannibalized" "cannibalized" "cannibalizing");
lin cannikin_N = mkN "cannikin" ;
lin cannock_PN = mkPN "Cannock";
lin cannon_N = mkN "cannon" "cannons";
lin cannon_fodder_N = mkN "cannon-fodder" ;
lin cannonade_N = mkN "cannonade" "cannonades";
lin cannonball_N = mkN "cannonball" ;
lin cannula_N = mkN "cannula" ;
lin cannulation_N = mkN "cannulation" ;
lin canny_A = mkA "canny" "cannier";
lin canoe_N = mkN "canoe" "canoes";
lin canoe_V2 = mkV2 (mkV "canoe" "canoes" "canoed" "canoed" "canoeing");
lin canoeist_N = mkN "canoeist" "canoeists";
lin canon_1_N = mkN "canon" "canons";
lin canon_2_N = mkN "cañon" "cañons";
lin canon_N = mkN "canon" ;
lin canonic_A = mkA "canonic" ;
lin canonical_A = compoundA (mkA "canonical");
lin canonist_A = mkA "canonist" ;
lin canonist_N = mkN "canonist" ;
lin canonization_N = mkN "canonization" "canonizations";
lin canonize_V2 = mkV2 (mkV "canonize" "canonizes" "canonized" "canonized" "canonizing");
lin canopied_A = compoundA (mkA "canopied");
lin canopy_N = mkN "canopy" "canopies";
lin canorous_A = mkA "canorous" ;
lin cant_N = mkN "cant" "cants";
lin cant_V = mkV "cant" "cants" "canted" "canted" "canting";
lin cant_V2 = mkV2 (mkV "cant" "cants" "canted" "canted" "canting");
lin cantab_PN = mkPN "Cantab";
lin cantabile_A = mkA "cantabile" ;
lin cantala_N = mkN "cantala" ;
lin cantaloup_N = mkN "cantaloup" "cantaloups";
lin cantaloupe_N = mkN "cantaloupe" "cantaloupes";
lin cantankerous_A = compoundA (mkA "cantankerous");
lin cantata_N = mkN "cantata" "cantatas";
lin canteen_N = mkN "canteen" "canteens";
lin canter_N = mkN "canter" "canters";
lin canter_V = mkV "canter" "canters" "cantered" "cantered" "cantering";
lin canter_V2 = mkV2 (mkV "canter" "canters" "cantered" "cantered" "cantering");
lin canterbury_PN = mkPN "Canterbury";
lin canthus_N = mkN "canthus" ;
lin canticle_N = mkN "canticle" "canticles";
lin cantilever_N = mkN "cantilever" "cantilevers";
lin cantillation_N = mkN "cantillation" ;
lin cantle_N = mkN "cantle" ;
lin canto_N = mkN "canto" "cantos";
lin canton_N = mkN "canton" "cantons";
lin canton_PN = mkPN "Canton";
lin cantonal_A = mkA "cantonal" ;
lin cantonment_N = mkN "cantonment" "cantonments";
lin cantor_N = mkN "cantor" "cantors";
lin canty_A = mkA "canty" ;
lin canuck_N = mkN "canuck" "canucks";
lin canvas_N = mkN "canvas" "canvases";
lin canvasback_N = mkN "canvasback" ;
lin canvass_N = mkN "canvass" "canvasses";
lin canvass_V = mkV "canvass" "canvasses" "canvassed" "canvassed" "canvassing";
lin canvass_V2 = mkV2 (mkV "canvass" "canvasses" "canvassed" "canvassed" "canvassing");
lin canvasser_N = mkN "canvasser" ;
lin canvey_PN = mkPN "Canvey";
lin canvey_island_PN = mkPN "Canvey island";
lin canyon_N = mkN "canyon" "canyons";
lin canyonside_N = mkN "canyonside" ;
lin cap_N = mkN "cap" "caps";
lin cap_V2 = mkV2 (mkV "cap" "caps" "capped" "capped" "capping");
lin cap_a_pie_Adv = mkAdv "cap-à-pie";
lin capability_N = mkN "capability" "capabilities";
lin capable_A = compoundA (mkA "capable");
lin capacious_A = compoundA (mkA "capacious");
lin capaciousness_N = mkN "capaciousness" ;
lin capacitance_N = mkN "capacitance" ;
lin capacitive_A = mkA "capacitive" ;
lin capacitor_N = mkN "capacitor" ;
lin capacity_N = mkN "capacity" "capacities";
lin caparison_N = mkN "caparison" "caparisons";
lin caparison_V2 = mkV2 (mkV "caparison" "caparisons" "caparisoned" "caparisoned" "caparisoning");
lin cape_N = mkN "cape" "capes";
lin cape_town_PN = mkPN "Cape town";
lin capelin_N = mkN "capelin" ;
lin caper_N = mkN "caper" "capers";
lin caper_V = mkV "caper" "capers" "capered" "capered" "capering";
lin capercaillie_N = mkN "capercaillie" ;
lin capful_N = mkN "capful" ;
lin capillarity_N = mkN "capillarity" ;
lin capillary_A = mkA "capillary" ;
lin capillary_N = mkN "capillary" "capillaries";
lin capital_A = compoundA (mkA "capital");
lin capital_N = mkN "capital" "capitals";
lin capitalism_A = compoundA (mkA "capitalism");
lin capitalism_N = mkN "capitalism" ;
lin capitalist_A = mkA "capitalist" ;
lin capitalist_N = mkN "capitalist" "capitalists";
lin capitalistic_A = compoundA (mkA "capitalistic");
lin capitalization_N = mkN (variants {"capitalization"; "capitalisation"});
lin capitalize_V = mkV "capitalize" "capitalizes" "capitalized" "capitalized" "capitalizing";
lin capitalize_V2 = mkV2 (mkV "capitalize" "capitalizes" "capitalized" "capitalized" "capitalizing");
lin capitate_A = mkA "capitate" ;
lin capitate_N = mkN "capitate" ;
lin capitation_N = mkN "capitation" "capitations";
lin capitol_N = mkN "capitol" "capitols";
lin capitular_A = mkA "capitular" ;
lin capitulate_V = mkV "capitulate";
lin capitulate_V2 = mkV2 (mkV "capitulate" "capitulates" "capitulated" "capitulated" "capitulating");
lin capitulation_N = mkN "capitulation" ;
lin capitulum_N = mkN "capitulum" ;
lin capo_N = mkN "capo" ;
lin capon_N = mkN "capon" "capons";
lin capote_N = mkN "capote" ;
lin cappuccino_N = mkN "cappuccino" ;
lin capriccio_N = mkN "capriccio" ;
lin caprice_N = mkN "caprice" "caprices";
lin capricious_A = compoundA (mkA "capricious");
lin capriciousness_N = mkN "capriciousness" ;
lin capricorn_PN = mkPN "Capricorn";
lin caprifig_N = mkN "caprifig" ;
lin caprine_A = mkA "caprine" ;
lin capriole_N = mkN "capriole" ;
lin capsaicin_N = mkN "capsaicin" ;
lin capsicum_N = mkN "capsicum" "capsicums";
lin capsid_N = mkN "capsid" ;
lin capsize_V = mkV "capsize" "capsizes" "capsized" "capsized" "capsizing";
lin capsize_V2 = mkV2 (mkV "capsize" "capsizes" "capsized" "capsized" "capsizing");
lin capsizing_N = mkN "capsizing" ;
lin capstan_N = mkN "capstan" "capstans";
lin capstone_N = mkN "capstone" ;
lin capsular_A = mkA "capsular" ;
lin capsulate_A = mkA "capsulate" ;
lin capsule_N = mkN "capsule" "capsules";
lin capt_PN = mkPN "Capt";
lin captain_N = mkN "captain" "captains";
lin captain_V2 = mkV2 (mkV "captain" "captains" "captained" "captained" "captaining");
lin captainship_N = mkN "captainship" ;
lin caption_N = mkN "caption" "captions";
lin captious_A = compoundA (mkA "captious");
lin captivate_V2 = mkV2 (mkV "captivate" "captivates" "captivated" "captivated" "captivating");
lin captivation_N = mkN "captivation" ;
lin captive_A = compoundA (mkA "captive");
lin captive_N = mkN "captive" "captives";
lin captivity_N = mkN "captivity" ;
lin captopril_N = mkN "captopril" ;
lin captor_N = mkN "captor" "captors";
lin capture_N = mkN "capture" "captures";
lin capture_V2 = mkV2 (mkV "capture" "captures" "captured" "captured" "capturing");
lin capuchin_N = mkN "capuchin" ;
lin capulin_N = mkN "capulin" ;
lin caput_N = mkN "caput" ;
lin capybara_N = mkN "capybara" ;
lin car_N = mkN "car" "cars";
lin car_ferry_N = mkN "car-ferry" "car-ferries";
lin carabao_N = mkN "carabao" ;
lin carabiner_N = mkN "carabiner" ;
lin caracal_N = mkN "caracal" ;
lin caracara_N = mkN "caracara" ;
lin caracas_PN = mkPN "Caracas";
lin caracolito_N = mkN "caracolito" ;
lin carafe_N = mkN "carafe" "carafes";
lin carambola_N = mkN "carambola" ;
lin caramel_A = mkA "caramel" ;
lin caramel_N = mkN "caramel" "caramels";
lin carancha_N = mkN "carancha" ;
lin caranday_N = mkN "caranday" ;
lin carangid_A = mkA "carangid" ;
lin carapace_N = mkN "carapace" "carapaces";
lin carat_N = mkN "carat" "carats";
lin caravan_N = mkN "caravan" "caravans";
lin caravanning_N = mkN "caravanning" ;
lin caravansary_N = mkN "caravansary" "caravansaries";
lin caravanserai_N = mkN "caravanserai" "caravanserais";
lin caraway_N = mkN "caraway" "caraways";
lin carbamate_N = mkN "carbamate" ;
lin carbide_N = mkN "carbide" "carbides";
lin carbine_N = mkN "carbine" "carbines";
lin carbineer_N = mkN "carbineer" ;
lin carbocyclic_A = mkA "carbocyclic" ;
lin carbohydrate_N = mkN "carbohydrate" "carbohydrates";
lin carbolated_A = mkA "carbolated" ;
lin carbolic_A = compoundA (mkA "carbolic");
lin carbomycin_N = mkN "carbomycin" ;
lin carbon_N = mkN "carbon" "carbons";
lin carbon_paper_N = mkN "carbon-paper" ;
lin carbonaceous_A = mkA "carbonaceous" ;
lin carbonado_N = mkN "carbonado" ;
lin carbonara_N = mkN "carbonara" ;
lin carbonate_N = mkN "carbonate" ;
lin carbonated_A = compoundA (mkA "carbonated");
lin carbonation_N = mkN "carbonation" ;
lin carbonic_A = compoundA (mkA "carbonic");
lin carboniferous_A = compoundA (mkA "carboniferous");
lin carbonization_N = mkN "carbonization" "carbonizations";
lin carbonize_V2 = mkV2 (mkV "carbonize" "carbonizes" "carbonized" "carbonized" "carbonizing");
lin carbonyl_A = mkA "carbonyl" ;
lin carbonyl_N = mkN "carbonyl" ;
lin carborundum_N = mkN "carborundum" ;
lin carboxyl_A = mkA "carboxyl" ;
lin carboxyl_N = mkN "carboxyl" ;
lin carboy_N = mkN "carboy" "carboys";
lin carbuncle_N = mkN "carbuncle" "carbuncles";
lin carbuncled_A = mkA "carbuncled" ;
lin carburetor_N = mkN "carburetor" ;
lin carburettor_N = mkN "carburettor" "carburettors";
lin carcase_N = mkN "carcase" "carcases";
lin carcass_N = mkN "carcass" "carcasses";
lin carcinogen_N = mkN "carcinogen" ;
lin carcinogenic_A = mkA "carcinogenic" ;
lin carcinoid_N = mkN "carcinoid" ;
lin carcinoma_N = mkN "carcinoma" ;
lin carcinomatous_A = mkA "carcinomatous" ;
lin carcinosarcoma_N = mkN "carcinosarcoma" ;
lin card_N = mkN "card" "cards";
lin card_V2 = mkV2 (mkV "card" "cards" "carded" "carded" "carding");
lin card_sharper_N = mkN "card-sharper" "card-sharpers";
lin cardamom_N = mkN "cardamom" ;
lin cardboard_A = mkA "cardboard" ;
lin cardboard_N = mkN "cardboard" ;
lin cardcase_N = mkN "cardcase" ;
lin cardenden_PN = mkPN "Cardenden";
lin cardholder_N = mkN "cardholder" ;
lin cardia_N = mkN "cardia" ;
lin cardiac_A = compoundA (mkA "cardiac");
lin cardiff_PN = mkPN "Cardiff";
lin cardigan_N = mkN "cardigan" "cardigans";
lin cardigan_PN = mkPN "Cardigan";
lin cardinal_A = compoundA (mkA "cardinal");
lin cardinal_N = mkN "cardinal" "cardinals";
lin cardinalate_N = mkN "cardinalate" ;
lin cardinalfish_N = mkN "cardinalfish" ;
lin cardinality_N = mkN "cardinality" ;
lin cardinalship_N = mkN "cardinalship" ;
lin cardiograph_N = mkN "cardiograph" ;
lin cardiographic_A = mkA "cardiographic" ;
lin cardiography_N = mkN "cardiography" ;
lin cardioid_N = mkN "cardioid" ;
lin cardiologic_A = mkA "cardiologic" ;
lin cardiologistMasc_N = mkN masculine (mkN "cardiologist");
lin cardiologistFem_N = mkN feminine (mkN "cardiologist");
lin cardiology_N = mkN "cardiology" ;
lin cardiomegaly_N = mkN "cardiomegaly" ;
lin cardiomyopathy_N = mkN "cardiomyopathy" ;
lin cardiopulmonary_A = mkA "cardiopulmonary" ;
lin cardiospasm_N = mkN "cardiospasm" ;
lin cardiovascular_A = mkA "cardiovascular" ;
lin carditis_N = mkN "carditis" ;
lin cardoon_N = mkN "cardoon" ;
lin cardroom_N = mkN "cardroom" ;
lin cardsharp_N = mkN "cardsharp" ;
lin care_N = mkN "care" "cares";
lin care_V = mkV "care" "cares" "cared" "cared" "caring";
lin careen_V = mkV "careen" "careens" "careened" "careened" "careening";
lin careen_V2 = mkV2 (mkV "careen" "careens" "careened" "careened" "careening");
lin career_N = mkN "career" "careers";
lin career_V = mkV "career" "careers" "careered" "careered" "careering";
lin careerism_N = mkN "careerism" ;
lin careerist_N = mkN "careerist" "careerists";
lin carefree_A = compoundA (mkA "carefree");
lin carefreeness_N = mkN "carefreeness" ;
lin careful_A = compoundA (mkA "careful");
lin carefulness_N = mkN "carefulness" ;
lin caregiver_N = mkN "caregiver" ;
lin careladen_A = compoundA (mkA "careladen");
lin careless_A = compoundA (mkA "careless");
lin carelessness_N = mkN "carelessness" ;
lin caress_N = mkN "caress" "caresses";
lin caress_V2 = mkV2 (mkV "caress" "caresses" "caressed" "caressed" "caressing");
lin caressing_A = compoundA (mkA "caressing");
lin caressing_N = mkN "caressing" ;
lin caret_N = mkN "caret" "carets";
lin caretaker_N = mkN "caretaker" "caretakers";
lin careworn_A = compoundA (mkA "careworn");
lin carful_N = mkN "carful" ;
lin cargo_N = mkN "cargo" "cargoes";
lin carhop_N = mkN "carhop" ;
lin caribou_N = mkN "caribou" "caribou";
lin caricature_N = mkN "caricature" "caricatures";
lin caricature_V2 = mkV2 (mkV "caricature" "caricatures" "caricatured" "caricatured" "caricaturing");
lin caricaturist_N = mkN "caricaturist" "caricaturists";
lin caries_N = mkN "caries" ;
lin carillon_N = mkN "carillon" "carillons";
lin carillonneur_N = mkN "carillonneur" ;
lin carina_N = mkN "carina" ;
lin carinal_A = mkA "carinal" ;
lin carinate_N = mkN "carinate" ;
lin carioca_N = mkN "carioca" ;
lin carious_A = compoundA (mkA "carious");
lin carissa_N = mkN "carissa" ;
lin carjacking_N = mkN "carjacking" ;
lin carl_PN = mkPN "Carl";
lin carlisle_PN = mkPN "Carlisle";
lin carload_N = mkN "carload" ;
lin carlow_PN = mkPN "Carlow";
lin carluke_PN = mkPN "Carluke";
lin carmarthen_PN = mkPN "Carmarthen";
lin carmelite_A = compoundA (mkA "Carmelite");
lin carmelite_N = mkN "Carmelite" "Carmelites";
lin carminative_A = mkA "carminative" ;
lin carminative_N = mkN "carminative" ;
lin carmine_A = compoundA (mkA "carmine");
lin carmine_N = mkN "carmine" "carmines";
lin carnage_N = mkN "carnage" ;
lin carnal_A = compoundA (mkA "carnal");
lin carnallite_N = mkN "carnallite" ;
lin carnassial_A = mkA "carnassial" ;
lin carnation_A = mkA "carnation" ;
lin carnation_N = mkN "carnation" "carnations";
lin carnauba_N = mkN "carnauba" ;
lin carnelian_N = mkN "carnelian" ;
lin carnforth_PN = mkPN "Carnforth";
lin carnival_N = mkN "carnival" "carnivals";
lin carnivore_N = mkN "carnivore" "carnivores";
lin carnivorous_A = compoundA (mkA "carnivorous");
lin carnosaur_N = mkN "carnosaur" ;
lin carnotite_N = mkN "carnotite" ;
lin carnoustie_PN = mkPN "Carnoustie";
lin carob_N = mkN "carob" ;
lin caroche_N = mkN "caroche" ;
lin carol_N = mkN "carol" "carols";
lin carol_PN = mkPN "Carol";
lin carol_V2 = mkV2 (mkV "carol" "carols" "carolled" "carolled" "carolling");
lin carole_PN = mkPN "Carole";
lin caroler_N = mkN "caroler" ;
lin carolina_PN = mkPN "Carolina";
lin caroline_PN = mkPN "Caroline";
lin caroling_N = mkN "caroling" ;
lin caroller_N = mkN "caroller" "carollers";
lin carolyn_PN = mkPN "Carolyn";
lin carom_N = mkN "carom" ;
lin carotene_N = mkN "carotene" ;
lin carotenemia_N = mkN "carotenemia" ;
lin carotenoid_N = mkN "carotenoid" ;
lin carotid_A = mkA "carotid" ;
lin carousal_N = mkN "carousal" "carousals";
lin carouse_N = mkN "carouse" ;
lin carouse_V2 = mkV2 (mkV "carouse" "carouses" "caroused" "caroused" "carousing");
lin carousel_N = mkN "carousel" "carousels";
lin carp_N = mkN "carp" "carp";
lin carp_V = mkV "carp";
lin carp_V2 = mkV2 (mkV "carp" "carps" "carped" "carped" "carping");
lin carpal_A = compoundA (mkA "carpal");
lin carpal_N = mkN "carpal" "carpals";
lin carpel_N = mkN "carpel" ;
lin carpellary_A = mkA "carpellary" ;
lin carpellate_A = mkA "carpellate" ;
lin carpenter_N = mkN "carpenter" "carpenters";
lin carpenteria_N = mkN "carpenteria" ;
lin carpentry_N = mkN "carpentry" ;
lin carper_N = mkN "carper" ;
lin carpet_N = mkN "carpet" "carpets";
lin carpet_V2 = mkV2 (mkV "carpet" "carpets" "carpeted" "carpeted" "carpeting");
lin carpet_beater_N = mkN "carpet-beater" "carpet-beaters";
lin carpet_knight_N = mkN "carpet-knight" "carpet-knights";
lin carpet_sweeper_N = mkN "carpet-sweeper" "carpet-sweepers";
lin carpetbag_A = mkA "carpetbag" ;
lin carpetbag_N = mkN "carpetbag" "carpetbags";
lin carpetbagger_N = mkN "carpetbagger" "carpetbaggers";
lin carpetweed_N = mkN "carpetweed" ;
lin carpophagous_A = mkA "carpophagous" ;
lin carpophore_N = mkN "carpophore" ;
lin carport_N = mkN "carport" "carports";
lin carpospore_N = mkN "carpospore" ;
lin carposporic_A = mkA "carposporic" ;
lin carposporous_A = mkA "carposporous" ;
lin carrack_N = mkN "carrack" ;
lin carrageenin_N = mkN "carrageenin" ;
lin carrel_N = mkN "carrel" ;
lin carriage_N = mkN "carriage" "carriages";
lin carriageway_N = mkN "carriageway" "carriageways";
lin carrie_PN = mkPN "Carrie";
lin carrier_N = mkN "carrier" "carriers";
lin carrier_bag_N = mkN "carrier-bag" "carrier-bags";
lin carrier_pigeon_N = mkN "carrier-pigeon" "carrier-pigeons";
lin carrion_N = mkN "carrion" ;
lin carrion_crow_N = mkN "carrion-crow" "carrion-crows";
lin carron_PN = mkPN "Carron";
lin carrot_N = mkN "carrot" "carrots";
lin carroty_A = compoundA (mkA "carroty");
lin carry_N = mkN "carry" "carries";
lin carry_V = mkV "carry" "carries" "carried" "carried" "carrying";
lin carry_V2 = mkV2 (mkV "carry" "carries" "carried" "carried" "carrying");
lin carryall_N = mkN "carryall" ;
lin carrycot_N = mkN "carrycot" "carrycots";
lin carsick_A = compoundA (mkA "carsick");
lin carsickness_N = mkN "carsickness" ;
lin cart_N = mkN "cart" "carts";
lin cart_V2 = mkV2 (mkV "cart" "carts" "carted" "carted" "carting");
lin cart_track_N = mkN "cart-track" "cart-tracks";
lin cartage_N = mkN "cartage" ;
lin cartagena_PN = mkPN "Cartagena";
lin carte_blanche_N = mkN "carte blanche" "cartes blanches";
lin cartel_N = mkN "cartel" "cartels";
lin carter_N = mkN "carter" "carters";
lin carthorse_N = mkN "carthorse" "carthorses";
lin cartilage_N = mkN "cartilage" "cartilages";
lin cartilaginification_N = mkN "cartilaginification" ;
lin cartilaginous_A = compoundA (mkA "cartilaginous");
lin cartload_N = mkN "cartload" "cartloads";
lin cartographer_N = mkN "cartographer" "cartographers";
lin cartographic_A = mkA "cartographic" ;
lin cartography_N = mkN "cartography" ;
lin carton_N = mkN "carton" "cartons";
lin cartoon_N = mkN "cartoon" "cartoons";
lin cartoon_V2 = mkV2 (mkV "cartoon" "cartoons" "cartooned" "cartooned" "cartooning");
lin cartoonistMasc_N = mkN masculine (mkN "cartoonist" "cartoonists");
lin cartoonistFem_N = mkN feminine (mkN "cartoonist" "cartoonists");
lin cartouche_N = mkN "cartouche" ;
lin cartridge_N = mkN "cartridge" "cartridges";
lin cartridge_belt_N = mkN "cartridge-belt" "cartridge-belts";
lin cartridge_paper_N = mkN "cartridge-paper" "cartridge-papers";
lin cartroad_N = mkN "cartroad" "cartroads";
lin cartwheel_N = mkN "cartwheel" "cartwheels";
lin cartwright_N = mkN "cartwright" ;
lin caruncle_N = mkN "caruncle" ;
lin caruncular_A = mkA "caruncular" ;
lin carunculate_A = mkA "carunculate" ;
lin carve_V = mkV "carve" "carves" "carved" "carved" "carving";
lin carve_V2 = mkV2 (mkV "carve" "carves" "carved" "carved" "carving");
lin carvedilol_N = mkN "carvedilol" ;
lin carver_N = mkN "carver" "carvers";
lin carving_N = mkN "carving" "carvings";
lin carving_fork_N = mkN "carving-fork" "carving-forks";
lin carving_knife_N = mkN "carving-knife" "carving-knives";
lin caryatid_N = mkN "caryatid" "caryatids";
lin caryophyllaceous_A = mkA "caryophyllaceous" ;
lin casaba_N = mkN "casaba" ;
lin casablanca_PN = mkPN "Casablanca";
lin cascade_N = mkN "cascade" "cascades";
lin cascade_V = mkV "cascade" "cascades" "cascaded" "cascaded" "cascading";
lin cascara_N = mkN "cascara" ;
lin cascarilla_N = mkN "cascarilla" ;
lin case_N = mkN "case" "cases";
lin case_V2 = mkV2 (mkV "case" "cases" "cased" "cased" "casing");
lin case_hardened_A = compoundA (mkA "case-hardened");
lin case_history_N = mkN "case-history" "case-histories";
lin case_law_N = mkN "case-law" "case-laws";
lin casebook_A = mkA "casebook" ;
lin casebook_N = mkN "casebook" "casebooks";
lin casein_N = mkN "casein" ;
lin casement_N = mkN "casement" "casements";
lin caseous_A = mkA "caseous" ;
lin casern_N = mkN "casern" ;
lin casework_N = mkN "casework" "caseworks";
lin caseworm_N = mkN "caseworm" ;
lin cash_N = mkN "cash" ;
lin cash_V = mkV "cash" "cashes" "cashed" "cashed" "cashing";
lin cash_V2 = mkV2 (mkV "cash" "cashes" "cashed" "cashed" "cashing");
lin cashable_A = compoundA (mkA "cashable");
lin cashbox_N = mkN "cashbox" ;
lin cashew_N = mkN "cashew" "cashews";
lin cashier_N = mkN "cashier" "cashiers";
lin cashier_V2 = mkV2 (mkV "cashier" "cashiers" "cashiered" "cashiered" "cashiering");
lin cashmere_N = mkN "cashmere" ;
lin casing_N = mkN "casing" "casings";
lin casino_N = mkN "casino" "casinos";
lin cask_N = mkN "cask" "casks";
lin casket_N = mkN "casket" "caskets";
lin caspase_N = mkN "caspase" ;
lin casque_N = mkN "casque" ;
lin casquet_N = mkN "casquet" ;
lin cassareep_N = mkN "cassareep" ;
lin cassava_N = mkN "cassava" ;
lin casserole_N = mkN "casserole" "casseroles";
lin cassette_N = mkN "cassette" "cassettes";
lin cassia_N = mkN "cassia" ;
lin cassiri_N = mkN "cassiri" ;
lin cassiterite_N = mkN "cassiterite" ;
lin cassock_N = mkN "cassock" "cassocks";
lin cassocked_A = mkA "cassocked" ;
lin cassowary_N = mkN "cassowary" "cassowaries";
lin cast_N = mkN "cast" "casts";
lin cast_V = IrregEng.cast_V;
lin cast_V2 = mkV2 (IrregEng.cast_V);
lin cast_iron_A = compoundA (mkA "cast-iron");
lin cast_off_A = compoundA (mkA "cast-off");
lin castaway_N = mkN "castaway" "castaways";
lin caste_N = mkN "caste" "castes";
lin castellated_A = compoundA (mkA "castellated");
lin caster_N = mkN "caster" "casters";
lin castigate_V2 = mkV2 (mkV "castigate" "castigates" "castigated" "castigated" "castigating");
lin castigation_N = mkN "castigation" "castigations";
lin casting_N = mkN "casting" "castings";
lin castle_N = mkN "castle" "castles";
lin castle_V = mkV "castle" "castles" "castled" "castled" "castling";
lin castleford_PN = mkPN "Castleford";
lin castor_N = mkN "castor" "castors";
lin castor_oil_N = mkN "castor oil" ;
lin castrate_V2 = mkV2 (mkV "castrate" "castrates" "castrated" "castrated" "castrating");
lin castration_N = mkN "castration" "castrations";
lin castrato_N = mkN "castrato" ;
lin casual_A = compoundA (mkA "casual");
lin casualness_N = mkN "casualness" ;
lin casualty_N = mkN "casualty" "casualties";
lin casuarina_N = mkN "casuarina" ;
lin casuist_N = mkN "casuist" "casuists";
lin casuistic_A = compoundA (mkA "casuistic");
lin casuistical_A = compoundA (mkA "casuistical");
lin casuistry_N = mkN "casuistry" "casuistries";
lin casus_belli_N = mkN "casus belli" "casus belli";
lin cat_N = mkN "cat" "cats";
lin cat_nap_N = mkN "cat-nap" "cat-naps";
lin cat_o'_nine_tails_N = mkN "cat-o'-nine-tails" "IRREG";
lin cat_sleep_N = mkN "cat-sleep" "cat-sleeps";
lin catabiosis_N = mkN "catabiosis" ;
lin catabolic_A = mkA "catabolic" ;
lin catabolism_N = mkN "catabolism" ;
lin catachresis_N = mkN "catachresis" ;
lin catachrestic_A = mkA "catachrestic" ;
lin cataclinal_A = mkA "cataclinal" ;
lin cataclysm_N = mkN "cataclysm" "cataclysms";
lin cataclysmal_A = mkA "cataclysmal" ;
lin cataclysmic_A = compoundA (mkA "cataclysmic");
lin catacomb_N = mkN "catacomb" ;
lin catacorner_A = mkA "catacorner" ;
lin catadromous_A = mkA "catadromous" ;
lin catafalque_N = mkN "catafalque" "catafalques";
lin catalan_A = compoundA (mkA "catalan");
lin catalan_N = mkN "catalan" ;
lin catalase_N = mkN "catalase" ;
lin catalatic_A = mkA "catalatic" ;
lin catalectic_A = mkA "catalectic" ;
lin catalectic_N = mkN "catalectic" ;
lin catalepsy_N = mkN "catalepsy" ;
lin cataleptic_A = compoundA (mkA "cataleptic");
lin cataleptic_N = mkN "cataleptic" "cataleptics";
lin catalexis_N = mkN "catalexis" ;
lin catalog_N = mkN "catalog" ;
lin catalog_V2 = mkV2 (mkV "catalog");
lin cataloger_N = mkN "cataloger" ;
lin catalogue_N = mkN "catalogue" "catalogues";
lin catalogue_V2 = mkV2 (mkV "catalogue" "catalogues" "catalogued" "catalogued" "cataloguing");
lin catalpa_N = mkN "catalpa" "catalpas";
lin catalufa_N = mkN "catalufa" ;
lin catalysis_N = mkN "catalysis" ;
lin catalyst_N = mkN "catalyst" "catalysts";
lin catalytic_A = compoundA (mkA "catalytic");
lin catalytically_Adv = mkAdv "catalytically" ;
lin catamaran_N = mkN "catamaran" "catamarans";
lin catamite_N = mkN "catamite" ;
lin catananche_N = mkN "catananche" ;
lin catania_PN = mkPN "Catania";
lin cataphasia_N = mkN "cataphasia" ;
lin cataphatic_A = mkA "cataphatic" ;
lin cataphatism_N = mkN "cataphatism" ;
lin cataphyll_N = mkN "cataphyll" ;
lin cataplasia_N = mkN "cataplasia" ;
lin cataplastic_A = mkA "cataplastic" ;
lin catapult_N = mkN "catapult" "catapults";
lin catapult_V2 = mkV2 (mkV "catapult" "catapults" "catapulted" "catapulted" "catapulting");
lin catapultic_A = mkA "catapultic" ;
lin cataract_N = mkN "cataract" "cataracts";
lin catarrh_N = mkN "catarrh" ;
lin catarrhal_A = mkA "catarrhal" ;
lin catarrhine_A = mkA "catarrhine" ;
lin catastrophe_N = mkN "catastrophe" "catastrophes";
lin catastrophic_A = compoundA (mkA "catastrophic");
lin catastrophically_Adv = mkAdv "catastrophically";
lin catatonia_N = mkN "catatonia" ;
lin catatonic_A = mkA "catatonic" ;
lin catbird_N = mkN "catbird" ;
lin catboat_N = mkN "catboat" ;
lin catcall_N = mkN "catcall" "catcalls";
lin catcall_V = mkV "catcall" "catcalls" "catcalled" "catcalled" "catcalling";
lin catch_N = mkN "catch" "catches";
lin catch_V = IrregEng.catch_V;
lin catch_V2 = mkV2 (IrregEng.catch_V);
lin catch_VS = mkVS (IrregEng.catch_V);
lin catch_crop_N = mkN "catch-crop" "catch-crops";
lin catchall_N = mkN "catchall" ;
lin catcher_N = mkN "catcher" "catchers";
lin catching_N = mkN "catching" ;
lin catchment_N = mkN "catchment" "catchments";
lin catchment_area_N = mkN "catchment-area" "catchment-areas";
lin catchment_basin_N = mkN "catchment-basin" "catchment-basins";
lin catchpenny_A = compoundA (mkA "catchpenny");
lin catchphrase_N = mkN "catchphrase" ;
lin catchup_N = mkN "catchup" "catchups";
lin catchword_N = mkN "catchword" "catchwords";
lin catchy_A = mkA "catchy" "catchier";
lin catechesis_N = mkN "catechesis" ;
lin catechetical_A = mkA "catechetical" ;
lin catechin_N = mkN "catechin" ;
lin catechism_N = mkN "catechism" "catechisms";
lin catechismal_A = mkA "catechismal" ;
lin catechist_N = mkN "catechist" ;
lin catechistic_A = mkA "catechistic" ;
lin catechize_V2 = mkV2 (mkV "catechize" "catechizes" "catechized" "catechized" "catechizing");
lin catecholamine_N = mkN "catecholamine" ;
lin catechu_N = mkN "catechu" ;
lin catechumen_N = mkN "catechumen" ;
lin categorem_N = mkN "categorem" ;
lin categorematic_A = mkA "categorematic" ;
lin categorial_A = mkA "categorial" ;
lin categoric_A = mkA "categoric" ;
lin categorical_A = compoundA (mkA "categorical");
lin categorization_N = mkN "categorization" ;
lin categorize_V2 = mkV2 (mkV "categorize" "categorizes" "categorized" "categorized" "categorizing");
lin category_N = mkN "category" "categories";
lin catena_N = mkN "catena" ;
lin catenary_N = mkN "catenary" ;
lin catenulate_A = mkA "catenulate" ;
lin cater_V = mkV "cater" "caters" "catered" "catered" "catering";
lin caterer_N = mkN "caterer" "caterers";
lin catering_N = mkN "catering" ;
lin caterpillar_N = mkN "caterpillar" "caterpillars";
lin caterwaul_N = mkN "caterwaul" "caterwauls";
lin caterwaul_V = mkV "caterwaul" "caterwauls" "caterwauled" "caterwauled" "caterwauling";
lin catfish_N = mkN "catfish" "catfish";
lin catgut_N = mkN "catgut" ;
lin cath_PN = mkPN "Cath";
lin catharsis_N = mkN "catharsis" "catharses" {- FIXME: guessed plural form -};
lin cathartic_A = mkA "cathartic" ;
lin cathartic_N = mkN "cathartic" "cathartics";
lin cathectic_A = mkA "cathectic" ;
lin cathedra_N = mkN "cathedra" ;
lin cathedral_A = mkA "cathedral" ;
lin cathedral_N = mkN "cathedral" "cathedrals";
lin catherine_PN = mkPN "Catherine";
lin catheter_N = mkN "catheter" ;
lin catheterization_N = mkN "catheterization" ;
lin cathexis_N = mkN "cathexis" ;
lin cathode_N = mkN "cathode" "cathodes";
lin cathodic_A = mkA "cathodic" ;
lin catholic_A = compoundA (mkA "Catholic");
lin catholicMasc_N = mkN masculine (mkN "Catholic" "Catholics");
lin catholicFem_N = mkN feminine (mkN "Catholic" "Catholics");
lin catholicism_N = mkN "catholicism" ;
lin catholicity_N = mkN "catholicity" ;
lin cathy_PN = mkPN "Cathy";
lin cation_N = mkN "cation" ;
lin cationic_A = mkA "cationic" ;
lin catkin_N = mkN "catkin" "catkins";
lin catkinate_A = mkA "catkinate" ;
lin catling_N = mkN "catling" ;
lin catmint_N = mkN "catmint" ;
lin catoptric_A = mkA "catoptric" ;
lin catoptrics_N = mkN "catoptrics" ;
lin catostomid_N = mkN "catostomid" ;
lin catsup_N = mkN "catsup" "catsups";
lin cattail_N = mkN "cattail" ;
lin cattalo_N = mkN "cattalo" ;
lin cattiness_N = mkN "cattiness" ;
lin cattish_A = compoundA (mkA "cattish");
lin cattle_N = mkN "cattle" ;
lin cattle_cake_N = mkN "cattle-cake" ;
lin cattleman_N = mkN masculine (mkN "cattleman" "cattlemen");
lin cattleship_N = mkN "cattleship" ;
lin cattleya_N = mkN "cattleya" ;
lin catty_A = mkA "catty" "cattier";
lin catty_N = mkN "catty" ;
lin catwalk_N = mkN "catwalk" "catwalks";
lin caucasian_A = compoundA (mkA "caucasian");
lin caucasianMasc_N = mkN masculine (mkN "caucasian" "caucasians");
lin caucasianFem_N = mkN feminine (mkN "caucasian" "caucasians");
lin caucus_N = mkN "caucus" "caucuses";
lin cauda_N = mkN "cauda" ;
lin caudal_A = mkA "caudal" ;
lin caudate_A = mkA "caudate" ;
lin caudex_N = mkN "caudex" ;
lin caul_N = mkN "caul" "cauls";
lin cauldron_N = mkN "cauldron" "cauldrons";
lin caulescent_A = mkA "caulescent" ;
lin cauliflower_N = mkN "cauliflower" "cauliflowers";
lin cauline_A = mkA "cauline" ;
lin caulk_N = mkN "caulk" ;
lin caulk_V2 = mkV2 (mkV "caulk" "caulks" "caulked" "caulked" "caulking");
lin causal_A = compoundA (mkA "causal");
lin causalgia_N = mkN "causalgia" ;
lin causality_N = mkN "causality" ;
lin causation_N = mkN "causation" ;
lin causative_A = compoundA (mkA "causative");
lin cause_N = mkN "cause" "causes";
lin cause_V2 = mkV2 (mkV "cause" "causes" "caused" "caused" "causing");
lin cause_V2V = mkV2V (mkV "cause") noPrep to_Prep ;
lin cause_VS = mkVS (mkV "cause");
lin causeless_A = compoundA (mkA "causeless");
lin causerie_N = mkN "causerie" "causeries";
lin causeway_N = mkN "causeway" "causeways";
lin causing_N = mkN "causing" ;
lin caustic_A = compoundA (mkA "caustic");
lin caustic_N = mkN "caustic" ;
lin caustically_Adv = mkAdv "caustically";
lin cauterize_V2 = mkV2 (mkV "cauterize" "cauterizes" "cauterized" "cauterized" "cauterizing");
lin cautery_N = mkN "cautery" ;
lin caution_N = mkN "caution" "cautions";
lin caution_V = mkV "caution" "cautions" "cautioned" "cautioned" "cautioning";
lin caution_V2 = mkV2 (mkV "caution" "cautions" "cautioned" "cautioned" "cautioning");
lin caution_V2V = mkV2V (mkV "caution" "cautions" "cautioned" "cautioned" "cautioning") noPrep to_Prep ;
lin caution_VS = mkVS (mkV "caution" "cautions" "cautioned" "cautioned" "cautioning");
lin cautionary_A = compoundA (mkA "cautionary");
lin cautious_A = compoundA (mkA "cautious");
lin cavalcade_N = mkN "cavalcade" "cavalcades";
lin cavalier_A = compoundA (mkA "cavalier");
lin cavalier_N = mkN "cavalier" "cavaliers";
lin cavalry_N = mkN "cavalry" "cavalries";
lin cavalryman_N = mkN masculine (mkN "cavalryman" "cavalrymen");
lin cavan_PN = mkPN "Cavan";
lin cave_N = mkN "cave" "caves";
lin cave_V = mkV "cave" "caves" "caved" "caved" "caving";
lin cave_V2 = mkV2 (mkV "cave" "caves" "caved" "caved" "caving");
lin cave_dweller_N = mkN "cave-dweller" "cave-dwellers";
lin cave_in_N = mkN "cave-in" "cave-ins";
lin caveat_N = mkN "caveat" "caveats";
lin caveman_N = mkN masculine (mkN "caveman" "cavemen");
lin cavern_N = mkN "cavern" "caverns";
lin cavernous_A = compoundA (mkA "cavernous");
lin cavetto_N = mkN "cavetto" ;
lin caviar_N = mkN "caviar" ;
lin caviare_N = mkN "caviare" ;
lin cavil_V = mkV "cavil" "cavils" "cavilled" "cavilled" "cavilling";
lin cavity_N = mkN "cavity" "cavities";
lin cavort_V = mkV "cavort" "cavorts" "cavorted" "cavorted" "cavorting";
lin cavy_N = mkN "cavy" ;
lin caw_N = mkN "caw" "caws";
lin caw_V = mkV "caw" "caws" "cawed" "cawed" "cawing";
lin caw_V2 = mkV2 (mkV "caw" "caws" "cawed" "cawed" "cawing");
lin cayenne_N = mkN "cayenne" ;
lin cayenne_pepper_N = mkN "cayenne pepper" ;
lin cayman_N = mkN "cayman" "caymans";
lin cayuse_N = mkN "cayuse" ;
lin cbi_N = mkN "cbi" ;
lin cc_N = mkN "cc" "cc";
lin cd_N = mkN "cd" ;
lin cdr_PN = mkPN "Cdr";
lin cdre_PN = mkPN "Cdre";
lin cease_N = mkN "cease" "ceases";
lin cease_V = mkV "cease" "ceases" "ceased" "ceased" "ceasing";
lin cease_V2 = mkV2 (mkV "cease" "ceases" "ceased" "ceased" "ceasing");
lin cease_V2V = mkV2V (mkV "cease" "ceases" "ceased" "ceased" "ceasing") noPrep to_Prep;
lin cease_fire_N = mkN "cease-fire" "cease-fires";
lin ceaseless_A = compoundA (mkA "ceaseless");
lin cecal_A = mkA "cecal" ;
lin cecil_PN = mkPN "Cecil";
lin cecilia_PN = mkPN "Cecilia";
lin cecily_PN = mkPN "Cecily";
lin cecropia_N = mkN "cecropia" ;
lin cecum_N = mkN "cecum" ;
lin cedar_N = mkN "cedar" "cedars";
lin cedarn_A = mkA "cedarn" ;
lin cede_V2 = mkV2 (mkV "cede" "cedes" "ceded" "ceded" "ceding");
lin cedi_N = mkN "cedi" ;
lin cedilla_N = mkN "cedilla" "cedillas";
lin cedric_PN = mkPN "Cedric";
lin cefadroxil_N = mkN "cefadroxil" ;
lin cefn_mawr_PN = mkPN "Cefn-mawr";
lin cefoperazone_N = mkN "cefoperazone" ;
lin cefotaxime_N = mkN "cefotaxime" ;
lin ceftazidime_N = mkN "ceftazidime" ;
lin ceftriaxone_N = mkN "ceftriaxone" ;
lin cefuroxime_N = mkN "cefuroxime" ;
lin ceibo_N = mkN "ceibo" ;
lin ceilidh_N = mkN "ceilidh" ;
lin ceiling_N = mkN "ceiling" "ceilings";
lin ceilinged_A = mkA "ceilinged" ;
lin celandine_N = mkN "celandine" "celandines";
lin celebrant_N = mkN "celebrant" "celebrants";
lin celebrate_V2 = mkV2 (mkV "celebrate" "celebrates" "celebrated" "celebrated" "celebrating");
lin celebrated_A = compoundA (mkA "celebrate");
lin celebration_N = mkN "celebration" "celebrations";
lin celebratory_A = mkA "celebratory" ;
lin celebrity_N = mkN "celebrity" "celebrities";
lin celecoxib_N = mkN "celecoxib" ;
lin celeriac_N = mkN "celeriac" ;
lin celerity_N = mkN "celerity" ;
lin celery_N = mkN "celery" ;
lin celesta_N = mkN "celesta" ;
lin celestial_A = compoundA (mkA "celestial");
lin celestite_N = mkN "celestite" ;
lin celia_PN = mkPN "Celia";
lin celiac_A = mkA "celiac" ;
lin celibacy_N = mkN "celibacy" ;
lin celibate_A = mkA "celibate" ;
lin celibate_N = mkN "celibate" "celibates";
lin celiocentesis_N = mkN "celiocentesis" ;
lin celioma_N = mkN "celioma" ;
lin celioscopy_N = mkN "celioscopy" ;
lin cell_N = mkN "cell" "cells";
lin cellar_N = mkN "cellar" "cellars";
lin cellarage_N = mkN "cellarage" "cellarages";
lin cellblock_N = mkN "cellblock" ;
lin cellistMasc_N = mkN masculine (mkN "cellist" "cellists");
lin cellistFem_N = mkN feminine (mkN "cellist" "cellists");
lin cello_N = mkN "cello" "cellos";
lin cellophane_N = mkN "cellophane" ;
lin cellular_A = compoundA (mkA "cellular");
lin cellularity_N = mkN "cellularity" ;
lin cellulite_N = mkN "cellulite" ;
lin cellulitis_N = mkN "cellulitis" ;
lin celluloid_A = mkA "celluloid" ;
lin celluloid_N = mkN "celluloid" ;
lin cellulose_N = mkN "cellulose" ;
lin cellulosic_N = mkN "cellulosic" ;
lin cellulosid_A = mkA "cellulosid" ;
lin celom_N = mkN "celom" ;
lin celt_N = mkN "celt" "celts";
lin celtic_A = compoundA (mkA "celtic");
lin celtic_N = mkN "celtic" "celtics";
lin celtuce_N = mkN "celtuce" ;
lin cement_N = mkN "cement" ;
lin cement_V2 = mkV2 (mkV "cement" "cements" "cemented" "cemented" "cementing");
lin cement_mixer_N = mkN "cement-mixer" "cement-mixers";
lin cementite_N = mkN "cementite" ;
lin cementitious_A = mkA "cementitious" ;
lin cementum_N = mkN "cementum" ;
lin cemetery_N = mkN "cemetery" "cemeteries";
lin cenobite_N = mkN "cenobite" ;
lin cenobitic_A = mkA "cenobitic" ;
lin cenogenesis_N = mkN "cenogenesis" ;
lin cenogenetic_A = mkA "cenogenetic" ;
lin cenotaph_N = mkN "cenotaph" "cenotaphs";
lin censer_N = mkN "censer" "censers";
lin censor_N = mkN "censor" "censors";
lin censor_V2 = mkV2 (mkV "censor" "censors" "censored" "censored" "censoring");
lin censorial_A = mkA "censorial" ;
lin censoring_N = mkN "censoring" ;
lin censorious_A = compoundA (mkA "censorious");
lin censorship_N = mkN "censorship" "censorships";
lin censure_N = mkN "censure" "censures";
lin censure_V2 = mkV2 (mkV "censure" "censures" "censured" "censured" "censuring");
lin census_N = mkN "census" "censuses";
lin cent_N = mkN "cent" "cents";
lin centas_N = mkN "centas" ;
lin centaur_N = mkN "centaur" "centaurs";
lin centaury_N = mkN "centaury" ;
lin centavo_N = mkN "centavo" ;
lin centenarian_A = compoundA (mkA "centenarian");
lin centenarian_N = mkN "centenarian" "centenarians";
lin centenary_A = compoundA (mkA "centenary");
lin centenary_N = mkN "centenary" "centenaries";
lin centennial_A = compoundA (mkA "centennial");
lin centennial_N = mkN "centennial" "centennials";
lin center_A = mkA "center";
lin center_V = mkV "center";
lin center_V2 = mkV2 (mkV "center");
lin centerboard_N = mkN "centerboard" ;
lin centered_A = mkA "centered" ;
lin centerfold_N = mkN "centerfold" ;
lin centering_N = mkN "centering" ;
lin centerline_N = mkN "centerline" ;
lin centerpiece_N = mkN "centerpiece" ;
lin centesimal_A = mkA "centesimal" ;
lin centesimo_N = mkN "centesimo" ;
lin centesis_N = mkN "centesis" ;
lin centigrade_A = compoundA (mkA "centigrade");
lin centiliter_N = mkN "centiliter" ;
lin centime_N = mkN "centime" "centimes";
lin centimetre_N = variants {mkN "centimetre" "centimetres"; mkN "centimeter" "centimeters"};
lin centimo_N = mkN "centimo" ;
lin centipede_N = mkN "centipede" "centipedes";
lin centner_N = mkN "centner" ;
lin central_A = compoundA (mkA "central");
lin central_N = mkN "central" "centrals";
lin centralism_N = mkN "centralism" ;
lin centralist_A = mkA "centralist" ;
lin centrality_N = mkN "centrality" ;
lin centralization_N = mkN "centralization" "centralizations";
lin centralize_V = mkV "centralize" "centralizes" "centralized" "centralized" "centralizing";
lin centralize_V2 = mkV2 (mkV "centralize" "centralizes" "centralized" "centralized" "centralizing");
lin centre_N = mkN (variants {"centre"; "center"});
lin centre_V = mkV "centre" "centres" "centred" "centred" "centring";
lin centre_V2 = mkV2 (mkV "centre" "centres" "centred" "centred" "centring");
lin centre_bit_N = mkN "centre-bit" "centre-bits";
lin centre_board_N = mkN "centre-board" "centre-boards";
lin centrepiece_N = mkN "centrepiece" "centrepieces";
lin centrex_N = mkN "centrex" ;
lin centric_A = mkA "centric" ;
lin centrifugal_A = compoundA (mkA "centrifugal");
lin centrifugation_N = mkN "centrifugation" ;
lin centrifuge_N = mkN "centrifuge" "centrifuges";
lin centriole_N = mkN "centriole" ;
lin centripetal_A = compoundA (mkA "centripetal");
lin centrism_N = mkN "centrism" ;
lin centrist_A = mkA "centrist" ;
lin centrist_N = mkN "centrist" ;
lin centroid_N = mkN "centroid" ;
lin centroidal_A = mkA "centroidal" ;
lin centromere_N = mkN "centromere" ;
lin centromeric_A = mkA "centromeric" ;
lin centrosome_N = mkN "centrosome" ;
lin centrosomic_A = mkA "centrosomic" ;
lin centrum_N = mkN "centrum" ;
lin centurion_N = mkN "centurion" "centurions";
lin century_N = mkN "century" "centuries";
lin cephalexin_N = mkN "cephalexin" ;
lin cephalhematoma_N = mkN "cephalhematoma" ;
lin cephalic_A = mkA "cephalic" ;
lin cephalochordate_N = mkN "cephalochordate" ;
lin cephaloglycin_N = mkN "cephaloglycin" ;
lin cephalometry_N = mkN "cephalometry" ;
lin cephalopod_A = mkA "cephalopod" ;
lin cephalopod_N = mkN "cephalopod" ;
lin cephaloridine_N = mkN "cephaloridine" ;
lin cephalosporin_N = mkN "cephalosporin" ;
lin cephalothin_N = mkN "cephalothin" ;
lin ceramic_A = compoundA (mkA "ceramic");
lin ceramic_N = mkN "ceramic" ;
lin ceramics_N = mkN "ceramics" "ceramics";
lin ceras_N = mkN "ceras" ;
lin cerate_N = mkN "cerate" ;
lin ceratodus_N = mkN "ceratodus" ;
lin ceratopsian_N = mkN "ceratopsian" ;
lin ceratosaur_N = mkN "ceratosaur" ;
lin ceratozamia_N = mkN "ceratozamia" ;
lin cercaria_N = mkN "cercaria" ;
lin cercarial_A = mkA "cercarial" ;
lin cere_N = mkN "cere" ;
lin cereal_A = mkA "cereal" ;
lin cereal_N = mkN "cereal" "cereals";
lin cerebellar_A = mkA "cerebellar" ;
lin cerebellum_N = mkN "cerebellum" ;
lin cerebral_A = compoundA (mkA "cerebral");
lin cerebration_N = mkN "cerebration" ;
lin cerebrospinal_A = mkA "cerebrospinal" ;
lin cerebrovascular_A = mkA "cerebrovascular" ;
lin cerebrum_N = mkN "cerebrum" ;
lin cerecloth_N = mkN "cerecloth" ;
lin ceremonial_A = compoundA (mkA "ceremonial");
lin ceremonial_N = mkN "ceremonial" "ceremonials";
lin ceremonious_A = compoundA (mkA "ceremonious");
lin ceremoniousness_N = mkN "ceremoniousness" ;
lin ceremony_N = mkN "ceremony" "ceremonies";
lin ceresin_N = mkN "ceresin" ;
lin ceric_A = mkA "ceric" ;
lin ceriman_N = mkN "ceriman" ;
lin cerise_A = compoundA (mkA "cerise");
lin cerise_N = mkN "cerise" "cerises";
lin cerium_N = mkN "cerium" ;
lin cerivastatin_N = mkN "cerivastatin" ;
lin cernuous_A = mkA "cernuous" ;
lin cero_N = mkN "cero" ;
lin cerous_A = mkA "cerous" ;
lin cert_N = mkN "cert" "certs";
lin certain_A = compoundA (mkA "certain");
lin certainty_N = mkN "certainty" "certainties";
lin certifiable_A = compoundA (mkA "certifiable");
lin certificate_N = mkN "certificate" "certificates";
lin certificate_V2 = mkV2 (mkV "certificate" "certificates" "certificated" "certificated" "certificating");
lin certification_N = mkN "certification" "certifications";
lin certificatory_A = mkA "certificatory" ;
lin certify_V = mkV "certify" "certifies" "certified" "certified" "certifying";
lin certify_V2 = mkV2 (mkV "certify" "certifies" "certified" "certified" "certifying");
lin certiorari_N = mkN "certiorari" ;
lin certitude_N = mkN "certitude" ;
lin cerulean_A = compoundA (mkA "cerulean");
lin cerumen_N = mkN "cerumen" ;
lin ceruminous_A = mkA "ceruminous" ;
lin cerussite_N = mkN "cerussite" ;
lin cervical_A = compoundA (mkA "cervical");
lin cervicitis_N = mkN "cervicitis" ;
lin cervine_A = mkA "cervine" ;
lin cervix_N = mkN "cervix" "cervixes";
lin cesarean_A = compoundA (mkA "cesarean");
lin cesium_N = mkN "cesium" ;
lin cessation_N = mkN "cessation" ;
lin cession_N = mkN "cession" "cessions";
lin cesspit_N = mkN "cesspit" "cesspits";
lin cesspool_N = mkN "cesspool" "cesspools";
lin cetacean_A = mkA "cetacean" ;
lin cetacean_N = mkN "cetacean" ;
lin cetrimide_N = mkN "cetrimide" ;
lin ceylon_PN = mkPN "Ceylon";
lin cf_PN = mkPN "Cf";
lin cf__Adv = mkAdv "cf." ;
lin cgs_N = mkN "cgs" ;
lin chabazite_N = mkN "chabazite" ;
lin chachalaca_N = mkN "chachalaca" ;
lin chachka_N = mkN "chachka" ;
lin chacma_N = mkN "chacma" ;
lin chad_N = mkN "chad" ;
lin chad_PN = mkPN "Chad";
lin chadian_A = compoundA (mkA "chadian");
lin chadian_N = mkN "chadian" "chadians";
lin chador_N = mkN "chador" ;
lin chaenactis_N = mkN "chaenactis" ;
lin chaeta_N = mkN "chaeta" ;
lin chaetal_A = mkA "chaetal" ;
lin chaetodon_N = mkN "chaetodon" ;
lin chaetognathan_A = mkA "chaetognathan" ;
lin chafe_N = mkN "chafe" "chafes";
lin chafe_V = mkV "chafe" "chafes" "chafed" "chafed" "chafing";
lin chafe_V2 = mkV2 (mkV "chafe" "chafes" "chafed" "chafed" "chafing");
lin chafeweed_N = mkN "chafeweed" ;
lin chaff_N = mkN "chaff" ;
lin chaff_V2 = mkV2 (mkV "chaff" "chaffs" "chaffed" "chaffed" "chaffing");
lin chaffinch_N = mkN "chaffinch" "chaffinches";
lin chaffweed_N = mkN "chaffweed" ;
lin chaffy_A = mkA "chaffy" ;
lin chafing_N = mkN "chafing" ;
lin chafing_dish_N = mkN "chafing dish" "chafing dishes";
lin chagrin_N = mkN "chagrin" ;
lin chagrin_V2 = mkV2 (mkV "chagrin" "chagrins" "chagrined" "chagrined" "chagrining");
lin chain_N = mkN "chain" "chains";
lin chain_V2 = mkV2 (mkV "chain" "chains" "chained" "chained" "chaining");
lin chain_armour_N = mkN "chain-armour" ;
lin chain_gang_N = mkN "chain-gang" "chain-gangs";
lin chain_letter_N = mkN "chain-letter" "chain-letters";
lin chain_mail_N = mkN "chain-mail" ;
lin chain_smoker_N = mkN "chain-smoker" "chain-smokers";
lin chain_stitch_N = mkN "chain-stitch" "chain-stitches";
lin chain_store_N = mkN "chain-store" "chain-stores";
lin chair_N = mkN "chair" "chairs";
lin chair_V2 = mkV2 (mkV "chair" "chairs" "chaired" "chaired" "chairing");
lin chair_lift_N = mkN "chair-lift" "chair-lifts";
lin chairlift_N = mkN "chairlift" ;
lin chairman_N = mkN masculine (mkN "chairman" "chairmen");
lin chairmanship_N = mkN "chairmanship" ;
lin chaise_N = mkN "chaise" "chaises";
lin chaise_longue_N = mkN "chaise longue" "chaise longues";
lin chaja_N = mkN "chaja" ;
lin chalaza_N = mkN "chalaza" ;
lin chalazion_N = mkN "chalazion" ;
lin chalcedony_N = mkN "chalcedony" ;
lin chalcocite_N = mkN "chalcocite" ;
lin chalcopyrite_N = mkN "chalcopyrite" ;
lin chaldron_N = mkN "chaldron" ;
lin chalet_N = mkN "chalet" "chalets";
lin chalfont_PN = mkPN "Chalfont";
lin chalfont_st_giles_PN = mkPN "Chalfont st giles";
lin chalfont_st_peter_PN = mkPN "Chalfont st peter";
lin chalice_N = mkN "chalice" "chalices";
lin chalk_N = mkN "chalk" "chalks";
lin chalk_V2 = mkV2 (mkV "chalk" "chalks" "chalked" "chalked" "chalking");
lin chalkpit_N = mkN "chalkpit" "chalkpits";
lin chalky_A = mkA "chalky" "chalkier";
lin challah_N = mkN "challah" ;
lin challenge_N = mkN "challenge" "challenges";
lin challenge_V = mkV "challenge";
lin challenge_V2 = mkV2 (mkV "challenge" "challenges" "challenged" "challenged" "challenging");
lin challengeable_A = mkA "challengeable" ;
lin challenger_N = mkN "challenger" "challengers";
lin challis_N = mkN "challis" ;
lin chalybeate_A = mkA "chalybeate" ;
lin chamber_N = mkN "chamber" "chambers";
lin chambered_A = mkA "chambered" ;
lin chamberlain_N = mkN "chamberlain" "chamberlains";
lin chambermaid_N = mkN "chambermaid" "chambermaids";
lin chamberpot_N = mkN "chamberpot" "chamberpots";
lin chambray_N = mkN "chambray" ;
lin chameleon_N = mkN "chameleon" "chameleons";
lin chammy_leather_N = mkN "chammy-leather" "chammy-leathers";
lin chamois_N = mkN "chamois" "chamoises";
lin chamois_leather_N = mkN "chamois-leather" "chamois-leathers";
lin chamomile_N = mkN "chamomile" ;
lin chamosite_N = mkN "chamosite" ;
lin champ_N = mkN "champ" "champs";
lin champ_V = mkV "champ" "champs" "champed" "champed" "champing";
lin champ_V2 = mkV2 (mkV "champ" "champs" "champed" "champed" "champing");
lin champagne_N = mkN "Champagne" "Champagnes";
lin champerty_N = mkN "champerty" ;
lin champion_A = compoundA (mkA "champion");
lin champion_Adv = mkAdv "champion";
lin champion_N = mkN "champion" "champions";
lin champion_V2 = mkV2 (mkV "champion" "champions" "championed" "championed" "championing");
lin championship_N = mkN "championship" "championships";
lin champleve_A = mkA "champleve" ;
lin chanar_N = mkN "chanar" ;
lin chance_N = mkN "chance" "chances";
lin chance_V = mkV "chance" "chances" "chanced" "chanced" "chancing";
lin chance_V2 = mkV2 (mkV "chance" "chances" "chanced" "chanced" "chancing");
lin chancel_N = mkN "chancel" "chancels";
lin chancellery_N = mkN "chancellery" "chancelleries";
lin chancellor_N = mkN "chancellor" "chancellors";
lin chancellorship_N = mkN "chancellorship" ;
lin chancery_N = mkN "chancery" "chanceries";
lin chancre_N = mkN "chancre" ;
lin chancroid_N = mkN "chancroid" ;
lin chancroidal_A = mkA "chancroidal" ;
lin chancrous_A = mkA "chancrous" ;
lin chancy_A = compoundA (mkA "chancy");
lin chandelier_N = mkN "chandelier" "chandeliers";
lin chandelle_N = mkN "chandelle" ;
lin chandler_N = mkN "chandler" "chandlers";
lin chandlery_N = mkN "chandlery" ;
lin chanfron_N = mkN "chanfron" ;
lin changchun_PN = mkPN "Changchun";
lin change_N = mkN "change" "changes";
lin change_V = mkV "change" "changes" "changed" "changed" "changing";
lin change_V2 = mkV2 (mkV "change" "changes" "changed" "changed" "changing");
lin changeable_A = compoundA (mkA "changeable");
lin changeableness_N = mkN "changeableness" ;
lin changeful_A = compoundA (mkA "changeful");
lin changeless_A = compoundA (mkA "changeless");
lin changelessness_N = mkN "changelessness" ;
lin changeling_N = mkN "changeling" "changelings";
lin changeover_N = mkN "changeover" "changeovers";
lin changer_N = mkN "changer" ;
lin changsha_PN = mkPN "Changsha";
lin channel_N = mkN "channel" "channels";
lin channel_V2 = mkV2 (mkV "channel" "channels" "channelled" "channelled" "channelling");
lin channelization_N = mkN "channelization" ;
lin channels_N = mkN "channels" ;
lin chant_N = mkN "chant" "chants";
lin chant_V = mkV "chant" "chants" "chanted" "chanted" "chanting";
lin chant_V2 = mkV2 (mkV "chant" "chants" "chanted" "chanted" "chanting");
lin chanter_N = mkN "chanter" ;
lin chanterelle_N = mkN "chanterelle" ;
lin chantey_N = mkN "chantey" ;
lin chantlike_A = mkA "chantlike" ;
lin chantry_N = mkN "chantry" ;
lin chaos_N = mkN "chaos" ;
lin chaotic_A = compoundA (mkA "chaotic");
lin chaotically_Adv = mkAdv "chaotically";
lin chap_N = mkN "chap" "chaps";
lin chap_V = mkV "chap" "chaps" "chapped" "chapped" "chapping";
lin chap_V2 = mkV2 (mkV "chap" "chaps" "chapped" "chapped" "chapping");
lin chapatti_N = mkN "chapatti" ;
lin chapel_N = mkN "chapel" "chapels";
lin chapelgoer_N = mkN "chapelgoer" "chapelgoers";
lin chaperon_N = mkN "chaperon" "chaperons";
lin chaperon_V2 = mkV2 (mkV "chaperon" "chaperons" "chaperoned" "chaperoned" "chaperoning");
lin chapfallen_A = compoundA (mkA "chapfallen");
lin chaplain_N = mkN human (mkN "chaplain" "chaplains");
lin chaplaincy_N = mkN "chaplaincy" "chaplaincies";
lin chaplet_N = mkN "chaplet" "chaplets";
lin chapleted_A = mkA "chapleted" ;
lin chapman_N = mkN masculine (mkN "chapman" "chapmen");
lin chapter_N = mkN "chapter" "chapters";
lin chapterhouse_N = mkN "chapterhouse" "chapterhouses";
lin char_N = mkN "char" "chars";
lin char_V = mkV "char" "chars" "charred" "charred" "charring";
lin char_V2 = mkV2 (mkV "char" "chars" "charred" "charred" "charring");
lin charabanc_1_N = mkN "charabanc" "charabancs";
lin charabanc_2_N = mkN "charàbanc" "charàbancs";
lin characin_N = mkN "characin" ;
lin character_1_N = mkN "character" "characters";
lin character_2_N = mkN "character" "characters";
lin characteristic_A = compoundA (mkA "characteristic");
lin characteristic_N = mkN "characteristic" "characteristics";
lin characteristically_Adv = mkAdv "characteristically";
lin characterization_N = mkN (variants {"characterization"; "characterisation"}) ;
lin characterize_V2 = mkV2 (mkV "characterize" "characterizes" "characterized" "characterized" "characterizing");
lin characterless_A = compoundA (mkA "characterless");
lin charade_N = mkN "charade" "charades";
lin charades_N = mkN "charades" ;
lin charcoal_A = mkA "charcoal" ;
lin charcoal_N = mkN "charcoal" ;
lin charcoal_burner_N = mkN "charcoal-burner" "charcoal-burners";
lin charcuterie_N = mkN "charcuterie" ;
lin chard_N = mkN "chard" "chards";
lin chard_PN = mkPN "Chard";
lin charge_N = mkN "charge" "charges";
lin charge_V = mkV "charge" "charges" "charged" "charged" "charging";
lin charge_V2 = mkV2 (mkV "charge" "charges" "charged" "charged" "charging");
lin charge_VS = mkVS (mkV "charge" "charges" "charged" "charged" "charging");
lin charge_account_N = mkN "charge-account" "charge-accounts";
lin charge_d'affaires_N = mkN "chargé d'affaires" "IRREG";
lin charge_sheet_N = mkN "charge-sheet" "charge-sheets";
lin chargeable_A = compoundA (mkA "chargeable");
lin charger_N = mkN "charger" "chargers";
lin chariot_N = mkN "chariot" "chariots";
lin charioteer_N = mkN "charioteer" "charioteers";
lin charisma_N = mkN "charisma" "charismas";
lin charismatic_A = compoundA (mkA "charismatic");
lin charitable_A = compoundA (mkA "charitable");
lin charitableness_N = mkN "charitableness" ;
lin charity_N = mkN "charity" "charities";
lin charivari_N = mkN "charivari" ;
lin charlady_N = mkN "charlady" "charladies";
lin charlatan_N = mkN "charlatan" "charlatans";
lin charlatanism_N = mkN "charlatanism" ;
lin charles_PN = mkPN "Charles";
lin charleston_N = mkN "charleston" "charlestons";
lin charlie_PN = mkPN "Charlie";
lin charlock_N = mkN "charlock" ;
lin charlotte_N = mkN "charlotte" ;
lin charlotte_PN = mkPN "Charlotte";
lin charm_N = mkN "charm" "charms";
lin charm_V = mkV "charm" "charms" "charmed" "charmed" "charming";
lin charm_V2 = mkV2 (mkV "charm" "charms" "charmed" "charmed" "charming");
lin charmer_N = mkN human (mkN "charmer" "charmers");
lin charmingly_Adv = mkAdv "charmingly" ;
lin charnel_A = mkA "charnel" ;
lin charnel_house_N = mkN "charnel house" "charnel houses";
lin chart_N = mkN "chart" "charts";
lin chart_V2 = mkV2 (mkV "chart" "charts" "charted" "charted" "charting");
lin chartaceous_A = mkA "chartaceous" ;
lin charter_N = mkN "charter" "charters";
lin charter_V2 = mkV2 (mkV "charter" "charters" "chartered" "chartered" "chartering");
lin charter_party_N = mkN "charter-party" "charter-parties";
lin charterhouse_N = mkN "charterhouse" ;
lin chartism_N = mkN "chartism" ;
lin chartist_N = mkN "chartist" "chartists";
lin chartless_A = mkA "chartless" ;
lin chartreuse_A = mkA "chartreuse" ;
lin chartreuse_N = mkN "chartreuse" ;
lin charwoman_N = mkN masculine (mkN "charwoman" "charwomen");
lin chary_A = compoundA (mkA "chary");
lin charybdis_PN = mkPN "Charybdis";
lin chas_PN = mkPN "Chas";
lin chase_N = mkN "chase" "chases";
lin chase_V = mkV "chase" "chases" "chased" "chased" "chasing";
lin chase_V2 = mkV2 (mkV "chase" "chases" "chased" "chased" "chasing");
lin chaser_N = mkN "chaser" "chasers";
lin chasm_N = mkN "chasm" "chasms";
lin chasse_N = mkN "chasse" ;
lin chassis_N = mkN "chassis" "chassis";
lin chaste_A = compoundA (mkA "chaste");
lin chasten_V2 = mkV2 (mkV "chasten" "chastens" "chastened" "chastened" "chastening");
lin chasteness_N = mkN "chasteness" ;
lin chastise_V2 = mkV2 (mkV "chastise" "chastises" "chastised" "chastised" "chastising");
lin chastisement_N = mkN "chastisement" ;
lin chastity_N = mkN "chastity" ;
lin chasuble_N = mkN "chasuble" "chasubles";
lin chat_N = mkN "chat" "chats";
lin chat_V = mkV "chat" "chats" "chatted" "chatted" "chatting";
lin chat_V2 = mkV2 (mkV "chat" "chats" "chatted" "chatted" "chatting");
lin chateau_N = mkN "château" "châteaux" {- FIXME: guessed plural form -};
lin chatelaine_N = mkN "chatelaine" "chatelaines";
lin chatham_PN = mkPN "Chatham";
lin chattel_N = mkN "chattel" "chattels";
lin chatter_N = mkN "chatter" ;
lin chatter_V = mkV "chatter" "chatters" "chattered" "chattered" "chattering";
lin chatterbox_N = mkN "chatterbox" "chatterboxes";
lin chatterer_N = mkN "chatterer" ;
lin chatty_A = mkA "chatty" "chattier";
lin chauffeur_N = mkN "chauffeur" "chauffeurs";
lin chauffeur_V2 = mkV2 (mkV "chauffeur");
lin chauffeuse_N = mkN "chauffeuse" "IRREG";
lin chaulmoogra_N = mkN "chaulmoogra" ;
lin chauvinism_N = mkN "chauvinism" ;
lin chauvinist_N = mkN "chauvinist" "chauvinists";
lin chauvinistic_A = compoundA (mkA "chauvinistic");
lin chaw_N = mkN "chaw" "chaws";
lin chaw_V2 = mkV2 (mkV "chaw" "chaws" "chawed" "chawed" "chawing");
lin chaw_bacon_N = mkN "chaw-bacon" "chaw-bacons";
lin cheadle_PN = mkPN "Cheadle";
lin cheap_A = mkA "cheap" "cheaper";
lin cheapen_V = mkV "cheapen" "cheapens" "cheapened" "cheapened" "cheapening";
lin cheapen_V2 = mkV2 (mkV "cheapen" "cheapens" "cheapened" "cheapened" "cheapening");
lin cheapjack_A = compoundA (mkA "cheapjack");
lin cheapjack_N = mkN "cheapjack" ;
lin cheapness_N = mkN "cheapness" ;
lin cheapskate_N = mkN "cheapskate" ;
lin cheat_N = mkN "cheat" "cheats";
lin cheat_V = mkV "cheat" "cheats" "cheated" "cheated" "cheating";
lin cheat_V2 = mkV2 (mkV "cheat" "cheats" "cheated" "cheated" "cheating");
lin chebab_N = mkN "chebab" ;
lin check_N = mkN "check" "checks";
lin check_V = mkV "check" "checks" "checked" "checked" "checking";
lin check_V2 = mkV2 (mkV "check" "checks" "checked" "checked" "checking");
lin checkbook_N = mkN "checkbook" "checkbooks";
lin checker_N = mkN "checker" "checkers";
lin checker_V2 = mkV2 (mkV "checker" "checkers" "checkered" "checkered" "checkering");
lin checkerbloom_N = mkN "checkerbloom" ;
lin checkerboard_N = mkN "checkerboard" ;
lin checkers_N = mkN "checkers" "checkers";
lin checklist_N = mkN "checklist" "checklists";
lin checkmate_N = mkN "checkmate" "checkmates";
lin checkmate_V2 = mkV2 (mkV "checkmate" "checkmates" "checkmated" "checkmated" "checkmating");
lin checkout_N = mkN "checkout" "checkouts";
lin checkpoint_N = mkN "checkpoint" "checkpoints";
lin checkroom_N = mkN "checkroom" "checkrooms";
lin checksum_N = mkN "checksum" ;
lin checkup_N = mkN "checkup" "checkups";
lin cheddar_N = mkN "cheddar" ;
lin cheek_N = mkN "cheek" "cheeks";
lin cheek_V2 = mkV2 (mkV "cheek" "cheeks" "cheeked" "cheeked" "cheeking");
lin cheekbone_N = mkN "cheekbone" "cheekbones";
lin cheekpiece_N = mkN "cheekpiece" ;
lin cheeky_A = mkA "cheeky" "cheekier";
lin cheep_N = mkN "cheep" "cheeps";
lin cheep_V = mkV "cheep" "cheeps" "cheeped" "cheeped" "cheeping";
lin cheer_N = mkN "cheer" "cheers";
lin cheer_V = mkV "cheer" "cheers" "cheered" "cheered" "cheering";
lin cheer_V2 = mkV2 (mkV "cheer" "cheers" "cheered" "cheered" "cheering");
lin cheerer_N = mkN "cheerer" ;
lin cheerful_A = compoundA (mkA "cheerful");
lin cheerfulness_N = mkN "cheerfulness" ;
lin cheering_N = mkN "cheering" ;
lin cheerleader_N = mkN "cheerleader" "cheerleaders";
lin cheerless_A = compoundA (mkA "cheerless");
lin cheerlessness_N = mkN "cheerlessness" ;
lin cheers_Interj = ss "cheers";
lin cheery_A = compoundA (mkA "cheery");
lin cheese_N = mkN "cheese" "cheeses";
lin cheeseboard_N = mkN "cheeseboard" ;
lin cheeseburger_N = mkN "cheeseburger" ;
lin cheesecake_N = mkN "cheesecake" "cheesecakes";
lin cheesecloth_N = mkN "cheesecloth" "cheesecloths";
lin cheeselike_A = mkA "cheeselike" ;
lin cheesemonger_N = mkN "cheesemonger" ;
lin cheeseparing_A = compoundA (mkA "cheeseparing");
lin cheetah_N = mkN "cheetah" "cheetahs";
lin chef_N = mkN "chef" "chefs";
lin chef_d'oeuvre_N = mkN "chef-d'oeuvre" "chefs-d'oeuvre";
lin cheilitis_N = mkN "cheilitis" ;
lin cheilosis_N = mkN "cheilosis" ;
lin chela_N = mkN "chela" ;
lin chelate_A = mkA "chelate" ;
lin chelate_N = mkN "chelate" ;
lin chelation_N = mkN "chelation" ;
lin chelicera_N = mkN "chelicera" ;
lin cheliceral_A = mkA "cheliceral" ;
lin chelicerous_A = mkA "chelicerous" ;
lin cheliferous_A = mkA "cheliferous" ;
lin chelmsford_PN = mkPN "Chelmsford";
lin chelonian_A = mkA "chelonian" ;
lin chelonian_N = mkN "chelonian" ;
lin chelsea_PN = mkPN "Chelsea";
lin cheltenham_PN = mkPN "Cheltenham";
lin chelyabinsk_PN = mkPN "Chelyabinsk";
lin chemical_A = compoundA (mkA "chemical");
lin chemical_N = mkN "chemical" "chemicals";
lin chemiluminescence_N = mkN "chemiluminescence" ;
lin chemiluminescent_A = mkA "chemiluminescent" ;
lin chemise_N = mkN "chemise" "chemises";
lin chemisorption_N = mkN "chemisorption" ;
lin chemisorptive_A = mkA "chemisorptive" ;
lin chemistMasc_N = mkN masculine (mkN "chemist" "chemists");
lin chemistFem_N = mkN feminine (mkN "chemist" "chemists");
lin chemistry_N = mkN "chemistry" ;
lin chemoreceptive_A = mkA "chemoreceptive" ;
lin chemoreceptor_N = mkN "chemoreceptor" ;
lin chemosis_N = mkN "chemosis" ;
lin chemosurgery_N = mkN "chemosurgery" ;
lin chemosynthesis_N = mkN "chemosynthesis" ;
lin chemotaxis_N = mkN "chemotaxis" ;
lin chemotherapeutic_A = mkA "chemotherapeutic" ;
lin chemotherapy_N = mkN "chemotherapy" ;
lin chengchow_PN = mkPN "Chengchow";
lin chengtu_PN = mkPN "Chengtu";
lin chenille_N = mkN "chenille" ;
lin chepstow_PN = mkPN "Chepstow";
lin cheque_N = mkN "cheque" "cheques";
lin chequebook_N = mkN "chequebook" "chequebooks";
lin chequer_V2 = mkV2 (mkV "chequer" "chequers" "chequered" "chequered" "chequering");
lin cherimoya_N = mkN "cherimoya" ;
lin cherish_V2 = mkV2 (mkV "cherish" "cherishes" "cherished" "cherished" "cherishing");
lin cheroot_N = mkN "cheroot" "cheroots";
lin cherry_A = compoundA (mkA "cherry");
lin cherry_N = mkN "cherry" "cherries";
lin cherrystone_N = mkN "cherrystone" ;
lin chert_N = mkN "chert" ;
lin cherty_A = mkA "cherty" ;
lin cherub_N = mkN "cherub" "cherubs";
lin cherubic_A = compoundA (mkA "cherubic");
lin chervil_N = mkN "chervil" ;
lin chesham_PN = mkPN "Chesham";
lin cheshire_PN = mkPN "Cheshire";
lin chess_N = mkN "chess" ;
lin chessboard_N = mkN "chessboard" "chessboards";
lin chessman_N = mkN masculine (mkN "chessman" "chessmen");
lin chest_N = mkN "chest" "chests";
lin chester_PN = mkPN "Chester";
lin chester_le_street_PN = mkPN "Chester-le-street";
lin chesterfield_N = mkN "chesterfield" "chesterfields";
lin chesterfield_PN = mkPN "Chesterfield";
lin chestnut_A = mkA "chestnut" ;
lin chestnut_N = mkN "chestnut" "chestnuts";
lin chetrum_N = mkN "chetrum" ;
lin cheval_glass_N = mkN "cheval glass" "cheval glasses";
lin chevron_N = mkN "chevron" "chevrons";
lin chevrotain_N = mkN "chevrotain" ;
lin chew_N = mkN "chew" "chews";
lin chew_V = mkV "chew" "chews" "chewed" "chewed" "chewing";
lin chew_V2 = mkV2 (mkV "chew" "chews" "chewed" "chewed" "chewing");
lin chewable_A = mkA "chewable" ;
lin chewer_N = mkN "chewer" ;
lin chewing_gum_N = mkN "chewing-gum" ;
lin chewink_N = mkN "chewink" ;
lin chewy_A = mkA "chewy" ;
lin chi_N = mkN "chi" ;
lin chianti_N = mkN "chianti" ;
lin chiaroscuro_N = mkN "chiaroscuro" ;
lin chiasma_N = mkN "chiasma" ;
lin chiasmal_A = mkA "chiasmal" ;
lin chiasmus_N = mkN "chiasmus" ;
lin chic_A = compoundA (mkA "chic");
lin chic_N = mkN "chic" ;
lin chicago_PN = mkPN "Chicago";
lin chicane_N = mkN "chicane" ;
lin chicanery_N = mkN "chicanery" "chicaneries";
lin chichester_PN = mkPN "Chichester";
lin chichi_A = compoundA (mkA "chichi");
lin chichi_N = mkN "chichi" ;
lin chichipe_N = mkN "chichipe" ;
lin chick_N = mkN "chick" "chicks";
lin chickadee_N = mkN "chickadee" ;
lin chicken_A = mkA "chicken" ;
lin chicken_N = mkN "chicken" "chickens";
lin chicken_hearted_A = compoundA (mkA "chicken-hearted");
lin chicken_run_N = mkN "chicken-run" "chicken-runs";
lin chickenfeed_N = mkN "chickenfeed" ;
lin chickenpox_N = mkN "chickenpox" ;
lin chickenshit_N = mkN "chickenshit" ;
lin chickeree_N = mkN "chickeree" ;
lin chickpea_N = mkN "chickpea" "chickpeas";
lin chickweed_N = mkN "chickweed" ;
lin chicle_N = mkN "chicle" ;
lin chicory_N = mkN "chicory" ;
lin chide_V = mkV "chide" "chides" "chided" "chided" "chiding";
lin chide_V2 = mkV2 (mkV "chide" "chides" "chided" "chided" "chiding");
lin chiding_N = mkN "chiding" ;
lin chief_A = compoundA (mkA "chief");
lin chief_N = mkN "chief" "chiefs";
lin chieftainMasc_N = mkN masculine (mkN "chieftain" "chieftains");
lin chieftainFem_N = mkN feminine (mkN "chieftain" "chieftains");
lin chieftaincy_N = mkN "chieftaincy" "chieftaincies";
lin chiffon_N = mkN "chiffon" ;
lin chiffonier_N = mkN "chiffonier" "chiffoniers";
lin chigetai_N = mkN "chigetai" ;
lin chignon_N = mkN "chignon" "chignons";
lin chigoe_N = mkN "chigoe" ;
lin chilblain_N = mkN "chilblain" "chilblains";
lin chilblained_A = compoundA (mkA "chilblained");
lin child's_play_N = mkN "child's-play" ;
lin child_N = mkN "child" "children" {- FIXME: guessed plural form -};
lin child_bearing_N = mkN "child-bearing" ;
lin childbearing_A = mkA "childbearing" ;
lin childbirth_N = mkN "childbirth" ;
lin childcare_N = mkN "childcare" ;
lin childhood_N = mkN "childhood" ;
lin childish_A = compoundA (mkA "childish");
lin childishness_N = mkN "childishness" ;
lin childless_A = compoundA (mkA "childless");
lin childlessness_N = mkN "childlessness" ;
lin childlike_A = compoundA (mkA "childlike");
lin chile_PN = mkPN "Chile";
lin chilean_A = compoundA (mkA "chilean");
lin chileanMasc_N = mkN masculine (mkN "chilean" "chileans");
lin chileanFem_N = mkN feminine (mkN "chilean" "chileans");
lin chili_N = mkN "chili" ;
lin chill_A = compoundA (mkA "chill");
lin chill_N = mkN "chill" "chills";
lin chill_V = mkV "chill" "chills" "chilled" "chilled" "chilling";
lin chill_V2 = mkV2 (mkV "chill" "chills" "chilled" "chilled" "chilling");
lin chilli_N = mkN "chilli" "chillies";
lin chilliness_N = mkN "chilliness" ;
lin chilly_A = mkA "chilly" "chillier";
lin chilly_N = mkN "chilly" "chillies";
lin chimaera_N = mkN "chimaera" "chimaeras";
lin chime_N = mkN "chime" "chimes";
lin chime_V = mkV "chime" "chimes" "chimed" "chimed" "chiming";
lin chime_V2 = mkV2 (mkV "chime" "chimes" "chimed" "chimed" "chiming");
lin chimera_N = mkN "chimera" "chimeras";
lin chimeric_A = mkA "chimeric" ;
lin chimerical_A = compoundA (mkA "chimerical");
lin chimney_N = mkN "chimney" "chimneys";
lin chimney_sweep_N = mkN "chimney-sweep" "chimney-sweeps";
lin chimneybreast_N = mkN "chimneybreast" "chimneybreasts";
lin chimneypiece_N = mkN "chimneypiece" "chimneypieces";
lin chimneypot_N = mkN "chimneypot" "chimneypots";
lin chimneystack_N = mkN "chimneystack" "chimneystacks";
lin chimneysweep_N = mkN "chimneysweep" "chimneysweeps";
lin chimneysweeper_N = mkN "chimneysweeper" "chimneysweepers";
lin chimp_N = mkN "chimp" "chimps";
lin chimpanzee_N = mkN "chimpanzee" "chimpanzees";
lin chin_N = mkN "chin" "chins";
lin chin_strap_N = mkN "chin-strap" "chin-straps";
lin chin_wagging_N = mkN "chin-wagging" ;
lin china_N = mkN "china" ;
lin china_PN = mkPN "China";
lin china_closet_N = mkN "china-closet" "china-closets";
lin chinaberry_N = mkN "chinaberry" ;
lin chinaware_N = mkN "chinaware" ;
lin chincapin_N = mkN "chincapin" ;
lin chincherinchee_N = mkN "chincherinchee" ;
lin chinchilla_N = mkN "chinchilla" "chinchillas";
lin chinchow_PN = mkPN "Chinchow";
lin chine_N = mkN "chine" "chines";
lin chinese_A = compoundA (mkA "Chinese");
lin chinese_N = mkN "Chinese" "Chinese";
lin chink_N = mkN "chink" "chinks";
lin chink_V = mkV "chink" "chinks" "chinked" "chinked" "chinking";
lin chink_V2 = mkV2 (mkV "chink" "chinks" "chinked" "chinked" "chinking");
lin chinless_A = mkA "chinless" ;
lin chino_N = mkN "chino" ;
lin chinoiserie_N = mkN "chinoiserie" ;
lin chinook_N = mkN "chinook" ;
lin chintz_N = mkN "chintz" ;
lin chip_N = mkN "chip" "chips";
lin chip_V = mkV "chip" "chips" "chipped" "chipped" "chipping";
lin chip_V2 = mkV2 (mkV "chip" "chips" "chipped" "chipped" "chipping");
lin chipboard_N = mkN "chipboard" ;
lin chipmunk_N = mkN "chipmunk" "chipmunks";
lin chipolata_N = mkN "chipolata" ;
lin chipotle_N = mkN "chipotle" ;
lin chippendale_N = mkN "chippendale" "chippendales";
lin chippenham_PN = mkPN "Chippenham";
lin chipper_A = mkA "chipper" ;
lin chips_N = mkN "chips" "chipses";
lin chiralgia_N = mkN "chiralgia" ;
lin chiromantic_A = mkA "chiromantic" ;
lin chiropodist_N = mkN "chiropodist" "chiropodists";
lin chiropody_N = mkN "chiropody" ;
lin chiropractic_N = mkN "chiropractic" ;
lin chiropractor_N = mkN "chiropractor" "chiropractors";
lin chirp_N = mkN "chirp" "chirps";
lin chirp_V = mkV "chirp" "chirps" "chirped" "chirped" "chirping";
lin chirp_V2 = mkV2 (mkV "chirp" "chirps" "chirped" "chirped" "chirping");
lin chirpiness_N = mkN "chirpiness" ;
lin chirpy_A = compoundA (mkA "chirpy");
lin chirrup_N = mkN "chirrup" "chirrups";
lin chirrup_V = mkV "chirrup" "chirrups" "chirruped" "chirruped" "chirruping";
lin chirrup_V2 = mkV2 (mkV "chirrup" "chirrups" "chirruped" "chirruped" "chirruping");
lin chisel_N = mkN "chisel" "chisels";
lin chisel_V2 = mkV2 (mkV "chisel" "chisels" "chiselled" "chiselled" "chiselling");
lin chiseled_A = mkA "chiseled" ;
lin chiseller_N = mkN "chiseller" "chisellers";
lin chit_N = mkN "chit" "chits";
lin chit_chat_N = mkN "chit-chat" ;
lin chitchat_N = mkN "chitchat" ;
lin chitin_N = mkN "chitin" ;
lin chitinous_A = mkA "chitinous" ;
lin chiton_N = mkN "chiton" ;
lin chitterlings_N = mkN "chitterlings" ;
lin chivalric_A = mkA "chivalric" ;
lin chivalrous_A = compoundA (mkA "chivalrous");
lin chivalry_N = mkN "chivalry" ;
lin chive_N = mkN "chive" "chives";
lin chives_N = mkN "chives" ;
lin chivvy_V2 = mkV2 (mkV "chivvy" "chivvies" "chivvied" "chivvied" "chivvying");
lin chivy_V2 = mkV2 (mkV "chivy" "chivies" "chivied" "chivied" "chivying");
lin chlamydeous_A = mkA "chlamydeous" ;
lin chlamydia_N = mkN "chlamydia" ;
lin chlamydial_A = mkA "chlamydial" ;
lin chlamydospore_N = mkN "chlamydospore" ;
lin chlamys_N = mkN "chlamys" ;
lin chloasma_N = mkN "chloasma" ;
lin chloe_PN = mkPN "Chloe";
lin chlorambucil_N = mkN "chlorambucil" ;
lin chloramine_N = mkN "chloramine" ;
lin chloramphenicol_N = mkN "chloramphenicol" ;
lin chlorate_N = mkN "chlorate" ;
lin chlordiazepoxide_N = mkN "chlordiazepoxide" ;
lin chlorella_N = mkN "chlorella" ;
lin chlorenchyma_N = mkN "chlorenchyma" ;
lin chlorhexidine_N = mkN "chlorhexidine" ;
lin chloride_N = mkN "chloride" ;
lin chlorinate_V2 = mkV2 (mkV "chlorinate" "chlorinates" "chlorinated" "chlorinated" "chlorinating");
lin chlorination_N = mkN "chlorination" ;
lin chlorine_N = mkN "chlorine" ;
lin chlorinity_N = mkN "chlorinity" ;
lin chlorite_N = mkN "chlorite" ;
lin chloroacetophenone_N = mkN "chloroacetophenone" ;
lin chlorobenzene_N = mkN "chlorobenzene" ;
lin chlorobenzylidenemalononitrile_N = mkN "chlorobenzylidenemalononitrile" ;
lin chlorofluorocarbon_N = mkN "chlorofluorocarbon" ;
lin chloroform_N = mkN "chloroform" ;
lin chlorophyll_N = mkN "chlorophyll" ;
lin chlorophyllose_A = mkA "chlorophyllose" ;
lin chloropicrin_N = mkN "chloropicrin" ;
lin chloroplast_N = mkN "chloroplast" ;
lin chloroprene_N = mkN "chloroprene" ;
lin chloroquine_N = mkN "chloroquine" ;
lin chlorosis_N = mkN "chlorosis" ;
lin chlorothiazide_N = mkN "chlorothiazide" ;
lin chlorotic_A = mkA "chlorotic" ;
lin chlorpromazine_N = mkN "chlorpromazine" ;
lin chlorpyrifos_N = mkN "chlorpyrifos" ;
lin chlortetracycline_N = mkN "chlortetracycline" ;
lin chlorthalidone_N = mkN "chlorthalidone" ;
lin choanocyte_N = mkN "choanocyte" ;
lin choc_N = mkN "choc" "chocs";
lin choc_ice_N = mkN "choc-ice" "choc-ices";
lin chock_Adv = mkAdv "chock" ;
lin chock_N = mkN "chock" "chocks";
lin chock_V2 = mkV2 (mkV "chock" "chocks" "chocked" "chocked" "chocking");
lin chock_a_block_A = compoundA (mkA "chock-a-block");
lin chock_a_block_Adv = mkAdv "chock-a-block";
lin chock_full_A = compoundA (mkA "chock-full");
lin chocolate_N = mkN "chocolate" "chocolates";
lin choice_A = compoundA (mkA "choice");
lin choice_N = mkN "choice" "choices";
lin choir_N = mkN "choir" "choirs";
lin choir_school_N = mkN "choir-school" "choir-schools";
lin choirboy_N = mkN "choirboy" "choirboys";
lin choirmaster_N = mkN "choirmaster" ;
lin choke_N = mkN "choke" "chokes";
lin choke_V = mkV "choke" "chokes" "choked" "choked" "choking";
lin choke_V2 = mkV2 (mkV "choke" "chokes" "choked" "choked" "choking");
lin choke_damp_N = mkN "choke-damp" ;
lin chokecherry_N = mkN "chokecherry" ;
lin chokedamp_N = mkN "chokedamp" ;
lin chokehold_N = mkN "chokehold" ;
lin chokepoint_N = mkN "chokepoint" ;
lin choker_N = mkN "choker" "chokers";
lin chokey_N = mkN "chokey" "chokeys";
lin choking_N = mkN "choking" ;
lin choky_A = mkA "choky" ;
lin choky_N = mkN "choky" "chokies";
lin cholangiography_N = mkN "cholangiography" ;
lin cholangitis_N = mkN "cholangitis" ;
lin cholecystectomy_N = mkN "cholecystectomy" ;
lin cholecystitis_N = mkN "cholecystitis" ;
lin cholecystokinin_N = mkN "cholecystokinin" ;
lin cholelithiasis_N = mkN "cholelithiasis" ;
lin cholelithotomy_N = mkN "cholelithotomy" ;
lin choler_N = mkN "choler" "cholers";
lin cholera_N = mkN "cholera" ;
lin choleraic_A = mkA "choleraic" ;
lin choleric_A = compoundA (mkA "choleric");
lin cholesterol_N = mkN "cholesterol" ;
lin choline_N = mkN "choline" ;
lin cholinergic_A = mkA "cholinergic" ;
lin cholinesterase_N = mkN "cholinesterase" ;
lin cholla_N = mkN "cholla" ;
lin chomping_N = mkN "chomping" ;
lin chon_N = mkN "chon" ;
lin chondrin_N = mkN "chondrin" ;
lin chondrite_N = mkN "chondrite" ;
lin chondritic_A = mkA "chondritic" ;
lin chondroma_N = mkN "chondroma" ;
lin chondrosarcoma_N = mkN "chondrosarcoma" ;
lin chondrule_N = mkN "chondrule" ;
lin choose_V = IrregEng.choose_V;
lin choose_V2 = mkV2 (IrregEng.choose_V);
lin choose_V2V = mkV2V (IrregEng.choose_V) noPrep to_Prep ;
lin choose_VS = mkVS (IrregEng.choose_V);
lin choose_VV = mkVV (IrregEng.choose_V) ;
lin choosey_A = compoundA (mkA "choosey");
lin choosy_A = mkA "choosy" "choosier";
lin chop_N = mkN "chop" "chops";
lin chop_V = mkV "chop" "chops" "chopped" "chopped" "chopping";
lin chop_V2 = mkV2 (mkV "chop" "chops" "chopped" "chopped" "chopping");
lin chop_chop_Adv = mkAdv "chop-chop";
lin chop_house_N = mkN "chop-house" "chop-houses";
lin chop_suey_N = mkN "chop suey" ;
lin chopine_N = mkN "chopine" ;
lin chopper_N = mkN "chopper" "choppers";
lin choppiness_N = mkN "choppiness" ;
lin choppy_A = mkA "choppy" "choppier";
lin chopstick_N = mkN "chopstick" ;
lin chopwell_PN = mkPN "Chopwell";
lin choragic_A = mkA "choragic" ;
lin choragus_N = mkN "choragus" ;
lin choral_A = compoundA (mkA "choral");
lin chorale_N = mkN "chorale" "chorales";
lin chord_N = mkN "chord" "chords";
lin chordal_A = mkA "chordal" ;
lin chordamesoderm_N = mkN "chordamesoderm" ;
lin chordate_A = mkA "chordate" ;
lin chordate_N = mkN "chordate" ;
lin chorditis_N = mkN "chorditis" ;
lin chordophone_N = mkN "chordophone" ;
lin chore_N = mkN "chore" "chores";
lin chorea_N = mkN "chorea" ;
lin choreographer_N = mkN "choreographer" "choreographers";
lin choreographic_A = mkA "choreographic" ;
lin choreography_N = mkN "choreography" ;
lin choric_A = mkA "choric" ;
lin chorioallantois_N = mkN "chorioallantois" ;
lin choriomeningitis_N = mkN "choriomeningitis" ;
lin chorion_N = mkN "chorion" ;
lin chorionic_A = mkA "chorionic" ;
lin chorioretinitis_N = mkN "chorioretinitis" ;
lin chorister_N = mkN "chorister" "choristers";
lin chorizo_N = mkN "chorizo" ;
lin chorley_PN = mkPN "Chorley";
lin choroid_N = mkN "choroid" ;
lin chortle_N = mkN "chortle" "chortles";
lin chortle_V = mkV "chortle" "chortles" "chortled" "chortled" "chortling";
lin chorus_N = mkN "chorus" "choruses";
lin chorus_V2 = mkV2 (mkV "chorus" "choruses" "chorused" "chorused" "chorusing");
lin chorus_girl_N = mkN "chorus-girl" "chorus-girls";
lin chosen_N = mkN "chosen" ;
lin chough_N = mkN "chough" ;
lin chow_N = mkN "chow" "chows";
lin chowchow_N = mkN "chowchow" ;
lin chowder_N = mkN "chowder" "chowders";
lin chrestomathy_N = mkN "chrestomathy" ;
lin chris_PN = mkPN "Chris";
lin chrism_N = mkN "chrism" ;
lin chrissie_PN = mkPN "Chrissie";
lin chrissy_PN = mkPN "Chrissy";
lin christ_PN = mkPN "Christ";
lin christchurch_PN = mkPN "Christchurch";
lin christella_N = mkN "christella" ;
lin christen_V2 = mkV2 (mkV "christen" "christens" "christened" "christened" "christening");
lin christendom_N = mkN "christendom" "christendoms";
lin christening_N = mkN "christening" "christenings";
lin christian_A = compoundA (mkA "christian");
lin christian_N = mkN "christian" "christians";
lin christian_PN = mkPN "Christian";
lin christianity_N = mkN "Christianity" ;
lin christianly_A = mkA "christianly" ;
lin christina_PN = mkPN "Christina";
lin christine_PN = mkPN "Christine";
lin christless_A = mkA "christless" ;
lin christlike_A = compoundA (mkA "christlike");
lin christmas_N = mkN "Christmas" "Christmases";
lin christmas_PN = mkPN "Christmas";
lin christmas_box_N = mkN "christmas-box" "christmas-boxes";
lin christmas_tree_N = mkN "christmas-tree" "christmas-trees";
lin christmastide_N = mkN "christmastide" "christmastides";
lin christmastime_N = mkN "christmastime" "christmastimes";
lin christopher_PN = mkPN "Christopher";
lin chromate_N = mkN "chromate" ;
lin chromatic_A = compoundA (mkA "chromatic");
lin chromatically_Adv = mkAdv "chromatically" ;
lin chromatid_N = mkN "chromatid" ;
lin chromatin_N = mkN "chromatin" ;
lin chromatinic_A = mkA "chromatinic" ;
lin chromatism_N = mkN "chromatism" ;
lin chromatogram_N = mkN "chromatogram" ;
lin chromatographic_A = mkA "chromatographic" ;
lin chromatographically_Adv = mkAdv "chromatographically" ;
lin chromatography_N = mkN "chromatography" ;
lin chrome_N = mkN "chrome" ;
lin chromesthesia_N = mkN "chromesthesia" ;
lin chromite_N = mkN "chromite" ;
lin chromium_N = mkN "chromium" ;
lin chromoblastomycosis_N = mkN "chromoblastomycosis" ;
lin chromogen_N = mkN "chromogen" ;
lin chromolithography_N = mkN "chromolithography" ;
lin chromophore_N = mkN "chromophore" ;
lin chromoplast_N = mkN "chromoplast" ;
lin chromosomal_A = mkA "chromosomal" ;
lin chromosome_N = mkN "chromosome" "chromosomes";
lin chromosphere_N = mkN "chromosphere" ;
lin chronic_A = compoundA (mkA "chronic");
lin chronically_Adv = mkAdv "chronically";
lin chronicle_N = mkN "chronicle" "chronicles";
lin chronicle_V2 = mkV2 (mkV "chronicle" "chronicles" "chronicled" "chronicled" "chronicling");
lin chronicler_N = mkN "chronicler" "chroniclers";
lin chronograph_N = mkN "chronograph" ;
lin chronological_A = compoundA (mkA "chronological");
lin chronology_N = mkN "chronology" "chronologies";
lin chronometer_N = mkN "chronometer" "chronometers";
lin chronoscope_N = mkN "chronoscope" ;
lin chrysalis_N = mkN "chrysalis" "chrysalises";
lin chrysanthemum_N = mkN "chrysanthemum" "chrysanthemums";
lin chrysoberyl_N = mkN "chrysoberyl" ;
lin chrysolite_N = mkN "chrysolite" ;
lin chrysoprase_N = mkN "chrysoprase" ;
lin chrysotherapy_N = mkN "chrysotherapy" ;
lin chrysotile_N = mkN "chrysotile" ;
lin chthonian_A = mkA "chthonian" ;
lin chub_N = mkN "chub" ;
lin chubbiness_N = mkN "chubbiness" ;
lin chubby_A = mkA "chubby" "chubbier";
lin chuck_N = mkN "chuck" "chucks";
lin chuck_V2 = mkV2 (mkV "chuck" "chucks" "chucked" "chucked" "chucking");
lin chucker_out_N = mkN "chucker-out" "IRREG";
lin chuckle_N = mkN "chuckle" "chuckles";
lin chuckle_V = mkV "chuckle" "chuckles" "chuckled" "chuckled" "chuckling";
lin chuckle_VS = mkVS (mkV "chuckle" "chuckles" "chuckled" "chuckled" "chuckling");
lin chuckwalla_N = mkN "chuckwalla" ;
lin chufa_N = mkN "chufa" ;
lin chuffed_A = mkA "chuffed" ;
lin chug_N = mkN "chug" "chugs";
lin chug_V = mkV "chug" "chugs" "chugged" "chugged" "chugging";
lin chukka_N = mkN "chukka" ;
lin chukker_N = mkN "chukker" "chukkers";
lin chum_N = mkN "chum" "chums";
lin chum_V = mkV "chum" "chums" "chummed" "chummed" "chumming";
lin chumminess_N = mkN "chumminess" ;
lin chummy_A = mkA "chummy" "chummier";
lin chump_N = mkN "chump" "chumps";
lin chunga_N = mkN "chunga" ;
lin chungking_PN = mkPN "Chungking";
lin chunk_N = mkN "chunk" "chunks";
lin chunky_A = mkA "chunky" "chunkier";
lin chunnel_N = mkN "chunnel" ;
lin church_N = mkN "church" "churches";
lin churchgoer_N = mkN "churchgoer" "churchgoers";
lin churchgoing_A = mkA "churchgoing" ;
lin churchly_A = mkA "churchly" ;
lin churchman_N = mkN masculine (mkN "churchman" "churchmen");
lin churchwarden_N = mkN "churchwarden" "churchwardens";
lin churchyard_N = mkN "churchyard" "churchyards";
lin churidars_N = mkN "churidars" ;
lin churl_N = mkN "churl" "churls";
lin churlish_A = compoundA (mkA "churlish");
lin churn_N = mkN "churn" "churns";
lin churn_V = mkV "churn" "churns" "churned" "churned" "churning";
lin churn_V2 = mkV2 (mkV "churn" "churns" "churned" "churned" "churning");
lin chute_N = mkN "chute" "chutes";
lin chutney_N = mkN "chutney" "chutneys";
lin chutzpa_N = mkN "chutzpa" ;
lin chutzpanik_N = mkN "chutzpanik" ;
lin chylaceous_A = mkA "chylaceous" ;
lin chyle_N = mkN "chyle" ;
lin chyliferous_A = mkA "chyliferous" ;
lin chylific_A = mkA "chylific" ;
lin chylomicron_N = mkN "chylomicron" ;
lin chyme_N = mkN "chyme" ;
lin cia_N = mkN "cia" ;
lin cicada_N = mkN "cicada" "cicadas";
lin cicala_N = mkN "cicala" "cicalas";
lin cicatrice_N = mkN "cicatrice" "cicatrices";
lin cicatrix_N = mkN "cicatrix" "cicatrices" {- FIXME: guessed plural form -};
lin cicero_N = mkN "cicero" ;
lin cicerone_N = mkN "cicerone" "ciceroni";
lin cichlid_N = mkN "cichlid" ;
lin cid_N = mkN "cid" ;
lin cider_N = mkN "cider" "ciders";
lin ciderpress_N = mkN "ciderpress" "ciderpresses";
lin cif_PN = mkPN "Cif";
lin cigar_N = mkN "cigar" "cigars";
lin cigar_shaped_A = compoundA (mkA "cigar-shaped");
lin cigarette_N = mkN "cigarette" "cigarettes";
lin cigarette_case_N = mkN "cigarette-case" "cigarette-cases";
lin cigarette_holder_N = mkN "cigarette-holder" "cigarette-holders";
lin cigarette_paper_N = mkN "cigarette-paper" "cigarette-papers";
lin cigarillo_N = mkN "cigarillo" ;
lin ciliary_A = mkA "ciliary" ;
lin ciliate_A = mkA "ciliate" ;
lin ciliate_N = mkN "ciliate" ;
lin cilium_N = mkN "cilium" ;
lin cimetidine_N = mkN "cimetidine" ;
lin cinch_N = mkN "cinch" "cinches";
lin cinch_V2 = mkV2 (mkV "cinch");
lin cinchona_N = mkN "cinchona" "cinchonas";
lin cinchonine_N = mkN "cinchonine" ;
lin cincinnati_PN = mkPN "Cincinnati";
lin cincture_N = mkN "cincture" "cinctures";
lin cinder_N = mkN "cinder" "cinders";
lin cinder_track_N = mkN "cinder-track" "cinder-tracks";
lin cinderella_N = mkN "cinderella" "cinderellas";
lin cinderford_PN = mkPN "Cinderford";
lin cine_camera_N = mkN "cine-camera" "cine-cameras";
lin cine_film_N = mkN "cine-film" "cine-films";
lin cine_projector_N = mkN "cine-projector" "cine-projectors";
lin cinema_N = mkN "cinema" "cinemas";
lin cinematic_A = compoundA (mkA "cinematic");
lin cinematography_N = mkN "cinematography" ;
lin cineraria_N = mkN "cineraria" ;
lin cinerary_A = mkA "cinerary" ;
lin cingulum_N = mkN "cingulum" ;
lin cinnabar_N = mkN "cinnabar" ;
lin cinnamon_N = mkN "cinnamon" ;
lin cinquefoil_N = mkN "cinquefoil" "cinquefoils";
lin cipher_N = mkN "cipher" "ciphers";
lin cipher_V = mkV "cipher" "ciphers" "ciphered" "ciphered" "ciphering";
lin cipher_V2 = mkV2 (mkV "cipher" "ciphers" "ciphered" "ciphered" "ciphering");
lin ciprofloxacin_N = mkN "ciprofloxacin" ;
lin circa_Prep = mkPrep "circa";
lin circadian_A = mkA "circadian" ;
lin circle_N = mkN "circle" "circles";
lin circle_V = mkV "circle" "circles" "circled" "circled" "circling";
lin circle_V2 = mkV2 (mkV "circle" "circles" "circled" "circled" "circling");
lin circlet_N = mkN "circlet" "circlets";
lin circuit_N = mkN "circuit" "circuits";
lin circuitous_A = compoundA (mkA "circuitous");
lin circuitry_N = mkN "circuitry" ;
lin circular_A = compoundA (mkA "circular");
lin circular_N = mkN "circular" "circulars";
lin circularity_N = mkN "circularity" ;
lin circularization_N = mkN "circularization" ;
lin circularize_V2 = mkV2 (mkV "circularize" "circularizes" "circularized" "circularized" "circularizing");
lin circulate_V = mkV "circulate" "circulates" "circulated" "circulated" "circulating";
lin circulate_V2 = mkV2 (mkV "circulate" "circulates" "circulated" "circulated" "circulating");
lin circulation_N = mkN "circulation" "circulations";
lin circulative_A = mkA "circulative" ;
lin circulatory_A = mkA "circulatory" ;
lin circumcise_V2 = mkV2 (mkV "circumcise" "circumcises" "circumcised" "circumcised" "circumcising");
lin circumcision_N = mkN "circumcision" "circumcisions";
lin circumduction_N = mkN "circumduction" ;
lin circumference_N = mkN "circumference" "circumferences";
lin circumferential_A = mkA "circumferential" ;
lin circumflex_N = mkN "circumflex" "circumflexes";
lin circumlocution_N = mkN "circumlocution" "circumlocutions";
lin circumlocutious_A = mkA "circumlocutious" ;
lin circumnavigate_V2 = mkV2 (mkV "circumnavigate" "circumnavigates" "circumnavigated" "circumnavigated" "circumnavigating");
lin circumnavigation_N = mkN "circumnavigation" "circumnavigations";
lin circumpolar_A = mkA "circumpolar" ;
lin circumscribe_V2 = mkV2 (mkV "circumscribe" "circumscribes" "circumscribed" "circumscribed" "circumscribing");
lin circumscription_N = mkN "circumscription" "circumscriptions";
lin circumspect_A = compoundA (mkA "circumspect");
lin circumspection_N = mkN "circumspection" ;
lin circumstance_N = mkN "circumstance" "circumstances";
lin circumstances_N = mkN "circumstances" ;
lin circumstantial_A = compoundA (mkA "circumstantial");
lin circumvent_V2 = mkV2 (mkV "circumvent" "circumvents" "circumvented" "circumvented" "circumventing");
lin circumvention_N = mkN "circumvention" "circumventions";
lin circumvolution_N = mkN "circumvolution" ;
lin circus_N = mkN "circus" "circuses";
lin cirencester_PN = mkPN "Cirencester";
lin cirque_N = mkN "cirque" ;
lin cirrhosis_N = mkN "cirrhosis" ;
lin cirrocumulus_N = mkN "cirrocumulus" ;
lin cirrostratus_N = mkN "cirrostratus" ;
lin cirrus_N = mkN "cirrus" ;
lin cisalpine_A = mkA "cisalpine" ;
lin cisco_N = mkN "cisco" ;
lin cismontane_A = mkA "cismontane" ;
lin cissy_A = compoundA (mkA "cissy");
lin cissy_N = mkN "cissy" "cissies";
lin cistern_N = mkN "cistern" "cisterns";
lin cisterna_N = mkN "cisterna" ;
lin citadel_N = mkN "citadel" "citadels";
lin citation_N = mkN "citation" "citations";
lin cite_V2 = mkV2 (mkV "cite" "cites" "cited" "cited" "citing");
lin citified_A = mkA "citified" ;
lin citizenFem_N = mkN feminine (mkN "citizen" "citizens");
lin citizenMasc_N = mkN masculine (mkN "citizen" "citizens");
lin citizenry_N = mkN "citizenry" ;
lin citizenship_N = mkN "citizenship" "citizenships";
lin citrange_N = mkN "citrange" ;
lin citrate_N = mkN "citrate" ;
lin citric_A = compoundA (mkA "citric");
lin citrine_N = mkN "citrine" ;
lin citron_N = mkN "citron" "citrons";
lin citronwood_N = mkN "citronwood" ;
lin citrous_A = compoundA (mkA "citrous");
lin citrulline_N = mkN "citrulline" ;
lin citrus_N = mkN "citrus" "citruses";
lin cittern_N = mkN "cittern" ;
lin city_N = mkN "city" "cities";
lin cityscape_N = mkN "cityscape" ;
lin citywide_A = mkA "citywide" ;
lin civet_N = mkN "civet" "civets";
lin civet_cat_N = mkN "civet-cat" "civet-cats";
lin civic_A = compoundA (mkA "civic");
lin civics_N = mkN "civics" "civics";
lin civies_N = mkN "civies" ;
lin civil_A = compoundA (mkA "civil");
lin civilian_A = compoundA (mkA "civilian");
lin civilian_N = mkN "civilian" "civilians";
lin civility_N = mkN "civility" "civilities";
lin civilization_N = mkN "civilization" "civilizations";
lin civilize_V2 = mkV2 (mkV "civilize" "civilizes" "civilized" "civilized" "civilizing");
lin civvy_street_PN = mkPN "Civvy street";
lin clabber_N = mkN "clabber" ;
lin clack_N = mkN "clack" "clacks";
lin clack_V = mkV "clack" "clacks" "clacked" "clacked" "clacking";
lin clackmannon_PN = mkPN "Clackmannon";
lin clacton_PN = mkPN "Clacton";
lin clad_V = mkV "clad" "clads" "clad" "clad" "cladding";
lin clad_V2 = mkV2 (mkV "clad" "clads" "clad" "clad" "cladding");
lin clade_N = mkN "clade" ;
lin cladistics_N = mkN "cladistics" ;
lin cladode_N = mkN "cladode" ;
lin cladogram_N = mkN "cladogram" ;
lin claim_N = mkN "claim" "claims";
lin claim_V = mkV "claim" "claims" "claimed" "claimed" "claiming";
lin claim_V2 = mkV2 (mkV "claim" "claims" "claimed" "claimed" "claiming");
lin claim_VS = mkVS (mkV "claim" "claims" "claimed" "claimed" "claiming");
lin claim_VV = mkVV (mkV "claim" "claims" "claimed" "claimed" "claiming");
lin claimant_N = mkN "claimant" "claimants";
lin clairvoyance_N = mkN "clairvoyance" ;
lin clairvoyant_A = mkA "clairvoyant" ;
lin clairvoyant_N = mkN "clairvoyant" "clairvoyants";
lin clam_N = mkN "clam" "clams";
lin clam_V = mkV "clam" "clams" "clammed" "clammed" "clamming";
lin clamant_A = mkA "clamant" ;
lin clamatorial_A = mkA "clamatorial" ;
lin clambake_N = mkN "clambake" "clambakes";
lin clamber_N = mkN "clamber" "clambers";
lin clamber_V = mkV "clamber" "clambers" "clambered" "clambered" "clambering";
lin clammy_A = mkA "clammy" "clammier";
lin clammyweed_N = mkN "clammyweed" ;
lin clamor_N = mkN "clamor" ;
lin clamorous_A = compoundA (mkA "clamorous");
lin clamour_N = mkN "clamour" "clamours";
lin clamour_V = mkV "clamour" "clamours" "clamoured" "clamoured" "clamouring";
lin clamour_V2 = mkV2 (mkV "clamour" "clamours" "clamoured" "clamoured" "clamouring");
lin clamp_N = mkN "clamp" "clamps";
lin clamp_V = mkV "clamp" "clamps" "clamped" "clamped" "clamping";
lin clamp_V2 = mkV2 (mkV "clamp" "clamps" "clamped" "clamped" "clamping");
lin clamp_down_N = mkN "clamp-down" "clamp-downs";
lin clampdown_N = mkN "clampdown" ;
lin clamshell_N = mkN "clamshell" ;
lin clan_N = mkN "clan" "clans";
lin clandestine_A = compoundA (mkA "clandestine");
lin clang_N = mkN "clang" "clangs";
lin clang_V = mkV "clang" "clangs" "clanged" "clanged" "clanging";
lin clang_V2 = mkV2 (mkV "clang" "clangs" "clanged" "clanged" "clanging");
lin clanger_N = mkN "clanger" "clangers";
lin clangorous_A = compoundA (mkA "clangorous");
lin clangour_N = mkN "clangour" ;
lin clank_N = mkN "clank" "clanks";
lin clank_V = mkV "clank" "clanks" "clanked" "clanked" "clanking";
lin clank_V2 = mkV2 (mkV "clank" "clanks" "clanked" "clanked" "clanking");
lin clannish_A = compoundA (mkA "clannish");
lin clannishness_N = mkN "clannishness" ;
lin clansman_N = mkN masculine (mkN "clansman" "clansmen");
lin clap_N = mkN "clap" "claps";
lin clap_V = mkV "clap" "claps" "clapped" "clapped" "clapping";
lin clap_V2 = mkV2 (mkV "clap" "claps" "clapped" "clapped" "clapping");
lin clapboard_N = mkN "clapboard" "clapboards";
lin clapper_N = mkN "clapper" "clappers";
lin clapperboard_N = mkN "clapperboard" "clapperboards";
lin claptrap_N = mkN "claptrap" ;
lin claque_N = mkN "claque" "claques";
lin clare_PN = mkPN "Clare";
lin clarence_N = mkN "clarence" ;
lin claret_N = mkN "claret" "clarets";
lin clarification_N = mkN "clarification" ;
lin clarify_V = mkV "clarify" "clarifies" "clarified" "clarified" "clarifying";
lin clarify_V2 = mkV2 (mkV "clarify" "clarifies" "clarified" "clarified" "clarifying");
lin clarinet_N = mkN "clarinet" "clarinets";
lin clarinetistMasc_N = mkN masculine (mkN (variants {"clarinetist"; "clarinettist"}));
lin clarinetistFem_N = mkN feminine (mkN (variants {"clarinetist"; "clarinettist"}));
lin clarion_A = mkA "clarion";
lin clarion_N = mkN "clarion" "clarions";
lin clarity_N = mkN "clarity";
lin clarkston_PN = mkPN "Clarkston";
lin claro_N = mkN "claro" ;
lin clarrie_PN = mkPN "Clarrie";
lin clary_N = mkN "clary" ;
lin clash_N = mkN "clash" "clashes";
lin clash_V = mkV "clash" "clashes" "clashed" "clashed" "clashing";
lin clash_V2 = mkV2 (mkV "clash" "clashes" "clashed" "clashed" "clashing");
lin clasp_N = mkN "clasp" "clasps";
lin clasp_V = mkV "clasp" "clasps" "clasped" "clasped" "clasping";
lin clasp_V2 = mkV2 (mkV "clasp" "clasps" "clasped" "clasped" "clasping");
lin clasp_knife_N = mkN "clasp-knife" "clasp-knives";
lin class_N = mkN "class" "classes";
lin class_V2 = mkV2 (mkV "class" "classes" "classed" "classed" "classing");
lin class_conscious_A = compoundA (mkA "class-conscious");
lin class_feeling_N = mkN "class-feeling" ;
lin class_fellow_N = mkN "class-fellow" "class-fellows";
lin class_list_N = mkN "class-list" "class-lists";
lin class_warfare_N = mkN "class-warfare" ;
lin classic_A = compoundA (mkA "classic");
lin classic_N = mkN "classic" "classics";
lin classical_A = compoundA (mkA "classical");
lin classicism_N = mkN "classicism" ;
lin classicist_N = mkN "classicist" "classicists";
lin classicistic_A = mkA "classicistic" ;
lin classics_N = mkN "classics" "classics";
lin classifiable_A = compoundA (mkA "classifiable");
lin classification_N = mkN "classification" "classifications";
lin classificatory_A = mkA "classificatory" ;
lin classifier_N = mkN "classifier" ;
lin classify_V2 = mkV2 (mkV "classify" "classifies" "classified" "classified" "classifying");
lin classless_A = compoundA (mkA "classless");
lin classmate_N = mkN "classmate" "classmates";
lin classroom_N = mkN "classroom" "classrooms";
lin classwork_N = mkN "classwork" ;
lin classy_A = mkA "classy" "classier";
lin clast_N = mkN "clast" ;
lin clastic_A = mkA "clastic" ;
lin clathrate_A = mkA "clathrate" ;
lin clatter_N = mkN "clatter" "clatters";
lin clatter_V = mkV "clatter" "clatters" "clattered" "clattered" "clattering";
lin clatter_V2 = mkV2 (mkV "clatter" "clatters" "clattered" "clattered" "clattering");
lin clattery_A = mkA "clattery" ;
lin claud_PN = mkPN "Claud";
lin claude_PN = mkPN "Claude";
lin clausal_A = mkA "clausal" ;
lin clause_N = mkN "clause" "clauses";
lin claustrophobe_N = mkN "claustrophobe" ;
lin claustrophobia_N = mkN "claustrophobia" ;
lin claustrophobic_A = compoundA (mkA "claustrophobic");
lin claustrum_N = mkN "claustrum" ;
lin clavichord_N = mkN "clavichord" "clavichords";
lin clavicle_N = mkN "clavicle" "clavicles";
lin clavier_N = mkN "clavier" ;
lin claw_N = mkN "claw" "claws";
lin claw_V2 = mkV2 (mkV "claw" "claws" "clawed" "clawed" "clawing");
lin clawback_N = mkN "clawback" ;
lin clawfoot_N = mkN "clawfoot" ;
lin clawhammer_N = mkN "clawhammer" "clawhammers";
lin clawlike_A = mkA "clawlike" ;
lin clay_N = mkN "clay" ;
lin clay_cross_PN = mkPN "Clay cross";
lin clayey_A = compoundA (mkA "clayey");
lin claymore_N = mkN "claymore" ;
lin claystone_N = mkN "claystone" ;
lin clean_A = mkA "clean" "cleaner";
lin clean_Adv = mkAdv "clean";
lin clean_N = mkN "clean" "cleans";
lin clean_V = mkV "clean" "cleans" "cleaned" "cleaned" "cleaning";
lin clean_V2 = mkV2 (mkV "clean" "cleans" "cleaned" "cleaned" "cleaning");
lin clean_bowled_A = compoundA (mkA "clean-bowled");
lin clean_cut_A = compoundA (mkA "clean-cut");
lin clean_limbed_A = compoundA (mkA "clean-limbed");
lin clean_living_A = compoundA (mkA "clean-living");
lin clean_shaven_A = compoundA (mkA "clean-shaven");
lin clean_up_N = mkN "clean-up" "clean-ups";
lin cleanable_A = mkA "cleanable" ;
lin cleaner_N = mkN "cleaner" "cleaners";
lin cleaners_N = mkN "cleaners" ;
lin cleaning_N = mkN "cleaning" ;
lin cleanliness_N = mkN "cleanliness" ;
lin cleanly_A = mkA "cleanly" "cleanlier";
lin cleanness_N = mkN "cleanness" ;
lin cleanse_V2 = mkV2 (mkV "cleanse" "cleanses" "cleansed" "cleansed" "cleansing");
lin cleanser_N = mkN "cleanser" "cleansers";
lin cleansing_A = mkA "cleansing" ;
lin cleanup_N = mkN "cleanup" ;
lin clear_A = mkA "clear" "clearer";
lin clear_Adv = mkAdv "clear";
lin clear_N = mkN "clear" "clears";
lin clear_V = mkV "clear" "clears" "cleared" "cleared" "clearing";
lin clear_V2 = mkV2 (mkV "clear" "clears" "cleared" "cleared" "clearing");
lin clear_V2V = mkV2V (mkV "clear" "clears" "cleared" "cleared" "clearing") noPrep to_Prep ;
lin clear_cut_Adv = mkAdv "clear-cut";
lin clear_headed_A = compoundA (mkA "clear-headed");
lin clear_sighted_A = compoundA (mkA "clear-sighted");
lin clearance_N = mkN "clearance" "clearances";
lin clearheaded_A = mkA "clearheaded" ;
lin clearing_N = mkN "clearing" "clearings";
lin clearing_house_N = mkN "clearing-house" "clearing-houses";
lin clearness_N = mkN "clearness" ;
lin clearway_N = mkN "clearway" "clearways";
lin cleat_N = mkN "cleat" "cleats";
lin cleator_moor_PN = mkPN "Cleator moor";
lin cleats_N = mkN "cleats" ;
lin cleavable_A = mkA "cleavable" ;
lin cleavage_N = mkN "cleavage" "cleavages";
lin cleave_V = mkV "cleave" "cleaves" "cleaved" "cleaved" "cleaving";
lin cleave_V2 = mkV2 (mkV "cleave" "cleaves" "cleaved" "cleaved" "cleaving");
lin cleaver_N = mkN "cleaver" "cleavers";
lin cleavers_N = mkN "cleavers" ;
lin cleethorpes_PN = mkPN "Cleethorpes";
lin clef_N = mkN "clef" "clefs";
lin cleft_A = mkA "cleft" ;
lin cleft_N = mkN "cleft" "clefts";
lin cleistogamous_A = mkA "cleistogamous" ;
lin cleistogamy_N = mkN "cleistogamy" ;
lin cleistothecium_N = mkN "cleistothecium" ;
lin clem_PN = mkPN "Clem";
lin clematis_N = mkN "clematis" ;
lin clemency_N = mkN "clemency" ;
lin clement_A = compoundA (mkA "clement");
lin clement_PN = mkPN "Clement";
lin clementine_N = mkN "clementine" ;
lin clench_V2 = mkV2 (mkV "clench" "clenches" "clenched" "clenched" "clenching");
lin clerestory_N = mkN "clerestory" "clerestories";
lin clergy_N = mkN "clergy" "clergies";
lin clergyman_N = mkN masculine (mkN "clergyman" "clergymen");
lin cleric_N = mkN human (mkN "cleric" "clerics");
lin clerical_A = compoundA (mkA "clerical");
lin clericalism_N = mkN "clericalism" ;
lin clericalist_N = mkN "clericalist" ;
lin clerihew_N = mkN "clerihew" "clerihews";
lin clerk_N = mkN "clerk" "clerks";
lin clerk_V = mkV "clerk" "clerks" "clerked" "clerked" "clerking";
lin clerkship_N = mkN "clerkship" ;
lin clermont_ferrand_PN = mkPN "Clermont-ferrand";
lin clevedon_PN = mkPN "Clevedon";
lin cleveland_PN = mkPN "Cleveland";
lin clever_A = mkA "clever" "cleverer";
lin cleverness_N = mkN "cleverness" ;
lin clevis_N = mkN "clevis" ;
lin clew_N = mkN "clew" "clews";
lin clew_V2 = mkV2 (mkV "clew" "clews" "clewed" "clewed" "clewing");
lin clews_N = mkN "clews" ;
lin cliche_N = mkN "cliché" "clichés";
lin cliched_A = mkA "cliched" ;
lin click_N = mkN "click" "clicks";
lin click_V = mkV "click" "clicks" "clicked" "clicked" "clicking";
lin client_N = mkN "client" "clients";
lin clientage_N = mkN "clientage" ;
lin clientele_N = mkN "clientele" "clienteles";
lin cliff_N = mkN "cliff" "cliffs";
lin cliff_PN = mkPN "Cliff";
lin cliff_hanger_N = mkN "cliff-hanger" "cliff-hangers";
lin cliffhanger_N = mkN "cliffhanger" ;
lin clifford_PN = mkPN "Clifford";
lin climacteric_N = mkN "climacteric" "climacterics";
lin climactic_A = compoundA (mkA "climactic");
lin climate_N = mkN "climate" "climates";
lin climatic_A = compoundA (mkA "climatic");
lin climatically_Adv = mkAdv "climatically";
lin climatologist_N = mkN "climatologist" ;
lin climatology_N = mkN "climatology" ;
lin climax_N = mkN "climax" "climaxes";
lin climax_V = mkV "climax" "climaxes" "climaxed" "climaxed" "climaxing";
lin climax_V2 = mkV2 (mkV "climax" "climaxes" "climaxed" "climaxed" "climaxing");
lin climb_N = mkN "climb" "climbs";
lin climb_V = mkV "climb" "climbs" "climbed" "climbed" "climbing";
lin climb_V2 = mkV2 (mkV "climb" "climbs" "climbed" "climbed" "climbing");
lin climb_down_N = mkN "climb-down" "climb-downs";
lin climber_N = mkN "climber" "climbers";
lin clime_N = mkN "clime" "climes";
lin clinch_N = mkN "clinch" "clinches";
lin clinch_V = mkV "clinch" "clinches" "clinched" "clinched" "clinching";
lin clinch_V2 = mkV2 (mkV "clinch" "clinches" "clinched" "clinched" "clinching");
lin clincher_N = mkN "clincher" "clinchers";
lin cling_N = mkN "cling" ;
lin cling_V = IrregEng.cling_V;
lin clingfish_N = mkN "clingfish" ;
lin clinic_N = mkN "clinic" "clinics";
lin clinical_A = compoundA (mkA "clinical");
lin clinician_N = mkN "clinician" ;
lin clinid_N = mkN "clinid" ;
lin clink_N = mkN "clink" "clinks";
lin clink_V = mkV "clink" "clinks" "clinked" "clinked" "clinking";
lin clink_V2 = mkV2 (mkV "clink" "clinks" "clinked" "clinked" "clinking");
lin clinker_N = mkN "clinker" "clinkers";
lin clinker_built_A = compoundA (mkA "clinker-built");
lin clinocephaly_N = mkN "clinocephaly" ;
lin clinodactyly_N = mkN "clinodactyly" ;
lin clinometer_N = mkN "clinometer" ;
lin clinquant_A = mkA "clinquant" ;
lin clintonia_N = mkN "clintonia" ;
lin clip_N = mkN "clip" "clips";
lin clip_V2 = mkV2 (mkV "clip" "clips" "clipped" "clipped" "clipping");
lin clip_joint_N = mkN "clip-joint" "clip-joints";
lin clip_on_A = compoundA (mkA "clip-on");
lin clipboard_N = mkN "clipboard" ;
lin clipper_N = mkN "clipper" "clippers";
lin clipping_N = mkN "clipping" "clippings";
lin clique_N = mkN "clique" "cliques";
lin cliquish_A = compoundA (mkA "cliquish");
lin clitheroe_PN = mkPN "Clitheroe";
lin clitoral_A = mkA "clitoral" ;
lin clitoridectomy_N = mkN "clitoridectomy" ;
lin clitoris_N = mkN "clitoris" "clitorises";
lin clive_PN = mkPN "Clive";
lin cloaca_N = mkN "cloaca" ;
lin cloak_N = mkN "cloak" "cloaks";
lin cloak_V2 = mkV2 (mkV "cloak" "cloaks" "cloaked" "cloaked" "cloaking");
lin cloakmaker_N = mkN "cloakmaker" ;
lin cloakroom_N = mkN "cloakroom" "cloakrooms";
lin clobber_N = mkN "clobber" "clobbers";
lin clobber_V2 = mkV2 (mkV "clobber" "clobbers" "clobbered" "clobbered" "clobbering");
lin cloche_N = mkN "cloche" "cloches";
lin clock_N = mkN "clock" "clocks";
lin clock_V = mkV "clock" "clocks" "clocked" "clocked" "clocking";
lin clock_V2 = mkV2 (mkV "clock" "clocks" "clocked" "clocked" "clocking");
lin clock_dial_N = mkN "clock-dial" "clock-dials";
lin clock_face_N = mkN "clock-face" "clock-faces";
lin clock_golf_N = mkN "clock-golf" ;
lin clock_tower_N = mkN "clock-tower" "clock-towers";
lin clock_watching_N = mkN "clock-watching" ;
lin clocking_N = mkN "clocking" ;
lin clocksmith_N = mkN "clocksmith" ;
lin clockwise_A = mkA "clockwise" ;
lin clockwise_Adv = mkAdv "clockwise";
lin clockwork_N = mkN "clockwork" "clockworks";
lin clod_N = mkN "clod" "clods";
lin cloddish_A = mkA "cloddish" ;
lin clodhopper_N = mkN "clodhopper" "clodhoppers";
lin clofibrate_N = mkN "clofibrate" ;
lin clog_N = mkN "clog" "clogs";
lin clog_V = mkV "clog" "clogs" "clogged" "clogged" "clogging";
lin clog_V2 = mkV2 (mkV "clog" "clogs" "clogged" "clogged" "clogging");
lin clog_dance_N = mkN "clog-dance" "clog-dances";
lin cloggy_A = mkA "cloggy" "cloggier";
lin cloisonne_N = mkN "cloisonné" ;
lin cloister_N = mkN "cloister" "cloisters";
lin cloister_V2 = mkV2 (mkV "cloister" "cloisters" "cloistered" "cloistered" "cloistering");
lin clomiphene_N = mkN "clomiphene" ;
lin clomipramine_N = mkN "clomipramine" ;
lin clonal_A = mkA "clonal" ;
lin clone_N = mkN "clone" "clones";
lin clone_V2 = mkV2 (mkV "clone");
lin clonic_A = mkA "clonic" ;
lin clonidine_N = mkN "clonidine" ;
lin cloning_N = mkN "cloning" ;
lin clonus_N = mkN "clonus" ;
lin close_A = mkA "close" "closer";
lin close_Adv = mkAdv "close";
lin close_N = mkN "close" "closes";
lin close_V = mkV "close" "closes" "closed" "closed" "closing";
lin close_V2 = mkV2 (mkV "close" "closes" "closed" "closed" "closing");
lin close_V2V = mkV2V (mkV "close" "closes" "closed" "closed" "closing") noPrep to_Prep ;
lin close_VA = mkVA (mkV "close" "closes" "closed" "closed" "closing");
lin close_VS = mkVS (mkV "close" "closes" "closed" "closed" "closing");
lin close_cropped_A = compoundA (mkA "close-cropped");
lin close_cut_A = compoundA (mkA "close-cut");
lin close_down_N = mkN "close-down" "close-downs";
lin close_fisted_A = compoundA (mkA "close-fisted");
lin close_fitting_A = compoundA (mkA "close-fitting");
lin close_grained_A = compoundA (mkA "close-grained");
lin close_hauled_A = compoundA (mkA "close-hauled");
lin close_set_A = compoundA (mkA "close-set");
lin close_up_N = mkN "close-up" "close-ups";
lin closefisted_A = mkA "closefisted" ;
lin closeness_N = mkN "closeness" ;
lin closeout_N = mkN "closeout" ;
lin closer_N = mkN "closer" ;
lin closet_A = compoundA (mkA "closet");
lin closet_N = mkN "closet" "closets";
lin closet_V2 = mkV2 (mkV "closet" "closets" "closeted" "closeted" "closeting");
lin closeup_N = mkN "closeup" ;
lin closing_N = mkN "closing" ;
lin clostridium_N = mkN "clostridium" ;
lin closure_N = mkN "closure" "closures";
lin clot_N = mkN "clot" "clots";
lin clot_V = mkV "clot" "clots" "clotted" "clotted" "clotting";
lin clot_V2 = mkV2 (mkV "clot" "clots" "clotted" "clotted" "clotting");
lin cloth_N = mkN "cloth" "cloths";
lin clothe_V2 = mkV2 (mkV "clothe" "clothes" "clothed" "clothed" "clothing");
lin clothes_basket_N = mkN "clothes-basket" "clothes-baskets";
lin clothes_hanger_N = mkN "clothes-hanger" "clothes-hangers";
lin clothes_moth_N = mkN "clothes-moth" "clothes-moths";
lin clothes_peg_N = mkN "clothes-peg" "clothes-pegs";
lin clothes_pin_N = mkN "clothes-pin" "clothes-pins";
lin clothesbrush_N = mkN "clothesbrush" ;
lin clotheshorse_N = mkN "clotheshorse" "clotheshorses";
lin clothesless_A = mkA "clothesless" ;
lin clothesline_N = mkN "clothesline" "clotheslines";
lin clothespin_N = mkN "clothespin" ;
lin clothier_N = mkN "clothier" "clothiers";
lin clothing_N = mkN "clothing" ;
lin cloud_N = mkN "cloud" "clouds";
lin cloud_V = mkV "cloud" "clouds" "clouded" "clouded" "clouding";
lin cloud_V2 = mkV2 (mkV "cloud" "clouds" "clouded" "clouded" "clouding");
lin cloud_bank_N = mkN "cloud-bank" "cloud-banks";
lin cloud_capped_A = compoundA (mkA "cloud-capped");
lin cloud_cuckoo_land_N = mkN "cloud-cuckoo-land" "cloud-cuckoo-lands";
lin cloudberry_N = mkN "cloudberry" ;
lin cloudburst_N = mkN "cloudburst" "cloudbursts";
lin cloudiness_N = mkN "cloudiness" ;
lin clouding_N = mkN "clouding" ;
lin cloudless_A = compoundA (mkA "cloudless");
lin cloudlessness_N = mkN "cloudlessness" ;
lin cloudlike_A = mkA "cloudlike" ;
lin cloudy_A = mkA "cloudy" "cloudier";
lin clout_N = mkN "clout" "clouts";
lin clout_V2 = mkV2 (mkV "clout" "clouts" "clouted" "clouted" "clouting");
lin clove_N = mkN "clove" "cloves";
lin clove_hitch_N = mkN "clove hitch" "clove hitches";
lin cloven_A = mkA "cloven" ;
lin clover_N = mkN "clover" ;
lin cloverleaf_N = mkN "cloverleaf" "cloverleaves" {- FIXME: guessed plural form -};
lin clowder_N = mkN "clowder" ;
lin clown_N = mkN "clown" "clowns";
lin clown_V = mkV "clown" "clowns" "clowned" "clowned" "clowning";
lin clowne_PN = mkPN "Clowne";
lin clownish_A = compoundA (mkA "clownish");
lin cloy_V = mkV "cloy" "cloys" "cloyed" "cloyed" "cloying";
lin cloy_V2 = mkV2 (mkV "cloy" "cloys" "cloyed" "cloyed" "cloying");
lin cloyingly_Adv = mkAdv "cloyingly" ;
lin clozapine_N = mkN "clozapine" ;
lin cloze_A = mkA "cloze" ;
lin club_N = mkN "club" "clubs";
lin club_V = mkV "club" "clubs" "clubbed" "clubbed" "clubbing";
lin club_V2 = mkV2 (mkV "club" "clubs" "clubbed" "clubbed" "clubbing");
lin club_footed_A = compoundA (mkA "club-footed");
lin clubbable_A = compoundA (mkA "clubbable");
lin clubbing_N = mkN "clubbing" ;
lin clubbish_A = mkA "clubbish" ;
lin clubfoot_N = mkN "clubfoot" "clubfeet" {- FIXME: guessed plural form -};
lin clubfooted_A = mkA "clubfooted" ;
lin clubhouse_N = mkN "clubhouse" "clubhouses";
lin clubroom_N = mkN "clubroom" ;
lin cluck_N = mkN "cluck" "clucks";
lin cluck_V = mkV "cluck" "clucks" "clucked" "clucked" "clucking";
lin clue_N = mkN "clue" "clues";
lin clueless_A = mkA "clueless" ;
lin clumber_N = mkN "clumber" ;
lin clump_N = mkN "clump" "clumps";
lin clump_V = mkV "clump" "clumps" "clumped" "clumped" "clumping";
lin clump_V2 = mkV2 (mkV "clump" "clumps" "clumped" "clumped" "clumping");
lin clumsiness_N = mkN "clumsiness" ;
lin clumsy_A = mkA "clumsy" "clumsier";
lin clunch_N = mkN "clunch" ;
lin clunk_N = mkN "clunk" "clunks";
lin clunk_V = mkV "clunk" "clunks" "clunked" "clunked" "clunking";
lin clunky_A = mkA "clunky" ;
lin clusia_N = mkN "clusia" ;
lin cluster_N = mkN "cluster" "clusters";
lin cluster_V = mkV "cluster" "clusters" "clustered" "clustered" "clustering";
lin cluster_V2 = mkV2 (mkV "cluster" "clusters" "clustered" "clustered" "clustering");
lin clutch_N = mkN "clutch" "clutches";
lin clutch_V = mkV "clutch" "clutches" "clutched" "clutched" "clutching";
lin clutch_V2 = mkV2 (mkV "clutch" "clutches" "clutched" "clutched" "clutching");
lin clutter_N = mkN "clutter" "clutters";
lin clutter_V2 = mkV2 (mkV "clutter" "clutters" "cluttered" "cluttered" "cluttering");
lin clwyd_PN = mkPN "Clwyd";
lin clydach_PN = mkPN "Clydach";
lin clydebank_PN = mkPN "Clydebank";
lin clypeus_N = mkN "clypeus" ;
lin cm_N = mkN "cm" "cm";
lin co_N = mkN "co" ;
lin co_author_V2 = mkV2 (mkV "co-author");
lin co_ed_N = mkN "co-ed" "co-eds";
lin co_edit_V2 = mkV2 (mkV "co-edit");
lin co_exist_V = mkV "co-exist";
lin co_found_V2 = mkV2 (mkV "co-found");
lin co_manage_V2 = mkV2 (mkV "co-manage");
lin co_op_N = mkN "co-op" ;
lin co_opt_V2 = mkV2 (mkV "co-opt" "co-opts" "co-opted" "co-opted" "co-opting");
lin co_respondent_N = mkN "co-respondent" "co-respondents";
lin co_sponsor_V2 = mkV2 (mkV "co-sponsor");
lin co_star_N = mkN "co-star" "co-stars";
lin co_star_V = mkV "co-star" "co-stars" "co-starred" "co-starred" "co-starring";
lin co_star_V2 = mkV2 (mkV "co-star" "co-stars" "co-starred" "co-starred" "co-starring");
lin coach_N = mkN "coach" "coaches";
lin coach_V = mkV "coach" "coaches" "coached" "coached" "coaching";
lin coach_V2 = mkV2 (mkV "coach" "coaches" "coached" "coached" "coaching");
lin coach_builder_N = mkN "coach-builder" "coach-builders";
lin coachbuilder_N = mkN "coachbuilder" ;
lin coaching_N = mkN "coaching" ;
lin coachman_N = mkN masculine (mkN "coachman" "coachmen");
lin coachwhip_N = mkN "coachwhip" ;
lin coadjutor_N = mkN "coadjutor" ;
lin coagulable_A = mkA "coagulable" ;
lin coagulant_N = mkN "coagulant" ;
lin coagulase_N = mkN "coagulase" ;
lin coagulate_A = mkA "coagulate" ;
lin coagulate_V = mkV "coagulate" "coagulates" "coagulated" "coagulated" "coagulating";
lin coagulate_V2 = mkV2 (mkV "coagulate" "coagulates" "coagulated" "coagulated" "coagulating");
lin coagulation_N = mkN "coagulation" "coagulations";
lin coal_N = mkN "coal" "coals";
lin coal_V = mkV "coal" "coals" "coaled" "coaled" "coaling";
lin coal_V2 = mkV2 (mkV "coal" "coals" "coaled" "coaled" "coaling");
lin coal_gas_N = mkN "coal-gas" ;
lin coal_hole_N = mkN "coal-hole" "coal-holes";
lin coal_house_N = mkN "coal-house" "coal-houses";
lin coal_scuttle_N = mkN "coal-scuttle" "coal-scuttles";
lin coal_seam_N = mkN "coal-seam" "coal-seams";
lin coal_tar_N = mkN "coal-tar" ;
lin coalbin_N = mkN "coalbin" ;
lin coalesce_V = mkV "coalesce" "coalesces" "coalesced" "coalesced" "coalescing";
lin coalescence_N = mkN "coalescence" "coalescences";
lin coalescent_A = mkA "coalescent" ;
lin coalface_N = mkN "coalface" "coalfaces";
lin coalfield_N = mkN "coalfield" "coalfields";
lin coaling_station_N = mkN "coaling-station" "coaling-stations";
lin coalition_N = mkN "coalition" "coalitions";
lin coalman_N = mkN masculine (mkN "coalman" "coalmen");
lin coalmine_N = mkN "coalmine" "coalmines";
lin coalpit_N = mkN "coalpit" "coalpits";
lin coalville_PN = mkPN "Coalville";
lin coaming_N = mkN "coaming" "coamings";
lin coarctate_A = mkA "coarctate" ;
lin coarctation_N = mkN "coarctation" ;
lin coarse_A = mkA "coarse" "coarser";
lin coarsen_V = mkV "coarsen" "coarsens" "coarsened" "coarsened" "coarsening";
lin coarsen_V2 = mkV2 (mkV "coarsen" "coarsens" "coarsened" "coarsened" "coarsening");
lin coarseness_N = mkN "coarseness" ;
lin coast_N = mkN "coast" "coasts";
lin coast_V = mkV "coast" "coasts" "coasted" "coasted" "coasting";
lin coast_V2 = mkV2 (mkV "coast" "coasts" "coasted" "coasted" "coasting");
lin coastal_A = compoundA (mkA "coastal");
lin coaster_N = mkN "coaster" "coasters";
lin coastguard_N = mkN "coastguard" "coastguards";
lin coastguardsman_N = mkN masculine (mkN "coastguardsman" "coastguardsmen");
lin coastland_N = mkN "coastland" ;
lin coastline_N = mkN "coastline" "coastlines";
lin coastward_Adv = mkAdv "coastward" ;
lin coastwise_A = compoundA (mkA "coastwise");
lin coastwise_Adv = mkAdv "coastwise";
lin coat_N = mkN "coat" "coats";
lin coat_V2 = mkV2 (mkV "coat" "coats" "coated" "coated" "coating");
lin coat_hanger_N = mkN "coat-hanger" "coat-hangers";
lin coatbridge_PN = mkPN "Coatbridge";
lin coatdress_N = mkN "coatdress" ;
lin coatee_N = mkN "coatee" "coatees";
lin coati_N = mkN "coati" ;
lin coating_N = mkN "coating" "coatings";
lin coatrack_N = mkN "coatrack" ;
lin coattail_N = mkN "coattail" ;
lin coauthorMasc_N = mkN masculine (mkN "coauthor");
lin coauthorFem_N = mkN feminine (mkN "coauthor");
lin coax_V = mkV "coax" "coaxes" "coaxed" "coaxed" "coaxing";
lin coax_V2 = mkV2 (mkV "coax" "coaxes" "coaxed" "coaxed" "coaxing");
lin coaxial_A = mkA "coaxial" ;
lin coaxing_N = mkN "coaxing" "coaxings";
lin coaxingly_Adv = mkAdv "coaxingly";
lin cob_N = mkN "cob" "cobs";
lin cob_nut_N = mkN "cob-nut" "cob-nuts";
lin cobalt_N = mkN "cobalt" ;
lin cobaltite_N = mkN "cobaltite" ;
lin cobber_N = mkN "cobber" "cobbers";
lin cobble_N = mkN "cobble" "cobbles";
lin cobble_V2 = mkV2 (mkV "cobble" "cobbles" "cobbled" "cobbled" "cobbling");
lin cobbler_N = mkN "cobbler" "cobblers";
lin cobblers_N = mkN "cobblers" ;
lin cobblestone_N = mkN "cobblestone" "cobblestones";
lin cobham_PN = mkPN "Cobham";
lin cobia_N = mkN "cobia" ;
lin cobnut_N = mkN "cobnut" ;
lin cobra_N = mkN "cobra" "cobras";
lin cobweb_N = mkN "cobweb" "cobwebs";
lin cobwebby_A = mkA "cobwebby" ;
lin coca_N = mkN "coca" ;
lin coca_cola_N = mkN "coca-cola" "coca-colas";
lin cocaine_N = mkN "cocaine" ;
lin cocarboxylase_N = mkN "cocarboxylase" ;
lin coccal_A = mkA "coccal" ;
lin coccidioidomycosis_N = mkN "coccidioidomycosis" ;
lin coccidiosis_N = mkN "coccidiosis" ;
lin coccidium_N = mkN "coccidium" ;
lin coccobacillus_N = mkN "coccobacillus" ;
lin coccoid_A = mkA "coccoid" ;
lin coccus_N = mkN "coccus" ;
lin coccygeal_A = mkA "coccygeal" ;
lin coccyx_N = mkN "coccyx" ;
lin cochin_N = mkN "cochin" ;
lin cochineal_N = mkN "cochineal" ;
lin cochlea_N = mkN "cochlea" "cochleas";
lin cochlear_A = mkA "cochlear" ;
lin cock_N = mkN "cock" "cocks";
lin cock_V2 = mkV2 (mkV "cock" "cocks" "cocked" "cocked" "cocking");
lin cock_a_doodle_doo_N = mkN "cock-a-doodle-doo" "cock-a-doodle-doos";
lin cock_a_hoop_A = compoundA (mkA "cock-a-hoop");
lin cock_a_hoop_Adv = mkAdv "cock-a-hoop";
lin cock_crow_N = mkN "cock-crow" "cock-crows";
lin cockade_N = mkN "cockade" "cockades";
lin cockamamie_A = mkA "cockamamie" ;
lin cockateel_N = mkN "cockateel" ;
lin cockatoo_N = mkN "cockatoo" "cockatoos";
lin cockatrice_N = mkN "cockatrice" ;
lin cockchafer_N = mkN "cockchafer" "cockchafers";
lin cocker_N = mkN "cocker" "cockers";
lin cockerel_N = mkN "cockerel" "cockerels";
lin cockermouth_PN = mkPN "Cockermouth";
lin cockeyed_A = compoundA (mkA "cockeyed");
lin cockfight_N = mkN "cockfight" ;
lin cockfighting_N = mkN "cockfighting" ;
lin cockhorse_N = mkN "cockhorse" "cockhorses";
lin cockle_N = mkN "cockle" "cockles";
lin cocklebur_N = mkN "cocklebur" ;
lin cockleshell_N = mkN "cockleshell" "cockleshells";
lin cockloft_N = mkN "cockloft" ;
lin cockney_A = compoundA (mkA "cockney");
lin cockney_N = mkN "cockney" "cockneys";
lin cockpit_N = mkN "cockpit" "cockpits";
lin cockroach_N = mkN "cockroach" "cockroaches";
lin cockscomb_N = mkN "cockscomb" "cockscombs";
lin cockspur_N = mkN "cockspur" ;
lin cocksucker_N = mkN "cocksucker" ;
lin cocksure_A = compoundA (mkA "cocksure");
lin cocktail_N = mkN "cocktail" "cocktails";
lin cockup_N = mkN "cockup" "cockups";
lin cocky_A = mkA "cocky" "cockier";
lin coco_N = mkN "coco" "cocos";
lin cocoa_N = mkN "cocoa" ;
lin cocobolo_N = mkN "cocobolo" ;
lin coconut_N = mkN "coconut" "coconuts";
lin cocoon_N = mkN "cocoon" "cocoons";
lin cocoon_V2 = mkV2 (mkV "cocoon" "cocoons" "cocooned" "cocooned" "cocooning");
lin cocooning_N = mkN "cocooning" ;
lin cocotte_N = mkN "cocotte" "cocottes";
lin cocozelle_N = mkN "cocozelle" ;
lin cocuswood_N = mkN "cocuswood" ;
lin cod_N = mkN "cod" "cods";
lin cod_PN = mkPN "Cod";
lin cod_V = mkV "cod" "cods" "codded" "codded" "codding";
lin cod_V2 = mkV2 (mkV "cod" "cods" "codded" "codded" "codding");
lin cod_liver_oil_N = mkN "cod-liver oil" ;
lin coda_N = mkN "coda" "codas";
lin coddle_V2 = mkV2 (mkV "coddle" "coddles" "coddled" "coddled" "coddling");
lin code_N = mkN "code" "codes";
lin code_V2 = mkV2 (mkV "code" "codes" "coded" "coded" "coding");
lin codefendant_N = mkN "codefendant" ;
lin codeine_N = mkN "codeine" ;
lin codetalker_N = mkN "codetalker" ;
lin codex_N = mkN "codex" "codices" {- FIXME: guessed plural form -};
lin codfish_N = mkN "codfish" "codfish";
lin codger_N = mkN "codger" "codgers";
lin codicil_N = mkN "codicil" "codicils";
lin codification_N = mkN "codification" "codifications";
lin codify_V2 = mkV2 (mkV "codify" "codifies" "codified" "codified" "codifying");
lin codling_N = mkN "codling" "codlings";
lin codon_N = mkN "codon" ;
lin codpiece_N = mkN "codpiece" "codpieces";
lin codsall_PN = mkPN "Codsall";
lin coeducation_N = mkN "coeducation" ;
lin coeducational_A = compoundA (mkA "coeducational");
lin coefficient_N = mkN "coefficient" "coefficients";
lin coelacanth_N = mkN "coelacanth" ;
lin coelenterate_N = mkN "coelenterate" ;
lin coelenteron_N = mkN "coelenteron" ;
lin coeliac_A = mkA "coeliac" ;
lin coelogyne_N = mkN "coelogyne" ;
lin coelophysis_N = mkN "coelophysis" ;
lin coelostat_N = mkN "coelostat" ;
lin coenzyme_N = mkN "coenzyme" ;
lin coequal_A = mkA "coequal" ;
lin coerce_V2 = mkV2 (mkV "coerce" "coerces" "coerced" "coerced" "coercing");
lin coercion_N = mkN "coercion" ;
lin coercive_A = compoundA (mkA "coercive");
lin coetaneous_A = mkA "coetaneous" ;
lin coeval_A = compoundA (mkA "coeval");
lin coeval_N = mkN "coeval" "coevals";
lin coevals_N = mkN "coevals" ;
lin coexist_V = mkV "coexist" "coexists" "coexisted" "coexisted" "coexisting";
lin coexistence_N = mkN "coexistence" ;
lin coexistent_A = mkA "coexistent" ;
lin coextension_N = mkN "coextension" ;
lin coextensive_A = mkA "coextensive" ;
lin coextrude_V2 = mkV2 (mkV "coextrude");
lin cofactor_N = mkN "cofactor" ;
lin coffee_N = mkN "coffee" "coffees";
lin coffee_house_N = mkN "coffee-house" "coffee-houses";
lin coffee_mill_N = mkN "coffee-mill" "coffee-mills";
lin coffee_stall_N = mkN "coffee-stall" "coffee-stalls";
lin coffeeberry_N = mkN "coffeeberry" ;
lin coffeecake_N = mkN "coffeecake" ;
lin coffeepot_N = mkN "coffeepot" ;
lin coffer_N = mkN "coffer" "coffers";
lin coffer_dam_N = mkN "coffer-dam" "coffer-dams";
lin coffin_N = mkN "coffin" "coffins";
lin cofounder_N = mkN "cofounder" ;
lin cog_N = mkN "cog" "cogs";
lin cogency_N = mkN "cogency" ;
lin cogent_A = compoundA (mkA "cogent");
lin cogged_A = mkA "cogged" ;
lin cogitable_A = mkA "cogitable" ;
lin cogitate_V = mkV "cogitate" "cogitates" "cogitated" "cogitated" "cogitating";
lin cogitate_V2 = mkV2 (mkV "cogitate" "cogitates" "cogitated" "cogitated" "cogitating");
lin cogitation_N = mkN "cogitation" ;
lin cogitative_A = mkA "cogitative" ;
lin cognac_N = mkN "cognac" ;
lin cognate_A = compoundA (mkA "cognate");
lin cognate_N = mkN "cognate" "cognates";
lin cognition_N = mkN "cognition" ;
lin cognitive_A = mkA "cognitive" ;
lin cognizance_N = mkN "cognizance" ;
lin cognizant_A = compoundA (mkA "cognizant");
lin cognomen_N = mkN "cognomen" "cognomens";
lin cogwheel_N = mkN "cogwheel" "cogwheels";
lin cohabit_V = mkV "cohabit" "cohabits" "cohabited" "cohabited" "cohabiting";
lin cohabitation_N = mkN "cohabitation" "cohabitations";
lin cohere_V = mkV "cohere" "coheres" "cohered" "cohered" "cohering";
lin coherence_N = mkN "coherence" ;
lin coherency_N = mkN "coherency" ;
lin coherent_A = compoundA (mkA "coherent");
lin cohesion_N = mkN "cohesion" ;
lin cohesive_A = compoundA (mkA "cohesive");
lin cohesiveness_N = mkN "cohesiveness" ;
lin coho_N = mkN "coho" ;
lin cohort_N = mkN "cohort" "cohorts";
lin coif_N = mkN "coif" "coifs";
lin coiffeur_N = mkN "coiffeur" "coiffeurs";
lin coiffeuse_N = mkN "coiffeuse" ;
lin coiffure_N = mkN "coiffure" "coiffures";
lin coign_N = mkN "coign" "coigns";
lin coil_N = mkN "coil" "coils";
lin coil_V = mkV "coil" "coils" "coiled" "coiled" "coiling";
lin coil_V2 = mkV2 (mkV "coil" "coils" "coiled" "coiled" "coiling");
lin coimbatore_PN = mkPN "Coimbatore";
lin coin_N = mkN "coin" "coins";
lin coin_V2 = mkV2 (mkV "coin" "coins" "coined" "coined" "coining");
lin coinage_N = mkN "coinage" "coinages";
lin coincide_V = mkV "coincide" "coincides" "coincided" "coincided" "coinciding";
lin coincidence_N = mkN "coincidence" "coincidences";
lin coincident_A = compoundA (mkA "coincident");
lin coincidental_A = compoundA (mkA "coincidental");
lin coiner_N = mkN "coiner" "coiners";
lin coinsurance_N = mkN "coinsurance" ;
lin coir_N = mkN "coir" ;
lin coital_A = mkA "coital" ;
lin coition_N = mkN "coition" ;
lin coitus_N = mkN "coitus" ;
lin coke_N = mkN "coke" "cokes";
lin coke_V2 = mkV2 (mkV "coke" "cokes" "coked" "coked" "coking");
lin col_N = mkN "col" "cols";
lin col_PN = mkPN "Col";
lin cola_N = mkN "cola" "colas";
lin colander_N = mkN "colander" "colanders";
lin colchester_PN = mkPN "Colchester";
lin colchicine_N = mkN "colchicine" ;
lin cold_A = mkA "cold" "colder";
lin cold_N = mkN "cold" "colds";
lin cold_blooded_A = compoundA (mkA "cold-blooded");
lin cold_hearted_A = compoundA (mkA "cold-hearted");
lin cold_shoulder_V2 = mkV2 (mkV "cold-shoulder" "cold-shoulders" "cold-shouldered" "cold-shouldered" "cold-shouldering");
lin coldhearted_A = mkA "coldhearted" ;
lin coldness_N = mkN "coldness" ;
lin coleshill_PN = mkPN "Coleshill";
lin coleslaw_N = mkN "coleslaw" ;
lin coleus_N = mkN "coleus" ;
lin colic_N = mkN "colic" ;
lin colicky_A = mkA "colicky" ;
lin colicroot_N = mkN "colicroot" ;
lin colin_PN = mkPN "Colin";
lin coliphage_N = mkN "coliphage" ;
lin colitis_N = mkN "colitis" ;
lin coll_PN = mkPN "Coll";
lin collaborate_V = mkV "collaborate" "collaborates" "collaborated" "collaborated" "collaborating";
lin collaboration_N = mkN "collaboration" ;
lin collaborationist_N = mkN "collaborationist" "collaborationists";
lin collaborative_A = mkA "collaborative" ;
lin collaborator_N = mkN "collaborator" "collaborators";
lin collage_N = mkN "collage" "collages";
lin collagen_N = mkN "collagen" ;
lin collagenase_N = mkN "collagenase" ;
lin collagenous_A = mkA "collagenous" ;
lin collapsable_A = compoundA (mkA "collapsable");
lin collapse_N = mkN "collapse" "collapses";
lin collapse_V = mkV "collapse" "collapses" "collapsed" "collapsed" "collapsing";
lin collapse_V2 = mkV2 (mkV "collapse" "collapses" "collapsed" "collapsed" "collapsing");
lin collapsible_A = compoundA (mkA "collapsible");
lin collar_N = mkN "collar" "collars";
lin collar_V2 = mkV2 (mkV "collar" "collars" "collared" "collared" "collaring");
lin collarbone_N = mkN "collarbone" "collarbones";
lin collard_N = mkN "collard" ;
lin collards_N = mkN "collards" ;
lin collarless_A = mkA "collarless" ;
lin collate_V2 = mkV2 (mkV "collate" "collates" "collated" "collated" "collating");
lin collateral_A = compoundA (mkA "collateral");
lin collateral_N = mkN "collateral" ;
lin collation_N = mkN "collation" "collations";
lin colleague_N = mkN "colleague" "colleagues";
lin collect_A = compoundA (mkA "collect");
lin collect_Adv = mkAdv "collect";
lin collect_N = mkN "collect" "collects";
lin collect_V = mkV "collect" "collects" "collected" "collected" "collecting";
lin collect_V2 = mkV2 (mkV "collect" "collects" "collected" "collected" "collecting");
lin collectedly_Adv = mkAdv "collectedly" ;
lin collectible_A = mkA "collectible" ;
lin collectible_N = mkN "collectible" ;
lin collection_N = mkN "collection" "collections";
lin collective_A = compoundA (mkA "collective");
lin collective_N = mkN "collective" ;
lin collectivism_N = mkN "collectivism" ;
lin collectivist_A = mkA "collectivist" ;
lin collectivist_N = mkN "collectivist" ;
lin collectivization_N = mkN "collectivization" "collectivizations";
lin collectivize_V2 = mkV2 (mkV "collectivize" "collectivizes" "collectivized" "collectivized" "collectivizing");
lin collector_N = mkN "collector" "collectors";
lin colleen_N = mkN "colleen" "colleens";
lin college_N = mkN "college" "colleges";
lin collegial_A = mkA "collegial" ;
lin collegian_N = mkN "collegian" ;
lin collegiate_A = compoundA (mkA "collegiate");
lin collembolan_N = mkN "collembolan" ;
lin collet_N = mkN "collet" ;
lin collide_V = mkV "collide" "collides" "collided" "collided" "colliding";
lin collider_N = mkN "collider" ;
lin collie_N = mkN "collie" "collies";
lin collier_N = mkN "collier" "colliers";
lin colliery_N = mkN "colliery" "collieries";
lin colligation_N = mkN "colligation" ;
lin collimation_N = mkN "collimation" ;
lin collimator_N = mkN "collimator" ;
lin collinear_A = mkA "collinear" ;
lin collins_N = mkN "collins" ;
lin collision_N = mkN "collision" "collisions";
lin collocate_V = mkV "collocate" "collocates" "collocated" "collocated" "collocating";
lin collocation_N = mkN "collocation" "collocations";
lin collodion_N = mkN "collodion" ;
lin colloid_N = mkN "colloid" ;
lin colloidal_A = mkA "colloidal" ;
lin colloquial_A = compoundA (mkA "colloquial");
lin colloquialism_N = mkN "colloquialism" "colloquialisms";
lin colloquium_N = mkN "colloquium" ;
lin colloquy_N = mkN "colloquy" "colloquies";
lin collotype_N = mkN "collotype" ;
lin collusion_N = mkN "collusion" ;
lin collusive_A = compoundA (mkA "collusive");
lin colne_PN = mkPN "Colne";
lin colobus_N = mkN "colobus" ;
lin cologne_N = mkN "cologne" ;
lin cologne_PN = mkPN "Cologne";
lin colombia_PN = mkPN "Colombia";
lin colombian_A = compoundA (mkA "colombian");
lin colombian_N = mkN "colombian" "colombians";
lin colombo_PN = mkPN "Colombo";
lin colon_N = mkN "colon" "colons";
lin colonel_N = mkN human (mkN "colonel" "colonels");
lin colonial_A = compoundA (mkA "colonial");
lin colonial_N = mkN "colonial" "colonials";
lin colonialism_N = mkN "colonialism" ;
lin colonialist_N = mkN "colonialist" "colonialists";
lin colonic_A = mkA "colonic" ;
lin colonist_N = mkN "colonist" "colonists";
lin colonization_N = mkN "colonization" ;
lin colonize_V2 = mkV2 (mkV "colonize" "colonizes" "colonized" "colonized" "colonizing");
lin colonizer_N = mkN "colonizer" "colonizers";
lin colonnade_N = mkN "colonnade" "colonnades";
lin colonnaded_A = compoundA (mkA "colonnaded");
lin colonoscope_N = mkN "colonoscope" ;
lin colonoscopy_N = mkN "colonoscopy" ;
lin colony_N = mkN "colony" "colonies";
lin colophon_N = mkN "colophon" ;
lin colophony_N = mkN "colophony" ;
lin color_A = mkA "color" ;
lin colorado_PN = mkPN "Colorado";
lin coloration_N = mkN "coloration" ;
lin coloratura_N = mkN "coloratura" ;
lin colorcast_N = mkN "colorcast" ;
lin colorectal_A = mkA "colorectal" ;
lin colored_A = mkA "colored" ;
lin colorfast_A = mkA "colorfast" ;
lin colorimeter_N = mkN "colorimeter" ;
lin colorimetric_A = mkA "colorimetric" ;
lin colorimetry_N = mkN "colorimetry" ;
lin colorist_N = mkN "colorist" ;
lin colossal_A = compoundA (mkA "colossal");
lin colossus_N = mkN "colossus" "colossi";
lin colostomy_N = mkN "colostomy" ;
lin colostrum_N = mkN "colostrum" ;
lin colour_N = mkN (variants {"colour"; "color"});
lin colour_V = variants {mkV "colour"; mkV "color" "colored"};
lin colour_V2 = mkV2 (variants {mkV "colour"; mkV "color" (variants {"colorred"; "colored"})});
lin colour_V2A = mkV2A (variants {mkV "colour"; mkV "color" (variants {"colorred"; "colored"})}) noPrep;
lin colour_bar_N = mkN (variants {"colour-bar"; "color-bar"});
lin colour_blind_A = compoundA (mkA (variants {"colour-blind"; "color-blind"}));
lin colour_code_V2 = mkV2 (mkV (variants {"colour-code"; "color-code"}));
lin colour_wash_N = mkN (variants {"colour-wash"; "color-wash"});
lin colourful_A = compoundA (mkA (variants {"colourful"; "colorful"}));
lin colouring_N = mkN (variants {"colouring"; "coloring"}) ;
lin colourless_A = compoundA (mkA (variants {"colourless"; "colorless"}));
lin colorlessness_N = mkN (variants {"colourlessness"; "colorlessness"});
lin colpitis_N = mkN "colpitis" ;
lin colpocele_N = mkN "colpocele" ;
lin colpocystitis_N = mkN "colpocystitis" ;
lin colpoxerosis_N = mkN "colpoxerosis" ;
lin colt_N = mkN "colt" "colts";
lin colter_N = mkN "colter" ;
lin coltish_A = compoundA (mkA "coltish");
lin coltsfoot_N = mkN "coltsfoot" ;
lin columbarium_N = mkN "columbarium" ;
lin columbia_PN = mkPN "Columbia";
lin columbine_N = mkN "columbine" "columbines";
lin columbium_N = mkN "columbium" ;
lin columbo_N = mkN "columbo" ;
lin columbus_PN = mkPN "Columbus";
lin columella_N = mkN "columella" ;
lin column_N = mkN "column" "columns";
lin columnar_A = mkA "columnar" ;
lin columnea_N = mkN "columnea" ;
lin columned_A = mkA "columned" ;
lin columniation_N = mkN "columniation" ;
lin columniform_A = mkA "columniform" ;
lin columnistMasc_N = mkN masculine (mkN "columnist" "columnists");
lin columnistFem_N = mkN feminine (mkN "columnist" "columnists");
lin colwyn_bay_PN = mkPN "Colwyn bay";
lin coma_N = mkN "coma" "comas";
lin comate_A = mkA "comate" ;
lin comatose_A = compoundA (mkA "comatose");
lin comb_N = mkN "comb" "combs";
lin comb_V = mkV "comb" "combs" "combed" "combed" "combing";
lin comb_V2 = mkV2 (mkV "comb" "combs" "combed" "combed" "combing");
lin comb_out_N = mkN "comb-out" "comb-outs";
lin combat_N = mkN "combat" "combats";
lin combat_V = mkV "combat" "combats" "combated" "combated" "combating";
lin combat_V2 = mkV2 (mkV "combat" "combats" "combated" "combated" "combating");
lin combatant_A = compoundA (mkA "combatant");
lin combatant_N = mkN "combatant" "combatants";
lin combative_A = compoundA (mkA "combative");
lin combativeness_N = mkN "combativeness" ;
lin comber_N = mkN "comber" ;
lin combinable_A = mkA "combinable" ;
lin combination_N = mkN "combination" "combinations";
lin combination_lock_N = mkN "combination-lock" "combination-locks";
lin combinative_A = mkA "combinative" ;
lin combinatorial_A = mkA "combinatorial" ;
lin combine_N = mkN "combine" "combines";
lin combine_V = mkV "combine" "combines" "combined" "combined" "combining";
lin combine_V2 = mkV2 (mkV "combine" "combines" "combined" "combined" "combining");
lin combine_V2V = mkV2V (mkV "combine" "combines" "combined" "combined" "combining") noPrep to_Prep ;
lin combine_VV = mkVV (mkV "combine" "combines" "combined" "combined" "combining");
lin combining_N = mkN "combining" ;
lin combretum_N = mkN "combretum" ;
lin comburent_A = mkA "comburent" ;
lin combustibility_N = mkN "combustibility" ;
lin combustible_A = compoundA (mkA "combustible");
lin combustible_N = mkN "combustible" "combustibles";
lin combustion_N = mkN "combustion" ;
lin come_V = IrregEng.come_V;
lin come_V2 = mkV2 (IrregEng.come_V);
lin come_VA = mkVA (IrregEng.come_V);
lin come_VS = mkVS (IrregEng.come_V);
lin come_VV = mkVV (IrregEng.come_V);
lin come_at_able_A = compoundA (mkA "come-at-able");
lin come_on_N = mkN "come-on" "come-ons";
lin comeback_N = mkN "comeback" "comebacks";
lin comedian_N = mkN human (mkN "comedian" "comedians");
lin comedienne_N = mkN "comedienne" "comediennes";
lin comedown_N = mkN "comedown" "comedowns";
lin comedy_N = mkN "comedy" "comedies";
lin comeliness_N = mkN "comeliness" ;
lin comely_A = mkA "comely" "comelier";
lin comer_N = mkN "comer" "comers";
lin comestible_N = mkN "comestible" "comestibles";
lin comet_N = mkN "comet" "comets";
lin cometary_A = mkA "cometary" ;
lin comfit_N = mkN "comfit" "comfits";
lin comfort_N = mkN "comfort" "comforts";
lin comfort_V2 = mkV2 (mkV "comfort" "comforts" "comforted" "comforted" "comforting");
lin comfortable_A = compoundA (mkA "comfortable");
lin comfortableness_N = mkN "comfortableness" ;
lin comforter_N = mkN "comforter" "comforters";
lin comforting_A = mkA "comforting" ;
lin comfortless_A = compoundA (mkA "comfortless");
lin comforts_N = mkN "comforts" ;
lin comfrey_N = mkN "comfrey" ;
lin comfy_A = mkA "comfy" "comfier";
lin comic_A = compoundA (mkA "comic");
lin comic_N = mkN "comic" "comics";
lin comical_A = compoundA (mkA "comical");
lin comicality_N = mkN "comicality" ;
lin coming_N = mkN "coming" "comings";
lin comity_N = mkN "comity" ;
lin comma_N = mkN "comma" "commas";
lin command_N = mkN "command" "commands";
lin command_V = mkV "command" "commands" "commanded" "commanded" "commanding";
lin command_V2 = mkV2 (mkV "command" "commands" "commanded" "commanded" "commanding");
lin commandant_N = mkN "commandant" "commandants";
lin commandeer_V2 = mkV2 (mkV "commandeer" "commandeers" "commandeered" "commandeered" "commandeering");
lin commander_N = mkN human (mkN "commander" "commanders");
lin commandership_N = mkN "commandership" ;
lin commandment_N = mkN "commandment" "commandments";
lin commando_N = mkN "commando" "commandos";
lin commelina_N = mkN "commelina" ;
lin commemorate_V2 = mkV2 (mkV "commemorate" "commemorates" "commemorated" "commemorated" "commemorating");
lin commemoration_N = mkN "commemoration" "commemorations";
lin commemorative_A = compoundA (mkA "commemorative");
lin commemorative_N = mkN "commemorative" ;
lin commence_V = mkV "commence" "commences" "commenced" "commenced" "commencing";
lin commence_V2 = mkV2 (mkV "commence" "commences" "commenced" "commenced" "commencing");
lin commencement_N = mkN "commencement" "commencements";
lin commend_V2 = mkV2 (mkV "commend" "commends" "commended" "commended" "commending");
lin commendable_A = compoundA (mkA "commendable");
lin commendation_N = mkN "commendation" "commendations";
lin commensal_A = mkA "commensal" ;
lin commensal_N = mkN "commensal" ;
lin commensalism_N = mkN "commensalism" ;
lin commensurable_A = compoundA (mkA "commensurable");
lin commensurate_A = compoundA (mkA "commensurate");
lin commensurateness_N = mkN "commensurateness" ;
lin comment_N = mkN "comment" "comments";
lin comment_V = mkV "comment" "comments" "commented" "commented" "commenting";
lin comment_V2 = mkV2 (mkV "comment" "comments" "commented" "commented" "commenting");
lin comment_VS = mkVS (mkV "comment" "comments" "commented" "commented" "commenting");
lin commentary_N = mkN "commentary" "commentaries";
lin commentate_V = mkV "commentate" "commentates" "commentated" "commentated" "commentating";
lin commentator_N = mkN "commentator" "commentators";
lin commerce_N = mkN "commerce" ;
lin commercial_A = compoundA (mkA "commercial");
lin commercial_N = mkN "commercial" "commercials";
lin commercialism_N = mkN "commercialism" ;
lin commercialization_N = mkN "commercialization" ;
lin commercialize_V2 = mkV2 (mkV "commercialize" "commercializes" "commercialized" "commercialized" "commercializing");
lin commination_N = mkN "commination" "comminations";
lin comminatory_A = compoundA (mkA "comminatory");
lin commingle_V = mkV "commingle" "commingles" "commingled" "commingled" "commingling";
lin commingle_V2 = mkV2 (mkV "commingle" "commingles" "commingled" "commingled" "commingling");
lin commiserate_V = mkV "commiserate" "commiserates" "commiserated" "commiserated" "commiserating";
lin commiseration_N = mkN "commiseration" "commiserations";
lin commiserative_A = mkA "commiserative" ;
lin commissar_N = mkN "commissar" "commissars";
lin commissariat_N = mkN "commissariat" "commissariats";
lin commissary_N = mkN "commissary" "commissaries";
lin commission_N = mkN "commission" "commissions";
lin commission_V2 = mkV2 (mkV "commission" "commissions" "commissioned" "commissioned" "commissioning");
lin commission_V2V = mkV2V (mkV "commission") noPrep to_Prep ;
lin commissionaire_N = mkN "commissionaire" "commissionaires";
lin commissioner_N = mkN "commissioner" "commissioners";
lin commissure_N = mkN "commissure" ;
lin commit_V2 = mkV2 (mkV "commit" "commits" "committed" "committed" "committing");
lin commit_V2V = mkV2V (mkV "commit") noPrep to_Prep ;
lin commital_N = mkN "commital" "commitals";
lin commitment_N = mkN "commitment" "commitments";
lin committedness_N = mkN "committedness" ;
lin committee_N = mkN "committee" "committees";
lin committeeman_N = mkN masculine (mkN "committeeman" "committeemen");
lin committeewoman_N = mkN feminine (mkN "committeewoman" "committeewomen");
lin commode_N = mkN "commode" "commodes";
lin commodious_A = compoundA (mkA "commodious");
lin commodity_N = mkN "commodity" "commodities";
lin commodore_N = mkN "commodore" "commodores";
lin common_A = variants {compoundA (mkA "common"); mkA "common" "commoner"};
lin common_N = mkN "common" "commons";
lin common_room_N = mkN "common-room" "common-rooms";
lin commonage_N = mkN "commonage" ;
lin commonality_N = mkN "commonality" ;
lin commonalty_N = mkN "commonalty" "commonalties";
lin commoner_N = mkN "commoner" "commoners";
lin commonness_N = mkN "commonness" ;
lin commonplace_A = compoundA (mkA "commonplace");
lin commonplace_N = mkN "commonplace" "commonplaces";
lin commons_N = mkN "commons" ;
lin commonsense_A = mkA "commonsense" ;
lin commonwealth_N = mkN "commonwealth" "commonwealths";
lin commotion_N = mkN "commotion" "commotions";
lin communal_A = compoundA (mkA "communal");
lin communalism_N = mkN "communalism" ;
lin commune_N = mkN "commune" "communes";
lin commune_V = mkV "commune" "communes" "communed" "communed" "communing";
lin communicable_A = compoundA (mkA "communicable");
lin communicant_N = mkN "communicant" "communicants";
lin communicate_V = mkV "communicate" "communicates" "communicated" "communicated" "communicating";
lin communicate_V2 = mkV2 (mkV "communicate" "communicates" "communicated" "communicated" "communicating");
lin communication_N = mkN "communication" "communications";
lin communicational_A = mkA "communicational" ;
lin communications_N = mkN "communications" ;
lin communicative_A = compoundA (mkA "communicative");
lin communicativeness_N = mkN "communicativeness" ;
lin communicator_N = mkN "communicator" ;
lin communion_N = mkN "communion" "communions";
lin communique_N = mkN "communiqué" "communiqués";
lin communism_N = mkN "communism" ;
lin communist_A = compoundA (mkA "communist");
lin communist_N = mkN "communist" "communists";
lin community_N = mkN "community" "communities";
lin communization_N = mkN "communization" ;
lin commutability_N = mkN "commutability" ;
lin commutable_A = compoundA (mkA "commutable");
lin commutation_N = mkN "commutation" "commutations";
lin commutative_A = mkA "commutative" ;
lin commutator_N = mkN "commutator" "commutators";
lin commute_N = mkN "commute" ;
lin commute_V = mkV "commute" "commutes" "commuted" "commuted" "commuting";
lin commute_V2 = mkV2 (mkV "commute" "commutes" "commuted" "commuted" "commuting");
lin commuter_N = mkN "commuter" "commuters";
lin compact_A = compoundA (mkA "compact");
lin compact_N = mkN "compact" "compacts";
lin compact_V2 = mkV2 (mkV "compact" "compacts" "compacted" "compacted" "compacting");
lin compaction_N = mkN "compaction" ;
lin compactness_N = mkN "compactness" ;
lin companion_N = mkN human (mkN "companion" "companions");
lin companionability_N = mkN "companionability" ;
lin companionable_A = compoundA (mkA "companionable");
lin companionate_A = mkA "companionate" ;
lin companionship_N = mkN "companionship" ;
lin companionway_N = mkN "companionway" "companionways";
lin company_N = mkN "company" "companies";
lin comparability_N = mkN "comparability" ;
lin comparable_A = compoundA (mkA "comparable");
lin comparative_A = compoundA (mkA "comparative");
lin comparative_N = mkN "comparative" "comparatives";
lin compare_N = mkN "compare" "compares";
lin compare_V = mkV "compare" "compares" "compared" "compared" "comparing";
lin compare_V2 = mkV2 (mkV "compare" "compares" "compared" "compared" "comparing");
lin comparison_N = mkN "comparison" "comparisons";
lin compartment_N = mkN "compartment" "compartments";
lin compartmental_A = mkA "compartmental" ;
lin compartmentalization_N = mkN "compartmentalization" ;
lin compartmentalize_V2 = mkV2 (mkV "compartmentalize" "compartmentalizes" "compartmentalized" "compartmentalized" "compartmentalizing");
lin compartmented_A = mkA "compartmented" ;
lin compass_N = mkN "compass" "compasses";
lin compass_V2 = mkV2 (mkV "compass" "compasses" "compassed" "compassed" "compassing");
lin compassion_N = mkN "compassion" ;
lin compassionate_A = compoundA (mkA "compassionate");
lin compatibility_N = mkN "compatibility" ;
lin compatible_A = compoundA (mkA "compatible");
lin compatriot_N = mkN "compatriot" "compatriots";
lin compeer_N = mkN "compeer" "compeers";
lin compel_V2 = mkV2 (mkV "compel" "compels" "compelled" "compelled" "compelling");
lin compel_V2V = mkV2V (mkV "compel" "compels" "compelled" "compelled" "compelling") noPrep noPrep;
lin compel_VV = mkVV (mkV "compel" "compels" "compelled" "compelled" "compelling");
lin compelling_A = mkA "compelling" ;
lin compendious_A = compoundA (mkA "compendious");
lin compendium_N = mkN "compendium" "compendiums";
lin compensable_A = mkA "compensable" ;
lin compensate_V = mkV "compensate" "compensates" "compensated" "compensated" "compensating";
lin compensate_V2 = mkV2 (mkV "compensate" "compensates" "compensated" "compensated" "compensating");
lin compensation_N = mkN "compensation" "compensations";
lin compensatory_A = compoundA (mkA "compensatory");
lin compere_N = mkN "compère" "compères";
lin compere_V2 = mkV2 (mkV "compère" "compères" "compèred" "compèred" "compèring");
lin compete_V = mkV "compete" "competes" "competed" "competed" "competing";
lin competence_N = mkN "competence" ;
lin competent_A = compoundA (mkA "competent");
lin competition_N = mkN "competition" "competitions";
lin competitive_A = compoundA (mkA "competitive");
lin competitiveness_N = mkN "competitiveness" ;
lin competitor_N = mkN "competitor" "competitors";
lin compilation_N = mkN "compilation" "compilations";
lin compile_V2 = mkV2 (mkV "compile" "compiles" "compiled" "compiled" "compiling");
lin compiler_N = mkN "compiler" "compilers";
lin complacence_N = mkN "complacence" ;
lin complacency_N = mkN "complacency" ;
lin complacent_A = compoundA (mkA "complacent");
lin complain_V = mkV "complain" "complains" "complained" "complained" "complaining";
lin complain_VS = mkVS (mkV "complain" "complains" "complained" "complained" "complaining");
lin complainant_N = mkN "complainant" "complainants";
lin complainingly_Adv = mkAdv "complainingly";
lin complaint_N = mkN "complaint" "complaints";
lin complaisance_N = mkN "complaisance" ;
lin complaisant_A = compoundA (mkA "complaisant");
lin complement_N = mkN "complement" "complements";
lin complement_V2 = mkV2 (mkV "complement" "complements" "complemented" "complemented" "complementing");
lin complemental_A = mkA "complemental" ;
lin complementarity_N = mkN "complementarity" ;
lin complementary_A = compoundA (mkA "complementary");
lin complementation_N = mkN "complementation" ;
lin complete_A = compoundA (mkA "complete");
lin complete_V = mkV "complete";
lin complete_V2 = mkV2 (mkV "complete" "completes" "completed" "completed" "completing");
lin completeness_N = mkN "completeness" ;
lin completion_N = mkN "completion" ;
lin complex_A = compoundA (mkA "complex");
lin complex_N = mkN "complex" "complexes";
lin complexifier_N = mkN "complexifier" ;
lin complexion_N = mkN "complexion" "complexions";
lin complexity_N = mkN "complexity" "complexities";
lin compliance_N = mkN "compliance" ;
lin compliant_A = compoundA (mkA "compliant");
lin complicate_V2 = mkV2 (mkV "complicate" "complicates" "complicated" "complicated" "complicating");
lin complicatedness_N = mkN "complicatedness" ;
lin complication_N = mkN "complication" "complications";
lin complicity_N = mkN "complicity" ;
lin compliment_N = mkN "compliment" "compliments";
lin compliment_V2 = mkV2 (mkV "compliment" "compliments" "complimented" "complimented" "complimenting");
lin complimentary_A = compoundA (mkA "complimentary");
lin complin_N = mkN "complin" "complins";
lin compline_N = mkN "compline" "complines";
lin comply_V = mkV "comply";
lin comply_V2 = mkV2 (mkV "comply" "complies" "complied" "complied" "complying");
lin component_A = compoundA (mkA "component");
lin component_N = mkN "component" "components";
lin comport_V = mkV "comport" "comports" "comported" "comported" "comporting";
lin comport_V2 = mkV2 (mkV "comport" "comports" "comported" "comported" "comporting");
lin comportment_N = mkN "comportment" "comportments";
lin compos_mentis_A = compoundA (mkA "compos mentis");
lin compose_V = mkV "compose" "composes" "composed" "composed" "composing";
lin compose_V2 = mkV2 (mkV "compose" "composes" "composed" "composed" "composing");
lin composer_N = mkN "composer" "composers";
lin composing_N = mkN "composing" ;
lin composite_A = compoundA (mkA "composite");
lin composite_N = mkN "composite" ;
lin compositeness_N = mkN "compositeness" ;
lin composition_N = mkN "composition" "compositions";
lin compositional_A = mkA "compositional" ;
lin compositor_N = mkN "compositor" "compositors";
lin compost_N = mkN "compost" ;
lin compost_V2 = mkV2 (mkV "compost" "composts" "composted" "composted" "composting");
lin composure_N = mkN "composure" ;
lin compote_N = mkN "compote" "compotes";
lin compound_A = compoundA (mkA "compound");
lin compound_N = mkN "compound" "compounds";
lin compound_V = mkV "compound" "compounds" "compounded" "compounded" "compounding";
lin compound_V2 = mkV2 (mkV "compound" "compounds" "compounded" "compounded" "compounding");
lin comprehend_V2 = mkV2 (mkV "comprehend" "comprehends" "comprehended" "comprehended" "comprehending");
lin comprehensibility_N = mkN "comprehensibility" ;
lin comprehensible_A = compoundA (mkA "comprehensible");
lin comprehension_N = mkN "comprehension" "comprehensions";
lin comprehensive_A = compoundA (mkA "comprehensive");
lin comprehensiveness_N = mkN "comprehensiveness" ;
lin compress_N = mkN "compress" "compresses";
lin compress_V2 = mkV2 (mkV "compress" "compresses" "compressed" "compressed" "compressing");
lin compressibility_N = mkN "compressibility" ;
lin compressible_A = mkA "compressible" ;
lin compression_N = mkN "compression" ;
lin compressor_N = mkN "compressor" "compressors";
lin comprise_V2 = mkV2 (mkV "comprise" "comprises" "comprised" "comprised" "comprising");
lin compromise_N = mkN "compromise" "compromises";
lin compromise_V = mkV "compromise" "compromises" "compromised" "compromised" "compromising";
lin compromise_V2 = mkV2 (mkV "compromise" "compromises" "compromised" "compromised" "compromising");
lin compromiser_N = mkN "compromiser" ;
lin compsognathus_N = mkN "compsognathus" ;
lin comptroller_N = mkN "comptroller" "comptrollers";
lin comptrollership_N = mkN "comptrollership" ;
lin compulsion_N = mkN "compulsion" ;
lin compulsive_A = compoundA (mkA "compulsive");
lin compulsive_N = mkN "compulsive" ;
lin compulsiveness_N = mkN "compulsiveness" ;
lin compulsory_A = compoundA (mkA "compulsory");
lin compunction_N = mkN "compunction" ;
lin computable_A = mkA "computable" ;
lin computation_N = mkN "computation" "computations";
lin computational_A = compoundA (mkA "computational");
lin compute_V = mkV "compute" "computes" "computed" "computed" "computing";
lin compute_V2 = mkV2 (mkV "compute" "computes" "computed" "computed" "computing");
lin computer_N = mkN "computer" "computers";
lin computer_science_N = mkN "computer science";
lin computerization_N = mkN (variants {"computerization"; "computerisation"});
lin computerize_V2 = mkV2 (mkV "computerize" "computerizes" "computerized" "computerized" "computerizing");
lin comrade_N = mkN "comrade" "comrades";
lin comradely_A = mkA "comradely" ;
lin comradely_Adv = mkAdv "comradely";
lin comradeship_N = mkN "comradeship" "comradeships";
lin con_Adv = mkAdv "con";
lin con_N = mkN "con" "cons";
lin con_V2 = mkV2 (mkV "con" "cons" "conned" "conned" "conning");
lin con_man_N = mkN "con-man" "con-men";
lin conacaste_N = mkN "conacaste" ;
lin concatenation_N = mkN "concatenation" "concatenations";
lin concave_A = compoundA (mkA "concave");
lin concavity_N = mkN "concavity" "concavities";
lin conceal_V2 = mkV2 (mkV "conceal" "conceals" "concealed" "concealed" "concealing");
lin conceale_V = mkV "conceale";
lin concealment_N = mkN "concealment" ;
lin concede_V = mkV "concede";
lin concede_V2 = mkV2 (mkV "concede" "concedes" "conceded" "conceded" "conceding");
lin concede_VS = mkVS (mkV "concede");
lin conceit_N = mkN "conceit" "conceits";
lin conceited_A = compoundA (mkA "conceited");
lin conceivable_A = compoundA (mkA "conceivable");
lin conceivableness_N = mkN "conceivableness" ;
lin conceive_V = mkV "conceive" "conceives" "conceived" "conceived" "conceiving";
lin conceive_V2 = mkV2 (mkV "conceive" "conceives" "conceived" "conceived" "conceiving");
lin concentrate_N = mkN "concentrate" "concentrates";
lin concentrate_V = mkV "concentrate" "concentrates" "concentrated" "concentrated" "concentrating";
lin concentrate_V2 = mkV2 (mkV "concentrate" "concentrates" "concentrated" "concentrated" "concentrating");
lin concentration_N = mkN "concentration" "concentrations";
lin concentric_A = compoundA (mkA "concentric");
lin concentricity_N = mkN "concentricity" ;
lin concept_N = mkN "concept" "concepts";
lin conception_N = mkN "conception" "conceptions";
lin conceptional_A = mkA "conceptional" ;
lin conceptive_A = mkA "conceptive" ;
lin conceptual_A = compoundA (mkA "conceptual");
lin conceptualism_N = mkN "conceptualism" ;
lin conceptualistic_A = mkA "conceptualistic" ;
lin conceptualization_N = mkN "conceptualization" ;
lin concern_N = mkN "concern" "concerns";
lin concern_V = mkV "concern";
lin concern_V2 = mkV2 (mkV "concern" "concerns" "concerned" "concerned" "concerning");
lin concern_VS = mkVS (mkV "concern");
lin concernedly_Adv = mkAdv "concernedly" ;
lin concert_N = mkN "concert" "concerts";
lin concert_V2 = mkV2 (mkV "concert" "concerts" "concerted" "concerted" "concerting");
lin concert_hall_N = mkN "concert-hall" "concert-halls";
lin concertina_N = mkN "concertina" "concertinas";
lin concerto_N = mkN "concerto" "concertos";
lin concession_N = mkN "concession" "concessions";
lin concessionaire_N = mkN "concessionaire" "concessionaires";
lin concessive_A = compoundA (mkA "concessive");
lin conch_N = mkN "conch" "conches";
lin concha_N = mkN "concha" ;
lin conchfish_N = mkN "conchfish" ;
lin conchologist_N = mkN "conchologist" ;
lin conchology_N = mkN "conchology" ;
lin concierge_N = mkN "concierge" "concierges";
lin conciliate_V2 = mkV2 (mkV "conciliate" "conciliates" "conciliated" "conciliated" "conciliating");
lin conciliation_N = mkN "conciliation" ;
lin conciliator_N = mkN "conciliator" ;
lin conciliatory_A = compoundA (mkA "conciliatory");
lin concise_A = compoundA (mkA "concise");
lin conciseness_N = mkN "conciseness" ;
lin conclave_N = mkN "conclave" "conclaves";
lin conclude_V = mkV "conclude" "concludes" "concluded" "concluded" "concluding";
lin conclude_V2 = mkV2 (mkV "conclude" "concludes" "concluded" "concluded" "concluding");
lin conclude_VS = mkVS (mkV "conclude" "concludes" "concluded" "concluded" "concluding");
lin conclusion_N = mkN "conclusion" "conclusions";
lin conclusive_A = compoundA (mkA "conclusive");
lin concoct_V2 = mkV2 (mkV "concoct" "concocts" "concocted" "concocted" "concocting");
lin concoction_N = mkN "concoction" "concoctions";
lin concomitance_N = mkN "concomitance" ;
lin concomitant_A = compoundA (mkA "concomitant");
lin concomitant_N = mkN "concomitant" "concomitants";
lin concord_N = mkN "concord" "concords";
lin concordance_N = mkN "concordance" "concordances";
lin concordant_A = compoundA (mkA "concordant");
lin concordat_N = mkN "concordat" "concordats";
lin concourse_N = mkN "concourse" "concourses";
lin concrete_A = compoundA (mkA "concrete");
lin concrete_N = mkN "concrete" ;
lin concrete_V = mkV "concrete" "concretes" "concreted" "concreted" "concreting";
lin concrete_V2 = mkV2 (mkV "concrete" "concretes" "concreted" "concreted" "concreting");
lin concreteness_N = mkN "concreteness" ;
lin concretion_N = mkN "concretion" "concretions";
lin concretism_N = mkN "concretism" ;
lin concretistic_A = mkA "concretistic" ;
lin concubinage_N = mkN "concubinage" ;
lin concubine_N = mkN "concubine" "concubines";
lin concupiscence_N = mkN "concupiscence" ;
lin concur_V = mkV "concur" "concurs" "concurred" "concurred" "concurring";
lin concurrence_N = mkN "concurrence" "concurrences";
lin concurrent_A = compoundA (mkA "concurrent");
lin concurrentness_N = mkN "concurrentness";
lin concuss_V2 = mkV2 (mkV "concuss" "concusses" "concussed" "concussed" "concussing");
lin concussion_N = mkN "concussion" "concussions";
lin condemn_V2 = mkV2 (mkV "condemn" "condemns" "condemned" "condemned" "condemning");
lin condemnable_A = mkA "condemnable" ;
lin condemnation_N = mkN "condemnation" "condemnations";
lin condemnatory_A = mkA "condemnatory" ;
lin condensate_N = mkN "condensate" ;
lin condensation_N = mkN "condensation" "condensations";
lin condense_V = mkV "condense" "condenses" "condensed" "condensed" "condensing";
lin condense_V2 = mkV2 (mkV "condense" "condenses" "condensed" "condensed" "condensing");
lin condenser_N = mkN "condenser" "condensers";
lin condensing_N = mkN "condensing" ;
lin condescend_V = mkV "condescend" "condescends" "condescended" "condescended" "condescending";
lin condescendingly_Adv = mkAdv "condescendingly" ;
lin condescension_N = mkN "condescension" "condescensions";
lin condign_A = compoundA (mkA "condign");
lin condiment_N = mkN "condiment" "condiments";
lin condition_N = mkN "condition" "conditions";
lin condition_V2 = mkV2 (mkV "condition" "conditions" "conditioned" "conditioned" "conditioning");
lin conditional_A = compoundA (mkA "conditional");
lin conditionality_N = mkN "conditionality" ;
lin conditioner_N = mkN "conditioner" "conditioners";
lin conditioning_N = mkN "conditioning" ;
lin conditions_N = mkN "conditions" ;
lin condole_V = mkV "condole" "condoles" "condoled" "condoled" "condoling";
lin condolence_N = mkN "condolence" "condolences";
lin condolent_A = mkA "condolent" ;
lin condom_N = mkN "condom" ;
lin condominium_N = mkN "condominium" "condominiums";
lin condonation_N = mkN "condonation" "condonations";
lin condone_V2 = mkV2 (mkV "condone" "condones" "condoned" "condoned" "condoning");
lin condor_N = mkN "condor" "condors";
lin conduce_V = mkV "conduce" "conduces" "conduced" "conduced" "conducing";
lin conducive_A = compoundA (mkA "conducive");
lin conduct_N = mkN "conduct" ;
lin conduct_V = mkV "conduct" "conducts" "conducted" "conducted" "conducting";
lin conduct_V2 = mkV2 (mkV "conduct" "conducts" "conducted" "conducted" "conducting");
lin conductance_N = mkN "conductance" ;
lin conducting_N = mkN "conducting" ;
lin conduction_N = mkN "conduction" ;
lin conductive_A = compoundA (mkA "conductive");
lin conductivity_N = mkN "conductivity" "conductivities";
lin conductor_N = mkN "conductor" "conductors";
lin conductress_N = mkN "conductress" "conductresses";
lin conduit_N = mkN "conduit" "conduits";
lin condylar_A = mkA "condylar" ;
lin condyle_N = mkN "condyle" ;
lin condylion_N = mkN "condylion" ;
lin cone_N = mkN "cone" "cones";
lin cone_V2 = mkV2 (mkV "cone" "cones" "coned" "coned" "coning");
lin coneflower_N = mkN "coneflower" ;
lin conenose_N = mkN "conenose" ;
lin coney_N = mkN "coney" "coneys";
lin confab_N = mkN "confab" "confabs";
lin confab_V = mkV "confab" "confabs" "confabbed" "confabbed" "confabbing";
lin confabulate_V = mkV "confabulate" "confabulates" "confabulated" "confabulated" "confabulating";
lin confabulation_N = mkN "confabulation" "confabulations";
lin confection_N = mkN "confection" "confections";
lin confectioner_N = mkN "confectioner" "confectioners";
lin confectionery_N = mkN "confectionery" "confectioneries";
lin confederacy_N = mkN "confederacy" "confederacies";
lin confederate_A = compoundA (mkA "confederate");
lin confederate_N = mkN "confederate" "confederates";
lin confederate_V = mkV "confederate" "confederates" "confederated" "confederated" "confederating";
lin confederate_V2 = mkV2 (mkV "confederate" "confederates" "confederated" "confederated" "confederating");
lin confederation_N = mkN "confederation" "confederations";
lin confer_V = mkV "confer" "confers" "conferred" "conferred" "conferring";
lin confer_V2 = mkV2 (mkV "confer" "confers" "conferred" "conferred" "conferring");
lin conferee_N = mkN "conferee" ;
lin conference_N = mkN "conference" "conferences";
lin conferment_N = mkN "conferment" "conferments";
lin conferrer_N = mkN "conferrer" ;
lin conferva_N = mkN "conferva" ;
lin confess_V = mkV "confess" "confesses" "confessed" "confessed" "confessing";
lin confess_V2 = mkV2 (mkV "confess" "confesses" "confessed" "confessed" "confessing");
lin confess_VS = mkVS (mkV "confess" "confesses" "confessed" "confessed" "confessing");
lin confessedly_Adv = mkAdv "confessedly";
lin confession_N = mkN "confession" "confessions";
lin confessional_N = mkN "confessional" "confessionals";
lin confessor_N = mkN human (mkN "confessor" "confessors");
lin confetti_N = mkN "confetti" "confetti";
lin confidantMasc_N = mkN masculine (mkN "confidant" "confidants");
lin confidantFem_N = mkN feminine (mkN "confidant" "confidants");
lin confidante_N = mkN "confidante" ;
lin confide_V = mkV "confide" "confides" "confided" "confided" "confiding";
lin confide_V2 = mkV2 (mkV "confide" "confides" "confided" "confided" "confiding");
lin confide_VS = mkVS (mkV "confide" "confides" "confided" "confided" "confiding");
lin confidence_N = mkN "confidence" "confidences";
lin confident_A = compoundA (mkA "confident");
lin confidential_A = compoundA (mkA "confidential");
lin confidentiality_N = mkN "confidentiality" "confidentialities";
lin configuration_N = mkN "configuration" "configurations";
lin configurational_A = mkA "configurational" ;
lin configure_V2 = mkV2 (mkV "configure" "configures" "configured" "configured" "configuring");
lin confine_N = mkN "confine" ;
lin confine_V2 = mkV2 (mkV "confine" "confines" "confined" "confined" "confining");
lin confinement_N = mkN "confinement" "confinements";
lin confining_A = mkA "confining" ;
lin confirm_V2 = mkV2 (mkV "confirm" "confirms" "confirmed" "confirmed" "confirming");
lin confirm_VS = mkVS (mkV "confirm");
lin confirmable_A = mkA "confirmable" ;
lin confirmation_N = mkN "confirmation" "confirmations";
lin confiscate_A = mkA "confiscate" ;
lin confiscate_V2 = mkV2 (mkV "confiscate" "confiscates" "confiscated" "confiscated" "confiscating");
lin confiscation_N = mkN "confiscation" "confiscations";
lin confit_N = mkN "confit" ;
lin confiture_N = mkN "confiture" ;
lin conflagration_N = mkN "conflagration" "conflagrations";
lin conflict_N = mkN "conflict" "conflicts";
lin conflict_V = mkV "conflict" "conflicts" "conflicted" "conflicted" "conflicting";
lin confluence_N = mkN "confluence" "confluences";
lin confluent_A = compoundA (mkA "confluent");
lin conform_V = mkV "conform" "conforms" "conformed" "conformed" "conforming";
lin conform_V2 = mkV2 (mkV "conform" "conforms" "conformed" "conformed" "conforming");
lin conformable_A = compoundA (mkA "conformable");
lin conformation_N = mkN "conformation" "conformations";
lin conformist_A = mkA "conformist" ;
lin conformist_N = mkN "conformist" "conformists";
lin conformity_N = mkN "conformity" ;
lin confound_V2 = mkV2 (mkV "confound" "confounds" "confounded" "confounded" "confounding");
lin confounding_A = mkA "confounding" ;
lin confrere_N = mkN "confrère" "confrères";
lin confront_V2 = mkV2 (mkV "confront" "confronts" "confronted" "confronted" "confronting");
lin confrontation_N = mkN "confrontation" "confrontations";
lin confrontational_A = mkA "confrontational" ;
lin confucian_A = compoundA (mkA "confucian");
lin confucian_N = mkN "confucian" "confucians";
lin confusable_A = mkA "confusable" ;
lin confuse_V2 = mkV2 (mkV "confuse" "confuses" "confused" "confused" "confusing");
lin confusedly_Adv = mkAdv "confusedly";
lin confusing_A = mkA "confusing" ;
lin confusion_N = mkN "confusion" ;
lin confutation_N = mkN "confutation" "confutations";
lin confute_V2 = mkV2 (mkV "confute" "confutes" "confuted" "confuted" "confuting");
lin conga_N = mkN "conga" ;
lin conge_N = mkN "congé" "congés";
lin congeal_V = mkV "congeal" "congeals" "congealed" "congealed" "congealing";
lin congeal_V2 = mkV2 (mkV "congeal" "congeals" "congealed" "congealed" "congealing");
lin congealment_N = mkN "congealment" ;
lin congee_N = mkN "congee" ;
lin congener_N = mkN "congener" ;
lin congeneric_A = mkA "congeneric" ;
lin congenial_A = compoundA (mkA "congenial");
lin congeniality_N = mkN "congeniality" ;
lin congenialness_N = mkN "congenialness" ;
lin congenital_A = compoundA (mkA "congenital");
lin conger_N = mkN "conger" "congers";
lin conger_eel_N = mkN "conger-eel" "conger-eels";
lin congested_A = compoundA (mkA "congested");
lin congestion_N = mkN "congestion" ;
lin congestive_A = mkA "congestive" ;
lin congleton_PN = mkPN "Congleton";
lin conglomerate_A = compoundA (mkA "conglomerate");
lin conglomerate_N = mkN "conglomerate" "conglomerates";
lin conglomerate_V = mkV "conglomerate" "conglomerates" "conglomerated" "conglomerated" "conglomerating";
lin conglomerate_V2 = mkV2 (mkV "conglomerate" "conglomerates" "conglomerated" "conglomerated" "conglomerating");
lin conglomeration_N = mkN "conglomeration" "conglomerations";
lin congo_PN = mkPN "Congo";
lin congolese_A = compoundA (mkA "congolese");
lin congolese_N = mkN "congolese" "congolese";
lin congou_N = mkN "congou" ;
lin congratulate_V2 = mkV2 (mkV "congratulate" "congratulates" "congratulated" "congratulated" "congratulating");
lin congratulation_N = mkN "congratulation" "congratulations";
lin congratulatory_A = compoundA (mkA "congratulatory");
lin congregant_N = mkN "congregant" ;
lin congregate_V = mkV "congregate" "congregates" "congregated" "congregated" "congregating";
lin congregate_V2 = mkV2 (mkV "congregate" "congregates" "congregated" "congregated" "congregating");
lin congregation_N = mkN "congregation" "congregations";
lin congregational_A = compoundA (mkA "congregational");
lin congress_N = mkN "congress" "congresses";
lin congressional_A = compoundA (mkA "congressional");
lin congressman_N = mkN masculine (mkN "congressman" "congressmen");
lin congresswoman_N = mkN feminine (mkN "congresswoman" "congresswomen");
lin congruent_A = compoundA (mkA "congruent");
lin congruity_N = mkN "congruity" ;
lin congruous_A = compoundA (mkA "congruous");
lin conic_A = compoundA (mkA "conic");
lin conical_A = compoundA (mkA "conical");
lin conidiophore_N = mkN "conidiophore" ;
lin conidium_N = mkN "conidium" ;
lin conifer_N = mkN "conifer" "conifers";
lin coniferous_A = compoundA (mkA "coniferous");
lin conima_N = mkN "conima" ;
lin conjectural_A = compoundA (mkA "conjectural");
lin conjecture_N = mkN "conjecture" "conjectures";
lin conjecture_V = mkV "conjecture" "conjectures" "conjectured" "conjectured" "conjecturing";
lin conjecture_V2 = mkV2 (mkV "conjecture" "conjectures" "conjectured" "conjectured" "conjecturing");
lin conjoin_V = mkV "conjoin" "conjoins" "conjoined" "conjoined" "conjoining";
lin conjoin_V2 = mkV2 (mkV "conjoin" "conjoins" "conjoined" "conjoined" "conjoining");
lin conjoint_A = compoundA (mkA "conjoint");
lin conjugal_A = compoundA (mkA "conjugal");
lin conjugate_A = mkA "conjugate" ;
lin conjugate_V = mkV "conjugate" "conjugates" "conjugated" "conjugated" "conjugating";
lin conjugate_V2 = mkV2 (mkV "conjugate" "conjugates" "conjugated" "conjugated" "conjugating");
lin conjugation_N = mkN "conjugation" "conjugations";
lin conjunct_A = mkA "conjunct" ;
lin conjunction_N = mkN "conjunction" "conjunctions";
lin conjunctiva_N = mkN "conjunctiva" ;
lin conjunctival_A = mkA "conjunctival" ;
lin conjunctive_A = compoundA (mkA "conjunctive");
lin conjunctive_N = mkN "conjunctive" "conjunctives";
lin conjunctivitis_N = mkN "conjunctivitis" ;
lin conjuncture_N = mkN "conjuncture" "conjunctures";
lin conjuration_N = mkN "conjuration" "conjurations";
lin conjure_V = mkV "conjure" "conjures" "conjured" "conjured" "conjuring";
lin conjure_V2 = mkV2 (mkV "conjure" "conjures" "conjured" "conjured" "conjuring");
lin conjurer_N = mkN "conjurer" "conjurers";
lin conjuring_N = mkN "conjuring" ;
lin conjuror_N = mkN "conjuror" "conjurors";
lin conk_N = mkN "conk" "conks";
lin conk_V = mkV "conk" "conks" "conked" "conked" "conking";
lin conker_N = mkN "conker" "conkers";
lin connah's_quay_PN = mkPN "Connah's quay";
lin connate_A = mkA "connate" ;
lin connatural_A = mkA "connatural" ;
lin connaught_PN = mkPN "Connaught";
lin connect_V = mkV "connect" "connects" "connected" "connected" "connecting";
lin connect_V2 = mkV2 (mkV "connect" "connects" "connected" "connected" "connecting");
lin connecticut_PN = mkPN "Connecticut";
lin connection_N = mkN "connection" "connections";
lin connective_A = compoundA (mkA "connective");
lin connective_N = mkN "connective" "connectives";
lin connectivity_N = mkN "connectivity" ;
lin connexion_N = mkN "connexion" "connexions";
lin connie_PN = mkPN "Connie";
lin conning_A = compoundA (mkA "conning");
lin connivance_N = mkN "connivance" ;
lin connive_V = mkV "connive" "connives" "connived" "connived" "conniving";
lin connoisseur_N = mkN "connoisseur" "connoisseurs";
lin connotation_N = mkN "connotation" "connotations";
lin connotational_A = mkA "connotational" ;
lin connotative_A = mkA "connotative" ;
lin connote_V2 = mkV2 (mkV "connote" "connotes" "connoted" "connoted" "connoting");
lin connubial_A = compoundA (mkA "connubial");
lin conodont_N = mkN "conodont" ;
lin conquer_V2 = mkV2 (mkV "conquer" "conquers" "conquered" "conquered" "conquering");
lin conquerable_A = mkA "conquerable" ;
lin conqueror_N = mkN "conqueror" "conquerors";
lin conquest_N = mkN "conquest" "conquests";
lin conquistador_N = mkN "conquistador" "conquistadors";
lin cons_PN = mkPN "Cons";
lin consanguinity_N = mkN "consanguinity" ;
lin conscience_N = mkN "conscience" "consciences";
lin conscience_smitten_A = compoundA (mkA "conscience-smitten");
lin conscienceless_A = mkA "conscienceless" ;
lin conscientious_A = compoundA (mkA "conscientious");
lin conscientiousness_N = mkN "conscientiousness" ;
lin conscionable_A = mkA "conscionable" ;
lin conscious_A = compoundA (mkA "conscious");
lin consciousness_N = mkN "consciousness" ;
lin conscript_N = mkN "conscript" "conscripts";
lin conscript_V2 = mkV2 (mkV "conscript" "conscripts" "conscripted" "conscripted" "conscripting");
lin conscription_N = mkN "conscription" ;
lin consecrate_V2 = mkV2 (mkV "consecrate" "consecrates" "consecrated" "consecrated" "consecrating");
lin consecration_N = mkN "consecration" "consecrations";
lin consecutive_A = compoundA (mkA "consecutive");
lin consecutive_Adv = mkAdv "consecutive" ;
lin consensual_A = mkA "consensual" ;
lin consensus_N = mkN "consensus" "consensi" {- FIXME: guessed plural form -};
lin consent_N = mkN "consent" ;
lin consent_V = mkV "consent" "consents" "consented" "consented" "consenting";
lin consent_V2V = mkV2V (mkV "consent" "consents" "consented" "consented" "consenting") noPrep to_Prep ;
lin consentaneous_A = mkA "consentaneous" ;
lin consequence_N = mkN "consequence" "consequences";
lin consequent_A = compoundA (mkA "consequent");
lin consequential_A = compoundA (mkA "consequential");
lin conservancy_N = mkN "conservancy" "conservancies";
lin conservation_N = mkN "conservation" ;
lin conservatism_N = mkN "conservatism" ;
lin conservative_A = compoundA (mkA "conservative");
lin conservative_N = mkN "conservative" "conservatives";
lin conservatoire_N = mkN "conservatoire" "conservatoires";
lin conservator_N = mkN "conservator" ;
lin conservatory_N = mkN "conservatory" "conservatories";
lin conserve_N = mkN "conserve" "conserves";
lin conserve_V2 = mkV2 (mkV "conserve" "conserves" "conserved" "conserved" "conserving");
lin consett_PN = mkPN "Consett";
lin consider_V = mkV "consider" "considers" "considered" "considered" "considering";
lin consider_V2 = mkV2 (mkV "consider" "considers" "considered" "considered" "considering");
lin consider_V2A = mkV2A (mkV "consider" "considers" "considered" "considered" "considering") noPrep;
lin consider_V2V = mkV2V (mkV "consider" "considers" "considered" "considered" "considering") noPrep to_Prep ;
lin consider_V3 = mkV3 (mkV "consider" "considers" "considered" "considered" "considering");
lin consider_VS = mkVS (mkV "consider" "considers" "considered" "considered" "considering");
lin consider_VV = ingVV (mkV "consider" "considers" "considered" "considered" "considering");
lin considerable_A = compoundA (mkA "considerable");
lin considerate_A = compoundA (mkA "considerate");
lin considerateness_N = mkN "considerateness" ;
lin consideration_N = mkN "consideration" "considerations";
lin consign_V2 = mkV2 (mkV "consign" "consigns" "consigned" "consigned" "consigning");
lin consignee_N = mkN "consignee" "consignees";
lin consigner_N = mkN "consigner" "consigners";
lin consignment_N = mkN "consignment" "consignments";
lin consignor_N = mkN "consignor" "consignors";
lin consist_V = mkV "consist" "consists" "consisted" "consisted" "consisting";
lin consistence_N = mkN "consistence" ;
lin consistency_N = mkN "consistency" "consistencies";
lin consistent_A = compoundA (mkA "consistent");
lin consistory_N = mkN "consistory" "consistories";
lin consolable_A = compoundA (mkA "consolable");
lin consolation_N = mkN "consolation" "consolations";
lin consolatory_A = compoundA (mkA "consolatory");
lin console_N = mkN "console" "consoles";
lin console_V2 = mkV2 (mkV "console" "consoles" "consoled" "consoled" "consoling");
lin consolidate_V = mkV "consolidate" "consolidates" "consolidated" "consolidated" "consolidating";
lin consolidate_V2 = mkV2 (mkV "consolidate" "consolidates" "consolidated" "consolidated" "consolidating");
lin consolidation_N = mkN "consolidation" "consolidations";
lin consolidative_A = mkA "consolidative" ;
lin consomme_N = mkN "consommé" "consommés";
lin consonance_N = mkN "consonance" ;
lin consonant_A = compoundA (mkA "consonant");
lin consonant_N = mkN "consonant" "consonants";
lin consonantal_A = mkA "consonantal" ;
lin consort_N = mkN "consort" "consorts";
lin consort_V = mkV "consort" "consorts" "consorted" "consorted" "consorting";
lin consortium_N = mkN "consortium" "consortia" {- FIXME: guessed plural form -};
lin conspecific_A = mkA "conspecific" ;
lin conspecific_N = mkN "conspecific" ;
lin conspectus_N = mkN "conspectus" "conspectuses";
lin conspicuous_A = compoundA (mkA "conspicuous");
lin conspicuousness_N = mkN "conspicuousness" ;
lin conspiracy_N = mkN "conspiracy" "conspiracies";
lin conspirator_N = mkN "conspirator" "conspirators";
lin conspiratorial_A = compoundA (mkA "conspiratorial");
lin conspire_V = mkV "conspire" "conspires" "conspired" "conspired" "conspiring";
lin conspire_V2 = mkV2 (mkV "conspire" "conspires" "conspired" "conspired" "conspiring");
lin conspire_V2V = mkV2V (mkV "conspire" "conspires" "conspired" "conspired" "conspiring") noPrep to_Prep ;
lin constable_N = mkN "constable" "constables";
lin constabulary_N = mkN "constabulary" "constabularies";
lin constance_PN = mkPN "Constance";
lin constancy_N = mkN "constancy" ;
lin constant_A = compoundA (mkA "constant");
lin constant_N = mkN "constant" "constants";
lin constantan_N = mkN "constantan" ;
lin constellation_N = mkN "constellation" "constellations";
lin consternation_N = mkN "consternation" ;
lin constipate_V2 = mkV2 (mkV "constipate" "constipates" "constipated" "constipated" "constipating");
lin constipation_N = mkN "constipation" ;
lin constituency_N = mkN "constituency" "constituencies";
lin constituent_A = compoundA (mkA "constituent");
lin constituent_N = mkN "constituent" "constituents";
lin constitute_V2 = mkV2 (mkV "constitute" "constitutes" "constituted" "constituted" "constituting");
lin constitution_N = mkN "constitution" "constitutions";
lin constitutional_A = compoundA (mkA "constitutional");
lin constitutional_N = mkN "constitutional" "constitutionals";
lin constitutionalism_N = mkN "constitutionalism" ;
lin constitutionalist_N = mkN "constitutionalist" "constitutionalists";
lin constitutionalize_V2 = mkV2 (mkV "constitutionalize" "constitutionalizes" "constitutionalized" "constitutionalized" "constitutionalizing");
lin constitutive_A = compoundA (mkA "constitutive");
lin constrain_V2 = mkV2 (mkV "constrain" "constrains" "constrained" "constrained" "constraining");
lin constrainedly_Adv = mkAdv "constrainedly" ;
lin constraint_N = mkN "constraint" "constraints";
lin constrict_V2 = mkV2 (mkV "constrict" "constricts" "constricted" "constricted" "constricting");
lin constricting_A = mkA "constricting" ;
lin constriction_N = mkN "constriction" "constrictions";
lin constrictor_N = mkN "constrictor" ;
lin construal_N = mkN "construal" ;
lin construct_V2 = mkV2 (mkV "construct" "constructs" "constructed" "constructed" "constructing");
lin construction_N = mkN "construction" "constructions";
lin constructional_A = compoundA (mkA "constructional");
lin constructive_A = compoundA (mkA "constructive");
lin constructiveness_N = mkN "constructiveness";
lin constructivism_N = mkN "constructivism" ;
lin constructivist_N = mkN "constructivist" ;
lin constructor_N = mkN "constructor" "constructors";
lin construe_V = mkV "construe" "construes" "construed" "construed" "construing";
lin construe_V2 = mkV2 (mkV "construe" "construes" "construed" "construed" "construing");
lin construe_V2V = mkV2V (mkV "construe" "construes" "construed" "construed" "construing") noPrep to_Prep ;
lin consubstantial_A = mkA "consubstantial" ;
lin consubstantiation_N = mkN "consubstantiation" ;
lin consuetude_N = mkN "consuetude" ;
lin consuetudinary_N = mkN "consuetudinary" ;
lin consul_N = mkN "consul" "consuls";
lin consular_A = compoundA (mkA "consular");
lin consulate_N = mkN "consulate" "consulates";
lin consulship_N = mkN "consulship" "consulships";
lin consult_V = mkV "consult" "consults" "consulted" "consulted" "consulting";
lin consult_V2 = mkV2 (mkV "consult" "consults" "consulted" "consulted" "consulting");
lin consultancy_N = mkN "consultancy" ;
lin consultant_N = mkN "consultant" "consultants";
lin consultation_N = mkN "consultation" "consultations";
lin consultative_A = compoundA (mkA "consultative");
lin consumable_A = mkA "consumable" ;
lin consume_V = mkV "consume" "consumes" "consumed" "consumed" "consuming";
lin consume_V2 = mkV2 (mkV "consume" "consumes" "consumed" "consumed" "consuming");
lin consumer_N = mkN "consumer" "consumers";
lin consumerism_N = mkN "consumerism" ;
lin consummate_A = compoundA (mkA "consummate");
lin consummate_V2 = mkV2 (mkV "consummate" "consummates" "consummated" "consummated" "consummating");
lin consummation_N = mkN "consummation" "consummations";
lin consumption_N = mkN "consumption" ;
lin consumptive_A = compoundA (mkA "consumptive");
lin consumptive_N = mkN "consumptive" "consumptives";
lin cont_PN = mkPN "Cont";
lin contact_N = mkN "contact" "contacts";
lin contact_V2 = mkV2 (mkV "contact" "contacts" "contacted" "contacted" "contacting");
lin contadino_N = mkN "contadino" ;
lin contagion_N = mkN "contagion" "contagions";
lin contagious_A = compoundA (mkA "contagious");
lin contain_V2 = mkV2 (mkV "contain" "contains" "contained" "contained" "containing");
lin container_N = mkN "container" "containers";
lin containerful_N = mkN "containerful" ;
lin containment_N = mkN "containment" ;
lin contaminant_N = mkN "contaminant" "contaminants";
lin contaminate_V2 = mkV2 (mkV "contaminate" "contaminates" "contaminated" "contaminated" "contaminating");
lin contamination_N = mkN "contamination" "contaminations";
lin contaminative_A = mkA "contaminative" ;
lin contemn_V2 = mkV2 (mkV "contemn" "contemns" "contemned" "contemned" "contemning");
lin contemplate_V = mkV "contemplate" "contemplates" "contemplated" "contemplated" "contemplating";
lin contemplate_V2 = mkV2 (mkV "contemplate" "contemplates" "contemplated" "contemplated" "contemplating");
lin contemplate_VS = mkVS (mkV "contemplate" "contemplates" "contemplated" "contemplated" "contemplating");
lin contemplation_N = mkN "contemplation" ;
lin contemplative_A = compoundA (mkA "contemplative");
lin contemplative_N = mkN "contemplative" ;
lin contemporaneity_N = mkN "contemporaneity" ;
lin contemporaneous_A = compoundA (mkA "contemporaneous");
lin contemporary_A = compoundA (mkA "contemporary");
lin contemporary_N = mkN human (mkN "contemporary" "contemporaries");
lin contempt_N = mkN "contempt" ;
lin contemptible_A = compoundA (mkA "contemptible");
lin contemptuous_of_A2 = mkA2 (compoundA (mkA "contemptuous")) (mkPrep "of");
lin contemptuousness_N = mkN "contemptuousness" ;
lin contend_V = mkV "contend" "contends" "contended" "contended" "contending";
lin contend_VS = mkVS (mkV "contend" "contends" "contended" "contended" "contending");
lin contender_N = mkN "contender" "contenders";
lin content_A = compoundA (mkA "content");
lin content_N = mkN "content" "contents";
lin content_V2 = mkV2 (mkV "content" "contents" "contented" "contented" "contenting");
lin contentedly_Adv = mkAdv "contentedly" ;
lin contentedness_N = mkN "contentedness" ;
lin contention_N = mkN "contention" "contentions";
lin contentious_A = compoundA (mkA "contentious");
lin contentment_N = mkN "contentment" ;
lin contents_N = mkN "contents" ;
lin conterminous_A = compoundA (mkA "conterminous");
lin contest_N = mkN "contest" "contests";
lin contest_V = mkV "contest" "contests" "contested" "contested" "contesting";
lin contest_V2 = mkV2 (mkV "contest" "contests" "contested" "contested" "contesting");
lin contestable_A = mkA "contestable" ;
lin contestant_N = mkN "contestant" "contestants";
lin contestee_N = mkN "contestee" ;
lin contester_N = mkN "contester" ;
lin context_N = mkN "context" "contexts";
lin contextual_A = compoundA (mkA "contextual");
lin contextualism_N = mkN "contextualism" ;
lin contiguity_N = mkN "contiguity" ;
lin contiguous_A = compoundA (mkA "contiguous");
lin continence_N = mkN "continence" ;
lin continent_A = compoundA (mkA "continent");
lin continent_N = mkN "continent" "continents";
lin continental_A = compoundA (mkA "continental");
lin contingency_N = mkN "contingency" "contingencies";
lin contingent_A = compoundA (mkA "contingent");
lin contingent_N = mkN "contingent" "contingents";
lin continual_A = compoundA (mkA "continual");
lin continuance_N = mkN "continuance" "IRREG";
lin continuation_N = mkN "continuation" "continuations";
lin continue_V = mkV "continue" "continues" "continued" "continued" "continuing";
lin continue_V2 = mkV2 (mkV "continue" "continues" "continued" "continued" "continuing");
lin continue_VS = mkVS (mkV "continue" "continues" "continued" "continued" "continuing");
lin continue_VV = mkVV (mkV "continue" "continues" "continued" "continued" "continuing");
lin continuity_N = mkN "continuity" ;
lin continuous_A = compoundA (mkA "continuous");
lin continuousness_N = mkN "continuousness" ;
lin continuum_N = mkN "continuum" ;
lin conto_N = mkN "conto" ;
lin contort_V2 = mkV2 (mkV "contort" "contorts" "contorted" "contorted" "contorting");
lin contortion_N = mkN "contortion" "contortions";
lin contortionist_N = mkN "contortionist" "contortionists";
lin contour_N = mkN "contour" "contours";
lin contour_V2 = mkV2 (mkV "contour" "contours" "contoured" "contoured" "contouring");
lin contraband_N = mkN "contraband" ;
lin contrabass_A = mkA "contrabass" ;
lin contrabass_N = mkN "contrabass" "contrabasses";
lin contrabassoon_N = mkN "contrabassoon" ;
lin contraception_N = mkN "contraception" ;
lin contraceptive_A = compoundA (mkA "contraceptive");
lin contraceptive_N = mkN "contraceptive" "contraceptives";
lin contract_N = mkN "contract" "contracts";
lin contract_V = mkV "contract" "contracts" "contracted" "contracted" "contracting";
lin contract_V2 = mkV2 (mkV "contract" "contracts" "contracted" "contracted" "contracting");
lin contract_V2V = mkV2V (mkV "contract" "contracts" "contracted" "contracted" "contracting") noPrep to_Prep ;
lin contractible_A = compoundA (mkA "contractible");
lin contractile_A = compoundA (mkA "contractile");
lin contractility_N = mkN "contractility" ;
lin contraction_N = mkN "contraction" "contractions";
lin contractor_N = mkN human (mkN "contractor" "contractors");
lin contractual_A = compoundA (mkA "contractual");
lin contracture_N = mkN "contracture" ;
lin contradict_V2 = mkV2 (mkV "contradict" "contradicts" "contradicted" "contradicted" "contradicting");
lin contradiction_N = mkN "contradiction" "contradictions";
lin contradictoriness_N = mkN "contradictoriness" ;
lin contradictory_A = compoundA (mkA "contradictory");
lin contradictory_N = mkN "contradictory" ;
lin contradistinction_N = mkN "contradistinction" "contradistinctions";
lin contradistinguish_V2 = mkV2 (mkV "contradistinguish" "contradistinguishes" "contradistinguished" "contradistinguished" "contradistinguishing");
lin contrail_N = mkN "contrail" ;
lin contraindication_N = mkN "contraindication" ;
lin contralateral_A = mkA "contralateral" ;
lin contralto_N = mkN "contralto" "contraltos";
lin contraption_N = mkN "contraption" "contraptions";
lin contrapuntal_A = compoundA (mkA "contrapuntal");
lin contrapuntist_N = mkN "contrapuntist" ;
lin contrarian_N = mkN "contrarian" ;
lin contrariety_N = mkN "contrariety" "contrarieties";
lin contrariness_N = mkN "contrariness" ;
lin contrarious_A = mkA "contrarious" ;
lin contrariwise_Adv = mkAdv "contrariwise";
lin contrary_A = compoundA (mkA "contrary");
lin contrary_N = mkN "contrary" "contraries";
lin contrast_N = mkN "contrast" "contrasts";
lin contrast_V = mkV "contrast" "contrasts" "contrasted" "contrasted" "contrasting";
lin contrast_V2 = mkV2 (mkV "contrast" "contrasts" "contrasted" "contrasted" "contrasting");
lin contrastingly_Adv = mkAdv "contrastingly";
lin contrastive_A = mkA "contrastive" ;
lin contrasty_A = mkA "contrasty" ;
lin contravene_V2 = mkV2 (mkV "contravene" "contravenes" "contravened" "contravened" "contravening");
lin contravention_N = mkN "contravention" "contraventions";
lin contretemps_N = mkN "contretemps" "contretemps";
lin contribute_V = mkV "contribute" "contributes" "contributed" "contributed" "contributing";
lin contribute_V2 = mkV2 (mkV "contribute" "contributes" "contributed" "contributed" "contributing");
lin contribute_V2V = mkV2V (mkV "contribute" "contributes" "contributed" "contributed" "contributing") noPrep to_Prep ;
lin contribution_N = mkN "contribution" "contributions";
lin contributor_N = mkN human (mkN "contributor" "contributors");
lin contributory_A = compoundA (mkA "contributory");
lin contrite_A = compoundA (mkA "contrite");
lin contrition_N = mkN "contrition" ;
lin contrivance_N = mkN "contrivance" "contrivances";
lin contrive_V = mkV "contrive" "contrives" "contrived" "contrived" "contriving";
lin contrive_V2 = mkV2 (mkV "contrive" "contrives" "contrived" "contrived" "contriving");
lin contriver_N = mkN "contriver" "contrivers";
lin control_N = mkN "control" "controls";
lin control_V = mkV "control";
lin control_V2 = mkV2 (mkV "control" "controls" "controlled" "controlled" "controlling");
lin controllable_A = compoundA (mkA "controllable");
lin controller_N = mkN "controller" "controllers";
lin controllership_N = mkN "controllership" ;
lin controlling_A = mkA "controlling" ;
lin controversial_A = compoundA (mkA "controversial");
lin controversialist_N = mkN "controversialist" "controversialists";
lin controversy_N = mkN "controversy" "controversies";
lin controvert_V2 = mkV2 (mkV "controvert" "controverts" "controverted" "controverted" "controverting");
lin contumacious_A = compoundA (mkA "contumacious");
lin contumacy_N = mkN "contumacy" "contumacies";
lin contumelious_A = compoundA (mkA "contumelious");
lin contumely_N = mkN "contumely" "contumelies";
lin contuse_V2 = mkV2 (mkV "contuse" "contuses" "contused" "contused" "contusing");
lin contusion_N = mkN "contusion" "contusions";
lin conundrum_N = mkN "conundrum" "conundrums";
lin conurbation_N = mkN "conurbation" "conurbations";
lin convalesce_V = mkV "convalesce" "convalesces" "convalesced" "convalesced" "convalescing";
lin convalescence_N = mkN "convalescence" ;
lin convalescent_A = compoundA (mkA "convalescent");
lin convalescent_N = mkN "convalescent" "convalescents";
lin convection_N = mkN "convection" ;
lin convector_N = mkN "convector" "convectors";
lin convene_V = mkV "convene" "convenes" "convened" "convened" "convening";
lin convene_V2 = mkV2 (mkV "convene" "convenes" "convened" "convened" "convening");
lin convener_N = mkN "convener" "conveners";
lin convenience_N = mkN "convenience" "conveniences";
lin convenient_A = compoundA (mkA "convenient");
lin convent_N = mkN "convent" "convents";
lin conventicle_N = mkN "conventicle" "conventicles";
lin convention_N = mkN "convention" "conventions";
lin conventional_A = compoundA (mkA "conventional");
lin conventionality_N = mkN "conventionality" "conventionalities";
lin conventionalization_N = mkN "conventionalization" ;
lin conventionalized_A = mkA "conventionalized" ;
lin conventioneer_N = mkN "conventioneer" ;
lin converge_V = mkV "converge" "converges" "converged" "converged" "converging";
lin convergence_N = mkN "convergence" "convergences";
lin convergent_A = compoundA (mkA "convergent");
lin conversant_A = compoundA (mkA "conversant");
lin conversation_N = mkN "conversation" "conversations";
lin conversational_A = compoundA (mkA "conversational");
lin conversationalist_N = mkN "conversationalist" "conversationalists";
lin converse_A = compoundA (mkA "converse");
lin converse_N = mkN "converse" "converses";
lin converse_V = mkV "converse" "converses" "conversed" "conversed" "conversing";
lin conversion_N = mkN "conversion" "conversions";
lin convert_N = mkN "convert" "converts";
lin convert_V = mkV "convert";
lin convert_V2 = mkV2 (mkV "convert" "converts" "converted" "converted" "converting");
lin converter_N = mkN "converter" "converters";
lin convertibility_N = mkN "convertibility" ;
lin convertible_A = compoundA (mkA "convertible");
lin convertible_N = mkN "convertible" "convertibles";
lin convex_A = compoundA (mkA "convex");
lin convexity_N = mkN "convexity" ;
lin convey_V2 = mkV2 (mkV "convey" "conveys" "conveyed" "conveyed" "conveying");
lin conveyance_N = mkN "conveyance" "conveyances";
lin conveyancer_N = mkN "conveyancer" "conveyancers";
lin conveyer_N = mkN "conveyer" "conveyers";
lin conveyer_belt_N = mkN "conveyer-belt" "conveyer-belts";
lin conveyor_N = mkN "conveyor" "conveyors";
lin convict_N = mkN "convict" "convicts";
lin convict_V2 = mkV2 (mkV "convict" "convicts" "convicted" "convicted" "convicting");
lin conviction_N = mkN "conviction" "convictions";
lin convince_V2 = mkV2 (mkV "convince" "convinces" "convinced" "convinced" "convincing");
lin convince_V2V = mkV2V (mkV "convince") noPrep to_Prep ;
lin convincible_A = compoundA (mkA "convincible");
lin convincing_A = compoundA (mkA "convincing");
lin convincingness_N = mkN "convincingness" ;
lin convivial_A = compoundA (mkA "convivial");
lin conviviality_N = mkN "conviviality" "convivialities";
lin convocation_N = mkN "convocation" "convocations";
lin convoke_V2 = mkV2 (mkV "convoke" "convokes" "convoked" "convoked" "convoking");
lin convolute_A = mkA "convolute" ;
lin convoluted_A = compoundA (mkA "convoluted");
lin convolution_N = mkN "convolution" "convolutions";
lin convolvulus_N = mkN "convolvulus" "convolvuluses";
lin convoy_N = mkN "convoy" "convoys";
lin convoy_V2 = mkV2 (mkV "convoy" "convoys" "convoyed" "convoyed" "convoying");
lin convulse_V2 = mkV2 (mkV "convulse" "convulses" "convulsed" "convulsed" "convulsing");
lin convulsion_N = mkN "convulsion" "convulsions";
lin convulsive_A = compoundA (mkA "convulsive");
lin conwy_PN = mkPN "Conwy";
lin cony_N = mkN "cony" "conies";
lin coo_N = mkN "coo" "coos";
lin coo_V = mkV "coo" "coos" "cooed" "cooed" "cooing";
lin coo_V2 = mkV2 (mkV "coo" "coos" "cooed" "cooed" "cooing");
lin cook_N = mkN "cook" "cooks";
lin cook_V = mkV "cook" "cooks" "cooked" "cooked" "cooking";
lin cook_V2 = mkV2 (mkV "cook" "cooks" "cooked" "cooked" "cooking");
lin cookbook_N = mkN "cookbook" "cookbooks";
lin cooker_N = mkN "cooker" "cookers";
lin cookery_N = mkN "cookery" ;
lin cookery_book_N = mkN "cookery-book" "cookery-books";
lin cookfire_N = mkN "cookfire" ;
lin cookham_PN = mkPN "Cookham";
lin cookhouse_N = mkN "cookhouse" "cookhouses";
lin cookie_N = mkN "cookie" "cookies";
lin cooking_N = mkN "cooking" ;
lin cookout_N = mkN "cookout" ;
lin cookstove_N = mkN "cookstove" ;
lin cooky_N = mkN "cooky" "cookies";
lin cool_A = mkA "cool" "cooler";
lin cool_N = mkN "cool" ;
lin cool_V = mkV "cool" "cools" "cooled" "cooled" "cooling";
lin cool_V2 = mkV2 (mkV "cool" "cools" "cooled" "cooled" "cooling");
lin cool_headed_A = compoundA (mkA "cool-headed");
lin coolant_N = mkN "coolant" "coolants";
lin cooler_N = mkN "cooler" "coolers";
lin coolie_N = mkN "coolie" "coolies";
lin cooling_N = mkN "cooling" ;
lin cooling_tower_N = mkN "cooling-tower" "cooling-towers";
lin coolness_N = mkN "coolness" ;
lin coon_N = mkN "coon" "coons";
lin coondog_N = mkN "coondog" ;
lin coonhound_N = mkN "coonhound" ;
lin coontie_N = mkN "coontie" ;
lin coop_N = mkN "coop" "coops";
lin coop_V2 = mkV2 (mkV "coop" "coops" "cooped" "cooped" "cooping");
lin cooper_N = mkN "cooper" "coopers";
lin cooperate_V = mkV "cooperate" "cooperates" "cooperated" "cooperated" "cooperating";
lin cooperation_N = mkN "cooperation" ;
lin cooperative_A = compoundA (mkA "cooperative");
lin cooperative_N = mkN "cooperative" "cooperatives";
lin cooperator_N = mkN "cooperator" "cooperators";
lin coordinate_A = compoundA (mkA "coordinate");
lin coordinate_N = mkN "coordinate" "coordinates";
lin coordinate_V = mkV "coordinate";
lin coordinate_V2 = mkV2 (mkV "coordinate" "coordinates" "coordinated" "coordinated" "coordinating");
lin coordination_N = mkN "coordination" "coordinations";
lin coordinator_N = mkN "coordinator" "coordinators";
lin coot_N = mkN "coot" "coots";
lin cooter_N = mkN "cooter" ;
lin cop_N = mkN "cop" "cops";
lin cop_V = mkV "cop" "cops" "copped" "copped" "copping";
lin cop_V2 = mkV2 (mkV "cop" "cops" "copped" "copped" "copping");
lin cop_out_N = mkN "cop-out" "cop-outs";
lin copacetic_A = mkA "copacetic" ;
lin copaiba_N = mkN "copaiba" ;
lin copal_N = mkN "copal" ;
lin copalite_N = mkN "copalite" ;
lin copartner_N = mkN "copartner" "copartners";
lin copartnership_N = mkN "copartnership" "copartnerships";
lin cope_N = mkN "cope" "copes";
lin cope_V = mkV "cope" "copes" "coped" "coped" "coping";
lin copeck_N = mkN "copeck" "copecks";
lin copenhagen_PN = mkPN "Copenhagen";
lin copepod_N = mkN "copepod" ;
lin copernican_A = compoundA (mkA "copernican");
lin copilot_N = mkN "copilot" ;
lin coping_N = mkN "coping" "copings";
lin coping_stone_N = mkN "coping-stone" "coping-stones";
lin copious_A = compoundA (mkA "copious");
lin coplanar_A = mkA "coplanar" ;
lin copolymer_N = mkN "copolymer" ;
lin copout_N = mkN "copout" ;
lin copper_N = mkN "copper" "coppers";
lin copper_V2 = mkV2 (mkV "copper" "coppers" "coppered" "coppered" "coppering");
lin copper_bottom_V2 = mkV2 (mkV "copper-bottom" "copper-bottoms" "copper-bottomed" "copper-bottomed" "copper-bottoming");
lin copper_bottomed_A = compoundA (mkA "copper-bottomed");
lin copperhead_N = mkN "copperhead" "copperheads";
lin copperplate_N = mkN "copperplate" ;
lin coppersmith_N = mkN "coppersmith" "coppersmiths";
lin copperware_N = mkN "copperware" ;
lin coppery_A = mkA "coppery" ;
lin coppice_N = mkN "coppice" "coppices";
lin coppull_PN = mkPN "Coppull";
lin copra_N = mkN "copra" ;
lin coproduction_N = mkN "coproduction" ;
lin coprolalia_N = mkN "coprolalia" ;
lin coprolite_N = mkN "coprolite" ;
lin coprolith_N = mkN "coprolith" ;
lin coprophagy_N = mkN "coprophagy" ;
lin copse_N = mkN "copse" "copses";
lin copt_A = compoundA (mkA "copt");
lin copt_N = mkN "copt" "copts";
lin coptic_N = mkN "coptic" "coptics";
lin copula_N = mkN "copula" "copulas";
lin copular_A = mkA "copular" ;
lin copulate_V = mkV "copulate" "copulates" "copulated" "copulated" "copulating";
lin copulation_N = mkN "copulation" "copulations";
lin copulative_A = compoundA (mkA "copulative");
lin copulative_N = mkN "copulative" "copulatives";
lin copy_N = mkN "copy" "copies";
lin copy_V = mkV "copy" "copies" "copied" "copied" "copying";
lin copy_V2 = mkV2 (mkV "copy" "copies" "copied" "copied" "copying");
lin copybook_N = mkN "copybook" "copybooks";
lin copycat_N = mkN "copycat" "copycats";
lin copyhold_N = mkN "copyhold" ;
lin copyholder_N = mkN "copyholder" "copyholders";
lin copying_N = mkN "copying" ;
lin copyist_N = mkN "copyist" "copyists";
lin copyright_N = mkN "copyright" "copyrights";
lin copyright_V2 = mkV2 (mkV "copyright" "copyrights" "copyrighted" "copyrighted" "copyrighting");
lin copywriter_N = mkN "copywriter" "copywriters";
lin coquetry_N = mkN "coquetry" "coquetries";
lin coquette_N = mkN "coquette" "coquettes";
lin coquettish_A = compoundA (mkA "coquettish");
lin coquille_N = mkN "coquille" ;
lin cor_anglais_N = mkN "cor anglais" "cor anglaes" {- FIXME: guessed plural form -};
lin coracle_N = mkN "coracle" "coracles";
lin coral_A = compoundA (mkA "coral");
lin coral_N = mkN "coral" "corals";
lin coral_reef_N = mkN "coral-reef" "coral-reefs";
lin coralbells_N = mkN "coralbells" ;
lin coralberry_N = mkN "coralberry" ;
lin coralwood_N = mkN "coralwood" ;
lin corbel_N = mkN "corbel" "corbels";
lin corbelled_A = mkA "corbelled" ;
lin corbina_N = mkN "corbina" ;
lin corby_PN = mkPN "Corby";
lin corchorus_N = mkN "corchorus" ;
lin cord_N = mkN "cord" "cords";
lin cord_V2 = mkV2 (mkV "cord" "cords" "corded" "corded" "cording");
lin cordage_N = mkN "cordage" ;
lin cordate_A = mkA "cordate" ;
lin cordgrass_N = mkN "cordgrass" ;
lin cordial_A = compoundA (mkA "cordial");
lin cordial_N = mkN "cordial" "cordials";
lin cordiality_N = mkN "cordiality" "cordialities";
lin cordierite_N = mkN "cordierite" ;
lin cordite_N = mkN "cordite" ;
lin corditis_N = mkN "corditis" ;
lin cordless_A = mkA "cordless" ;
lin cordoba_N = mkN "cordoba" ;
lin cordoba_PN = mkPN "Cordoba";
lin cordon_N = mkN "cordon" "cordons";
lin cordon_V2 = mkV2 (mkV "cordon" "cordons" "cordoned" "cordoned" "cordoning");
lin cordon_bleu_A = compoundA (mkA "cordon bleu");
lin cordovan_N = mkN "cordovan" ;
lin cords_N = mkN "cords" ;
lin corduroy_N = mkN "corduroy" ;
lin cordwood_N = mkN "cordwood" ;
lin core_N = mkN "core" "cores";
lin core_V2 = mkV2 (mkV "core" "cores" "cored" "cored" "coring");
lin coreference_N = mkN "coreference" ;
lin coreferent_A = mkA "coreferent" ;
lin coreferential_A = mkA "coreferential" ;
lin coreligionist_N = mkN "coreligionist" "coreligionists";
lin coreopsis_N = mkN "coreopsis" ;
lin corer_N = mkN "corer" ;
lin corespondent_N = mkN "corespondent" ;
lin corgi_N = mkN "corgi" "corgis";
lin coriaceous_A = mkA "coriaceous" ;
lin coriander_N = mkN "coriander" ;
lin corinthian_A = compoundA (mkA "corinthian");
lin corinthian_N = mkN "corinthian" "corinthians";
lin cork_N = mkN "cork" "corks";
lin cork_PN = mkPN "Cork";
lin cork_V2 = mkV2 (mkV "cork" "corks" "corked" "corked" "corking");
lin corkage_N = mkN "corkage" ;
lin corkboard_N = mkN "corkboard" ;
lin corker_N = mkN "corker" "corkers";
lin corkscrew_N = mkN "corkscrew" "corkscrews";
lin corkwood_N = mkN "corkwood" ;
lin corm_N = mkN "corm" "corms";
lin cormorant_N = mkN "cormorant" "cormorants";
lin cormous_A = mkA "cormous" ;
lin corn_N = mkN "corn" "corns";
lin corn_V2 = mkV2 (mkV "corn" "corns" "corned" "corned" "corning");
lin corn_exchange_N = mkN "corn-exchange" "corn-exchanges";
lin cornbread_N = mkN "cornbread" ;
lin corncob_N = mkN "corncob" "corncobs";
lin corncrake_N = mkN "corncrake" "corncrakes";
lin corncrib_N = mkN "corncrib" ;
lin cornea_N = mkN "cornea" "corneas";
lin corneal_A = mkA "corneal" ;
lin cornelian_N = mkN "cornelian" "cornelians";
lin corneous_A = mkA "corneous" ;
lin corner_N = mkN "corner" "corners";
lin corner_V = mkV "corner" "corners" "cornered" "cornered" "cornering";
lin corner_V2 = mkV2 (mkV "corner" "corners" "cornered" "cornered" "cornering");
lin corner_kick_N = mkN "corner-kick" "corner-kicks";
lin cornerback_N = mkN "cornerback" ;
lin cornerstone_N = mkN "cornerstone" "cornerstones";
lin cornet_N = mkN "cornet" "cornets";
lin cornetfish_N = mkN "cornetfish" ;
lin cornfield_N = mkN "cornfield" ;
lin cornflake_N = mkN "cornflake" "cornflakes";
lin cornflour_N = mkN "cornflour" ;
lin cornflower_N = mkN "cornflower" "cornflowers";
lin cornhusk_N = mkN "cornhusk" ;
lin cornhusker_N = mkN "cornhusker" ;
lin cornhusking_N = mkN "cornhusking" ;
lin cornice_N = mkN "cornice" "cornices";
lin cornmeal_N = mkN "cornmeal" ;
lin cornpone_N = mkN "cornpone" ;
lin cornsilk_N = mkN "cornsilk" ;
lin cornsmut_N = mkN "cornsmut" ;
lin cornstalk_N = mkN "cornstalk" ;
lin cornstarch_N = mkN "cornstarch" ;
lin cornu_N = mkN "cornu" ;
lin cornucopia_N = mkN "cornucopia" "cornucopias";
lin cornwall_PN = mkPN "Cornwall";
lin corny_A = mkA "corny" "cornier";
lin corolla_N = mkN "corolla" "corollas";
lin corollary_N = mkN "corollary" "corollaries";
lin corona_N = mkN "corona" "coronas";
lin coronary_A = compoundA (mkA "coronary");
lin coronary_N = mkN "coronary" "coronaries";
lin coronation_N = mkN "coronation" "coronations";
lin coroner_N = mkN "coroner" "coroners";
lin coronet_N = mkN "coronet" "coronets";
lin coroneted_A = mkA "coroneted" ;
lin coronilla_N = mkN "coronilla" ;
lin coronion_N = mkN "coronion" ;
lin corozo_N = mkN "corozo" ;
lin corp_PN = mkPN "Corp";
lin corporal_A = compoundA (mkA "corporal");
lin corporal_N = mkN "corporal" "corporals";
lin corporate_A = compoundA (mkA "corporate");
lin corporation_N = mkN "corporation" "corporations";
lin corporatism_N = mkN "corporatism" ;
lin corporatist_A = mkA "corporatist" ;
lin corporatist_N = mkN "corporatist" ;
lin corporeal_A = compoundA (mkA "corporeal");
lin corps_N = mkN "corps" "corps";
lin corps_de_ballet_N = mkN "corps de ballet" "IRREG";
lin corps_diplomatique_N = mkN "corps diplomatique" "IRREG";
lin corpse_N = mkN "corpse" "corpses";
lin corpulence_N = mkN "corpulence" ;
lin corpulent_A = compoundA (mkA "corpulent");
lin corpus_N = mkN "corpus" "corpora";
lin corpuscle_N = mkN "corpuscle" "corpuscles";
lin corpuscular_A = mkA "corpuscular" ;
lin corral_N = mkN "corral" "corrals";
lin corral_V2 = mkV2 (mkV "corral" "corrals" "corralled" "corralled" "corralling");
lin correct_A = compoundA (mkA "correct");
lin correct_V = mkV "correct";
lin correct_V2 = mkV2 (mkV "correct" "corrects" "corrected" "corrected" "correcting");
lin correct_VS = mkVS (mkV "correct");
lin correctable_A = mkA "correctable" ;
lin correction_N = mkN "correction" "corrections";
lin correctional_A = mkA "correctional" ;
lin corrections_N = mkN "corrections" ;
lin correctitude_N = mkN "correctitude" ;
lin corrective_A = compoundA (mkA "corrective");
lin corrective_N = mkN "corrective" "correctives";
lin correctness_N = mkN "correctness" ;
lin correlate_N = mkN "correlate" ;
lin correlate_V = mkV "correlate" "correlates" "correlated" "correlated" "correlating";
lin correlate_V2 = mkV2 (mkV "correlate" "correlates" "correlated" "correlated" "correlating");
lin correlation_N = mkN "correlation" "correlations";
lin correlational_A = mkA "correlational" ;
lin correlative_A = compoundA (mkA "correlative");
lin correlative_N = mkN "correlative" "correlatives";
lin correspond_V = mkV "correspond" "corresponds" "corresponded" "corresponded" "corresponding";
lin correspond_V2 = mkV2 (mkV "correspond") to_Prep ;
lin correspondence_N = mkN "correspondence" "correspondences";
lin correspondent_N = mkN "correspondent" "correspondents";
lin correspondingly_Adv = mkAdv "correspondingly" ;
lin corridor_N = mkN "corridor" "corridors";
lin corrie_N = mkN "corrie" "corries";
lin corrigenda_N = mkN "corrigenda" ;
lin corrigendum_N = mkN "corrigendum" "corrigenda" {- FIXME: guessed plural form -};
lin corrigible_A = compoundA (mkA "corrigible");
lin corroborant_A = mkA "corroborant" ;
lin corroborate_V2 = mkV2 (mkV "corroborate" "corroborates" "corroborated" "corroborated" "corroborating");
lin corroboration_N = mkN "corroboration" ;
lin corroborative_A = compoundA (mkA "corroborative");
lin corrode_V = mkV "corrode" "corrodes" "corroded" "corroded" "corroding";
lin corrode_V2 = mkV2 (mkV "corrode" "corrodes" "corroded" "corroded" "corroding");
lin corrosion_N = mkN "corrosion" ;
lin corrosive_A = compoundA (mkA "corrosive");
lin corrosive_N = mkN "corrosive" "corrosives";
lin corrugate_V = mkV "corrugate" "corrugates" "corrugated" "corrugated" "corrugating";
lin corrugate_V2 = mkV2 (mkV "corrugate" "corrugates" "corrugated" "corrugated" "corrugating");
lin corrugation_N = mkN "corrugation" "corrugations";
lin corrupt_A = compoundA (mkA "corrupt");
lin corrupt_V = mkV "corrupt" "corrupts" "corrupted" "corrupted" "corrupting";
lin corrupt_V2 = mkV2 (mkV "corrupt" "corrupts" "corrupted" "corrupted" "corrupting");
lin corruptibility_N = mkN "corruptibility" ;
lin corruptible_A = compoundA (mkA "corruptible");
lin corruption_N = mkN "corruption" ;
lin corruptive_A = mkA "corruptive" ;
lin corruptness_N = mkN "corruptness" ;
lin corsage_N = mkN "corsage" "corsages";
lin corsair_N = mkN "corsair" "corsairs";
lin corse_N = mkN "corse" "corses";
lin corselet_N = mkN "corselet" "corselets";
lin corset_N = mkN "corset" "corsets";
lin corsham_PN = mkPN "Corsham";
lin corslet_N = mkN "corslet" "corslets";
lin cortege_1_N = mkN "cortege" "corteges";
lin cortege_2_N = mkN "cortège" "cortèges";
lin cortege_N = mkN "cortege" ;
lin cortex_N = mkN "cortex" "cortices" {- FIXME: guessed plural form -};
lin cortical_A = compoundA (mkA "cortical");
lin corticoafferent_A = mkA "corticoafferent" ;
lin corticoefferent_A = mkA "corticoefferent" ;
lin corticosteroid_N = mkN "corticosteroid" ;
lin corticosterone_N = mkN "corticosterone" ;
lin cortina_N = mkN "cortina" ;
lin cortisone_N = mkN "cortisone" ;
lin corundom_N = mkN "corundom" ;
lin corundum_N = mkN "corundum" ;
lin corunna_PN = mkPN "Corunna";
lin coruscate_V = mkV "coruscate" "coruscates" "coruscated" "coruscated" "coruscating";
lin coruscation_N = mkN "coruscation" "coruscations";
lin corvee_N = mkN "corvée" "corvées";
lin corvette_N = mkN "corvette" "corvettes";
lin corvine_A = mkA "corvine" ;
lin corydalis_N = mkN "corydalis" ;
lin corymb_N = mkN "corymb" ;
lin corymbose_A = mkA "corymbose" ;
lin corynebacterium_N = mkN "corynebacterium" ;
lin coryphantha_N = mkN "coryphantha" ;
lin corythosaur_N = mkN "corythosaur" ;
lin cos_N = mkN "cos" "cos";
lin coscoroba_N = mkN "coscoroba" ;
lin cosecant_N = mkN "cosecant" ;
lin coseismic_A = mkA "coseismic" ;
lin cosenza_PN = mkPN "Cosenza";
lin cosh_N = mkN "cosh" "coshes";
lin cosh_V2 = mkV2 (mkV "cosh" "coshes" "coshed" "coshed" "coshing");
lin cosher_A = compoundA (mkA "cosher");
lin cosignatory_A = compoundA (mkA "cosignatory");
lin cosignatory_N = mkN "cosignatory" "cosignatories";
lin cosigner_N = mkN "cosigner" ;
lin cosine_N = mkN "cosine" "cosines";
lin cosiness_N = mkN "cosiness" ;
lin cosmetic_A = compoundA (mkA "cosmetic");
lin cosmetic_N = mkN "cosmetic" "cosmetics";
lin cosmetically_Adv = mkAdv "cosmetically" ;
lin cosmetician_N = mkN "cosmetician" "cosmeticians";
lin cosmetologist_N = mkN "cosmetologist" ;
lin cosmetology_N = mkN "cosmetology" ;
lin cosmic_A = compoundA (mkA "cosmic");
lin cosmid_N = mkN "cosmid" ;
lin cosmogony_N = mkN "cosmogony" "cosmogonies";
lin cosmographer_N = mkN "cosmographer" ;
lin cosmography_N = mkN "cosmography" ;
lin cosmolatry_N = mkN "cosmolatry" ;
lin cosmologic_A = mkA "cosmologic" ;
lin cosmologist_N = mkN "cosmologist" ;
lin cosmology_N = mkN "cosmology" ;
lin cosmonaut_N = mkN "cosmonaut" "cosmonauts";
lin cosmopolitan_A = compoundA (mkA "cosmopolitan");
lin cosmopolitan_N = mkN "cosmopolitan" "cosmopolitans";
lin cosmos_N = mkN "cosmos" (variants {"cosmoi"; "cosmoses"});
lin cosmotron_N = mkN "cosmotron" ;
lin cosset_V2 = mkV2 (mkV "cosset" "cossets" "cosseted" "cosseted" "cosseting");
lin cost_N = mkN "cost" "costs";
lin cost_V = mkV "cost" "costs" "costed" "costed" "costing";
lin cost_V2 = mkV2 (mkV "cost" "costs" "costed" "costed" "costing");
lin costa_N = mkN "costa" ;
lin costa_rica_PN = mkPN "Costa rica";
lin costa_rican_A = compoundA (mkA "costa rican");
lin costa_rican_N = mkN "costa rican" "costa ricans";
lin costal_A = mkA "costal" ;
lin costate_A = mkA "costate" ;
lin costermonger_N = mkN "costermonger" "costermongers";
lin costia_N = mkN "costia" ;
lin costiasis_N = mkN "costiasis" ;
lin costing_N = mkN "costing" "costings";
lin costive_A = compoundA (mkA "costive");
lin costliness_N = mkN "costliness" ;
lin costly_A = mkA "costly" "costlier";
lin costmary_N = mkN "costmary" ;
lin costochondritis_N = mkN "costochondritis" ;
lin costs_N = mkN "costs" ;
lin costum_V2 = mkV2 (mkV "costum");
lin costume_N = mkN "costume" "costumes";
lin costumed_A = mkA "costumed" ;
lin costumier_N = mkN "costumier" "costumiers";
lin costusroot_N = mkN "costusroot" ;
lin cosy_A = mkA "cosy" "cosier";
lin cosy_N = mkN "cosy" "cosies";
lin cot_N = mkN "cot" "cots";
lin cotangent_N = mkN "cotangent" ;
lin cote_N = mkN "cote" "cotes";
lin cotenant_N = mkN "cotenant" "cotenants";
lin coterie_N = mkN "coterie" "coteries";
lin coterminous_A = compoundA (mkA "coterminous");
lin cotilion_N = mkN "cotilion" "cotilions";
lin cotillion_N = mkN "cotillion" "cotillions";
lin cotinga_N = mkN "cotinga" ;
lin cotoneaster_N = mkN "cotoneaster" ;
lin cottage_N = mkN "cottage" "cottages";
lin cottager_N = mkN "cottager" ;
lin cottar_N = mkN "cottar" "cottars";
lin cotter_N = mkN "cotter" "cotters";
lin cotton_N = mkN "cotton" ;
lin cotton_V = mkV "cotton" "cottons" "cottoned" "cottoned" "cottoning";
lin cotton_cake_N = mkN "cotton-cake" ;
lin cotton_plant_N = mkN "cotton-plant" "cotton-plants";
lin cotton_wool_N = mkN "cotton-wool" ;
lin cottonseed_N = mkN "cottonseed" ;
lin cottontail_N = mkN "cottontail" "cottontails";
lin cottonweed_N = mkN "cottonweed" ;
lin cottonwick_N = mkN "cottonwick" ;
lin cottonwood_N = mkN "cottonwood" ;
lin cottony_A = mkA "cottony" ;
lin cotyledon_N = mkN "cotyledon" "cotyledons";
lin coucal_N = mkN "coucal" ;
lin couch_N = mkN "couch" "couches";
lin couch_V = mkV "couch" "couches" "couched" "couched" "couching";
lin couch_V2 = mkV2 (mkV "couch" "couches" "couched" "couched" "couching");
lin couch_grass_N = mkN "couch-grass" ;
lin couchant_A = compoundA (mkA "couchant");
lin couchette_N = mkN "couchette" "couchettes";
lin cougar_N = mkN "cougar" "cougars";
lin cough_N = mkN "cough" "coughs";
lin cough_V = mkV "cough" "coughs" "coughed" "coughed" "coughing";
lin cough_V2 = mkV2 (mkV "cough" "coughs" "coughed" "coughed" "coughing");
lin coulisse_N = mkN "coulisse" ;
lin coulomb_N = mkN "coulomb" ;
lin coulter_N = mkN "coulter" "coulters";
lin council_N = mkN "council" "councils";
lin council_board_N = mkN "council-board" "council-boards";
lin council_chamber_N = mkN "council-chamber" "council-chambers";
lin councillor_N = mkN human (mkN "councillor" "councillors");
lin councillorship_N = mkN "councillorship" ;
lin councilman_N = mkN masculine (mkN "councilman" "councilmen");
lin councilwoman_N = mkN feminine (mkN "councilwoman" "councilwomen");
lin counsel_N = mkN "counsel" ;
lin counsel_V2 = mkV2 (mkV "counsel" "counsels" "counselled" "counselled" "counselling");
lin counsellor_N = mkN "counsellor" "counsellors";
lin counselor_N = mkN "counselor" ;
lin counselorship_N = mkN "counselorship" ;
lin count_N = mkN "count" "counts";
lin count_V = mkV "count" "counts" "counted" "counted" "counting";
lin count_V2 = mkV2 (mkV "count" "counts" "counted" "counted" "counting");
lin countable_A = compoundA (mkA "countable");
lin countdown_N = mkN "countdown" "countdowns";
lin countenance_N = mkN "countenance" "countenances";
lin countenance_V2 = mkV2 (mkV "countenance" "countenances" "countenanced" "countenanced" "countenancing");
lin counter_Adv = mkAdv "counter";
lin counter_N = mkN "counter" "counters";
lin counter_V = mkV "counter" "counters" "countered" "countered" "countering";
lin counter_V2 = mkV2 (mkV "counter" "counters" "countered" "countered" "countering");
lin counter_VS = mkVS (mkV "counter" "counters" "countered" "countered" "countering");
lin counter_example_N = mkN "counter-example" "counter-examples";
lin counter_revolution_N = mkN "counter-revolution" "counter-revolutions";
lin counter_revolutionary_A = compoundA (mkA "counter-revolutionary");
lin counter_revolutionary_N = mkN "counter-revolutionary" "counter-revolutionaries";
lin counteract_V2 = mkV2 (mkV "counteract" "counteracts" "counteracted" "counteracted" "counteracting");
lin counteraction_N = mkN "counteraction" "counteractions";
lin counteractive_A = mkA "counteractive" ;
lin counterargument_N = mkN "counterargument" ;
lin counterattack_N = mkN "counterattack" "counterattacks";
lin counterattack_V = mkV "counterattack" "counterattacks" "counterattacked" "counterattacked" "counterattacking";
lin counterattack_V2 = mkV2 (mkV "counterattack" "counterattacks" "counterattacked" "counterattacked" "counterattacking");
lin counterattraction_N = mkN "counterattraction" "counterattractions";
lin counterbalance_N = mkN "counterbalance" "counterbalances";
lin counterbalance_V2 = mkV2 (mkV "counterbalance" "counterbalances" "counterbalanced" "counterbalanced" "counterbalancing");
lin counterblast_N = mkN "counterblast" "counterblasts";
lin counterblow_N = mkN "counterblow" ;
lin counterbombardment_N = mkN "counterbombardment" ;
lin counterbore_N = mkN "counterbore" ;
lin countercharge_N = mkN "countercharge" ;
lin countercheck_N = mkN "countercheck" ;
lin counterclaim_N = mkN "counterclaim" "counterclaims";
lin counterclockwise_A = mkA "counterclockwise" ;
lin counterclockwise_Adv = mkAdv "counterclockwise";
lin countercoup_N = mkN "countercoup" ;
lin counterculture_N = mkN "counterculture" ;
lin countercurrent_N = mkN "countercurrent" ;
lin counterdemonstration_N = mkN "counterdemonstration" ;
lin counterdemonstrator_N = mkN "counterdemonstrator" ;
lin counterespionage_N = mkN "counterespionage" ;
lin counterexample_N = mkN "counterexample" ;
lin counterfactual_A = mkA "counterfactual" ;
lin counterfactuality_N = mkN "counterfactuality" ;
lin counterfeit_A = compoundA (mkA "counterfeit");
lin counterfeit_N = mkN "counterfeit" "counterfeits";
lin counterfeit_V2 = mkV2 (mkV "counterfeit" "counterfeits" "counterfeited" "counterfeited" "counterfeiting");
lin counterfeiter_N = mkN "counterfeiter" "counterfeiters";
lin counterfire_N = mkN "counterfire" ;
lin counterfoil_N = mkN "counterfoil" "counterfoils";
lin counterglow_N = mkN "counterglow" ;
lin counterinsurgent_A = mkA "counterinsurgent" ;
lin counterintelligence_N = mkN "counterintelligence" ;
lin counterintuitive_A = mkA "counterintuitive" ;
lin counterirritant_N = mkN "counterirritant" "counterirritants";
lin countermand_N = mkN "countermand" ;
lin countermand_V2 = mkV2 (mkV "countermand" "countermands" "countermanded" "countermanded" "countermanding");
lin countermarch_N = mkN "countermarch" ;
lin countermeasure_N = mkN "countermeasure" ;
lin countermine_N = mkN "countermine" "countermines";
lin countermine_V = mkV "countermine" "countermines" "countermined" "countermined" "countermining";
lin countermine_V2 = mkV2 (mkV "countermine" "countermines" "countermined" "countermined" "countermining");
lin counteroffensive_N = mkN "counteroffensive" ;
lin counteroffer_N = mkN "counteroffer" "counteroffers";
lin counterpane_N = mkN "counterpane" "counterpanes";
lin counterpart_N = mkN "counterpart" "counterparts";
lin counterperson_N = mkN "counterperson" ;
lin counterplea_N = mkN "counterplea" ;
lin counterplot_N = mkN "counterplot" "counterplots";
lin counterplot_V = mkV "counterplot" "counterplots" "counterplotted" "counterplotted" "counterplotting";
lin counterplot_V2 = mkV2 (mkV "counterplot" "counterplots" "counterplotted" "counterplotted" "counterplotting");
lin counterpoint_N = mkN "counterpoint" "counterpoints";
lin counterpoise_N = mkN "counterpoise" "counterpoises";
lin counterpoise_V2 = mkV2 (mkV "counterpoise" "counterpoises" "counterpoised" "counterpoised" "counterpoising");
lin counterproductive_A = mkA "counterproductive" ;
lin counterproposal_N = mkN "counterproposal" ;
lin counterpunch_N = mkN "counterpunch" ;
lin counterreformation_N = mkN "counterreformation" ;
lin counterrevolution_N = mkN "counterrevolution" ;
lin counterrevolutionary_A = mkA "counterrevolutionary" ;
lin counterrevolutionist_N = mkN "counterrevolutionist" ;
lin countershot_N = mkN "countershot" ;
lin countersign_N = mkN "countersign" "countersigns";
lin countersign_V2 = mkV2 (mkV "countersign" "countersigns" "countersigned" "countersigned" "countersigning");
lin countersignature_N = mkN "countersignature" ;
lin countersink_N = mkN "countersink" ;
lin countersink_V2 = mkV2 (mkV "counter" IrregEng.sink_V);
lin counterspy_N = mkN "counterspy" ;
lin counterstain_N = mkN "counterstain" ;
lin countersubversion_N = mkN "countersubversion" ;
lin countersuing_V2 = mkV2 (mkV "countersuing");
lin countersuit_N = mkN "countersuit" ;
lin countertenor_A = mkA "countertenor" ;
lin countertenor_N = mkN "countertenor" "countertenors";
lin counterterror_A = mkA "counterterror" ;
lin counterterrorism_N = mkN "counterterrorism" ;
lin counterterrorist_N = mkN "counterterrorist" ;
lin countertop_N = mkN "countertop" ;
lin countertransference_N = mkN "countertransference" ;
lin countervail_V = mkV "countervail" "countervails" "countervailed" "countervailed" "countervailing";
lin countervail_V2 = mkV2 (mkV "countervail" "countervails" "countervailed" "countervailed" "countervailing");
lin counterweight_N = mkN "counterweight" ;
lin countess_N = mkN "countess" "countesses";
lin counting_house_N = mkN "counting-house" "counting-houses";
lin countinghouse_N = mkN "countinghouse" ;
lin countless_A = compoundA (mkA "countless");
lin countrified_A = compoundA (mkA "countrified");
lin country_N = mkN "country" "countries";
lin country_house_N = mkN "country-house" "country-houses";
lin country_seat_N = mkN "country-seat" "country-seats";
lin countryman_N = mkN masculine (mkN "countryman" "countrymen");
lin countryseat_N = mkN "countryseat" ;
lin countryside_N = mkN "countryside" ;
lin countrywide_A = mkA "countrywide" ;
lin countrywoman_N = mkN feminine (mkN "countrywoman" "countrywomen");
lin county_N = mkN "county" "counties";
lin countywide_A = mkA "countywide" ;
lin coup_N = mkN "coup" "coups";
lin coup_d'etat_N = mkN "coup d'etat" "IRREG";
lin coup_de_grace_N = mkN "coup de grace" "IRREG";
lin coupe_N = mkN "coupé" "coupés";
lin couple_N = mkN "couple" "couples";
lin couple_V = mkV "couple" "couples" "coupled" "coupled" "coupling";
lin couple_V2 = mkV2 (mkV "couple" "couples" "coupled" "coupled" "coupling");
lin couplet_N = mkN "couplet" "couplets";
lin coupling_N = mkN "coupling" "couplings";
lin coupon_N = mkN "coupon" "coupons";
lin courage_N = mkN "courage" ;
lin courageous_A = compoundA (mkA "courageous");
lin courante_N = mkN "courante" ;
lin courbaril_N = mkN "courbaril" ;
lin courgette_N = mkN "courgette" "courgettes";
lin courier_N = mkN "courier" "couriers";
lin courlan_N = mkN "courlan" ;
lin course_N = mkN "course" "courses";
lin course_V = mkV "course" "courses" "coursed" "coursed" "coursing";
lin course_V2 = mkV2 (mkV "course" "courses" "coursed" "coursed" "coursing");
lin courser_N = mkN "courser" "coursers";
lin coursework_N = mkN "coursework" ;
lin coursing_N = mkN "coursing" "coursings";
lin court_N = mkN "court" "courts";
lin court_V = mkV "court" "courts" "courted" "courted" "courting";
lin court_V2 = mkV2 (mkV "court" "courts" "courted" "courted" "courting");
lin court_card_N = mkN "court-card" "court-cards";
lin court_martial_N = mkN "court-martial" "courts-martial";
lin court_martial_V2 = mkV2 (mkV "court-martial" "court-martials" "court-martialed" "court-martialed" "court-martialing");
lin courteous_A = compoundA (mkA "courteous");
lin courtesan_N = mkN "courtesan" "courtesans";
lin courtesy_N = mkN "courtesy" "courtesies";
lin courthouse_N = mkN "courthouse" ;
lin courtier_N = mkN "courtier" "courtiers";
lin courtliness_N = mkN "courtliness" ;
lin courtly_A = mkA "courtly" "courtlier";
lin courtroom_N = mkN "courtroom" "courtrooms";
lin courtship_N = mkN "courtship" "courtships";
lin courtyard_N = mkN "courtyard" "courtyards";
lin couscous_N = mkN "couscous" ;
lin cousin_N = mkN "cousin" "cousins";
lin cousinly_A = compoundA (mkA "cousinly");
lin couth_A = mkA "couth" ;
lin couthie_A = mkA "couthie" ;
lin couture_N = mkN "couture" ;
lin couturier_N = mkN "couturier" ;
lin couvade_N = mkN "couvade" ;
lin couverture_N = mkN "couverture" ;
lin covalence_N = mkN "covalence" ;
lin covalent_A = mkA "covalent" ;
lin covariance_N = mkN "covariance" ;
lin covariant_A = mkA "covariant" ;
lin covariation_N = mkN "covariation" ;
lin cove_N = mkN "cove" "coves";
lin coven_N = mkN "coven" "covens";
lin covenant_N = mkN "covenant" "covenants";
lin covenant_V = mkV "covenant" "covenants" "covenanted" "covenanted" "covenanting";
lin covenant_V2 = mkV2 (mkV "covenant" "covenants" "covenanted" "covenanted" "covenanting");
lin coventry_PN = mkPN "Coventry";
lin cover_N = mkN "cover" "covers";
lin cover_V2 = mkV2 (mkV "cover" "covers" "covered" "covered" "covering");
lin cover_VS = mkVS (mkV "cover");
lin cover_up_N = mkN "cover-up" "cover-ups";
lin coverage_N = mkN "coverage" ;
lin coverall_N = mkN "coverall" ;
lin covering_A = compoundA (mkA "covering");
lin covering_N = mkN "covering" "coverings";
lin coverlet_N = mkN "coverlet" "coverlets";
lin covert_A = compoundA (mkA "covert");
lin covert_N = mkN "covert" "coverts";
lin covet_V2 = mkV2 (mkV "covet" "covets" "coveted" "coveted" "coveting");
lin covetous_A = compoundA (mkA "covetous");
lin covetousness_N = mkN "covetousness" ;
lin covey_N = mkN "covey" "coveys";
lin cow_N = mkN "cow" "cows";
lin cow_V2 = mkV2 (mkV "cow" "cows" "cowed" "cowed" "cowing");
lin cowage_N = mkN "cowage" ;
lin coward_N = mkN "coward" "cowards";
lin cowardice_N = mkN "cowardice" ;
lin cowardly_A = compoundA (mkA "cowardly");
lin cowbarn_N = mkN "cowbarn" ;
lin cowbell_N = mkN "cowbell" "cowbells";
lin cowberry_N = mkN "cowberry" ;
lin cowbird_N = mkN "cowbird" ;
lin cowboy_N = mkN "cowboy" "cowboys";
lin cowcatcher_N = mkN "cowcatcher" "cowcatchers";
lin cowdenbeath_PN = mkPN "Cowdenbeath";
lin cower_V = mkV "cower" "cowers" "cowered" "cowered" "cowering";
lin cowes_PN = mkPN "Cowes";
lin cowfish_N = mkN "cowfish" ;
lin cowgirl_N = mkN "cowgirl" ;
lin cowhand_N = mkN "cowhand" "cowhands";
lin cowherb_N = mkN "cowherb" ;
lin cowherd_N = mkN "cowherd" "cowherds";
lin cowhide_N = mkN "cowhide" "cowhides";
lin cowhouse_N = mkN "cowhouse" "cowhouses";
lin cowl_N = mkN "cowl" "cowls";
lin cowled_A = mkA "cowled" ;
lin cowlick_N = mkN "cowlick" ;
lin cowling_N = mkN "cowling" "cowlings";
lin cowman_N = mkN masculine (mkN "cowman" "cowmen");
lin coworker_N = mkN "coworker";
lin cowpea_N = mkN "cowpea" ;
lin cowpox_N = mkN "cowpox" "cowpoxes";
lin cowrie_N = mkN "cowrie" "cowries";
lin cowshed_N = mkN "cowshed" "cowsheds";
lin cowskin_N = mkN "cowskin" "cowskins";
lin cowslip_N = mkN "cowslip" "cowslips";
lin cox_N = mkN "cox" "coxes";
lin cox_V = mkV "cox" "coxes" "coxed" "coxed" "coxing";
lin cox_V2 = mkV2 (mkV "cox" "coxes" "coxed" "coxed" "coxing");
lin coxcomb_N = mkN "coxcomb" "coxcombs";
lin coxsackievirus_N = mkN "coxsackievirus" ;
lin coxswain_N = mkN "coxswain" "coxswains";
lin coy_A = mkA "coy" "coyer";
lin coydog_N = mkN "coydog" ;
lin coyly_Adv = mkAdv "coyly" ;
lin coyness_N = mkN "coyness" ;
lin coyol_N = mkN "coyol" ;
lin coyote_N = mkN "coyote" "coyotes";
lin coypu_N = mkN "coypu" "coypus";
lin cozen_V2 = mkV2 (mkV "cozen" "cozens" "cozened" "cozened" "cozening");
lin coziness_N = mkN "coziness" ;
lin cozy_A = mkA "cozy" "cozier";
lin cp_PN = mkPN "Cp";
lin cpl_PN = mkPN "Cpl";
lin crab_N = mkN "crab" "crabs";
lin crab_V = mkV "crab" "crabs" "crabbed" "crabbed" "crabbing";
lin crab_V2 = mkV2 (mkV "crab" "crabs" "crabbed" "crabbed" "crabbing");
lin crab_apple_N = mkN "crab-apple" "crab-apples";
lin crabbiness_N = mkN "crabbiness" ;
lin crabgrass_N = mkN "crabgrass" ;
lin crabwise_A = mkA "crabwise" ;
lin crack_N = mkN "crack" "cracks";
lin crack_V = mkV "crack" "cracks" "cracked" "cracked" "cracking";
lin crack_V2 = mkV2 (mkV "crack" "cracks" "cracked" "cracked" "cracking");
lin crack_down_N = mkN "crack-down" "crack-downs";
lin crack_up_N = mkN "crack-up" "crack-ups";
lin crackbrained_A = mkA "crackbrained" ;
lin crackdown_N = mkN "crackdown" ;
lin cracker_N = mkN "cracker" "crackers";
lin crackers_A = compoundA (mkA "crackers");
lin cracking_N = mkN "cracking" ;
lin crackle_A = mkA "crackle" ;
lin crackle_N = mkN "crackle" ;
lin crackle_V = mkV "crackle" "crackles" "crackled" "crackled" "crackling";
lin crackle_china_N = mkN "crackle-china" ;
lin crackleware_N = mkN "crackleware" ;
lin crackling_N = mkN "crackling" ;
lin cracklings_N = mkN "cracklings" ;
lin crackpot_N = mkN "crackpot" "crackpots";
lin cracksman_N = mkN masculine (mkN "cracksman" "cracksmen");
lin cradle_N = mkN "cradle" "cradles";
lin cradle_V2 = mkV2 (mkV "cradle" "cradles" "cradled" "cradled" "cradling");
lin craft_N = mkN "craft" "crafts";
lin craft_V2 = mkV2 (mkV "craft");
lin craftiness_N = mkN "craftiness" ;
lin craftsman_N = mkN masculine (mkN "craftsman" "craftsmen");
lin craftsmanship_N = mkN "craftsmanship" ;
lin crafty_A = mkA "crafty" "craftier";
lin crag_N = mkN "crag" "crags";
lin cragfast_A = mkA "cragfast" ;
lin cragged_A = compoundA (mkA "cragged");
lin craggy_A = mkA "craggy" "craggier";
lin cragsman_N = mkN masculine (mkN "cragsman" "cragsmen");
lin crake_N = mkN "crake" "crakes";
lin cram_V = mkV "cram" "crams" "crammed" "crammed" "cramming";
lin cram_V2 = mkV2 (mkV "cram" "crams" "crammed" "crammed" "cramming");
lin cram_full_A = compoundA (mkA "cram-full");
lin cram_full_Adv = mkAdv "cram-full";
lin cramlington_PN = mkPN "Cramlington";
lin crammer_N = mkN "crammer" "crammers";
lin cramp_N = mkN "cramp" "cramps";
lin cramp_V2 = mkV2 (mkV "cramp" "cramps" "cramped" "cramped" "cramping");
lin cramp_iron_N = mkN "cramp-iron" "cramp-irons";
lin crampon_N = mkN "crampon" "crampons";
lin cran_N = mkN "cran" ;
lin cranberry_N = mkN "cranberry" "cranberries";
lin crane_N = mkN "crane" "cranes";
lin crane_V = mkV "crane" "cranes" "craned" "craned" "craning";
lin crane_V2 = mkV2 (mkV "crane" "cranes" "craned" "craned" "craning");
lin crane_fly_N = mkN "crane-fly" "crane-flies";
lin cranesbill_N = mkN "cranesbill" ;
lin cranial_A = compoundA (mkA "cranial");
lin craniology_N = mkN "craniology" ;
lin craniometer_N = mkN "craniometer" ;
lin craniometric_A = mkA "craniometric" ;
lin craniometry_N = mkN "craniometry" ;
lin craniotomy_N = mkN "craniotomy" ;
lin cranium_N = mkN "cranium" "craniums";
lin crank_A = mkA "crank" ;
lin crank_N = mkN "crank" "cranks";
lin crank_V2 = mkV2 (mkV "crank" "cranks" "cranked" "cranked" "cranking");
lin crankcase_N = mkN "crankcase" ;
lin crankiness_N = mkN "crankiness" ;
lin crankshaft_N = mkN "crankshaft" "crankshafts";
lin cranky_A = mkA "cranky" "crankier";
lin crannied_A = compoundA (mkA "crannied");
lin cranny_N = mkN "cranny" "crannies";
lin crap_N = mkN "crap" "craps";
lin crap_V = mkV "crap" "craps" "crapped" "crapped" "crapping";
lin crap_shooting_N = mkN "crap-shooting" "crap-shootings";
lin crapaud_N = mkN "crapaud" ;
lin crape_N = mkN "crape" ;
lin crappie_N = mkN "crappie" ;
lin craps_N = mkN "craps" "craps";
lin crapshoot_N = mkN "crapshoot" ;
lin crapshooter_N = mkN "crapshooter" ;
lin crapulent_A = mkA "crapulent" ;
lin crapulous_A = mkA "crapulous" ;
lin crash_Adv = mkAdv "crash";
lin crash_N = mkN "crash" "crashes";
lin crash_V = mkV "crash" "crashes" "crashed" "crashed" "crashing";
lin crash_V2 = mkV2 (mkV "crash" "crashes" "crashed" "crashed" "crashing");
lin crash_dive_N = mkN "crash-dive" "crash-dives";
lin crash_dive_V = mkV "crash-dive" "crash-dives" "crash-dived" "crash-dived" "crash-diving";
lin crash_helmet_N = mkN "crash-helmet" "crash-helmets";
lin crash_land_V = mkV "crash-land" "crash-lands" "crash-landed" "crash-landed" "crash-landing";
lin crash_land_V2 = mkV2 (mkV "crash-land" "crash-lands" "crash-landed" "crash-landed" "crash-landing");
lin crash_landing_N = mkN "crash-landing" "crash-landings";
lin crass_A = compoundA (mkA "crass");
lin crassness_N = mkN "crassness" ;
lin crate_N = mkN "crate" "crates";
lin crate_V2 = mkV2 (mkV "crate" "crates" "crated" "crated" "crating");
lin crater_N = mkN "crater" "craters";
lin crater_V = mkV "crater" (variants {"craterred"; "cratered"});
lin craton_N = mkN "craton" ;
lin cravat_N = mkN "cravat" "cravats";
lin crave_V = mkV "crave" "craves" "craved" "craved" "craving";
lin crave_V2 = mkV2 (mkV "crave" "craves" "craved" "craved" "craving");
lin craven_A = compoundA (mkA "craven");
lin craven_N = mkN "craven" "cravens";
lin cravenness_N = mkN "cravenness" ;
lin craving_N = mkN "craving" "cravings";
lin craw_N = mkN "craw" ;
lin crawfish_N = mkN "crawfish" "crawfishes";
lin crawl_N = mkN "crawl" "crawls";
lin crawl_V = mkV "crawl" "crawls" "crawled" "crawled" "crawling";
lin crawler_N = mkN "crawler" "crawlers";
lin crawley_PN = mkPN "Crawley";
lin crawlspace_N = mkN "crawlspace" ;
lin crayfish_N = mkN "crayfish" "crayfishes";
lin crayon_N = mkN "crayon" "crayons";
lin crayon_V2 = mkV2 (mkV "crayon" "crayons" "crayoned" "crayoned" "crayoning");
lin craze_N = mkN "craze" "crazes";
lin crazed_A = compoundA (mkA "crazed");
lin craziness_N = mkN "craziness" ;
lin crazy_A = mkA "crazy" "crazier";
lin crazy_N = mkN "crazy" ;
lin creak_N = mkN "creak" "creaks";
lin creak_V = mkV "creak" "creaks" "creaked" "creaked" "creaking";
lin creaky_A = mkA "creaky" "creakier";
lin cream_N = mkN "cream" "creams";
lin cream_V2 = mkV2 (mkV "cream" "creams" "creamed" "creamed" "creaming");
lin creamcups_N = mkN "creamcups" ;
lin creamery_N = mkN "creamery" "creameries";
lin creaminess_N = mkN "creaminess" ;
lin creamy_A = mkA "creamy" "creamier";
lin crease_N = mkN "crease" "creases";
lin crease_V = mkV "crease" "creases" "creased" "creased" "creasing";
lin crease_V2 = mkV2 (mkV "crease" "creases" "creased" "creased" "creasing");
lin creaseless_A = mkA "creaseless" ;
lin creaseproof_A = mkA "creaseproof" ;
lin create_V = mkV "create" "creates" "created" "created" "creating";
lin create_V2 = mkV2 (mkV "create" "creates" "created" "created" "creating");
lin create_VV = mkVV (mkV "create" "creates" "created" "created" "creating");
lin creatine_N = mkN "creatine" ;
lin creation_N = mkN "creation" "creations";
lin creationism_N = mkN "creationism" ;
lin creative_A = compoundA (mkA "creative");
lin creativeness_N = mkN "creativeness" ;
lin creativity_N = mkN "creativity" ;
lin creator_N = mkN "creator" "creators";
lin creature_N = mkN "creature" "creatures";
lin creche_N = mkN "crèche" "crèches";
lin credence_N = mkN "credence" ;
lin credentialled_A = mkA "credentialled" ;
lin credenza_N = mkN "credenza" ;
lin credibility_N = mkN "credibility" ;
lin credible_A = compoundA (mkA "credible");
lin credit_N = mkN "credit" "credits";
lin credit_V2 = mkV2 (mkV "credit" "credits" "credited" "credited" "crediting");
lin credit_side_N = mkN "credit-side" "credit-sides";
lin credit_worthiness_N = mkN "credit-worthiness" ;
lin credit_worthy_A = compoundA (mkA "credit-worthy");
lin creditable_A = compoundA (mkA "creditable");
lin creditor_N = mkN "creditor" "creditors";
lin credits_N = mkN "credits" ;
lin creditworthiness_N = mkN "creditworthiness" ;
lin creditworthy_A = mkA "creditworthy" ;
lin credo_N = mkN "credo" "credos";
lin credulity_N = mkN "credulity" "credulities";
lin credulous_A = compoundA (mkA "credulous");
lin credulousness_N = mkN "credulousness" ;
lin creed_N = mkN "creed" "creeds";
lin creedal_A = mkA "creedal" ;
lin creek_N = mkN "creek" "creeks";
lin creel_N = mkN "creel" "creels";
lin creep_N = mkN "creep" "creeps";
lin creep_V = IrregEng.creep_V;
lin creeper_N = mkN "creeper" "creepers";
lin creepiness_N = mkN "creepiness" ;
lin creeps_N = mkN "creeps" ;
lin creepy_A = mkA "creepy" "creepier";
lin cremains_N = mkN "cremains" ;
lin cremate_V2 = mkV2 (mkV "cremate" "cremates" "cremated" "cremated" "cremating");
lin cremation_N = mkN "cremation" "cremations";
lin crematorium_N = mkN "crematorium" "crematoriums";
lin crematory_N = mkN "crematory" "crematories";
lin creme_de_menthe_N = mkN "crème de menthe" ;
lin crenate_A = mkA "crenate" ;
lin crenel_N = mkN "crenel" ;
lin crenelation_N = mkN "crenelation" ;
lin crenellated_A = compoundA (mkA "crenellated");
lin crenulate_A = mkA "crenulate" ;
lin creole_A = compoundA (mkA "creole");
lin creole_N = mkN "creole" "creoles";
lin creosol_N = mkN "creosol" ;
lin creosote_N = mkN "creosote" ;
lin crepe_1_N = mkN "crepe" ;
lin crepe_2_N = mkN "crêpe" ;
lin crepe_N = mkN "crepe" ;
lin crepitate_V = mkV "crepitate" "crepitates" "crepitated" "crepitated" "crepitating";
lin crepitation_N = mkN "crepitation" "crepitations";
lin crepuscular_A = compoundA (mkA "crepuscular");
lin cres_PN = mkPN "Cres";
lin crescendo_A = mkA "crescendo" ;
lin crescendo_N = mkN "crescendo" "crescendos";
lin crescent_N = mkN "crescent" "crescents";
lin cresol_N = mkN "cresol" ;
lin cress_N = mkN "cress" ;
lin crest_N = mkN "crest" "crests";
lin crest_V = mkV "crest" "crests" "crested" "crested" "cresting";
lin crest_V2 = mkV2 (mkV "crest" "crests" "crested" "crested" "cresting");
lin crestfallen_A = compoundA (mkA "crestfallen");
lin creswell_PN = mkPN "Creswell";
lin cretaceous_A = compoundA (mkA "cretaceous");
lin cretin_N = mkN "cretin" "cretins";
lin cretinism_N = mkN "cretinism" ;
lin cretinous_A = compoundA (mkA "cretinous");
lin cretonne_N = mkN "cretonne" ;
lin crevasse_N = mkN "crevasse" "crevasses";
lin crevice_N = mkN "crevice" "crevices";
lin crew_N = mkN "crew" "crews";
lin crew_V = mkV "crew" "crews" "crewed" "crewed" "crewing";
lin crew_cut_N = mkN "crew-cut" "crew-cuts";
lin crew_neck_N = mkN "crew-neck" "crew-necks";
lin crewe_PN = mkPN "Crewe";
lin crewelwork_N = mkN "crewelwork" ;
lin crewman_N = mkN "crewman" ;
lin crib_N = mkN "crib" "cribs";
lin crib_V = mkV "crib" "cribs" "cribbed" "cribbed" "cribbing";
lin crib_V2 = mkV2 (mkV "crib" "cribs" "cribbed" "cribbed" "cribbing");
lin cribbage_N = mkN "cribbage" ;
lin cribbage_board_N = mkN "cribbage-board" "cribbage-boards";
lin crick_N = mkN "crick" "cricks";
lin crick_V2 = mkV2 (mkV "crick" "cricks" "cricked" "cricked" "cricking");
lin cricket_N = mkN "cricket" "crickets";
lin cricketer_N = mkN "cricketer" "cricketers";
lin crieff_PN = mkPN "Crieff";
lin crier_N = mkN "crier" "criers";
lin crime_N = mkN "crime" "crimes";
lin crime_V2 = mkV2 (mkV "crime" "crimes" "crimed" "crimed" "criming");
lin criminal_A = compoundA (mkA "criminal");
lin criminal_N = mkN human (mkN "criminal" "criminals");
lin criminalism_N = mkN "criminalism" ;
lin criminalization_N = mkN "criminalization" ;
lin criminalize_V2 = mkV2 (mkV "criminalize");
lin criminative_A = mkA "criminative" ;
lin criminological_A = mkA "criminological" ;
lin criminologist_N = mkN "criminologist" ;
lin criminology_N = mkN "criminology" ;
lin crimp_N = mkN "crimp" ;
lin crimp_V2 = mkV2 (mkV "crimp" "crimps" "crimped" "crimped" "crimping");
lin crimson_A = compoundA (mkA "crimson");
lin crimson_N = mkN "crimson" "crimsons";
lin crimson_V = mkV "crimson" "crimsons" "crimsoned" "crimsoned" "crimsoning";
lin crimson_V2 = mkV2 (mkV "crimson" "crimsons" "crimsoned" "crimsoned" "crimsoning");
lin cringe_V = mkV "cringe" "cringes" "cringed" "cringed" "cringing";
lin cringle_N = mkN "cringle" ;
lin crinkle_N = mkN "crinkle" "crinkles";
lin crinkle_V = mkV "crinkle" "crinkles" "crinkled" "crinkled" "crinkling";
lin crinkle_V2 = mkV2 (mkV "crinkle" "crinkles" "crinkled" "crinkled" "crinkling");
lin crinkleroot_N = mkN "crinkleroot" ;
lin crinkly_A = mkA "crinkly" "crinklier";
lin crinoid_A = mkA "crinoid" ;
lin crinoid_N = mkN "crinoid" ;
lin crinoline_N = mkN "crinoline" "crinolines";
lin criollo_N = mkN "criollo" ;
lin cripple_N = mkN "cripple" "cripples";
lin cripple_V2 = mkV2 (mkV "cripple" "cripples" "crippled" "crippled" "crippling");
lin crippling_A = mkA "crippling" ;
lin crisis_N = mkN "crisis" "crises" {- FIXME: guessed plural form -};
lin crisp_A = mkA "crisp" "crisper";
lin crisp_N = mkN "crisp" "crisps";
lin crisp_V = mkV "crisp" "crisps" "crisped" "crisped" "crisping";
lin crisp_V2 = mkV2 (mkV "crisp" "crisps" "crisped" "crisped" "crisping");
lin crispate_A = mkA "crispate" ;
lin crispness_N = mkN "crispness" ;
lin criss_cross_V2 = mkV2 (mkV "criss-cross");
lin crisscross_A = compoundA (mkA "crisscross");
lin crisscross_Adv = mkAdv "crisscross";
lin crisscross_N = mkN "crisscross" ;
lin crisscross_V = mkV "crisscross" "crisscrosses" "crisscrossed" "crisscrossed" "crisscrossing";
lin crisscross_V2 = mkV2 (mkV "crisscross" "crisscrosses" "crisscrossed" "crisscrossed" "crisscrossing");
lin cristobalite_N = mkN "cristobalite" ;
lin criterial_A = mkA "criterial" ;
lin criterion_N = mkN "criterion" (variants {"criteria"; "criterions"});
lin crith_N = mkN "crith" ;
lin critic_N = mkN human (mkN "critic" "critics");
lin critical_A = compoundA (mkA "critical");
lin criticality_N = mkN "criticality" ;
lin criticism_N = mkN "criticism" "criticisms";
lin criticize_V = mkV "criticize" "criticizes" "criticized" "criticized" "criticizing";
lin criticize_V2 = mkV2 (mkV "criticize" "criticizes" "criticized" "criticized" "criticizing");
lin critique_N = mkN "critique" "critiques";
lin critter_N = mkN "critter" ;
lin croak_N = mkN "croak" "croaks";
lin croak_V = mkV "croak" "croaks" "croaked" "croaked" "croaking";
lin croak_V2 = mkV2 (mkV "croak" "croaks" "croaked" "croaked" "croaking");
lin croaker_N = mkN "croaker" ;
lin croaky_A = mkA "croaky" ;
lin crochet_N = mkN "crochet" ;
lin crochet_V = mkV "crochet" "crochets" "crocheted" "crocheted" "crocheting";
lin crochet_V2 = mkV2 (mkV "crochet" "crochets" "crocheted" "crocheted" "crocheting");
lin crochet_hook_N = mkN "crochet-hook" "crochet-hooks";
lin crocheting_N = mkN "crocheting" ;
lin crock_N = mkN "crock" "crocks";
lin crock_V = mkV "crock" "crocks" "crocked" "crocked" "crocking";
lin crock_V2 = mkV2 (mkV "crock" "crocks" "crocked" "crocked" "crocking");
lin crockery_N = mkN "crockery" ;
lin crocket_N = mkN "crocket" ;
lin crocketed_A = mkA "crocketed" ;
lin crocodile_N = mkN "crocodile" "crocodiles";
lin crocolite_N = mkN "crocolite" ;
lin crocus_N = mkN "crocus" "crocuses";
lin croesus_PN = mkPN "Croesus";
lin croft_N = mkN "croft" "crofts";
lin crofter_N = mkN "crofter" "crofters";
lin cromer_PN = mkPN "Cromer";
lin cromlech_N = mkN "cromlech" "cromlechs";
lin crone_N = mkN "crone" "crones";
lin crony_N = mkN "crony" "cronies";
lin cronyism_N = mkN "cronyism" ;
lin crook_N = mkN "crook" "crooks";
lin crook_PN = mkPN "Crook";
lin crook_V = mkV "crook" "crooks" "crooked" "crooked" "crooking";
lin crook_V2 = mkV2 (mkV "crook" "crooks" "crooked" "crooked" "crooking");
lin crook_back_A = compoundA (mkA "crook-back");
lin crook_backed_A = compoundA (mkA "crook-backed");
lin crookback_A = mkA "crookback" ;
lin crookedness_N = mkN "crookedness" ;
lin crookneck_N = mkN "crookneck" ;
lin croon_V = mkV "croon" "croons" "crooned" "crooned" "crooning";
lin croon_V2 = mkV2 (mkV "croon" "croons" "crooned" "crooned" "crooning");
lin crooner_N = mkN "crooner" "crooners";
lin crooning_N = mkN "crooning" ;
lin crop_N = mkN "crop" "crops";
lin crop_V = mkV "crop" "crops" "cropped" "cropped" "cropping";
lin crop_V2 = mkV2 (mkV "crop" "crops" "cropped" "cropped" "cropping");
lin crop_dusting_N = mkN "crop-dusting" ;
lin cropper_N = mkN "cropper" "croppers";
lin croquet_N = mkN "croquet" ;
lin croquette_N = mkN "croquette" "croquettes";
lin crore_N = mkN "crore" "crores";
lin crosby_PN = mkPN "Crosby";
lin crosier_N = mkN "crosier" "crosiers";
lin cross_A = compoundA (mkA "cross");
lin cross_N = mkN "cross" "crosses";
lin cross_V = mkV "cross" "crosses" "crossed" "crossed" "crossing";
lin cross_V2 = mkV2 (mkV "cross" "crosses" "crossed" "crossed" "crossing");
lin cross_bench_N = mkN "cross-bench" "cross-benches";
lin cross_bencher_N = mkN "cross-bencher" "cross-benchers";
lin cross_division_N = mkN "cross-division" "cross-divisions";
lin cross_examination_N = mkN "cross-examination" "cross-examinations";
lin cross_examine_V2 = mkV2 (mkV "cross-examine" "cross-examines" "cross-examined" "cross-examined" "cross-examining");
lin cross_examiner_N = mkN "cross-examiner" "cross-examiners";
lin cross_fertilization_N = mkN "cross-fertilization" "cross-fertilizations";
lin cross_fertilize_V2 = mkV2 (mkV "cross-fertilize" "cross-fertilizes" "cross-fertilized" "cross-fertilized" "cross-fertilizing");
lin cross_grained_A = compoundA (mkA "cross-grained");
lin cross_heading_N = mkN "cross-heading" "cross-headings";
lin cross_index_N = mkN "cross-index" "cross-indexes";
lin cross_index_V2 = mkV2 (mkV "cross-index" "cross-indexes" "cross-indexed" "cross-indexed" "cross-indexing");
lin cross_legged_Adv = mkAdv "cross-legged";
lin cross_question_V2 = mkV2 (mkV "cross-question" "cross-questions" "cross-questioned" "cross-questioned" "cross-questioning");
lin cross_reference_N = mkN "cross-reference" "cross-references";
lin cross_section_N = mkN "cross-section" "cross-sections";
lin cross_stitch_N = mkN "cross-stitch" "cross-stitches";
lin crossbar_N = mkN "crossbar" "crossbars";
lin crossbeam_N = mkN "crossbeam" "crossbeams";
lin crossbench_N = mkN "crossbench" ;
lin crossbencher_N = mkN "crossbencher" ;
lin crossbill_N = mkN "crossbill" ;
lin crossbones_N = mkN "crossbones" ;
lin crossbow_N = mkN "crossbow" "crossbows";
lin crossbreed_N = mkN "crossbreed" "crossbreeds";
lin crossbreed_V2 = mkV2 (mkV "cross" IrregEng.breed_V);
lin crosscheck_N = mkN "crosscheck" "crosschecks";
lin crosscheck_V = mkV "crosscheck" "crosschecks" "crosschecked" "crosschecked" "crosschecking";
lin crosscheck_V2 = mkV2 (mkV "crosscheck" "crosschecks" "crosschecked" "crosschecked" "crosschecking");
lin crosscountry_A = compoundA (mkA "crosscountry");
lin crosscountry_Adv = mkAdv "crosscountry";
lin crosscurrent_N = mkN "crosscurrent" "crosscurrents";
lin crosscut_A = compoundA (mkA "crosscut");
lin crosscut_N = mkN "crosscut" "crosscuts";
lin crosse_N = mkN "crosse" "crosses";
lin crosseyed_A = compoundA (mkA "crosseyed");
lin crossfire_N = mkN "crossfire" "crossfires";
lin crosshairs_N = mkN "crosshairs" ;
lin crosshead_N = mkN "crosshead" ;
lin crossheading_N = mkN "crossheading" ;
lin crossing_N = mkN "crossing" "crossings";
lin crossjack_N = mkN "crossjack" ;
lin crossness_N = mkN "crossness" ;
lin crossopterygian_N = mkN "crossopterygian" ;
lin crossover_N = mkN "crossover" ;
lin crosspatch_N = mkN "crosspatch" "crosspatches";
lin crosspiece_N = mkN "crosspiece" "crosspieces";
lin crossroad_N = mkN "crossroad" "crossroads";
lin crossroads_N = mkN "crossroads" ;
lin crosstalk_N = mkN "crosstalk" ;
lin crosstown_A = mkA "crosstown" ;
lin crosstown_Adv = mkAdv "crosstown" ;
lin crosswalk_N = mkN "crosswalk" "crosswalks";
lin crosswind_N = mkN "crosswind" "crosswinds";
lin crosswise_A = mkA "crosswise" ;
lin crosswise_Adv = mkAdv "crosswise";
lin crossword_N = mkN "crossword" "crosswords";
lin crotalaria_N = mkN "crotalaria" ;
lin crotaphion_N = mkN "crotaphion" ;
lin crotch_N = mkN "crotch" "crotches";
lin crotchet_N = mkN "crotchet" "crotchets";
lin crotchety_A = compoundA (mkA "crotchety");
lin croton_N = mkN "croton" ;
lin crottle_N = mkN "crottle" ;
lin crouch_N = mkN "crouch" "crouches";
lin crouch_V = mkV "crouch" "crouches" "crouched" "crouched" "crouching";
lin crouch_V2 = mkV2 (mkV "crouch" "crouches" "crouched" "crouched" "crouching");
lin croup_N = mkN "croup" "croups";
lin croupier_N = mkN "croupier" "croupiers";
lin croupy_A = mkA "croupy" ;
lin crouton_N = mkN "crouton" ;
lin crow's_nest_N = mkN "crow's-nest" "crow's-nests";
lin crow_N = mkN "crow" "crows";
lin crow_V = mkV "crow" "crows" "crowed" "crowed" "crowing";
lin crow_VS = mkVS (mkV "crow" "crows" "crowed" "crowed" "crowing");
lin crowbait_N = mkN "crowbait" ;
lin crowbar_N = mkN "crowbar" "crowbars";
lin crowberry_N = mkN "crowberry" ;
lin crowborough_PN = mkPN "Crowborough";
lin crowd_N = mkN "crowd" "crowds";
lin crowd_V = mkV "crowd" "crowds" "crowded" "crowded" "crowding";
lin crowd_V2 = mkV2 (mkV "crowd" "crowds" "crowded" "crowded" "crowding");
lin crowding_N = mkN "crowding" ;
lin crown_N = mkN "crown" "crowns";
lin crown_V2 = mkV2 (mkV "crown" "crowns" "crowned" "crowned" "crowning");
lin crown_land_N = mkN "crown-land" "crown-lands";
lin crownbeard_N = mkN "crownbeard" ;
lin crowning_A = compoundA (mkA "crowning");
lin crowthorne_PN = mkPN "Crowthorne";
lin croydon_PN = mkPN "Croydon";
lin crozier_N = mkN "crozier" "croziers";
lin crucial_A = compoundA (mkA "crucial");
lin cruciate_A = mkA "cruciate" ;
lin crucible_N = mkN "crucible" "crucibles";
lin crucifer_N = mkN "crucifer" ;
lin cruciferous_A = mkA "cruciferous" ;
lin crucifix_N = mkN "crucifix" "crucifixes";
lin crucifixion_N = mkN "crucifixion" "crucifixions";
lin cruciform_A = compoundA (mkA "cruciform");
lin crucify_V2 = mkV2 (mkV "crucify" "crucifies" "crucified" "crucified" "crucifying");
lin crud_N = mkN "crud" ;
lin cruddy_A = mkA "cruddy" ;
lin crude_A = mkA "crude" "cruder";
lin crudeness_N = mkN "crudeness" ;
lin crudites_N = mkN "crudites" ;
lin crudity_N = mkN "crudity" "crudities";
lin cruel_A = mkA "cruel" "crueller";
lin cruelty_N = mkN "cruelty" "cruelties";
lin cruet_N = mkN "cruet" "cruets";
lin cruet_stand_N = mkN "cruet-stand" "cruet-stands";
lin cruise_N = mkN "cruise" "cruises";
lin cruise_V = mkV "cruise" "cruises" "cruised" "cruised" "cruising";
lin cruiser_N = mkN "cruiser" "cruisers";
lin cruller_N = mkN "cruller" ;
lin crumb_N = mkN "crumb" "crumbs";
lin crumble_V = mkV "crumble" "crumbles" "crumbled" "crumbled" "crumbling";
lin crumble_V2 = mkV2 (mkV "crumble" "crumbles" "crumbled" "crumbled" "crumbling");
lin crumbliness_N = mkN "crumbliness" ;
lin crumbly_A = mkA "crumbly" "crumblier";
lin crumpet_N = mkN "crumpet" "crumpets";
lin crumple_V = mkV "crumple" "crumples" "crumpled" "crumpled" "crumpling";
lin crumple_V2 = mkV2 (mkV "crumple" "crumples" "crumpled" "crumpled" "crumpling");
lin crunch_N = mkN "crunch" "crunches";
lin crunch_V = mkV "crunch" "crunches" "crunched" "crunched" "crunching";
lin crunch_V2 = mkV2 (mkV "crunch" "crunches" "crunched" "crunched" "crunching");
lin crupper_N = mkN "crupper" "cruppers";
lin crural_A = mkA "crural" ;
lin crus_N = mkN "crus" ;
lin crusade_N = mkN "crusade" "crusades";
lin crusade_V = mkV "crusade" "crusades" "crusaded" "crusaded" "crusading";
lin crusader_N = mkN "crusader" "crusaders";
lin cruse_N = mkN "cruse" "cruses";
lin crush_N = mkN "crush" ;
lin crush_V = mkV "crush" "crushes" "crushed" "crushed" "crushing";
lin crush_V2 = mkV2 (mkV "crush" "crushes" "crushed" "crushed" "crushing");
lin crusher_N = mkN "crusher" ;
lin crushingly_Adv = mkAdv "crushingly" ;
lin crust_N = mkN "crust" "crusts";
lin crust_V = mkV "crust" "crusts" "crusted" "crusted" "crusting";
lin crust_V2 = mkV2 (mkV "crust" "crusts" "crusted" "crusted" "crusting");
lin crustacean_N = mkN "crustacean" "crustaceans";
lin crustaceous_A = mkA "crustaceous" ;
lin crustal_A = mkA "crustal" ;
lin crustose_A = mkA "crustose" ;
lin crusty_A = mkA "crusty" "crustier";
lin crutch_N = mkN "crutch" "crutches";
lin crux_N = mkN "crux" "cruxes";
lin cruzeiro_N = mkN "cruzeiro" "cruzeiros";
lin cry_N = mkN "cry" "cries";
lin cry_V = mkV "cry" "cries" "cried" "cried" "crying";
lin cry_V2 = mkV2 (mkV "cry" "cries" "cried" "cried" "crying");
lin crybaby_N = mkN "crybaby" "crybabies";
lin cryesthesia_N = mkN "cryesthesia" ;
lin crying_N = mkN "crying" ;
lin cryoanesthesia_N = mkN "cryoanesthesia" ;
lin cryobiology_N = mkN "cryobiology" ;
lin cryocautery_N = mkN "cryocautery" ;
lin cryogen_N = mkN "cryogen" ;
lin cryogenic_A = mkA "cryogenic" ;
lin cryogenics_N = mkN "cryogenics" ;
lin cryolite_N = mkN "cryolite" ;
lin cryometer_N = mkN "cryometer" ;
lin cryonic_A = mkA "cryonic" ;
lin cryonics_N = mkN "cryonics" ;
lin cryophobia_N = mkN "cryophobia" ;
lin cryoscope_N = mkN "cryoscope" ;
lin cryostat_N = mkN "cryostat" ;
lin cryosurgery_N = mkN "cryosurgery" ;
lin crypt_N = mkN "crypt" "crypts";
lin cryptanalysis_N = mkN "cryptanalysis" ;
lin cryptanalyst_N = mkN "cryptanalyst" ;
lin cryptanalytic_A = mkA "cryptanalytic" ;
lin cryptic_A = compoundA (mkA "cryptic");
lin cryptically_Adv = mkAdv "cryptically";
lin cryptobiosis_N = mkN "cryptobiosis" ;
lin cryptobiotic_A = mkA "cryptobiotic" ;
lin cryptococcosis_N = mkN "cryptococcosis" ;
lin cryptocoryne_N = mkN "cryptocoryne" ;
lin cryptogam_N = mkN "cryptogam" ;
lin cryptogamic_A = mkA "cryptogamic" ;
lin cryptogram_N = mkN "cryptogram" "cryptograms";
lin cryptograph_N = mkN "cryptograph" ;
lin cryptographically_Adv = mkAdv "cryptographically" ;
lin cryptography_N = mkN "cryptography" ;
lin cryptomonad_N = mkN "cryptomonad" ;
lin cryptorchidy_N = mkN "cryptorchidy" ;
lin crystal_N = mkN "crystal" "crystals";
lin crystal_gazing_N = mkN "crystal-gazing" ;
lin crystalline_A = compoundA (mkA "crystalline");
lin crystallite_N = mkN "crystallite" ;
lin crystallization_N = mkN "crystallization" "crystallizations";
lin crystallize_V = mkV "crystallize" "crystallizes" "crystallized" "crystallized" "crystallizing";
lin crystallize_V2 = mkV2 (mkV "crystallize" "crystallizes" "crystallized" "crystallized" "crystallizing");
lin crystallographer_N = mkN "crystallographer" ;
lin crystallography_N = mkN "crystallography" ;
lin ctene_N = mkN "ctene" ;
lin ctenidium_N = mkN "ctenidium" ;
lin ctenoid_A = mkA "ctenoid" ;
lin ctenophore_N = mkN "ctenophore" ;
lin cub_N = mkN "cub" "cubs";
lin cuba_PN = mkPN "Cuba";
lin cuban_A = compoundA (mkA "cuban");
lin cuban_N = mkN "cuban" "cubans";
lin cubby_N = mkN "cubby" ;
lin cubbyhole_N = mkN "cubbyhole" "cubbyholes";
lin cube_N = mkN "cube" "cubes";
lin cube_V2 = mkV2 (mkV "cube" "cubes" "cubed" "cubed" "cubing");
lin cubeb_N = mkN "cubeb" ;
lin cubelike_A = mkA "cubelike" ;
lin cubic_A = compoundA (mkA "cubic");
lin cubical_A = compoundA (mkA "cubical");
lin cubicity_N = mkN "cubicity" ;
lin cubicle_N = mkN "cubicle" "cubicles";
lin cubism_N = mkN "cubism" ;
lin cubist_A = mkA "cubist" ;
lin cubist_N = mkN "cubist" "cubists";
lin cubit_N = mkN "cubit" "cubits";
lin cubital_A = mkA "cubital" ;
lin cubitiere_N = mkN "cubitiere" ;
lin cubitus_N = mkN "cubitus" ;
lin cuboid_N = mkN "cuboid" ;
lin cuckold_N = mkN "cuckold" "cuckolds";
lin cuckold_V2 = mkV2 (mkV "cuckold" "cuckolds" "cuckolded" "cuckolded" "cuckolding");
lin cuckoldom_N = mkN "cuckoldom" ;
lin cuckoldry_N = mkN "cuckoldry" ;
lin cuckoo_N = mkN "cuckoo" "cuckoos";
lin cuckoo_clock_N = mkN "cuckoo-clock" "cuckoo-clocks";
lin cuckoopint_N = mkN "cuckoopint" ;
lin cucumber_N = mkN "cucumber" "cucumbers";
lin cucurbit_N = mkN "cucurbit" ;
lin cucurbitaceous_A = mkA "cucurbitaceous" ;
lin cud_N = mkN "cud" ;
lin cuddle_N = mkN "cuddle" "cuddles";
lin cuddle_V = mkV "cuddle" "cuddles" "cuddled" "cuddled" "cuddling";
lin cuddle_V2 = mkV2 (mkV "cuddle" "cuddles" "cuddled" "cuddled" "cuddling");
lin cuddlesome_A = compoundA (mkA "cuddlesome");
lin cuddly_A = mkA "cuddly" "cuddlier";
lin cuddy_N = mkN "cuddy" ;
lin cudgel_N = mkN "cudgel" "cudgels";
lin cudgel_V2 = mkV2 (mkV "cudgel" "cudgels" "cudgeled" "cudgeled" "cudgeling");
lin cudweed_N = mkN "cudweed" ;
lin cudworth_PN = mkPN "Cudworth";
lin cue_N = mkN "cue" "cues";
lin cuff_N = mkN "cuff" "cuffs";
lin cuff_V2 = mkV2 (mkV "cuff" "cuffs" "cuffed" "cuffed" "cuffing");
lin cuffley_PN = mkPN "Cuffley";
lin cufflink_N = mkN "cufflink" ;
lin cuirass_N = mkN "cuirass" "cuirasses";
lin cuirassier_N = mkN "cuirassier" "cuirassiers";
lin cuisine_N = mkN "cuisine" ;
lin cuisse_N = mkN "cuisse" ;
lin cul_N = mkN "cul" ;
lin cul_de_sac_N = mkN "cul-de-sac" "cul-de-sacs";
lin culcheth_PN = mkPN "Culcheth";
lin culdoscope_N = mkN "culdoscope" ;
lin culdoscopy_N = mkN "culdoscopy" ;
lin culinary_A = compoundA (mkA "culinary");
lin cull_N = mkN "cull" "culls";
lin cull_V2 = mkV2 (mkV "cull" "culls" "culled" "culled" "culling");
lin cullender_N = mkN "cullender" "cullenders";
lin cullis_N = mkN "cullis" ;
lin culm_N = mkN "culm" ;
lin culminate_V = mkV "culminate";
lin culminate_V2 = mkV2 (mkV "culminate" "culminates" "culminated" "culminated" "culminating");
lin culmination_N = mkN "culmination" "culminations";
lin culotte_N = mkN "culotte" ;
lin culpability_N = mkN "culpability" ;
lin culpable_A = compoundA (mkA "culpable");
lin culprit_N = mkN "culprit" "culprits";
lin cult_N = mkN "cult" "cults";
lin cultism_N = mkN "cultism" ;
lin cultist_N = mkN "cultist" ;
lin cultivable_A = compoundA (mkA "cultivable");
lin cultivar_N = mkN "cultivar" ;
lin cultivate_V2 = mkV2 (mkV "cultivate" "cultivates" "cultivated" "cultivated" "cultivating");
lin cultivation_N = mkN "cultivation" ;
lin cultivator_N = mkN "cultivator" "cultivators";
lin cultural_A = compoundA (mkA "cultural");
lin culturati_N = mkN "culturati" ;
lin culture_N = mkN "culture" "cultures";
lin cultured_A = compoundA (mkA "cultured");
lin culverin_N = mkN "culverin" ;
lin culvert_N = mkN "culvert" "culverts";
lin cumber_V2 = mkV2 (mkV "cumber" "cumbers" "cumbered" "cumbered" "cumbering");
lin cumberland_PN = mkPN "Cumberland";
lin cumbernauld_PN = mkPN "Cumbernauld";
lin cumbersome_A = compoundA (mkA "cumbersome");
lin cumbria_PN = mkPN "Cumbria";
lin cumbrous_A = compoundA (mkA "cumbrous");
lin cumin_N = mkN "cumin" ;
lin cummerbund_N = mkN "cummerbund" "cummerbunds";
lin cummings_N = mkN "cummings" ;
lin cumnock_PN = mkPN "Cumnock";
lin cumulative_A = compoundA (mkA "cumulative");
lin cumuliform_A = mkA "cumuliform" ;
lin cumulonimbus_N = mkN "cumulonimbus" ;
lin cumulous_A = mkA "cumulous" ;
lin cumulus_N = mkN "cumulus" "cumuli";
lin cuneate_A = mkA "cuneate" ;
lin cuneiform_A = compoundA (mkA "cuneiform");
lin cuneiform_N = mkN "cuneiform" ;
lin cunner_N = mkN "cunner" ;
lin cunnilingus_N = mkN "cunnilingus" ;
lin cunning_A = compoundA (mkA "cunning");
lin cunning_N = mkN "cunning" ;
lin cunt_N = mkN "cunt" "cunts";
lin cup_N = mkN "cup" "cups";
lin cup_V2 = mkV2 (mkV "cup" "cups" "cupped" "cupped" "cupping");
lin cup_bearer_N = mkN "cup-bearer" "cup-bearers";
lin cup_final_N = mkN "cup-final" "cup-finals";
lin cup_tie_N = mkN "cup-tie" "cup-ties";
lin cupar_PN = mkPN "Cupar";
lin cupbearer_N = mkN "cupbearer" ;
lin cupboard_N = mkN "cupboard" "cupboards";
lin cupboard_love_N = mkN "cupboard-love" ;
lin cupcake_N = mkN "cupcake" ;
lin cupflower_N = mkN "cupflower" ;
lin cupful_N = mkN "cupful" "cupfuls";
lin cupid_N = mkN "cupid" ;
lin cupid_PN = mkPN "Cupid";
lin cupidity_N = mkN "cupidity" ;
lin cuplike_A = mkA "cuplike" ;
lin cupola_N = mkN "cupola" "cupolas";
lin cuppa_N = mkN "cuppa" "cuppas";
lin cupping_N = mkN "cupping" ;
lin cupric_A = compoundA (mkA "cupric");
lin cuprite_N = mkN "cuprite" ;
lin cupro_nickel_N = mkN "cupro-nickel" ;
lin cupronickel_N = mkN "cupronickel" ;
lin cupular_A = mkA "cupular" ;
lin cupule_N = mkN "cupule" ;
lin cur_N = mkN "cur" "curs";
lin curability_N = mkN "curability" ;
lin curable_A = compoundA (mkA "curable");
lin curacao_N = mkN "curaçao" ;
lin curacoa_N = mkN "curaçoa" ;
lin curacy_N = mkN "curacy" "curacies";
lin curandera_N = mkN "curandera" ;
lin curandero_N = mkN "curandero" ;
lin curassow_N = mkN "curassow" ;
lin curate_N = mkN human (mkN "curate" "curates");
lin curative_A = compoundA (mkA "curative");
lin curator_N = mkN "curator" "curators";
lin curatorial_A = mkA "curatorial" ;
lin curatorship_N = mkN "curatorship" ;
lin curb_N = mkN "curb" "curbs";
lin curb_V2 = mkV2 (mkV "curb" "curbs" "curbed" "curbed" "curbing");
lin curbside_N = mkN "curbside" ;
lin curbstone_N = mkN "curbstone" ;
lin curd_N = mkN "curd" "curds";
lin curdle_V = mkV "curdle" "curdles" "curdled" "curdled" "curdling";
lin curdle_V2 = mkV2 (mkV "curdle" "curdles" "curdled" "curdled" "curdling");
lin curdling_N = mkN "curdling" ;
lin cure_1_N = mkN "cure" "cures";
lin cure_2_N = mkN "curé" "curés";
lin cure_V = mkV "cure" "cures" "cured" "cured" "curing";
lin cure_V2 = mkV2 (mkV "cure" "cures" "cured" "cured" "curing");
lin cure_all_N = mkN "cure-all" "cure-alls";
lin curettage_N = mkN "curettage" ;
lin curette_N = mkN "curette" ;
lin curfew_N = mkN "curfew" "curfews";
lin curie_N = mkN "curie" ;
lin curio_N = mkN "curio" "curios";
lin curiosa_N = mkN "curiosa" ;
lin curiosity_N = mkN "curiosity" "curiosities";
lin curious_A = compoundA (mkA "curious");
lin curiousness_N = mkN "curiousness" ;
lin curitiba_PN = mkPN "Curitiba";
lin curium_N = mkN "curium" ;
lin curl_N = mkN "curl" "curls";
lin curl_V = mkV "curl" "curls" "curled" "curled" "curling";
lin curl_V2 = mkV2 (mkV "curl" "curls" "curled" "curled" "curling");
lin curler_N = mkN "curler" "curlers";
lin curlew_N = mkN "curlew" "curlews";
lin curliness_N = mkN "curliness" ;
lin curling_N = mkN "curling" ;
lin curly_A = mkA "curly" "curlier";
lin curmudgeon_N = mkN "curmudgeon" "curmudgeons";
lin currant_N = mkN "currant" "currants";
lin currawong_N = mkN "currawong" ;
lin currency_N = mkN "currency" "currencies";
lin current_A = compoundA (mkA "current");
lin current_N = mkN "current" "currents";
lin currentness_N = mkN "currentness" ;
lin curricular_A = mkA "curricular" ;
lin curriculum_N = mkN "curriculum" "curriculums";
lin curriculum_vitae_N = mkN "curriculum vitae" "curricula vitae";
lin currie_PN = mkPN "Currie";
lin currier_N = mkN "currier" ;
lin currish_A = compoundA (mkA "currish");
lin curry_N = mkN "curry" "curries";
lin curry_V2 = mkV2 (mkV "curry" "curries" "curried" "curried" "currying");
lin curry_powder_N = mkN "curry-powder" "curry-powders";
lin currycomb_N = mkN "currycomb" ;
lin curse_N = mkN "curse" "curses";
lin curse_V = mkV "curse" "curses" "cursed" "cursed" "cursing";
lin curse_V2 = mkV2 (mkV "curse" "curses" "cursed" "cursed" "cursing");
lin cursive_A = compoundA (mkA "cursive");
lin cursor_N = mkN "cursor" ;
lin cursorial_A = mkA "cursorial" ;
lin cursory_A = compoundA (mkA "cursory");
lin curst_A = compoundA (mkA "curst");
lin curt_A = compoundA (mkA "curt");
lin curtail_V2 = mkV2 (mkV "curtail" "curtails" "curtailed" "curtailed" "curtailing");
lin curtailment_N = mkN "curtailment" "curtailments";
lin curtain_N = mkN "curtain" "curtains";
lin curtain_V2 = mkV2 (mkV "curtain" "curtains" "curtained" "curtained" "curtaining");
lin curtain_call_N = mkN "curtain-call" "curtain-calls";
lin curtain_lecture_N = mkN "curtain-lecture" "curtain-lectures";
lin curtain_raiser_N = mkN "curtain-raiser" "curtain-raisers";
lin curtainless_A = mkA "curtainless" ;
lin curtal_A = mkA "curtal" ;
lin curtness_N = mkN "curtness" ;
lin curtsey_N = mkN "curtsey" "curtseys";
lin curtsey_V = mkV "curtsey" "curtseys" "curtseyed" "curtseyed" "curtseying";
lin curtsy_N = mkN "curtsy" "curtsies";
lin curtsy_V = mkV "curtsy" "curtsies" "curtsied" "curtsied" "curtsying";
lin curvaceously_Adv = mkAdv "curvaceously" ;
lin curvaceousness_N = mkN "curvaceousness" ;
lin curvature_N = mkN "curvature" ;
lin curve_N = mkN "curve" "curves";
lin curve_V = mkV "curve" "curves" "curved" "curved" "curving";
lin curve_V2 = mkV2 (mkV "curve" "curves" "curved" "curved" "curving");
lin curvet_N = mkN "curvet" ;
lin curvilineal_A = mkA "curvilineal" ;
lin curvy_A = mkA "curvy" ;
lin cuscus_N = mkN "cuscus" ;
lin cushaw_N = mkN "cushaw" ;
lin cushion_N = mkN "cushion" "cushions";
lin cushion_V2 = mkV2 (mkV "cushion" "cushions" "cushioned" "cushioned" "cushioning");
lin cushy_A = mkA "cushy" "cushier";
lin cusk_N = mkN "cusk" ;
lin cusp_N = mkN "cusp" "cusps";
lin cuspate_A = mkA "cuspate" ;
lin cuspidation_N = mkN "cuspidation" ;
lin cuspidor_N = mkN "cuspidor" "cuspidors";
lin cuss_N = mkN "cuss" "cusses";
lin cussed_A = compoundA (mkA "cussed");
lin cussedness_N = mkN "cussedness" ;
lin custard_N = mkN "custard" "custards";
lin custodial_A = compoundA (mkA "custodial");
lin custodian_N = mkN "custodian" "custodians";
lin custodianship_N = mkN "custodianship" ;
lin custody_N = mkN "custody" ;
lin custom_N = mkN "custom" "customs";
lin custom_built_A = compoundA (mkA "custom-built");
lin custom_made_A = compoundA (mkA "custom-made");
lin customary_A = compoundA (mkA "customary");
lin customerFem_N = mkN feminine (mkN "customer" "customers");
lin customerMasc_N = mkN masculine (mkN "customer" "customers");
lin customhouse_N = mkN "customhouse" ;
lin customize_V2 = mkV2 (mkV "customize");
lin customs_N = mkN "customs" ;
lin cut_N = mkN "cut" "cuts";
lin cut_V = IrregEng.cut_V;
lin cut_V2 = mkV2 (IrregEng.cut_V);
lin cut_V2A = mkV2A (IrregEng.cut_V) noPrep;
lin cut_out_N = mkN "cut-out" "cut-outs";
lin cut_price_A = compoundA (mkA "cut-price");
lin cut_rate_A = compoundA (mkA "cut-rate");
lin cut_throat_A = compoundA (mkA "cut-throat");
lin cut_throat_N = mkN "cut-throat" "cut-throats";
lin cutaneous_A = mkA "cutaneous" ;
lin cutaway_N = mkN "cutaway" ;
lin cutback_N = mkN "cutback" "cutbacks";
lin cutch_N = mkN "cutch" ;
lin cute_A = mkA "cute" "cuter";
lin cuteness_N = mkN "cuteness" ;
lin cuticle_N = mkN "cuticle" "cuticles";
lin cuticula_N = mkN "cuticula" ;
lin cuticular_A = mkA "cuticular" ;
lin cutin_N = mkN "cutin" ;
lin cutlas_N = mkN "cutlas" ;
lin cutlass_N = mkN "cutlass" "cutlasses";
lin cutlassfish_N = mkN "cutlassfish" ;
lin cutler_N = mkN "cutler" "cutlers";
lin cutlery_N = mkN "cutlery" ;
lin cutlet_N = mkN "cutlet" "cutlets";
lin cutoff_N = mkN "cutoff" ;
lin cutout_N = mkN "cutout" ;
lin cutpurse_N = mkN "cutpurse" "cutpurses";
lin cutter_N = mkN "cutter" "cutters";
lin cutthroat_A = mkA "cutthroat" ;
lin cutthroat_N = mkN "cutthroat" ;
lin cutting_N = mkN "cutting" "cuttings";
lin cutting_room_N = mkN "cutting-room" "cutting-rooms";
lin cuttingly_Adv = mkAdv "cuttingly" ;
lin cuttlefish_N = mkN "cuttlefish" "cuttlefishes";
lin cutwork_N = mkN "cutwork" ;
lin cutworm_N = mkN "cutworm" "cutworms";
lin cwmbran_PN = mkPN "Cwmbran";
lin cwt_N = mkN "cwt" "cwt";
lin cyan_N = mkN "cyan" ;
lin cyanamide_N = mkN "cyanamide" ;
lin cyanide_N = mkN "cyanide" ;
lin cyanobacteria_N = mkN "cyanobacteria" ;
lin cyanobacterial_A = mkA "cyanobacterial" ;
lin cyanogen_N = mkN "cyanogen" ;
lin cyanogenetic_A = mkA "cyanogenetic" ;
lin cyanohydrin_N = mkN "cyanohydrin" ;
lin cyanosis_N = mkN "cyanosis" ;
lin cyberart_N = mkN "cyberart" ;
lin cybercafe_N = mkN "cybercafe" ;
lin cybercrime_N = mkN "cybercrime" ;
lin cyberculture_N = mkN "cyberculture" ;
lin cybernaut_N = mkN "cybernaut" ;
lin cybernetic_A = compoundA (mkA "cybernetic");
lin cybernetics_N = mkN "cybernetics" "cybernetics";
lin cyberphobia_N = mkN "cyberphobia" ;
lin cyberpunk_N = mkN "cyberpunk" ;
lin cybersex_N = mkN "cybersex" ;
lin cyborg_N = mkN "cyborg" ;
lin cycad_N = mkN "cycad" ;
lin cyclamen_N = mkN "cyclamen" "cyclamens";
lin cycle_N = mkN "cycle" "cycles";
lin cycle_V = mkV "cycle" "cycles" "cycled" "cycled" "cycling";
lin cyclic_A = compoundA (mkA "cyclic");
lin cyclical_A = compoundA (mkA "cyclical");
lin cyclicity_N = mkN "cyclicity" ;
lin cycling_N = mkN "cycling" ;
lin cyclist_N = mkN "cyclist" "cyclists";
lin cyclobenzaprine_N = mkN "cyclobenzaprine" ;
lin cyclohexanol_N = mkN "cyclohexanol" ;
lin cycloid_A = mkA "cycloid" ;
lin cycloid_N = mkN "cycloid" ;
lin cyclone_N = mkN "cyclone" "cyclones";
lin cyclonic_A = compoundA (mkA "cyclonic");
lin cyclooxygenase_N = mkN "cyclooxygenase" ;
lin cyclopaedia_N = mkN "cyclopaedia" "cyclopaedias";
lin cyclopean_A = compoundA (mkA "cyclopean");
lin cyclopia_N = mkN "cyclopia" ;
lin cyclopropane_N = mkN "cyclopropane" ;
lin cyclops_N = mkN "cyclops" ;
lin cycloserine_N = mkN "cycloserine" ;
lin cyclosis_N = mkN "cyclosis" ;
lin cyclostome_N = mkN "cyclostome" ;
lin cyclostyle_N = mkN "cyclostyle" "cyclostyles";
lin cyclostyle_V2 = mkV2 (mkV "cyclostyle" "cyclostyles" "cyclostyled" "cyclostyled" "cyclostyling");
lin cyclothymia_N = mkN "cyclothymia" ;
lin cyclothymic_A = mkA "cyclothymic" ;
lin cyclotron_N = mkN "cyclotron" "cyclotrons";
lin cyder_N = mkN "cyder" "cyders";
lin cygnet_N = mkN "cygnet" "cygnets";
lin cylinder_N = mkN "cylinder" "cylinders";
lin cylindrical_A = compoundA (mkA "cylindrical");
lin cylindricality_N = mkN "cylindricality" ;
lin cyma_N = mkN "cyma" ;
lin cymbal_N = mkN "cymbal" "cymbals";
lin cymbalist_N = mkN "cymbalist" ;
lin cymbid_N = mkN "cymbid" ;
lin cyme_N = mkN "cyme" ;
lin cymene_N = mkN "cymene" ;
lin cymling_N = mkN "cymling" ;
lin cymose_A = mkA "cymose" ;
lin cymule_N = mkN "cymule" ;
lin cynancum_N = mkN "cynancum" ;
lin cynic_N = mkN "cynic" "cynics";
lin cynical_A = compoundA (mkA "cynical");
lin cynicism_N = mkN "cynicism" "cynicisms";
lin cynodont_N = mkN "cynodont" ;
lin cynophobia_N = mkN "cynophobia" ;
lin cynosure_N = mkN "cynosure" "cynosures";
lin cynthia_PN = mkPN "Cynthia";
lin cypher_N = mkN "cypher" "cyphers";
lin cypher_V = mkV "cypher" "cyphers" "cyphered" "cyphered" "cyphering";
lin cypher_V2 = mkV2 (mkV "cypher" "cyphers" "cyphered" "cyphered" "cyphering");
lin cypress_N = mkN "cypress" "cypresses";
lin cyprian_A = compoundA (mkA "cyprian");
lin cyprinid_A = mkA "cyprinid" ;
lin cyprinid_N = mkN "cyprinid" ;
lin cyprinodont_N = mkN "cyprinodont" ;
lin cypriot_A = compoundA (mkA "cypriot");
lin cypriot_N = mkN "cypriot" "cypriots";
lin cypripedia_N = mkN "cypripedia" ;
lin cyproheptadine_N = mkN "cyproheptadine" ;
lin cyprus_PN = mkPN "Cyprus";
lin cyril_PN = mkPN "Cyril";
lin cyrilla_N = mkN "cyrilla" ;
lin cyrillic_A = compoundA (mkA "cyrillic");
lin cyst_N = mkN "cyst" "cysts";
lin cysteine_N = mkN "cysteine" ;
lin cystic_A = mkA "cystic" ;
lin cystine_N = mkN "cystine" ;
lin cystitis_N = mkN "cystitis" ;
lin cystocele_N = mkN "cystocele" ;
lin cystoplegia_N = mkN "cystoplegia" ;
lin cytoarchitectural_A = mkA "cytoarchitectural" ;
lin cytoarchitecture_N = mkN "cytoarchitecture" ;
lin cytochrome_N = mkN "cytochrome" ;
lin cytogenesis_N = mkN "cytogenesis" ;
lin cytogenetic_A = mkA "cytogenetic" ;
lin cytogeneticist_N = mkN "cytogeneticist" ;
lin cytogenetics_N = mkN "cytogenetics" ;
lin cytokine_N = mkN "cytokine" ;
lin cytokinesis_N = mkN "cytokinesis" ;
lin cytokinetic_A = mkA "cytokinetic" ;
lin cytological_A = mkA "cytological" ;
lin cytologist_N = mkN "cytologist" ;
lin cytology_N = mkN "cytology" ;
lin cytolysin_N = mkN "cytolysin" ;
lin cytolysis_N = mkN "cytolysis" ;
lin cytolytic_A = mkA "cytolytic" ;
lin cytomegalic_A = mkA "cytomegalic" ;
lin cytomegalovirus_N = mkN "cytomegalovirus" ;
lin cytopathogenic_A = mkA "cytopathogenic" ;
lin cytopenia_N = mkN "cytopenia" ;
lin cytophotometer_N = mkN "cytophotometer" ;
lin cytophotometric_A = mkA "cytophotometric" ;
lin cytophotometrically_Adv = mkAdv "cytophotometrically" ;
lin cytophotometry_N = mkN "cytophotometry" ;
lin cytoplasm_N = mkN "cytoplasm" ;
lin cytoplasmic_A = mkA "cytoplasmic" ;
lin cytoplasmically_Adv = mkAdv "cytoplasmically" ;
lin cytoplast_N = mkN "cytoplast" ;
lin cytoplastic_A = mkA "cytoplastic" ;
lin cytosine_N = mkN "cytosine" ;
lin cytoskeleton_N = mkN "cytoskeleton" ;
lin cytosol_N = mkN "cytosol" ;
lin cytostome_N = mkN "cytostome" ;
lin cytotoxic_A = mkA "cytotoxic" ;
lin cytotoxicity_N = mkN "cytotoxicity" ;
lin cytotoxin_N = mkN "cytotoxin" ;
lin czar_N = mkN masculine (mkN "czar" "czars");
lin czarina_N = mkN feminine (mkN "czarina" "czarinas");
lin czarist_A = mkA "czarist" ;
lin czech_A = compoundA (mkA "Czech");
lin czech_N = mkN "Czech" "Czechs";
lin czechoslovak_A = compoundA (mkA "czechoslovak");
lin czechoslovak_N = mkN "Czechoslovak" "Czechoslovaks";
lin czechoslovakia_PN = mkPN "Czechoslovakia";
lin czechoslovakian_A = compoundA (mkA "Czechoslovakian");
lin czechoslovakian_N = mkN "Czechoslovakian" "Czechoslovakians";
lin d_day_PN = mkPN "D-day";
lin d_o_a__A = mkA "d.o.a." ;
lin dab_N = mkN "dab" "dabs";
lin dab_V = mkV "dab" "dabs" "dabbed" "dabbed" "dabbing";
lin dab_V2 = mkV2 (mkV "dab" "dabs" "dabbed" "dabbed" "dabbing");
lin dabble_V = mkV "dabble" "dabbles" "dabbled" "dabbled" "dabbling";
lin dabble_V2 = mkV2 (mkV "dabble" "dabbles" "dabbled" "dabbled" "dabbling");
lin dabbler_N = mkN "dabbler" "dabblers";
lin dabchick_N = mkN "dabchick" ;
lin dacca_PN = mkPN "Dacca";
lin dace_N = mkN "dace" "dace";
lin dacha_N = mkN "dacha" "dachas";
lin dachshund_N = mkN "dachshund" "dachshunds";
lin dacite_N = mkN "dacite" ;
lin dacitic_A = mkA "dacitic" ;
lin dacoit_N = mkN "dacoit" "dacoits";
lin dacoity_N = mkN "dacoity" "dacoities";
lin dacryocystitis_N = mkN "dacryocystitis" ;
lin dacryon_N = mkN "dacryon" ;
lin dactyl_N = mkN "dactyl" "dactyls";
lin dactylic_A = compoundA (mkA "dactylic");
lin dactylomegaly_N = mkN "dactylomegaly" ;
lin dad_N = mkN "dad" "dads";
lin dada_N = mkN "dada" ;
lin daddy_N = mkN "daddy" "daddies";
lin daddy_longlegs_N = mkN "daddy-longlegs" "daddy-longlegs";
lin dado_N = mkN "dado" "dados";
lin daedal_A = mkA "daedal" ;
lin daemon_N = mkN "daemon" "daemons";
lin daffodil_N = mkN "daffodil" "daffodils";
lin daft_A = mkA "daft" "dafter";
lin dagame_N = mkN "dagame" ;
lin dagga_N = mkN "dagga" ;
lin dagger_N = mkN "dagger" "daggers";
lin daggerboard_N = mkN "daggerboard" ;
lin dago_N = mkN "dago" "dagos";
lin daguerreotype_N = mkN "daguerreotype" "daguerreotypes";
lin dahlia_N = mkN "dahlia" "dahlias";
lin dail_eireann_N = mkN "dail eireann" "IRREG";
lin daily_A = compoundA (mkA "daily");
lin daily_Adv = mkAdv "daily";
lin daily_N = mkN "daily" "dailies";
lin daintiness_N = mkN "daintiness" ;
lin dainty_A = mkA "dainty" "daintier";
lin dainty_N = mkN "dainty" "dainties";
lin daiquiri_N = mkN "daiquiri" ;
lin dairy_N = mkN "dairy" "dairies";
lin dairy_farm_N = mkN "dairy-farm" "dairy-farms";
lin dairy_farming_N = mkN "dairy-farming" ;
lin dairying_N = mkN "dairying" ;
lin dairymaid_N = mkN "dairymaid" "dairymaids";
lin dairyman_N = mkN masculine (mkN "dairyman" "dairymen");
lin dais_N = mkN "dais" "daises";
lin daisy_N = mkN "daisy" "daisies";
lin daisy_PN = mkPN "Daisy";
lin daisybush_N = mkN "daisybush" ;
lin daisylike_A = mkA "daisylike" ;
lin dakar_PN = mkPN "Dakar";
lin dakota_PN = mkPN "Dakota";
lin dalasi_N = mkN "dalasi" ;
lin dale_N = mkN "dale" "dales";
lin dalesman_N = mkN masculine (mkN "dalesman" "dalesmen");
lin daleth_N = mkN "daleth" ;
lin dalkeith_PN = mkPN "Dalkeith";
lin dallas_PN = mkPN "Dallas";
lin dalliance_N = mkN "dalliance" ;
lin dallier_N = mkN "dallier" ;
lin dallisgrass_N = mkN "dallisgrass" ;
lin dally_V = mkV "dally" "dallies" "dallied" "dallied" "dallying";
lin dalmatian_N = mkN "dalmatian" "dalmatians";
lin dalry_PN = mkPN "Dalry";
lin dalton_PN = mkPN "Dalton";
lin dam_N = mkN "dam" "dams";
lin dam_V2 = mkV2 (mkV "dam" "dams" "dammed" "dammed" "damming");
lin damage_N = mkN "damage" "damages";
lin damage_V2 = mkV2 (mkV "damage" "damages" "damaged" "damaged" "damaging");
lin damages_N = mkN "damages" ;
lin damaging_A = mkA "damaging" ;
lin damascene_A = compoundA (mkA "damascene");
lin damascene_N = mkN "damascene" ;
lin damascene_V2 = mkV2 (mkV "damascene" "damascenes" "damascened" "damascened" "damascening");
lin damascus_PN = mkPN "Damascus";
lin damask_A = mkA "damask" ;
lin damask_N = mkN "damask" ;
lin dame_N = mkN "dame" "dames";
lin dammar_N = mkN "dammar" ;
lin dammit_Interj = ss "dammit";
lin damn_A = irregAdv (compoundA (mkA "damn")) "damn";
lin damn_Interj = ss "damn";
lin damn_N = mkN "damn" "damns";
lin damn_V2 = mkV2 (mkV "damn" "damns" "damned" "damned" "damning");
lin damnable_A = compoundA (mkA "damnable");
lin damnation_N = mkN "damnation" ;
lin damnatory_A = mkA "damnatory" ;
lin damned_Adv = mkAdv "damned";
lin damned_N = mkN "damned" ;
lin damocles_PN = mkPN "Damocles";
lin damourite_N = mkN "damourite" ;
lin damp_A = mkA "damp" "damper";
lin damp_N = mkN "damp" ;
lin damp_V = mkV "damp" "damps" "damped" "damped" "damping";
lin damp_V2 = mkV2 (mkV "damp" "damps" "damped" "damped" "damping");
lin dampen_V = mkV "dampen" "dampens" "dampened" "dampened" "dampening";
lin dampen_V2 = mkV2 (mkV "dampen" "dampens" "dampened" "dampened" "dampening");
lin dampener_N = mkN "dampener" ;
lin damper_N = mkN "damper" "dampers";
lin dampish_A = compoundA (mkA "dampish");
lin dampness_N = mkN "dampness" ;
lin damsel_N = mkN "damsel" "damsels";
lin damselfish_N = mkN "damselfish" ;
lin damselfly_N = mkN "damselfly" ;
lin damson_N = mkN "damson" "damsons";
lin dan_PN = mkPN "Dan";
lin danaid_N = mkN "danaid" ;
lin dance_N = mkN "dance" "dances";
lin dance_V = mkV "dance" "dances" "danced" "danced" "dancing";
lin dance_V2 = mkV2 (mkV "dance" "dances" "danced" "danced" "dancing");
lin dance_band_N = mkN "dance-band" "dance-bands";
lin dance_hall_N = mkN "dance-hall" "dance-halls";
lin dance_orchestra_N = mkN "dance-orchestra" "dance-orchestras";
lin danceable_A = mkA "danceable" ;
lin dancer_N = mkN "dancer" "dancers";
lin dancing_N = mkN "dancing" ;
lin dandelion_N = mkN "dandelion" "dandelions";
lin dander_N = mkN "dander" "IRREG";
lin dandified_A = compoundA (mkA "dandified");
lin dandle_V2 = mkV2 (mkV "dandle" "dandles" "dandled" "dandled" "dandling");
lin dandruff_N = mkN "dandruff" ;
lin dandy_A = compoundA (mkA "dandy");
lin dandy_N = mkN "dandy" "dandies";
lin dane_N = mkN "dane" "danes";
lin danger_N = mkN "danger" "dangers";
lin dangerous_A = compoundA (mkA "dangerous");
lin dangerousness_N = mkN "dangerousness" ;
lin dangle_V = mkV "dangle" "dangles" "dangled" "dangled" "dangling";
lin dangle_V2 = mkV2 (mkV "dangle" "dangles" "dangled" "dangled" "dangling");
lin dangleberry_N = mkN "dangleberry" ;
lin daniel_N = mkN "daniel" "daniels";
lin daniel_PN = mkPN "Daniel";
lin danish_A = compoundA (mkA "Danish");
lin danish_N = mkN "Danish" ;
lin dank_A = mkA "dank" "danker";
lin dankness_N = mkN "dankness" ;
lin danny_PN = mkPN "Danny";
lin danse_macabre_N = mkN "danse macabre" "IRREG";
lin danseur_N = mkN "danseur" ;
lin daphne_N = mkN "daphne" "daphnes";
lin daphne_PN = mkPN "Daphne";
lin daphnia_N = mkN "daphnia" ;
lin dapper_A = compoundA (mkA "dapper");
lin dapple_V2 = mkV2 (mkV "dapple" "dapples" "dappled" "dappled" "dappling");
lin dapple_grey_A = compoundA (mkA "dapple-grey");
lin dapple_grey_N = mkN "dapple-grey" "dapple-greys";
lin dapsone_N = mkN "dapsone" ;
lin daraf_N = mkN "daraf" ;
lin darby_PN = mkPN "Darby";
lin dare_N = mkN "dare" "dares";
lin dare_V = mkV "dare" "dares" "dared" "dared" "daring";
lin dare_V2 = mkV2 (mkV "dare" "dares" "dared" "dared" "daring");
lin dare_VV = mkVV (mkV "dare" "dares" "dared" "dared" "daring");
lin daredevil_A = mkA "daredevil" ;
lin daredevil_N = mkN "daredevil" "daredevils";
lin daredevilry_N = mkN "daredevilry" ;
lin darenth_PN = mkPN "Darenth";
lin darfield_PN = mkPN "Darfield";
lin daring_N = mkN "daring" ;
lin daringly_Adv = mkAdv "daringly" ;
lin dark_A = mkA "dark" "darker";
lin dark_N = mkN "dark" ;
lin darken_V = mkV "darken" "darkens" "darkened" "darkened" "darkening";
lin darken_V2 = mkV2 (mkV "darken" "darkens" "darkened" "darkened" "darkening");
lin darkey_N = mkN "darkey" "darkeys";
lin darkie_N = mkN "darkie" "darkies";
lin darkish_A = mkA "darkish" ;
lin darkling_A = mkA "darkling" ;
lin darkness_N = mkN "darkness" ;
lin darkroom_N = mkN "darkroom" "darkrooms";
lin darky_N = mkN "darky" "darkies";
lin darling_N = mkN "darling" "darlings";
lin darlington_PN = mkPN "Darlington";
lin darmstadt_PN = mkPN "Darmstadt";
lin darmstadtium_N = mkN "darmstadtium" ;
lin darn_N = mkN "darn" "darns";
lin darn_V = mkV "darn" "darns" "darned" "darned" "darning";
lin darn_V2 = mkV2 (mkV "darn" "darns" "darned" "darned" "darning");
lin darnel_N = mkN "darnel" ;
lin darner_N = mkN "darner" ;
lin darning_N = mkN "darning" ;
lin darning_needle_N = mkN "darning-needle" "darning-needles";
lin dart_N = mkN "dart" "darts";
lin dart_V = mkV "dart" "darts" "darted" "darted" "darting";
lin dart_V2 = mkV2 (mkV "dart" "darts" "darted" "darted" "darting");
lin dartboard_N = mkN "dartboard" ;
lin darter_N = mkN "darter" ;
lin dartford_PN = mkPN "Dartford";
lin dartmouth_PN = mkPN "Dartmouth";
lin darts_N = mkN "darts" ;
lin darwen_PN = mkPN "Darwen";
lin dash_N = mkN "dash" "dashes";
lin dash_V = mkV "dash" "dashes" "dashed" "dashed" "dashing";
lin dash_V2 = mkV2 (mkV "dash" "dashes" "dashed" "dashed" "dashing");
lin dashboard_N = mkN "dashboard" "dashboards";
lin dashiki_N = mkN "dashiki" ;
lin dashingly_Adv = mkAdv "dashingly" ;
lin dastard_N = mkN "dastard" "dastards";
lin dastardliness_N = mkN "dastardliness" ;
lin dastardly_A = compoundA (mkA "dastardly");
lin dasymeter_N = mkN "dasymeter" ;
lin dasyure_N = mkN "dasyure" ;
lin data_N = mkN "data" "data";
lin database_N = mkN "database";
lin datable_A = compoundA (mkA "datable");
lin date_1_N = mkN "date" "dates";
lin date_3_N = mkN "date" "dates";
lin date_7_N = mkN "date" "dates";
lin date_V = mkV "date" "dates" "dated" "dated" "dating";
lin date_V2 = mkV2 (mkV "date" "dates" "dated" "dated" "dating");
lin dateless_A = compoundA (mkA "dateless");
lin dateline_N = mkN "dateline" "datelines";
lin dating_N = mkN "dating" ;
lin dative_A = compoundA (mkA "dative");
lin dative_N = mkN "dative" "datives";
lin datum_N = mkN "datum" "data";
lin daub_N = mkN "daub" "daubs";
lin daub_V = mkV "daub" "daubs" "daubed" "daubed" "daubing";
lin daub_V2 = mkV2 (mkV "daub" "daubs" "daubed" "daubed" "daubing");
lin dauber_N = mkN "dauber" "daubers";
lin daughter_N = mkN "daughter" "daughters";
lin daughter_in_law_N = mkN "daughter-in-law" "daughters-in-law";
lin daughterly_A = compoundA (mkA "daughterly");
lin daunt_V2 = mkV2 (mkV "daunt" "daunts" "daunted" "daunted" "daunting");
lin daunting_A = mkA "daunting" ;
lin dauntless_A = compoundA (mkA "dauntless");
lin dauntlessness_N = mkN "dauntlessness" ;
lin dauphin_N = mkN "dauphin" "dauphins";
lin davallia_N = mkN "davallia" ;
lin dave_PN = mkPN "Dave";
lin davenport_N = mkN "davenport" "davenports";
lin daventry_PN = mkPN "Daventry";
lin davey_PN = mkPN "Davey";
lin david_PN = mkPN "David";
lin davit_N = mkN "davit" "davits";
lin daw_N = mkN "daw" "daws";
lin dawah_N = mkN "da'wah" ;
lin dawdle_V = mkV "dawdle" "dawdles" "dawdled" "dawdled" "dawdling";
lin dawdle_V2 = mkV2 (mkV "dawdle" "dawdles" "dawdled" "dawdled" "dawdling");
lin dawdler_N = mkN "dawdler" "dawdlers";
lin dawley_PN = mkPN "Dawley";
lin dawlish_PN = mkPN "Dawlish";
lin dawn_N = mkN "dawn" "dawns";
lin dawn_PN = mkPN "Dawn";
lin dawn_V = mkV "dawn" "dawns" "dawned" "dawned" "dawning";
lin day_N = mkN "day" "days";
lin day_boarder_N = mkN "day-boarder" "day-boarders";
lin day_labourer_N = mkN "day-labourer" "day-labourers";
lin day_return_N = mkN "day-return" "day-returns";
lin day_school_N = mkN "day-school" "day-schools";
lin daybed_N = mkN "daybed" ;
lin daybook_N = mkN "daybook" "daybooks";
lin dayboy_N = mkN "dayboy" "dayboys";
lin daybreak_N = mkN "daybreak" "daybreaks";
lin daycare_N = mkN "daycare" ;
lin daydream_N = mkN "daydream" "daydreams";
lin daydream_V = mkV "daydream" "daydreams" "daydreamed" "daydreamed" "daydreaming";
lin daydreamer_N = mkN "daydreamer" ;
lin daygirl_N = mkN "daygirl" "daygirls";
lin daylight_N = mkN "daylight" ;
lin daylight_saving_A = compoundA (mkA "daylight-saving");
lin daylight_saving_N = mkN "daylight-saving" ;
lin daylong_A = compoundA (mkA "daylong");
lin daylong_Adv = mkAdv "daylong";
lin days_N = mkN "days" ;
lin dayspring_N = mkN "dayspring" "daysprings";
lin daytime_N = mkN "daytime" "daytimes";
lin dayton_PN = mkPN "Dayton";
lin daze_N = mkN "daze" "dazes";
lin daze_V2 = mkV2 (mkV "daze" "dazes" "dazed" "dazed" "dazing");
lin dazedly_Adv = mkAdv "dazedly";
lin dazzle_N = mkN "dazzle" ;
lin dazzle_V2 = mkV2 (mkV "dazzle" "dazzles" "dazzled" "dazzled" "dazzling");
lin dazzling_A = mkA "dazzling" ;
lin ddt_N = mkN "ddt" ;
lin de_emphasize_V2 = mkV2 (mkV "de-emphasize");
lin de_escalate_V2 = mkV2 (mkV "de-escalate" "de-escalates" "de-escalated" "de-escalated" "de-escalating");
lin de_escalation_N = mkN "de-escalation" "de-escalations";
lin de_facto_A = compoundA (mkA "de facto");
lin de_facto_Adv = mkAdv "de facto";
lin de_ice_V2 = mkV2 (mkV "de-ice" "de-ices" "de-iced" "de-iced" "de-icing");
lin de_jure_A = compoundA (mkA "de jure");
lin de_jure_Adv = mkAdv "de jure";
lin de_luxe_A = compoundA (mkA "de luxe");
lin de_rigeur_A = compoundA (mkA "de rigeur");
lin de_trop_A = compoundA (mkA "de trop");
lin deacon_N = mkN "deacon" "deacons";
lin deaconess_N = mkN "deaconess" "deaconesses";
lin deactivate_V2 = mkV2 (mkV "deactivate");
lin deactivation_N = mkN "deactivation";
lin dead_A = compoundA (mkA "dead");
lin dead_Adv = mkAdv "dead";
lin dead_N = mkN "dead" ;
lin deaden_V2 = mkV2 (mkV "deaden" "deadens" "deadened" "deadened" "deadening");
lin deadeye_N = mkN "deadeye" ;
lin deadhead_N = mkN "deadhead" ;
lin deadlight_N = mkN "deadlight" ;
lin deadline_N = mkN "deadline" "deadlines";
lin deadliness_N = mkN "deadliness" ;
lin deadlock_N = mkN "deadlock" "deadlocks";
lin deadlock_V = mkV "deadlock";
lin deadlocked_A = compoundA (mkA "deadlocked");
lin deadly_A = mkA "deadly" "deadlier";
lin deadness_N = mkN "deadness" ;
lin deadpan_A = compoundA (mkA "deadpan");
lin deadpan_Adv = mkAdv "deadpan" ;
lin deadwood_N = mkN "deadwood" ;
lin deaf_A = mkA "deaf" "deafer";
lin deaf_N = mkN "deaf" ;
lin deaf_aid_N = mkN "deaf-aid" "deaf-aids";
lin deaf_mute_N = mkN "deaf mute" "deaf mutes";
lin deafen_V2 = mkV2 (mkV "deafen" "deafens" "deafened" "deafened" "deafening");
lin deafening_A = mkA "deafening" ;
lin deafness_N = mkN "deafness" ;
lin deal_Adv = mkAdv "deal";
lin deal_N = mkN "deal" "deals";
lin deal_PN = mkPN "Deal";
lin deal_V = IrregEng.deal_V;
lin deal_V2 = mkV2 (IrregEng.deal_V);
lin dealer_N = mkN "dealer" "dealers";
lin dealfish_N = mkN "dealfish" ;
lin dealignment_N = mkN "dealignment" ;
lin dealing_N = mkN "dealing" "dealings";
lin dealings_N = mkN "dealings" ;
lin deamination_N = mkN "deamination" ;
lin dean_N = mkN "dean" "deans";
lin dean_PN = mkPN "Dean";
lin deanery_N = mkN "deanery" "deaneries";
lin deanship_N = mkN "deanship" ;
lin dear_A = mkA "dear" "dearer";
lin dear_Adv = mkAdv "dear";
lin dear_N = mkN "dear" "dears";
lin dearest_N = mkN "dearest" "dearests";
lin dearie_N = mkN "dearie" "dearies";
lin dearness_N = mkN "dearness" ;
lin dearth_N = mkN "dearth" "dearths";
lin deary_N = mkN "deary" "dearies";
lin death_N = mkN "death" "deaths";
lin death_mask_N = mkN "death-mask" "death-masks";
lin death_rate_N = mkN "death-rate" "death-rates";
lin death_roll_N = mkN "death-roll" "death-rolls";
lin death_warrant_N = mkN "death-warrant" "death-warrants";
lin deathbed_N = mkN "deathbed" "deathbeds";
lin deathblow_N = mkN "deathblow" "deathblows";
lin deathless_A = compoundA (mkA "deathless");
lin deathlike_A = compoundA (mkA "deathlike");
lin deathly_A = compoundA (mkA "deathly");
lin deathly_Adv = mkAdv "deathly";
lin deathrate_N = mkN "deathrate" ;
lin deathtrap_N = mkN "deathtrap" "deathtraps";
lin deb_N = mkN "deb" "debs";
lin debacle_N = mkN "débâcle" "débâcles";
lin debag_V2 = mkV2 (mkV "debag" "debags" "debagged" "debagged" "debagging");
lin debar_V2 = mkV2 (mkV "debar" "debars" "debarred" "debarred" "debarring");
lin debark_V = mkV "debark" "debarks" "debarked" "debarked" "debarking";
lin debark_V2 = mkV2 (mkV "debark" "debarks" "debarked" "debarked" "debarking");
lin debarkation_N = mkN "debarkation" "debarkations";
lin debarment_N = mkN "debarment" ;
lin debase_V2 = mkV2 (mkV "debase" "debases" "debased" "debased" "debasing");
lin debasement_N = mkN "debasement" "debasements";
lin debaser_N = mkN "debaser" ;
lin debasing_A = mkA "debasing" ;
lin debatable_A = compoundA (mkA "debatable");
lin debate_N = mkN "debate" "debates";
lin debate_V = mkV "debate" "debates" "debated" "debated" "debating";
lin debate_V2 = mkV2 (mkV "debate" "debates" "debated" "debated" "debating");
lin debater_N = mkN "debater" "debaters";
lin debauch_N = mkN "debauch" "debauches";
lin debauch_V2 = mkV2 (mkV "debauch" "debauches" "debauched" "debauched" "debauching");
lin debauchee_N = mkN "debauchee" "debauchees";
lin debauchery_N = mkN "debauchery" "debaucheries";
lin debbie_PN = mkPN "Debbie";
lin debby_PN = mkPN "Debby";
lin debenture_N = mkN "debenture" "debentures";
lin debilitate_V2 = mkV2 (mkV "debilitate" "debilitates" "debilitated" "debilitated" "debilitating");
lin debilitating_A = mkA "debilitating" ;
lin debilitation_N = mkN "debilitation" ;
lin debilitative_A = mkA "debilitative" ;
lin debility_N = mkN "debility" ;
lin debit_N = mkN "debit" "debits";
lin debit_V2 = mkV2 (mkV "debit" "debits" "debited" "debited" "debiting");
lin debit_side_N = mkN "debit-side" "debit-sides";
lin debonair_A = compoundA (mkA "debonair");
lin deborah_PN = mkPN "Deborah";
lin debouch_V = mkV "debouch" "debouches" "debouched" "debouched" "debouching";
lin debouch_V2 = mkV2 (mkV "debouch" "debouches" "debouched" "debouched" "debouching");
lin debridement_N = mkN "debridement" ;
lin debrief_V2 = mkV2 (mkV "debrief" "debriefs" "debriefed" "debriefed" "debriefing");
lin debriefing_N = mkN "debriefing" ;
lin debris_1_N = mkN "debris" ;
lin debris_2_N = mkN "débris" ;
lin debris_N = mkN "debris" ;
lin debt_N = mkN "debt" "debts";
lin debtor_N = mkN "debtor" "debtors";
lin debug_V2 = mkV2 (mkV "debug" "debugs" "debugged" "debugged" "debugging");
lin debugger_N = mkN "debugger" ;
lin debunk_V2 = mkV2 (mkV "debunk" "debunks" "debunked" "debunked" "debunking");
lin debut_1_N = mkN "debut" "debuts";
lin debut_2_N = mkN "début" "débuts";
lin debut_N = mkN "debut" ;
lin debut_V2 = mkV2 (mkV "debut");
lin debutante_1_N = mkN "debutante" "debutantes";
lin debutante_2_N = mkN "débutante" "débutantes";
lin debutante_N = mkN "debutante" ;
lin dec_PN = mkPN "Dec";
lin decade_N = mkN "decade" "decades";
lin decadence_N = mkN "decadence" ;
lin decadent_A = compoundA (mkA "decadent");
lin decadent_N = mkN "decadent" "decadents";
lin decagon_N = mkN "decagon" ;
lin decahedron_N = mkN "decahedron" ;
lin decal_N = mkN "decal" ;
lin decalcification_N = mkN "decalcification" ;
lin decalcomania_N = mkN "decalcomania" ;
lin decalescence_N = mkN "decalescence" ;
lin decalescent_A = mkA "decalescent" ;
lin decalogue_N = mkN "decalogue" "decalogues";
lin decameter_N = mkN "decameter" ;
lin decamp_V = mkV "decamp" "decamps" "decamped" "decamped" "decamping";
lin decampment_N = mkN "decampment" ;
lin decant_V2 = mkV2 (mkV "decant" "decants" "decanted" "decanted" "decanting");
lin decantation_N = mkN "decantation" ;
lin decanter_N = mkN "decanter" "decanters";
lin decapitate_V2 = mkV2 (mkV "decapitate" "decapitates" "decapitated" "decapitated" "decapitating");
lin decapitation_N = mkN "decapitation" "decapitations";
lin decapod_N = mkN "decapod" ;
lin decarbonize_V2 = mkV2 (mkV "decarbonize" "decarbonizes" "decarbonized" "decarbonized" "decarbonizing");
lin decarboxylase_N = mkN "decarboxylase" ;
lin decarboxylation_N = mkN "decarboxylation" ;
lin decasyllabic_A = compoundA (mkA "decasyllabic");
lin decasyllable_N = mkN "decasyllable" "decasyllables";
lin decathlon_N = mkN "decathlon" ;
lin decay_N = mkN "decay" ;
lin decay_V = mkV "decay" "decays" "decayed" "decayed" "decaying";
lin decayable_A = mkA "decayable" ;
lin decayed_A = mkA "decayed" ;
lin decease_N = mkN "decease" ;
lin decease_V = mkV "decease" "deceases" "deceased" "deceased" "deceasing";
lin deceit_N = mkN "deceit" "deceits";
lin deceitful_A = compoundA (mkA "deceitful");
lin deceitfulness_N = mkN "deceitfulness" ;
lin deceive_V2 = mkV2 (mkV "deceive" "deceives" "deceived" "deceived" "deceiving");
lin deceiver_N = mkN "deceiver" "deceivers";
lin deceivingly_Adv = mkAdv "deceivingly";
lin decelerate_V = mkV "decelerate" "decelerates" "decelerated" "decelerated" "decelerating";
lin decelerate_V2 = mkV2 (mkV "decelerate" "decelerates" "decelerated" "decelerated" "decelerating");
lin deceleration_N = mkN "deceleration" ;
lin december_N = mkN "December" "Decembers";
lin december_PN = mkPN "December";
lin decency_N = mkN "decency" "decencies";
lin decent_A = compoundA (mkA "decent");
lin decentralization_N = mkN (variants {"decentralization"; "decentralisation"}) ;
lin decentralize_V2 = mkV2 (mkV "decentralize" "decentralizes" "decentralized" "decentralized" "decentralizing");
lin deception_N = mkN "deception" "deceptions";
lin deceptive_A = compoundA (mkA "deceptive");
lin deceptiveness_N = mkN "deceptiveness" ;
lin decibel_N = mkN "decibel" "decibels";
lin decide_V = mkV "decide" "decides" "decided" "decided" "deciding";
lin decide_V2 = mkV2 (mkV "decide" "decides" "decided" "decided" "deciding");
lin decide_VS = mkVS (mkV "decide" "decides" "decided" "decided" "deciding");
lin decide_VV = mkVV (mkV "decide" "decides" "decided" "decided" "deciding");
lin decided_A = compoundA (mkA "decided");
lin decidua_N = mkN "decidua";
lin deciduous_A = compoundA (mkA "deciduous");
lin decigram_N = mkN "decigram" ;
lin decile_N = mkN "decile" ;
lin deciliter_N = mkN "deciliter" ;
lin decimal_A = compoundA (mkA "decimal");
lin decimal_N = mkN "decimal" ;
lin decimalization_N = mkN "decimalization" ;
lin decimalize_V2 = mkV2 (mkV "decimalize" "decimalizes" "decimalized" "decimalized" "decimalizing");
lin decimate_V2 = mkV2 (mkV "decimate" "decimates" "decimated" "decimated" "decimating");
lin decimation_N = mkN "decimation" ;
lin decimeter_N = mkN "decimeter" ;
lin decipher_V2 = mkV2 (mkV "decipher" "deciphers" "deciphered" "deciphered" "deciphering");
lin decipherable_A = compoundA (mkA "decipherable");
lin decipherer_N = mkN "decipherer" ;
lin decision_N = mkN "decision" "decisions";
lin decisive_A = compoundA (mkA "decisive");
lin decisiveness_N = mkN "decisiveness" ;
lin deck_N = mkN "deck" "decks";
lin deck_V2 = mkV2 (mkV "deck" "decks" "decked" "decked" "decking");
lin decker_N = mkN "decker" "deckers";
lin deckhand_N = mkN "deckhand" ;
lin deckle_N = mkN "deckle" ;
lin deckle_edged_A = compoundA (mkA "deckle-edged");
lin deckled_A = mkA "deckled" ;
lin declaim_V = mkV "declaim" "declaims" "declaimed" "declaimed" "declaiming";
lin declaim_V2 = mkV2 (mkV "declaim" "declaims" "declaimed" "declaimed" "declaiming");
lin declamation_N = mkN "declamation" "declamations";
lin declamatory_A = compoundA (mkA "declamatory");
lin declarable_A = compoundA (mkA "declarable");
lin declaration_N = mkN "declaration" "declarations";
lin declarative_A = mkA "declarative" ;
lin declare_V = mkV "declare" "declares" "declared" "declared" "declaring";
lin declare_V2 = mkV2 (mkV "declare" "declares" "declared" "declared" "declaring");
lin declare_V2V = mkV2V (mkV "declare" "declares" "declared" "declared" "declaring") noPrep to_Prep ;
lin declare_VS = mkVS (mkV "declare" "declares" "declared" "declared" "declaring");
lin declassification_N = mkN "declassification" "declassifications";
lin declassify_V2 = mkV2 (mkV "declassify" "declassifies" "declassified" "declassified" "declassifying");
lin declension_N = mkN "declension" "declensions";
lin declination_N = mkN "declination" "declinations";
lin decline_N = mkN "decline" "declines";
lin decline_V = mkV "decline" "declines" "declined" "declined" "declining";
lin decline_V2 = mkV2 (mkV "decline" "declines" "declined" "declined" "declining");
lin decline_VS = mkVS (mkV "decline" "declines" "declined" "declined" "declining");
lin decline_VV = mkVV (mkV "decline" "declines" "declined" "declined" "declining");
lin declinometer_N = mkN "declinometer" ;
lin declivitous_A = mkA "declivitous" ;
lin declivity_N = mkN "declivity" "declivities";
lin declutch_V = mkV "declutch" "declutches" "declutched" "declutched" "declutching";
lin deco_N = mkN "deco" ;
lin decoction_N = mkN "decoction" ;
lin decode_V2 = mkV2 (mkV "decode" "decodes" "decoded" "decoded" "decoding");
lin decoder_N = mkN "decoder" "decoders";
lin decoding_N = mkN "decoding" ;
lin decoke_V2 = mkV2 (mkV "decoke" "decokes" "decoked" "decoked" "decoking");
lin decolletage_N = mkN "decolletage" ;
lin decollete_A = compoundA (mkA "décolleté");
lin decolonization_N = mkN "decolonization" ;
lin decolonize_V2 = mkV2 (mkV "decolonize" "decolonizes" "decolonized" "decolonized" "decolonizing");
lin decompose_V = mkV "decompose" "decomposes" "decomposed" "decomposed" "decomposing";
lin decompose_V2 = mkV2 (mkV "decompose" "decomposes" "decomposed" "decomposed" "decomposing");
lin decomposition_N = mkN "decomposition" "decompositions";
lin decompositional_A = mkA "decompositional" ;
lin decompound_A = mkA "decompound" ;
lin decompress_V2 = mkV2 (mkV "decompress" "decompresses" "decompressed" "decompressed" "decompressing");
lin decompression_N = mkN "decompression" "decompressions";
lin decongestant_N = mkN "decongestant" ;
lin deconsecrated_A = mkA "deconsecrated" ;
lin deconstruction_N = mkN "deconstruction" ;
lin deconstructionist_A = mkA "deconstructionist" ;
lin deconstructivism_N = mkN "deconstructivism" ;
lin decontaminate_V2 = mkV2 (mkV "decontaminate" "decontaminates" "decontaminated" "decontaminated" "decontaminating");
lin decontamination_N = mkN "decontamination" ;
lin decontrol_V2 = mkV2 (mkV "decontrol" "decontrols" "decontrolled" "decontrolled" "decontrolling");
lin decor_N = mkN "décor";
lin decorate_V2 = mkV2 (mkV "decorate" "decorates" "decorated" "decorated" "decorating");
lin decoration_N = mkN "decoration" "decorations";
lin decorative_A = compoundA (mkA "decorative");
lin decorativeness_N = mkN "decorativeness" ;
lin decorator_N = mkN human (mkN "decorator" "decorators");
lin decorous_A = compoundA (mkA "decorous");
lin decortication_N = mkN "decortication" ;
lin decorum_N = mkN "decorum" ;
lin decoupage_N = mkN "decoupage" ;
lin decoy_N = mkN "decoy" "decoys";
lin decoy_V2 = mkV2 (mkV "decoy" "decoys" "decoyed" "decoyed" "decoying");
lin decrease_N = mkN "decrease" "decreases";
lin decrease_V = mkV "decrease" "decreases" "decreased" "decreased" "decreasing";
lin decrease_V2 = mkV2 (mkV "decrease" "decreases" "decreased" "decreased" "decreasing");
lin decree_N = mkN "decree" "decrees";
lin decree_V2 = mkV2 (mkV "decree" "decrees" "decreed" "decreed" "decreeing");
lin decree_nisi_N = mkN "decree nisi" "IRREG";
lin decrepit_A = compoundA (mkA "decrepit");
lin decrepitation_N = mkN "decrepitation" ;
lin decrepitude_N = mkN "decrepitude" ;
lin decrescendo_A = mkA "decrescendo" ;
lin decrescendo_N = mkN "decrescendo" ;
lin decribe_V2 = mkV2 (mkV "decribe");
lin decriminalization_N = mkN "decriminalization" ;
lin decry_V2 = mkV2 (mkV "decry" "decries" "decried" "decried" "decrying");
lin decubitus_N = mkN "decubitus" ;
lin decumary_N = mkN "decumary" ;
lin decurved_A = mkA "decurved" ;
lin decussate_A = mkA "decussate" ;
lin dedicate_V2 = mkV2 (mkV "dedicate" "dedicates" "dedicated" "dedicated" "dedicating");
lin dedication_N = mkN "dedication" "dedications";
lin dedifferentiated_A = mkA "dedifferentiated" ;
lin dedifferentiation_N = mkN "dedifferentiation" ;
lin deduce_V2 = mkV2 (mkV "deduce" "deduces" "deduced" "deduced" "deducing");
lin deducible_A = mkA "deducible" ;
lin deduct_V2 = mkV2 (mkV "deduct" "deducts" "deducted" "deducted" "deducting");
lin deductible_A = compoundA (mkA "deductible");
lin deductible_N = mkN "deductible" ;
lin deduction_N = mkN "deduction" "deductions";
lin deductive_A = compoundA (mkA "deductive");
lin deed_N = mkN "deed" "deeds";
lin deed_box_N = mkN "deed-box" "deed-boxes";
lin deedpoll_N = mkN "deedpoll" "deedpolls";
lin deem_V2 = mkV2 (mkV "deem" "deems" "deemed" "deemed" "deeming");
lin deem_V2A = mkV2A (mkV "deem") noPrep ;
lin deem_V2V = mkV2V (mkV "deem") noPrep to_Prep;
lin deep_A = mkA "deep" "deeper";
lin deep_Adv = mkAdv "deep";
lin deep_N = mkN "deep" "deeps";
lin deep_freeze_N = mkN "deep-freeze" "deep-freezes";
lin deep_freeze_V2 = mkV2 (mkV "deep-" IrregEng.freeze_V);
lin deep_laid_A = compoundA (mkA "deep-laid");
lin deep_mined_A = compoundA (mkA "deep-mined");
lin deep_rooted_A = compoundA (mkA "deep-rooted");
lin deep_sea_A = compoundA (mkA "deep-sea");
lin deep_seated_A = compoundA (mkA "deep-seated");
lin deep_water_A = compoundA (mkA "deep-water");
lin deepen_V = mkV "deepen" "deepens" "deepened" "deepened" "deepening";
lin deepen_V2 = mkV2 (mkV "deepen" "deepens" "deepened" "deepened" "deepening");
lin deepening_N = mkN "deepening" ;
lin deepness_N = mkN "deepness" ;
lin deer_N = mkN "deer" "deer";
lin deerberry_N = mkN "deerberry" ;
lin deerskin_N = mkN "deerskin" "deerskins";
lin deerstalker_N = mkN "deerstalker" "deerstalkers";
lin deerstalking_N = mkN "deerstalking" ;
lin deface_V2 = mkV2 (mkV "deface" "defaces" "defaced" "defaced" "defacing");
lin defacement_N = mkN "defacement" "defacements";
lin defalcation_N = mkN "defalcation" "defalcations";
lin defamation_N = mkN "defamation" ;
lin defamatory_A = compoundA (mkA "defamatory");
lin defame_V2 = mkV2 (mkV "defame" "defames" "defamed" "defamed" "defaming");
lin defamer_N = mkN "defamer" ;
lin default_N = mkN "default" ;
lin default_V = mkV "default" "defaults" "defaulted" "defaulted" "defaulting";
lin defaulter_N = mkN "defaulter" "defaulters";
lin defeasible_A = mkA "defeasible" ;
lin defeat_N = mkN "defeat" "defeats";
lin defeat_V2 = mkV2 (mkV "defeat" "defeats" "defeated" "defeated" "defeating");
lin defeated_N = mkN "defeated" ;
lin defeatism_N = mkN "defeatism" ;
lin defeatist_N = mkN "defeatist" "defeatists";
lin defecate_V = mkV "defecate" "defecates" "defecated" "defecated" "defecating";
lin defecation_N = mkN "defecation" "defecations";
lin defecator_N = mkN "defecator" ;
lin defect_N = mkN "defect" "defects";
lin defect_V = mkV "defect" "defects" "defected" "defected" "defecting";
lin defection_N = mkN "defection" "defections";
lin defective_A = compoundA (mkA "defective");
lin defectiveness_N = mkN "defectiveness" ;
lin defector_N = mkN "defector" "defectors";
lin defence_N = variants {mkN "defence" "defences"; mkN "defense" "defenses"};
lin defenceless_A = compoundA (mkA "defenceless");
lin defencelessness_N = mkN "defencelessness" ;
lin defend_V = mkV "defend";
lin defend_V2 = mkV2 (mkV "defend" "defends" "defended" "defended" "defending");
lin defendable_A = mkA "defendable" ;
lin defendant_N = mkN human (mkN "defendant" "defendants");
lin defenderMasc_N = mkN masculine (mkN "defender" "defenders");
lin defenderFem_N = mkN feminine (mkN "defender" "defenders");
lin defenestration_N = mkN "defenestration" ;
lin defenseless_A = mkA "defenseless" ;
lin defenseless_Adv = mkAdv "defenseless" ;
lin defenselessness_N = mkN "defenselessness" ;
lin defensibility_N = mkN "defensibility" ;
lin defensible_A = compoundA (mkA "defensible");
lin defensive_A = compoundA (mkA "defensive");
lin defensive_N = mkN "defensive" "defensives";
lin defensiveness_N = mkN "defensiveness" ;
lin defer_V = mkV "defer" "defers" "deferred" "deferred" "deferring";
lin defer_V2 = mkV2 (mkV "defer" "defers" "deferred" "deferred" "deferring");
lin deference_N = mkN "deference" ;
lin deferent_A = mkA "deferent" ;
lin deferential_A = compoundA (mkA "deferential");
lin deferment_N = mkN "deferment" "deferments";
lin deferral_N = mkN "deferral" ;
lin defervescence_N = mkN "defervescence" ;
lin defervescent_A = mkA "defervescent" ;
lin defiance_N = mkN "defiance" ;
lin defiant_A = compoundA (mkA "defiant");
lin defibrillation_N = mkN "defibrillation" ;
lin defibrillator_N = mkN "defibrillator" ;
lin deficiency_N = mkN "deficiency" "deficiencies";
lin deficient_A = compoundA (mkA "deficient");
lin deficit_N = mkN "deficit" "deficits";
lin defilade_N = mkN "defilade" ;
lin defile_N = mkN "defile" "defiles";
lin defile_V = mkV "defile" "defiles" "defiled" "defiled" "defiling";
lin defile_V2 = mkV2 (mkV "defile" "defiles" "defiled" "defiled" "defiling");
lin defilement_N = mkN "defilement" ;
lin definable_A = compoundA (mkA "definable");
lin define_V = mkV "define";
lin define_V2 = mkV2 (mkV "define" "defines" "defined" "defined" "defining");
lin definite_A = compoundA (mkA "definite");
lin definition_N = mkN "definition" "definitions";
lin definitive_A = compoundA (mkA "definitive");
lin deflagration_N = mkN "deflagration" ;
lin deflate_V2 = mkV2 (mkV "deflate" "deflates" "deflated" "deflated" "deflating");
lin deflation_N = mkN "deflation" ;
lin deflationary_A = compoundA (mkA "deflationary");
lin deflator_N = mkN "deflator" ;
lin deflect_V = mkV "deflect" "deflects" "deflected" "deflected" "deflecting";
lin deflect_V2 = mkV2 (mkV "deflect" "deflects" "deflected" "deflected" "deflecting");
lin deflection_N = mkN "deflection" "deflections";
lin deflective_A = mkA "deflective" ;
lin deflector_N = mkN "deflector" ;
lin defloration_N = mkN "defloration" ;
lin deflower_V2 = mkV2 (mkV "deflower" "deflowers" "deflowered" "deflowered" "deflowering");
lin defoliant_N = mkN "defoliant" "defoliants";
lin defoliate_A = mkA "defoliate" ;
lin defoliate_V2 = mkV2 (mkV "defoliate" "defoliates" "defoliated" "defoliated" "defoliating");
lin defoliation_N = mkN "defoliation" "defoliations";
lin defoliator_N = mkN "defoliator" ;
lin deforest_V2 = mkV2 (mkV "deforest" "deforests" "deforested" "deforested" "deforesting");
lin deforestation_N = mkN "deforestation" ;
lin deform_V2 = mkV2 (mkV "deform" "deforms" "deformed" "deformed" "deforming");
lin deformation_N = mkN "deformation" ;
lin deformational_A = mkA "deformational" ;
lin deformity_N = mkN "deformity" "deformities";
lin defraud_V2 = mkV2 (mkV "defraud" "defrauds" "defrauded" "defrauded" "defrauding");
lin defray_V2 = mkV2 (mkV "defray" "defrays" "defrayed" "defrayed" "defraying");
lin defrayal_N = mkN "defrayal" "defrayals";
lin defrayment_N = mkN "defrayment" "defrayments";
lin defrock_V2 = mkV2 (mkV "defrock" "defrocks" "defrocked" "defrocked" "defrocking");
lin defrost_V2 = mkV2 (mkV "defrost" "defrosts" "defrosted" "defrosted" "defrosting");
lin defroster_N = mkN "defroster" "defrosters";
lin deft_A = compoundA (mkA "deft");
lin deftness_N = mkN "deftness" ;
lin defunct_A = compoundA (mkA "defunct");
lin defuse_V2 = mkV2 (mkV "defuse" "defuses" "defused" "defused" "defusing");
lin defy_V2 = mkV2 (mkV "defy" "defies" "defied" "defied" "defying");
lin defy_V2V = mkV2V (mkV "defy") noPrep to_Prep ;
lin degage_A = mkA "degage" ;
lin degauss_V2 = mkV2 (mkV "degauss" "degausses" "degaussed" "degaussed" "degaussing");
lin degaussing_N = mkN "degaussing" ;
lin degeneracy_N = mkN "degeneracy" ;
lin degenerate_A = compoundA (mkA "degenerate");
lin degenerate_N = mkN "degenerate" "degenerates";
lin degenerate_V = mkV "degenerate" "degenerates" "degenerated" "degenerated" "degenerating";
lin degeneration_N = mkN "degeneration" ;
lin degenerative_A = mkA "degenerative" ;
lin degradation_N = mkN "degradation" "degradations";
lin degrade_V2 = mkV2 (mkV "degrade" "degrades" "degraded" "degraded" "degrading");
lin degree_1_N = mkN "degree" "degrees";
lin degree_2_N = mkN "degree" "degrees";
lin degree_3_N = mkN "degree" "degrees";
lin degressive_A = mkA "degressive" ;
lin dehiscence_N = mkN "dehiscence" ;
lin dehiscent_A = mkA "dehiscent" ;
lin dehorn_V2 = mkV2 (mkV "dehorn" "dehorns" "dehorned" "dehorned" "dehorning");
lin dehumanization_N = mkN "dehumanization" ;
lin dehumanize_V2 = mkV2 (mkV "dehumanize" "dehumanizes" "dehumanized" "dehumanized" "dehumanizing");
lin dehydrate_V2 = mkV2 (mkV "dehydrate" "dehydrates" "dehydrated" "dehydrated" "dehydrating");
lin dehydration_N = mkN "dehydration" ;
lin deictic_A = mkA "deictic" ;
lin deictic_N = mkN "deictic" ;
lin deific_A = mkA "deific" ;
lin deification_N = mkN "deification" ;
lin deify_V2 = mkV2 (mkV "deify" "deifies" "deified" "deified" "deifying");
lin deign_V = mkV "deign" "deigns" "deigned" "deigned" "deigning";
lin deinocheirus_N = mkN "deinocheirus" ;
lin deinonychus_N = mkN "deinonychus" ;
lin deipnosophist_N = mkN "deipnosophist" ;
lin deirdre_PN = mkPN "Deirdre";
lin deism_N = mkN "deism" ;
lin deist_A = mkA "deist" ;
lin deist_N = mkN "deist" "deists";
lin deity_N = mkN "deity" "deities";
lin deixis_N = mkN "deixis" ;
lin deject_V2 = mkV2 (mkV "deject" "dejects" "dejected" "dejected" "dejecting");
lin dejectedly_Adv = mkAdv "dejectedly";
lin dejection_N = mkN "dejection" ;
lin dekagram_N = mkN "dekagram" ;
lin dekaliter_N = mkN "dekaliter" ;
lin dekko_N = mkN "dekko" "dekki";
lin delavirdine_N = mkN "delavirdine" ;
lin delaware_PN = mkPN "Delaware";
lin delay_N = mkN "delay" "delays";
lin delay_V = mkV "delay" "delays" "delayed" "delayed" "delaying";
lin delay_V2 = mkV2 (mkV "delay" "delays" "delayed" "delayed" "delaying");
lin delayed_action_A = compoundA (mkA "delayed-action");
lin delayed_action_N = mkN "delayed-action" ;
lin delayer_N = mkN "delayer" ;
lin delectability_N = mkN "delectability" ;
lin delectable_A = compoundA (mkA "delectable");
lin delectation_N = mkN "delectation" ;
lin delegacy_N = mkN "delegacy" "delegacies";
lin delegate_N = mkN "delegate" "delegates";
lin delegate_V2 = mkV2 (mkV "delegate" "delegates" "delegated" "delegated" "delegating");
lin delegating_N = mkN "delegating" ;
lin delegation_N = mkN "delegation" "delegations";
lin delete_V2 = mkV2 (mkV "delete" "deletes" "deleted" "deleted" "deleting");
lin deleterious_A = compoundA (mkA "deleterious");
lin deletion_N = mkN "deletion" "deletions";
lin delf_N = mkN "delf" ;
lin delft_N = mkN "delft" ;
lin delhi_PN = mkPN "Delhi";
lin deliberate_A = compoundA (mkA "deliberate");
lin deliberate_V = mkV "deliberate" "deliberates" "deliberated" "deliberated" "deliberating";
lin deliberate_V2 = mkV2 (mkV "deliberate" "deliberates" "deliberated" "deliberated" "deliberating");
lin deliberation_N = mkN "deliberation" "deliberations";
lin deliberative_A = compoundA (mkA "deliberative");
lin delible_A = mkA "delible" ;
lin delicacy_N = mkN "delicacy" "delicacies";
lin delicate_A = compoundA (mkA "delicate");
lin delicatessen_N = mkN "delicatessen" "delicatessens";
lin delicious_A = compoundA (mkA "delicious");
lin delight_N = mkN "delight" "delights";
lin delight_V = mkV "delight" "delights" "delighted" "delighted" "delighting";
lin delight_V2 = mkV2 (mkV "delight" "delights" "delighted" "delighted" "delighting");
lin delight_VS = mkVS (mkV "delight" "delights" "delighted" "delighted" "delighting");
lin delightedly_Adv = mkAdv "delightedly";
lin delightful_A = compoundA (mkA "delightful");
lin delimit_V2 = mkV2 (mkV "delimit" "delimits" "delimited" "delimited" "delimiting");
lin delimitate_V2 = mkV2 (mkV "delimitate" "delimitates" "delimitated" "delimitated" "delimitating");
lin delimitation_N = mkN "delimitation" "delimitations";
lin delineate_V2 = mkV2 (mkV "delineate" "delineates" "delineated" "delineated" "delineating");
lin delineation_N = mkN "delineation" "delineations";
lin delineative_A = mkA "delineative" ;
lin delinquency_N = mkN "delinquency" "delinquencies";
lin delinquent_A = compoundA (mkA "delinquent");
lin delinquent_N = mkN "delinquent" "delinquents";
lin deliquescent_A = compoundA (mkA "deliquescent");
lin delirious_A = compoundA (mkA "delirious");
lin delirium_N = mkN "delirium" ;
lin delirium_tremens_N = mkN "delirium tremens" "IRREG";
lin deliver_V = mkV "deliver" "delivers" "delivered" "delivered" "delivering";
lin deliver_V2 = mkV2 (mkV "deliver" "delivers" "delivered" "delivered" "delivering");
lin deliverable_A = mkA "deliverable" ;
lin deliverable_N = mkN "deliverable" ;
lin deliverance_N = mkN "deliverance" "deliverances";
lin deliverer_N = mkN "deliverer" "deliverers";
lin delivery_N = mkN "delivery" "deliveries";
lin deliveryman_N = mkN masculine (mkN "deliveryman" "deliverymen");
lin dell_N = mkN "dell" "dells";
lin delouse_V2 = mkV2 (mkV "delouse" "delouses" "deloused" "deloused" "delousing");
lin delphic_A = compoundA (mkA "delphic");
lin delphinium_N = mkN "delphinium" "delphiniums";
lin delta_N = mkN "delta" "deltas";
lin deltoid_A = mkA "deltoid" ;
lin deltoid_N = mkN "deltoid" ;
lin delude_V2 = mkV2 (mkV "delude" "deludes" "deluded" "deluded" "deluding");
lin deluge_N = mkN "deluge" "deluges";
lin deluge_V2 = mkV2 (mkV "deluge" "deluges" "deluged" "deluged" "deluging");
lin delusion_N = mkN "delusion" "delusions";
lin delusional_A = mkA "delusional" ;
lin delusive_A = compoundA (mkA "delusive");
lin deluxe_A = mkA "deluxe" ;
lin delve_V = mkV "delve" "delves" "delved" "delved" "delving";
lin delve_V2 = mkV2 (mkV "delve" "delves" "delved" "delved" "delving");
lin demagnetization_N = mkN "demagnetization" ;
lin demagnetize_V2 = mkV2 (mkV "demagnetize" "demagnetizes" "demagnetized" "demagnetized" "demagnetizing");
lin demagogic_A = compoundA (mkA "demagogic");
lin demagogue_N = mkN "demagogue" "demagogues";
lin demagoguery_N = mkN "demagoguery" ;
lin demagogy_N = mkN "demagogy" ;
lin demand_N = mkN "demand" "demands";
lin demand_V2 = mkV2 (mkV "demand" "demands" "demanded" "demanded" "demanding");
lin demand_VS = mkVS (mkV "demand");
lin demander_N = mkN "demander" ;
lin demanding_A = mkA "demanding" ;
lin demantoid_N = mkN "demantoid" ;
lin demarcate_V2 = mkV2 (mkV "demarcate" "demarcates" "demarcated" "demarcated" "demarcating");
lin demarcation_N = mkN "demarcation" ;
lin demarche_N = mkN "démarche" "démarches";
lin demean_V2 = mkV2 (mkV "demean" "demeans" "demeaned" "demeaned" "demeaning");
lin demeaning_A = mkA "demeaning" ;
lin demeanor_N = mkN "demeanor" ;
lin demeanour_N = mkN "demeanour" ;
lin demented_A = compoundA (mkA "demented");
lin dementia_N = mkN "dementia" ;
lin demerara_N = mkN "demerara" ;
lin demerit_N = mkN "demerit" "demerits";
lin demesne_N = mkN "demesne" "demesnes";
lin demiglace_N = mkN "demiglace" ;
lin demigod_N = mkN "demigod" "demigods";
lin demijohn_N = mkN "demijohn" "demijohns";
lin demilitarization_N = mkN (variants {"demilitarization"; "demilitarisation"});
lin demilitarize_V2 = mkV2 (mkV "demilitarize" "demilitarizes" "demilitarized" "demilitarized" "demilitarizing");
lin demimondaine_N = mkN "demimondaine" "demimondaines";
lin demimonde_N = mkN "demimonde" "demimondes";
lin demineralization_N = mkN "demineralization" ;
lin demise_N = mkN "demise" "demises";
lin demist_V2 = mkV2 (mkV "demist" "demists" "demisted" "demisted" "demisting");
lin demister_N = mkN "demister" "demisters";
lin demitasse_N = mkN "demitasse" ;
lin demiurge_N = mkN "demiurge" ;
lin demo_N = mkN "demo" "demos";
lin demob_V2 = mkV2 (mkV "demob" "demobs" "demobbed" "demobbed" "demobbing");
lin demobilization_N = mkN (variants {"demobilization"; "demobilisation"});
lin demobilize_V2 = mkV2 (mkV "demobilize" "demobilizes" "demobilized" "demobilized" "demobilizing");
lin democracy_N = mkN "democracy" "democracies";
lin democrat_N = mkN "democrat" "democrats";
lin democratic_A = compoundA (mkA "democratic");
lin democratically_Adv = mkAdv "democratically";
lin democratization_N = mkN (variants {"democratization"; "democratisation"}) ;
lin democratize_V2 = mkV2 (mkV "democratize" "democratizes" "democratized" "democratized" "democratizing");
lin demode_A = compoundA (mkA "démodé");
lin demodulation_N = mkN "demodulation" ;
lin demographer_N = mkN "demographer" ;
lin demographic_A = compoundA (mkA "demographic");
lin demographic_N = mkN "demographic" ;
lin demography_N = mkN "demography" ;
lin demolish_V2 = mkV2 (mkV "demolish" "demolishes" "demolished" "demolished" "demolishing");
lin demolition_N = mkN "demolition" "demolitions";
lin demon_N = mkN "demon" "demons";
lin demonetization_N = mkN "demonetization" "demonetizations";
lin demonetize_V2 = mkV2 (mkV "demonetize" "demonetizes" "demonetized" "demonetized" "demonetizing");
lin demoniac_A = compoundA (mkA "demoniac");
lin demoniac_N = mkN "demoniac" "demoniacs";
lin demoniacal_A = compoundA (mkA "demoniacal");
lin demonic_A = compoundA (mkA "demonic");
lin demonization_N = mkN "demonization" ;
lin demonize_V2 = mkV2 (mkV "demonize");
lin demonstrability_N = mkN "demonstrability" ;
lin demonstrable_A = compoundA (mkA "demonstrable");
lin demonstrate_V = mkV "demonstrate" "demonstrates" "demonstrated" "demonstrated" "demonstrating";
lin demonstrate_V2 = mkV2 (mkV "demonstrate" "demonstrates" "demonstrated" "demonstrated" "demonstrating");
lin demonstrate_VS = mkVS (mkV "demonstrate" "demonstrates" "demonstrated" "demonstrated" "demonstrating");
lin demonstration_N = mkN "demonstration" "demonstrations";
lin demonstrative_A = compoundA (mkA "demonstrative");
lin demonstrativeness_N = mkN "demonstrativeness" ;
lin demonstrator_N = mkN "demonstrator" "demonstrators";
lin demoralization_N = mkN "demoralization" ;
lin demoralize_V2 = mkV2 (mkV "demoralize" "demoralizes" "demoralized" "demoralized" "demoralizing");
lin demoralizing_A = mkA "demoralizing" ;
lin demote_V2 = mkV2 (mkV "demote" "demotes" "demoted" "demoted" "demoting");
lin demotic_A = compoundA (mkA "demotic");
lin demotion_N = mkN "demotion" "demotions";
lin demulcent_A = mkA "demulcent" ;
lin demulcent_N = mkN "demulcent" ;
lin demur_N = mkN "demur" ;
lin demur_V = mkV "demur" "demurs" "demurred" "demurred" "demurring";
lin demur_VS = mkVS (mkV "demur" "demurs" "demurred" "demurred" "demurring");
lin demure_A = compoundA (mkA "demure");
lin demureness_N = mkN "demureness" ;
lin demurrage_N = mkN "demurrage" ;
lin demurrer_N = mkN "demurrer" ;
lin demyelination_N = mkN "demyelination" ;
lin demythologization_N = mkN "demythologization" ;
lin demythologized_A = mkA "demythologized" ;
lin den_N = mkN "den" "dens";
lin denain_PN = mkPN "Denain";
lin denar_N = mkN "denar";
lin denary_A = compoundA (mkA "denary");
lin denationalization_N = mkN (variants {"denationalization"; "denationalisation"}) ;
lin denationalize_V2 = mkV2 (mkV "denationalize" "denationalizes" "denationalized" "denationalized" "denationalizing");
lin denaturant_N = mkN "denaturant" ;
lin denatured_A = compoundA (mkA "denatured");
lin denazification_N = mkN "denazification" ;
lin denbigh_PN = mkPN "Denbigh";
lin dendrite_N = mkN "dendrite" ;
lin dendritic_A = mkA "dendritic" ;
lin dendrobium_N = mkN "dendrobium" ;
lin dengue_N = mkN "dengue" ;
lin deniable_A = compoundA (mkA "deniable");
lin denial_N = mkN "denial" "denials";
lin denier_N = mkN "denier" "denier";
lin denigrate_V2 = mkV2 (mkV "denigrate" "denigrates" "denigrated" "denigrated" "denigrating");
lin denigration_N = mkN "denigration" ;
lin denim_N = mkN "denim" ;
lin denis_PN = mkPN "Denis";
lin denise_PN = mkPN "Denise";
lin denizen_N = mkN "denizen" "denizens";
lin denmark_PN = mkPN "Denmark";
lin dennis_PN = mkPN "Dennis";
lin denny_PN = mkPN "Denny";
lin denominate_V2 = mkV2 (mkV "denominate" "denominates" "denominated" "denominated" "denominating");
lin denomination_N = mkN "denomination" "denominations";
lin denominational_A = compoundA (mkA "denominational");
lin denominationalism_N = mkN "denominationalism" ;
lin denominator_N = mkN "denominator" "denominators";
lin denotative_A = mkA "denotative" ;
lin denotatum_N = mkN "denotatum" ;
lin denote_V2 = mkV2 (mkV "denote" "denotes" "denoted" "denoted" "denoting");
lin denouement_N = mkN "dénouement" "dénouements";
lin denounce_V2 = mkV2 (mkV "denounce" "denounces" "denounced" "denounced" "denouncing");
lin dense_A = mkA "dense" "denser";
lin denseness_N = mkN "denseness" ;
lin densimeter_N = mkN "densimeter" ;
lin densitometer_N = mkN "densitometer" ;
lin densitometry_N = mkN "densitometry" ;
lin density_N = mkN "density" "densities";
lin dent_N = mkN "dent" "dents";
lin dent_V = mkV "dent" "dents" "dented" "dented" "denting";
lin dent_V2 = mkV2 (mkV "dent" "dents" "dented" "dented" "denting");
lin dental_A = compoundA (mkA "dental");
lin dentate_A = mkA "dentate" ;
lin denticle_N = mkN "denticle" ;
lin denticulate_A = mkA "denticulate" ;
lin dentifrice_N = mkN "dentifrice" ;
lin dentine_N = mkN "dentine" ;
lin dentist_N = mkN "dentist" "dentists";
lin dentistry_N = mkN "dentistry" ;
lin dentition_N = mkN "dentition" ;
lin denture_N = mkN "denture" "dentures";
lin denudation_N = mkN "denudation" ;
lin denude_V2 = mkV2 (mkV "denude" "denudes" "denuded" "denuded" "denuding");
lin denunciation_N = mkN "denunciation" "denunciations";
lin denver_PN = mkPN "Denver";
lin deny_V2 = mkV2 (mkV "deny" "denies" "denied" "denied" "denying");
lin deny_V3 = mkV3 (mkV "deny" "denies" "denied" "denied" "denying");
lin deny_VS = mkVS (mkV "deny");
lin deodar_N = mkN "deodar" "deodars";
lin deodorant_N = mkN "deodorant" "deodorants";
lin deodorize_V2 = mkV2 (mkV "deodorize" "deodorizes" "deodorized" "deodorized" "deodorizing");
lin deossification_N = mkN "deossification" ;
lin deoxyadenosine_N = mkN "deoxyadenosine" ;
lin deoxycytidine_N = mkN "deoxycytidine" ;
lin deoxyguanosine_N = mkN "deoxyguanosine" ;
lin deoxyribose_N = mkN "deoxyribose" ;
lin deoxythymidine_N = mkN "deoxythymidine" ;
lin dep_PN = mkPN "Dep";
lin depart_V = mkV "depart" "departs" "departed" "departed" "departing";
lin departed_A = compoundA (mkA "departed");
lin departed_N = mkN "departed" "departed";
lin departer_N = mkN "departer" ;
lin department_N = mkN "department" "departments";
lin departmental_A = compoundA (mkA "departmental");
lin departure_N = mkN "departure" "departures";
lin depend_V = mkV "depend" "depends" "depended" "depended" "depending";
lin dependability_N = mkN "dependability" ;
lin dependable_A = compoundA (mkA "dependable");
lin dependant_N = mkN "dependant" "dependants";
lin dependence_N = mkN "dependence" ;
lin dependency_N = mkN "dependency" "dependencies";
lin dependent_A = compoundA (mkA "dependent");
lin dependent_N = mkN "dependent" "dependents";
lin depersonalization_N = mkN "depersonalization" ;
lin depict_V2 = mkV2 (mkV "depict" "depicts" "depicted" "depicted" "depicting");
lin depicting_N = mkN "depicting" ;
lin depiction_N = mkN "depiction" "depictions";
lin depigmentation_N = mkN "depigmentation" ;
lin depilation_N = mkN "depilation" ;
lin depilatory_A = compoundA (mkA "depilatory");
lin depilatory_N = mkN "depilatory" "depilatories";
lin depilous_A = mkA "depilous" ;
lin deplane_V = mkV "deplane" "deplanes" "deplaned" "deplaned" "deplaning";
lin depletable_A = mkA "depletable" ;
lin deplete_V2 = mkV2 (mkV "deplete" "depletes" "depleted" "depleted" "depleting");
lin depletion_N = mkN "depletion" ;
lin deplorable_A = compoundA (mkA "deplorable");
lin deplore_V2 = mkV2 (mkV "deplore" "deplores" "deplored" "deplored" "deploring");
lin deploy_V = mkV "deploy" "deploys" "deployed" "deployed" "deploying";
lin deploy_V2 = mkV2 (mkV "deploy" "deploys" "deployed" "deployed" "deploying");
lin deployment_N = mkN "deployment" "deployments";
lin depolarization_N = mkN "depolarization" ;
lin deponent_N = mkN "deponent" "deponents";
lin depopulate_V2 = mkV2 (mkV "depopulate" "depopulates" "depopulated" "depopulated" "depopulating");
lin depopulation_N = mkN "depopulation" ;
lin deport_V2 = mkV2 (mkV "deport" "deports" "deported" "deported" "deporting");
lin deportation_N = mkN "deportation" "deportations";
lin deportee_N = mkN "deportee" "deportees";
lin deportment_N = mkN "deportment" ;
lin depose_V = mkV "depose" "deposes" "deposed" "deposed" "deposing";
lin depose_V2 = mkV2 (mkV "depose" "deposes" "deposed" "deposed" "deposing");
lin deposit_N = mkN "deposit" "deposits";
lin deposit_V2 = mkV2 (mkV "deposit" "deposits" "deposited" "deposited" "depositing");
lin deposition_N = mkN "deposition" "depositions";
lin depositor_N = mkN "depositor" "depositors";
lin depository_N = mkN "depository" "depositories";
lin depot_N = mkN "depot" "depots";
lin deprave_V2 = mkV2 (mkV "deprave" "depraves" "depraved" "depraved" "depraving");
lin depravity_N = mkN "depravity" "depravities";
lin deprecate_V2 = mkV2 (mkV "deprecate" "deprecates" "deprecated" "deprecated" "deprecating");
lin deprecation_N = mkN "deprecation" "deprecations";
lin deprecative_A = mkA "deprecative" ;
lin depreciate_V = mkV "depreciate" "depreciates" "depreciated" "depreciated" "depreciating";
lin depreciate_V2 = mkV2 (mkV "depreciate" "depreciates" "depreciated" "depreciated" "depreciating");
lin depreciation_N = mkN "depreciation" ;
lin depreciatory_A = compoundA (mkA "depreciatory");
lin depredation_N = mkN "depredation" "depredations";
lin depress_V2 = mkV2 (mkV "depress" "depresses" "depressed" "depressed" "depressing");
lin depressant_A = mkA "depressant" ;
lin depressing_A = mkA "depressing" ;
lin depression_N = mkN "depression" "depressions";
lin depressive_A = compoundA (mkA "depressive");
lin depressive_N = mkN "depressive" "depressives";
lin depressor_N = mkN "depressor" ;
lin deprivation_N = mkN "deprivation" "deprivations";
lin deprive_V2 = mkV2 (mkV "deprive" "deprives" "deprived" "deprived" "depriving");
lin dept_PN = mkPN "Dept";
lin depth_N = mkN "depth" "depths";
lin depth_bomb_N = mkN "depth-bomb" "depth-bombs";
lin depth_charge_N = mkN "depth-charge" "depth-charges";
lin deputation_N = mkN "deputation" "deputations";
lin depute_V2 = mkV2 (mkV "depute" "deputes" "deputed" "deputed" "deputing");
lin deputize_V = mkV "deputize" "deputizes" "deputized" "deputized" "deputizing";
lin deputy_N = mkN human (mkN "deputy" "deputies");
lin derail_V2 = mkV2 (mkV "derail" "derails" "derailed" "derailed" "derailing");
lin derailment_N = mkN "derailment" "derailments";
lin derange_V2 = mkV2 (mkV "derange" "deranges" "deranged" "deranged" "deranging");
lin derangement_N = mkN "derangement" "derangements";
lin derate_V2 = mkV2 (mkV "derate" "derates" "derated" "derated" "derating");
lin derby_N = mkN "derby" "derbies";
lin derby_PN = mkPN "Derby";
lin derbyshire_PN = mkPN "Derbyshire";
lin deregulate_V2 = mkV2 (mkV "deregulate");
lin deregulation_N = mkN "deregulation" ;
lin dereham_PN = mkPN "Dereham";
lin derek_PN = mkPN "Derek";
lin derelict_A = compoundA (mkA "derelict");
lin derelict_N = mkN "derelict" ;
lin dereliction_N = mkN "dereliction" ;
lin derequisition_V2 = mkV2 (mkV "derequisition" "derequisitions" "derequisitioned" "derequisitioned" "derequisitioning");
lin derestrict_V2 = mkV2 (mkV "derestrict" "derestricts" "derestricted" "derestricted" "derestricting");
lin deride_V2 = mkV2 (mkV "deride" "derides" "derided" "derided" "deriding");
lin derision_N = mkN "derision" ;
lin derisive_A = compoundA (mkA "derisive");
lin derisory_A = compoundA (mkA "derisory");
lin derivable_A = mkA "derivable" ;
lin derivation_N = mkN "derivation" "derivations";
lin derivational_A = mkA "derivational" ;
lin derivative_A = compoundA (mkA "derivative");
lin derivative_N = mkN "derivative" "derivatives";
lin derive_V = mkV "derive" "derives" "derived" "derived" "deriving";
lin derive_V2 = mkV2 (mkV "derive" "derives" "derived" "derived" "deriving");
lin deriving_N = mkN "deriving" ;
lin dermabrasion_N = mkN "dermabrasion" ;
lin dermal_A = mkA "dermal" ;
lin dermatitis_N = mkN "dermatitis" ;
lin dermatoglyphic_N = mkN "dermatoglyphic" ;
lin dermatoglyphics_N = mkN "dermatoglyphics" ;
lin dermatologic_A = mkA "dermatologic" ;
lin dermatologistMasc_N = mkN masculine (mkN "dermatologist" "dermatologists");
lin dermatologistFem_N = mkN feminine (mkN "dermatologist" "dermatologists");
lin dermatology_N = mkN "dermatology" ;
lin dermatome_N = mkN "dermatome" ;
lin dermatomycosis_N = mkN "dermatomycosis" ;
lin dermatomyositis_N = mkN "dermatomyositis" ;
lin dermatosis_N = mkN "dermatosis" ;
lin dermis_N = mkN "dermis" ;
lin derogate_V = mkV "derogate" "derogates" "derogated" "derogated" "derogating";
lin derogation_N = mkN "derogation" ;
lin derogative_A = mkA "derogative" ;
lin derogatory_A = compoundA (mkA "derogatory");
lin derrick_N = mkN "derrick" "derricks";
lin derring_do_N = mkN "derring-do" ;
lin derringer_N = mkN "derringer" ;
lin derris_N = mkN "derris" ;
lin derv_N = mkN "derv" ;
lin dervish_N = mkN "dervish" "dervishes";
lin des_N = mkN "des" ;
lin des_PN = mkPN "Des";
lin desalinate_V2 = mkV2 (mkV "desalinate" "desalinates" "desalinated" "desalinated" "desalinating");
lin desalination_N = mkN "desalination" ;
lin desalinization_N = mkN "desalinization" ;
lin desalinize_V2 = mkV2 (mkV "desalinize" "desalinizes" "desalinized" "desalinized" "desalinizing");
lin desalt_V2 = mkV2 (mkV "desalt" "desalts" "desalted" "desalted" "desalting");
lin descale_V2 = mkV2 (mkV "descale" "descales" "descaled" "descaled" "descaling");
lin descant_N = mkN "descant" "descants";
lin descant_V = mkV "descant" "descants" "descanted" "descanted" "descanting";
lin descend_V = mkV "descend" "descends" "descended" "descended" "descending";
lin descend_V2 = mkV2 (mkV "descend" "descends" "descended" "descended" "descending");
lin descendant_A = mkA "descendant" ;
lin descendant_N = mkN human (mkN "descendant" "descendants");
lin descendants_N = mkN "descendants" ;
lin descender_N = mkN "descender" ;
lin descent_N = mkN "descent" "descents";
lin describable_A = mkA "describable" ;
lin describe_V = mkV "describe";
lin describe_V2 = mkV2 (mkV "describe" "describes" "described" "described" "describing");
lin describe_VS = mkVS (mkV "describe");
lin description_N = mkN "description" "descriptions";
lin descriptive_A = compoundA (mkA "descriptive");
lin descriptivism_N = mkN "descriptivism" ;
lin descriptor_N = mkN "descriptor" ;
lin descry_V2 = mkV2 (mkV "descry" "descries" "descried" "descried" "descrying");
lin desecrate_V2 = mkV2 (mkV "desecrate" "desecrates" "desecrated" "desecrated" "desecrating");
lin desecration_N = mkN "desecration" ;
lin desegrated_A = mkA "desegrated" ;
lin desegregate_V2 = mkV2 (mkV "desegregate" "desegregates" "desegregated" "desegregated" "desegregating");
lin desegregation_N = mkN "desegregation" ;
lin desensitization_N = mkN "desensitization" ;
lin desensitize_V2 = mkV2 (mkV "desensitize" "desensitizes" "desensitized" "desensitized" "desensitizing");
lin desensitizing_A = mkA "desensitizing" ;
lin desert_A = compoundA (mkA "desert");
lin desert_N = mkN "desert" "deserts";
lin desert_V = mkV "desert" "deserts" "deserted" "deserted" "deserting";
lin desert_V2 = mkV2 (mkV "desert" "deserts" "deserted" "deserted" "deserting");
lin deserter_N = mkN "deserter" "deserters";
lin desertification_N = mkN "desertification" ;
lin desertion_N = mkN "desertion" "desertions";
lin deserts_N = mkN "deserts" ;
lin deserve_V = mkV "deserve" "deserves" "deserved" "deserved" "deserving";
lin deserve_V2 = mkV2 (mkV "deserve" "deserves" "deserved" "deserved" "deserving");
lin deserve_VV = mkVV (mkV "deserve" "deserves" "deserved" "deserved" "deserving");
lin deservedly_Adv = mkAdv "deservedly" ;
lin deservingness_N = mkN "deservingness" ;
lin deshabille_N = mkN "déshabillé" ;
lin desiccant_N = mkN "desiccant" "desiccants";
lin desiccate_V2 = mkV2 (mkV "desiccate" "desiccates" "desiccated" "desiccated" "desiccating");
lin desideratum_N = mkN "desideratum" "desiderata";
lin design_N = mkN "design" "designs";
lin design_V = mkV "design" "designs" "designed" "designed" "designing";
lin design_V2 = mkV2 (mkV "design" "designs" "designed" "designed" "designing");
lin design_V2V = mkV2V (mkV "design" "designs" "designed" "designed" "designing") noPrep to_Prep;
lin designate_A = compoundA (mkA "designate");
lin designate_V = mkV "designate";
lin designate_V2 = mkV2 (mkV "designate" "designates" "designated" "designated" "designating");
lin designate_V2V = mkV2V (mkV "designate") noPrep to_Prep ;
lin designate_VS = mkVS (mkV "designate");
lin designation_N = mkN "designation" "designations";
lin designative_A = mkA "designative" ;
lin designatum_N = mkN "designatum" ;
lin designedly_Adv = mkAdv "designedly";
lin designer_N = mkN human (mkN "designer" "designers");
lin designing_N = mkN "designing" ;
lin desipramine_N = mkN "desipramine" ;
lin desirability_N = mkN "desirability" ;
lin desirable_A = compoundA (mkA "desirable");
lin desire_N = mkN "desire" "desires";
lin desire_V2 = mkV2 (mkV "desire" "desires" "desired" "desired" "desiring");
lin desirous_A = compoundA (mkA "desirous");
lin desist_V = mkV "desist" "desists" "desisted" "desisted" "desisting";
lin desk_N = mkN "desk" "desks";
lin desktop_N = mkN "desktop" ;
lin desmid_N = mkN "desmid" ;
lin desmond_PN = mkPN "Desmond";
lin desolate_A = compoundA (mkA "desolate");
lin desolate_V2 = mkV2 (mkV "desolate" "desolates" "desolated" "desolated" "desolating");
lin desolation_N = mkN "desolation" ;
lin desorption_N = mkN "desorption" ;
lin despair_N = mkN "despair" ;
lin despair_V = mkV "despair" "despairs" "despaired" "despaired" "despairing";
lin despairingly_Adv = mkAdv "despairingly";
lin despatch_N = mkN "despatch" "despatches";
lin despatch_V2 = mkV2 (mkV "despatch" "despatches" "despatched" "despatched" "despatching");
lin desperado_N = mkN "desperado" "desperadoes";
lin desperate_A = compoundA (mkA "desperate");
lin desperate_N = mkN "desperate" ;
lin desperation_N = mkN "desperation" ;
lin despicable_A = compoundA (mkA "despicable");
lin despisal_N = mkN "despisal" ;
lin despise_V2 = mkV2 (mkV "despise" "despises" "despised" "despised" "despising");
lin despite_N = mkN "despite" ;
lin despite_Prep = mkPrep "despite";
lin despiteful_A = compoundA (mkA "despiteful");
lin despoil_V2 = mkV2 (mkV "despoil" "despoils" "despoiled" "despoiled" "despoiling");
lin despondency_N = mkN "despondency" ;
lin despondent_A = compoundA (mkA "despondent");
lin despot_N = mkN "despot" "despots";
lin despotic_A = compoundA (mkA "despotic");
lin despotism_N = mkN "despotism" "despotisms";
lin desquamation_N = mkN "desquamation" ;
lin dessau_PN = mkPN "Dessau";
lin dessert_N = mkN "dessert" "desserts";
lin dessertspoon_N = mkN "dessertspoon" "dessertspoons";
lin dessertspoonful_N = mkN "dessertspoonful" "dessertspoonfuls";
lin dessiatine_N = mkN "dessiatine" ;
lin destabilization_N = mkN (variants {"destabilization"; "destabilisation"});
lin destalinization_N = mkN "destalinization" ;
lin destination_N = mkN "destination" "destinations";
lin destine_V2 = mkV2 (mkV "destine" "destines" "destined" "destined" "destining");
lin destine_V2V = mkV2V (mkV "destine") noPrep to_Prep ;
lin destiny_N = mkN "destiny" "destinies";
lin destitute_A = compoundA (mkA "destitute");
lin destitution_N = mkN "destitution" ;
lin destroy_V2 = mkV2 (mkV "destroy" "destroys" "destroyed" "destroyed" "destroying");
lin destroyable_A = mkA "destroyable" ;
lin destroyer_N = mkN "destroyer" "destroyers";
lin destructibility_N = mkN "destructibility" ;
lin destructible_A = compoundA (mkA "destructible");
lin destruction_N = mkN "destruction" ;
lin destructive_A = compoundA (mkA "destructive");
lin destructiveness_N = mkN "destructiveness" ;
lin desuetude_N = mkN "desuetude" ;
lin desultory_A = compoundA (mkA "desultory");
lin detach_V2 = mkV2 (mkV "detach" "detaches" "detached" "detached" "detaching");
lin detachable_A = compoundA (mkA "detachable");
lin detachment_N = mkN "detachment" "detachments";
lin detail_N = mkN "detail" "details";
lin detail_V2 = mkV2 (mkV "detail" "details" "detailed" "detailed" "detailing");
lin detain_V2 = mkV2 (mkV "detain" "detains" "detained" "detained" "detaining");
lin detainee_N = mkN "detainee" "detainees";
lin detect_V2 = mkV2 (mkV "detect" "detects" "detected" "detected" "detecting");
lin detectable_A = compoundA (mkA "detectable");
lin detection_N = mkN "detection" ;
lin detective_N = mkN "detective" "detectives";
lin detector_N = mkN "detector" "detectors";
lin detente_N = mkN "détente" ;
lin detention_N = mkN "detention" "detentions";
lin deter_V2 = mkV2 (mkV "deter" "deters" "deterred" "deterred" "deterring");
lin detergency_N = mkN "detergency" ;
lin detergent_A = compoundA (mkA "detergent");
lin detergent_N = mkN "detergent" "detergents";
lin deteriorate_V = mkV "deteriorate" "deteriorates" "deteriorated" "deteriorated" "deteriorating";
lin deteriorate_V2 = mkV2 (mkV "deteriorate" "deteriorates" "deteriorated" "deteriorated" "deteriorating");
lin deterioration_N = mkN "deterioration" "deteriorations";
lin determent_N = mkN "determent" ;
lin determinable_A = compoundA (mkA "determinable");
lin determinant_A = compoundA (mkA "determinant");
lin determinant_N = mkN "determinant" "determinants";
lin determinate_A = compoundA (mkA "determinate");
lin determinateness_N = mkN "determinateness" ;
lin determination_N = mkN "determination" ;
lin determinative_A = compoundA (mkA "determinative");
lin determinative_N = mkN "determinative" "determinatives";
lin determine_V = mkV "determine" "determines" "determined" "determined" "determining";
lin determine_V2 = mkV2 (mkV "determine" "determines" "determined" "determined" "determining");
lin determine_V2V = mkV2V (mkV "determine" "determines" "determined" "determined" "determining") noPrep to_Prep ;
lin determine_VS = mkVS (mkV "determine" "determines" "determined" "determined" "determining");
lin determine_VV = mkVV (mkV "determine" "determines" "determined" "determined" "determining") ;
lin determinedly_Adv = mkAdv "determinedly";
lin determiner_N = mkN "determiner" "determiners";
lin determinism_N = mkN "determinism" ;
lin deterministic_A = mkA "deterministic" ;
lin deterrence_N = mkN "deterrence" ;
lin deterrent_A = compoundA (mkA "deterrent");
lin deterrent_N = mkN "deterrent" "deterrents";
lin detest_V2 = mkV2 (mkV "detest" "detests" "detested" "detested" "detesting");
lin detestable_A = compoundA (mkA "detestable");
lin detestation_N = mkN "detestation" "detestations";
lin dethrone_V2 = mkV2 (mkV "dethrone" "dethrones" "dethroned" "dethroned" "dethroning");
lin dethronement_N = mkN "dethronement" "dethronements";
lin detonate_V = mkV "detonate" "detonates" "detonated" "detonated" "detonating";
lin detonate_V2 = mkV2 (mkV "detonate" "detonates" "detonated" "detonated" "detonating");
lin detonation_N = mkN "detonation" "detonations";
lin detonative_A = mkA "detonative" ;
lin detonator_N = mkN "detonator" "detonators";
lin detour_N = mkN "detour" "detours";
lin detour_V2 = mkV2 (mkV "detour" "detours" "detoured" "detoured" "detouring");
lin detox_N = mkN "detox" ;
lin detoxification_N = mkN "detoxification" ;
lin detract_V = mkV "detract" "detracts" "detracted" "detracted" "detracting";
lin detraction_N = mkN "detraction" "detractions";
lin detractive_A = mkA "detractive" ;
lin detractor_N = mkN "detractor" "detractors";
lin detrain_V = mkV "detrain" "detrains" "detrained" "detrained" "detraining";
lin detrain_V2 = mkV2 (mkV "detrain" "detrains" "detrained" "detrained" "detraining");
lin detribalization_N = mkN "detribalization" ;
lin detribalize_V2 = mkV2 (mkV "detribalize" "detribalizes" "detribalized" "detribalized" "detribalizing");
lin detriment_N = mkN "detriment" ;
lin detrimental_A = compoundA (mkA "detrimental");
lin detritus_N = mkN "detritus" ;
lin detroit_PN = mkPN "Detroit";
lin detumescence_N = mkN "detumescence" ;
lin deuce_N = mkN "deuce" "deuces";
lin deuced_A = compoundA (mkA "deuced");
lin deuteranopia_N = mkN "deuteranopia" ;
lin deuteranopic_A = mkA "deuteranopic" ;
lin deuterium_N = mkN "deuterium" ;
lin deuteron_N = mkN "deuteron" ;
lin deutschmark_N = mkN "deutschmark" "deutschmarks";
lin deutzia_N = mkN "deutzia" ;
lin devaluate_V2 = mkV2 (mkV "devaluate" "devaluates" "devaluated" "devaluated" "devaluating");
lin devaluation_N = mkN "devaluation" "devaluations";
lin devalue_V2 = mkV2 (mkV "devalue" "devalues" "devalued" "devalued" "devaluing");
lin devastate_V2 = mkV2 (mkV "devastate" "devastates" "devastated" "devastated" "devastating");
lin devastation_N = mkN "devastation" ;
lin develop_V = mkV "develop" "develops" "developed" "developed" "developing";
lin develop_V2 = mkV2 (mkV "develop" "develops" "developed" "developed" "developing");
lin developer_N = mkN human (mkN "developer" "developers");
lin development_N = mkN "development" "developments";
lin developmental_A = mkA "developmental" ;
lin deviant_A = compoundA (mkA "deviant");
lin deviant_N = mkN "deviant" "deviants";
lin deviate_V = mkV "deviate" "deviates" "deviated" "deviated" "deviating";
lin deviation_N = mkN "deviation" "deviations";
lin deviationism_N = mkN "deviationism" ;
lin deviationist_N = mkN "deviationist" "deviationists";
lin device_N = mkN "device" "devices";
lin devil_N = mkN "devil" "devils";
lin devil_V = mkV "devil" "devils" "devilled" "devilled" "devilling";
lin devil_V2 = mkV2 (mkV "devil" "devils" "devilled" "devilled" "devilling");
lin devil_may_care_A = compoundA (mkA "devil-may-care");
lin devilish_A = compoundA (mkA "devilish");
lin devilish_Adv = mkAdv "devilish";
lin devilment_N = mkN "devilment" "devilments";
lin devilry_N = mkN "devilry" "devilries";
lin deviltry_N = mkN "deviltry" ;
lin devilwood_N = mkN "devilwood" ;
lin devious_A = compoundA (mkA "devious");
lin deviousness_N = mkN "deviousness" ;
lin devisal_N = mkN "devisal" ;
lin devise_N = mkN "devise" ;
lin devise_V2 = mkV2 (mkV "devise" "devises" "devised" "devised" "devising");
lin devisee_N = mkN "devisee" ;
lin devising_N = mkN "devising" ;
lin devisor_N = mkN "devisor" ;
lin devitalization_N = mkN "devitalization" ;
lin devitalize_V2 = mkV2 (mkV "devitalize" "devitalizes" "devitalized" "devitalized" "devitalizing");
lin devizes_PN = mkPN "Devizes";
lin devoid_A = compoundA (mkA "devoid");
lin devoir_N = mkN "devoir" ;
lin devolution_N = mkN "devolution" ;
lin devolve_V = mkV "devolve" "devolves" "devolved" "devolved" "devolving";
lin devolve_V2 = mkV2 (mkV "devolve" "devolves" "devolved" "devolved" "devolving");
lin devon_PN = mkPN "Devon";
lin devote_V2 = mkV2 (mkV "devote" "devotes" "devoted" "devoted" "devoting");
lin devotedly_Adv = mkAdv "devotedly" ;
lin devotee_N = mkN "devotee" "devotees";
lin devotion_N = mkN "devotion" "devotions";
lin devotional_A = compoundA (mkA "devotional");
lin devotional_N = mkN "devotional" ;
lin devour_V2 = mkV2 (mkV "devour" "devours" "devoured" "devoured" "devouring");
lin devourer_N = mkN "devourer" ;
lin devout_A = compoundA (mkA "devout");
lin devoutness_N = mkN "devoutness" ;
lin devries_N = mkN "deVries" ;
lin dew_N = mkN "dew" ;
lin dewberry_N = mkN "dewberry" ;
lin dewdrop_N = mkN "dewdrop" ;
lin dewlap_N = mkN "dewlap" "dewlaps";
lin dewsbury_PN = mkPN "Dewsbury";
lin dewy_A = mkA "dewy" "dewier";
lin dexamethasone_N = mkN "dexamethasone" ;
lin dexter_A = mkA "dexter" ;
lin dexterity_N = mkN "dexterity" ;
lin dexterous_A = compoundA (mkA "dexterous");
lin dextral_A = mkA "dextral" ;
lin dextrin_N = mkN "dextrin" ;
lin dextrocardia_N = mkN "dextrocardia" ;
lin dextrorotary_A = mkA "dextrorotary" ;
lin dextrorotation_N = mkN "dextrorotation" ;
lin dextrorse_A = mkA "dextrorse" ;
lin dextrose_N = mkN "dextrose" ;
lin dextrous_A = compoundA (mkA "dextrous");
lin dg_PN = mkPN "Dg";
lin dhak_N = mkN "dhak" ;
lin dhawa_N = mkN "dhawa" ;
lin dhole_N = mkN "dhole" ;
lin dhoti_N = mkN "dhoti" "dhotis";
lin dhow_N = mkN "dhow" "dhows";
lin di_PN = mkPN "Di";
lin diabatic_A = mkA "diabatic" ;
lin diabetes_N = mkN "diabetes" ;
lin diabetic_A = compoundA (mkA "diabetic");
lin diabetic_N = mkN human (mkN "diabetic" "diabetics");
lin diabolatry_N = mkN "diabolatry" ;
lin diabolic_A = compoundA (mkA "diabolic");
lin diabolical_A = compoundA (mkA "diabolical");
lin diabolism_N = mkN "diabolism" ;
lin diachronic_A = mkA "diachronic" ;
lin diacritic_A = compoundA (mkA "diacritic");
lin diacritic_N = mkN "diacritic" "diacritics";
lin diacritical_A = compoundA (mkA "diacritical");
lin diadem_N = mkN "diadem" "diadems";
lin diadromous_A = mkA "diadromous" ;
lin diaeresis_N = mkN "diaeresis" "diaereses";
lin diagnosable_A = mkA "diagnosable" ;
lin diagnose_V2 = mkV2 (mkV "diagnose" "diagnoses" "diagnosed" "diagnosed" "diagnosing");
lin diagnosis_N = mkN "diagnosis" "diagnoses";
lin diagnostic_A = compoundA (mkA "diagnostic");
lin diagnostician_N = mkN human (mkN "diagnostician");
lin diagonal_A = compoundA (mkA "diagonal");
lin diagonal_N = mkN "diagonal" "diagonals";
lin diagonalizable_A = mkA "diagonalizable" ;
lin diagonalization_N = mkN "diagonalization" ;
lin diagram_N = mkN "diagram" "diagrams";
lin diagrammatic_A = compoundA (mkA "diagrammatic");
lin diagrammatical_A = compoundA (mkA "diagrammatical");
lin diakinesis_N = mkN "diakinesis" ;
lin dial_N = mkN "dial" "dials";
lin dial_V2 = mkV2 (variants {mkV "dial" "dials" "dialed"  "dialed"  "dialing";
                              mkV "dial" "dials" "dialled" "dialled" "dialling"});
lin dialect_N = mkN "dialect" "dialects";
lin dialectal_A = compoundA (mkA "dialectal");
lin dialectic_A = mkA "dialectic" ;
lin dialectic_N = mkN "dialectic" "dialectics";
lin dialectical_A = compoundA (mkA "dialectical");
lin dialectician_N = mkN "dialectician" "dialecticians";
lin dialectics_N = mkN "dialectics" ;
lin dialectology_N = mkN "dialectology" ;
lin dialogue_N = mkN "dialogue" "dialogues";
lin dialysis_N = mkN "dialysis" ;
lin dialyzer_N = mkN "dialyzer" ;
lin diamagnet_N = mkN "diamagnet" ;
lin diamagnetic_A = mkA "diamagnetic" ;
lin diamagnetism_N = mkN "diamagnetism" ;
lin diamante_N = mkN "diamante" ;
lin diamantine_A = mkA "diamantine" ;
lin diameter_N = mkN "diameter" "diameters";
lin diametral_A = mkA "diametral" ;
lin diametric_A = mkA "diametric" ;
lin diametrically_Adv = mkAdv "diametrically";
lin diamine_N = mkN "diamine" ;
lin diamond_N = mkN "diamond" "diamonds";
lin diamondback_N = mkN "diamondback" ;
lin diana_PN = mkPN "Diana";
lin dianoetic_A = mkA "dianoetic" ;
lin diapason_N = mkN "diapason" ;
lin diapedesis_N = mkN "diapedesis" ;
lin diapensia_N = mkN "diapensia" ;
lin diaper_N = mkN "diaper" "diapers";
lin diaphanous_A = compoundA (mkA "diaphanous");
lin diapheromera_N = mkN "diapheromera" ;
lin diaphone_N = mkN "diaphone" ;
lin diaphoretic_A = mkA "diaphoretic" ;
lin diaphoretic_N = mkN "diaphoretic" ;
lin diaphragm_N = mkN "diaphragm" "diaphragms";
lin diaphyseal_A = mkA "diaphyseal" ;
lin diaphysis_N = mkN "diaphysis" ;
lin diapir_N = mkN "diapir" ;
lin diapsid_N = mkN "diapsid" ;
lin diarchy_N = mkN "diarchy" "diarchies";
lin diarist_N = mkN "diarist" "diarists";
lin diarrhea_N = mkN "diarrhea" ;
lin diarrheal_A = mkA "diarrheal" ;
lin diarrhoea_N = mkN "diarrhoea" ;
lin diary_N = mkN "diary" "diaries";
lin diaspora_N = mkN "diaspora" "diasporas";
lin diastasis_N = mkN "diastasis" ;
lin diastema_N = mkN "diastema" ;
lin diastole_N = mkN "diastole" ;
lin diastolic_A = mkA "diastolic" ;
lin diastrophism_N = mkN "diastrophism" ;
lin diathermy_N = mkN "diathermy" ;
lin diathesis_N = mkN "diathesis" ;
lin diatom_N = mkN "diatom" ;
lin diatomic_A = mkA "diatomic" ;
lin diatonic_A = compoundA (mkA "diatonic");
lin diatribe_N = mkN "diatribe" "diatribes";
lin diazepam_N = mkN "diazepam" ;
lin diazo_A = mkA "diazo" ;
lin diazonium_N = mkN "diazonium" ;
lin diazoxide_N = mkN "diazoxide" ;
lin dibber_N = mkN "dibber" "dibbers";
lin dibble_N = mkN "dibble" "dibbles";
lin dibble_V2 = mkV2 (mkV "dibble" "dibbles" "dibbled" "dibbled" "dibbling");
lin dibranchiate_N = mkN "dibranchiate" ;
lin dibs_N = mkN "dibs" ;
lin dibucaine_N = mkN "dibucaine" ;
lin dicamptodon_N = mkN "dicamptodon" ;
lin dicarboxylic_A = mkA "dicarboxylic" ;
lin dice_N = mkN "dice" "dice";
lin dice_V = mkV "dice" "dices" "diced" "diced" "dicing";
lin dice_V2 = mkV2 (mkV "dice" "dices" "diced" "diced" "dicing");
lin dice_box_N = mkN "dice-box" "dice-boxes";
lin dicer_N = mkN "dicer" ;
lin dicey_A = compoundA (mkA "dicey");
lin dichloride_N = mkN "dichloride" ;
lin dichlorodiphenyltrichloroethane_N = mkN "dichlorodiphenyltrichloroethane" ;
lin dichondra_N = mkN "dichondra" ;
lin dichotomization_N = mkN "dichotomization" ;
lin dichotomous_A = mkA "dichotomous" ;
lin dichotomy_N = mkN "dichotomy" "dichotomies";
lin dichroism_N = mkN "dichroism" ;
lin dichromacy_N = mkN "dichromacy" ;
lin dichromat_N = mkN "dichromat" ;
lin dichromatic_A = mkA "dichromatic" ;
lin dick_N = mkN "dick" ;
lin dick_PN = mkPN "Dick";
lin dickens_N = mkN "dickens" "IRREG";
lin dicker_V = mkV "dicker" "dickers" "dickered" "dickered" "dickering";
lin dickey_N = mkN "dickey" "dickeys";
lin dickeybird_N = mkN "dickeybird" ;
lin dicky_A = compoundA (mkA "dicky");
lin dicky_N = mkN "dicky" "dickies";
lin dicky_PN = mkPN "Dicky";
lin dicky_seat_N = mkN "dicky-seat" "dicky-seats";
lin dickybird_N = mkN "dickybird" "dickybirds";
lin diclinous_A = mkA "diclinous" ;
lin dicloxacillin_N = mkN "dicloxacillin" ;
lin dicot_N = mkN "dicot" ;
lin dicotyledonous_A = mkA "dicotyledonous" ;
lin dictaphone_N = mkN "dictaphone" "dictaphones";
lin dictate_N = mkN "dictate" "dictates";
lin dictate_V = mkV "dictate" "dictates" "dictated" "dictated" "dictating";
lin dictate_V2 = mkV2 (mkV "dictate" "dictates" "dictated" "dictated" "dictating");
lin dictate_VS = mkVS (mkV "dictate" "dictates" "dictated" "dictated" "dictating");
lin dictation_N = mkN "dictation" "dictations";
lin dictator_N = mkN "dictator" "dictators";
lin dictatorial_A = compoundA (mkA "dictatorial");
lin dictatorship_N = mkN "dictatorship" "dictatorships";
lin diction_N = mkN "diction" ;
lin dictionary_N = mkN "dictionary" "dictionaries";
lin dictostylium_N = mkN "dictostylium" ;
lin dictum_N = mkN "dictum" "dictums";
lin dictyopteran_A = mkA "dictyopteran" ;
lin dicumarol_N = mkN "dicumarol" ;
lin dicynodont_N = mkN "dicynodont" ;
lin didactic_A = compoundA (mkA "didactic");
lin didactically_Adv = mkAdv "didactically";
lin didacticism_N = mkN "didacticism" ;
lin didcot_PN = mkPN "Didcot";
lin diddle_V2 = mkV2 (mkV "diddle" "diddles" "diddled" "diddled" "diddling");
lin dideoxycytosine_N = mkN "dideoxycytosine" ;
lin dideoxyinosine_N = mkN "dideoxyinosine" ;
lin die_N = mkN "die" "dies";
lin die_V = mkV "die" "dies" "died" "died" "dying";
lin die_V2 = mkV2 (mkV "die" "dies" "died" "died" "dying");
lin die_cast_A = compoundA (mkA "die-cast");
lin die_hard_N = mkN "die-hard" "die-hards";
lin dieback_N = mkN "dieback" ;
lin diemaker_N = mkN "diemaker" ;
lin diencephalon_N = mkN "diencephalon" ;
lin dieresis_N = mkN "dieresis" "diereses";
lin diesel_N = mkN "diesel" "diesels";
lin diestock_N = mkN "diestock" ;
lin diestrous_A = mkA "diestrous" ;
lin diestrus_N = mkN "diestrus" ;
lin diet_N = mkN "diet" "diets";
lin diet_V = mkV "diet" "diets" "dieted" "dieted" "dieting";
lin diet_V2 = mkV2 (mkV "diet" "diets" "dieted" "dieted" "dieting");
lin dietary_A = compoundA (mkA "dietary");
lin dietary_N = mkN "dietary" ;
lin dieter_N = mkN "dieter" ;
lin dietetics_N = mkN "dietetics" "dietetics";
lin diethylstilbesterol_N = mkN "diethylstilbesterol" ;
lin diethylstilbestrol_N = mkN "diethylstilbestrol" ;
lin dietician_N = mkN "dietician" "dieticians";
lin dietitian_N = mkN "dietitian" "dietitians";
lin differ_V = mkV "differ" "differs" "differed" "differed" "differing";
lin difference_N = mkN "difference" "differences";
lin different_A = compoundA (mkA "different");
lin differentia_N = mkN "differentia" ;
lin differentiable_A = mkA "differentiable" ;
lin differential_A = compoundA (mkA "differential");
lin differential_N = mkN "differential" "differentials";
lin differentiate_V = mkV "differentiate";
lin differentiate_V2 = mkV2 (mkV "differentiate" "differentiates" "differentiated" "differentiated" "differentiating");
lin differentiation_N = mkN "differentiation" "differentiations";
lin differentiator_N = mkN "differentiator" ;
lin difficult_A = compoundA (mkA "difficult");
lin difficulty_N = mkN "difficulty" "difficulties";
lin diffidence_N = mkN "diffidence" ;
lin diffident_A = compoundA (mkA "diffident");
lin difflugia_N = mkN "difflugia" ;
lin diffract_V2 = mkV2 (mkV "diffract" "diffracts" "diffracted" "diffracted" "diffracting");
lin diffraction_N = mkN "diffraction" "diffractions";
lin diffuse_A = compoundA (mkA "diffuse");
lin diffuse_V = mkV "diffuse" "diffuses" "diffused" "diffused" "diffusing";
lin diffuse_V2 = mkV2 (mkV "diffuse" "diffuses" "diffused" "diffused" "diffusing");
lin diffuseness_N = mkN "diffuseness" ;
lin diffuser_N = mkN "diffuser" ;
lin diffusion_N = mkN "diffusion" ;
lin diflunisal_N = mkN "diflunisal" ;
lin dig_N = mkN "dig" "digs";
lin dig_V = IrregEng.dig_V;
lin dig_V2 = mkV2 (IrregEng.dig_V);
lin digest_N = mkN "digest" "digests";
lin digest_V = mkV "digest" "digests" "digested" "digested" "digesting";
lin digest_V2 = mkV2 (mkV "digest" "digests" "digested" "digested" "digesting");
lin digester_N = mkN "digester" ;
lin digestibility_N = mkN "digestibility" ;
lin digestible_A = compoundA (mkA "digestible");
lin digestion_N = mkN "digestion" "digestions";
lin digestive_A = compoundA (mkA "digestive");
lin digestive_N = mkN "digestive" ;
lin digger_N = mkN "digger" "diggers";
lin digging_N = mkN "digging" "diggings";
lin diggings_N = mkN "diggings" ;
lin dighted_A = mkA "dighted" ;
lin digit_N = mkN "digit" "digits";
lin digital_A = compoundA (mkA "digital");
lin digitalis_N = mkN "digitalis" ;
lin digitalization_N = mkN (variants {"digitalization"; "digitalisation"});
lin digitate_A = mkA "digitate" ;
lin digitigrade_A = mkA "digitigrade" ;
lin digitization_N = mkN "digitization" ;
lin digitizer_N = mkN "digitizer" ;
lin digitoxin_N = mkN "digitoxin" ;
lin diglyceride_N = mkN "diglyceride";
lin dignify_V2 = mkV2 (mkV "dignify" "dignifies" "dignified" "dignified" "dignifying");
lin dignifying_A = mkA "dignifying" ;
lin dignitary_N = mkN "dignitary" "dignitaries";
lin dignity_N = mkN "dignity" "dignities";
lin digoxin_N = mkN "digoxin" ;
lin digraph_N = mkN "digraph" "digraphs";
lin digress_V = mkV "digress" "digresses" "digressed" "digressed" "digressing";
lin digression_N = mkN "digression" "digressions";
lin digressive_A = mkA "digressive" ;
lin dihybrid_N = mkN "dihybrid" ;
lin dihydrostreptomycin_N = mkN "dihydrostreptomycin" ;
lin dijon_PN = mkPN "Dijon";
lin dike_N = mkN "dike" "dikes";
lin dike_V = mkV "dike" "dikes" "diked" "diked" "diking";
lin dike_V2 = mkV2 (mkV "dike" "dikes" "diked" "diked" "diking");
lin dilapidated_A = compoundA (mkA "dilapidated");
lin dilapidation_N = mkN "dilapidation" ;
lin dilatation_N = mkN "dilatation" ;
lin dilate_V = mkV "dilate" "dilates" "dilated" "dilated" "dilating";
lin dilate_V2 = mkV2 (mkV "dilate" "dilates" "dilated" "dilated" "dilating");
lin dilation_N = mkN "dilation" ;
lin dilator_N = mkN "dilator" ;
lin dilatoriness_N = mkN "dilatoriness" ;
lin dilatory_A = compoundA (mkA "dilatory");
lin dildo_N = mkN "dildo" ;
lin dilemma_N = mkN "dilemma" "dilemmas";
lin dilettante_A = mkA "dilettante" ;
lin dilettante_N = mkN "dilettante" "dilettantes";
lin diligence_N = mkN "diligence" ;
lin diligent_A = compoundA (mkA "diligent");
lin dill_N = mkN "dill" ;
lin dillenia_N = mkN "dillenia" ;
lin dilly_dally_V = mkV "dilly-dally" "dilly-dallies" "dilly-dallied" "dilly-dallied" "dilly-dallying";
lin diltiazem_N = mkN "diltiazem" ;
lin dilutant_N = mkN "dilutant" ;
lin dilute_A = compoundA (mkA "dilute");
lin dilute_V = mkV "dilute";
lin dilute_V2 = mkV2 (mkV "dilute" "dilutes" "diluted" "diluted" "diluting");
lin dilution_N = mkN "dilution" "dilutions";
lin diluvian_A = mkA "diluvian" ;
lin dim_A = mkA "dim" "dimmer";
lin dim_V = mkV "dim" "dims" "dimmed" "dimmed" "dimming";
lin dim_V2 = mkV2 (mkV "dim" "dims" "dimmed" "dimmed" "dimming");
lin dime_N = mkN "dime" "dimes";
lin dimenhydrinate_N = mkN "dimenhydrinate" ;
lin dimension_N = mkN "dimension" "dimensions";
lin dimensional_A = compoundA (mkA "dimensional");
lin dimensionality_N = mkN "dimensionality" ;
lin dimensioning_A = mkA "dimensioning" ;
lin dimer_N = mkN "dimer" ;
lin dimethylglyoxime_N = mkN "dimethylglyoxime" ;
lin dimetrodon_N = mkN "dimetrodon" ;
lin diminish_V = mkV "diminish" "diminishes" "diminished" "diminished" "diminishing";
lin diminish_V2 = mkV2 (mkV "diminish" "diminishes" "diminished" "diminished" "diminishing");
lin diminuendo_N = mkN "diminuendo" "diminuendos";
lin diminution_N = mkN "diminution" "diminutions";
lin diminutive_A = compoundA (mkA "diminutive");
lin diminutive_N = mkN "diminutive" "diminutives";
lin diminutiveness_N = mkN "diminutiveness" ;
lin dimity_N = mkN "dimity" ;
lin dimmer_N = mkN "dimmer" ;
lin dimness_N = mkN "dimness" ;
lin dimorphic_A = mkA "dimorphic" ;
lin dimorphism_N = mkN "dimorphism" ;
lin dimple_N = mkN "dimple" "dimples";
lin dimple_V = mkV "dimple" "dimples" "dimpled" "dimpled" "dimpling";
lin dimple_V2 = mkV2 (mkV "dimple" "dimples" "dimpled" "dimpled" "dimpling");
lin dimwit_N = mkN "dimwit" ;
lin din_N = mkN "din" ;
lin din_V = mkV "din" "dins" "dinned" "dinned" "dinning";
lin din_V2 = mkV2 (mkV "din" "dins" "dinned" "dinned" "dinning");
lin dinar_N = mkN "dinar" "dinars";
lin dine_V = mkV "dine" "dines" "dined" "dined" "dining";
lin dine_V2 = mkV2 (mkV "dine" "dines" "dined" "dined" "dining");
lin diner_N = mkN "diner" "diners";
lin dinette_N = mkN "dinette" ;
lin ding_N = mkN "ding" ;
lin ding_dong_Adv = mkAdv "ding-dong";
lin ding_dong_N = mkN "ding-dong" "ding-dongs";
lin dingbat_N = mkN "dingbat" ;
lin dingdong_Adv = mkAdv "dingdong" ;
lin dinghy_N = mkN "dinghy" "dinghies";
lin dinginess_N = mkN "dinginess" ;
lin dingle_N = mkN "dingle" "dingles";
lin dingle_PN = mkPN "Dingle";
lin dingo_N = mkN "dingo" ;
lin dingy_A = mkA "dingy" "dingier";
lin dining_N = mkN "dining" ;
lin dining_car_N = mkN "dining-car" "dining-cars";
lin dining_room_N = mkN "dining-room" "dining-rooms";
lin dining_table_N = mkN "dining-table" "dining-tables";
lin dinky_A = mkA "dinky" "dinkier";
lin dinky_N = mkN "dinky" ;
lin dinner_N = mkN "dinner" "dinners";
lin dinner_jacket_N = mkN "dinner-jacket" "dinner-jackets";
lin dinner_party_N = mkN "dinner-party" "dinner-parties";
lin dinner_service_N = mkN "dinner-service" "dinner-services";
lin dinner_set_N = mkN "dinner-set" "dinner-sets";
lin dinnertime_N = mkN "dinnertime" ;
lin dinnerware_N = mkN "dinnerware" ;
lin dinnington_PN = mkPN "Dinnington";
lin dinoceras_N = mkN "dinoceras" ;
lin dinocerate_N = mkN "dinocerate" ;
lin dinoflagellate_N = mkN "dinoflagellate" ;
lin dinosaur_N = mkN "dinosaur" "dinosaurs";
lin dint_N = mkN "dint" "dints";
lin diocesan_A = compoundA (mkA "diocesan");
lin diocesan_N = mkN "diocesan" "diocesans";
lin diocese_N = mkN "diocese" "dioceses";
lin diode_N = mkN "diode" ;
lin dioecious_A = mkA "dioecious" ;
lin diol_N = mkN "diol" ;
lin dioon_N = mkN "dioon" ;
lin diopter_N = mkN "diopter" ;
lin diorite_N = mkN "diorite" ;
lin dioxide_N = mkN "dioxide" "dioxides";
lin dioxin_N = mkN "dioxin" ;
lin dip_N = mkN "dip" ;
lin dip_V = mkV "dip" "dips" "dipped" "dipped" "dipping";
lin dip_V2 = mkV2 (mkV "dip" "dips" "dipped" "dipped" "dipping");
lin dip_ed_N = mkN "dip ed" ;
lin diphenhydramine_N = mkN "diphenhydramine" ;
lin diphenylhydantoin_N = mkN "diphenylhydantoin" ;
lin diphtheria_N = mkN "diphtheria" ;
lin diphthong_N = mkN "diphthong" "diphthongs";
lin diplegia_N = mkN "diplegia" ;
lin diplococcus_N = mkN "diplococcus" ;
lin diplodocus_N = mkN "diplodocus" ;
lin diploid_A = mkA "diploid" ;
lin diploid_N = mkN "diploid" ;
lin diploidy_N = mkN "diploidy" ;
lin diploma_N = mkN "diploma" "diplomas";
lin diplomacy_N = mkN "diplomacy" ;
lin diplomat_N = mkN "diplomat" "diplomats";
lin diplomate_N = mkN "diplomate" ;
lin diplomatic_A = irregAdv (compoundA (mkA "diplomatic")) "diplomatically";
lin diplomatist_N = mkN "diplomatist" "diplomatists";
lin diplopia_N = mkN "diplopia" ;
lin diplotene_N = mkN "diplotene" ;
lin dipolar_A = mkA "dipolar" ;
lin dipole_N = mkN "dipole" ;
lin dipper_N = mkN "dipper" "dippers";
lin dipsomania_N = mkN "dipsomania" ;
lin dipsomaniac_N = mkN "dipsomaniac" "dipsomaniacs";
lin dipstick_N = mkN "dipstick" "dipsticks";
lin dipterocarp_N = mkN "dipterocarp" ;
lin dipterous_A = mkA "dipterous" ;
lin diptych_N = mkN "diptych" "diptychs";
lin dir_N = mkN "dir" ;
lin dire_A = mkA "dire" "direr";
lin direct_A = compoundA (mkA "direct");
lin direct_Adv = mkAdv "direct";
lin direct_V = mkV "direct" "directs" "directed" "directed" "directing";
lin direct_V2 = mkV2 (mkV "direct" "directs" "directed" "directed" "directing");
lin direct_VS = mkVS (mkV "direct" "directs" "directed" "directed" "directing");
lin direction_N = mkN "direction" "directions";
lin direction_finder_N = mkN "direction-finder" "direction-finders";
lin directional_A = compoundA (mkA "directional");
lin directionality_N = mkN "directionality" ;
lin directive_N = mkN "directive" "directives";
lin directivity_N = mkN "directivity" ;
lin directness_N = mkN "directness" ;
lin director_N = mkN "director" "directors";
lin directorate_N = mkN "directorate" "directorates";
lin directorship_N = mkN "directorship" "directorships";
lin directory_N = mkN "directory" "directories";
lin direful_A = compoundA (mkA "direful");
lin dirge_N = mkN "dirge" "dirges";
lin dirigible_N = mkN "dirigible" "dirigibles";
lin dirk_N = mkN "dirk" "dirks";
lin dirndl_N = mkN "dirndl" "dirndls";
lin dirt_A = mkA "dirt" ;
lin dirt_N = mkN "dirt" ;
lin dirt_cheap_A = compoundA (mkA "dirt-cheap");
lin dirt_track_N = mkN "dirt-track" "dirt-tracks";
lin dirtiness_N = mkN "dirtiness" ;
lin dirty_A = mkA "dirty" "dirtier";
lin dirty_V = mkV "dirty" "dirties" "dirtied" "dirtied" "dirtying";
lin dirty_V2 = mkV2 (mkV "dirty" "dirties" "dirtied" "dirtied" "dirtying");
lin disa_N = mkN "disa" ;
lin disability_N = mkN "disability" "disabilities";
lin disable_V2 = mkV2 (mkV "disable" "disables" "disabled" "disabled" "disabling");
lin disabled_N = mkN "disabled" ;
lin disablement_N = mkN "disablement" "disablements";
lin disabling_A = mkA "disabling" ;
lin disabuse_V2 = mkV2 (mkV "disabuse" "disabuses" "disabused" "disabused" "disabusing");
lin disaccharidase_N = mkN "disaccharidase" ;
lin disaccharide_N = mkN "disaccharide" ;
lin disadvantage_N = mkN "disadvantage" "disadvantages";
lin disadvantageous_A = compoundA (mkA "disadvantageous");
lin disaffected_A = compoundA (mkA "disaffected");
lin disaffection_N = mkN "disaffection" ;
lin disafforest_V2 = mkV2 (mkV "disafforest" "disafforests" "disafforested" "disafforested" "disafforesting");
lin disagree_V = mkV "disagree";
lin disagree_V2 = mkV2 (mkV "disagree" "disagrees" "disagreed" "disagreed" "disagreeing");
lin disagree_VS = mkVS (mkV "disagree");
lin disagreeable_A = compoundA (mkA "disagreeable");
lin disagreeableness_N = mkN "disagreeableness" ;
lin disagreement_N = mkN "disagreement" "disagreements";
lin disallow_V2 = mkV2 (mkV "disallow" "disallows" "disallowed" "disallowed" "disallowing");
lin disambiguation_N = mkN "disambiguation" ;
lin disambiguator_N = mkN "disambiguator" ;
lin disappear_V = mkV "disappear" "disappears" "disappeared" "disappeared" "disappearing";
lin disappearance_N = mkN "disappearance" "disappearances";
lin disappoint_V2 = mkV2 (mkV "disappoint" "disappoints" "disappointed" "disappointed" "disappointing");
lin disappointedly_Adv = mkAdv "disappointedly" ;
lin disappointing_A = compoundA (mkA "disappointing");
lin disappointment_N = mkN "disappointment" "disappointments";
lin disapprobation_N = mkN "disapprobation" ;
lin disapproval_N = mkN "disapproval" ;
lin disapprove_V = mkV "disapprove" "disapproves" "disapproved" "disapproved" "disapproving";
lin disapprove_V2 = mkV2 (mkV "disapprove" "disapproves" "disapproved" "disapproved" "disapproving");
lin disapprovingly_Adv = mkAdv "disapprovingly";
lin disarm_V = mkV "disarm" "disarms" "disarmed" "disarmed" "disarming";
lin disarm_V2 = mkV2 (mkV "disarm" "disarms" "disarmed" "disarmed" "disarming");
lin disarmament_N = mkN "disarmament" ;
lin disarming_N = mkN "disarming" ;
lin disarrange_V2 = mkV2 (mkV "disarrange" "disarranges" "disarranged" "disarranged" "disarranging");
lin disarrangement_N = mkN "disarrangement" "disarrangements";
lin disarray_N = mkN "disarray" ;
lin disarray_V2 = mkV2 (mkV "disarray" "disarrays" "disarrayed" "disarrayed" "disarraying");
lin disassociate_V2 = mkV2 (mkV "disassociate" "disassociates" "disassociated" "disassociated" "disassociating");
lin disassociation_N = mkN "disassociation" ;
lin disaster_N = mkN "disaster" "disasters";
lin disastrous_A = compoundA (mkA "disastrous");
lin disavow_V2 = mkV2 (mkV "disavow" "disavows" "disavowed" "disavowed" "disavowing");
lin disavowable_A = mkA "disavowable" ;
lin disavowal_N = mkN "disavowal" "disavowals";
lin disband_V = mkV "disband" "disbands" "disbanded" "disbanded" "disbanding";
lin disband_V2 = mkV2 (mkV "disband" "disbands" "disbanded" "disbanded" "disbanding");
lin disbandment_N = mkN "disbandment" "disbandments";
lin disbarment_N = mkN "disbarment" ;
lin disbelief_N = mkN "disbelief" ;
lin disbelieve_V = mkV "disbelieve" "disbelieves" "disbelieved" "disbelieved" "disbelieving";
lin disbelieve_V2 = mkV2 (mkV "disbelieve" "disbelieves" "disbelieved" "disbelieved" "disbelieving");
lin disbeliever_N = mkN "disbeliever" ;
lin disbelievingly_Adv = mkAdv "disbelievingly";
lin disbud_V2 = mkV2 (mkV "disbud" "disbuds" "disbudded" "disbudded" "disbudding");
lin disburden_V2 = mkV2 (mkV "disburden" "disburdens" "disburdened" "disburdened" "disburdening");
lin disburse_V = mkV "disburse" "disburses" "disbursed" "disbursed" "disbursing";
lin disburse_V2 = mkV2 (mkV "disburse" "disburses" "disbursed" "disbursed" "disbursing");
lin disbursement_N = mkN "disbursement" "disbursements";
lin disc_N = mkN "disc" "discs";
lin discalced_A = mkA "discalced" ;
lin discard_N = mkN "discard" "discards";
lin discard_V2 = mkV2 (mkV "discard" "discards" "discarded" "discarded" "discarding");
lin discern_V2 = mkV2 (mkV "discern" "discerns" "discerned" "discerned" "discerning");
lin discernability_N = mkN "discernability" ;
lin discernible_A = compoundA (mkA "discernible");
lin discerning_A = compoundA (mkA "discerning");
lin discernment_N = mkN "discernment" ;
lin discharge_N = mkN "discharge" "discharges";
lin discharge_V = mkV "discharge" "discharges" "discharged" "discharged" "discharging";
lin discharge_V2 = mkV2 (mkV "discharge" "discharges" "discharged" "discharged" "discharging");
lin disciform_A = mkA "disciform" ;
lin discina_N = mkN "discina" ;
lin disciple_N = mkN "disciple" "disciples";
lin discipleship_N = mkN "discipleship" ;
lin disciplinarian_N = mkN "disciplinarian" "disciplinarians";
lin disciplinary_A = compoundA (mkA "disciplinary");
lin discipline_N = mkN "discipline" "disciplines";
lin discipline_V2 = mkV2 (mkV "discipline" "disciplines" "disciplined" "disciplined" "disciplining");
lin disclaim_V2 = mkV2 (mkV "disclaim" "disclaims" "disclaimed" "disclaimed" "disclaiming");
lin disclaimer_N = mkN "disclaimer" "disclaimers";
lin disclose_V = mkV "disclose";
lin disclose_V2 = mkV2 (mkV "disclose" "discloses" "disclosed" "disclosed" "disclosing");
lin disclose_VS = mkVS (mkV "disclose");
lin disclosure_N = mkN "disclosure" "disclosures";
lin disco_N = mkN "disco" "discos";
lin discography_N = mkN "discography" ;
lin discoid_A = mkA "discoid" ;
lin discoloration_N = mkN "discoloration" ;
lin discolour_V = mkV "discolour" "discolours" "discoloured" "discoloured" "discolouring";
lin discolour_V2 = mkV2 (mkV "discolour" "discolours" "discoloured" "discoloured" "discolouring");
lin discolouration_N = mkN "discolouration" "discolourations";
lin discombobulated_A = mkA "discombobulated" ;
lin discomfit_V2 = mkV2 (mkV "discomfit" "discomfits" "discomfited" "discomfited" "discomfiting");
lin discomfiture_N = mkN "discomfiture" ;
lin discomfort_N = mkN "discomfort" "discomforts";
lin discommode_V2 = mkV2 (mkV "discommode" "discommodes" "discommoded" "discommoded" "discommoding");
lin discompose_V2 = mkV2 (mkV "discompose" "discomposes" "discomposed" "discomposed" "discomposing");
lin discomposure_N = mkN "discomposure" ;
lin discomycete_N = mkN "discomycete" ;
lin discomycetous_A = mkA "discomycetous" ;
lin disconcert_V2 = mkV2 (mkV "disconcert" "disconcerts" "disconcerted" "disconcerted" "disconcerting");
lin disconcerting_A = mkA "disconcerting" ;
lin disconfirming_A = mkA "disconfirming" ;
lin disconnect_V2 = mkV2 (mkV "disconnect" "disconnects" "disconnected" "disconnected" "disconnecting");
lin disconnection_N = mkN "disconnection" ;
lin disconsolate_A = compoundA (mkA "disconsolate");
lin discontent_N = mkN "discontent" "discontents";
lin discontent_V2 = mkV2 (mkV "discontent" "discontents" "discontented" "discontented" "discontenting");
lin discontentedly_Adv = mkAdv "discontentedly";
lin discontentment_N = mkN "discontentment";
lin discontinuance_N = mkN "discontinuance" "discontinuances";
lin discontinue_V = mkV "discontinue" "discontinues" "discontinued" "discontinued" "discontinuing";
lin discontinue_V2 = mkV2 (mkV "discontinue" "discontinues" "discontinued" "discontinued" "discontinuing");
lin discontinuity_N = mkN "discontinuity" "discontinuities";
lin discontinuous_A = compoundA (mkA "discontinuous");
lin discord_N = mkN "discord" "discords";
lin discordance_N = mkN "discordance" ;
lin discordant_A = compoundA (mkA "discordant");
lin discorporate_A = mkA "discorporate" ;
lin discotheque_N = mkN "discotheque" "discotheques";
lin discount_N = mkN "discount" "discounts";
lin discount_V = mkV "discount";
lin discount_V2 = mkV2 (mkV "discount" "discounts" "discounted" "discounted" "discounting");
lin discountenance_V2 = mkV2 (mkV "discountenance" "discountenances" "discountenanced" "discountenanced" "discountenancing");
lin discourage_V2 = mkV2 (mkV "discourage" "discourages" "discouraged" "discouraged" "discouraging");
lin discouragement_N = mkN "discouragement" "discouragements";
lin discouraging_A = mkA "discouraging" ;
lin discourse_N = mkN "discourse" "discourses";
lin discourse_V = mkV "discourse" "discourses" "discoursed" "discoursed" "discoursing";
lin discourteous_A = compoundA (mkA "discourteous");
lin discourtesy_N = mkN "discourtesy" "discourtesies";
lin discover_V = mkV "discover" "discovers" "discovered" "discovered" "discovering";
lin discover_V2 = mkV2 (mkV "discover" "discovers" "discovered" "discovered" "discovering");
lin discover_V2V = mkV2V (mkV "discover" "discovers" "discovered" "discovered" "discovering") noPrep to_Prep ;
lin discover_VS = mkVS (mkV "discover" "discovers" "discovered" "discovered" "discovering");
lin discovererMasc_N = mkN masculine (mkN "discoverer" "discoverers");
lin discovererFem_N = mkN feminine (mkN "discoverer" "discoverers");
lin discovery_N = mkN "discovery" "discoveries";
lin discredit_N = mkN "discredit" ;
lin discredit_V2 = mkV2 (mkV "discredit" "discredits" "discredited" "discredited" "discrediting");
lin discreditable_A = compoundA (mkA "discreditable");
lin discreet_A = compoundA (mkA "discreet");
lin discrepancy_N = mkN "discrepancy" "discrepancies";
lin discrepant_A = mkA "discrepant" ;
lin discrete_A = compoundA (mkA "discrete");
lin discreteness_N = mkN "discreteness" ;
lin discretion_N = mkN "discretion" ;
lin discretionary_A = compoundA (mkA "discretionary");
lin discriminable_A = mkA "discriminable" ;
lin discriminate_A = mkA "discriminate" ;
lin discriminate_V = mkV "discriminate" "discriminates" "discriminated" "discriminated" "discriminating";
lin discriminate_V2 = mkV2 (mkV "discriminate" "discriminates" "discriminated" "discriminated" "discriminating");
lin discrimination_N = mkN "discrimination" ;
lin discriminative_A = mkA "discriminative" ;
lin discriminatory_A = compoundA (mkA "discriminatory");
lin discursive_A = compoundA (mkA "discursive");
lin discursiveness_N = mkN "discursiveness" ;
lin discus_N = mkN "discus" "discuses";
lin discuss_V2 = mkV2 (mkV "discuss" "discusses" "discussed" "discussed" "discussing");
lin discuss_VS = mkVS (mkV "discuss");
lin discussant_N = mkN "discussant" ;
lin discussion_N = mkN "discussion" "discussions";
lin disdain_N = mkN "disdain" ;
lin disdain_V2 = mkV2 (mkV "disdain" "disdains" "disdained" "disdained" "disdaining");
lin disdainful_A = compoundA (mkA "disdainful");
lin disease_N = mkN "disease" "diseases";
lin diseased_A = compoundA (mkA "diseased");
lin disembark_V = mkV "disembark" "disembarks" "disembarked" "disembarked" "disembarking";
lin disembark_V2 = mkV2 (mkV "disembark" "disembarks" "disembarked" "disembarked" "disembarking");
lin disembarkation_N = mkN "disembarkation" "disembarkations";
lin disembarrass_V2 = mkV2 (mkV "disembarrass" "disembarrasses" "disembarrassed" "disembarrassed" "disembarrassing");
lin disembarrassment_N = mkN "disembarrassment" "disembarrassments";
lin disembody_V2 = mkV2 (mkV "disembody" "disembodies" "disembodied" "disembodied" "disembodying");
lin disembowel_V2 = mkV2 (mkV "disembowel" "disembowels" "disembowelled" "disembowelled" "disembowelling");
lin disembowelment_N = mkN "disembowelment" ;
lin disenchant_V2 = mkV2 (mkV "disenchant" "disenchants" "disenchanted" "disenchanted" "disenchanting");
lin disenchanting_A = mkA "disenchanting" ;
lin disenchantment_N = mkN "disenchantment" "disenchantments";
lin disencumber_V2 = mkV2 (mkV "disencumber" "disencumbers" "disencumbered" "disencumbered" "disencumbering");
lin disenfranchise_V2 = mkV2 (mkV "disenfranchise" "disenfranchises" "disenfranchised" "disenfranchised" "disenfranchising");
lin disenfranchisement_N = mkN "disenfranchisement" ;
lin disengage_V = mkV "disengage" "disengages" "disengaged" "disengaged" "disengaging";
lin disengage_V2 = mkV2 (mkV "disengage" "disengages" "disengaged" "disengaged" "disengaging");
lin disengagement_N = mkN "disengagement" "disengagements";
lin disentangle_V = mkV "disentangle" "disentangles" "disentangled" "disentangled" "disentangling";
lin disentangle_V2 = mkV2 (mkV "disentangle" "disentangles" "disentangled" "disentangled" "disentangling");
lin disentanglement_N = mkN "disentanglement" "disentanglements";
lin disentangler_N = mkN "disentangler" ;
lin disequilibrium_N = mkN "disequilibrium" ;
lin disestablish_V2 = mkV2 (mkV "disestablish" "disestablishes" "disestablished" "disestablished" "disestablishing");
lin disestablishment_N = mkN "disestablishment" ;
lin disesteem_N = mkN "disesteem" ;
lin disfavor_N = mkN "disfavor" ;
lin disfavour_N = mkN "disfavour" ;
lin disfavour_V2 = mkV2 (mkV "disfavour" "disfavours" "disfavoured" "disfavoured" "disfavouring");
lin disfigure_V2 = mkV2 (mkV "disfigure" "disfigures" "disfigured" "disfigured" "disfiguring");
lin disfigurement_N = mkN "disfigurement" "disfigurements";
lin disfluency_N = mkN "disfluency" ;
lin disforest_V2 = mkV2 (mkV "disforest" "disforests" "disforested" "disforested" "disforesting");
lin disfranchise_V2 = mkV2 (mkV "disfranchise" "disfranchises" "disfranchised" "disfranchised" "disfranchising");
lin disfranchisement_N = mkN "disfranchisement" ;
lin disgorge_V2 = mkV2 (mkV "disgorge" "disgorges" "disgorged" "disgorged" "disgorging");
lin disgrace_N = mkN "disgrace" ;
lin disgrace_V2 = mkV2 (mkV "disgrace" "disgraces" "disgraced" "disgraced" "disgracing");
lin disgraceful_A = compoundA (mkA "disgraceful");
lin disgruntled_A = compoundA (mkA "disgruntled");
lin disgruntlement_N = mkN "disgruntlement" ;
lin disguise_N = mkN "disguise" "disguises";
lin disguise_V2 = mkV2 (mkV "disguise" "disguises" "disguised" "disguised" "disguising");
lin disgust_N = mkN "disgust" ;
lin disgust_V2 = mkV2 (mkV "disgust" "disgusts" "disgusted" "disgusted" "disgusting");
lin disgustedly_Adv = mkAdv "disgustedly";
lin disgusting_A = compoundA (mkA "disgusting");
lin disgustingness_N = mkN "disgustingness" ;
lin dish_N = mkN "dish" "dishes";
lin dish_V2 = mkV2 (mkV "dish" "dishes" "dished" "dished" "dishing");
lin dishabille_N = mkN "dishabille" ;
lin disharmonious_A = compoundA (mkA "disharmonious");
lin disharmony_N = mkN "disharmony" ;
lin dishcloth_N = mkN "dishcloth" "dishcloths";
lin dishearten_V2 = mkV2 (mkV "dishearten" "disheartens" "disheartened" "disheartened" "disheartening");
lin disheartenment_N = mkN "disheartenment" ;
lin disheveled_A = mkA "disheveled" ;
lin dishevelled_A = compoundA (mkA "dishevelled");
lin dishful_N = mkN "dishful" "dishfuls";
lin dishonest_A = compoundA (mkA "dishonest");
lin dishonesty_N = mkN "dishonesty" "dishonesties";
lin dishonorable_A = mkA "dishonorable" ;
lin dishonorableness_N = mkN "dishonorableness" ;
lin dishonour_N = mkN (variants {"dishonour"; "dishonor"});
lin dishonour_V2 = mkV2 (mkV "dishonour" "dishonours" "dishonoured" "dishonoured" "dishonouring");
lin dishonourable_A = compoundA (mkA "dishonourable");
lin dishpan_N = mkN "dishpan" ;
lin dishrag_N = mkN "dishrag" ;
lin dishtowel_N = mkN "dishtowel" ;
lin dishwasher_N = mkN "dishwasher" "dishwashers";
lin dishwashing_N = mkN "dishwashing" ;
lin dishwater_N = mkN "dishwater" ;
lin dishy_A = mkA "dishy" "dishier";
lin disillusion_N = mkN "disillusion" ;
lin disillusion_V2 = mkV2 (mkV "disillusion" "disillusions" "disillusioned" "disillusioned" "disillusioning");
lin disillusionment_N = mkN "disillusionment" "disillusionments";
lin disincentive_N = mkN "disincentive" "disincentives";
lin disinclination_N = mkN "disinclination" "disinclinations";
lin disincline_V2 = mkV2 (mkV "disincline" "disinclines" "disinclined" "disinclined" "disinclining");
lin disincline_V2V = mkV2V (mkV "disincline") noPrep to_Prep ;
lin disinfect_V2 = mkV2 (mkV "disinfect" "disinfects" "disinfected" "disinfected" "disinfecting");
lin disinfectant_A = compoundA (mkA "disinfectant");
lin disinfectant_N = mkN "disinfectant" "disinfectants";
lin disinfection_N = mkN "disinfection" ;
lin disinfest_V2 = mkV2 (mkV "disinfest" "disinfests" "disinfested" "disinfested" "disinfesting");
lin disinfestation_N = mkN "disinfestation" ;
lin disinflation_N = mkN "disinflation" ;
lin disinformation_N = mkN "disinformation" ;
lin disingenuous_A = compoundA (mkA "disingenuous");
lin disingenuousness_N = mkN "disingenuousness" ;
lin disinherit_V2 = mkV2 (mkV "disinherit" "disinherits" "disinherited" "disinherited" "disinheriting");
lin disinheritance_N = mkN "disinheritance" ;
lin disintegrate_V = mkV "disintegrate" "disintegrates" "disintegrated" "disintegrated" "disintegrating";
lin disintegrate_V2 = mkV2 (mkV "disintegrate" "disintegrates" "disintegrated" "disintegrated" "disintegrating");
lin disintegration_N = mkN "disintegration" "disintegrations";
lin disintegrative_A = mkA "disintegrative" ;
lin disinter_V2 = mkV2 (mkV "disinter" "disinters" "disinterred" "disinterred" "disinterring");
lin disinterest_N = mkN "disinterest" ;
lin disinterested_A = compoundA (mkA "disinterested");
lin disinterestedness_N = mkN "disinterestedness" ;
lin disinterment_N = mkN "disinterment" "disinterments";
lin disinvestment_N = mkN "disinvestment" ;
lin disjoined_A = mkA "disjoined" ;
lin disjoint_A = mkA "disjoint" ;
lin disjoint_V2 = mkV2 (mkV "disjoint" "disjoints" "disjointed" "disjointed" "disjointing");
lin disjointedly_Adv = mkAdv "disjointedly" ;
lin disjointedness_N = mkN "disjointedness" ;
lin disjunct_A = mkA "disjunct" ;
lin disjunction_N = mkN "disjunction" ;
lin disjunctive_A = compoundA (mkA "disjunctive");
lin disk_N = mkN "disk" "disks";
lin diskette_N = mkN "diskette" ;
lin dislikable_A = mkA "dislikable" ;
lin dislike_N = mkN "dislike" "dislikes";
lin dislike_V2 = mkV2 (mkV "dislike" "dislikes" "disliked" "disliked" "disliking");
lin dislocate_V2 = mkV2 (mkV "dislocate" "dislocates" "dislocated" "dislocated" "dislocating");
lin dislocation_N = mkN "dislocation" "dislocations";
lin dislodge_V2 = mkV2 (mkV "dislodge" "dislodges" "dislodged" "dislodged" "dislodging");
lin dislodgement_N = mkN "dislodgement" "dislodgements";
lin dislodgment_N = mkN "dislodgment" ;
lin disloyal_A = compoundA (mkA "disloyal");
lin disloyalty_N = mkN "disloyalty" "disloyalties";
lin dismal_A = compoundA (mkA "dismal");
lin dismantle_V2 = mkV2 (mkV "dismantle" "dismantles" "dismantled" "dismantled" "dismantling");
lin dismantlement_N = mkN "dismantlement" ;
lin dismantling_N = mkN "dismantling" ;
lin dismay_N = mkN "dismay" ;
lin dismay_V = mkV "dismay";
lin dismay_V2 = mkV2 (mkV "dismay" "dismays" "dismayed" "dismayed" "dismaying");
lin dismember_V2 = mkV2 (mkV "dismember" "dismembers" "dismembered" "dismembered" "dismembering");
lin dismemberment_N = mkN "dismemberment" "dismemberments";
lin dismiss_V2 = mkV2 (mkV "dismiss" "dismisses" "dismissed" "dismissed" "dismissing");
lin dismissal_N = mkN "dismissal" "dismissals";
lin dismissible_A = mkA "dismissible" ;
lin dismissive_A = mkA "dismissive" ;
lin dismount_N = mkN "dismount" ;
lin dismount_V = mkV "dismount" "dismounts" "dismounted" "dismounted" "dismounting";
lin dismount_V2 = mkV2 (mkV "dismount" "dismounts" "dismounted" "dismounted" "dismounting");
lin disobedience_N = mkN "disobedience" ;
lin disobedient_A = compoundA (mkA "disobedient");
lin disobey_V2 = mkV2 (mkV "disobey" "disobeys" "disobeyed" "disobeyed" "disobeying");
lin disoblige_V2 = mkV2 (mkV "disoblige" "disobliges" "disobliged" "disobliged" "disobliging");
lin disobliging_A = mkA "disobliging" ;
lin disorder_N = mkN "disorder" "disorders";
lin disorder_V2 = mkV2 (mkV "disorder" "disorders" "disordered" "disordered" "disordering");
lin disorderliness_N = mkN "disorderliness" ;
lin disorderly_A = compoundA (mkA "disorderly");
lin disorganization_N = mkN "disorganization" ;
lin disorganize_V2 = mkV2 (mkV "disorganize" "disorganizes" "disorganized" "disorganized" "disorganizing");
lin disorient_V2 = mkV2 (mkV "disorient" "disorients" "disoriented" "disoriented" "disorienting");
lin disorientate_V2 = mkV2 (mkV "disorientate" "disorientates" "disorientated" "disorientated" "disorientating");
lin disorientation_N = mkN "disorientation" ;
lin disorienting_A = mkA "disorienting" ;
lin disown_V2 = mkV2 (mkV "disown" "disowns" "disowned" "disowned" "disowning");
lin disownment_N = mkN "disownment" ;
lin disparage_V2 = mkV2 (mkV "disparage" "disparages" "disparaged" "disparaged" "disparaging");
lin disparagement_N = mkN "disparagement" "disparagements";
lin disparagingly_Adv = mkAdv "disparagingly";
lin disparate_A = compoundA (mkA "disparate");
lin disparateness_N = mkN "disparateness" ;
lin disparity_N = mkN "disparity" "disparities";
lin dispassion_N = mkN "dispassion" ;
lin dispassionate_A = compoundA (mkA "dispassionate");
lin dispassionateness_N = mkN "dispassionateness" ;
lin dispatch_N = mkN "dispatch" "dispatches";
lin dispatch_V2 = mkV2 (mkV "dispatch" "dispatches" "dispatched" "dispatched" "dispatching");
lin dispatch_V2V = mkV2V (mkV "dispatch") noPrep to_Prep ;
lin dispatch_box_N = mkN "dispatch-box" "dispatch-boxes";
lin dispatch_rider_N = mkN "dispatch-rider" "dispatch-riders";
lin dispatcher_N = mkN "dispatcher" ;
lin dispel_V2 = mkV2 (mkV "dispel" "dispels" "dispelled" "dispelled" "dispelling");
lin dispensability_N = mkN "dispensability" ;
lin dispensable_A = compoundA (mkA "dispensable");
lin dispensary_N = mkN "dispensary" "dispensaries";
lin dispensation_N = mkN "dispensation" "dispensations";
lin dispense_V = mkV "dispense" "dispenses" "dispensed" "dispensed" "dispensing";
lin dispense_V2 = mkV2 (mkV "dispense" "dispenses" "dispensed" "dispensed" "dispensing");
lin dispenser_N = mkN "dispenser" "dispensers";
lin dispersal_N = mkN "dispersal" "dispersals";
lin disperse_V = mkV "disperse" "disperses" "dispersed" "dispersed" "dispersing";
lin disperse_V2 = mkV2 (mkV "disperse" "disperses" "dispersed" "dispersed" "dispersing");
lin dispersion_N = mkN "dispersion" "dispersions";
lin dispirit_V2 = mkV2 (mkV "dispirit" "dispirits" "dispirited" "dispirited" "dispiriting");
lin dispiritedly_Adv = mkAdv "dispiritedly";
lin displace_V2 = mkV2 (mkV "displace" "displaces" "displaced" "displaced" "displacing");
lin displacement_N = mkN "displacement" "displacements";
lin display_N = mkN "display" "displays";
lin display_V2 = mkV2 (mkV "display" "displays" "displayed" "displayed" "displaying");
lin display_VS = mkVS (mkV "display");
lin displease_V2 = mkV2 (mkV "displease" "displeases" "displeased" "displeased" "displeasing");
lin displeasing_A = compoundA (mkA "displeasing");
lin displeasure_N = mkN "displeasure" ;
lin disport_V2 = mkV2 (mkV "disport" "disports" "disported" "disported" "disporting");
lin disposable_A = compoundA (mkA "disposable");
lin disposable_N = mkN "disposable" ;
lin disposal_N = mkN "disposal" ;
lin dispose_V = mkV "dispose" "disposes" "disposed" "disposed" "disposing";
lin dispose_V2 = mkV2 (mkV "dispose" "disposes" "disposed" "disposed" "disposing");
lin disposition_N = mkN "disposition" "dispositions";
lin dispossess_V2 = mkV2 (mkV "dispossess" "dispossesses" "dispossessed" "dispossessed" "dispossessing");
lin dispossession_N = mkN "dispossession" "dispossessions";
lin disproof_N = mkN "disproof" "disproofs";
lin disproportion_N = mkN "disproportion" ;
lin disproportionate_A = compoundA (mkA "disproportionate");
lin disprove_V2 = mkV2 (mkV "disprove" "disproves" "disproved" "disproved" "disproving");
lin disprove_VS = mkVS (mkV "disprove");
lin disputable_A = compoundA (mkA "disputable");
lin disputant_N = mkN "disputant" "disputants";
lin disputation_N = mkN "disputation" "disputations";
lin disputatious_A = compoundA (mkA "disputatious");
lin dispute_N = mkN "dispute" "disputes";
lin dispute_V = mkV "dispute" "disputes" "disputed" "disputed" "disputing";
lin dispute_V2 = mkV2 (mkV "dispute" "disputes" "disputed" "disputed" "disputing");
lin disqualification_N = mkN "disqualification" "disqualifications";
lin disqualify_V2 = mkV2 (mkV "disqualify" "disqualifies" "disqualified" "disqualified" "disqualifying");
lin disquiet_N = mkN "disquiet" ;
lin disquiet_V2 = mkV2 (mkV "disquiet" "disquiets" "disquieted" "disquieted" "disquieting");
lin disquieting_A = compoundA (mkA "disquieting");
lin disquietude_N = mkN "disquietude" ;
lin disquisition_N = mkN "disquisition" "disquisitions";
lin disregard_N = mkN "disregard" ;
lin disregard_V2 = mkV2 (mkV "disregard" "disregards" "disregarded" "disregarded" "disregarding");
lin disrepair_N = mkN "disrepair" ;
lin disreputable_A = compoundA (mkA "disreputable");
lin disrepute_N = mkN "disrepute" ;
lin disrespect_N = mkN "disrespect" ;
lin disrespectful_A = compoundA (mkA "disrespectful");
lin disrobe_V = mkV "disrobe" "disrobes" "disrobed" "disrobed" "disrobing";
lin disrobe_V2 = mkV2 (mkV "disrobe" "disrobes" "disrobed" "disrobed" "disrobing");
lin disrupt_V = mkV "disrupt";
lin disrupt_V2 = mkV2 (mkV "disrupt" "disrupts" "disrupted" "disrupted" "disrupting");
lin disruption_N = mkN "disruption" "disruptions";
lin disruptive_A = compoundA (mkA "disruptive");
lin dissatisfaction_N = mkN "dissatisfaction" ;
lin dissatisfy_V2 = mkV2 (mkV "dissatisfy" "dissatisfies" "dissatisfied" "dissatisfied" "dissatisfying");
lin dissect_V2 = mkV2 (mkV "dissect" "dissects" "dissected" "dissected" "dissecting");
lin dissection_N = mkN "dissection" "dissections";
lin dissemble_V = mkV "dissemble" "dissembles" "dissembled" "dissembled" "dissembling";
lin dissemble_V2 = mkV2 (mkV "dissemble" "dissembles" "dissembled" "dissembled" "dissembling");
lin dissembler_N = mkN "dissembler" "dissemblers";
lin disseminate_V = mkV "disseminate";
lin disseminate_V2 = mkV2 (mkV "disseminate" "disseminates" "disseminated" "disseminated" "disseminating");
lin dissemination_N = mkN "dissemination" ;
lin dissension_N = mkN "dissension" "dissensions";
lin dissent_N = mkN "dissent" ;
lin dissent_V = mkV "dissent" "dissents" "dissented" "dissented" "dissenting";
lin dissenter_N = mkN "dissenter" "dissenters";
lin dissentient_A = mkA "dissentient" ;
lin dissentious_A = mkA "dissentious" ;
lin dissertation_N = mkN "dissertation" "dissertations";
lin disservice_N = mkN "disservice" "disservices";
lin dissever_V2 = mkV2 (mkV "dissever" "dissevers" "dissevered" "dissevered" "dissevering");
lin dissidence_N = mkN "dissidence" ;
lin dissident_A = compoundA (mkA "dissident");
lin dissident_N = mkN "dissident" "dissidents";
lin dissilience_N = mkN "dissilience" ;
lin dissilient_A = mkA "dissilient" ;
lin dissimilar_A = compoundA (mkA "dissimilar");
lin dissimilarity_N = mkN "dissimilarity" "dissimilarities";
lin dissimilation_N = mkN "dissimilation" ;
lin dissimilitude_N = mkN "dissimilitude" ;
lin dissimulate_V = mkV "dissimulate" "dissimulates" "dissimulated" "dissimulated" "dissimulating";
lin dissimulate_V2 = mkV2 (mkV "dissimulate" "dissimulates" "dissimulated" "dissimulated" "dissimulating");
lin dissimulation_N = mkN "dissimulation" "dissimulations";
lin dissimulative_A = mkA "dissimulative" ;
lin dissipate_V = mkV "dissipate" "dissipates" "dissipated" "dissipated" "dissipating";
lin dissipate_V2 = mkV2 (mkV "dissipate" "dissipates" "dissipated" "dissipated" "dissipating");
lin dissipation_N = mkN "dissipation" ;
lin dissociable_A = mkA "dissociable" ;
lin dissociate_V2 = mkV2 (mkV "dissociate" "dissociates" "dissociated" "dissociated" "dissociating");
lin dissociation_N = mkN "dissociation" ;
lin dissociative_A = mkA "dissociative" ;
lin dissolubility_N = mkN "dissolubility" ;
lin dissoluble_A = compoundA (mkA "dissoluble");
lin dissolute_A = compoundA (mkA "dissolute");
lin dissoluteness_N = mkN "dissoluteness" ;
lin dissolution_N = mkN "dissolution" "dissolutions";
lin dissolvable_A = mkA "dissolvable" ;
lin dissolve_N = mkN "dissolve" ;
lin dissolve_V = mkV "dissolve" "dissolves" "dissolved" "dissolved" "dissolving";
lin dissolve_V2 = mkV2 (mkV "dissolve" "dissolves" "dissolved" "dissolved" "dissolving");
lin dissolving_N = mkN "dissolving" ;
lin dissonance_N = mkN "dissonance" "dissonances";
lin dissonant_A = compoundA (mkA "dissonant");
lin dissuade_V2 = mkV2 (mkV "dissuade" "dissuades" "dissuaded" "dissuaded" "dissuading");
lin dissuasion_N = mkN "dissuasion" ;
lin dissuasive_A = mkA "dissuasive" ;
lin dissyllable_N = mkN "dissyllable" "dissyllables";
lin distaff_N = mkN "distaff" "distaffs";
lin distal_A = mkA "distal" ;
lin distance_N = mkN "distance" "distances";
lin distance_V2 = mkV2 (mkV "distance" "distances" "distanced" "distanced" "distancing");
lin distant_A = compoundA (mkA "distant");
lin distaste_N = mkN "distaste" "distastes";
lin distasteful_A = compoundA (mkA "distasteful");
lin distastefulness_N = mkN "distastefulness" ;
lin distemper_N = mkN "distemper" ;
lin distemper_V2 = mkV2 (mkV "distemper" "distempers" "distempered" "distempered" "distempering");
lin distend_V = mkV "distend" "distends" "distended" "distended" "distending";
lin distend_V2 = mkV2 (mkV "distend" "distends" "distended" "distended" "distending");
lin distensible_A = mkA "distensible" ;
lin distension_N = mkN "distension" "distensions";
lin distention_N = mkN "distention" ;
lin distil_V = mkV "distil" "distils" "distilled" "distilled" "distilling";
lin distil_V2 = mkV2 (mkV "distil" "distils" "distilled" "distilled" "distilling");
lin distillate_N = mkN "distillate" ;
lin distillation_N = mkN "distillation" "distillations";
lin distiller_N = mkN "distiller" "distillers";
lin distillery_N = mkN "distillery" "distilleries";
lin distinct_A = compoundA (mkA "distinct");
lin distinction_N = mkN "distinction" "distinctions";
lin distinctive_A = compoundA (mkA "distinctive");
lin distinctiveness_N = mkN "distinctiveness" ;
lin distinctness_N = mkN "distinctness" ;
lin distinguish_V = mkV "distinguish" "distinguishes" "distinguished" "distinguished" "distinguishing";
lin distinguish_V2 = mkV2 (mkV "distinguish" "distinguishes" "distinguished" "distinguished" "distinguishing");
lin distinguishable_A = compoundA (mkA "distinguishable");
lin distort_V2 = mkV2 (mkV "distort" "distorts" "distorted" "distorted" "distorting");
lin distortable_A = mkA "distortable" ;
lin distortion_N = mkN "distortion" "distortions";
lin distortionist_N = mkN "distortionist" ;
lin distract_V = mkV "distract";
lin distract_V2 = mkV2 (mkV "distract" "distracts" "distracted" "distracted" "distracting");
lin distractedly_Adv = mkAdv "distractedly" ;
lin distraction_N = mkN "distraction" "distractions";
lin distrain_V = mkV "distrain" "distrains" "distrained" "distrained" "distraining";
lin distraint_N = mkN "distraint" "distraints";
lin distrait_A = compoundA (mkA "distrait");
lin distraught_A = compoundA (mkA "distraught");
lin distress_N = mkN "distress" ;
lin distress_V2 = mkV2 (mkV "distress" "distresses" "distressed" "distressed" "distressing");
lin distressful_A = compoundA (mkA "distressful");
lin distressing_A = compoundA (mkA "distressing");
lin distributary_N = mkN "distributary" ;
lin distribute_V2 = mkV2 (mkV "distribute" "distributes" "distributed" "distributed" "distributing");
lin distribution_N = mkN "distribution" "distributions";
lin distributional_A = mkA "distributional" ;
lin distributive_A = compoundA (mkA "distributive");
lin distributor_N = mkN "distributor" "distributors";
lin district_N = mkN "district" "districts";
lin distrust_N = mkN "distrust" "distrusts";
lin distrust_V2 = mkV2 (mkV "distrust" "distrusts" "distrusted" "distrusted" "distrusting");
lin distrustful_A = compoundA (mkA "distrustful");
lin distrustfulness_N = mkN "distrustfulness" ;
lin disturb_V2 = mkV2 (mkV "disturb" "disturbs" "disturbed" "disturbed" "disturbing");
lin disturbance_N = mkN "disturbance" "disturbances";
lin disturber_N = mkN "disturber" ;
lin disturbingly_Adv = mkAdv "disturbingly";
lin disulfiram_N = mkN "disulfiram" ;
lin disunion_N = mkN "disunion" ;
lin disunite_V = mkV "disunite" "disunites" "disunited" "disunited" "disuniting";
lin disunite_V2 = mkV2 (mkV "disunite" "disunites" "disunited" "disunited" "disuniting");
lin disunity_N = mkN "disunity" ;
lin disuse_N = mkN "disuse" ;
lin disused_A = compoundA (mkA "disused");
lin disyllabic_A = compoundA (mkA "disyllabic");
lin disyllable_N = mkN "disyllable" "disyllables";
lin dita_N = mkN "dita" ;
lin ditch_N = mkN "ditch" "ditches";
lin ditch_V = mkV "ditch" "ditches" "ditched" "ditched" "ditching";
lin ditch_V2 = mkV2 (mkV "ditch" "ditches" "ditched" "ditched" "ditching");
lin dither_N = mkN "dither" "dithers";
lin dither_V = mkV "dither" "dithers" "dithered" "dithered" "dithering";
lin dithering_N = mkN "dithering" ;
lin dithyramb_N = mkN "dithyramb" ;
lin dithyrambic_A = mkA "dithyrambic" ;
lin ditto_N = mkN "ditto" "ditti";
lin ditty_N = mkN "ditty" "ditties";
lin diuresis_N = mkN "diuresis" ;
lin diurnal_A = compoundA (mkA "diurnal");
lin divagate_V = mkV "divagate" "divagates" "divagated" "divagated" "divagating";
lin divagation_N = mkN "divagation" "divagations";
lin divan_N = mkN "divan" "divans";
lin divan_bed_N = mkN "divan-bed" "divan-beds";
lin divarication_N = mkN "divarication" ;
lin dive_N = mkN "dive" "dives";
lin dive_V = mkV "dive" "dives" "dived" "dived" "diving";
lin dive_bomb_V = mkV "dive-bomb" "dive-bombs" "dive-bombed" "dive-bombed" "dive-bombing";
lin dive_bomb_V2 = mkV2 (mkV "dive-bomb" "dive-bombs" "dive-bombed" "dive-bombed" "dive-bombing");
lin dive_bomber_N = mkN "dive-bomber" "dive-bombers";
lin diver_N = mkN "diver" "divers";
lin diverge_V = mkV "diverge" "diverges" "diverged" "diverged" "diverging";
lin divergence_N = mkN "divergence" "divergences";
lin divergency_N = mkN "divergency" "divergencies";
lin divergent_A = compoundA (mkA "divergent");
lin divers_A = compoundA (mkA "divers");
lin diverse_A = compoundA (mkA "diverse");
lin diverseness_N = mkN "diverseness" ;
lin diversification_N = mkN "diversification" ;
lin diversify_V = mkV "diversify";
lin diversify_V2 = mkV2 (mkV "diversify" "diversifies" "diversified" "diversified" "diversifying");
lin diversion_N = mkN "diversion" "diversions";
lin diversionary_A = compoundA (mkA "diversionary");
lin diversionist_N = mkN "diversionist" "diversionists";
lin diversity_N = mkN "diversity" ;
lin divert_V = mkV "divert";
lin divert_V2 = mkV2 (mkV "divert" "diverts" "diverted" "diverted" "diverting");
lin diverticulitis_N = mkN "diverticulitis" ;
lin diverticulosis_N = mkN "diverticulosis" ;
lin diverticulum_N = mkN "diverticulum" ;
lin divertimento_N = mkN "divertimento" ;
lin dives_PN = mkPN "Dives";
lin divest_V2 = mkV2 (mkV "divest" "divests" "divested" "divested" "divesting");
lin divestiture_N = mkN "divestiture" ;
lin dividable_A = mkA "dividable" ;
lin divide_N = mkN "divide" "divides";
lin divide_V = mkV "divide" "divides" "divided" "divided" "dividing";
lin divide_V2 = mkV2 (mkV "divide" "divides" "divided" "divided" "dividing");
lin dividend_N = mkN "dividend" "dividends";
lin dividend_warrant_N = mkN "dividend-warrant" "dividend-warrants";
lin divider_N = mkN "divider" ;
lin divination_N = mkN "divination" "divinations";
lin divinatory_A = mkA "divinatory" ;
lin divine_A = compoundA (mkA "divine");
lin divine_N = mkN "divine" "divines";
lin divine_V = mkV "divine" "divines" "divined" "divined" "divining";
lin divine_V2 = mkV2 (mkV "divine" "divines" "divined" "divined" "divining");
lin diviner_N = mkN "diviner" "diviners";
lin diving_N = mkN "diving" ;
lin diving_bell_N = mkN "diving-bell" "diving-bells";
lin diving_board_N = mkN "diving-board" "diving-boards";
lin diving_dress_N = mkN "diving-dress" ;
lin diving_suit_N = mkN "diving-suit" "diving-suits";
lin divinity_N = mkN "divinity" "divinities";
lin divisibility_N = mkN "divisibility" ;
lin divisible_A = compoundA (mkA "divisible");
lin division_N = mkN "division" "divisions";
lin divisional_A = compoundA (mkA "divisional");
lin divisor_N = mkN "divisor" "divisors";
lin divorce_N = mkN "divorce" "divorces";
lin divorce_V2 = mkV2 (mkV "divorce" "divorces" "divorced" "divorced" "divorcing");
lin divorcee_N = mkN "divorcee" "divorcees";
lin divot_N = mkN "divot" "divots";
lin divulge_V2 = mkV2 (mkV "divulge" "divulges" "divulged" "divulged" "divulging");
lin divulgence_N = mkN "divulgence" "divulgences";
lin divvy_N = mkN "divvy" "divvies";
lin dixie_N = mkN "dixie" "dixies";
lin diy_N = mkN "diy" ;
lin dizygotic_A = mkA "dizygotic" ;
lin dizziness_N = mkN "dizziness" ;
lin dizzy_A = mkA "dizzy" "dizzier";
lin dizzy_V2 = mkV2 (mkV "dizzy" "dizzies" "dizzied" "dizzied" "dizzying");
lin dj_N = mkN "dj" ;
lin djibouti_PN = mkPN "Djibouti";
lin djiboutian_A = compoundA (mkA "djiboutian");
lin djiboutian_N = mkN "djiboutian" "djiboutians";
lin djinn_N = mkN "djinn" "djinns";
lin djs_N = mkN "DJ" "DJs" ;
lin dlitt_N = mkN "dlitt" ;
lin dm_N = mkN "dm" "dm";
lin dna_N = mkN "DNA" "DNAs" ;
lin dnepropetrovsk_PN = mkPN "Dnepropetrovsk";
lin do_N = mkN "do" "di";
lin do_V = IrregEng.do_V;
lin do_V2 = mkV2 (IrregEng.do_V);
lin do_gooder_N = mkN "do-gooder" "do-gooders";
lin dobbin_N = mkN "dobbin" "dobbins";
lin dobra_N = mkN "dobra" ;
lin dobson_N = mkN "dobson" ;
lin docent_N = mkN "docent" ;
lin docile_A = compoundA (mkA "docile");
lin docility_N = mkN "docility" ;
lin dock_N = mkN "dock" "docks";
lin dock_V = mkV "dock" "docks" "docked" "docked" "docking";
lin dock_V2 = mkV2 (mkV "dock" "docks" "docked" "docked" "docking");
lin dockage_N = mkN "dockage" ;
lin docker_N = mkN "docker" "dockers";
lin docket_N = mkN "docket" "dockets";
lin docket_V2 = mkV2 (mkV "docket" "dockets" "docketed" "docketed" "docketing");
lin docking_N = mkN "docking" ;
lin dockside_N = mkN "dockside" ;
lin dockyard_N = mkN "dockyard" "dockyards";
lin doctor_N = mkN "doctor" "doctors";
lin doctor_V2 = mkV2 (mkV "doctor" "doctors" "doctored" "doctored" "doctoring");
lin doctoral_A = mkA "doctoral" ;
lin doctorate_N = mkN "doctorate" "doctorates";
lin doctorfish_N = mkN "doctorfish" ;
lin doctorspeak_N = mkN "doctorspeak" ;
lin doctrinaire_A = compoundA (mkA "doctrinaire");
lin doctrinaire_N = mkN "doctrinaire" "doctrinaires";
lin doctrinal_A = compoundA (mkA "doctrinal");
lin doctrine_N = mkN "doctrine" "doctrines";
lin document_N = mkN "document" "documents";
lin document_V2 = mkV2 (mkV "document" "documents" "documented" "documented" "documenting");
lin documentary_A = compoundA (mkA "documentary");
lin documentary_N = mkN "documentary" ;
lin documentation_N = mkN "documentation" ;
lin dodder_N = mkN "dodder" ;
lin dodder_V = mkV "dodder" "dodders" "doddered" "doddered" "doddering";
lin dodderer_N = mkN "dodderer" "dodderers";
lin doddery_A = compoundA (mkA "doddery");
lin doddle_N = mkN "doddle" ;
lin dodecagon_N = mkN "dodecagon" ;
lin dodecahedron_N = mkN "dodecahedron" ;
lin dodge_N = mkN "dodge" "dodges";
lin dodge_V = mkV "dodge" "dodges" "dodged" "dodged" "dodging";
lin dodge_V2 = mkV2 (mkV "dodge" "dodges" "dodged" "dodged" "dodging");
lin dodgem_N = mkN "dodgem" "dodgems";
lin dodger_N = mkN "dodger" "dodgers";
lin dodgy_A = compoundA (mkA "dodgy");
lin dodo_N = mkN "dodo" "dodos";
lin doe_N = mkN "doe" ;
lin doer_N = mkN "doer" "doers";
lin doeskin_N = mkN "doeskin" ;
lin doff_V2 = mkV2 (mkV "doff" "doffs" "doffed" "doffed" "doffing");
lin dog's_tooth_N = mkN "dog's-tooth" ;
lin dog_N = mkN "dog" "dogs";
lin dog_V2 = mkV2 (mkV "dog" "dogs" "dogged" "dogged" "dogging");
lin dog_biscuit_N = mkN "dog-biscuit" "dog-biscuits";
lin dog_cart_N = mkN "dog-cart" "dog-carts";
lin dog_collar_N = mkN "dog-collar" "dog-collars";
lin dog_eared_A = compoundA (mkA "dog-eared");
lin dog_like_A = compoundA (mkA "dog-like");
lin dogbane_N = mkN "dogbane" ;
lin dogcart_N = mkN "dogcart" ;
lin doge_N = mkN "doge" "doges";
lin dogfight_N = mkN "dogfight" ;
lin dogfighter_N = mkN "dogfighter" ;
lin dogfish_N = mkN "dogfish" "dogfish";
lin doggedly_Adv = mkAdv "doggedly" ;
lin doggedness_N = mkN "doggedness" ;
lin doggerel_N = mkN "doggerel" ;
lin doggie_N = mkN "doggie" "doggies";
lin dogging_A = mkA "dogging" ;
lin doggo_Adv = mkAdv "doggo";
lin doggy_N = mkN "doggy" "doggies";
lin doghouse_N = mkN "doghouse" "doghouses";
lin dogie_N = mkN "dogie" ;
lin dogleg_N = mkN "dogleg" ;
lin doglike_A = mkA "doglike" ;
lin dogma_N = mkN "dogma" "dogmas";
lin dogmatic_A = compoundA (mkA "dogmatic");
lin dogmatically_Adv = mkAdv "dogmatically";
lin dogmatism_N = mkN "dogmatism" ;
lin dogmatist_N = mkN "dogmatist" ;
lin dogmatize_V = mkV "dogmatize" "dogmatizes" "dogmatized" "dogmatized" "dogmatizing";
lin dogmatize_V2 = mkV2 (mkV "dogmatize" "dogmatizes" "dogmatized" "dogmatized" "dogmatizing");
lin dogsbody_N = mkN "dogsbody" "dogsbodies";
lin dogsled_N = mkN "dogsled" ;
lin dogtooth_N = mkN "dogtooth" ;
lin dogtrot_N = mkN "dogtrot" "dogtrots";
lin dogwatch_N = mkN "dogwatch" "dogwatches";
lin dogwood_N = mkN "dogwood" "dogwoods";
lin doh_N = mkN "doh" "dohs";
lin doily_N = mkN "doily" "doilies";
lin dol_N = mkN "dol" ;
lin dolabriform_A = mkA "dolabriform" ;
lin dolce_Adv = mkAdv "dolce" ;
lin doldrums_N = mkN "doldrums" ;
lin dole_N = mkN "dole" "doles";
lin dole_V2 = mkV2 (mkV "dole" "doles" "doled" "doled" "doling");
lin doleful_A = compoundA (mkA "doleful");
lin dolefulness_N = mkN "dolefulness" ;
lin dolichocephalic_A = mkA "dolichocephalic" ;
lin dolichocephalic_N = mkN "dolichocephalic" ;
lin dolichocephaly_N = mkN "dolichocephaly" ;
lin doliolum_N = mkN "doliolum" ;
lin doll_N = mkN "doll" "dolls";
lin doll_V = mkV "doll" "dolls" "dolled" "dolled" "dolling";
lin doll_V2 = mkV2 (mkV "doll" "dolls" "dolled" "dolled" "dolling");
lin dollar_N = mkN "dollar" "dollars";
lin dollarfish_N = mkN "dollarfish" ;
lin dollhouse_N = mkN "dollhouse" ;
lin dollop_N = mkN "dollop" "dollops";
lin dolly_N = mkN "dolly" "dollies";
lin dolly_PN = mkPN "Dolly";
lin dolman_N = mkN "dolman" ;
lin dolmas_N = mkN "dolmas" ;
lin dolmen_N = mkN "dolmen" "dolmens";
lin dolomite_N = mkN "dolomite" ;
lin dolomitic_A = mkA "dolomitic" ;
lin dolor_N = mkN "dolor" ;
lin dolorous_A = mkA "dolorous" ;
lin dolour_N = mkN "dolour" "dolours";
lin dolourous_A = compoundA (mkA "dolourous");
lin dolphin_N = mkN "dolphin" "dolphins";
lin dolphinfish_N = mkN "dolphinfish" ;
lin dolt_N = mkN "dolt" "dolts";
lin doltish_A = compoundA (mkA "doltish");
lin domain_N = mkN "domain" "domains";
lin domatium_N = mkN "domatium" ;
lin dombeya_N = mkN "dombeya" ;
lin dome_N = mkN "dome" "domes";
lin domed_A = compoundA (mkA "domed");
lin domesday_PN = mkPN "Domesday";
lin domestic_A = compoundA (mkA "domestic");
lin domestic_N = mkN "domestic" ;
lin domestically_Adv = mkAdv "domestically";
lin domesticate_V2 = mkV2 (mkV "domesticate" "domesticates" "domesticated" "domesticated" "domesticating");
lin domestication_N = mkN "domestication" ;
lin domesticity_N = mkN "domesticity" ;
lin domicile_N = mkN "domicile" "domiciles";
lin domiciliary_A = compoundA (mkA "domiciliary");
lin dominance_N = mkN "dominance" ;
lin dominant_A = compoundA (mkA "dominant");
lin dominant_N = mkN "dominant" ;
lin dominate_V = mkV "dominate" "dominates" "dominated" "dominated" "dominating";
lin dominate_V2 = mkV2 (mkV "dominate" "dominates" "dominated" "dominated" "dominating");
lin domination_N = mkN "domination" ;
lin dominatrix_N = mkN "dominatrix" ;
lin domineer_V = mkV "domineer" "domineers" "domineered" "domineered" "domineering";
lin domineeringly_Adv = mkAdv "domineeringly" ;
lin dominic_PN = mkPN "Dominic";
lin dominica_PN = mkPN "Dominica";
lin dominical_A = mkA "dominical" ;
lin dominican_A = compoundA (mkA "dominican");
lin dominican_N = mkN "dominican" "dominicans";
lin dominie_N = mkN "dominie" "dominies";
lin dominion_N = mkN "dominion" "dominions";
lin domino_N = mkN "domino" "dominos";
lin dominoes_N = mkN "dominoes" ;
lin dominus_N = mkN "dominus" ;
lin don't_know_N = mkN "don't-know" "don't-knows";
lin don_N = mkN "don" "dons";
lin don_PN = mkPN "Don";
lin don_V2 = mkV2 (mkV "don" "dons" "donned" "donned" "donning");
lin donald_PN = mkPN "Donald";
lin donate_V = mkV "donate";
lin donate_V2 = mkV2 (mkV "donate" "donates" "donated" "donated" "donating");
lin donation_N = mkN "donation" "donations";
lin doncaster_PN = mkPN "Doncaster";
lin donegal_PN = mkPN "Donegal";
lin donetsk_PN = mkPN "Donetsk";
lin dong_N = mkN "dong" ;
lin dongle_N = mkN "dongle" ;
lin donjon_N = mkN "donjon" "donjons";
lin donkey_N = mkN "donkey" "donkeys";
lin donkey_jacket_N = mkN "donkey-jacket" "donkey-jackets";
lin donkey_work_N = mkN "donkey-work" ;
lin donna_N = mkN "donna" ;
lin donnish_A = compoundA (mkA "donnish");
lin donor_N = mkN "donor" "donors";
lin doodad_N = mkN "doodad" ;
lin doodia_N = mkN "doodia" ;
lin doodle_V = mkV "doodle" "doodles" "doodled" "doodled" "doodling";
lin doodlebug_N = mkN "doodlebug" "doodlebugs";
lin doom_N = mkN "doom" "dooms";
lin doom_V2 = mkV2 (mkV "doom" "dooms" "doomed" "doomed" "dooming");
lin doomed_N = mkN "doomed" ;
lin doomsday_PN = mkPN "Doomsday";
lin door_N = mkN "door" "doors";
lin door_to_door_A = compoundA (mkA "door-to-door");
lin doorbell_N = mkN "doorbell" "doorbells";
lin doorcase_N = mkN "doorcase" "doorcases";
lin doorframe_N = mkN "doorframe" "doorframes";
lin doorhandle_N = mkN "doorhandle" "doorhandles";
lin doorjamb_N = mkN "doorjamb" ;
lin doorkeeper_N = mkN "doorkeeper" "doorkeepers";
lin doorknob_N = mkN "doorknob" "doorknobs";
lin doorknocker_N = mkN "doorknocker" "doorknockers";
lin doorlock_N = mkN "doorlock" ;
lin doorman_N = mkN masculine (mkN "doorman" "doormen");
lin doormat_N = mkN "doormat" "doormats";
lin doornail_N = mkN "doornail" "doornails";
lin doorplate_N = mkN "doorplate" "doorplates";
lin doorpost_N = mkN "doorpost" "doorposts";
lin doorsill_N = mkN "doorsill" ;
lin doorstep_N = mkN "doorstep" "doorsteps";
lin doorstop_N = mkN "doorstop" ;
lin doorstopper_N = mkN "doorstopper" "doorstoppers";
lin doorway_N = mkN "doorway" "doorways";
lin dooryard_N = mkN "dooryard" ;
lin dopa_N = mkN "dopa" ;
lin dopamine_N = mkN "dopamine" ;
lin dope_N = mkN "dope" "dopes";
lin dope_V2 = mkV2 (mkV "dope" "dopes" "doped" "doped" "doping");
lin dopey_A = compoundA (mkA "dopey");
lin doppelganger_N = mkN "doppelganger" ;
lin dora_PN = mkPN "Dora";
lin dorbeetle_N = mkN "dorbeetle" ;
lin dorchester_PN = mkPN "Dorchester";
lin dordrecht_PN = mkPN "Dordrecht";
lin doreen_PN = mkPN "Doreen";
lin doric_A = compoundA (mkA "doric");
lin doris_PN = mkPN "Doris";
lin dorking_PN = mkPN "Dorking";
lin dormancy_N = mkN "dormancy" ;
lin dormant_A = compoundA (mkA "dormant");
lin dormer_N = mkN "dormer" "dormers";
lin dormer_window_N = mkN "dormer-window" "dormer-windows";
lin dormie_A = mkA "dormie" ;
lin dormitory_N = mkN "dormitory" "dormitories";
lin dormouse_N = mkN "dormouse" "dormice";
lin dorothy_PN = mkPN "Dorothy";
lin dorsal_A = compoundA (mkA "dorsal");
lin dorset_PN = mkPN "Dorset";
lin dorsiflexion_N = mkN "dorsiflexion" ;
lin dorsoventral_A = mkA "dorsoventral" ;
lin dorsum_N = mkN "dorsum" ;
lin dortmund_PN = mkPN "Dortmund";
lin dory_N = mkN "dory" "dories";
lin dosage_N = mkN "dosage" "dosages";
lin dose_N = mkN "dose" "doses";
lin dose_V2 = mkV2 (mkV "dose" "doses" "dosed" "dosed" "dosing");
lin dosemeter_N = mkN "dosemeter" ;
lin dosimetry_N = mkN "dosimetry" ;
lin doss_V = mkV "doss" "dosses" "dossed" "dossed" "dossing";
lin doss_house_N = mkN "doss-house" "doss-houses";
lin dossal_N = mkN "dossal" ;
lin dosser_N = mkN "dosser" "dossers";
lin dossier_N = mkN "dossier" "dossiers";
lin dot_N = mkN "dot" "dots";
lin dot_V2 = mkV2 (mkV "dot" "dots" "dotted" "dotted" "dotting");
lin dotage_N = mkN "dotage" ;
lin dotard_N = mkN "dotard" "dotards";
lin dote_V = mkV "dote" "dotes" "doted" "doted" "doting";
lin dotterel_N = mkN "dotterel" ;
lin dottle_N = mkN "dottle" "dottles";
lin dotty_A = mkA "dotty" "dottier";
lin douai_PN = mkPN "Douai";
lin double_A = compoundA (mkA "double");
lin double_Adv = mkAdv "double";
lin double_N = mkN "double" "doubles";
lin double_V = mkV "double" "doubles" "doubled" "doubled" "doubling";
lin double_V2 = mkV2 (mkV "double" "doubles" "doubled" "doubled" "doubling");
lin double_barrelled_A = compoundA (mkA "double-barrelled");
lin double_bass_N = mkN "double-bass" "double-basses";
lin double_bedded_A = compoundA (mkA "double-bedded");
lin double_breasted_A = compoundA (mkA "double-breasted");
lin double_check_V2 = mkV2 (mkV "double-check" "double-checks" "double-checked" "double-checked" "double-checking");
lin double_cross_N = mkN "double-cross" "double-crosses";
lin double_cross_V2 = mkV2 (mkV "double-cross" "double-crosses" "double-crossed" "double-crossed" "double-crossing");
lin double_dealer_N = mkN "double-dealer" "double-dealers";
lin double_dealing_A = compoundA (mkA "double-dealing");
lin double_dealing_N = mkN "double-dealing" ;
lin double_decker_N = mkN "double-decker" "double-deckers";
lin double_dutch_N = mkN "double-dutch" ;
lin double_dyed_A = compoundA (mkA "double-dyed");
lin double_edged_A = compoundA (mkA "double-edged");
lin double_entry_N = mkN "double-entry" "double-entries";
lin double_faced_A = compoundA (mkA "double-faced");
lin double_first_N = mkN "double-first" "double-firsts";
lin double_jointed_A = compoundA (mkA "double-jointed");
lin double_park_V = mkV "double-park" "double-parks" "double-parked" "double-parked" "double-parking";
lin double_park_V2 = mkV2 (mkV "double-park" "double-parks" "double-parked" "double-parked" "double-parking");
lin double_quick_A = compoundA (mkA "double-quick");
lin double_quick_Adv = mkAdv "double-quick";
lin double_spacing_N = mkN "double-spacing" ;
lin double_talk_N = mkN "double-talk" ;
lin double_think_N = mkN "double-think" ;
lin doubler_N = mkN "doubler" ;
lin doubles_N = mkN "doubles" ;
lin doublespeak_N = mkN "doublespeak" ;
lin doublet_N = mkN "doublet" "doublets";
lin doublethink_N = mkN "doublethink" ;
lin doubleton_N = mkN "doubleton" ;
lin doubletree_N = mkN "doubletree" ;
lin doubling_N = mkN "doubling" ;
lin doubloon_N = mkN "doubloon" "doubloons";
lin doubt_N = mkN "doubt" "doubts";
lin doubt_V2 = mkV2 (mkV "doubt" "doubts" "doubted" "doubted" "doubting");
lin doubt_VS = mkVS (mkV "doubt");
lin doubtful_A = compoundA (mkA "doubtful");
lin doubting_A = mkA "doubting" ;
lin doubtless_Adv = mkAdv "doubtless";
lin douche_N = mkN "douche" "douches";
lin doug_PN = mkPN "Doug";
lin dough_N = mkN "dough" ;
lin doughboy_N = mkN "doughboy" ;
lin doughnut_N = mkN "doughnut" "doughnuts";
lin doughty_A = compoundA (mkA "doughty");
lin doughy_A = mkA "doughy" "doughier";
lin douglas_PN = mkPN "Douglas";
lin dour_A = compoundA (mkA "dour");
lin douroucouli_N = mkN "douroucouli" ;
lin douse_V2 = mkV2 (mkV "douse" "douses" "doused" "doused" "dousing");
lin dove_N = mkN "dove" "doves";
lin dovecote_N = mkN "dovecote" "dovecotes";
lin dover_PN = mkPN "Dover";
lin dovetail_N = mkN "dovetail" "dovetails";
lin dovetail_V = mkV "dovetail" "dovetails" "dovetailed" "dovetailed" "dovetailing";
lin dovetail_V2 = mkV2 (mkV "dovetail" "dovetails" "dovetailed" "dovetailed" "dovetailing");
lin dovishness_N = mkN "dovishness" ;
lin dowager_N = mkN "dowager" "dowagers";
lin dowdiness_N = mkN "dowdiness" ;
lin dowdy_A = mkA "dowdy" "dowdier";
lin dowdy_N = mkN "dowdy" ;
lin dowel_N = mkN "dowel" "dowels";
lin doweling_N = mkN "doweling" ;
lin dower_N = mkN "dower" "dowers";
lin dower_V2 = mkV2 (mkV "dower" "dowers" "dowered" "dowered" "dowering");
lin dowerless_A = mkA "dowerless" ;
lin dowitcher_N = mkN "dowitcher" ;
lin down_A = mkA "down" ;
lin down_Adv = mkAdv "down";
lin down_N = mkN "down" "downs";
lin down_PN = mkPN "Down";
lin down_Prep = mkPrep "down";
lin down_V2 = mkV2 (mkV "down" "downs" "downed" "downed" "downing");
lin down_and_out_N = mkN "down-and-out" "down-and-outs";
lin down_market_A = compoundA (mkA "down-market");
lin down_to_earth_A = compoundA (mkA "down-to-earth");
lin downbeat_N = mkN "downbeat" "downbeats";
lin downbound_A = mkA "downbound" ;
lin downcast_A = compoundA (mkA "downcast");
lin downcast_N = mkN "downcast" ;
lin downdraft_N = mkN "downdraft" ;
lin downfall_N = mkN "downfall";
lin downfield_A = mkA "downfield" ;
lin downfield_Adv = mkAdv "downfield" ;
lin downgrade_N = mkN "downgrade" ;
lin downgrade_V2 = mkV2 (mkV "downgrade" "downgrades" "downgraded" "downgraded" "downgrading");
lin downhearted_A = compoundA (mkA "downhearted");
lin downheartedness_N = mkN "downheartedness" ;
lin downhill_Adv = mkAdv "downhill";
lin downhill_N = mkN "downhill" ;
lin downiness_N = mkN "downiness" ;
lin downing_street_PN = mkPN "Downing street";
lin downmarket_A = mkA "downmarket" ;
lin downplay_V2 = mkV2 (mkV "downplay");
lin downpour_N = mkN "downpour" "downpours";
lin downright_A = compoundA (mkA "downright");
lin downright_Adv = mkAdv "downright";
lin downrightness_N = mkN "downrightness" ;
lin downriver_Adv = mkAdv "downriver" ;
lin downscale_A = mkA "downscale" ;
lin downshift_N = mkN "downshift" ;
lin downside_N = mkN "downside" ;
lin downsize_V2 = mkV2 (mkV "downsize");
lin downspin_N = mkN "downspin" ;
lin downstage_A = mkA "downstage" ;
lin downstage_Adv = mkAdv "downstage" ;
lin downstage_N = mkN "downstage" ;
lin downstair_A = compoundA (mkA "downstair");
lin downstairs_A = compoundA (mkA "downstairs");
lin downstairs_Adv = mkAdv "downstairs";
lin downstream_A = compoundA (mkA "downstream");
lin downstream_Adv = mkAdv "downstream";
lin downstroke_N = mkN "downstroke" ;
lin downswing_N = mkN "downswing" ;
lin downtick_N = mkN "downtick" ;
lin downtime_N = mkN "downtime" ;
lin downtown_A = mkA "downtown" ;
lin downtown_Adv = mkAdv "downtown";
lin downtrodden_A = compoundA (mkA "downtrodden");
lin downturn_N = mkN "downturn" ;
lin downward_A = compoundA (mkA "downward");
lin downward_Adv = mkAdv "downward";
lin downwards_Adv = mkAdv "downwards";
lin downwind_A = mkA "downwind" ;
lin downwind_Adv = mkAdv "downwind" ;
lin downy_A = compoundA (mkA "downy");
lin dowry_N = mkN "dowry" "dowries";
lin dowse_N = mkN "dowse" ;
lin dowse_V2 = mkV2 (mkV "dowse" "dowses" "dowsed" "dowsed" "dowsing");
lin dowser_N = mkN "dowser" "dowsers";
lin dowsing_N = mkN "dowsing" ;
lin doxazosin_N = mkN "doxazosin" ;
lin doxepin_N = mkN "doxepin" ;
lin doxology_N = mkN "doxology" "doxologies";
lin doxorubicin_N = mkN "doxorubicin" ;
lin doxycycline_N = mkN "doxycycline" ;
lin doyen_N = mkN "doyen" "doyens";
lin doyenne_N = mkN "doyenne" ;
lin doyley_N = mkN "doyley" "doyleys";
lin doyly_N = mkN "doyly" "doylies";
lin doz_N = mkN "doz" "doz";
lin doze_N = mkN "doze" "dozes";
lin doze_V = mkV "doze" "dozes" "dozed" "dozed" "dozing";
lin dozen_N = mkN "dozen" "dozens";
lin dphil_N = mkN "dphil" ;
lin dr_PN = mkPN "Dr";
lin drab_A = mkA "drab" "drabber";
lin draba_N = mkN "draba" ;
lin drabness_N = mkN "drabness" ;
lin dracaena_N = mkN "dracaena" ;
lin drachm_N = mkN "drachm" "drachms";
lin drachma_N = mkN "drachma" "drachmas";
lin draconian_A = compoundA (mkA "draconian");
lin dracontium_N = mkN "dracontium" ;
lin draft_N = mkN "draft" "drafts";
lin draft_V2 = mkV2 (mkV "draft" "drafts" "drafted" "drafted" "drafting");
lin draftee_N = mkN "draftee" "draftees";
lin drafter_N = mkN "drafter" ;
lin drafting_N = mkN "drafting" "draftings";
lin draftsman_N = mkN masculine (mkN "draftsman" "draftsmen");
lin drafty_A = mkA "drafty" ;
lin drag_N = mkN "drag" ;
lin drag_V = mkV "drag" "drags" "dragged" "dragged" "dragging";
lin drag_V2 = mkV2 (mkV "drag" "drags" "dragged" "dragged" "dragging");
lin dragee_N = mkN "dragee" ;
lin draggingly_Adv = mkAdv "draggingly" ;
lin draggled_A = compoundA (mkA "draggled");
lin dragnet_N = mkN "dragnet" "dragnets";
lin dragoman_N = mkN "dragoman" "dragomans";
lin dragon_N = mkN "dragon" "dragons";
lin dragonet_N = mkN "dragonet" ;
lin dragonfly_N = mkN "dragonfly" "dragonflies";
lin dragonhead_N = mkN "dragonhead" ;
lin dragoon_N = mkN "dragoon" "dragoons";
lin dragoon_V2 = mkV2 (mkV "dragoon" "dragoons" "dragooned" "dragooned" "dragooning");
lin drain_N = mkN "drain" "drains";
lin drain_V = mkV "drain" "drains" "drained" "drained" "draining";
lin drain_V2 = mkV2 (mkV "drain" "drains" "drained" "drained" "draining");
lin drainage_N = mkN "drainage" ;
lin drainage_basin_N = mkN "drainage-basin" "drainage-basins";
lin drainboard_N = mkN "drainboard" ;
lin draining_board_N = mkN "draining-board" "draining-boards";
lin drainpipe_N = mkN "drainpipe" "drainpipes";
lin drainplug_N = mkN "drainplug" ;
lin drake_N = mkN "drake" "drakes";
lin dram_N = mkN "dram" "drams";
lin drama_N = mkN "drama" "dramas";
lin dramatic_A = compoundA (mkA "dramatic");
lin dramatically_Adv = mkAdv "dramatically";
lin dramatics_N = mkN "dramatics" "dramatics";
lin dramatist_N = mkN "dramatist" "dramatists";
lin dramatization_N = mkN "dramatization" "dramatizations";
lin dramatize_V2 = mkV2 (mkV "dramatize" "dramatizes" "dramatized" "dramatized" "dramatizing");
lin dramaturgic_A = mkA "dramaturgic" ;
lin dramaturgy_N = mkN "dramaturgy" ;
lin drape_N = mkN "drape" "drapes";
lin drape_V2 = mkV2 (mkV "drape" "drapes" "draped" "draped" "draping");
lin draper_N = mkN "draper" "drapers";
lin drapery_N = mkN "drapery" "draperies";
lin drastic_A = compoundA (mkA "drastic");
lin drastically_Adv = mkAdv "drastically";
lin drat_V2 = mkV2 (mkV "drat" "drats" "dratted" "dratted" "dratting");
lin draught_N = mkN "draught" "draughts";
lin draught_V2 = mkV2 (mkV "draught" "draughts" "draughted" "draughted" "draughting");
lin draught_horse_N = mkN "draught-horse" "draught-horses";
lin draughts_N = mkN "draughts" "draughts";
lin draughtsman_N = mkN masculine (mkN "draughtsman" "draughtsmen");
lin draughty_A = mkA "draughty" "draughtier";
lin draw_N = mkN "draw" "draws";
lin draw_V = IrregEng.draw_V;
lin draw_V2 = mkV2 (IrregEng.draw_V);
lin draw_V2V = mkV2V (IrregEng.draw_V) noPrep to_Prep ;
lin drawback_N = mkN "drawback" "drawbacks";
lin drawbar_N = mkN "drawbar" ;
lin drawbridge_N = mkN "drawbridge" "drawbridges";
lin drawee_N = mkN "drawee" ;
lin drawer_N = mkN "drawer" "drawers";
lin drawers_N = mkN "drawers" ;
lin drawing_N = mkN "drawing" "drawings";
lin drawing_board_N = mkN "drawing-board" "drawing-boards";
lin drawing_pin_N = mkN "drawing-pin" "drawing-pins";
lin drawing_room_N = mkN "drawing-room" "drawing-rooms";
lin drawknife_N = mkN "drawknife" ;
lin drawl_N = mkN "drawl" "drawls";
lin drawl_V = mkV "drawl" "drawls" "drawled" "drawled" "drawling";
lin drawl_V2 = mkV2 (mkV "drawl" "drawls" "drawled" "drawled" "drawling");
lin drawler_N = mkN "drawler" ;
lin drawnwork_N = mkN "drawnwork" ;
lin drawstring_N = mkN "drawstring" ;
lin dray_N = mkN "dray" "drays";
lin drayton_PN = mkPN "Drayton";
lin dread_N = mkN "dread" ;
lin dread_V = mkV "dread" "dreads" "dreaded" "dreaded" "dreading";
lin dread_V2 = mkV2 (mkV "dread" "dreads" "dreaded" "dreaded" "dreading");
lin dreadful_A = compoundA (mkA "dreadful");
lin dreadfulness_N = mkN "dreadfulness" ;
lin dreadlock_N = mkN "dreadlock" ;
lin dreadnought_N = mkN "dreadnought" "dreadnoughts";
lin dream_N = mkN "dream" "dreams";
lin dream_V = mkV "dream" "dreams" "dreamed" "dreamed" "dreaming";
lin dream_V2 = mkV2 (mkV "dream" "dreams" "dreamed" "dreamed" "dreaming");
lin dreamer_N = mkN "dreamer" "dreamers";
lin dreamland_N = mkN "dreamland" "dreamlands";
lin dreamless_A = compoundA (mkA "dreamless");
lin dreamlike_A = compoundA (mkA "dreamlike");
lin dreamworld_N = mkN "dreamworld" "dreamworlds";
lin dreamy_A = mkA "dreamy" "dreamier";
lin drear_A = compoundA (mkA "drear");
lin dreariness_N = mkN "dreariness" ;
lin dreary_A = mkA "dreary" "drearier";
lin dredge_N = mkN "dredge" "dredges";
lin dredge_V = mkV "dredge" "dredges" "dredged" "dredged" "dredging";
lin dredge_V2 = mkV2 (mkV "dredge" "dredges" "dredged" "dredged" "dredging");
lin dredger_N = mkN "dredger" "dredgers";
lin dreg_N = mkN "dreg" ;
lin dregs_N = mkN "dregs" ;
lin drench_V2 = mkV2 (mkV "drench" "drenches" "drenched" "drenched" "drenching");
lin drenching_N = mkN "drenching" "drenchings";
lin dresden_PN = mkPN "Dresden";
lin dress_A = mkA "dress" ;
lin dress_N = mkN "dress" "dresses";
lin dress_V = mkV "dress" "dresses" "dressed" "dressed" "dressing";
lin dress_V2 = mkV2 (mkV "dress" "dresses" "dressed" "dressed" "dressing");
lin dress_hanger_N = mkN "dress-hanger" "dress-hangers";
lin dressage_N = mkN "dressage" ;
lin dresser_N = mkN "dresser" "dressers";
lin dressing_N = mkN "dressing" "dressings";
lin dressing_case_N = mkN "dressing-case" "dressing-cases";
lin dressing_down_N = mkN "dressing-down";
lin dressing_gown_N = mkN "dressing-gown" "dressing-gowns";
lin dressing_table_N = mkN "dressing-table" "dressing-tables";
lin dressmaker_N = mkN "dressmaker" "dressmakers";
lin dressmaking_N = mkN "dressmaking" ;
lin dressy_A = mkA "dressy" "dressier";
lin drey_N = mkN "drey" ;
lin dribble_N = mkN "dribble" ;
lin dribble_V = mkV "dribble" "dribbles" "dribbled" "dribbled" "dribbling";
lin dribble_V2 = mkV2 (mkV "dribble" "dribbles" "dribbled" "dribbled" "dribbling");
lin dribbler_N = mkN "dribbler" "dribblers";
lin driblet_N = mkN "driblet" "driblets";
lin drier_N = mkN "drier" "driers";
lin driffield_PN = mkPN "Driffield";
lin drift_N = mkN "drift" "drifts";
lin drift_V = mkV "drift" "drifts" "drifted" "drifted" "drifting";
lin drift_V2 = mkV2 (mkV "drift" "drifts" "drifted" "drifted" "drifting");
lin drift_ice_N = mkN "drift-ice" ;
lin drift_net_N = mkN "drift-net" "drift-nets";
lin drift_wood_N = mkN "drift-wood" ;
lin driftage_N = mkN "driftage" ;
lin drifter_N = mkN "drifter" "drifters";
lin driftfish_N = mkN "driftfish" ;
lin drifting_N = mkN "drifting" ;
lin driftwood_N = mkN "driftwood" ;
lin drill_N = mkN "drill" "drills";
lin drill_V = mkV "drill" "drills" "drilled" "drilled" "drilling";
lin drill_V2 = mkV2 (mkV "drill" "drills" "drilled" "drilled" "drilling");
lin drilling_N = mkN "drilling" ;
lin drink_N = mkN "drink" "drinks";
lin drink_V = IrregEng.drink_V;
lin drink_V2 = mkV2 (IrregEng.drink_V);
lin drinkable_A = compoundA (mkA "drinkable");
lin drinker_N = mkN "drinker" "drinkers";
lin drinking_N = mkN "drinking" ;
lin drinking_bout_N = mkN "drinking-bout" "drinking-bouts";
lin drinking_fountain_N = mkN "drinking-fountain" "drinking-fountains";
lin drinking_song_N = mkN "drinking-song" "drinking-songs";
lin drinking_water_N = mkN "drinking-water" ;
lin drip_N = mkN "drip" "drips";
lin drip_V = mkV "drip" "drips" "dripped" "dripped" "dripping";
lin drip_V2 = mkV2 (mkV "drip" "drips" "dripped" "dripped" "dripping");
lin drip_dry_A = compoundA (mkA "drip-dry");
lin drip_dry_V2 = mkV2 (mkV "drip-dry" "drip-dries" "drip-dried" "drip-dried" "drip-drying");
lin dripless_A = mkA "dripless" ;
lin drippiness_N = mkN "drippiness" ;
lin dripping_N = mkN "dripping" ;
lin dripping_pan_N = mkN "dripping-pan" "dripping-pans";
lin drippings_N = mkN "drippings" ;
lin drippy_A = mkA "drippy" ;
lin dripstone_N = mkN "dripstone" ;
lin drive_N = mkN "drive" "drives";
lin drive_V = IrregEng.drive_V;
lin drive_V2 = mkV2 (IrregEng.drive_V);
lin drive_V2V = mkV2V (IrregEng.drive_V) noPrep to_Prep ;
lin drive_VS = mkVS (IrregEng.drive_V);
lin drive_in_N = mkN "drive-in" "drive-ins";
lin drivel_N = mkN "drivel" ;
lin drivel_V = mkV "drivel" "drivels" "drivelled" "drivelled" "drivelling";
lin driveller_N = mkN "driveller" "drivellers";
lin driver_N = mkN "driver" "drivers";
lin driverMasc_N = mkN masculine (mkN "driver" "drivers");
lin driverFem_N = mkN feminine (mkN "driver" "drivers");
lin driveshaft_N = mkN "driveshaft" ;
lin driveway_N = mkN "driveway" "driveways";
lin driving_N = mkN "driving" ;
lin driving_belt_N = mkN "driving-belt" "driving-belts";
lin driving_wheel_N = mkN "driving-wheel" "driving-wheels";
lin drizzle_N = mkN "drizzle" ;
lin drizzle_V = mkV "drizzle" "drizzles" "drizzled" "drizzled" "drizzling";
lin drizzly_A = compoundA (mkA "drizzly");
lin drogheda_PN = mkPN "Drogheda";
lin drogue_N = mkN "drogue" "drogues";
lin droitwich_PN = mkPN "Droitwich";
lin droll_A = compoundA (mkA "droll");
lin drollery_N = mkN "drollery" "drolleries";
lin dromaeosaur_N = mkN "dromaeosaur" ;
lin dromedary_N = mkN "dromedary" "dromedaries";
lin dronabinol_N = mkN "dronabinol" ;
lin drone_N = mkN "drone" "drones";
lin drone_V = mkV "drone" "drones" "droned" "droned" "droning";
lin drone_V2 = mkV2 (mkV "drone" "drones" "droned" "droned" "droning");
lin dronfield_PN = mkPN "Dronfield";
lin drool_N = mkN "drool" ;
lin drool_V = mkV "drool" "drools" "drooled" "drooled" "drooling";
lin droop_N = mkN "droop";
lin droop_V = mkV "droop" "droops" "drooped" "drooped" "drooping";
lin droop_V2 = mkV2 (mkV "droop" "droops" "drooped" "drooped" "drooping");
lin droopingly_Adv = mkAdv "droopingly";
lin drop_N = mkN "drop" "drops";
lin drop_V = mkV "drop" "drops" "dropped" "dropped" "dropping";
lin drop_V2 = mkV2 (mkV "drop" "drops" "dropped" "dropped" "dropping");
lin drop_curtain_N = mkN "drop-curtain" "drop-curtains";
lin drop_kick_N = mkN "drop-kick" "drop-kicks";
lin dropkick_N = mkN "dropkick" ;
lin dropkicker_N = mkN "dropkicker" ;
lin droplet_N = mkN "droplet" ;
lin dropline_N = mkN "dropline" ;
lin dropout_N = mkN "dropout" "dropouts";
lin dropper_N = mkN "dropper" ;
lin dropping_zone_N = mkN "dropping-zone" "dropping-zones";
lin droppings_N = mkN "droppings" ;
lin dropseed_N = mkN "dropseed" ;
lin dropsical_A = compoundA (mkA "dropsical");
lin dropsy_N = mkN "dropsy" ;
lin droshky_N = mkN "droshky" "droshkies";
lin drosophila_N = mkN "drosophila" ;
lin dross_N = mkN "dross" ;
lin drought_N = mkN "drought" "droughts";
lin drove_N = mkN "drove" "droves";
lin drover_N = mkN "drover" "drovers";
lin drown_V = mkV "drown" "drowns" "drowned" "drowned" "drowning";
lin drown_V2 = mkV2 (mkV "drown" "drowns" "drowned" "drowned" "drowning");
lin drowse_N = mkN "drowse";
lin drowse_V = mkV "drowse" "drowses" "drowsed" "drowsed" "drowsing";
lin drowse_V2 = mkV2 (mkV "drowse" "drowses" "drowsed" "drowsed" "drowsing");
lin drowsiness_N = mkN "drowsiness" ;
lin drowsy_A = mkA "drowsy" "drowsier";
lin drub_V2 = mkV2 (mkV "drub" "drubs" "drubbed" "drubbed" "drubbing");
lin drubbing_N = mkN "drubbing" "IRREG";
lin drudge_N = mkN "drudge" "drudges";
lin drudge_V = mkV "drudge" "drudges" "drudged" "drudged" "drudging";
lin drudgery_N = mkN "drudgery" ;
lin drug_N = mkN "drug" "drugs";
lin drug_V2 = mkV2 (mkV "drug" "drugs" "drugged" "drugged" "drugging");
lin drugget_N = mkN "drugget" "druggets";
lin druggist_N = mkN "druggist" "druggists";
lin drugless_A = mkA "drugless" ;
lin drugstore_N = mkN "drugstore" "drugstores";
lin druid_N = mkN "druid" "druids";
lin druidism_N = mkN "druidism" ;
lin drum_N = mkN "drum" "drums";
lin drum_V = mkV "drum" "drums" "drummed" "drummed" "drumming";
lin drum_V2 = mkV2 (mkV "drum" "drums" "drummed" "drummed" "drumming");
lin drum_major_N = mkN "drum-major" "drum-majors";
lin drum_majorette_N = mkN "drum-majorette" "drum-majorettes";
lin drumbeat_N = mkN "drumbeat" ;
lin drumfire_N = mkN "drumfire" ;
lin drumhead_A = compoundA (mkA "drumhead");
lin drumhead_N = mkN "drumhead" ;
lin drumlin_N = mkN "drumlin" ;
lin drummer_N = mkN "drummer" "drummers";
lin drumming_N = mkN "drumming" ;
lin drumstick_N = mkN "drumstick" "drumsticks";
lin drunk_A = mkA "drunk";
lin drunk_N = mkN "drunk" "drunks";
lin drunkard_N = mkN "drunkard" "drunkards";
lin drunken_A = compoundA (mkA "drunken");
lin drunkenness_N = mkN "drunkenness" ;
lin drupaceous_A = mkA "drupaceous" ;
lin drupe_N = mkN "drupe" "drupes";
lin drupelet_N = mkN "drupelet" ;
lin drusen_N = mkN "drusen" ;
lin dry_A = mkA "dry" "drier";
lin dry_N = mkN "dry" ;
lin dry_V = mkV "dry" "dries" "dried" "dried" "drying";
lin dry_V2 = mkV2 (mkV "dry" "dries" "dried" "dried" "drying");
lin dry_clean_V2 = mkV2 (mkV "dry-clean" "dry-cleans" "dry-cleaned" "dry-cleaned" "dry-cleaning");
lin dry_cleaner_N = mkN "dry-cleaner" "dry-cleaners";
lin dry_cleaning_N = mkN "dry-cleaning" ;
lin dry_shod_A = compoundA (mkA "dry-shod");
lin dry_walling_N = mkN "dry-walling" ;
lin dryad_N = mkN "dryad" "dryads";
lin dryer_N = mkN "dryer" "dryers";
lin drygoods_N = mkN "drygoods" ;
lin dryness_N = mkN "dryness" ;
lin dryopithecine_N = mkN "dryopithecine" ;
lin drypis_N = mkN "drypis" ;
lin dsc_N = mkN "dsc" ;
lin dscdna_N = mkN "dscDNA" ;
lin dss_N = mkN "dss" ;
lin dti_N = mkN "dti" ;
lin dual_A = compoundA (mkA "dual");
lin dualism_N = mkN "dualism" ;
lin dualist_N = mkN "dualist" ;
lin dualistic_A = mkA "dualistic" ;
lin duality_N = mkN "duality" ;
lin dub_N = mkN "dub" ;
lin dub_V2 = mkV2 (mkV "dub" "dubs" "dubbed" "dubbed" "dubbing");
lin dub_V3 = mkV3 (mkV "dub" "dubs" "dubbed" "dubbed" "dubbing");
lin dubbin_N = mkN "dubbin" ;
lin dubbing_N = mkN "dubbing" ;
lin dubiety_N = mkN "dubiety" "dubieties";
lin dubious_A = compoundA (mkA "dubious");
lin dubiousness_N = mkN "dubiousness" ;
lin dublin_PN = mkPN "Dublin";
lin dubliner_N = mkN "dubliner" "dubliners";
lin dubnium_N = mkN "dubnium" ;
lin ducal_A = compoundA (mkA "ducal");
lin ducat_N = mkN "ducat" "ducats";
lin duce_N = mkN "duce" "duci";
lin duchess_N = mkN "duchess" "duchesses";
lin duchy_N = mkN "duchy" "duchies";
lin duck_N = mkN "duck" "duck";
lin duck_V = mkV "duck" "ducks" "ducked" "ducked" "ducking";
lin duck_V2 = mkV2 (mkV "duck" "ducks" "ducked" "ducked" "ducking");
lin duckbill_A = mkA "duckbill" ;
lin duckbilled_A = compoundA (mkA "duckbilled");
lin duckboard_N = mkN "duckboard" ;
lin ducking_N = mkN "ducking" "duckings";
lin ducking_stool_N = mkN "ducking-stool" "ducking-stools";
lin duckling_N = mkN "duckling" "ducklings";
lin duckpin_N = mkN "duckpin" ;
lin duckpins_N = mkN "duckpins" ;
lin duckweed_N = mkN "duckweed" ;
lin ducky_N = mkN "ducky" "duckies";
lin duct_N = mkN "duct" "ducts";
lin ductile_A = compoundA (mkA "ductile");
lin ductility_N = mkN "ductility" ;
lin ductless_A = mkA "ductless" ;
lin ductule_N = mkN "ductule" ;
lin dud_A = compoundA (mkA "dud");
lin dud_N = mkN "dud" "duds";
lin dude_N = mkN "dude" "dudes";
lin dudeen_N = mkN "dudeen" ;
lin dudgeon_N = mkN "dudgeon" ;
lin dudley_PN = mkPN "Dudley";
lin due_A = compoundA (mkA "due");
lin due_Adv = mkAdv "due";
lin due_N = mkN "due" "dues";
lin duel_N = mkN "duel" "duels";
lin duel_V = mkV "duel" "duels" "duelled" "duelled" "duelling";
lin dueler_N = mkN "dueler" ;
lin duelist_N = mkN "duelist" "duelists";
lin duellist_N = mkN "duellist" "duellists";
lin duenna_N = mkN "duenna" "duennas";
lin duet_N = mkN "duet" "duets";
lin duff_N = mkN "duff" ;
lin duffel_N = mkN "duffel" ;
lin duffer_N = mkN "duffer" "duffers";
lin duffle_N = mkN "duffle" ;
lin dug_N = mkN "dug" "dugs";
lin dugong_N = mkN "dugong" "dugongs";
lin dugout_N = mkN "dugout" "dugouts";
lin duisburg_PN = mkPN "Duisburg";
lin duke_N = mkN "duke" "dukes";
lin dukedom_N = mkN "dukedom" "dukedoms";
lin dukinfield_PN = mkPN "Dukinfield";
lin dulcet_A = compoundA (mkA "dulcet");
lin dulciana_N = mkN "dulciana" ;
lin dulcimer_N = mkN "dulcimer" "dulcimers";
lin dull_A = mkA "dull" "duller";
lin dull_V = mkV "dull" "dulls" "dulled" "dulled" "dulling";
lin dull_V2 = mkV2 (mkV "dull" "dulls" "dulled" "dulled" "dulling");
lin dullard_N = mkN "dullard" "dullards";
lin dullness_N = mkN "dullness" ;
lin dulse_N = mkN "dulse" ;
lin duly_AdV = mkAdV "duly";
lin dumb_A = mkA "dumb" "dumber";
lin dumbarton_PN = mkPN "Dumbarton";
lin dumbbell_N = mkN "dumbbell" "dumbbells";
lin dumbfound_V2 = mkV2 (mkV "dumbfound" "dumbfounds" "dumbfounded" "dumbfounded" "dumbfounding");
lin dumbness_N = mkN "dumbness" ;
lin dumbwaiter_N = mkN "dumbwaiter" "dumbwaiters";
lin dumdum_N = mkN "dumdum" "dumdums";
lin dumfries_PN = mkPN "Dumfries";
lin dummy_A = mkA "dummy" ;
lin dummy_N = mkN human (mkN "dummy" "dummies");
lin dump_N = mkN "dump" "dumps";
lin dump_V = mkV "dump";
lin dump_V2 = mkV2 (mkV "dump" "dumps" "dumped" "dumped" "dumping");
lin dumpcart_N = mkN "dumpcart" ;
lin dumper_N = mkN "dumper" "dumpers";
lin dumpiness_N = mkN "dumpiness" ;
lin dumping_N = mkN "dumping" ;
lin dumpling_N = mkN "dumpling" "dumplings";
lin dumps_N = mkN "dumps" ;
lin dumpy_A = mkA "dumpy" "dumpier";
lin dun_A = compoundA (mkA "dun");
lin dun_N = mkN "dun" "duns";
lin dun_V2 = mkV2 (mkV "dun" "duns" "dunned" "dunned" "dunning");
lin dun_laoghaire_PN = mkPN "Dun laoghaire";
lin duncan_PN = mkPN "Duncan";
lin dunce_N = mkN "dunce" "dunces";
lin dundalk_PN = mkPN "Dundalk";
lin dundee_PN = mkPN "Dundee";
lin dunderhead_N = mkN "dunderhead" "dunderheads";
lin dune_N = mkN "dune" "dunes";
lin dunfermline_PN = mkPN "Dunfermline";
lin dung_N = mkN "dung" ;
lin dungeon_N = mkN "dungeon" "dungeons";
lin dunghill_N = mkN "dunghill" "dunghills";
lin dunk_N = mkN "dunk" ;
lin dunk_V2 = mkV2 (mkV "dunk" "dunks" "dunked" "dunked" "dunking");
lin dunker_N = mkN "dunker" ;
lin dunkirk_PN = mkPN "Dunkirk";
lin dunoon_PN = mkPN "Dunoon";
lin dunstable_PN = mkPN "Dunstable";
lin duodecimal_A = compoundA (mkA "duodecimal");
lin duodenal_A = compoundA (mkA "duodenal");
lin duodenum_N = mkN "duodenum" "duodenums";
lin duologue_N = mkN "duologue" "duologues";
lin dupe_N = mkN "dupe" "dupes";
lin dupe_V2 = mkV2 (mkV "dupe" "dupes" "duped" "duped" "duping");
lin dupl_PN = mkPN "Dupl";
lin duplex_A = compoundA (mkA "duplex");
lin duplicable_A = mkA "duplicable" ;
lin duplicate_A = compoundA (mkA "duplicate");
lin duplicate_N = mkN "duplicate" "duplicates";
lin duplicate_V2 = mkV2 (mkV "duplicate" "duplicates" "duplicated" "duplicated" "duplicating");
lin duplication_N = mkN "duplication" "duplications";
lin duplicator_N = mkN "duplicator" "duplicators";
lin duplicity_N = mkN "duplicity" ;
lin durability_N = mkN "durability" ;
lin durable_A = compoundA (mkA "durable");
lin durable_N = mkN "durable" "durables";
lin durables_N = mkN "durables" ;
lin dural_A = mkA "dural" ;
lin durance_N = mkN "durance" ;
lin duration_N = mkN "duration" "durations";
lin durative_N = mkN "durative" ;
lin durban_PN = mkPN "Durban";
lin durbar_N = mkN "durbar" "durbars";
lin duress_N = mkN "duress" ;
lin durham_PN = mkPN "Durham";
lin durian_N = mkN "durian" ;
lin during_Prep = mkPrep "during";
lin durmast_N = mkN "durmast" ;
lin durra_N = mkN "durra" ;
lin durrington_PN = mkPN "Durrington";
lin dursley_PN = mkPN "Dursley";
lin durum_N = mkN "durum" ;
lin dusk_N = mkN "dusk" ;
lin dusky_A = mkA "dusky" "duskier";
lin dusseldorf_PN = mkPN "Dusseldorf";
lin dust_N = mkN "dust" ;
lin dust_V2 = mkV2 (mkV "dust" "dusts" "dusted" "dusted" "dusting");
lin dust_bowl_N = mkN "dust-bowl" "dust-bowls";
lin dust_coat_N = mkN "dust-coat" "dust-coats";
lin dust_jacket_N = mkN "dust-jacket" "dust-jackets";
lin dust_sheet_N = mkN "dust-sheet" "dust-sheets";
lin dust_up_N = mkN "dust-up" "dust-ups";
lin dust_wrapper_N = mkN "dust-wrapper" "dust-wrappers";
lin dustbin_N = mkN "dustbin" "dustbins";
lin dustcart_N = mkN "dustcart" "dustcarts";
lin dustcloth_N = mkN "dustcloth" ;
lin duster_N = mkN "duster" "dusters";
lin dustiness_N = mkN "dustiness" ;
lin dustlike_A = mkA "dustlike" ;
lin dustman_N = mkN masculine (mkN "dustman" "dustmen");
lin dustmop_N = mkN "dustmop" ;
lin dustpan_N = mkN "dustpan" "dustpans";
lin dusty_A = mkA "dusty" "dustier";
lin dutch_A = compoundA (mkA "Dutch");
lin dutch_N = mkN "Dutch" "Dutch";
lin dutchman_N = mkN masculine (mkN "dutchman" "dutchmen");
lin duteous_A = compoundA (mkA "duteous");
lin dutiable_A = compoundA (mkA "dutiable");
lin dutiful_A = compoundA (mkA "dutiful");
lin dutifulness_N = mkN "dutifulness" ;
lin duty_N = mkN "duty" "duties";
lin duty_free_A = compoundA (mkA "duty-free");
lin duvet_N = mkN "duvet" "duvets";
lin dwarf_N = mkN "dwarf" "dwarfs";
lin dwarf_V2 = mkV2 (mkV "dwarf" "dwarfs" "dwarfed" "dwarfed" "dwarfing");
lin dwarfish_A = compoundA (mkA "dwarfish");
lin dwarfishness_N = mkN "dwarfishness" ;
lin dwarfism_N = mkN "dwarfism" ;
lin dwell_V = variants {mkV "dwell" "dwells" "dwelt" "dwelt" "dwelling"; mkV "dwell" "dwells" "dwelled" "dwelled" "dwelling"};
lin dweller_N = mkN "dweller" "dwellers";
lin dwelling_N = mkN "dwelling" "dwellings";
lin dwelling_house_N = mkN "dwelling-house" "dwelling-houses";
lin dwindle_V = mkV "dwindle" "dwindles" "dwindled" "dwindled" "dwindling";
lin dwindling_N = mkN "dwindling" ;
lin dyadic_A = mkA "dyadic" ;
lin dyarchy_N = mkN "dyarchy" "dyarchies";
lin dybbuk_N = mkN "dybbuk" ;
lin dye_N = mkN "dye" "dyes";
lin dye_V = mkV "dye" "dyes" "dyed" "dyed" "dying";
lin dye_V2 = mkV2 (mkV "dye" "dyes" "dyed" "dyed" "dying");
lin dye_works_N = mkN "dye-works" "dye-works";
lin dyed_in_the_wool_A = compoundA (mkA "dyed-in-the-wool");
lin dyeing_N = mkN "dyeing" ;
lin dyer_N = mkN "dyer" "dyers";
lin dyestuff_N = mkN "dyestuff" "dyestuffs";
lin dyewood_N = mkN "dyewood" ;
lin dyfed_PN = mkPN "Dyfed";
lin dyke_N = mkN "dyke" "dykes";
lin dyke_V = mkV "dyke" "dykes" "dyked" "dyked" "dyking";
lin dyke_V2 = mkV2 (mkV "dyke" "dykes" "dyked" "dyked" "dyking");
lin dynamic_A = compoundA (mkA "dynamic");
lin dynamic_N = mkN "dynamic" "dynamics";
lin dynamically_Adv = mkAdv "dynamically";
lin dynamics_N = mkN "dynamics" ;
lin dynamism_N = mkN "dynamism" ;
lin dynamite_N = mkN "dynamite" ;
lin dynamite_V2 = mkV2 (mkV "dynamite" "dynamites" "dynamited" "dynamited" "dynamiting");
lin dynamiter_N = mkN "dynamiter" ;
lin dynamo_N = mkN "dynamo" "dynamos";
lin dynamometer_N = mkN "dynamometer" ;
lin dynast_N = mkN "dynast" "dynasts";
lin dynastic_A = compoundA (mkA "dynastic");
lin dynasty_N = mkN "dynasty" "dynasties";
lin dyne_N = mkN "dyne" "dynes";
lin dysaphia_N = mkN "dysaphia" ;
lin dysarthria_N = mkN "dysarthria" ;
lin dyscalculia_N = mkN "dyscalculia" ;
lin dyschezia_N = mkN "dyschezia" ;
lin dyscrasia_N = mkN "dyscrasia" ;
lin dysentery_N = mkN "dysentery" ;
lin dysfunction_N = mkN "dysfunction" ;
lin dysfunctional_A = mkA "dysfunctional" ;
lin dysgenesis_N = mkN "dysgenesis" ;
lin dysgenic_A = mkA "dysgenic" ;
lin dysgenics_N = mkN "dysgenics" ;
lin dysgraphia_N = mkN "dysgraphia" ;
lin dyskinesia_N = mkN "dyskinesia" ;
lin dyslectic_A = mkA "dyslectic" ;
lin dyslectic_N = mkN "dyslectic" ;
lin dyslexia_N = mkN "dyslexia" ;
lin dyslexic_A = compoundA (mkA "dyslexic");
lin dyslogia_N = mkN "dyslogia" ;
lin dyslogistic_A = mkA "dyslogistic" ;
lin dysmenorrhea_N = mkN "dysmenorrhea" ;
lin dysomia_N = mkN "dysomia" ;
lin dysosmia_N = mkN "dysosmia" ;
lin dyspepsia_N = mkN "dyspepsia" ;
lin dyspeptic_A = compoundA (mkA "dyspeptic");
lin dyspeptic_N = mkN "dyspeptic" "dyspeptics";
lin dysphagia_N = mkN "dysphagia" ;
lin dysphasia_N = mkN "dysphasia" ;
lin dysphemism_N = mkN "dysphemism" ;
lin dysphemistic_A = mkA "dysphemistic" ;
lin dysphonia_N = mkN "dysphonia" ;
lin dysphoria_N = mkN "dysphoria" ;
lin dysphoric_A = mkA "dysphoric" ;
lin dysplasia_N = mkN "dysplasia" ;
lin dysplastic_A = mkA "dysplastic" ;
lin dyspnea_N = mkN "dyspnea" ;
lin dysprosium_N = mkN "dysprosium" ;
lin dysthymia_N = mkN "dysthymia" ;
lin dystopia_N = mkN "dystopia" ;
lin dystopian_A = mkA "dystopian" ;
lin dystrophy_N = mkN "dystrophy" ;
lin dysuria_N = mkN "dysuria" ;
lin e'en_Adv = mkAdv "e'en";
lin e'er_Adv = mkAdv "e'er";
lin e_mail_N = mkN "e-mail";
lin each_Adv = mkAdv "each";
lin each_Det = mkDeterminer singular "each";
lin eager_A = compoundA (mkA "eager");
lin eagerness_N = mkN "eagerness" ;
lin eagle_N = mkN "eagle" "eagles";
lin eagle_eyed_A = compoundA (mkA "eagle-eyed");
lin eaglescliffe_PN = mkPN "Eaglescliffe";
lin eaglet_N = mkN "eaglet" "eaglets";
lin ealing_PN = mkPN "Ealing";
lin ear_N = mkN "ear" "ears";
lin ear_trumpet_N = mkN "ear-trumpet" "ear-trumpets";
lin earache_N = mkN "earache" "earaches";
lin eardrop_N = mkN "eardrop" "eardrops";
lin eardrum_N = mkN "eardrum" "eardrums";
lin eared_A = mkA "eared" ;
lin earflap_N = mkN "earflap" ;
lin earful_N = mkN "earful" "earfuls";
lin earl_N = mkN "earl" "earls";
lin earl_shilton_PN = mkPN "Earl shilton";
lin earldom_N = mkN "earldom" "earldoms";
lin earless_A = mkA "earless" ;
lin earlier_A = mkA "earlier" ;
lin earlier_Adv = mkAdv "earlier" ;
lin earliness_N = mkN "earliness" ;
lin earlobe_N = mkN "earlobe" ;
lin early_A = mkA "early" "earlier";
lin early_Adv = mkAdv "early";
lin early_on_Adv = mkAdv "early on";
lin early_warning_A = compoundA (mkA "early-warning");
lin earlyish_A = mkA "earlyish" ;
lin earmark_N = mkN "earmark" "earmarks";
lin earmark_V2 = mkV2 (mkV "earmark" "earmarks" "earmarked" "earmarked" "earmarking");
lin earmuff_N = mkN "earmuff" ;
lin earn_V = mkV "earn";
lin earn_V2 = mkV2 (mkV "earn" "earns" "earned" "earned" "earning");
lin earn_VA = mkVA (mkV "earn");
lin earner_N = mkN "earner" ;
lin earnest_A = compoundA (mkA "earnest");
lin earnest_N = mkN "earnest" ;
lin earnest_money_N = mkN "earnest-money" ;
lin earnestness_N = mkN "earnestness" ;
lin earphone_N = mkN "earphone" "earphones";
lin earpiece_N = mkN "earpiece" "earpieces";
lin earplug_N = mkN "earplug" ;
lin earring_N = mkN "earring" "earrings";
lin earshot_N = mkN "earshot" ;
lin earth_N = mkN "earth" ;
lin earth_V2 = mkV2 (mkV "earth" "earths" "earthed" "earthed" "earthing");
lin earth_closet_N = mkN "earth-closet" "earth-closets";
lin earthball_N = mkN "earthball" ;
lin earthborn_A = mkA "earthborn" ;
lin earthbound_A = mkA "earthbound" ;
lin earthen_A = compoundA (mkA "earthen");
lin earthenware_N = mkN "earthenware" ;
lin earthlike_A = mkA "earthlike" ;
lin earthly_A = compoundA (mkA "earthly");
lin earthnut_N = mkN "earthnut" "earthnuts";
lin earthquake_N = mkN "earthquake" "earthquakes";
lin earthshaking_A = mkA "earthshaking" ;
lin earthstar_N = mkN "earthstar" ;
lin earthtongue_N = mkN "earthtongue" ;
lin earthwork_N = mkN "earthwork" "earthworks";
lin earthworm_N = mkN "earthworm" "earthworms";
lin earthy_A = mkA "earthy" "earthier";
lin earwax_N = mkN "earwax" ;
lin earwig_N = mkN "earwig" "earwigs";
lin ease_N = mkN "ease" ;
lin ease_V = mkV "ease" "eases" "eased" "eased" "easing";
lin ease_V2 = mkV2 (mkV "ease" "eases" "eased" "eased" "easing");
lin easel_N = mkN "easel" "easels";
lin easement_N = mkN "easement" ;
lin easiness_N = mkN "easiness" ;
lin easing_N = mkN "easing" ;
lin easington_PN = mkPN "Easington";
lin east_A = mkA "East";
lin east_Adv = mkAdv "East";
lin east_N = mkN "East" ;
lin east_dereham_PN = mkPN "East dereham";
lin east_grinstead_PN = mkPN "East grinstead";
lin east_kilbride_PN = mkPN "East kilbride";
lin east_retford_PN = mkPN "East retford";
lin eastbound_A = mkA "eastbound" ;
lin eastbourne_PN = mkPN "Eastbourne";
lin easter_N = mkN "easter" "easters";
lin easter_PN = mkPN "Easter";
lin easterly_A = compoundA (mkA "easterly");
lin easterly_Adv = mkAdv "easterly";
lin eastern_A = compoundA (mkA "Eastern");
lin easterner_N = mkN "easterner" ;
lin easternmost_A = compoundA (mkA "easternmost");
lin eastleigh_PN = mkPN "Eastleigh";
lin eastside_A = mkA "eastside" ;
lin eastward_A = compoundA (mkA "eastward");
lin eastward_Adv = mkAdv "eastward";
lin eastwards_Adv = mkAdv "eastwards";
lin easy_A = mkA "easy" "easier";
lin easy_Adv = mkAdv "easy";
lin easy_V2V = mkV2V (mkV "easy") noPrep to_Prep ;
lin easygoing_A = compoundA (mkA "easygoing");
lin easygoingness_N = mkN "easygoingness" ;
lin eat_V = IrregEng.eat_V;
lin eat_V2 = mkV2 (IrregEng.eat_V);
lin eatable_A = compoundA (mkA "eatable");
lin eatable_N = mkN "eatable" "eatables";
lin eatage_N = mkN "eatage" ;
lin eater_N = mkN "eater" "eaters";
lin eating_N = mkN "eating" ;
lin eating_apple_N = mkN "eating-apple" "eating-apples";
lin eating_house_N = mkN "eating-house" "eating-houses";
lin eau_de_cologne_N = mkN "eau de cologne" ;
lin eau_de_vie_N = mkN "eau-de-vie" ;
lin eaves_N = mkN "eaves" ;
lin eavesdrop_V = mkV "eavesdrop" "eavesdrops" "eavesdropped" "eavesdropped" "eavesdropping";
lin eavesdropper_N = mkN "eavesdropper" "eavesdroppers";
lin ebb_N = mkN "ebb" "ebbs";
lin ebb_V = mkV "ebb" "ebbs" "ebbed" "ebbed" "ebbing";
lin ebbtide_N = mkN "ebbtide" "ebbtides";
lin ebbw_vale_PN = mkPN "Ebbw vale";
lin eblis_N = mkN "eblis" ;
lin ebon_A = mkA "ebon" ;
lin ebonite_N = mkN "ebonite" ;
lin ebony_A = compoundA (mkA "ebony");
lin ebony_N = mkN "ebony" ;
lin ebracteate_A = mkA "ebracteate" ;
lin ebullience_N = mkN "ebullience" ;
lin ebullient_A = compoundA (mkA "ebullient");
lin eburnation_N = mkN "eburnation" ;
lin ec_N = mkN "ec" ;
lin ecarte_N = mkN "ecarte" ;
lin eccentric_A = compoundA (mkA "eccentric");
lin eccentric_N = mkN "eccentric" "eccentrics";
lin eccentrically_Adv = mkAdv "eccentrically" ;
lin eccentricity_N = mkN "eccentricity" "eccentricities";
lin ecchymosis_N = mkN "ecchymosis" ;
lin eccles_PN = mkPN "Eccles";
lin ecclesiastic_N = mkN "ecclesiastic" "ecclesiastics";
lin ecclesiastical_A = compoundA (mkA "ecclesiastical");
lin ecclesiasticism_N = mkN "ecclesiasticism" ;
lin ecclesiology_N = mkN "ecclesiology" ;
lin eccrine_A = mkA "eccrine" ;
lin ecdemic_A = mkA "ecdemic" ;
lin echelon_N = mkN "echelon" "echelons";
lin echidna_N = mkN "echidna" ;
lin echinocactus_N = mkN "echinocactus" ;
lin echinococcosis_N = mkN "echinococcosis" ;
lin echinococcus_N = mkN "echinococcus" ;
lin echinoderm_N = mkN "echinoderm" ;
lin echinus_N = mkN "echinus" ;
lin echo_N = mkN "echo" "echoes";
lin echo_V = mkV "echo" "echos" "echoed" "echoed" "echoing";
lin echo_V2 = mkV2 (mkV "echo" "echos" "echoed" "echoed" "echoing");
lin echo_sounder_N = mkN "echo-sounder" "echo-sounders";
lin echo_sounding_N = mkN "echo-sounding" "echo-soundings";
lin echocardiogram_N = mkN "echocardiogram" ;
lin echocardiograph_N = mkN "echocardiograph" ;
lin echocardiography_N = mkN "echocardiography" ;
lin echoencephalogram_N = mkN "echoencephalogram" ;
lin echoencephalograph_N = mkN "echoencephalograph" ;
lin echoencephalography_N = mkN "echoencephalography" ;
lin echoic_A = mkA "echoic" ;
lin echolalia_N = mkN "echolalia" ;
lin echoless_A = mkA "echoless" ;
lin echolocation_N = mkN "echolocation" ;
lin echovirus_N = mkN "echovirus" ;
lin eclair_N = mkN "éclair" "éclairs";
lin eclampsia_N = mkN "eclampsia" ;
lin eclat_N = mkN "éclat" ;
lin eclectic_A = compoundA (mkA "eclectic");
lin eclectic_N = mkN "eclectic" ;
lin eclecticism_N = mkN "eclecticism" ;
lin eclipse_N = mkN "eclipse" "eclipses";
lin eclipse_V2 = mkV2 (mkV "eclipse" "eclipses" "eclipsed" "eclipsed" "eclipsing");
lin ecliptic_N = mkN "ecliptic" "ecliptics";
lin eclogue_N = mkN "eclogue" ;
lin ecobabble_N = mkN "ecobabble" ;
lin ecological_A = compoundA (mkA "ecological");
lin ecologist_N = mkN "ecologist" "ecologists";
lin ecology_N = mkN "ecology" ;
lin econometric_A = mkA "econometric" ;
lin econometrician_N = mkN "econometrician" ;
lin econometrics_N = mkN "econometrics" ;
lin economic_A = compoundA (mkA "economic");
lin economical_A = compoundA (mkA "economical");
lin economics_N = mkN "economics" "economics";
lin economist_N = mkN "economist" "economists";
lin economize_V = mkV "economize" "economizes" "economized" "economized" "economizing";
lin economize_V2 = mkV2 (mkV "economize" "economizes" "economized" "economized" "economizing");
lin economizer_N = mkN "economizer" ;
lin economy_N = mkN "economy" "economies";
lin ecosystem_N = mkN "ecosystem" "ecosystems";
lin ecoterrorism_N = mkN "ecoterrorism" ;
lin ecotourism_N = mkN "ecotourism" ;
lin ecphonesis_N = mkN "ecphonesis" ;
lin ecstasy_N = mkN "ecstasy" "ecstasies";
lin ecstatic_A = compoundA (mkA "ecstatic");
lin ecstatically_Adv = mkAdv "ecstatically";
lin ectasia_N = mkN "ectasia" ;
lin ectoderm_N = mkN "ectoderm" ;
lin ectodermal_A = mkA "ectodermal" ;
lin ectomorph_N = mkN "ectomorph" ;
lin ectomorphic_A = mkA "ectomorphic" ;
lin ectoparasite_N = mkN "ectoparasite" ;
lin ectopia_N = mkN "ectopia" ;
lin ectopic_A = mkA "ectopic" ;
lin ectoplasm_N = mkN "ectoplasm" ;
lin ectoproct_N = mkN "ectoproct" ;
lin ectrodactyly_N = mkN "ectrodactyly" ;
lin ecuador_PN = mkPN "Ecuador";
lin ecuadorian_A = compoundA (mkA "ecuadorian");
lin ecuadorian_N = mkN "ecuadorian" "ecuadorians";
lin ecumenic_A = mkA "ecumenic" ;
lin ecumenical_A = compoundA (mkA "ecumenical");
lin ecumenism_N = mkN "ecumenism" ;
lin eczema_N = mkN "eczema" ;
lin ed_PN = mkPN "Ed";
lin edacious_A = mkA "edacious" ;
lin edacity_N = mkN "edacity" ;
lin edaphosaurus_N = mkN "edaphosaurus" ;
lin eddie_PN = mkPN "Eddie";
lin eddy_N = mkN "eddy" "eddies";
lin eddy_PN = mkPN "Eddy";
lin eddy_V = mkV "eddy" "eddies" "eddied" "eddied" "eddying";
lin edelweiss_N = mkN "edelweiss" ;
lin edema_N = mkN "edema" ;
lin edematous_A = mkA "edematous" ;
lin eden_PN = mkPN "Eden";
lin edenbridge_PN = mkPN "Edenbridge";
lin edental_A = mkA "edental" ;
lin edentate_N = mkN "edentate" ;
lin edentulous_A = mkA "edentulous" ;
lin edgar_PN = mkPN "Edgar";
lin edge_N = mkN "edge" "edges";
lin edge_V = mkV "edge" "edges" "edged" "edged" "edging";
lin edge_V2 = mkV2 (mkV "edge" "edges" "edged" "edged" "edging");
lin edgeless_A = mkA "edgeless" ;
lin edger_N = mkN "edger" ;
lin edgeways_Adv = mkAdv "edgeways";
lin edgewise_Adv = mkAdv "edgewise";
lin edginess_N = mkN "edginess" ;
lin edging_N = mkN "edging" "edgings";
lin edgy_A = mkA "edgy" "edgier";
lin edibility_N = mkN "edibility" ;
lin edible_A = compoundA (mkA "edible");
lin edible_N = mkN "edible" "edibles";
lin edict_N = mkN "edict" "edicts";
lin edification_N = mkN "edification" ;
lin edifice_N = mkN "edifice" "edifices";
lin edify_V2 = mkV2 (mkV "edify" "edifies" "edified" "edified" "edifying");
lin edifying_A = mkA "edifying" ;
lin edinburgh_PN = mkPN "Edinburgh";
lin edit_V2 = mkV2 (mkV "edit" "edits" "edited" "edited" "editing");
lin edith_PN = mkPN "Edith";
lin editing_N = mkN "editing" ;
lin edition_N = mkN "edition" "editions";
lin editor_N = mkN "editor" "editors";
lin editorial_A = compoundA (mkA "editorial");
lin editorial_N = mkN "editorial" "editorials";
lin editorship_N = mkN "editorship" ;
lin edmontosaurus_N = mkN "edmontosaurus" ;
lin edmund_PN = mkPN "Edmund";
lin edp_N = mkN "edp" ;
lin educate_V2 = mkV2 (mkV "educate" "educates" "educated" "educated" "educating");
lin education_N = mkN "education" ;
lin educational_A = compoundA (mkA "educational");
lin educationalist_N = mkN "educationalist" "educationalists";
lin educationist_N = mkN "educationist" "educationists";
lin educative_A = mkA "educative" ;
lin educator_N = mkN "educator" "educators";
lin educe_V2 = mkV2 (mkV "educe" "educes" "educed" "educed" "educing");
lin edutainment_N = mkN "edutainment" ;
lin edward_PN = mkPN "Edward";
lin edwardian_A = compoundA (mkA "edwardian");
lin edwardian_N = mkN "edwardian" "edwardians";
lin eec_N = mkN "eec" ;
lin eeg_N = mkN "eeg" ;
lin eel_N = mkN "eel" "eels";
lin eelblenny_N = mkN "eelblenny" ;
lin eelgrass_N = mkN "eelgrass" ;
lin eellike_A = mkA "eellike" ;
lin eelpout_N = mkN "eelpout" ;
lin eelworm_N = mkN "eelworm" ;
lin eerie_A = mkA "eerie" "eerier";
lin eeriness_N = mkN "eeriness" ;
lin eery_A = mkA "eery" "eerier";
lin eff_V = mkV "eff" "effs" "effed" "effed" "effing";
lin efface_V2 = mkV2 (mkV "efface" "effaces" "effaced" "effaced" "effacing");
lin effaceable_A = mkA "effaceable" ;
lin effacement_N = mkN "effacement" ;
lin effect_N = mkN "effect" "effects";
lin effect_V2 = mkV2 (mkV "effect" "effects" "effected" "effected" "effecting");
lin effecter_N = mkN "effecter" ;
lin effective_A = compoundA (mkA "effective");
lin effectiveness_N = mkN "effectiveness" ;
lin effector_N = mkN "effector" ;
lin effects_N = mkN "effects" ;
lin effectual_A = compoundA (mkA "effectual");
lin effectuality_N = mkN "effectuality" ;
lin effectualness_N = mkN "effectualness" ;
lin effeminacy_N = mkN "effeminacy" ;
lin effeminate_A = compoundA (mkA "effeminate");
lin effendi_N = mkN "effendi" "effendis";
lin efferent_A = mkA "efferent" ;
lin effervesce_V = mkV "effervesce" "effervesces" "effervesced" "effervesced" "effervescing";
lin effervescence_N = mkN "effervescence" ;
lin effervescent_A = compoundA (mkA "effervescent");
lin effete_A = compoundA (mkA "effete");
lin effeteness_N = mkN "effeteness" ;
lin efficacious_A = compoundA (mkA "efficacious");
lin efficacy_N = mkN "efficacy" ;
lin efficiency_N = mkN "efficiency" ;
lin efficient_A = compoundA (mkA "efficient");
lin effigy_N = mkN "effigy" "effigies";
lin effleurage_N = mkN "effleurage" ;
lin efflorescence_N = mkN "efflorescence" ;
lin efflorescent_A = compoundA (mkA "efflorescent");
lin effluent_A = mkA "effluent" ;
lin effluent_N = mkN "effluent" "effluents";
lin effluvium_N = mkN "effluvium" ;
lin efflux_N = mkN "efflux" "effluxes";
lin effort_N = mkN "effort" "efforts";
lin effortful_A = mkA "effortful" ;
lin effortfulness_N = mkN "effortfulness" ;
lin effortless_A = compoundA (mkA "effortless");
lin effortlessness_N = mkN "effortlessness" ;
lin effrontery_N = mkN "effrontery" "effronteries";
lin effulgence_N = mkN "effulgence" ;
lin effulgent_A = compoundA (mkA "effulgent");
lin effusion_N = mkN "effusion" "effusions";
lin effusive_A = compoundA (mkA "effusive");
lin effusiveness_N = mkN "effusiveness" ;
lin eft_N = mkN "eft" "efts";
lin efta_N = mkN "efta" ;
lin eg_PN = mkPN "Eg";
lin egad_Interj = ss "egad";
lin egalitarian_A = compoundA (mkA "egalitarian");
lin egalitarian_N = mkN "egalitarian" "egalitarians";
lin egalitarianism_N = mkN "egalitarianism" ;
lin egality_N = mkN "egality" ;
lin egg_N = mkN "egg" "eggs";
lin egg_V2 = mkV2 (mkV "egg" "eggs" "egged" "egged" "egging");
lin egg_beater_N = mkN "egg-beater" "egg-beaters";
lin egg_cup_N = mkN "egg-cup" "egg-cups";
lin egg_whisk_N = mkN "egg-whisk" "egg-whisks";
lin eggar_N = mkN "eggar" ;
lin eggbeater_N = mkN "eggbeater" ;
lin eggcup_N = mkN "eggcup" ;
lin egghead_N = mkN "egghead" "eggheads";
lin eggnog_N = mkN "eggnog" ;
lin eggplant_N = mkN "eggplant" "eggplants";
lin eggshake_N = mkN "eggshake" "eggshakes";
lin eggshell_N = mkN "eggshell" "eggshells";
lin eglantine_N = mkN "eglantine" ;
lin ego_N = mkN "ego" "egos";
lin egocentric_A = compoundA (mkA "egocentric");
lin egocentric_N = mkN "egocentric" ;
lin egoism_N = mkN "egoism" ;
lin egoist_N = mkN "egoist" "egoists";
lin egoistic_A = compoundA (mkA "egoistic");
lin egoistical_A = compoundA (mkA "egoistical");
lin egomania_N = mkN "egomania" ;
lin egomaniac_N = mkN "egomaniac" ;
lin egotism_N = mkN "egotism" ;
lin egotist_N = mkN "egotist" "egotists";
lin egotistic_A = compoundA (mkA "egotistic");
lin egotistically_Adv = mkAdv "egotistically";
lin egotrip_N = mkN "egotrip" "egotrips";
lin egotrip_V = mkV "egotrip" "egotrips" "egotripped" "egotripped" "egotripping";
lin egregious_A = compoundA (mkA "egregious");
lin egremont_PN = mkPN "Egremont";
lin egress_N = mkN "egress" "egresses";
lin egret_N = mkN "egret" "egrets";
lin egypt_PN = mkPN "Egypt";
lin egyptian_A = compoundA (mkA "egyptian");
lin egyptian_N = mkN "egyptian" "egyptians";
lin eiche_PN = mkPN "Eiche";
lin eider_N = mkN "eider" ;
lin eiderdown_N = mkN "eiderdown" "eiderdowns";
lin eidetic_A = mkA "eidetic" ;
lin eidos_N = mkN "eidos" ;
lin eigenvalue_N = mkN "eigenvalue" ;
lin eightpence_N = mkN "eightpence" "eightpences";
lin eightpenny_A = compoundA (mkA "eightpenny");
lin eightsome_N = mkN "eightsome" "eightsomes";
lin eileen_PN = mkPN "Eileen";
lin eindhoven_PN = mkPN "Eindhoven";
lin einsteinium_N = mkN "einsteinium" ;
lin eisegesis_N = mkN "eisegesis" ;
lin eisteddfod_N = mkN "eisteddfod" "eisteddfods";
lin either7or_DConj = mkConj "either" "or" singular ;
lin either_Adv = mkAdv "either";
lin either_Det = mkDeterminer singular "either";
lin ejaculate_V2 = mkV2 (mkV "ejaculate" "ejaculates" "ejaculated" "ejaculated" "ejaculating");
lin ejaculation_N = mkN "ejaculation" "ejaculations";
lin ejaculator_N = mkN "ejaculator" ;
lin eject_V = mkV "eject" "ejects" "ejected" "ejected" "ejecting";
lin eject_V2 = mkV2 (mkV "eject" "ejects" "ejected" "ejected" "ejecting");
lin ejection_N = mkN "ejection" "ejections";
lin ejector_N = mkN "ejector" "ejectors";
lin ejector_seat_N = mkN "ejector-seat" "ejector-seats";
lin eke_V2 = mkV2 (mkV "eke" "ekes" "eked" "eked" "eking");
lin el_dorado_N = mkN "el dorado" "el doradi";
lin el_salvador_PN = mkPN "El Salvador";
lin elaborate_A = compoundA (mkA "elaborate");
lin elaborate_V = mkV "elaborate";
lin elaborate_V2 = mkV2 (mkV "elaborate" "elaborates" "elaborated" "elaborated" "elaborating");
lin elaborateness_N = mkN "elaborateness" ;
lin elaboration_N = mkN "elaboration" "elaborations";
lin elaine_PN = mkPN "Elaine";
lin elan_N = mkN "élan" ;
lin eland_N = mkN "eland" "elands";
lin elapid_N = mkN "elapid" ;
lin elapse_V = mkV "elapse" "elapses" "elapsed" "elapsed" "elapsing";
lin elapsed_A = mkA "elapsed" ;
lin elasmobranch_N = mkN "elasmobranch" ;
lin elastance_N = mkN "elastance" ;
lin elastase_N = mkN "elastase" ;
lin elastic_A = compoundA (mkA "elastic");
lin elastic_N = mkN "elastic" ;
lin elasticity_N = mkN "elasticity" "elasticities";
lin elasticized_A = compoundA (mkA "elasticized");
lin elastin_N = mkN "elastin" ;
lin elastomer_N = mkN "elastomer" ;
lin elastoplast_N = mkN "elastoplast" ;
lin elastosis_N = mkN "elastosis" ;
lin elate_V2 = mkV2 (mkV "elate" "elates" "elated" "elated" "elating");
lin elating_A = mkA "elating" ;
lin elation_N = mkN "elation" ;
lin elbow_N = mkN "elbow" "elbows";
lin elbow_V2 = mkV2 (mkV "elbow" "elbows" "elbowed" "elbowed" "elbowing");
lin elbowing_N = mkN "elbowing" ;
lin elder_A = mkA "elder" ;
lin elder_N = mkN "elder" "elders";
lin elderberry_N = mkN "elderberry" ;
lin elderly_A = compoundA (mkA "elderly");
lin eldership_N = mkN "eldership" ;
lin elderslie_PN = mkPN "Elderslie";
lin eldritch_A = mkA "eldritch" ;
lin eleanor_PN = mkPN "Eleanor";
lin elecampane_N = mkN "elecampane" ;
lin elect_A = compoundA (mkA "elect");
lin elect_V = mkV "elect";
lin elect_V2 = mkV2 (mkV "elect");
lin elect_V2V = mkV2V (mkV "elect") noPrep to_Prep ;
lin elect_V3 = mkV3 (mkV "elect");
lin election_N = mkN "election" "elections";
lin electioneering_N = mkN "electioneering" ;
lin elective_A = compoundA (mkA "elective");
lin elector_N = mkN "elector" "electors";
lin electoral_A = compoundA (mkA "electoral");
lin electorate_N = mkN "electorate" "electorates";
lin electric_A = compoundA (mkA "electric");
lin electric_N = mkN "electric" ;
lin electrical_A = compoundA (mkA "electrical");
lin electrician_N = mkN "electrician" "electricians";
lin electricity_N = mkN "electricity" ;
lin electrification_N = mkN "electrification" ;
lin electrify_V2 = mkV2 (mkV "electrify" "electrifies" "electrified" "electrified" "electrifying");
lin electrifying_A = mkA "electrifying" ;
lin electrocardiogram_N = mkN "electrocardiogram" "electrocardiograms";
lin electrocardiograph_N = mkN "electrocardiograph" "electrocardiographs";
lin electrocardiographic_A = mkA "electrocardiographic" ;
lin electrocautery_N = mkN "electrocautery" ;
lin electrochemical_A = mkA "electrochemical" ;
lin electrochemistry_N = mkN "electrochemistry" ;
lin electrocute_V2 = mkV2 (mkV "electrocute" "electrocutes" "electrocuted" "electrocuted" "electrocuting");
lin electrocution_N = mkN "electrocution" "electrocutions";
lin electrocutioner_N = mkN "electrocutioner" ;
lin electrode_N = mkN "electrode" "electrodes";
lin electrodeposition_N = mkN "electrodeposition" ;
lin electrodynamometer_N = mkN "electrodynamometer" ;
lin electroencephalogram_N = mkN "electroencephalogram" ;
lin electroencephalograph_N = mkN "electroencephalograph" ;
lin electroencephalographic_A = mkA "electroencephalographic" ;
lin electrograph_N = mkN "electrograph" ;
lin electrologist_N = mkN "electrologist" ;
lin electrolysis_N = mkN "electrolysis" ;
lin electrolyte_N = mkN "electrolyte" "electrolytes";
lin electrolytic_A = mkA "electrolytic" ;
lin electrolytic_N = mkN "electrolytic" ;
lin electromagnet_N = mkN "electromagnet" "electromagnets";
lin electromagnetic_A = compoundA (mkA "electromagnetic");
lin electromagnetism_N = mkN "electromagnetism" ;
lin electromechanical_A = mkA "electromechanical" ;
lin electrometer_N = mkN "electrometer" ;
lin electromotive_A = mkA "electromotive" ;
lin electromyogram_N = mkN "electromyogram" ;
lin electromyograph_N = mkN "electromyograph" ;
lin electromyography_N = mkN "electromyography" ;
lin electron_N = mkN "electron" "electrons";
lin electronegativity_N = mkN "electronegativity" ;
lin electronic_A = compoundA (mkA "electronic");
lin electronically_Adv = mkAdv "electronically";
lin electronics_N = mkN "electronics" "electronics";
lin electrophoresis_N = mkN "electrophoresis" ;
lin electrophoretic_A = mkA "electrophoretic" ;
lin electrophorus_N = mkN "electrophorus" ;
lin electroplate_N = mkN "electroplate" ;
lin electroplate_V2 = mkV2 (mkV "electroplate" "electroplates" "electroplated" "electroplated" "electroplating");
lin electroplater_N = mkN "electroplater" ;
lin electroretinogram_N = mkN "electroretinogram" ;
lin electroscope_N = mkN "electroscope" ;
lin electrosleep_N = mkN "electrosleep" ;
lin electrostatic_A = compoundA (mkA "electrostatic");
lin electrostatically_Adv = mkAdv "electrostatically" ;
lin electrostatics_N = mkN "electrostatics" ;
lin electrosurgery_N = mkN "electrosurgery" ;
lin electrotherapist_N = mkN "electrotherapist" ;
lin electrotherapy_N = mkN "electrotherapy" ;
lin electrum_N = mkN "electrum" ;
lin eleemosynary_A = compoundA (mkA "eleemosynary");
lin elegance_N = mkN "elegance" ;
lin elegant_A = compoundA (mkA "elegant");
lin elegiac_A = compoundA (mkA "elegiac");
lin elegist_N = mkN "elegist" ;
lin elegy_N = mkN "elegy" "elegies";
lin element_N = mkN "element" "elements";
lin elemental_A = compoundA (mkA "elemental");
lin elementary_A = compoundA (mkA "elementary");
lin elemi_N = mkN "elemi" ;
lin elephant_N = mkN "elephant" "elephants";
lin elephantiasis_N = mkN "elephantiasis" ;
lin elephantine_A = compoundA (mkA "elephantine");
lin elevate_V2 = mkV2 (mkV "elevate" "elevates" "elevated" "elevated" "elevating");
lin elevation_N = mkN "elevation" "elevations";
lin elevator_N = mkN "elevator" "elevators";
lin elf_N = mkN "elf" "elves";
lin elfin_A = compoundA (mkA "elfin");
lin elfish_A = compoundA (mkA "elfish");
lin elgin_PN = mkPN "Elgin";
lin elicit_V2 = mkV2 (mkV "elicit" "elicits" "elicited" "elicited" "eliciting");
lin elicitation_N = mkN "elicitation" "elicitations";
lin elide_V2 = mkV2 (mkV "elide" "elides" "elided" "elided" "eliding");
lin eligibility_N = mkN "eligibility" ;
lin eligible_A = compoundA (mkA "eligible");
lin eliminate_V2 = mkV2 (mkV "eliminate" "eliminates" "eliminated" "eliminated" "eliminating");
lin elimination_N = mkN "elimination" "eliminations";
lin eliminator_N = mkN "eliminator" ;
lin elision_N = mkN "elision" "elisions";
lin elite_N = mkN (variants {"élite"; "elite"});
lin elitism_N = mkN "elitism" ;
lin elitistMasc_N = mkN masculine (mkN "elitist" "elitists");
lin elitistFem_N = mkN feminine (mkN "elitist" "elitists");
lin elixir_N = mkN "elixir" "elixirs";
lin eliza_PN = mkPN "Eliza";
lin elizabeth_PN = mkPN "Elizabeth";
lin elizabethan_A = compoundA (mkA "elizabethan");
lin elizabethan_N = mkN "elizabethan" "elizabethans";
lin elk_N = mkN "elk" "elks";
lin ell_N = mkN "ell" ;
lin elland_PN = mkPN "Elland";
lin ellen_PN = mkPN "Ellen";
lin ellesmere_PN = mkPN "Ellesmere";
lin ellesmere_port_PN = mkPN "Ellesmere port";
lin ellie_PN = mkPN "Ellie";
lin ellipse_N = mkN "ellipse" "ellipses";
lin ellipsis_N = mkN "ellipsis" "ellipses";
lin ellipsoid_A = mkA "ellipsoid" ;
lin ellipsoid_N = mkN "ellipsoid" ;
lin elliptic_A = compoundA (mkA "elliptic");
lin elliptical_A = compoundA (mkA "elliptical");
lin elloughton_PN = mkPN "Elloughton";
lin elm_N = mkN "elm" "elms";
lin elocution_N = mkN "elocution" ;
lin elocutionary_A = compoundA (mkA "elocutionary");
lin elocutionistMasc_N = mkN masculine (mkN "elocutionist" "elocutionists");
lin elocutionistFem_N = mkN feminine (mkN "elocutionist" "elocutionists");
lin elongate_A = mkA "elongate" ;
lin elongate_V = mkV "elongate" "elongates" "elongated" "elongated" "elongating";
lin elongate_V2 = mkV2 (mkV "elongate" "elongates" "elongated" "elongated" "elongating");
lin elongation_N = mkN "elongation" "elongations";
lin elope_V = mkV "elope" "elopes" "eloped" "eloped" "eloping";
lin elopement_N = mkN "elopement" "elopements";
lin eloquence_N = mkN "eloquence" ;
lin eloquent_A = compoundA (mkA "eloquent");
lin else_Adv = mkAdv "else";
lin elsewhere_Adv = mkAdv "elsewhere";
lin elsholtzia_N = mkN "elsholtzia" ;
lin elsie_PN = mkPN "Elsie";
lin elstree_PN = mkPN "Elstree";
lin eluate_N = mkN "eluate" ;
lin elucidate_V2 = mkV2 (mkV "elucidate" "elucidates" "elucidated" "elucidated" "elucidating");
lin elucidation_N = mkN "elucidation" "elucidations";
lin elude_V2 = mkV2 (mkV "elude" "eludes" "eluded" "eluded" "eluding");
lin elusive_A = compoundA (mkA "elusive");
lin elusiveness_N = mkN "elusiveness" ;
lin elution_N = mkN "elution" ;
lin elver_N = mkN "elver" "elvers";
lin elves_N = mkN "elves" ;
lin elvish_A = compoundA (mkA "elvish");
lin ely_PN = mkPN "Ely";
lin elysian_A = compoundA (mkA "elysian");
lin elysium_PN = mkPN "Elysium";
lin em_N = mkN "em" ;
lin emaciate_V2 = mkV2 (mkV "emaciate" "emaciates" "emaciated" "emaciated" "emaciating");
lin emaciation_N = mkN "emaciation" ;
lin emanate_V = mkV "emanate" "emanates" "emanated" "emanated" "emanating";
lin emanation_N = mkN "emanation" "emanations";
lin emancipate_V2 = mkV2 (mkV "emancipate" "emancipates" "emancipated" "emancipated" "emancipating");
lin emancipation_N = mkN "emancipation" ;
lin emancipative_A = mkA "emancipative" ;
lin emancipator_N = mkN "emancipator" ;
lin emarginate_A = mkA "emarginate" ;
lin emasculate_V2 = mkV2 (mkV "emasculate" "emasculates" "emasculated" "emasculated" "emasculating");
lin emasculation_N = mkN "emasculation" "emasculations";
lin embalm_V2 = mkV2 (mkV "embalm" "embalms" "embalmed" "embalmed" "embalming");
lin embalmer_N = mkN "embalmer" ;
lin embalmment_N = mkN "embalmment" "embalmments";
lin embankment_N = mkN "embankment" "embankments";
lin embargo_N = mkN "embargo" "embargoes";
lin embargo_V2 = mkV2 (mkV "embargo" "embargos" "embargoed" "embargoed" "embargoing");
lin embark_V = mkV "embark" "embarks" "embarked" "embarked" "embarking";
lin embark_V2 = mkV2 (mkV "embark" "embarks" "embarked" "embarked" "embarking");
lin embarkation_N = mkN "embarkation" "embarkations";
lin embarrass_V2 = mkV2 (mkV "embarrass" "embarrasses" "embarrassed" "embarrassed" "embarrassing");
lin embarrassing_A = compoundA (mkA "embarrassing");
lin embarrassment_N = mkN "embarrassment" "embarrassments";
lin embassy_N = mkN "embassy" "embassies";
lin embattled_A = compoundA (mkA "embattled");
lin embed_V2 = mkV2 (mkV "embed" "embeds" "embedded" "embedded" "embedding");
lin embellish_V2 = mkV2 (mkV "embellish" "embellishes" "embellished" "embellished" "embellishing");
lin embellishment_N = mkN "embellishment" "embellishments";
lin ember_N = mkN "ember" "embers";
lin embezzle_V2 = mkV2 (mkV "embezzle" "embezzles" "embezzled" "embezzled" "embezzling");
lin embezzlement_N = mkN "embezzlement" "embezzlements";
lin embezzler_N = mkN "embezzler" ;
lin embitter_V2 = mkV2 (mkV "embitter" "embitters" "embittered" "embittered" "embittering");
lin embitterment_N = mkN "embitterment" "embitterments";
lin emblazon_V2 = mkV2 (mkV "emblazon" "emblazons" "emblazoned" "emblazoned" "emblazoning");
lin emblem_N = mkN "emblem" "emblems";
lin emblematic_A = compoundA (mkA "emblematic");
lin embodiment_N = mkN "embodiment" "embodiments";
lin embody_V2 = mkV2 (mkV "embody" "embodies" "embodied" "embodied" "embodying");
lin embolden_V2 = mkV2 (mkV "embolden" "emboldens" "emboldened" "emboldened" "emboldening");
lin embolectomy_N = mkN "embolectomy" ;
lin embolic_A = mkA "embolic" ;
lin embolism_N = mkN "embolism" ;
lin embolus_N = mkN "embolus" ;
lin embonpoint_A = compoundA (mkA "embonpoint");
lin embonpoint_N = mkN "embonpoint" ;
lin emboss_V2 = mkV2 (mkV "emboss" "embosses" "embossed" "embossed" "embossing");
lin embrace_N = mkN "embrace" "embraces";
lin embrace_V = mkV "embrace" "embraces" "embraced" "embraced" "embracing";
lin embrace_V2 = mkV2 (mkV "embrace" "embraces" "embraced" "embraced" "embracing");
lin embrasure_N = mkN "embrasure" "embrasures";
lin embrocation_N = mkN "embrocation" ;
lin embroider_V = mkV "embroider" "embroiders" "embroidered" "embroidered" "embroidering";
lin embroider_V2 = mkV2 (mkV "embroider" "embroiders" "embroidered" "embroidered" "embroidering");
lin embroiderer_N = mkN "embroiderer" ;
lin embroideress_N = mkN "embroideress" ;
lin embroidery_N = mkN "embroidery" ;
lin embroil_V = mkV "embroil";
lin embroil_V2 = mkV2 (mkV "embroil" "embroils" "embroiled" "embroiled" "embroiling");
lin embryo_N = mkN "embryo" "embryos";
lin embryologist_N = mkN "embryologist" ;
lin embryology_N = mkN "embryology" ;
lin embryonic_A = compoundA (mkA "embryonic");
lin emeer_N = mkN "emeer" "emeers";
lin emend_V2 = mkV2 (mkV "emend" "emends" "emended" "emended" "emending");
lin emendation_N = mkN "emendation" "emendations";
lin emerald_N = mkN "emerald" "emeralds";
lin emerge_V = mkV "emerge" "emerges" "emerged" "emerged" "emerging";
lin emerge_V2 = mkV2 (mkV "emerge" "emerges" "emerged" "emerged" "emerging");
lin emerge_V2V = mkV2V (mkV "emerge" "emerges" "emerged" "emerged" "emerging") noPrep to_Prep ;
lin emerge_VS = mkVS (mkV "emerge" "emerges" "emerged" "emerged" "emerging");
lin emergence_N = mkN "emergence" ;
lin emergency_N = mkN "emergency" "emergencies";
lin emergent_A = compoundA (mkA "emergent");
lin emeritus_A = compoundA (mkA "emeritus");
lin emeritus_N = mkN "emeritus" ;
lin emery_N = mkN "emery" ;
lin emetic_N = mkN "emetic" "emetics";
lin emigrant_N = mkN "emigrant" "emigrants";
lin emigrate_V = mkV "emigrate" "emigrates" "emigrated" "emigrated" "emigrating";
lin emigrate_V2V = mkV2V (mkV "emigrate" "emigrates" "emigrated" "emigrated" "emigrating") noPrep to_Prep ;
lin emigration_N = mkN "emigration" "emigrations";
lin emigre_N = mkN "émigré" "émigrés";
lin emily_PN = mkPN "Emily";
lin eminence_N = mkN "eminence" "eminences";
lin eminent_A = compoundA (mkA "eminent");
lin emir_N = mkN "emir" "emirs";
lin emirate_N = mkN "emirate" "emirates";
lin emissary_N = mkN "emissary" "emissaries";
lin emission_N = mkN "emission" "emissions";
lin emit_V2 = mkV2 (mkV "emit" "emits" "emitted" "emitted" "emitting");
lin emitter_N = mkN "emitter" ;
lin emma_PN = mkPN "Emma";
lin emmenagogue_N = mkN "emmenagogue" ;
lin emmer_N = mkN "emmer" ;
lin emmetropia_N = mkN "emmetropia" ;
lin emmetropic_A = mkA "emmetropic" ;
lin emolument_N = mkN "emolument" "emoluments";
lin emoticon_N = mkN "emoticon" ;
lin emotion_N = mkN "emotion" "emotions";
lin emotional_A = compoundA (mkA "emotional");
lin emotionality_N = mkN "emotionality" ;
lin emotionless_A = compoundA (mkA "emotionless");
lin emotionlessness_N = mkN "emotionlessness" ;
lin emotive_A = compoundA (mkA "emotive");
lin empale_V2 = mkV2 (mkV "empale" "empales" "empaled" "empaled" "empaling");
lin empanel_V2 = mkV2 (mkV "empanel" "empanels" "empanelled" "empanelled" "empanelling");
lin empathic_A = mkA "empathic" ;
lin empathize_V = mkV "empathize";
lin empathy_N = mkN "empathy" ;
lin emperor_N = mkN "emperor" "emperors";
lin emphasis_N = mkN "emphasis" "emphases";
lin emphasize_V2 = mkV2 (mkV "emphasize" "emphasizes" "emphasized" "emphasized" "emphasizing");
lin emphasize_VS = mkVS (mkV "emphasize");
lin emphasizing_N = mkN "emphasizing" ;
lin emphatic_A = compoundA (mkA "emphatic");
lin emphatically_Adv = mkAdv "emphatically";
lin emphysema_N = mkN "emphysema" ;
lin emphysematous_A = mkA "emphysematous" ;
lin empire_N = mkN "empire" "empires";
lin empiric_A = compoundA (mkA "empiric");
lin empirical_A = compoundA (mkA "empirical");
lin empiricism_N = mkN "empiricism" ;
lin empiricist_N = mkN "empiricist" "empiricists";
lin emplacement_N = mkN "emplacement" "emplacements";
lin emplane_V = mkV "emplane" "emplanes" "emplaned" "emplaned" "emplaning";
lin emplane_V2 = mkV2 (mkV "emplane" "emplanes" "emplaned" "emplaned" "emplaning");
lin employ_N = mkN "employ" "employs";
lin employ_V2 = mkV2 (mkV "employ" "employs" "employed" "employed" "employing");
lin employable_A = compoundA (mkA "employable");
lin employable_N = mkN "employable" ;
lin employee_N = mkN "employee" "employees";
lin employer_N = mkN "employer" "employers";
lin employment_N = mkN "employment" ;
lin emporium_N = mkN "emporium" "emporiums";
lin empower_V2 = mkV2 (mkV "empower" "empowers" "empowered" "empowered" "empowering");
lin empower_V2V = mkV2V (mkV "empower") noPrep to_Prep ;
lin empress_N = mkN "empress" "empresses";
lin emptiness_N = mkN "emptiness" ;
lin empty_A = mkA "empty" "emptier";
lin empty_N = mkN "empty" "empties";
lin empty_V = mkV "empty" "empties" "emptied" "emptied" "emptying";
lin empty_V2 = mkV2 (mkV "empty" "empties" "emptied" "emptied" "emptying");
lin empty_handed_A = compoundA (mkA "empty-handed");
lin empty_headed_A = compoundA (mkA "empty-headed");
lin emptying_N = mkN "emptying" ;
lin empurpled_A = compoundA (mkA "empurpled");
lin empyema_N = mkN "empyema" ;
lin empyreal_A = mkA "empyreal" ;
lin empyrean_A = compoundA (mkA "empyrean");
lin empyrean_N = mkN "empyrean" "IRREG";
lin emsworth_PN = mkPN "Emsworth";
lin emu_N = mkN "emu" "emus";
lin emulate_V2 = mkV2 (mkV "emulate" "emulates" "emulated" "emulated" "emulating");
lin emulation_N = mkN "emulation" ;
lin emulous_A = compoundA (mkA "emulous");
lin emulsifier_N = mkN "emulsifier";
lin emulsify_V2 = mkV2 (mkV "emulsify" "emulsifies" "emulsified" "emulsified" "emulsifying");
lin emulsion_N = mkN "emulsion" "emulsions";
lin en_N = mkN "en" ;
lin en_clair_Adv = mkAdv "en clair";
lin en_famille_Adv = mkAdv "en famille";
lin en_masse_Adv = mkAdv "en masse";
lin en_route_Adv = mkAdv "en route";
lin enable_V2 = mkV2 (mkV "enable" "enables" "enabled" "enabled" "enabling");
lin enable_V2V = mkV2V (mkV "enable") noPrep to_Prep ;
lin enable_VS = mkVS (mkV "enable");
lin enabling_A = compoundA (mkA "enabling");
lin enact_V2 = mkV2 (mkV "enact" "enacts" "enacted" "enacted" "enacting");
lin enact_V2V = mkV2V (mkV "enact") noPrep to_Prep ;
lin enactment_N = mkN "enactment" "enactments";
lin enalapril_N = mkN "enalapril" ;
lin enallage_N = mkN "enallage" ;
lin enamel_N = mkN "enamel" ;
lin enamel_V2 = mkV2 (mkV "enamel" "enamels" "enamelled" "enamelled" "enamelling");
lin enamelware_N = mkN "enamelware" ;
lin enamine_N = mkN "enamine" ;
lin enamored_A = mkA "enamored" ;
lin enamour_V2 = mkV2 (mkV "enamour" "enamours" "enamoured" "enamoured" "enamouring");
lin enanthem_N = mkN "enanthem" ;
lin enantiomorph_N = mkN "enantiomorph" ;
lin enantiomorphism_N = mkN "enantiomorphism" ;
lin enate_A = mkA "enate" ;
lin enate_N = mkN "enate" ;
lin enc_PN = mkPN "Enc";
lin encainide_N = mkN "encainide" ;
lin encamp_V = mkV "encamp" "encamps" "encamped" "encamped" "encamping";
lin encamp_V2 = mkV2 (mkV "encamp" "encamps" "encamped" "encamped" "encamping");
lin encampment_N = mkN "encampment" "encampments";
lin encapsulation_N = mkN "encapsulation" ;
lin encase_V2 = mkV2 (mkV "encase" "encases" "encased" "encased" "encasing");
lin encasement_N = mkN "encasement" ;
lin encaustic_A = compoundA (mkA "encaustic");
lin encaustic_N = mkN "encaustic" ;
lin encephalartos_N = mkN "encephalartos" ;
lin encephalitis_N = mkN "encephalitis" ;
lin encephalocele_N = mkN "encephalocele" ;
lin encephalogram_N = mkN "encephalogram" ;
lin encephalography_N = mkN "encephalography" ;
lin encephalomyelitis_N = mkN "encephalomyelitis" ;
lin enchain_V2 = mkV2 (mkV "enchain" "enchains" "enchained" "enchained" "enchaining");
lin enchant_V2 = mkV2 (mkV "enchant" "enchants" "enchanted" "enchanted" "enchanting");
lin enchanter_N = mkN masculine (mkN "enchanter" "enchanters");
lin enchantingly_Adv = mkAdv "enchantingly";
lin enchantment_N = mkN "enchantment" "enchantments";
lin enchantress_N = mkN feminine (mkN "enchantress" "enchantresses");
lin enchilada_N = mkN "enchilada" ;
lin enchondroma_N = mkN "enchondroma" ;
lin encircle_V2 = mkV2 (mkV "encircle" "encircles" "encircled" "encircled" "encircling");
lin encirclement_N = mkN "encirclement" "encirclements";
lin enclave_N = mkN "enclave" "enclaves";
lin enclose_V2 = mkV2 (mkV "enclose" "encloses" "enclosed" "enclosed" "enclosing");
lin enclosure_N = mkN "enclosure" "enclosures";
lin encode_V2 = mkV2 (mkV "encode" "encodes" "encoded" "encoded" "encoding");
lin encoding_N = mkN "encoding" ;
lin encolure_N = mkN "encolure" ;
lin encomiastic_A = mkA "encomiastic" ;
lin encomium_N = mkN "encomium" "encomiums";
lin encompass_V2 = mkV2 (mkV "encompass" "encompasses" "encompassed" "encompassed" "encompassing");
lin encompassment_N = mkN "encompassment" ;
lin encopresis_N = mkN "encopresis" ;
lin encore_N = mkN "encore" "encores";
lin encore_V2 = mkV2 (mkV "encore" "encores" "encored" "encored" "encoring");
lin encounter_N = mkN "encounter" "encounters";
lin encounter_V2 = mkV2 (mkV "encounter" "encounters" "encountered" "encountered" "encountering");
lin encourage_V2 = mkV2 (mkV "encourage" "encourages" "encouraged" "encouraged" "encouraging");
lin encourage_V2V = mkV2V (mkV "encourage") noPrep to_Prep ;
lin encouragement_N = mkN "encouragement" "encouragements";
lin encouraging_A = mkA "encouraging" ;
lin encroach_V = mkV "encroach" "encroaches" "encroached" "encroached" "encroaching";
lin encroachment_N = mkN "encroachment" "encroachments";
lin encrust_V = mkV "encrust" "encrusts" "encrusted" "encrusted" "encrusting";
lin encrust_V2 = mkV2 (mkV "encrust" "encrusts" "encrusted" "encrusted" "encrusting");
lin encrypt_V2 = mkV2 (mkV "encrypt");
lin encumber_V2 = mkV2 (mkV "encumber" "encumbers" "encumbered" "encumbered" "encumbering");
lin encumbrance_N = mkN "encumbrance" "encumbrances";
lin encyclical_A = compoundA (mkA "encyclical");
lin encyclical_N = mkN "encyclical" "encyclicals";
lin encyclopaedia_N = mkN "encyclopaedia" "encyclopaedias";
lin encyclopaedic_A = compoundA (mkA "encyclopaedic");
lin encyclopedia_N = mkN "encyclopedia" "encyclopedias";
lin encyclopedic_A = compoundA (mkA "encyclopedic");
lin encyclopedist_N = mkN "encyclopedist" ;
lin encysted_A = mkA "encysted" ;
lin end_N = mkN "end" "ends";
lin end_V = mkV "end" "ends" "ended" "ended" "ending";
lin end_V2 = mkV2 (mkV "end" "ends" "ended" "ended" "ending");
lin end_VA = mkVA (mkV "end" "ends" "ended" "ended" "ending");
lin end_all_N = mkN "end-all" "IRREG";
lin end_tail_V2 = mkV2 (mkV "end-tail");
lin endameba_N = mkN "endameba" ;
lin endanger_V2 = mkV2 (mkV "endanger" "endangers" "endangered" "endangered" "endangering");
lin endarterectomy_N = mkN "endarterectomy" ;
lin endarteritis_N = mkN "endarteritis" ;
lin endear_V2 = mkV2 (mkV "endear" "endears" "endeared" "endeared" "endearing");
lin endearingly_Adv = mkAdv "endearingly";
lin endearment_N = mkN "endearment" "endearments";
lin endeavour_N = mkN "endeavour" "endeavours";
lin endeavour_V = mkV "endeavour" "endeavours" "endeavoured" "endeavoured" "endeavouring";
lin endemic_A = compoundA (mkA "endemic");
lin endemic_N = mkN "endemic" "endemics";
lin endergonic_A = mkA "endergonic" ;
lin endermic_A = mkA "endermic" ;
lin endgame_N = mkN "endgame" ;
lin ending_N = mkN "ending" "endings";
lin endive_N = mkN "endive" "endives";
lin endless_A = compoundA (mkA "endless");
lin endlessness_N = mkN "endlessness" ;
lin endocarditis_N = mkN "endocarditis" ;
lin endocardium_N = mkN "endocardium" ;
lin endocentric_A = mkA "endocentric" ;
lin endocervicitis_N = mkN "endocervicitis" ;
lin endocranium_N = mkN "endocranium" ;
lin endocrine_A = mkA "endocrine" ;
lin endocrinologist_N = mkN "endocrinologist" ;
lin endocrinology_N = mkN "endocrinology" ;
lin endoderm_N = mkN "endoderm" ;
lin endodontic_A = mkA "endodontic" ;
lin endodontics_N = mkN "endodontics" ;
lin endodontist_N = mkN "endodontist" ;
lin endoergic_A = mkA "endoergic" ;
lin endogamous_A = mkA "endogamous" ;
lin endogamy_N = mkN "endogamy" ;
lin endogenic_A = mkA "endogenic" ;
lin endogenous_A = mkA "endogenous" ;
lin endogeny_N = mkN "endogeny" ;
lin endolymph_N = mkN "endolymph" ;
lin endometrial_A = mkA "endometrial" ;
lin endometriosis_N = mkN "endometriosis" ;
lin endometrium_N = mkN "endometrium" ;
lin endomorph_N = mkN "endomorph" ;
lin endomorphic_A = mkA "endomorphic" ;
lin endomorphy_N = mkN "endomorphy" ;
lin endoneurium_N = mkN "endoneurium" ;
lin endonuclease_N = mkN "endonuclease" ;
lin endoparasite_N = mkN "endoparasite" ;
lin endoparasitic_A = mkA "endoparasitic" ;
lin endoplasm_N = mkN "endoplasm" ;
lin endorphin_N = mkN "endorphin" ;
lin endorse_V2 = mkV2 (mkV "endorse" "endorses" "endorsed" "endorsed" "endorsing");
lin endorsement_N = mkN "endorsement" "endorsements";
lin endorser_N = mkN "endorser" ;
lin endoscope_N = mkN "endoscope" ;
lin endoscopic_A = mkA "endoscopic" ;
lin endoscopy_N = mkN "endoscopy" ;
lin endoskeleton_N = mkN "endoskeleton" ;
lin endosperm_N = mkN "endosperm" ;
lin endospore_N = mkN "endospore" ;
lin endosteum_N = mkN "endosteum" ;
lin endothelial_A = mkA "endothelial" ;
lin endothelium_N = mkN "endothelium" ;
lin endothermic_A = mkA "endothermic" ;
lin endotoxin_N = mkN "endotoxin" ;
lin endow_V2 = mkV2 (mkV "endow" "endows" "endowed" "endowed" "endowing");
lin endowment_N = mkN "endowment" "endowments";
lin endue_V2 = mkV2 (mkV "endue" "endues" "endued" "endued" "enduing");
lin endurable_A = compoundA (mkA "endurable");
lin endurance_N = mkN "endurance" ;
lin endure_V = mkV "endure" "endures" "endured" "endured" "enduring";
lin endure_V2 = mkV2 (mkV "endure" "endures" "endured" "endured" "enduring");
lin enduringly_Adv = mkAdv "enduringly" ;
lin endways_Adv = mkAdv "endways";
lin endwise_Adv = mkAdv "endwise";
lin enema_N = mkN "enema" "enemas";
lin enemy_N = mkN "enemy" "enemies";
lin energetic_A = compoundA (mkA "energetic");
lin energetically_Adv = mkAdv "energetically";
lin energid_N = mkN "energid" ;
lin energizer_N = mkN "energizer" ;
lin energizing_A = mkA "energizing" ;
lin energizing_N = mkN "energizing" ;
lin energy_N = mkN "energy" "energies";
lin enervate_V2 = mkV2 (mkV "enervate" "enervates" "enervated" "enervated" "enervating");
lin enervation_N = mkN "enervation" ;
lin enfant_terrible_N = mkN "enfant terrible" "IRREG";
lin enfeeble_V2 = mkV2 (mkV "enfeeble" "enfeebles" "enfeebled" "enfeebled" "enfeebling");
lin enfeoffment_N = mkN "enfeoffment" ;
lin enfield_PN = mkPN "Enfield";
lin enfilade_N = mkN "enfilade" ;
lin enflurane_N = mkN "enflurane" ;
lin enfold_V2 = mkV2 (mkV "enfold" "enfolds" "enfolded" "enfolded" "enfolding");
lin enforce_V2 = mkV2 (mkV "enforce" "enforces" "enforced" "enforced" "enforcing");
lin enforceable_A = compoundA (mkA "enforceable");
lin enforcement_N = mkN "enforcement" ;
lin enfranchise_V2 = mkV2 (mkV "enfranchise" "enfranchises" "enfranchised" "enfranchised" "enfranchising");
lin enfranchisement_N = mkN "enfranchisement" "enfranchisements";
lin engage_V = mkV "engage" "engages" "engaged" "engaged" "engaging";
lin engage_V2 = mkV2 (mkV "engage" "engages" "engaged" "engaged" "engaging");
lin engagement_N = mkN "engagement" "engagements";
lin engelmannia_N = mkN "engelmannia" ;
lin engender_V2 = mkV2 (mkV "engender" "engenders" "engendered" "engendered" "engendering");
lin engine_N = mkN "engine" "engines";
lin engine_driver_N = mkN "engine-driver" "engine-drivers";
lin engineer_N = mkN "engineer" "engineers";
lin engineer_V = mkV "engineer" "engineers" "engineered" "engineered" "engineering";
lin engineer_V2 = mkV2 (mkV "engineer" "engineers" "engineered" "engineered" "engineering");
lin engineering_N = mkN "engineering" ;
lin engineering_N = mkN "engineering";
lin enginery_N = mkN "enginery" ;
lin england_PN = mkPN "England";
lin english_A = compoundA (mkA "English");
lin english_N = mkN "English" ;
lin englishman_N = mkN masculine (mkN "englishman" "englishmen");
lin englishwoman_N = mkN feminine (mkN "englishwoman" "englishwomen");
lin engorgement_N = mkN "engorgement" ;
lin engraft_V2 = mkV2 (mkV "engraft" "engrafts" "engrafted" "engrafted" "engrafting");
lin engram_N = mkN "engram" ;
lin engrave_V2 = mkV2 (mkV "engrave" "engraves" "engraved" "engraved" "engraving");
lin engraver_N = mkN "engraver" "engravers";
lin engraving_N = mkN "engraving" "engravings";
lin engross_V2 = mkV2 (mkV "engross" "engrosses" "engrossed" "engrossed" "engrossing");
lin engulf_V2 = mkV2 (mkV "engulf" "engulfs" "engulfed" "engulfed" "engulfing");
lin enhance_V2 = mkV2 (mkV "enhance" "enhances" "enhanced" "enhanced" "enhancing");
lin enhancement_N = mkN "enhancement" "enhancements";
lin enigma_N = mkN "enigma" "enigmas";
lin enigmatic_A = compoundA (mkA "enigmatic");
lin enigmatically_Adv = mkAdv "enigmatically";
lin enjambment_N = mkN "enjambment" ;
lin enjoin_V2 = mkV2 (mkV "enjoin" "enjoins" "enjoined" "enjoined" "enjoining");
lin enjoy_V2 = mkV2 (mkV "enjoy" "enjoys" "enjoyed" "enjoyed" "enjoying");
lin enjoy_VV = ingVV (mkV "enjoy");
lin enjoyable_A = compoundA (mkA "enjoyable");
lin enjoyableness_N = mkN "enjoyableness" ;
lin enjoyer_N = mkN "enjoyer" ;
lin enjoyment_N = mkN "enjoyment" "enjoyments";
lin enkephalin_N = mkN "enkephalin" ;
lin enkindle_V2 = mkV2 (mkV "enkindle" "enkindles" "enkindled" "enkindled" "enkindling");
lin enlarge_V = mkV "enlarge" "enlarges" "enlarged" "enlarged" "enlarging";
lin enlarge_V2 = mkV2 (mkV "enlarge" "enlarges" "enlarged" "enlarged" "enlarging");
lin enlargement_N = mkN "enlargement" "enlargements";
lin enlarger_N = mkN "enlarger" ;
lin enlighten_V2 = mkV2 (mkV "enlighten" "enlightens" "enlightened" "enlightened" "enlightening");
lin enlightening_A = mkA "enlightening" ;
lin enlightenment_N = mkN "enlightenment" ;
lin enlist_V = mkV "enlist" "enlists" "enlisted" "enlisted" "enlisting";
lin enlist_V2 = mkV2 (mkV "enlist" "enlists" "enlisted" "enlisted" "enlisting");
lin enlistment_N = mkN "enlistment" "enlistments";
lin enliven_V2 = mkV2 (mkV "enliven" "enlivens" "enlivened" "enlivened" "enlivening");
lin enmesh_V2 = mkV2 (mkV "enmesh" "enmeshes" "enmeshed" "enmeshed" "enmeshing");
lin enmity_N = mkN "enmity" "enmities";
lin ennoble_V2 = mkV2 (mkV "ennoble" "ennobles" "ennobled" "ennobled" "ennobling");
lin ennoblement_N = mkN "ennoblement" "ennoblements";
lin ennobling_A = mkA "ennobling" ;
lin ennui_N = mkN "ennui" "ennuis";
lin ennumerate_V2 = mkV2 (mkV "ennumerate");
lin enoch_PN = mkPN "Enoch";
lin enol_N = mkN "enol" ;
lin enolic_A = mkA "enolic" ;
lin enologist_N = mkN "enologist" ;
lin enology_N = mkN "enology" ;
lin enophile_N = mkN "enophile" ;
lin enormity_N = mkN "enormity" "enormities";
lin enormous_A = compoundA (mkA "enormous");
lin enormousness_N = mkN "enormousness" ;
lin enosis_N = mkN "enosis" ;
lin enough_A = irregAdv (compoundA (mkA "enough")) "enough";
lin enough_N = mkN "enough" "enough";
lin enplane_V = mkV "enplane" "enplanes" "enplaned" "enplaned" "enplaning";
lin enplane_V2 = mkV2 (mkV "enplane" "enplanes" "enplaned" "enplaned" "enplaning");
lin enquire_V = mkV "enquire" "enquires" "enquired" "enquired" "enquiring";
lin enquire_V2 = mkV2 (mkV "enquire" "enquires" "enquired" "enquired" "enquiring");
lin enquirer_N = mkN "enquirer" "enquirers";
lin enquiringly_Adv = mkAdv "enquiringly";
lin enquiry_N = mkN "enquiry" "enquiries";
lin enrage_V2 = mkV2 (mkV "enrage" "enrages" "enraged" "enraged" "enraging");
lin enrapture_V2 = mkV2 (mkV "enrapture" "enraptures" "enraptured" "enraptured" "enrapturing");
lin enrich_V2 = mkV2 (mkV "enrich" "enriches" "enriched" "enriched" "enriching");
lin enrichment_N = mkN "enrichment" ;
lin enrol_V = mkV "enrol" "enrols" "enroled" "enroled" "enroling";
lin enrol_V2 = mkV2 (mkV "enrol" "enrols" "enroled" "enroled" "enroling");
lin enroll_V = mkV "enroll" "enrolls" "enrolled" "enrolled" "enrolling";
lin enroll_V2 = mkV2 (mkV "enroll" "enrolls" "enrolled" "enrolled" "enrolling");
lin enrollee_N = mkN "enrollee" ;
lin enrolment_N = mkN "enrolment" "enrolments";
lin enschede_PN = mkPN "Enschede";
lin ensconce_V2 = mkV2 (mkV "ensconce" "ensconces" "ensconced" "ensconced" "ensconcing");
lin ensemble_N = mkN "ensemble" "ensembles";
lin enshrine_V2 = mkV2 (mkV "enshrine" "enshrines" "enshrined" "enshrined" "enshrining");
lin enshroud_V2 = mkV2 (mkV "enshroud" "enshrouds" "enshrouded" "enshrouded" "enshrouding");
lin ensiform_A = mkA "ensiform" ;
lin ensign_N = mkN "ensign" "ensigns";
lin ensilage_N = mkN "ensilage" ;
lin enslave_V2 = mkV2 (mkV "enslave" "enslaves" "enslaved" "enslaved" "enslaving");
lin enslavement_N = mkN "enslavement" "enslavements";
lin ensnare_V2 = mkV2 (mkV "ensnare" "ensnares" "ensnared" "ensnared" "ensnaring");
lin ensue_V = mkV "ensue" "ensues" "ensued" "ensued" "ensuing";
lin ensure_V = mkV "ensure" "ensures" "ensured" "ensured" "ensuring";
lin ensure_V2 = mkV2 (mkV "ensure" "ensures" "ensured" "ensured" "ensuring");
lin ensure_VS = mkVS (mkV "ensure" "ensures" "ensured" "ensured" "ensuring");
lin entablature_N = mkN "entablature" ;
lin entail_N = mkN "entail" "entails";
lin entail_V2 = mkV2 (mkV "entail" "entails" "entailed" "entailed" "entailing");
lin entangle_V2 = mkV2 (mkV "entangle" "entangles" "entangled" "entangled" "entangling");
lin entanglement_N = mkN "entanglement" "entanglements";
lin entasis_N = mkN "entasis" ;
lin entelechy_N = mkN "entelechy" ;
lin entellus_N = mkN "entellus" ;
lin entente_N = mkN "entente" "ententes";
lin entente_cordiale_N = mkN "entente cordiale" "IRREG";
lin enter_V = mkV "enter" "enters" "entered" "entered" "entering";
lin enter_V2 = mkV2 (mkV "enter" "enters" "entered" "entered" "entering");
lin enteric_A = compoundA (mkA "enteric");
lin enteritis_N = mkN "enteritis" ;
lin enterobiasis_N = mkN "enterobiasis" ;
lin enterokinase_N = mkN "enterokinase" ;
lin enterolith_N = mkN "enterolith" ;
lin enterolithiasis_N = mkN "enterolithiasis" ;
lin enteron_N = mkN "enteron" ;
lin enteropathy_N = mkN "enteropathy" ;
lin enteroptosis_N = mkN "enteroptosis" ;
lin enterostenosis_N = mkN "enterostenosis" ;
lin enterostomy_N = mkN "enterostomy" ;
lin enterotoxemia_N = mkN "enterotoxemia" ;
lin enterotoxin_N = mkN "enterotoxin" ;
lin enterovirus_N = mkN "enterovirus" ;
lin enterprise_N = mkN "enterprise" "enterprises";
lin enterprising_A = compoundA (mkA "enterprising");
lin entertain_V2 = mkV2 (mkV "entertain" "entertains" "entertained" "entertained" "entertaining");
lin entertainer_N = mkN "entertainer" "entertainers";
lin entertaining_A = compoundA (mkA "entertaining");
lin entertainment_N = mkN "entertainment" "entertainments";
lin enthral_V2 = mkV2 (mkV "enthral" "enthrals" "enthralled" "enthralled" "enthralling");
lin enthrall_V2 = mkV2 (mkV "enthrall" "enthralls" "enthralled" "enthralled" "enthralling");
lin enthrone_V2 = mkV2 (mkV "enthrone" "enthrones" "enthroned" "enthroned" "enthroning");
lin enthronement_N = mkN "enthronement" "enthronements";
lin enthuse_V = mkV "enthuse" "enthuses" "enthused" "enthused" "enthusing";
lin enthusiasm_N = mkN "enthusiasm" ;
lin enthusiast_N = mkN "enthusiast" "enthusiasts";
lin enthusiastic_A = irregAdv (compoundA (mkA "enthusiastic")) (variants {"enthusiastically"; "enthusiasticly"});
lin entice_V2 = mkV2 (mkV "entice" "entices" "enticed" "enticed" "enticing");
lin enticement_N = mkN "enticement" "enticements";
lin entire_A = compoundA (mkA "entire");
lin entirety_N = mkN "entirety" ;
lin entitle_V2 = mkV2 (mkV "entitle" "entitles" "entitled" "entitled" "entitling");
lin entitle_V2V = mkV2V (mkV "entitle") noPrep to_Prep ;
lin entitle_VS = mkVS (mkV "entitle");
lin entitlement_N = mkN "entitlement" "entitlements";
lin entity_N = mkN "entity" "entities";
lin entomb_V2 = mkV2 (mkV "entomb" "entombs" "entombed" "entombed" "entombing");
lin entomion_N = mkN "entomion" ;
lin entomological_A = compoundA (mkA "entomological");
lin entomologist_N = mkN "entomologist" "entomologists";
lin entomology_N = mkN "entomology" ;
lin entomophilous_A = mkA "entomophilous" ;
lin entomophobia_N = mkN "entomophobia" ;
lin entoproct_N = mkN "entoproct" ;
lin entourage_N = mkN "entourage";
lin entozoan_A = mkA "entozoan" ;
lin entozoic_A = mkA "entozoic" ;
lin entr'acte_N = mkN "entr'acte" "entr'actes";
lin entrain_V = mkV "entrain" "entrains" "entrained" "entrained" "entraining";
lin entrain_V2 = mkV2 (mkV "entrain" "entrains" "entrained" "entrained" "entraining");
lin entrance_N = mkN "entrance" "entrances";
lin entrance_V2 = mkV2 (mkV "entrance" "entrances" "entranced" "entranced" "entrancing");
lin entrance_fee_N = mkN "entrance-fee" "entrance-fees";
lin entrance_money_N = mkN "entrance-money" ;
lin entrancement_N = mkN "entrancement" ;
lin entrant_N = mkN "entrant" "entrants";
lin entrap_V2 = mkV2 (mkV "entrap" "entraps" "entrapped" "entrapped" "entrapping");
lin entrapment_N = mkN "entrapment" ;
lin entreat_V2 = mkV2 (mkV "entreat" "entreats" "entreated" "entreated" "entreating");
lin entreatingly_Adv = mkAdv "entreatingly";
lin entreaty_N = mkN "entreaty" "entreaties";
lin entrecote_N = mkN "entrecote" ;
lin entree_N = mkN "entrée" "entrées";
lin entrench_V2 = mkV2 (mkV "entrench" "entrenches" "entrenched" "entrenched" "entrenching");
lin entrenchment_N = mkN "entrenchment" "entrenchments";
lin entrepot_N = mkN "entrepot" "entrepots";
lin entrepreneur_N = mkN "entrepreneur" "entrepreneurs";
lin entrepreneurial_A = compoundA (mkA "entrepreneurial");
lin entrust_V2 = mkV2 (mkV "entrust" "entrusts" "entrusted" "entrusted" "entrusting");
lin entry_N = mkN "entry" "entries";
lin entwin_V = mkV "entwin";
lin entwine_V2 = mkV2 (mkV "entwine" "entwines" "entwined" "entwined" "entwining");
lin enucleation_N = mkN "enucleation" ;
lin enumerate_V2 = mkV2 (mkV "enumerate" "enumerates" "enumerated" "enumerated" "enumerating");
lin enumeration_N = mkN "enumeration" "enumerations";
lin enunciate_V = mkV "enunciate" "enunciates" "enunciated" "enunciated" "enunciating";
lin enunciate_V2 = mkV2 (mkV "enunciate" "enunciates" "enunciated" "enunciated" "enunciating");
lin enunciation_N = mkN "enunciation" "enunciations";
lin enured_A = mkA "enured" ;
lin enuresis_N = mkN "enuresis" ;
lin envelop_V2 = mkV2 (mkV "envelop" "envelops" "enveloped" "enveloped" "enveloping");
lin envelope_N = mkN "envelope" "envelopes";
lin envelopment_N = mkN "envelopment" "envelopments";
lin envenom_V2 = mkV2 (mkV "envenom" "envenoms" "envenomed" "envenomed" "envenoming");
lin enviable_A = compoundA (mkA "enviable");
lin envious_A = compoundA (mkA "envious");
lin environ_V2 = mkV2 (mkV "environ" "environs" "environed" "environed" "environing");
lin environment_N = mkN "environment" "environments";
lin environmental_A = compoundA (mkA "environmental");
lin environmentalism_N = mkN "environmentalism" ;
lin environmentalist_N = mkN "environmentalist" ;
lin environs_N = mkN "environs" ;
lin envisage_V2 = mkV2 (mkV "envisage" "envisages" "envisaged" "envisaged" "envisaging");
lin envision_V2 = mkV2 (mkV "envision");
lin envision_VS = mkVS (mkV "envision");
lin envisioned_A = mkA "envisioned" ;
lin envoi_N = mkN "envoi" "envois";
lin envoy_N = mkN human (mkN "envoy" "envoys");
lin envy_N = mkN "envy" ;
lin envy_V2 = mkV2 (mkV "envy" "envies" "envied" "envied" "envying");
lin enwrap_V2 = mkV2 (mkV "enwrap" "enwraps" "enwrapped" "enwrapped" "enwrapping");
lin enzootic_A = mkA "enzootic" ;
lin enzymatic_A = mkA "enzymatic" ;
lin enzyme_N = mkN "enzyme" "enzymes";
lin enzymologist_N = mkN "enzymologist" ;
lin enzymology_N = mkN "enzymology" ;
lin eohippus_N = mkN "eohippus" ;
lin eolith_N = mkN "eolith" ;
lin eolithic_A = mkA "eolithic" ;
lin eon_N = mkN "eon" "eons";
lin eonian_A = mkA "eonian" ;
lin eoraptor_N = mkN "eoraptor" ;
lin eosin_N = mkN "eosin" ;
lin eosinopenia_N = mkN "eosinopenia" ;
lin eosinophil_N = mkN "eosinophil" ;
lin eosinophilia_N = mkN "eosinophilia" ;
lin eosinophilic_A = mkA "eosinophilic" ;
lin epacris_N = mkN "epacris" ;
lin epanalepsis_N = mkN "epanalepsis" ;
lin epanaphora_N = mkN "epanaphora" ;
lin epanodos_N = mkN "epanodos" ;
lin epanorthosis_N = mkN "epanorthosis" ;
lin eparch_N = mkN "eparch" ;
lin eparchial_A = mkA "eparchial" ;
lin eparchy_N = mkN "eparchy" ;
lin epaulet_N = mkN "epaulet" "epaulets";
lin epaulette_N = mkN "epaulette" "epaulettes";
lin epauliere_N = mkN "epauliere" ;
lin epee_N = mkN "épée" "épées";
lin ependyma_N = mkN "ependyma" ;
lin epenthesis_N = mkN "epenthesis" ;
lin epenthetic_A = mkA "epenthetic" ;
lin epergne_N = mkN "epergne" ;
lin ephah_N = mkN "ephah" ;
lin ephedra_N = mkN "ephedra" ;
lin ephedrine_N = mkN "ephedrine" ;
lin ephemera_N = mkN "ephemera" ;
lin ephemeral_A = compoundA (mkA "ephemeral");
lin ephemerality_N = mkN "ephemerality" ;
lin ephemerid_N = mkN "ephemerid" ;
lin ephemeris_N = mkN "ephemeris" ;
lin ephemeron_N = mkN "ephemeron" ;
lin epic_A = compoundA (mkA "epic");
lin epic_N = mkN "epic" "epics";
lin epicalyx_N = mkN "epicalyx" ;
lin epicanthus_N = mkN "epicanthus" ;
lin epicardia_N = mkN "epicardia" ;
lin epicardium_N = mkN "epicardium" ;
lin epicarp_N = mkN "epicarp" ;
lin epicarpal_A = mkA "epicarpal" ;
lin epicentre_N = mkN (variants {"epicentre"; "epicenter"});
lin epicondyle_N = mkN "epicondyle" ;
lin epicondylitis_N = mkN "epicondylitis" ;
lin epicranium_N = mkN "epicranium" ;
lin epicure_N = mkN "epicure" "epicures";
lin epicurean_A = compoundA (mkA "epicurean");
lin epicurean_N = mkN "epicurean" "epicureans";
lin epicureanism_N = mkN "epicureanism" ;
lin epicurism_N = mkN "epicurism" ;
lin epicycle_N = mkN "epicycle" ;
lin epicyclic_A = mkA "epicyclic" ;
lin epicycloid_N = mkN "epicycloid" ;
lin epideictic_A = mkA "epideictic" ;
lin epidemic_A = compoundA (mkA "epidemic");
lin epidemic_N = mkN "epidemic" "epidemics";
lin epidemiologic_A = mkA "epidemiologic" ;
lin epidemiologist_N = mkN "epidemiologist" "epidemiologists";
lin epidemiology_N = mkN "epidemiology" ;
lin epidendron_N = mkN "epidendron" ;
lin epidermis_N = mkN "epidermis" ;
lin epidiascope_N = mkN "epidiascope" "epidiascopes";
lin epididymis_N = mkN "epididymis" ;
lin epididymitis_N = mkN "epididymitis" ;
lin epidural_A = mkA "epidural" ;
lin epigastric_A = mkA "epigastric" ;
lin epigastrium_N = mkN "epigastrium" ;
lin epigenesis_N = mkN "epigenesis" ;
lin epiglottis_N = mkN "epiglottis" "epiglottises";
lin epiglottitis_N = mkN "epiglottitis" ;
lin epigone_N = mkN "epigone" ;
lin epigram_N = mkN "epigram" "epigrams";
lin epigrammatic_A = compoundA (mkA "epigrammatic");
lin epigraph_N = mkN "epigraph" ;
lin epigraphy_N = mkN "epigraphy" ;
lin epikeratophakia_N = mkN "epikeratophakia" ;
lin epilation_N = mkN "epilation" ;
lin epilepsy_N = mkN "epilepsy" ;
lin epileptic_A = compoundA (mkA "epileptic");
lin epilepticMasc_N = mkN masculine (mkN "epileptic" "epileptics");
lin epilepticFem_N = mkN feminine (mkN "epileptic" "epileptics");
lin epilithic_A = mkA "epilithic" ;
lin epilogue_N = mkN "epilogue" "epilogues";
lin epimorphic_A = mkA "epimorphic" ;
lin epinephrine_N = mkN "epinephrine" ;
lin epiphany_N = mkN "epiphany" ;
lin epiphany_PN = mkPN "Epiphany";
lin epiphenomenon_N = mkN "epiphenomenon" ;
lin epiphora_N = mkN "epiphora" ;
lin epiphyllum_N = mkN "epiphyllum" ;
lin epiphyseal_A = mkA "epiphyseal" ;
lin epiphysis_N = mkN "epiphysis" ;
lin epiphytic_A = mkA "epiphytic" ;
lin epiphytotic_A = mkA "epiphytotic" ;
lin epiplexis_N = mkN "epiplexis" ;
lin episcia_N = mkN "episcia" ;
lin episcleritis_N = mkN "episcleritis" ;
lin episcopacy_N = mkN "episcopacy" ;
lin episcopal_A = compoundA (mkA "episcopal");
lin episcopalian_A = compoundA (mkA "episcopalian");
lin episcopalian_N = mkN "episcopalian" "episcopalians";
lin episcopate_N = mkN "episcopate" ;
lin episiotomy_N = mkN "episiotomy" ;
lin episode_N = mkN "episode" "episodes";
lin episodic_A = compoundA (mkA "episodic");
lin episodically_Adv = mkAdv "episodically" ;
lin episome_N = mkN "episome" ;
lin epispadias_N = mkN "epispadias" ;
lin episteme_N = mkN "episteme" ;
lin epistemic_A = mkA "epistemic" ;
lin epistemologist_N = mkN "epistemologist" ;
lin epistemology_N = mkN "epistemology" ;
lin epistle_N = mkN "epistle" "epistles";
lin epistolary_A = compoundA (mkA "epistolary");
lin epitaph_N = mkN "epitaph" "epitaphs";
lin epitaxy_N = mkN "epitaxy" ;
lin epithalamium_N = mkN "epithalamium" ;
lin epithelial_A = mkA "epithelial" ;
lin epitheliod_A = mkA "epitheliod" ;
lin epithelioma_N = mkN "epithelioma" ;
lin epithelium_N = mkN "epithelium" ;
lin epithet_N = mkN "epithet" "epithets";
lin epitome_N = mkN "epitome" "epitomes";
lin epitomize_V2 = mkV2 (mkV "epitomize" "epitomizes" "epitomized" "epitomized" "epitomizing");
lin epizoan_A = mkA "epizoan" ;
lin epizoic_A = mkA "epizoic" ;
lin epizootic_A = mkA "epizootic" ;
lin epoch_N = mkN "epoch" "epochs";
lin epoch_making_A = compoundA (mkA "epoch-making");
lin epochal_A = mkA "epochal" ;
lin eponym_N = mkN "eponym" ;
lin eponymous_A = mkA "eponymous" ;
lin eponymy_N = mkN "eponymy" ;
lin epos_N = mkN "epos" ;
lin epoxy_N = mkN "epoxy" ;
lin epping_PN = mkPN "Epping";
lin epsilon_N = mkN "epsilon" ;
lin epsom_PN = mkPN "Epsom";
lin eptatretus_N = mkN "eptatretus" ;
lin equable_A = compoundA (mkA "equable");
lin equal_A = compoundA (mkA "equal");
lin equal_to_A2 = mkA2 (compoundA (mkA "equal")) (mkPrep "to");
lin equal_N = mkN "equal" "equals";
lin equal_V2 = mkV2 (variants {mkV "equal" "equals" "equaled"  "equaled"  "equaling"; -- US
                               mkV "equal" "equals" "equalled" "equalled" "equalling"});
lin equalitarian_N = mkN "equalitarian" "equalitarians";
lin equality_N = mkN "equality" ;
lin equalization_N = mkN "equalization" "equalizations";
lin equalize_V2 = mkV2 (mkV "equalize" "equalizes" "equalized" "equalized" "equalizing");
lin equalizer_N = mkN "equalizer" "equalizers";
lin equanimity_N = mkN "equanimity" ;
lin equatability_N = mkN "equatability" ;
lin equate_V2 = mkV2 (mkV "equate" "equates" "equated" "equated" "equating");
lin equation_N = mkN "equation" "equations";
lin equator_N = mkN "equator" "equators";
lin equatorial_A = compoundA (mkA "equatorial");
lin equatorial_N = mkN "equatorial" ;
lin equerry_N = mkN "equerry" "equerries";
lin equestrian_A = compoundA (mkA "equestrian");
lin equestrian_N = mkN "equestrian" "equestrians";
lin equiangular_A = mkA "equiangular" ;
lin equidistant_A = compoundA (mkA "equidistant");
lin equidistribution_N = mkN "equidistribution" ;
lin equilateral_A = compoundA (mkA "equilateral");
lin equilateral_N = mkN "equilateral" ;
lin equilibration_N = mkN "equilibration" ;
lin equilibrium_N = mkN "equilibrium" ;
lin equine_A = compoundA (mkA "equine");
lin equine_N = mkN "equine" ;
lin equinoctial_A = compoundA (mkA "equinoctial");
lin equinox_N = mkN "equinox" "equinoxes";
lin equip_V2 = mkV2 (mkV "equip" "equips" "equipped" "equipped" "equipping");
lin equipage_N = mkN "equipage" "equipages";
lin equipment_N = mkN "equipment" ;
lin equipoise_N = mkN "equipoise" "equipoises";
lin equipoised_A = mkA "equipoised" ;
lin equipotent_A = mkA "equipotent" ;
lin equiprobable_A = mkA "equiprobable" ;
lin equitable_A = compoundA (mkA "equitable");
lin equity_N = mkN "equity" "equities";
lin equivalence_N = mkN "equivalence" "equivalences";
lin equivalent_A = compoundA (mkA "equivalent");
lin equivalent_N = mkN "equivalent" "equivalents";
lin equivocal_A = compoundA (mkA "equivocal");
lin equivocation_N = mkN "equivocation" "equivocations";
lin er_Interj = ss "er";
lin era_N = mkN "era" "eras";
lin eradicable_A = mkA "eradicable" ;
lin eradicate_V2 = mkV2 (mkV "eradicate" "eradicates" "eradicated" "eradicated" "eradicating");
lin eradication_N = mkN "eradication" "eradications";
lin erase_V2 = mkV2 (mkV "erase" "erases" "erased" "erased" "erasing");
lin eraser_N = mkN "eraser" "erasers";
lin erasure_N = mkN "erasure" "erasures";
lin erbium_N = mkN "erbium" ;
lin ere_Adv = mkAdv "ere";
lin erect_A = compoundA (mkA "erect");
lin erect_V2 = mkV2 (mkV "erect" "erects" "erected" "erected" "erecting");
lin erectile_A = compoundA (mkA "erectile");
lin erecting_N = mkN "erecting" ;
lin erection_N = mkN "erection" "erections";
lin erectness_N = mkN "erectness" ;
lin eremite_N = mkN "eremite" "eremites";
lin eremitic_A = mkA "eremitic" ;
lin eremitism_N = mkN "eremitism" ;
lin erethism_N = mkN "erethism" ;
lin erfurt_PN = mkPN "Erfurt";
lin erg_N = mkN "erg" "ergs";
lin ergo_Adv = mkAdv "ergo";
lin ergodic_A = mkA "ergodic" ;
lin ergodicity_N = mkN "ergodicity" ;
lin ergonomic_A = mkA "ergonomic" ;
lin ergonomics_N = mkN "ergonomics" "ergonomics";
lin ergonovine_N = mkN "ergonovine" ;
lin ergosterol_N = mkN "ergosterol" ;
lin ergot_N = mkN "ergot" ;
lin ergotamine_N = mkN "ergotamine" ;
lin ergotic_A = mkA "ergotic" ;
lin ergotism_N = mkN "ergotism" ;
lin ergotropic_A = mkA "ergotropic" ;
lin ergotropism_N = mkN "ergotropism" ;
lin eric_PN = mkPN "Eric";
lin erica_N = mkN "erica" ;
lin erica_PN = mkPN "Erica";
lin erin_PN = mkPN "Erin";
lin eriogonum_N = mkN "eriogonum" ;
lin eristic_A = mkA "eristic" ;
lin eristic_N = mkN "eristic" ;
lin eritrea_PN = mkPN "Eritrea";
lin eritrean_A = compoundA (mkA "eritrean");
lin eritrean_N = mkN "eritrean" "eritreans";
lin erlangen_PN = mkPN "Erlangen";
lin ermine_N = mkN "ermine" ;
lin ern_N = mkN "ern" ;
lin ernest_PN = mkPN "Ernest";
lin ernie_PN = mkPN "Ernie";
lin erode_V = mkV "erode";
lin erode_V2 = mkV2 (mkV "erode" "erodes" "eroded" "eroded" "eroding");
lin erogenous_A = compoundA (mkA "erogenous");
lin erose_A = mkA "erose" ;
lin erosion_N = mkN "erosion" ;
lin erosive_A = compoundA (mkA "erosive");
lin erotic_A = compoundA (mkA "erotic");
lin erotic_N = mkN "erotic" ;
lin erotically_Adv = mkAdv "erotically" ;
lin eroticism_N = mkN "eroticism" ;
lin err_V = mkV "err" "errs" "erred" "erred" "erring";
lin errancy_N = mkN "errancy" ;
lin errand_N = mkN "errand" "errands";
lin errant_A = compoundA (mkA "errant");
lin erratic_A = compoundA (mkA "erratic");
lin erratically_Adv = mkAdv "erratically";
lin erratum_N = mkN "erratum" "errata";
lin errhine_A = mkA "errhine" ;
lin erroneous_A = compoundA (mkA "erroneous");
lin erroneousness_N = mkN "erroneousness" ;
lin error_N = mkN "error" "errors";
lin errorless_A = mkA "errorless" ;
lin ersatz_A = mkA "ersatz" ;
lin ersatz_N = mkN "ersatz" ;
lin erse_N = mkN "erse" ;
lin eructation_N = mkN "eructation" "eructations";
lin erudite_A = compoundA (mkA "erudite");
lin eruditeness_N = mkN "eruditeness" ;
lin erudition_N = mkN "erudition" ;
lin erupt_V = mkV "erupt" "erupts" "erupted" "erupted" "erupting";
lin eruption_N = mkN "eruption" "eruptions";
lin eruptive_A = mkA "eruptive" ;
lin erwinia_N = mkN "erwinia" ;
lin eryngo_N = mkN "eryngo" ;
lin erysipelas_N = mkN "erysipelas" ;
lin erythema_N = mkN "erythema" ;
lin erythematous_A = mkA "erythematous" ;
lin erythrite_N = mkN "erythrite" ;
lin erythroblast_N = mkN "erythroblast" ;
lin erythroblastosis_N = mkN "erythroblastosis" ;
lin erythroderma_N = mkN "erythroderma" ;
lin erythroid_A = mkA "erythroid" ;
lin erythromycin_N = mkN "erythromycin" ;
lin erythropoiesis_N = mkN "erythropoiesis" ;
lin erythropoietic_A = mkA "erythropoietic" ;
lin erythropoietin_N = mkN "erythropoietin" ;
lin escadrille_N = mkN "escadrille" ;
lin escalade_N = mkN "escalade" ;
lin escalader_N = mkN "escalader" ;
lin escalate_V = mkV "escalate" "escalates" "escalated" "escalated" "escalating";
lin escalate_V2 = mkV2 (mkV "escalate" "escalates" "escalated" "escalated" "escalating");
lin escalation_N = mkN "escalation" "escalations";
lin escalator_N = mkN "escalator" "escalators";
lin escalope_N = mkN "escalope" "escalopes";
lin escapade_N = mkN "escapade" "escapades";
lin escape_N = mkN "escape" "escapes";
lin escape_V = mkV "escape" "escapes" "escaped" "escaped" "escaping";
lin escape_V2 = mkV2 (mkV "escape" "escapes" "escaped" "escaped" "escaping");
lin escape_VS = mkVS (mkV "escape" "escapes" "escaped" "escaped" "escaping");
lin escapee_N = mkN "escapee" "escapees";
lin escapement_N = mkN "escapement" "escapements";
lin escapism_N = mkN "escapism" ;
lin escapist_N = mkN "escapist" "escapists";
lin escapologist_N = mkN "escapologist" "escapologists";
lin escapology_N = mkN "escapology" ;
lin escargot_N = mkN "escargot" ;
lin escarpment_N = mkN "escarpment" "escarpments";
lin eschar_N = mkN "eschar" ;
lin eschatological_A = mkA "eschatological" ;
lin eschatologist_N = mkN "eschatologist" ;
lin eschatology_N = mkN "eschatology" ;
lin escheat_N = mkN "escheat" ;
lin escherichia_N = mkN "escherichia" ;
lin eschew_V2 = mkV2 (mkV "eschew" "eschews" "eschewed" "eschewed" "eschewing");
lin escolar_N = mkN "escolar" ;
lin escort_N = mkN "escort" "escorts";
lin escort_V2 = mkV2 (mkV "escort" "escorts" "escorted" "escorted" "escorting");
lin escritoire_N = mkN "escritoire" "escritoires";
lin escrow_N = mkN "escrow" ;
lin escudo_N = mkN "escudo" "escudos";
lin escutcheon_N = mkN "escutcheon" "escutcheons";
lin esfahan_PN = mkPN "Esfahan";
lin esker_N = mkN "esker" ;
lin eskimo_N = mkN "eskimo" "eskimos";
lin esmolol_N = mkN "esmolol" ;
lin esophageal_A = mkA "esophageal" ;
lin esophagitis_N = mkN "esophagitis" ;
lin esophagoscope_N = mkN "esophagoscope" ;
lin esophagus_N = mkN "esophagus" "esophaguses";
lin esoteric_A = compoundA (mkA "esoteric");
lin esoterica_N = mkN "esoterica" ;
lin esp_N = mkN "esp" ;
lin espadrille_N = mkN "espadrille" ;
lin espalier_N = mkN "espalier" "espaliers";
lin especial_A = compoundA (mkA "especial");
lin esperanto_N = mkN "esperanto" ;
lin espionage_N = mkN "espionage" ;
lin esplanade_N = mkN "esplanade" "esplanades";
lin espousal_N = mkN "espousal" "espousals";
lin espouse_V2 = mkV2 (mkV "espouse" "espouses" "espoused" "espoused" "espousing");
lin espresso_N = mkN "espresso" "espressos";
lin esprit_N = mkN "esprit" ;
lin esprit_de_corps_N = mkN "esprit de corps" "IRREG";
lin espy_V2 = mkV2 (mkV "espy" "espies" "espied" "espied" "espying");
lin esq_PN = mkPN "Esq";
lin esquire_N = mkN "esquire" "esquires";
lin essay_N = mkN "essay" "essays";
lin essay_V = mkV "essay" "essays" "essayed" "essayed" "essaying";
lin essay_V2 = mkV2 (mkV "essay" "essays" "essayed" "essayed" "essaying");
lin essayist_N = mkN "essayist" "essayists";
lin essen_PN = mkPN "Essen";
lin essence_N = mkN "essence" "essences";
lin essential_A = compoundA (mkA "essential");
lin essential_N = mkN "essential" "essentials";
lin essentiality_N = mkN "essentiality" ;
lin essex_PN = mkPN "Essex";
lin establish_V2 = mkV2 (mkV "establish" "establishes" "established" "established" "establishing");
lin establishment_N = mkN "establishment" "establishments";
lin establishmentarianism_N = mkN "establishmentarianism" ;
lin estaminet_N = mkN "estaminet" "estaminets";
lin estate_N = mkN "estate" "estates";
lin estazolam_N = mkN "estazolam" ;
lin esteem_N = mkN "esteem" ;
lin esteem_V2 = mkV2 (mkV "esteem" "esteems" "esteemed" "esteemed" "esteeming");
lin ester_N = mkN "ester" ;
lin esther_PN = mkPN "Esther";
lin esthete_N = mkN "esthete" "esthetes";
lin esthetic_A = compoundA (mkA "esthetic");
lin esthetic_N = mkN "esthetic" ;
lin esthetical_A = compoundA (mkA "esthetical");
lin esthetician_N = mkN "esthetician" ;
lin esthetics_N = mkN "esthetics" "esthetics";
lin estimable_A = compoundA (mkA "estimable");
lin estimate_N = mkN "estimate" "estimates";
lin estimate_V = mkV "estimate" "estimates" "estimated" "estimated" "estimating";
lin estimate_V2 = mkV2 (mkV "estimate" "estimates" "estimated" "estimated" "estimating");
lin estimate_V2V = mkV2V (mkV "estimate" "estimates" "estimated" "estimated" "estimating") noPrep to_Prep ;
lin estimate_VS = mkVS (mkV "estimate" "estimates" "estimated" "estimated" "estimating");
lin estimation_N = mkN "estimation" ;
lin estivation_N = mkN "estivation" ;
lin estoppel_N = mkN "estoppel" ;
lin estradiol_N = mkN "estradiol" ;
lin estrange_V2 = mkV2 (mkV "estrange" "estranges" "estranged" "estranged" "estranging");
lin estrangement_N = mkN "estrangement" "estrangements";
lin estranging_A = mkA "estranging" ;
lin estriol_N = mkN "estriol" ;
lin estrogen_N = mkN "estrogen" ;
lin estrogenic_A = mkA "estrogenic" ;
lin estrone_N = mkN "estrone" ;
lin estrous_A = mkA "estrous" ;
lin estrus_N = mkN "estrus" ;
lin estuarine_A = mkA "estuarine" ;
lin estuary_N = mkN "estuary" "estuaries";
lin et_al_PN = mkPN "Et al";
lin et_seq_PN = mkPN "Et seq";
lin eta_N = mkN "eta" ;
lin etagere_N = mkN "etagere" ;
lin etamine_N = mkN "etamine" ;
lin etanercept_N = mkN "etanercept" ;
lin etc_PN = mkPN "Etc";
lin etcetera_N = mkN "etcetera" ;
lin etch_V = mkV "etch" "etches" "etched" "etched" "etching";
lin etch_V2 = mkV2 (mkV "etch" "etches" "etched" "etched" "etching");
lin etcher_N = mkN "etcher" "etchers";
lin etching_N = mkN "etching" "etchings";
lin etd_N = mkN "etd" ;
lin eternal_A = compoundA (mkA "eternal");
lin eternity_N = mkN "eternity" "eternities";
lin ethane_N = mkN "ethane" ;
lin ethchlorvynol_N = mkN "ethchlorvynol" ;
lin ethel_PN = mkPN "Ethel";
lin ether_N = mkN "ether" ;
lin ethereal_A = compoundA (mkA "ethereal");
lin ethernet_N = mkN "ethernet" ;
lin ethic_N = mkN "ethic" "ethics";
lin ethical_A = compoundA (mkA "ethical");
lin ethicism_N = mkN "ethicism" ;
lin ethicist_N = mkN "ethicist" ;
lin ethics_N = mkN "ethics" ;
lin ethiopia_PN = mkPN "Ethiopia";
lin ethiopian_A = compoundA (mkA "ethiopian");
lin ethiopian_N = mkN "ethiopian" "ethiopians";
lin ethmoid_N = mkN "ethmoid" ;
lin ethnarch_N = mkN "ethnarch" ;
lin ethnic_A = compoundA (mkA "ethnic");
lin ethnic_N = mkN "ethnic" ;
lin ethnically_Adv = mkAdv "ethnically";
lin ethnicity_N = mkN "ethnicity" ;
lin ethnocentric_A = mkA "ethnocentric" ;
lin ethnocentrism_N = mkN "ethnocentrism" ;
lin ethnographer_N = mkN "ethnographer" "ethnographers";
lin ethnographic_A = compoundA (mkA "ethnographic");
lin ethnography_N = mkN "ethnography" ;
lin ethnological_A = compoundA (mkA "ethnological");
lin ethnologist_N = mkN "ethnologist" "ethnologists";
lin ethnology_N = mkN "ethnology" ;
lin ethologist_N = mkN "ethologist" ;
lin ethology_N = mkN "ethology" ;
lin ethos_N = mkN "ethos" (variants {"ethe"; "ethea"});
lin ethosuximide_N = mkN "ethosuximide" ;
lin ethyl_N = mkN "ethyl" "ethyls";
lin ethylene_N = mkN "ethylene" ;
lin etiolate_A = mkA "etiolate" ;
lin etiolation_N = mkN "etiolation" ;
lin etiological_A = mkA "etiological" ;
lin etiologist_N = mkN "etiologist" ;
lin etiology_N = mkN "etiology" "etiologies";
lin etiquette_N = mkN "etiquette" ;
lin etodolac_N = mkN "etodolac" ;
lin etude_N = mkN "etude" ;
lin etui_N = mkN "etui" ;
lin etymological_A = compoundA (mkA "etymological");
lin etymologist_N = mkN "etymologist" "etymologists";
lin etymology_N = mkN "etymology" "etymologies";
lin etymon_N = mkN "etymon" ;
lin eubacteria_N = mkN "eubacteria" ;
lin eucalyptus_N = mkN "eucalyptus" "eucalyptuses";
lin eucharist_N = mkN "eucharist" "eucharists";
lin euchre_N = mkN "euchre" ;
lin euclidean_A = compoundA (mkA (variants {"euclidean"; "euclidian"}));
lin eudemon_N = mkN "eudemon" ;
lin eudemonic_A = mkA "eudemonic" ;
lin eudemonism_N = mkN "eudemonism" ;
lin eudiometer_N = mkN "eudiometer" ;
lin eugene_PN = mkPN "Eugene";
lin eugenic_A = mkA "eugenic" ;
lin eugenics_N = mkN "eugenics" "eugenics";
lin euglena_N = mkN "euglena" ;
lin euglenoid_N = mkN "euglenoid" ;
lin eukaryote_N = mkN "eukaryote" ;
lin eukaryotic_A = mkA "eukaryotic" ;
lin eulogist_N = mkN "eulogist" "eulogists";
lin eulogistic_A = compoundA (mkA "eulogistic");
lin eulogize_V2 = mkV2 (mkV "eulogize" "eulogizes" "eulogized" "eulogized" "eulogizing");
lin eulogy_N = mkN "eulogy" "eulogies";
lin eunice_PN = mkPN "Eunice";
lin eunuch_N = mkN "eunuch" "eunuchs";
lin euphemism_N = mkN "euphemism" "euphemisms";
lin euphemistic_A = compoundA (mkA "euphemistic");
lin euphemistically_Adv = mkAdv "euphemistically";
lin euphonic_A = mkA "euphonic" ;
lin euphonious_A = mkA "euphonious" ;
lin euphonium_N = mkN "euphonium" "euphoniums";
lin euphony_N = mkN "euphony" "euphonies";
lin euphorbium_N = mkN "euphorbium" ;
lin euphoria_N = mkN "euphoria" ;
lin euphoriant_A = mkA "euphoriant" ;
lin euphoriant_N = mkN "euphoriant" ;
lin euphoric_A = compoundA (mkA "euphoric");
lin euphuism_N = mkN "euphuism" "euphuisms";
lin eupnea_N = mkN "eupnea" ;
lin eurasia_PN = mkPN "Eurasia";
lin eurasian_A = compoundA (mkA "eurasian");
lin eurasian_N = mkN "eurasian" "eurasians";
lin eurhythmics_N = mkN "eurhythmics" "eurhythmics";
lin euro_N = mkN "euro" "euros";
lin eurodollar_N = mkN "eurodollar" "eurodollars";
lin europe_PN = mkPN "Europe";
lin european_A = compoundA (mkA "European");
lin european_N = mkN "European" "Europeans";
lin europium_N = mkN "europium" ;
lin eurovision_PN = mkPN "Eurovision";
lin eurypterid_N = mkN "eurypterid" ;
lin eurythmics_N = mkN "eurythmics" "eurythmics";
lin eurythmy_N = mkN "eurythmy" ;
lin eusporangiate_A = mkA "eusporangiate" ;
lin eusporangium_N = mkN "eusporangium" ;
lin eustachian_A = compoundA (mkA "eustachian");
lin eutectic_N = mkN "eutectic" ;
lin euthanasia_N = mkN "euthanasia" ;
lin euthenics_N = mkN "euthenics" ;
lin eutherian_A = mkA "eutherian" ;
lin eutrophic_A = mkA "eutrophic" ;
lin eutrophication_N = mkN "eutrophication" ;
lin eva_PN = mkPN "Eva";
lin evacuate_V2 = mkV2 (mkV "evacuate" "evacuates" "evacuated" "evacuated" "evacuating");
lin evacuation_N = mkN "evacuation" "evacuations";
lin evacuee_N = mkN "evacuee" "evacuees";
lin evade_V2 = mkV2 (mkV "evade" "evades" "evaded" "evaded" "evading");
lin evaluate_V = mkV "evaluate";
lin evaluate_V2 = mkV2 (mkV "evaluate" "evaluates" "evaluated" "evaluated" "evaluating");
lin evaluation_N = mkN "evaluation" "evaluations";
lin evaluative_A = compoundA (mkA "evaluative");
lin evaluator_N = mkN "evaluator" ;
lin evanescence_N = mkN "evanescence" ;
lin evanescent_A = compoundA (mkA "evanescent");
lin evangelical_A = compoundA (mkA "evangelical");
lin evangelicalism_N = mkN "evangelicalism" ;
lin evangelism_N = mkN "evangelism" ;
lin evangelist_N = mkN "evangelist" "evangelists";
lin evangelistic_A = compoundA (mkA "evangelistic");
lin evaporable_A = mkA "evaporable" ;
lin evaporate_V = mkV "evaporate" "evaporates" "evaporated" "evaporated" "evaporating";
lin evaporate_V2 = mkV2 (mkV "evaporate" "evaporates" "evaporated" "evaporated" "evaporating");
lin evaporate_VS = mkVS (mkV "evaporate" "evaporates" "evaporated" "evaporated" "evaporating");
lin evaporation_N = mkN "evaporation" "evaporations";
lin evaporative_A = mkA "evaporative" ;
lin evaporite_N = mkN "evaporite" ;
lin evasion_N = mkN "evasion" "evasions";
lin evasive_A = compoundA (mkA "evasive");
lin evasiveness_N = mkN "evasiveness" ;
lin eve_N = mkN "eve" "eves";
lin eve_PN = mkPN "Eve";
lin evelyn_PN = mkPN "Evelyn";
lin even_A = compoundA (mkA "even");
lin even_AdA = mkAdA "even";
lin even_AdV = mkAdV "even";
lin even_Adv = mkAdv "even";
lin even_N = mkN "even" "evens";
lin even_V2 = mkV2 (mkV "even" "evens" "evened" "evened" "evening");
lin even_handed_A = compoundA (mkA "even-handed");
lin even_though_Subj = mkSubj "even though";
lin evenhanded_A = mkA "evenhanded" ;
lin evening_N = mkN "evening" "evenings";
lin evenness_N = mkN "evenness" ;
lin evensong_N = mkN "evensong" "evensongs";
lin event_N = mkN "event" "events";
lin eventful_A = compoundA (mkA "eventful");
lin eventide_N = mkN "eventide" ;
lin eventration_N = mkN "eventration" ;
lin eventual_A = compoundA (mkA "eventual");
lin eventuality_N = mkN "eventuality" "eventualities";
lin ever_AdV = mkAdV "ever";
lin ever_Adv = mkAdv "ever" ;
lin evergreen_A = compoundA (mkA "evergreen");
lin evergreen_N = mkN "evergreen" "evergreens";
lin everlasting_A = compoundA (mkA "everlasting");
lin everlasting_N = mkN "everlasting" ;
lin everlastingness_N = mkN "everlastingness" ;
lin evermore_Adv = mkAdv "evermore";
lin eversion_N = mkN "eversion" ;
lin every_Det = mkDeterminerSpec singular "every" "everyone" "everything" False ;
lin everybody_NP = mkNP "everybody" "everybody" "everybody's" singular P3 human;
lin everyday_A = compoundA (mkA "everyday");
lin everyman_N = mkN "everyman" ;
lin everyone_NP = mkNP "everyone" "everyone" "everyone's" singular P3 human;
lin everyplace_Adv = mkAdv "everyplace";
lin everything_NP = regNP "everything" singular;
lin everywhere_Adv = mkAdv "everywhere";
lin evesham_PN = mkPN "Evesham";
lin evict_V2 = mkV2 (mkV "evict" "evicts" "evicted" "evicted" "evicting");
lin eviction_N = mkN "eviction" "evictions";
lin evidence_N = mkN "evidence" ;
lin evidence_V2 = mkV2 (mkV "evidence" "evidences" "evidenced" "evidenced" "evidencing");
lin evident_A = compoundA (mkA "evident");
lin evidential_A = mkA "evidential" ;
lin evidentiary_A = mkA "evidentiary" ;
lin evil_A = compoundA (mkA "evil");
lin evil_N = mkN "evil" "evils";
lin evil_doer_N = mkN "evil-doer" "evil-doers";
lin evil_minded_A = compoundA (mkA "evil-minded");
lin evince_V2 = mkV2 (mkV "evince" "evinces" "evinced" "evinced" "evincing");
lin eviscerate_A = mkA "eviscerate" ;
lin eviscerate_V2 = mkV2 (mkV "eviscerate" "eviscerates" "eviscerated" "eviscerated" "eviscerating");
lin evisceration_N = mkN "evisceration" ;
lin evitable_A = mkA "evitable" ;
lin evocation_N = mkN "evocation" "evocations";
lin evocative_A = compoundA (mkA "evocative");
lin evoke_V2 = mkV2 (mkV "evoke" "evokes" "evoked" "evoked" "evoking");
lin evolution_N = mkN "evolution" "evolutions";
lin evolutionary_A = compoundA (mkA "evolutionary");
lin evolutionistMasc_N = mkN masculine (mkN "evolutionist");
lin evolutionistFem_N = mkN feminine (mkN "evolutionist");
lin evolve_V = mkV "evolve" "evolves" "evolved" "evolved" "evolving";
lin evolve_V2 = mkV2 (mkV "evolve" "evolves" "evolved" "evolved" "evolving");
lin ewe_N = mkN "ewe" "ewes";
lin ewell_PN = mkPN "Ewell";
lin ewer_N = mkN "ewer" "ewers";
lin ex_directory_A = compoundA (mkA "ex-directory");
lin ex_gratia_A = compoundA (mkA "ex gratia");
lin ex_officio_A = compoundA (mkA "ex officio");
lin ex_officio_Adv = mkAdv "ex officio";
lin ex_service_A = compoundA (mkA "ex-service");
lin ex_serviceman_N = mkN masculine (mkN "ex-serviceman" "ex-servicemen");
lin exabit_N = mkN "exabit" ;
lin exabyte_N = mkN "exabyte" ;
lin exacerbate_V2 = mkV2 (mkV "exacerbate" "exacerbates" "exacerbated" "exacerbated" "exacerbating");
lin exacerbation_N = mkN "exacerbation" "exacerbations";
lin exact_A = compoundA (mkA "exact");
lin exact_V2 = mkV2 (mkV "exact" "exacts" "exacted" "exacted" "exacting");
lin exacta_N = mkN "exacta" ;
lin exacting_A = compoundA (mkA "exacting");
lin exaction_N = mkN "exaction" "exactions";
lin exactitude_N = mkN "exactitude" ;
lin exactness_N = mkN "exactness" ;
lin exaggerate_V = mkV "exaggerate" "exaggerates" "exaggerated" "exaggerated" "exaggerating";
lin exaggerate_V2 = mkV2 (mkV "exaggerate" "exaggerates" "exaggerated" "exaggerated" "exaggerating");
lin exaggeration_N = mkN "exaggeration" "exaggerations";
lin exalt_V2 = mkV2 (mkV "exalt" "exalts" "exalted" "exalted" "exalting");
lin exaltation_N = mkN "exaltation" ;
lin exam_N = mkN "exam" "exams";
lin examen_N = mkN "examen" ;
lin examination_N = mkN "examination" "examinations";
lin examine_V2 = mkV2 (mkV "examine" "examines" "examined" "examined" "examining");
lin examiner_N = mkN "examiner" "examiners";
lin example_N = mkN "example" "examples";
lin exanthem_N = mkN "exanthem" ;
lin exarch_N = mkN "exarch" ;
lin exasperate_V2 = mkV2 (mkV "exasperate" "exasperates" "exasperated" "exasperated" "exasperating");
lin exasperating_A = mkA "exasperating" ;
lin exasperation_N = mkN "exasperation" ;
lin exaugural_A = mkA "exaugural" ;
lin exbibit_N = mkN "exbibit" ;
lin excavate_V = mkV "excavate" "excavates" "excavated" "excavated" "excavating";
lin excavate_V2 = mkV2 (mkV "excavate" "excavates" "excavated" "excavated" "excavating");
lin excavation_N = mkN "excavation" "excavations";
lin excavator_N = mkN "excavator" "excavators";
lin exceed_V2 = mkV2 (mkV "exceed" "exceeds" "exceeded" "exceeded" "exceeding");
lin exceedance_N = mkN "exceedance" ;
lin exceeding_A = mkA "exceeding" ;
lin excel_V = mkV "excel" "excels" "excelled" "excelled" "excelling";
lin excel_V2 = mkV2 (mkV "excel" "excels" "excelled" "excelled" "excelling");
lin excellence_N = mkN "excellence" "excellences";
lin excellency_N = mkN "excellency" "excellencies";
lin excellent_A = compoundA (mkA "excellent");
lin excelsior_N = mkN "excelsior" ;
lin except_Prep = mkPrep "except";
lin except_V2 = mkV2 (mkV "except" "excepts" "excepted" "excepted" "excepting");
lin exception_N = mkN "exception" "exceptions";
lin exceptionable_A = compoundA (mkA "exceptionable");
lin exceptional_A = compoundA (mkA "exceptional");
lin excerpt_N = mkN "excerpt" "excerpts";
lin excess_A = compoundA (mkA "excess");
lin excess_N = mkN "excess" "excesses";
lin excessive_A = compoundA (mkA "excessive");
lin exchange_N = mkN "exchange" "exchanges";
lin exchange_V2 = mkV2 (mkV "exchange" "exchanges" "exchanged" "exchanged" "exchanging");
lin exchangeability_N = mkN "exchangeability" ;
lin exchangeable_A = compoundA (mkA "exchangeable");
lin exchanger_N = mkN "exchanger" "exchangers";
lin exchequer_N = mkN "exchequer" "exchequers";
lin excise_N = mkN "excise" ;
lin excise_V2 = mkV2 (mkV "excise" "excises" "excised" "excised" "excising");
lin exciseman_N = mkN masculine (mkN "exciseman" "excisemen");
lin excision_N = mkN "excision" "excisions";
lin excitability_N = mkN "excitability" ;
lin excitable_A = compoundA (mkA "excitable");
lin excitant_A = mkA "excitant" ;
lin excitation_N = mkN "excitation" ;
lin excite_V2 = mkV2 (mkV "excite" "excites" "excited" "excited" "exciting");
lin excitedly_Adv = mkAdv "excitedly";
lin excitement_N = mkN "excitement" "excitements";
lin exciting_A = mkA "exciting" ;
lin excl_PN = mkPN "Excl";
lin exclaim_V = mkV "exclaim" "exclaims" "exclaimed" "exclaimed" "exclaiming";
lin exclaim_V2 = mkV2 (mkV "exclaim" "exclaims" "exclaimed" "exclaimed" "exclaiming");
lin exclaim_VQ = mkVQ (mkV "exclaim" "exclaims" "exclaimed" "exclaimed" "exclaiming");
lin exclamation_N = mkN "exclamation" "exclamations";
lin exclamatory_A = compoundA (mkA "exclamatory");
lin exclude_V2 = mkV2 (mkV "exclude" "excludes" "excluded" "excluded" "excluding");
lin exclusion_N = mkN "exclusion" ;
lin exclusive_A = compoundA (mkA "exclusive");
lin exclusive_N = mkN "exclusive" ;
lin excogitate_V2 = mkV2 (mkV "excogitate" "excogitates" "excogitated" "excogitated" "excogitating");
lin excogitation_N = mkN "excogitation" "excogitations";
lin excogitative_A = mkA "excogitative" ;
lin excogitator_N = mkN "excogitator" ;
lin excommunicate_V2 = mkV2 (mkV "excommunicate" "excommunicates" "excommunicated" "excommunicated" "excommunicating");
lin excommunication_N = mkN "excommunication" "excommunications";
lin excoriate_V2 = mkV2 (mkV "excoriate" "excoriates" "excoriated" "excoriated" "excoriating");
lin excoriation_N = mkN "excoriation" "excoriations";
lin excrement_N = mkN "excrement" ;
lin excrescence_N = mkN "excrescence" "excrescences";
lin excrescent_A = mkA "excrescent" ;
lin excrete_V2 = mkV2 (mkV "excrete" "excretes" "excreted" "excreted" "excreting");
lin excretion_N = mkN "excretion" "excretions";
lin excretory_A = mkA "excretory" ;
lin excruciating_A = compoundA (mkA "excruciating");
lin exculpate_V2 = mkV2 (mkV "exculpate" "exculpates" "exculpated" "exculpated" "exculpating");
lin exculpation_N = mkN "exculpation" ;
lin exculpatory_A = mkA "exculpatory" ;
lin excursion_N = mkN "excursion" "excursions";
lin excursionist_N = mkN "excursionist" "excursionists";
lin excusable_A = compoundA (mkA "excusable");
lin excuse_N = mkN "excuse" "excuses";
lin excuse_V2 = mkV2 (mkV "excuse" "excuses" "excused" "excused" "excusing");
lin excuse_me_Interj = ss "excuse me";
lin execrable_A = compoundA (mkA "execrable");
lin execrate_V2 = mkV2 (mkV "execrate" "execrates" "execrated" "execrated" "execrating");
lin execration_N = mkN "execration" "execrations";
lin executability_N = mkN "executability" ;
lin executant_N = mkN "executant" "executants";
lin execute_V2 = mkV2 (mkV "execute" "executes" "executed" "executed" "executing");
lin execution_N = mkN "execution" "executions";
lin executioner_N = mkN "executioner" "executioners";
lin executive_A = compoundA (mkA "executive");
lin executive_N = mkN human (mkN "executive" "executives");
lin executor_N = mkN "executor" "executors";
lin executrix_N = mkN "executrix" "executrixes";
lin exegesis_N = mkN "exegesis" ;
lin exegete_N = mkN "exegete" ;
lin exegetic_A = mkA "exegetic" ;
lin exemplar_N = mkN "exemplar" ;
lin exemplary_A = compoundA (mkA "exemplary");
lin exemplification_N = mkN "exemplification" "exemplifications";
lin exemplify_V2 = mkV2 (mkV "exemplify" "exemplifies" "exemplified" "exemplified" "exemplifying");
lin exemplifying_A = mkA "exemplifying" ;
lin exempt_A = compoundA (mkA "exempt");
lin exempt_V2 = mkV2 (mkV "exempt");
lin exempt_V2V = ingV2V (mkV "exempt" "exempts" "exempted" "exempted" "exempting") noPrep from_Prep;
lin exemption_N = mkN "exemption" "exemptions";
lin exenteration_N = mkN "exenteration" ;
lin exercise_N = mkN "exercise" "exercises";
lin exercise_V = mkV "exercise" "exercises" "exercised" "exercised" "exercising";
lin exercise_V2 = mkV2 (mkV "exercise" "exercises" "exercised" "exercised" "exercising");
lin exercise_VV = mkVV (mkV "exercise" "exercises" "exercised" "exercised" "exercising");
lin exergonic_A = mkA "exergonic" ;
lin exert_V2 = mkV2 (mkV "exert" "exerts" "exerted" "exerted" "exerting");
lin exertion_N = mkN "exertion" "exertions";
lin exeter_PN = mkPN "Exeter";
lin exfoliation_N = mkN "exfoliation" ;
lin exhalation_N = mkN "exhalation" "exhalations";
lin exhale_V = mkV "exhale" "exhales" "exhaled" "exhaled" "exhaling";
lin exhale_V2 = mkV2 (mkV "exhale" "exhales" "exhaled" "exhaled" "exhaling");
lin exhaust_N = mkN "exhaust" "exhausts";
lin exhaust_V2 = mkV2 (mkV "exhaust" "exhausts" "exhausted" "exhausted" "exhausting");
lin exhaust_pipe_N = mkN "exhaust-pipe" "exhaust-pipes";
lin exhaustible_A = mkA "exhaustible" ;
lin exhausting_A = mkA "exhausting" ;
lin exhaustion_N = mkN "exhaustion" ;
lin exhaustive_A = compoundA (mkA "exhaustive");
lin exhibit_N = mkN "exhibit" "exhibits";
lin exhibit_V2 = mkV2 (mkV "exhibit" "exhibits" "exhibited" "exhibited" "exhibiting");
lin exhibition_N = mkN "exhibition" "exhibitions";
lin exhibitioner_N = mkN "exhibitioner" "exhibitioners";
lin exhibitionism_N = mkN "exhibitionism" ;
lin exhibitionist_N = mkN "exhibitionist" "exhibitionists";
lin exhibitionistic_A = mkA "exhibitionistic" ;
lin exhibitor_N = mkN "exhibitor" "exhibitors";
lin exhilarate_V2 = mkV2 (mkV "exhilarate" "exhilarates" "exhilarated" "exhilarated" "exhilarating");
lin exhilarating_A = mkA "exhilarating" ;
lin exhilaration_N = mkN "exhilaration" ;
lin exhort_V2 = mkV2 (mkV "exhort" "exhorts" "exhorted" "exhorted" "exhorting");
lin exhortation_N = mkN "exhortation" "exhortations";
lin exhortative_A = mkA "exhortative" ;
lin exhumation_N = mkN "exhumation" "exhumations";
lin exhume_V2 = mkV2 (mkV "exhume" "exhumes" "exhumed" "exhumed" "exhuming");
lin exigency_N = mkN "exigency" "exigencies";
lin exigent_A = compoundA (mkA "exigent");
lin exiguous_A = compoundA (mkA "exiguous");
lin exile_N = mkN "exile" "exiles";
lin exile_V2 = mkV2 (mkV "exile" "exiles" "exiled" "exiled" "exiling");
lin exilic_A = mkA "exilic" ;
lin exist_V = mkV "exist" "exists" "existed" "existed" "existing";
lin exist_V2V = mkV2V (mkV "exist" "exists" "existed" "existed" "existing") noPrep to_Prep ;
lin existence_N = mkN "existence" "existences";
lin existent_A = compoundA (mkA "existent");
lin existential_A = mkA "existential" ;
lin existentialism_N = mkN "existentialism" ;
lin existentialist_A = mkA "existentialist" ;
lin existentialist_N = mkN "existentialist" "existentialists";
lin exit_N = mkN "exit" "exits";
lin exit_V = mkV "exit" "exits" "exited" "exited" "exiting";
lin exmouth_PN = mkPN "Exmouth";
lin exobiology_N = mkN "exobiology" ;
lin exocentric_A = mkA "exocentric" ;
lin exocrine_A = mkA "exocrine" ;
lin exode_N = mkN "exode" ;
lin exodontic_A = mkA "exodontic" ;
lin exodontics_N = mkN "exodontics" ;
lin exodontist_N = mkN "exodontist" ;
lin exodus_N = mkN "exodus" "exoduses";
lin exoergic_A = mkA "exoergic" ;
lin exogamous_A = mkA "exogamous" ;
lin exogamy_N = mkN "exogamy" ;
lin exogenous_A = mkA "exogenous" ;
lin exomphalos_N = mkN "exomphalos" ;
lin exon_N = mkN "exon" ;
lin exonerate_V2 = mkV2 (mkV "exonerate" "exonerates" "exonerated" "exonerated" "exonerating");
lin exoneration_N = mkN "exoneration" "exonerations";
lin exonuclease_N = mkN "exonuclease" ;
lin exophthalmos_N = mkN "exophthalmos" ;
lin exorbitance_N = mkN "exorbitance" ;
lin exorbitant_A = compoundA (mkA "exorbitant");
lin exorcism_N = mkN "exorcism" ;
lin exorcist_N = mkN "exorcist" ;
lin exorcize_V2 = mkV2 (mkV (variants {"exorcize"; "exorcise"}));
lin exordium_N = mkN "exordium" ;
lin exoskeleton_N = mkN "exoskeleton" ;
lin exosphere_N = mkN "exosphere" ;
lin exostosis_N = mkN "exostosis" ;
lin exoteric_A = mkA "exoteric" ;
lin exotherm_N = mkN "exotherm" ;
lin exothermic_A = mkA "exothermic" ;
lin exotic_A = compoundA (mkA "exotic");
lin exoticism_N = mkN "exoticism" ;
lin exotoxin_N = mkN "exotoxin" ;
lin expand_V = mkV "expand" "expands" "expanded" "expanded" "expanding";
lin expand_V2 = mkV2 (mkV "expand" "expands" "expanded" "expanded" "expanding");
lin expand_V2V = mkV2V (mkV "expand" "expands" "expanded" "expanded" "expanding") noPrep to_Prep ;
lin expandable_A = mkA "expandable" ;
lin expanse_N = mkN "expanse" "expanses";
lin expansion_N = mkN "expansion" ;
lin expansionism_N = mkN "expansionism" ;
lin expansionist_A = mkA "expansionist" ;
lin expansive_A = compoundA (mkA "expansive");
lin expansiveness_N = mkN "expansiveness" ;
lin expatiate_V = mkV "expatiate" "expatiates" "expatiated" "expatiated" "expatiating";
lin expatiation_N = mkN "expatiation" ;
lin expatriate_N = mkN "expatriate" "expatriates";
lin expatriate_V2 = mkV2 (mkV "expatriate" "expatriates" "expatriated" "expatriated" "expatriating");
lin expect_V = mkV "expect";
lin expect_V2 = mkV2 (mkV "expect");
lin expect_V2V = mkV2V (mkV "expect") noPrep (mkPrep "to") ;
lin expect_VS = mkVS (mkV "expect");
lin expect_VV = mkVV (mkV "expect") ;
lin expectable_A = mkA "expectable" ;
lin expectancy_N = mkN "expectancy" "expectancies";
lin expectant_A = compoundA (mkA "expectant");
lin expectation_N = mkN "expectation" "expectations";
lin expectedness_N = mkN "expectedness" ;
lin expectorant_N = mkN "expectorant" "expectorants";
lin expectorate_V = mkV "expectorate" "expectorates" "expectorated" "expectorated" "expectorating";
lin expectorate_V2 = mkV2 (mkV "expectorate" "expectorates" "expectorated" "expectorated" "expectorating");
lin expectoration_N = mkN "expectoration" ;
lin expedience_N = mkN "expedience" ;
lin expediency_N = mkN "expediency" ;
lin expedient_A = compoundA (mkA "expedient");
lin expedient_N = mkN "expedient" "expedients";
lin expedite_V2 = mkV2 (mkV "expedite" "expedites" "expedited" "expedited" "expediting");
lin expedition_N = mkN "expedition" "expeditions";
lin expeditionary_A = compoundA (mkA "expeditionary");
lin expeditious_A = compoundA (mkA "expeditious");
lin expel_V2 = mkV2 (mkV "expel" "expels" "expelled" "expelled" "expelling");
lin expend_V2 = mkV2 (mkV "expend" "expends" "expended" "expended" "expending");
lin expendable_A = compoundA (mkA "expendable");
lin expending_N = mkN "expending" ;
lin expenditure_N = mkN "expenditure" "expenditures";
lin expense_N = mkN "expense" "expenses";
lin expensive_A = compoundA (mkA "expensive");
lin expensiveness_N = mkN "expensiveness" ;
lin experience_N = mkN "experience" "experiences";
lin experience_V2 = mkV2 (mkV "experience" "experiences" "experienced" "experienced" "experiencing");
lin experienced_A = compoundA (mkA "experienced");
lin experiential_A = mkA "experiential" ;
lin experiment_N = mkN "experiment" "experiments";
lin experiment_V = mkV "experiment" "experiments" "experimented" "experimented" "experimenting";
lin experiment_V2 = mkV2 (mkV "experiment" "experiments" "experimented" "experimented" "experimenting");
lin experimental_A = compoundA (mkA "experimental");
lin experimentalism_N = mkN "experimentalism" ;
lin experimentation_N = mkN "experimentation" ;
lin experimenterMasc_N = mkN masculine (mkN "experimenter" "experimenters");
lin experimenterFem_N = mkN feminine (mkN "experimenter" "experimenters");
lin expert_A = compoundA (mkA "expert");
lin expert_N = mkN "expert" "experts";
lin expertise_N = mkN "expertise" ;
lin expertness_N = mkN "expertness" ;
lin expiable_A = mkA "expiable" ;
lin expiate_V2 = mkV2 (mkV "expiate" "expiates" "expiated" "expiated" "expiating");
lin expiation_N = mkN "expiation" ;
lin expiatory_A = mkA "expiatory" ;
lin expiration_N = mkN "expiration" ;
lin expiratory_A = mkA "expiratory" ;
lin expire_V = mkV "expire" "expires" "expired" "expired" "expiring";
lin expire_V2 = mkV2 (mkV "expire" "expires" "expired" "expired" "expiring");
lin expire_VS = mkVS (mkV "expire" "expires" "expired" "expired" "expiring");
lin expiry_N = mkN "expiry" "expiries";
lin explain_V2 = mkV2 (mkV "explain" "explains" "explained" "explained" "explaining");
lin explain_VS = mkVS (mkV "explain");
lin explainable_A = mkA "explainable" ;
lin explanans_N = mkN "explanans" ;
lin explanation_N = mkN "explanation" "explanations";
lin explanatory_A = compoundA (mkA "explanatory");
lin expletive_N = mkN "expletive" "expletives";
lin explicable_A = compoundA (mkA "explicable");
lin explicandum_N = mkN "explicandum" ;
lin explicate_V2 = mkV2 (mkV "explicate" "explicates" "explicated" "explicated" "explicating");
lin explication_N = mkN "explication" ;
lin explicit_A = compoundA (mkA "explicit");
lin explicitness_N = mkN "explicitness" ;
lin explode_V = mkV "explode" "explodes" "exploded" "exploded" "exploding";
lin explode_V2 = mkV2 (mkV "explode" "explodes" "exploded" "exploded" "exploding");
lin exploit_N = mkN "exploit" "exploits";
lin exploit_V2 = mkV2 (mkV "exploit" "exploits" "exploited" "exploited" "exploiting");
lin exploitation_N = mkN "exploitation" ;
lin exploitative_A = mkA "exploitative" ;
lin exploiter_N = mkN "exploiter" ;
lin exploration_N = mkN "exploration" "explorations";
lin exploratory_A = compoundA (mkA "exploratory");
lin explore_V2 = mkV2 (mkV "explore" "explores" "explored" "explored" "exploring");
lin explore_VS = mkVS (mkV "explore");
lin explorerMasc_N = mkN masculine (mkN "explorer" "explorers");
lin explorerFem_N = mkN feminine (mkN "explorer" "explorers");
lin explosion_N = mkN "explosion" "explosions";
lin explosive_A = compoundA (mkA "explosive");
lin explosive_N = mkN "explosive" "explosives";
lin expo_N = mkN "expo" "expos";
lin exponent_N = mkN "exponent" "exponents";
lin exponential_A = compoundA (mkA "exponential");
lin exponential_N = mkN "exponential" "exponentials";
lin exponentiation_N = mkN "exponentiation" ;
lin export_N = mkN "export" "exports";
lin export_V = mkV "export";
lin export_V2 = mkV2 (mkV "export" "exports" "exported" "exported" "exporting");
lin exportable_A = compoundA (mkA "exportable");
lin exportation_N = mkN "exportation" ;
lin exporterMasc_N = mkN masculine (mkN "exporter" "exporters");
lin exporterFem_N = mkN feminine (mkN "exporter" "exporters");
lin exporting_N = mkN "exporting" ;
lin expose_N = mkN "exposé" "exposés";
lin expose_V = mkV "expose";
lin expose_V2 = mkV2 (mkV "expose" "exposes" "exposed" "exposed" "exposing");
lin exposition_N = mkN "exposition" "expositions";
lin expositor_N = mkN "expositor" ;
lin expository_A = mkA "expository" ;
lin expostulate_V = mkV "expostulate" "expostulates" "expostulated" "expostulated" "expostulating";
lin expostulation_N = mkN "expostulation" "expostulations";
lin exposure_N = mkN "exposure" "exposures";
lin expound_V2 = mkV2 (mkV "expound" "expounds" "expounded" "expounded" "expounding");
lin expound_VS = mkVS (mkV "expound" "expounds" "expounded" "expounded" "expounding");
lin express_A = compoundA (mkA "express");
lin express_Adv = mkAdv "express";
lin express_N = mkN "express" "expresses";
lin express_V2 = mkV2 (mkV "express" "expresses" "expressed" "expressed" "expressing");
lin expressible_A = mkA "expressible" ;
lin expression_N = mkN "expression" "expressions";
lin expressionism_N = mkN "expressionism" ;
lin expressionist_A = mkA "expressionist" ;
lin expressionistMasc_N = mkN masculine (mkN "expressionist" "expressionists");
lin expressionistFem_N = mkN feminine (mkN "expressionist" "expressionists");
lin expressionless_A = compoundA (mkA "expressionless");
lin expressive_A = compoundA (mkA "expressive");
lin expressiveness_N = mkN "expressiveness" ;
lin expressway_N = mkN "expressway" "expressways";
lin expropriate_V2 = mkV2 (mkV "expropriate" "expropriates" "expropriated" "expropriated" "expropriating");
lin expropriation_N = mkN "expropriation" ;
lin expulsion_N = mkN "expulsion" "expulsions";
lin expunction_N = mkN "expunction" ;
lin expunge_V2 = mkV2 (mkV "expunge" "expunges" "expunged" "expunged" "expunging");
lin expurgate_V2 = mkV2 (mkV "expurgate" "expurgates" "expurgated" "expurgated" "expurgating");
lin expurgation_N = mkN "expurgation" "expurgations";
lin expurgator_N = mkN "expurgator" ;
lin exquisite_A = compoundA (mkA "exquisite");
lin exquisiteness_N = mkN "exquisiteness" ;
lin extant_A = compoundA (mkA "extant");
lin extemporaneous_A = compoundA (mkA "extemporaneous");
lin extemporary_A = compoundA (mkA "extemporary");
lin extempore_A = compoundA (mkA "extempore");
lin extempore_Adv = mkAdv "extempore";
lin extemporization_N = mkN "extemporization" ;
lin extemporize_V = mkV "extemporize" "extemporize" "extemporize" "extemporize" "extemporize";
lin extemporize_V2 = mkV2 (mkV "extemporize" "extemporize" "extemporize" "extemporize" "extemporize");
lin extend_V = mkV "extend" "extends" "extended" "extended" "extending";
lin extend_V2 = mkV2 (mkV "extend" "extends" "extended" "extended" "extending");
lin extendible_A = mkA "extendible" ;
lin extensile_A = mkA "extensile" ;
lin extension_N = mkN "extension" "extensions";
lin extensional_A = mkA "extensional" ;
lin extensive_A = compoundA (mkA "extensive");
lin extent_N = mkN "extent" ;
lin extenuate_V2 = mkV2 (mkV "extenuate" "extenuates" "extenuated" "extenuated" "extenuating");
lin extenuating_A = mkA "extenuating" ;
lin extenuation_N = mkN "extenuation" "extenuations";
lin exterior_A = compoundA (mkA "exterior");
lin exterior_N = mkN "exterior" "exteriors";
lin exteriorize_V2 = mkV2 (mkV "exteriorize" "exteriorizes" "exteriorized" "exteriorized" "exteriorizing");
lin exterminable_A = mkA "exterminable" ;
lin exterminate_V2 = mkV2 (mkV "exterminate" "exterminates" "exterminated" "exterminated" "exterminating");
lin extermination_N = mkN "extermination" "exterminations";
lin exterminator_N = mkN "exterminator" ;
lin extern_N = mkN "extern" ;
lin external_A = compoundA (mkA "external");
lin external_N = mkN "external" "externals";
lin externalization_N = mkN "externalization" ;
lin externalize_V2 = mkV2 (mkV "externalize" "externalizes" "externalized" "externalized" "externalizing");
lin exteroception_N = mkN "exteroception" ;
lin exteroceptive_A = mkA "exteroceptive" ;
lin exteroceptor_N = mkN "exteroceptor" ;
lin exterritorial_A = compoundA (mkA "exterritorial");
lin extinct_A = compoundA (mkA "extinct");
lin extinction_N = mkN "extinction" ;
lin extinguish_V2 = mkV2 (mkV "extinguish" "extinguishes" "extinguished" "extinguished" "extinguishing");
lin extinguishable_A = mkA "extinguishable" ;
lin extinguisher_N = mkN "extinguisher" "extinguishers";
lin extirpate_V2 = mkV2 (mkV "extirpate" "extirpates" "extirpated" "extirpated" "extirpating");
lin extirpation_N = mkN "extirpation" ;
lin extol_V2 = mkV2 (mkV "extol" "extols" "extolled" "extolled" "extolling");
lin extort_V = mkV "extort" "extorts" "extorted" "extorted" "extorting";
lin extort_V2 = mkV2 (mkV "extort" "extorts" "extorted" "extorted" "extorting");
lin extortion_N = mkN "extortion" "extortions";
lin extortionate_A = compoundA (mkA "extortionate");
lin extra_A = compoundA (mkA "extra");
lin extra_Adv = mkAdv "extra";
lin extra_N = mkN "extra" "extras";
lin extracellular_A = mkA "extracellular" ;
lin extract_N = mkN "extract" "extracts";
lin extract_V2 = mkV2 (mkV "extract" "extracts" "extracted" "extracted" "extracting");
lin extractable_A = mkA "extractable" ;
lin extraction_N = mkN "extraction" "extractions";
lin extractor_N = mkN "extractor" ;
lin extracurricular_A = compoundA (mkA "extracurricular");
lin extradite_V2 = mkV2 (mkV "extradite" "extradites" "extradited" "extradited" "extraditing");
lin extradition_N = mkN "extradition" "extraditions";
lin extrados_N = mkN "extrados" ;
lin extragalactic_A = mkA "extragalactic" ;
lin extrajudicial_A = compoundA (mkA "extrajudicial");
lin extralegal_A = mkA "extralegal" ;
lin extralinguistic_A = mkA "extralinguistic" ;
lin extramarital_A = compoundA (mkA "extramarital");
lin extramural_A = compoundA (mkA "extramural");
lin extraneous_A = compoundA (mkA "extraneous");
lin extraneousness_N = mkN "extraneousness" ;
lin extraordinariness_N = mkN "extraordinariness" ;
lin extraordinary_A = compoundA (mkA "extraordinary");
lin extrapolate_V = mkV "extrapolate" "extrapolate" "extrapolate" "extrapolate" "extrapolate";
lin extrapolate_V2 = mkV2 (mkV "extrapolate" "extrapolate" "extrapolate" "extrapolate" "extrapolate");
lin extrapolation_N = mkN "extrapolation" ;
lin extrasensory_A = compoundA (mkA "extrasensory");
lin extrasystole_N = mkN "extrasystole" ;
lin extrasystolic_A = mkA "extrasystolic" ;
lin extraterrestrial_A = mkA "extraterrestrial" ;
lin extraterritorial_A = compoundA (mkA "extraterritorial");
lin extravagance_N = mkN "extravagance" "extravagances";
lin extravagant_A = compoundA (mkA "extravagant");
lin extravaganza_N = mkN "extravaganza" "extravaganzas";
lin extravasation_N = mkN "extravasation" ;
lin extraversion_N = mkN "extraversion" ;
lin extreme_A = compoundA (mkA "extreme");
lin extreme_N = mkN "extreme" "extremes";
lin extremeness_N = mkN "extremeness" ;
lin extremism_N = mkN "extremism" ;
lin extremist_A = mkA "extremist" ;
lin extremist_N = mkN "extremist" "extremists";
lin extremity_N = mkN "extremity" "extremities";
lin extremum_N = mkN "extremum" ;
lin extricable_A = compoundA (mkA "extricable");
lin extricate_V2 = mkV2 (mkV "extricate" "extricates" "extricated" "extricated" "extricating");
lin extrication_N = mkN "extrication" ;
lin extrinsic_A = compoundA (mkA "extrinsic");
lin extropic_A = mkA "extropic" ;
lin extropy_N = mkN "extropy" ;
lin extrospective_A = mkA "extrospective" ;
lin extroversion_N = mkN "extroversion" ;
lin extroversive_A = mkA "extroversive" ;
lin extrovert_A = mkA "extrovert" ;
lin extrovert_N = mkN "extrovert" "extroverts";
lin extroverted_A = mkA "extroverted" ;
lin extrovertish_A = mkA "extrovertish" ;
lin extrude_V2 = mkV2 (mkV "extrude" "extrudes" "extruded" "extruded" "extruding");
lin extrusion_N = mkN "extrusion" "extrusions";
lin extrusive_A = mkA "extrusive" ;
lin exuberance_N = mkN "exuberance" ;
lin exuberant_A = compoundA (mkA "exuberant");
lin exudate_N = mkN "exudate" ;
lin exudation_N = mkN "exudation" ;
lin exude_V = mkV "exude" "exudes" "exuded" "exuded" "exuding";
lin exude_V2 = mkV2 (mkV "exude" "exudes" "exuded" "exuded" "exuding");
lin exult_V = mkV "exult" "exults" "exulted" "exulted" "exulting";
lin exultant_A = compoundA (mkA "exultant");
lin exultation_N = mkN "exultation" ;
lin exurbia_N = mkN "exurbia" ;
lin exuviae_N = mkN "exuviae" ;
lin exuvial_A = mkA "exuvial" ;
lin eyas_N = mkN "eyas" ;
lin eye_N = mkN "eye" "eyes";
lin eye_V2 = mkV2 (mkV "eye" "eyes" "eyed" "eyed" "eyeing");
lin eye_catching_A = compoundA (mkA "eye-catching");
lin eye_opener_N = mkN "eye-opener" "eye-openers";
lin eye_shadow_N = mkN "eye-shadow" ;
lin eyeball_N = mkN "eyeball" "eyeballs";
lin eyeball_V2 = mkV2 (mkV "eyeball");
lin eyebath_N = mkN "eyebath" "eyebaths";
lin eyebrow_N = mkN "eyebrow" "eyebrows";
lin eyecatching_A = compoundA (mkA "eyecatching");
lin eyecup_N = mkN "eyecup" "eyecups";
lin eyedness_N = mkN "eyedness" ;
lin eyedrop_N = mkN "eyedrop" ;
lin eyeful_N = mkN "eyeful" "eyefuls";
lin eyeglass_N = mkN "eyeglass" "eyeglasses";
lin eyelash_N = mkN "eyelash" "eyelashes";
lin eyeless_A = compoundA (mkA "eyeless");
lin eyelessness_N = mkN "eyelessness" ;
lin eyelet_N = mkN "eyelet" "eyelets";
lin eyelid_N = mkN "eyelid" "eyelids";
lin eyelike_A = mkA "eyelike" ;
lin eyeliner_N = mkN "eyeliner" ;
lin eyepatch_N = mkN "eyepatch" ;
lin eyepiece_N = mkN "eyepiece" "eyepieces";
lin eyes_N = mkN "eyes" ;
lin eyeshadow_N = mkN "eyeshadow" ;
lin eyeshot_N = mkN "eyeshot" ;
lin eyesight_N = mkN "eyesight" ;
lin eyesore_N = mkN "eyesore" "eyesores";
lin eyespot_N = mkN "eyespot" ;
lin eyestrain_N = mkN "eyestrain" ;
lin eyetooth_N = mkN "eyetooth" "eyeteeth";
lin eyewash_N = mkN "eyewash" ;
lin eyewitness_N = mkN "eyewitness" "eyewitnesses";
lin eyrie_N = mkN "eyrie" "eyries";
lin eyrir_N = mkN "eyrir" ;
lin eyry_N = mkN "eyry" "eyries";
lin fa_N = mkN "fa" ;
lin fab_A = compoundA (mkA "fab");
lin fabian_A = compoundA (mkA "fabian");
lin fabian_N = mkN "fabian" "fabians";
lin fable_N = mkN "fable" "fables";
lin fabled_A = compoundA (mkA "fabled");
lin fabric_N = mkN "fabric" "fabrics";
lin fabricate_V2 = mkV2 (mkV "fabricate" "fabricates" "fabricated" "fabricated" "fabricating");
lin fabrication_N = mkN "fabrication" "fabrications";
lin fabulist_N = mkN "fabulist" ;
lin fabulous_A = compoundA (mkA "fabulous");
lin facade_N = variants {mkN "façade" "façades"; mkN "facade" "facades"};
lin face_N = mkN "face" "faces";
lin face_V = mkV "face" "faces" "faced" "faced" "facing";
lin face_V2 = mkV2 (mkV "face" "faces" "faced" "faced" "facing");
lin face_ache_N = mkN "face-ache" ;
lin face_card_N = mkN "face-card" "face-cards";
lin face_cloth_N = mkN "face-cloth" "face-cloths";
lin face_cream_N = mkN "face-cream" "face-creams";
lin face_lift_N = mkN "face-lift" "face-lifts";
lin face_lifting_N = mkN "face-lifting" "face-liftings";
lin face_pack_N = mkN "face-pack" "face-packs";
lin face_powder_N = mkN "face-powder" "face-powders";
lin face_saver_N = mkN "face-saver" "face-savers";
lin face_saving_A = compoundA (mkA "face-saving");
lin face_saving_N = mkN "face-saving" ;
lin faceless_A = compoundA (mkA "faceless");
lin faceplate_N = mkN "faceplate" ;
lin facer_N = mkN "facer" "facers";
lin facet_N = mkN "facet" "facets";
lin faceted_A = mkA "faceted" ;
lin facetious_A = compoundA (mkA "facetious");
lin facetiousness_N = mkN "facetiousness" ;
lin facia_N = mkN "facia" "facias";
lin facial_A = compoundA (mkA "facial");
lin facial_N = mkN "facial" "facials";
lin facile_A = compoundA (mkA "facile");
lin facilitate_V2 = mkV2 (mkV "facilitate" "facilitates" "facilitated" "facilitated" "facilitating");
lin facilitation_N = mkN "facilitation";
lin facilitative_A = mkA "facilitative" ;
lin facilitator_N = mkN "facilitator" ;
lin facilitatory_A = mkA "facilitatory" ;
lin facility_N = mkN "facility" "facilities";
lin facing_N = mkN "facing" "facings";
lin facsimile_N = mkN "facsimile" "facsimiles";
lin fact_N = mkN "fact" "facts";
lin fact_finding_A = compoundA (mkA "fact-finding");
lin faction_N = mkN "faction" "factions";
lin factious_A = compoundA (mkA "factious");
lin factitious_A = compoundA (mkA "factitious");
lin factoid_N = mkN "factoid" ;
lin factor_N = mkN "factor" "factors";
lin factorial_A = mkA "factorial" ;
lin factorial_N = mkN "factorial" ;
lin factorization_N = mkN "factorization" ;
lin factorize_V2 = mkV2 (mkV "factorize" "factorizes" "factorized" "factorized" "factorizing");
lin factory_N = mkN "factory" "factories";
lin factotum_N = mkN "factotum" "factotums";
lin factual_A = compoundA (mkA "factual");
lin factuality_N = mkN "factuality" ;
lin facula_N = mkN "facula" ;
lin facultative_A = mkA "facultative" ;
lin faculty_N = mkN "faculty" "faculties";
lin fad_N = mkN "fad" "fads";
lin faddish_A = mkA "faddish" ;
lin faddist_N = mkN "faddist" ;
lin faddy_A = mkA "faddy" "faddier";
lin fade_N = mkN "fade" ;
lin fade_V = mkV "fade" "fades" "faded" "faded" "fading";
lin fade_V2 = mkV2 (mkV "fade" "fades" "faded" "faded" "fading");
lin fadeout_N = mkN "fadeout" ;
lin fado_N = mkN "fado" ;
lin faecal_A = mkA "faecal" ;
lin faerie_N = mkN "faerie" "faeries";
lin faery_N = mkN "faery" "faeries";
lin fag_N = mkN "fag" "fags";
lin fag_V = mkV "fag" "fags" "fagged" "fagged" "fagging";
lin fag_V2 = mkV2 (mkV "fag" "fags" "fagged" "fagged" "fagging");
lin fag_end_N = mkN "fag-end" "fag-ends";
lin faggot_N = mkN "faggot" "faggots";
lin fagot_N = mkN "fagot" ;
lin fagoting_N = mkN "fagoting" ;
lin faience_N = mkN "faience" ;
lin fail_N = mkN "fail" ;
lin fail_V = mkV "fail";
lin fail_V2 = mkV2 (mkV "fail");
lin fail_V2V = mkV2V (mkV "fail") noPrep to_Prep ;
lin fail_VV = mkVV (mkV "fail");
lin fail_safe_A = compoundA (mkA "fail-safe");
lin failing_N = mkN "failing" "failings";
lin faille_N = mkN "faille" ;
lin failure_N = mkN "failure" "failures";
lin fain_Adv = mkAdv "fain";
lin faineance_N = mkN "faineance" ;
lin faineant_A = mkA "faineant" ;
lin faint_A = mkA "faint" "fainter";
lin faint_N = mkN "faint" "faints";
lin faint_V = mkV "faint" "faints" "fainted" "fainted" "fainting";
lin faint_hearted_A = compoundA (mkA "faint-hearted");
lin faintheartedness_N = mkN "faintheartedness" ;
lin faintness_N = mkN "faintness" ;
lin fair_A = mkA "fair" "fairer";
lin fair_Adv = mkAdv "fair";
lin fair_N = mkN "fair" "fairs";
lin fair_minded_A = compoundA (mkA "fair-minded");
lin fairground_N = mkN "fairground" "fairgrounds";
lin fairish_A = compoundA (mkA "fairish");
lin fairlead_N = mkN "fairlead" ;
lin fairness_N = mkN "fairness" ;
lin fairway_N = mkN "fairway" "fairways";
lin fairy_N = mkN "fairy" "fairies";
lin fairyland_N = mkN "fairyland" "fairylands";
lin fairytale_N = mkN "fairytale" "fairytales";
lin fait_accompli_N = mkN "fait accompli" "IRREG";
lin faith_N = mkN "faith" "faiths";
lin faith_healing_N = mkN "faith-healing" ;
lin faithful_A = compoundA (mkA "faithful");
lin faithful_N = mkN "faithful" ;
lin faithfulness_N = mkN "faithfulness" ;
lin faithless_A = compoundA (mkA "faithless");
lin faithlessness_N = mkN "faithlessness" ;
lin fake_A = mkA "fake" ;
lin fake_N = mkN "fake" "fakes";
lin fake_V2 = mkV2 (mkV "fake" "fakes" "faked" "faked" "faking");
lin fakery_N = mkN "fakery" ;
lin fakir_N = mkN "fakir" "fakirs";
lin falafel_N = mkN "falafel" ;
lin falangist_N = mkN "falangist" ;
lin falcate_A = mkA "falcate" ;
lin falchion_N = mkN "falchion" ;
lin falcon_N = mkN "falcon" "falcons";
lin falconer_N = mkN "falconer" ;
lin falconine_A = mkA "falconine" ;
lin falconry_N = mkN "falconry" ;
lin falkirk_PN = mkPN "Falkirk";
lin fall_N = mkN "fall" "falls";
lin fall_V = IrregEng.fall_V;
lin fall_V2 = mkV2 (IrregEng.fall_V);
lin fall_VA = mkVA (IrregEng.fall_V);
lin fallacious_A = compoundA (mkA "fallacious");
lin fallaciousness_N = mkN "fallaciousness" ;
lin fallacy_N = mkN "fallacy" "fallacies";
lin fallboard_N = mkN "fallboard" ;
lin faller_N = mkN "faller" ;
lin fallibility_N = mkN "fallibility" ;
lin fallible_A = compoundA (mkA "fallible");
lin fallopian_A = compoundA (mkA "fallopian");
lin fallout_N = mkN "fallout" ;
lin fallow_A = compoundA (mkA "fallow");
lin fallow_N = mkN "fallow" ;
lin fallow_deer_N = mkN "fallow-deer" "fallow-deer";
lin falls_N = mkN "falls" ;
lin falmouth_PN = mkPN "Falmouth";
lin false_A = compoundA (mkA "false");
lin false_Adv = mkAdv "false";
lin falsehood_N = mkN "falsehood" "falsehoods";
lin falseness_N = mkN "falseness" ;
lin falsetto_A = compoundA (mkA "falsetto");
lin falsetto_N = mkN "falsetto" "falsettos";
lin falsie_N = mkN "falsie" ;
lin falsification_N = mkN "falsification" "falsifications";
lin falsifier_N = mkN "falsifier" ;
lin falsify_V2 = mkV2 (mkV "falsify" "falsifies" "falsified" "falsified" "falsifying");
lin falsity_N = mkN "falsity" "falsities";
lin falter_V = mkV "falter" "falters" "faltered" "faltered" "faltering";
lin falter_V2 = mkV2 (mkV "falter" "falters" "faltered" "faltered" "faltering");
lin falteringly_Adv = mkAdv "falteringly";
lin fame_N = mkN "fame" ;
lin fame_V2 = mkV2 (mkV "fame");
lin familial_A = mkA "familial" ;
lin familiar_A = compoundA (mkA "familiar");
lin familiar_with_A2 = mkA2 (compoundA (mkA "familiar")) (mkPrep "with");
lin familiar_N = mkN "familiar" "familiars";
lin familiarity_N = mkN "familiarity" "familiarities";
lin familiarization_N = mkN "familiarization" ;
lin familiarize_V2 = mkV2 (mkV "familiarize" "familiarizes" "familiarized" "familiarized" "familiarizing");
lin familiarizing_A = mkA "familiarizing" ;
lin family_N = mkN "family" "families";
lin famine_N = mkN "famine" "famines";
lin famish_V = mkV "famish" "famishes" "famished" "famished" "famishing";
lin famish_V2 = mkV2 (mkV "famish" "famishes" "famished" "famished" "famishing");
lin famotidine_N = mkN "famotidine" ;
lin famous_A = compoundA (mkA "famous");
lin famulus_N = mkN "famulus" ;
lin fan_1_N = mkN "fan" "fans";
lin fan_2_N = mkN "fan" "fans";
lin fan_3_N = mkN "fan" "fans";
lin fan_V = mkV "fan" "fans" "fanned" "fanned" "fanning";
lin fan_V2 = mkV2 (mkV "fan" "fans" "fanned" "fanned" "fanning");
lin fan_belt_N = mkN "fan-belt" "fan-belts";
lin fanaloka_N = mkN "fanaloka" ;
lin fanatic_A = compoundA (mkA "fanatic");
lin fanaticMasc_N = mkN masculine (mkN "fanatic" "fanatics");
lin fanaticFem_N = mkN feminine (mkN "fanatic" "fanatics");
lin fanatical_A = compoundA (mkA "fanatical");
lin fanaticism_N = mkN "fanaticism" "fanaticisms";
lin fancier_N = mkN "fancier" "fanciers";
lin fanciful_A = compoundA (mkA "fanciful");
lin fancy_A = mkA "fancy" "fancier";
lin fancy_N = mkN "fancy" "fancies";
lin fancy_V2 = mkV2 (mkV "fancy" "fancies" "fancied" "fancied" "fancying");
lin fancy_V3 = mkV3 (mkV "fancy");
lin fancy_free_A = compoundA (mkA "fancy-free");
lin fandango_N = mkN "fandango" "fandangos";
lin fandom_N = mkN "fandom" ;
lin fanfare_N = mkN "fanfare" "fanfares";
lin fang_N = mkN "fang" "fangs";
lin fanged_A = mkA "fanged" ;
lin fanion_N = mkN "fanion" ;
lin fanjet_N = mkN "fanjet" ;
lin fanlight_N = mkN "fanlight" "fanlights";
lin fanlike_A = mkA "fanlike" ;
lin fanny_N = mkN "fanny" "fannies";
lin fanny_PN = mkPN "Fanny";
lin fantail_N = mkN "fantail" ;
lin fantan_N = mkN "fantan" ;
lin fantasia_N = mkN "fantasia" "fantasias";
lin fantasist_N = mkN "fantasist" ;
lin fantasize_V = mkV "fantasize";
lin fantast_N = mkN "fantast" ;
lin fantastic_A = compoundA (mkA "fantastic");
lin fantastically_Adv = mkAdv "fantastically";
lin fantasy_N = mkN "fantasy" "fantasies";
lin fantods_N = mkN "fantods" ;
lin fao_N = mkN "fao" ;
lin far_A = irregAdv (compoundA (mkA "far")) "far";
lin far_AdA = mkAdA "far";
lin far_V2 = mkV2 (mkV "far");
lin far_famed_A = compoundA (mkA "far-famed");
lin far_fetched_A = compoundA (mkA "far-fetched");
lin far_flung_A = compoundA (mkA "far-flung");
lin far_off_A = compoundA (mkA "far-off");
lin far_reaching_A = compoundA (mkA "far-reaching");
lin far_seeing_A = compoundA (mkA "far-seeing");
lin far_sighted_A = compoundA (mkA "far-sighted");
lin farad_N = mkN "farad" ;
lin farandole_N = mkN "farandole" ;
lin faraway_A = compoundA (mkA "faraway");
lin farce_N = mkN "farce" "farces";
lin farcical_A = compoundA (mkA "farcical");
lin fardel_N = mkN "fardel" ;
lin fare_N = mkN "fare" "fares";
lin fare_V = mkV "fare" "fares" "fared" "fared" "faring";
lin fare_stage_N = mkN "fare-stage" "fare-stages";
lin farewell_N = mkN "farewell" "farewells";
lin farfalle_N = mkN "farfalle" ;
lin farfetched_A = mkA "farfetched" ;
lin farina_N = mkN "farina" ;
lin farinaceous_A = compoundA (mkA "farinaceous");
lin farkleberry_N = mkN "farkleberry" ;
lin farm_N = mkN "farm" "farms";
lin farm_V = mkV "farm" "farms" "farmed" "farmed" "farming";
lin farm_V2 = mkV2 (mkV "farm" "farms" "farmed" "farmed" "farming");
lin farmer_N = mkN "farmer" "farmers";
lin farmerette_N = mkN "farmerette" ;
lin farmhand_N = mkN "farmhand" "farmhands";
lin farmhouse_N = mkN "farmhouse" "farmhouses";
lin farming_N = mkN "farming";
lin farmland_N = mkN "farmland" ;
lin farmplace_N = mkN "farmplace" ;
lin farmstead_N = mkN "farmstead" "farmsteads";
lin farmyard_N = mkN "farmyard" "farmyards";
lin farness_N = mkN "farness" ;
lin farnham_PN = mkPN "Farnham";
lin farnworth_PN = mkPN "Farnworth";
lin faro_N = mkN "faro" ;
lin farrago_N = mkN "farrago" "farragos";
lin farrier_N = mkN "farrier" "farriers";
lin farrow_N = mkN "farrow" "farrows";
lin farrow_V = mkV "farrow" "farrows" "farrowed" "farrowed" "farrowing";
lin farseeing_A = mkA "farseeing" ;
lin farsi_N = mkN "farsi" ;
lin farsighted_A = mkA "farsighted" ;
lin fart_N = mkN "fart" "farts";
lin fart_V = mkV "fart" "farts" "farted" "farted" "farting";
lin farther_A = mkA "farther" ;
lin farther_Adv = mkAdv "farther";
lin farthermost_A = mkA "farthermost" ;
lin farthest_Adv = mkAdv "farthest";
lin farthing_N = mkN "farthing" "farthings";
lin farthingale_N = mkN "farthingale" ;
lin fartlek_N = mkN "fartlek" ;
lin fasces_N = mkN "fasces" ;
lin fascia_N = mkN "fascia" "fascias";
lin fascicle_N = mkN "fascicle" ;
lin fasciculation_N = mkN "fasciculation" ;
lin fascinate_V2 = mkV2 (mkV "fascinate" "fascinates" "fascinated" "fascinated" "fascinating");
lin fascinating_A = compoundA (mkA "fascinating");
lin fascination_N = mkN "fascination" "fascinations";
lin fascioliasis_N = mkN "fascioliasis" ;
lin fasciolopsiasis_N = mkN "fasciolopsiasis" ;
lin fascism_N = mkN "fascism" ;
lin fascist_A = compoundA (mkA "fascist");
lin fascist_N = mkN "fascist" "fascists";
lin fascista_N = mkN "fascista" ;
lin fashion_N = mkN "fashion" "fashions";
lin fashion_V2 = mkV2 (mkV "fashion" "fashions" "fashioned" "fashioned" "fashioning");
lin fashionable_A = compoundA (mkA "fashionable");
lin fast_A = mkA "fast" "faster";
lin fast_Adv = mkAdv "fast";
lin fast_N = mkN "fast" "fasts";
lin fast_V = mkV "fast" "fasts" "fasted" "fasted" "fasting";
lin fastball_N = mkN "fastball" ;
lin fasten_V = mkV "fasten" "fastens" "fastened" "fastened" "fastening";
lin fasten_V2 = mkV2 (mkV "fasten" "fastens" "fastened" "fastened" "fastening");
lin fastener_N = mkN "fastener" "fasteners";
lin fastening_N = mkN "fastening" "fastenings";
lin fastidious_A = compoundA (mkA "fastidious");
lin fastidiousness_N = mkN "fastidiousness" ;
lin fastigiate_A = mkA "fastigiate" ;
lin fastnacht_N = mkN "fastnacht" ;
lin fastness_N = mkN "fastness" "fastnesses";
lin fat_A = mkA "fat" "fatter";
lin fat_N = mkN "fat" "fats";
lin fat_V2 = mkV2 (mkV "fat" "fats" "fatted" "fatted" "fatting");
lin fatal_A = compoundA (mkA "fatal");
lin fatalism_N = mkN "fatalism" ;
lin fatalist_A = mkA "fatalist" ;
lin fatalistMasc_N = mkN masculine (mkN "fatalist" "fatalists");
lin fatalistFem_N = mkN feminine (mkN "fatalist" "fatalists");
lin fatalistic_A = compoundA (mkA "fatalistic");
lin fatality_N = mkN "fatality" "fatalities";
lin fatback_N = mkN "fatback" ;
lin fate_N = mkN "fate" "fates";
lin fate_V2 = mkV2 (mkV "fate" "fates" "fated" "fated" "fating");
lin fateful_A = compoundA (mkA "fateful");
lin fathead_N = mkN "fathead" "fatheads";
lin father_N = mkN "father" "fathers";
lin father_V2 = mkV2 (mkV "father" "fathers" "fathered" "fathered" "fathering");
lin father_in_law_N = mkN "father-in-law" "fathers-in-law";
lin fatherhood_N = mkN "fatherhood" ;
lin fatherland_N = mkN "fatherland" "fatherlands";
lin fatherless_A = compoundA (mkA "fatherless");
lin fatherliness_N = mkN "fatherliness" ;
lin fatherly_A = compoundA (mkA "fatherly");
lin fathom_N = mkN "fathom" "fathoms";
lin fathom_V2 = mkV2 (mkV "fathom" "fathoms" "fathomed" "fathomed" "fathoming");
lin fathomable_A = mkA "fathomable" ;
lin fathomless_A = compoundA (mkA "fathomless");
lin fatigability_N = mkN "fatigability" ;
lin fatigue_N = mkN "fatigue" "fatigues";
lin fatigue_V2 = mkV2 (mkV "fatigue" "fatigues" "fatigued" "fatigued" "fatiguing");
lin fatigue_party_N = mkN "fatigue-party" "fatigue-parties";
lin fatigues_N = mkN "fatigues" ;
lin fatless_A = compoundA (mkA "fatless");
lin fatness_N = mkN "fatness" ;
lin fatso_N = mkN "fatso" ;
lin fatten_V = mkV "fatten" "fattens" "fattened" "fattened" "fattening";
lin fatten_V2 = mkV2 (mkV "fatten" "fattens" "fattened" "fattened" "fattening");
lin fattish_A = compoundA (mkA "fattish");
lin fattism_N = mkN "fattism" ;
lin fatty_A = mkA "fatty" "fattier";
lin fatuity_N = mkN "fatuity" "fatuities";
lin fatuous_A = compoundA (mkA "fatuous");
lin fatuousness_N = mkN "fatuousness" ;
lin fatwa_N = mkN "fatwa" ;
lin fatwah_N = mkN "fatwah" ;
lin faubourg_N = mkN "faubourg" ;
lin faucal_A = mkA "faucal" ;
lin fauces_N = mkN "fauces" ;
lin faucet_N = mkN "faucet" "faucets";
lin fauld_N = mkN "fauld" ;
lin fauldhouse_PN = mkPN "Fauldhouse";
lin fault_N = mkN "fault" "faults";
lin fault_V2 = mkV2 (mkV "fault" "faults" "faulted" "faulted" "faulting");
lin fault_finder_N = mkN "fault-finder" "fault-finders";
lin fault_finding_N = mkN "fault-finding" ;
lin faultfinding_N = mkN "faultfinding" ;
lin faultless_A = compoundA (mkA "faultless");
lin faultlessness_N = mkN "faultlessness" ;
lin faulty_A = mkA "faulty" "faultier";
lin faun_N = mkN "faun" "fauns";
lin fauna_N = mkN "fauna" ;
lin fauteuil_N = mkN "fauteuil" ;
lin fauvism_N = mkN "fauvism" ;
lin faux_pas_N = mkN "faux pas" "faux pas";
lin faversham_PN = mkPN "Faversham";
lin favism_N = mkN "favism" ;
lin favorableness_N = mkN "favorableness" ;
lin favoritism_N = mkN "favoritism" ;
lin favour_N = mkN (variants {"favour"; "favor"});
lin favour_V = variants {mkV "favour"; mkV "favor"};
lin favour_V2 = mkV2 (variants {mkV "favour"; mkV "favor"});
lin favour_VS = mkVS (variants {mkV "favour"; mkV "favor"});
lin favourable_A = mkA (variants {"favourable"; "favorable"}) ;
lin favourite_A = compoundA (mkA (variants {"favourite"; "favorite"}));
lin favouriteMasc_N = mkN masculine (mkN (variants {"favourite"; "favorite"}));
lin favouriteFem_N = mkN feminine (mkN (variants {"favourite"; "favorite"}));
lin favouritism_N = mkN "favouritism" ;
lin favus_N = mkN "favus" ;
lin fawley_PN = mkPN "Fawley";
lin fawn_N = mkN "fawn" "fawns";
lin fawn_V = mkV "fawn" "fawns" "fawned" "fawned" "fawning";
lin fbi_PN = mkPN "FBI";
lin fealty_N = mkN "fealty" "fealties";
lin fear_N = mkN "fear" "fears";
lin fear_V = mkV "fear" "fears" "feared" "feared" "fearing";
lin fear_V2 = mkV2 (mkV "fear" "fears" "feared" "feared" "fearing");
lin fear_VS = mkVS (mkV "fear" "fears" "feared" "feared" "fearing");
lin fearful_A = compoundA (mkA "fearful");
lin fearfulness_N = mkN "fearfulness" ;
lin fearless_A = compoundA (mkA "fearless");
lin fearlessness_N = mkN "fearlessness" ;
lin fearsome_A = compoundA (mkA "fearsome");
lin feasibility_N = mkN "feasibility" ;
lin feasible_A = compoundA (mkA "feasible");
lin feast_N = mkN "feast" "feasts";
lin feast_V = mkV "feast" "feasts" "feasted" "feasted" "feasting";
lin feast_V2 = mkV2 (mkV "feast" "feasts" "feasted" "feasted" "feasting");
lin feast_day_N = mkN "feast-day" "feast-days";
lin feasting_N = mkN "feasting" ;
lin feat_N = mkN "feat" "feats";
lin feather_N = mkN "feather" "feathers";
lin feather_V2 = mkV2 (mkV "feather" "feathers" "feathered" "feathered" "feathering");
lin feather_boa_N = mkN "feather-boa" "feather-boas";
lin featherbed_N = mkN "featherbed" "featherbeds";
lin featherbed_V2 = mkV2 (mkV "featherbed" "featherbeds" "featherbedded" "featherbedded" "featherbedding");
lin featherbedding_N = mkN "featherbedding" ;
lin featherbrained_A = compoundA (mkA "featherbrained");
lin featheredge_N = mkN "featheredge" ;
lin featherfoil_N = mkN "featherfoil" ;
lin featherlike_A = mkA "featherlike" ;
lin featherstone_PN = mkPN "Featherstone";
lin feathertop_N = mkN "feathertop" ;
lin featherweight_N = mkN "featherweight" "featherweights";
lin feathery_A = compoundA (mkA "feathery");
lin feature_N = mkN "feature" "features";
lin feature_V2 = mkV2 (mkV "feature" "features" "featured" "featured" "featuring");
lin featureless_A = compoundA (mkA "featureless");
lin feb_PN = mkPN "Feb";
lin febrile_A = compoundA (mkA "febrile");
lin february_N = mkN "February" "Februaries";
lin february_PN = mkPN "February";
lin feckless_A = compoundA (mkA "feckless");
lin fecklessness_N = mkN "fecklessness" ;
lin fecula_N = mkN "fecula" ;
lin feculence_N = mkN "feculence" ;
lin feculent_A = mkA "feculent" ;
lin fecund_A = compoundA (mkA "fecund");
lin fecundity_N = mkN "fecundity" ;
lin fed_N = mkN "fed" ;
lin fedayeen_N = mkN "fedayeen" ;
lin fedelline_N = mkN "fedelline" ;
lin federal_A = compoundA (mkA "federal");
lin federalism_N = mkN "federalism" ;
lin federalist_N = mkN "federalist" "federalists";
lin federalization_N = mkN "federalization" ;
lin federate_A = mkA "federate" ;
lin federate_V = mkV "federate" "federates" "federated" "federated" "federating";
lin federate_V2 = mkV2 (mkV "federate" "federates" "federated" "federated" "federating");
lin federation_N = mkN "federation" "federations";
lin fedora_N = mkN "fedora" ;
lin fee_N = mkN "fee" "fees";
lin fee_V2 = mkV2 (mkV "fee" "IRREG" "IRREG" "IRREG" "IRREG");
lin feeble_A = mkA "feeble" "feebler";
lin feeble_minded_A = compoundA (mkA "feeble-minded");
lin feeblemindedness_N = mkN "feeblemindedness" ;
lin feebleness_N = mkN "feebleness" ;
lin feed_N = mkN "feed" "feeds";
lin feed_V = IrregEng.feed_V;
lin feed_V2 = mkV2 (IrregEng.feed_V);
lin feedback_N = mkN "feedback" ;
lin feeder_N = mkN "feeder" "feeders";
lin feeding_N = mkN "feeding" ;
lin feeding_bottle_N = mkN "feeding-bottle" "feeding-bottles";
lin feedlot_N = mkN "feedlot" ;
lin feedstock_N = mkN "feedstock" ;
lin feel_N = mkN "feel" "feels";
lin feel_V = IrregEng.feel_V;
lin feel_V2 = mkV2 (IrregEng.feel_V);
lin feel_VA = mkVA (IrregEng.feel_V);
lin feel_VS = mkVS (IrregEng.feel_V);
lin feeler_N = mkN "feeler" "feelers";
lin feeling_N = mkN "feeling" "feelings";
lin feelingly_Adv = mkAdv "feelingly" ;
lin feelings_N = mkN "feelings" ;
lin feetfirst_Adv = mkAdv "feetfirst" ;
lin feign_V2 = mkV2 (mkV "feign" "feigns" "feigned" "feigned" "feigning");
lin feijoa_N = mkN "feijoa" ;
lin feint_N = mkN "feint" "feints";
lin feint_V = mkV "feint" "feints" "feinted" "feinted" "feinting";
lin feist_N = mkN "feist" ;
lin feisty_A = mkA "feisty" ;
lin feldspar_N = mkN "feldspar" ;
lin felicitate_V2 = mkV2 (mkV "felicitate" "felicitates" "felicitated" "felicitated" "felicitating");
lin felicitation_N = mkN "felicitation" "felicitations";
lin felicitous_A = compoundA (mkA "felicitous");
lin felicity_N = mkN "felicity" "felicities";
lin felicity_PN = mkPN "Felicity";
lin feline_A = compoundA (mkA "feline");
lin feline_N = mkN "feline" ;
lin felix_PN = mkPN "Felix";
lin felixstowe_PN = mkPN "Felixstowe";
lin fell_A = compoundA (mkA "fell");
lin fell_N = mkN "fell" ;
lin fell_V2 = mkV2 (mkV "fell" "fells" "felled" "felled" "felling");
lin fellah_N = mkN "fellah" (variants {"fellahin"; "fellaheen"});
lin fellatio_N = mkN "fellatio" ;
lin felloe_N = mkN "felloe" ;
lin fellow_N = mkN human (mkN "fellow" "fellows");
lin fellow_feeling_N = mkN "fellow-feeling" ;
lin fellow_traveller_N = mkN "fellow-traveller" "fellow-travellers";
lin fellowship_N = mkN "fellowship" "fellowships";
lin felon_N = mkN "felon" "felons";
lin felonious_A = compoundA (mkA "felonious");
lin felony_N = mkN "felony" "felonies";
lin felspar_N = mkN "felspar" ;
lin felt_N = mkN "felt" ;
lin felted_A = mkA "felted" ;
lin felucca_N = mkN "felucca" "feluccas";
lin felwort_N = mkN "felwort" ;
lin fem_PN = mkPN "Fem";
lin female_A = compoundA (mkA "female");
lin female_N = mkN "female" "females";
lin femaleness_N = mkN "femaleness" ;
lin feminine_A = compoundA (mkA "feminine");
lin feminine_N = mkN "feminine" ;
lin femininity_N = mkN "femininity" ;
lin feminism_N = mkN "feminism" ;
lin feminist_A = mkA "feminist" ;
lin feministMasc_N = mkN masculine (mkN "feminist" "feminists");
lin feministFem_N = mkN feminine (mkN "feminist" "feminists");
lin feminization_N = mkN "feminization" ;
lin femoral_A = mkA "femoral" ;
lin femtochemistry_N = mkN "femtochemistry" ;
lin femtometer_N = mkN "femtometer" ;
lin femtosecond_N = mkN "femtosecond" ;
lin femtovolt_N = mkN "femtovolt" ;
lin femur_N = mkN "femur" "femurs";
lin fen_N = mkN "fen" "fens";
lin fence_N = mkN "fence" "fences";
lin fence_V2 = mkV2 (mkV "fence" "fences" "fenced" "fenced" "fencing");
lin fencelike_A = mkA "fencelike" ;
lin fencer_N = mkN "fencer" "fencers";
lin fencing_N = mkN "fencing" ;
lin fend_V = mkV "fend" "fends" "fended" "fended" "fending";
lin fend_V2 = mkV2 (mkV "fend" "fends" "fended" "fended" "fending");
lin fender_N = mkN "fender" "fenders";
lin fenestra_N = mkN "fenestra" ;
lin fenestral_A = mkA "fenestral" ;
lin fenestration_N = mkN "fenestration" ;
lin fennel_N = mkN "fennel" ;
lin fenoprofen_N = mkN "fenoprofen" ;
lin fenugreek_N = mkN "fenugreek" ;
lin feoff_N = mkN "feoff" "feoffs";
lin feral_A = compoundA (mkA "feral");
lin fergusonite_N = mkN "fergusonite" ;
lin feria_N = mkN "feria" ;
lin ferial_A = mkA "ferial" ;
lin fermanagh_PN = mkPN "Fermanagh";
lin fermata_N = mkN "fermata" ;
lin ferment_N = mkN "ferment" "ferments";
lin ferment_V = mkV "ferment" "ferments" "fermented" "fermented" "fermenting";
lin ferment_V2 = mkV2 (mkV "ferment" "ferments" "fermented" "fermented" "fermenting");
lin fermentable_A = mkA "fermentable" ;
lin fermentation_N = mkN "fermentation" ;
lin fermion_N = mkN "fermion" ;
lin fermium_N = mkN "fermium" ;
lin fern_N = mkN "fern" "ferns";
lin ferned_A = mkA "ferned" ;
lin fernless_A = mkA "fernless" ;
lin fernlike_A = mkA "fernlike" ;
lin ferny_A = mkA "ferny" "fernier";
lin ferocious_A = compoundA (mkA "ferocious");
lin ferociousness_N = mkN "ferociousness" ;
lin ferocity_N = mkN "ferocity" "ferocities";
lin ferrara_PN = mkPN "Ferrara";
lin ferret_N = mkN "ferret" "ferrets";
lin ferret_V = mkV "ferret" "ferrets" "ferreted" "ferreted" "ferreting";
lin ferret_V2 = mkV2 (mkV "ferret" "ferrets" "ferreted" "ferreted" "ferreting");
lin ferric_A = mkA "ferric" ;
lin ferricyanide_N = mkN "ferricyanide" ;
lin ferrimagnetism_N = mkN "ferrimagnetism" ;
lin ferrite_N = mkN "ferrite" ;
lin ferritin_N = mkN "ferritin" ;
lin ferrocerium_N = mkN "ferrocerium" ;
lin ferroconcrete_N = mkN "ferroconcrete" ;
lin ferrocyanide_N = mkN "ferrocyanide" ;
lin ferromagnetic_A = mkA "ferromagnetic" ;
lin ferromagnetism_N = mkN "ferromagnetism" ;
lin ferrous_A = compoundA (mkA "ferrous");
lin ferrule_N = mkN "ferrule" "ferrules";
lin ferry_N = mkN "ferry" "ferries";
lin ferry_V = mkV "ferry" "ferries" "ferried" "ferried" "ferrying";
lin ferry_V2 = mkV2 (mkV "ferry" "ferries" "ferried" "ferried" "ferrying");
lin ferryboat_N = mkN "ferryboat" "ferryboats";
lin ferryhill_PN = mkPN "Ferryhill";
lin ferryman_N = mkN masculine (mkN "ferryman" "ferrymen");
lin fertile_A = compoundA (mkA "fertile");
lin fertility_N = mkN "fertility" ;
lin fertilizable_A = mkA "fertilizable" ;
lin fertilization_N = mkN "fertilization" ;
lin fertilize_V2 = mkV2 (mkV "fertilize" "fertilizes" "fertilized" "fertilized" "fertilizing");
lin fertilizer_N = mkN "fertilizer" "fertilizers";
lin ferule_N = mkN "ferule" "ferules";
lin fervency_N = mkN "fervency" ;
lin fervent_A = compoundA (mkA "fervent");
lin fervid_A = compoundA (mkA "fervid");
lin fervour_N = mkN "fervour" ;
lin fescue_N = mkN "fescue" ;
lin fesse_N = mkN "fesse" ;
lin festal_A = compoundA (mkA "festal");
lin fester_N = mkN "fester" ;
lin fester_V = mkV "fester" "festers" "festered" "festered" "festering";
lin festering_N = mkN "festering" ;
lin festination_N = mkN "festination" ;
lin festival_N = mkN "festival" "festivals";
lin festive_A = compoundA (mkA "festive");
lin festivity_N = mkN "festivity" "festivities";
lin festoon_N = mkN "festoon" "festoons";
lin festoon_V2 = mkV2 (mkV "festoon" "festoons" "festooned" "festooned" "festooning");
lin festschrift_N = mkN "festschrift" ;
lin fetal_A = compoundA (mkA "fetal");
lin fetch_N = mkN "fetch" ;
lin fetch_V = mkV "fetch" "fetches" "fetched" "fetched" "fetching";
lin fetch_V2 = mkV2 (mkV "fetch" "fetches" "fetched" "fetched" "fetching");
lin fetching_A = mkA "fetching";
lin fete_N = mkN "fête" "fêtes";
lin fete_V2 = mkV2 (mkV "fête" "fêtes" "fêted" "fêted" "fêting");
lin fete_day_N = mkN "fete-day" "fete-days";
lin feterita_N = mkN "feterita" ;
lin fetid_A = compoundA (mkA "fetid");
lin fetish_N = mkN "fetish" "fetishes";
lin fetishism_N = mkN "fetishism" ;
lin fetishist_N = mkN "fetishist" ;
lin fetlock_N = mkN "fetlock" "fetlocks";
lin fetology_N = mkN "fetology" ;
lin fetometry_N = mkN "fetometry" ;
lin fetoprotein_N = mkN "fetoprotein" ;
lin fetoscope_N = mkN "fetoscope" ;
lin fetoscopy_N = mkN "fetoscopy" ;
lin fetter_N = mkN "fetter" "fetters";
lin fetter_V2 = mkV2 (mkV "fetter" "fetters" "fettered" "fettered" "fettering");
lin fetterbush_N = mkN "fetterbush" ;
lin fettle_N = mkN "fettle" ;
lin fettuccine_N = mkN "fettuccine" ;
lin fetus_N = mkN "fetus" ;
lin feud_N = mkN "feud" "feuds";
lin feudal_A = compoundA (mkA "feudal");
lin feudalism_N = mkN "feudalism" ;
lin feudatory_A = compoundA (mkA "feudatory");
lin feudatory_N = mkN "feudatory" "feudatories";
lin feude_V = mkV "feude";
lin fever_N = mkN "fever" "fevers";
lin fevered_A = compoundA (mkA "fevered");
lin feverfew_N = mkN "feverfew" ;
lin feverish_A = compoundA (mkA "feverish");
lin feverroot_N = mkN "feverroot" ;
lin few_A = mkA "few" ;
lin few_N = mkN "few" ;
lin few_Num = {s,sp = \\_ => table {Nom => "few"; Gen => "few's"}; n = Pl; hasCard = True};
lin fewer_A = mkA "fewer" ;
lin fewer_than_AdN = mkAdN "fewer than";
lin fewness_N = mkN "fewness" ;
lin fey_A = compoundA (mkA "fey");
lin fez_N = mkN "fez" "fezes";
lin fiance_N = mkN masculine (variants {mkN "fiance" "fiances"; mkN "fiancé" "fiancés"});
lin fiancee_N = mkN feminine (variants {mkN "fiancee" "fiancees"; mkN "fiancée" "fiancées"});
lin fiasco_N = mkN "fiasco" "fiascos";
lin fiat_N = mkN "fiat" "fiats";
lin fib_N = mkN "fib" "fibs";
lin fib_V = mkV "fib" "fibs" "fibbed" "fibbed" "fibbing";
lin fibber_N = mkN "fibber" "fibbers";
lin fibbing_N = mkN "fibbing";
lin fiberboard_N = mkN "fiberboard" ;
lin fiberglass_N = mkN "fiberglass" ;
lin fiberscope_N = mkN "fiberscope" ;
lin fibre_N = variants {mkN "fibre"; mkN "fiber"};
lin fibreboard_N = mkN "fibreboard" ;
lin fibreglass_N = mkN "fibreglass" ;
lin fibril_N = mkN "fibril" ;
lin fibrillation_N = mkN "fibrillation" ;
lin fibrillose_A = mkA "fibrillose" ;
lin fibrin_N = mkN "fibrin" ;
lin fibrinase_N = mkN "fibrinase" ;
lin fibrinogen_N = mkN "fibrinogen" ;
lin fibrinolysis_N = mkN "fibrinolysis" ;
lin fibrinopeptide_N = mkN "fibrinopeptide" ;
lin fibrinous_A = mkA "fibrinous" ;
lin fibroadenoma_N = mkN "fibroadenoma" ;
lin fibroblast_N = mkN "fibroblast" ;
lin fibrocalcific_A = mkA "fibrocalcific" ;
lin fibrocartilage_N = mkN "fibrocartilage" ;
lin fibrocartilaginous_A = mkA "fibrocartilaginous" ;
lin fibroma_N = mkN "fibroma" ;
lin fibromyositis_N = mkN "fibromyositis" ;
lin fibrosis_N = mkN "fibrosis" ;
lin fibrositis_N = mkN "fibrositis" ;
lin fibrosity_N = mkN "fibrosity" ;
lin fibrous_A = compoundA (mkA "fibrous");
lin fibula_N = mkN "fibula" "fibulas";
lin fichu_N = mkN "fichu" ;
lin fickle_A = compoundA (mkA "fickle");
lin fickleness_N = mkN "fickleness" ;
lin fictile_A = mkA "fictile" ;
lin fiction_N = mkN "fiction" "fictions";
lin fictional_A = compoundA (mkA "fictional");
lin fictionalization_N = mkN "fictionalization" ;
lin fictitious_A = compoundA (mkA "fictitious");
lin fictive_A = mkA "fictive" ;
lin fiddle_N = mkN "fiddle" "fiddles";
lin fiddle_V2 = mkV2 (mkV "fiddle" "fiddles" "fiddled" "fiddled" "fiddling");
lin fiddleneck_N = mkN "fiddleneck" ;
lin fiddler_N = mkN "fiddler" "fiddlers";
lin fiddlestick_N = mkN "fiddlestick" "fiddlesticks";
lin fidelity_N = mkN "fidelity" ;
lin fidget_N = mkN "fidget" "fidgets";
lin fidget_V = mkV "fidget" "fidgets" "fidgeted" "fidgeted" "fidgeting";
lin fidget_V2 = mkV2 (mkV "fidget" "fidgets" "fidgeted" "fidgeted" "fidgeting");
lin fidgety_A = compoundA (mkA "fidgety");
lin fiducial_A = mkA "fiducial" ;
lin fiduciary_A = mkA "fiduciary" ;
lin fiduciary_N = mkN "fiduciary" ;
lin fief_N = mkN "fief" "fiefs";
lin fiefdom_N = mkN "fiefdom" ;
lin field_N = mkN "field" "fields";
lin field_V = mkV "field" "fields" "fielded" "fielded" "fielding";
lin field_V2 = mkV2 (mkV "field" "fields" "fielded" "fielded" "fielding");
lin field_hospital_N = mkN "field-hospital" "field-hospitals";
lin field_officer_N = mkN "field-officer" "field-officers";
lin fielder_N = mkN "fielder" "fielders";
lin fieldfare_N = mkN "fieldfare" ;
lin fielding_N = mkN "fielding" ;
lin fieldsman_N = mkN masculine (mkN "fieldsman" "fieldsmen");
lin fieldstone_N = mkN "fieldstone" ;
lin fieldwork_N = mkN "fieldwork" "fieldworks";
lin fieldworker_N = mkN "fieldworker" ;
lin fiend_N = mkN "fiend" "fiends";
lin fiendish_A = compoundA (mkA "fiendish");
lin fierce_A = mkA "fierce" "fiercer";
lin fierceness_N = mkN "fierceness" ;
lin fieriness_N = mkN "fieriness" ;
lin fiery_A = compoundA (mkA "fiery");
lin fiesta_N = mkN "fiesta" "fiestas";
lin fife_N = mkN "fife" "fifes";
lin fife_PN = mkPN "Fife";
lin fig_N = mkN "fig" "figs";
lin fig_leaf_N = mkN "fig-leaf" "fig-leaves";
lin fight_N = mkN "fight" "fights";
lin fight_V = IrregEng.fight_V;
lin fight_V2 = mkV2 (IrregEng.fight_V);
lin fight_V2V = mkV2V (IrregEng.fight_V) noPrep to_Prep ;
lin fighter_N = mkN human (mkN "fighter" "fighters");
lin fighting_N = mkN "fighting" ;
lin figment_N = mkN "figment" "figments";
lin figural_A = mkA "figural" ;
lin figuration_N = mkN "figuration" ;
lin figurative_A = compoundA (mkA "figurative");
lin figure_N = mkN "figure" "figures";
lin figure_V = mkV "figure" "figures" "figured" "figured" "figuring";
lin figure_V2 = mkV2 (mkV "figure" "figures" "figured" "figured" "figuring");
lin figure_V2V = mkV2V (mkV "figure" "figures" "figured" "figured" "figuring") noPrep to_Prep ;
lin figure_VS = mkVS (mkV "figure" "figures" "figured" "figured" "figuring");
lin figurehead_N = mkN "figurehead" "figureheads";
lin figurine_N = mkN "figurine" ;
lin figwort_N = mkN "figwort" ;
lin fiji_PN = mkPN "Fiji";
lin fijian_A = compoundA (mkA "fijian");
lin fijian_N = mkN "fijian" "fijians";
lin filaggrin_N = mkN "filaggrin" ;
lin filament_N = mkN "filament" "filaments";
lin filamentous_A = mkA "filamentous" ;
lin filar_A = mkA "filar" ;
lin filaria_N = mkN "filaria" ;
lin filarial_A = mkA "filarial" ;
lin filariasis_N = mkN "filariasis" ;
lin filariid_A = mkA "filariid" ;
lin filature_N = mkN "filature" "filatures";
lin filbert_N = mkN "filbert" "filberts";
lin filch_V2 = mkV2 (mkV "filch" "filches" "filched" "filched" "filching");
lin file_N = mkN "file" "files";
lin file_V = mkV "file" "files" "filed" "filed" "filing";
lin file_V2 = mkV2 (mkV "file" "files" "filed" "filed" "filing");
lin filefish_N = mkN "filefish" ;
lin filename_N = mkN "filename" ;
lin filer_N = mkN "filer" ;
lin filet_N = mkN "filet" ;
lin filial_A = compoundA (mkA "filial");
lin filibuster_N = mkN "filibuster" "filibusters";
lin filibuster_V = mkV "filibuster" "filibusters" "filibustered" "filibustered" "filibustering";
lin filicide_N = mkN "filicide" ;
lin filigree_N = mkN "filigree" ;
lin filing_N = mkN "filing" ;
lin filipino_A = compoundA (mkA "filipino");
lin filipino_N = mkN "filipino" "filipinos";
lin fill_N = mkN "fill" "fills";
lin fill_V = mkV "fill" "fills" "filled" "filled" "filling";
lin fill_V2 = mkV2 (mkV "fill" "fills" "filled" "filled" "filling");
lin filler_N = mkN "filler" ;
lin fillet_N = mkN "fillet" "fillets";
lin fillet_V2 = mkV2 (mkV "fillet" "fillets" "filleted" "filleted" "filleting");
lin filling_N = mkN "filling" "fillings";
lin fillip_N = mkN "fillip" "fillips";
lin filly_N = mkN "filly" "fillies";
lin film_N = mkN "film" "films";
lin film_V = mkV "film" "films" "filmed" "filmed" "filming";
lin film_V2 = mkV2 (mkV "film" "films" "filmed" "filmed" "filming");
lin film_star_N = mkN "film-star" "film-stars";
lin filmable_A = compoundA (mkA "filmable");
lin filmdom_N = mkN "filmdom" ;
lin filming_N = mkN "filming" ;
lin filmy_A = mkA "filmy" "filmier";
lin filovirus_N = mkN "filovirus" ;
lin fils_N = mkN "fils" ;
lin filter_N = mkN "filter" "filters";
lin filter_V = mkV "filter" "filters" "filtered" "filtered" "filtering";
lin filter_V2 = mkV2 (mkV "filter" "filters" "filtered" "filtered" "filtering");
lin filtertipped_A = compoundA (mkA "filtertipped");
lin filth_N = mkN "filth" ;
lin filthiness_N = mkN "filthiness" ;
lin filthy_A = mkA "filthy" "filthier";
lin filtrate_N = mkN "filtrate" "filtrates";
lin filtrate_V = mkV "filtrate" "filtrates" "filtrated" "filtrated" "filtrating";
lin filtrate_V2 = mkV2 (mkV "filtrate" "filtrates" "filtrated" "filtrated" "filtrating");
lin filtration_N = mkN "filtration" ;
lin fimbria_N = mkN "fimbria" ;
lin fimbriate_A = mkA "fimbriate" ;
lin fin_N = mkN "fin" "fins";
lin finable_A = compoundA (mkA "finable");
lin finagle_V2 = mkV2 (mkV "finagle");
lin finagler_N = mkN "finagler" ;
lin final_A = compoundA (mkA "final");
lin final_N = mkN "final" "finals";
lin finale_N = mkN "finale" "finales";
lin finalist_N = mkN "finalist" "finalists";
lin finality_N = mkN "finality" ;
lin finalization_N = mkN "finalization" ;
lin finalize_V2 = mkV2 (mkV "finalize" "finalizes" "finalized" "finalized" "finalizing");
lin finance_N = mkN "finance" "finances";
lin finance_V2 = mkV2 (mkV "finance" "finances" "financed" "financed" "financing");
lin financial_A = compoundA (mkA "financial");
lin financier_N = mkN "financier" "financiers";
lin financing_N = mkN "financing" ;
lin finback_N = mkN "finback" ;
lin finch_N = mkN "finch" "finches";
lin find_N = mkN "find" "finds";
lin find_V = IrregEng.find_V;
lin find_V2 = mkV2 (IrregEng.find_V);
lin find_V2A = mkV2A (IrregEng.find_V) noPrep;
lin find_V2V = mkV2V (IrregEng.find_V) noPrep to_Prep ;
lin find_VS = mkVS (IrregEng.find_V);
lin finder_N = mkN "finder" "finders";
lin finding_N = mkN "finding" "findings";
lin findings_N = mkN "findings" ;
lin fine_A = mkA "fine" "finer";
lin fine_Adv = mkAdv "fine";
lin fine_N = mkN "fine" "fines";
lin fine_V2 = mkV2 (mkV "fine" "fines" "fined" "fined" "fining");
lin fine_tooth_A = compoundA (mkA "fine-tooth");
lin fineable_A = compoundA (mkA "fineable");
lin fineness_N = mkN "fineness" ;
lin finer_A = mkA "finer" ;
lin finery_N = mkN "finery" ;
lin finespun_A = mkA "finespun" ;
lin finesse_N = mkN "finesse" "finesses";
lin finesse_V2 = mkV2 (mkV "finesse");
lin finger_N = mkN "finger" "fingers";
lin finger_V2 = mkV2 (mkV "finger" "fingers" "fingered" "fingered" "fingering");
lin finger_alphabet_N = mkN "finger-alphabet" "finger-alphabets";
lin finger_bowl_N = mkN "finger-bowl" "finger-bowls";
lin finger_plate_N = mkN "finger-plate" "finger-plates";
lin finger_post_N = mkN "finger-post" "finger-posts";
lin fingerboard_N = mkN "fingerboard" "fingerboards";
lin fingering_N = mkN "fingering" ;
lin fingerless_A = mkA "fingerless" ;
lin fingerling_N = mkN "fingerling" ;
lin fingermark_N = mkN "fingermark" "fingermarks";
lin fingernail_N = mkN "fingernail" "fingernails";
lin fingerpost_N = mkN "fingerpost" ;
lin fingerprint_N = mkN "fingerprint" "fingerprints";
lin fingerprinting_N = mkN "fingerprinting" ;
lin fingerstall_N = mkN "fingerstall" "fingerstalls";
lin fingertip_N = mkN "fingertip" "fingertips";
lin finial_N = mkN "finial" ;
lin finical_A = compoundA (mkA "finical");
lin finicky_A = compoundA (mkA "finicky");
lin finis_N = mkN "finis" "fines";
lin finish_N = mkN "finish" "finishes";
lin finish_V = mkV "finish" "finishes" "finished" "finished" "finishing";
lin finish_V2 = mkV2 (mkV "finish" "finishes" "finished" "finished" "finishing");
lin finish_VA = mkVA (mkV "finish" "finishes" "finished" "finished" "finishing");
lin finisher_N = mkN "finisher" ;
lin finite_A = compoundA (mkA "finite");
lin finiteness_N = mkN "finiteness" ;
lin fink_N = mkN "fink" ;
lin finland_PN = mkPN "Finland";
lin finn_N = mkN "finn" "finns";
lin finnan_N = mkN "finnan" ;
lin finnan_haddie_N = mkN "finnan haddie" ;
lin finnan_haddock_N = mkN "finnan haddock" ;
lin finnish_A = compoundA (mkA "Finnish");
lin finnish_N = mkN "Finnish" ;
lin fiona_PN = mkPN "Fiona";
lin fiord_N = mkN "fiord" "fiords";
lin fipple_N = mkN "fipple" ;
lin fir_N = mkN "fir" "firs";
lin fir_cone_N = mkN "fir-cone" "fir-cones";
lin fire_1_N = mkN "fire" "fires";
lin fire_2_N = mkN "fire" "fires";
lin fire_V = mkV "fire" "fires" "fired" "fired" "firing";
lin fire_V2 = mkV2 (mkV "fire" "fires" "fired" "fired" "firing");
lin fire_alarm_N = mkN "fire-alarm" "fire-alarms";
lin fire_brigade_N = mkN "fire-brigade" "fire-brigades";
lin fire_control_N = mkN "fire-control" ;
lin fire_eater_N = mkN "fire-eater" "fire-eaters";
lin fire_engine_N = mkN "fire-engine" "fire-engines";
lin fire_escape_N = mkN "fire-escape" "fire-escapes";
lin fire_extinguisher_N = mkN "fire-extinguisher" "fire-extinguishers";
lin fire_fighter_N = mkN "fire-fighter" "fire-fighters";
lin fire_hose_N = mkN "fire-hose" "fire-hoses";
lin fire_power_N = mkN "fire-power" ;
lin fire_raising_N = mkN "fire-raising" ;
lin fire_walker_N = mkN "fire-walker" "fire-walkers";
lin fire_walking_N = mkN "fire-walking" ;
lin fire_watcher_N = mkN "fire-watcher" "fire-watchers";
lin fire_watching_N = mkN "fire-watching" ;
lin firearm_N = mkN "firearm" "firearms";
lin fireball_N = mkN "fireball" "fireballs";
lin firebase_N = mkN "firebase" ;
lin firebird_N = mkN "firebird" "firebirds";
lin fireboat_N = mkN "fireboat" ;
lin firebomb_N = mkN "firebomb" "firebombs";
lin firebox_N = mkN "firebox" "fireboxes";
lin firebrand_N = mkN "firebrand" "firebrands";
lin firebrat_N = mkN "firebrat" ;
lin firebreak_N = mkN "firebreak" "firebreaks";
lin firebrick_N = mkN "firebrick" "firebricks";
lin firebug_N = mkN "firebug" "firebugs";
lin fireclay_N = mkN "fireclay" ;
lin firecracker_N = mkN "firecracker" "firecrackers";
lin firedamp_N = mkN "firedamp" ;
lin firedog_N = mkN "firedog" "firedogs";
lin firefly_N = mkN "firefly" "fireflies";
lin fireguard_N = mkN "fireguard" "fireguards";
lin firelight_N = mkN "firelight" "firelights";
lin firelighter_N = mkN "firelighter" "firelighters";
lin fireman_N = mkN masculine (mkN "fireman" "firemen");
lin firenze_PN = mkPN "Firenze";
lin fireplace_N = mkN "fireplace" "fireplaces";
lin fireplug_N = mkN "fireplug" ;
lin firepower_N = mkN "firepower" ;
lin fireproof_A = compoundA (mkA "fireproof");
lin fireside_N = mkN "fireside" "firesides";
lin firestone_N = mkN "firestone" ;
lin firestorm_N = mkN "firestorm" ;
lin firetrap_N = mkN "firetrap" ;
lin firewall_N = mkN "firewall" ;
lin firewater_N = mkN "firewater" ;
lin fireweed_N = mkN "fireweed" ;
lin firewood_N = mkN "firewood" ;
lin firework_N = mkN "firework" "fireworks";
lin firing_line_N = mkN "firing-line" "firing-lines";
lin firing_party_N = mkN "firing-party" "firing-parties";
lin firing_squad_N = mkN "firing-squad" "firing-squads";
lin firkin_N = mkN "firkin" "firkins";
lin firm_A = mkA "firm" "firmer";
lin firm_Adv = mkAdv "firm";
lin firm_N = mkN "firm" "firms";
lin firm_V = mkV "firm" "firms" "firmed" "firmed" "firming";
lin firm_V2 = mkV2 (mkV "firm" "firms" "firmed" "firmed" "firming");
lin firmament_N = mkN "firmament" "firmaments";
lin firmamental_A = mkA "firmamental" ;
lin firmness_N = mkN "firmness" ;
lin firmware_N = mkN "firmware" ;
lin first_class_A = compoundA (mkA "first-class");
lin first_class_Adv = mkAdv "first-class";
lin first_hand_A = compoundA (mkA "first-hand");
lin first_hand_Adv = mkAdv "first-hand";
lin first_nighter_N = mkN "first-nighter" "first-nighters";
lin first_rate_A = irregAdv (compoundA (mkA "first-rate")) "first-rate";
lin firstborn_A = compoundA (mkA "firstborn");
lin firstborn_N = mkN "firstborn" "firstborns";
lin firsthand_A = mkA "firsthand" ;
lin firsthand_Adv = mkAdv "firsthand" ;
lin firth_N = mkN "firth" "firths";
lin fisc_N = mkN "fisc" ;
lin fiscal_A = compoundA (mkA "fiscal");
lin fish_N = mkN "fish" "fish";
lin fish_V = mkV "fish" "fishes" "fished" "fished" "fishing";
lin fish_V2 = mkV2 (mkV "fish" "fishes" "fished" "fished" "fishing");
lin fish_hook_N = mkN "fish-hook" "fish-hooks";
lin fish_knife_N = mkN "fish-knife" "fish-knives";
lin fish_slice_N = mkN "fish-slice" "fish-slices";
lin fishball_N = mkN "fishball" "fishballs";
lin fishbone_N = mkN "fishbone" "fishbones";
lin fishbowl_N = mkN "fishbowl" ;
lin fishcake_N = mkN "fishcake" "fishcakes";
lin fisher_N = mkN "fisher" "fishers";
lin fisherman_N = mkN masculine (mkN "fisherman" "fishermen");
lin fishery_N = mkN "fishery" "fisheries";
lin fisheye_A = mkA "fisheye" ;
lin fishhook_N = mkN "fishhook" ;
lin fishing_N = mkN "fishing" ;
lin fishing_line_N = mkN "fishing-line" "fishing-lines";
lin fishing_rod_N = mkN "fishing-rod" "fishing-rods";
lin fishing_tackle_N = mkN "fishing-tackle" ;
lin fishmonger_N = mkN "fishmonger" "fishmongers";
lin fishnet_N = mkN "fishnet" ;
lin fishpaste_N = mkN "fishpaste" "fishpastes";
lin fishplate_N = mkN "fishplate" "fishplates";
lin fishpond_N = mkN "fishpond" ;
lin fishwife_N = mkN "fishwife" "fishwives";
lin fishy_A = mkA "fishy" "fishier";
lin fissile_A = compoundA (mkA "fissile");
lin fission_N = mkN "fission" ;
lin fissionable_A = compoundA (mkA "fissionable");
lin fissiparity_N = mkN "fissiparity" ;
lin fissiparous_A = compoundA (mkA "fissiparous");
lin fissure_N = mkN "fissure" "fissures";
lin fist_N = mkN "fist" "fists";
lin fistfight_N = mkN "fistfight" ;
lin fistmele_N = mkN "fistmele" ;
lin fistula_N = mkN "fistula" "fistulas";
lin fistular_A = mkA "fistular" ;
lin fistulous_A = mkA "fistulous" ;
lin fit_A = mkA "fit";
lin fit_N = mkN "fit" "fits";
lin fit_V = mkV "fit" "fits" "fitted" "fitted" "fitting";
lin fit_V2 = mkV2 (mkV "fit" "fits" "fitted" "fitted" "fitting");
lin fitful_A = compoundA (mkA "fitful");
lin fitfulness_N = mkN "fitfulness" ;
lin fitment_N = mkN "fitment" "fitments";
lin fitness_N = mkN "fitness" ;
lin fitter_A = mkA "fitter" ;
lin fitter_N = mkN "fitter" "fitters";
lin fitting_A = compoundA (mkA "fitting");
lin fitting_N = mkN "fitting" "fittings";
lin fivefold_A = compoundA (mkA "fivefold");
lin fivepence_N = mkN "fivepence" "fivepences";
lin fivepenny_A = compoundA (mkA "fivepenny");
lin fiver_N = mkN "fiver" "fivers";
lin fives_N = mkN "fives" "fives";
lin fix_N = mkN "fix" "fixes";
lin fix_V = mkV "fix" "fixes" "fixed" "fixed" "fixing";
lin fix_V2 = mkV2 (mkV "fix" "fixes" "fixed" "fixed" "fixing");
lin fixate_V2 = mkV2 (mkV "fixate" "fixates" "fixated" "fixated" "fixating");
lin fixation_N = mkN "fixation" "fixations";
lin fixative_N = mkN "fixative" "fixatives";
lin fixedly_Adv = mkAdv "fixedly" ;
lin fixedness_N = mkN "fixedness" ;
lin fixer_N = mkN "fixer" ;
lin fixings_N = mkN "fixings" ;
lin fixture_N = mkN "fixture" "fixtures";
lin fizgig_N = mkN "fizgig" ;
lin fizz_N = mkN "fizz" ;
lin fizz_V = mkV "fizz" "fizzes" "fizzed" "fizzed" "fizzing";
lin fizzle_V = mkV "fizzle" "fizzles" "fizzled" "fizzled" "fizzling";
lin fizzy_A = mkA "fizzy" "fizzier";
lin fjord_N = mkN "fjord" "fjords";
lin flab_N = mkN "flab" ;
lin flabbergast_V2 = mkV2 (mkV "flabbergast" "flabbergasts" "flabbergasted" "flabbergasted" "flabbergasting");
lin flabbiness_N = mkN "flabbiness" ;
lin flabby_A = mkA "flabby" "flabbier";
lin flaccid_A = compoundA (mkA "flaccid");
lin flaccidity_N = mkN "flaccidity" ;
lin flag_N = mkN "flag" "flags";
lin flag_V = mkV "flag" "flags" "flagged" "flagged" "flagging";
lin flag_V2 = mkV2 (mkV "flag" "flags" "flagged" "flagged" "flagging");
lin flag_captain_N = mkN "flag-captain" "flag-captains";
lin flag_day_N = mkN "flag-day" "flag-days";
lin flagellant_N = mkN "flagellant" "flagellants";
lin flagellate_A = mkA "flagellate" ;
lin flagellate_N = mkN "flagellate" ;
lin flagellate_V2 = mkV2 (mkV "flagellate" "flagellates" "flagellated" "flagellated" "flagellating");
lin flagellation_N = mkN "flagellation" "flagellations";
lin flagellum_N = mkN "flagellum" ;
lin flageolet_N = mkN "flageolet" "flageolets";
lin flagfish_N = mkN "flagfish" ;
lin flagging_N = mkN "flagging" ;
lin flagitious_A = mkA "flagitious" ;
lin flagon_N = mkN "flagon" "flagons";
lin flagpole_N = mkN "flagpole" "flagpoles";
lin flagrant_A = compoundA (mkA "flagrant");
lin flagship_N = mkN "flagship" "flagships";
lin flagstaff_N = mkN "flagstaff" "flagstaffs";
lin flagstone_N = mkN "flagstone" "flagstones";
lin flail_N = mkN "flail" "flails";
lin flail_V2 = mkV2 (mkV "flail" "flails" "flailed" "flailed" "flailing");
lin flair_N = mkN "flair" "flairs";
lin flak_N = mkN "flak" ;
lin flake_N = mkN "flake" "flakes";
lin flake_V = mkV "flake" "flakes" "flaked" "flaked" "flaking";
lin flakiness_N = mkN "flakiness" ;
lin flaky_A = mkA "flaky" "flakier";
lin flambeau_N = mkN "flambeau" "flambeaus";
lin flamboyance_N = mkN "flamboyance" ;
lin flamboyant_A = compoundA (mkA "flamboyant");
lin flame_N = mkN "flame" "flames";
lin flame_V = mkV "flame" "flames" "flamed" "flamed" "flaming";
lin flamen_N = mkN "flamen" ;
lin flamenco_N = mkN "flamenco" ;
lin flameproof_A = mkA "flameproof" ;
lin flamethrower_N = mkN "flamethrower" "flamethrowers";
lin flamingo_N = mkN "flamingo" "flamingos";
lin flammability_N = mkN "flammability" ;
lin flammable_A = compoundA (mkA "flammable");
lin flan_N = mkN "flan" "flans";
lin flange_N = mkN "flange" "flanges";
lin flank_N = mkN "flank" "flanks";
lin flank_V = mkV "flank";
lin flank_V2 = mkV2 (mkV "flank" "flanks" "flanked" "flanked" "flanking");
lin flanker_N = mkN "flanker" ;
lin flannel_N = mkN "flannel" "flannels";
lin flannelbush_N = mkN "flannelbush" ;
lin flannelette_N = mkN "flannelette" ;
lin flap_N = mkN "flap" "flaps";
lin flap_V = mkV "flap" "flaps" "flapped" "flapped" "flapping";
lin flap_V2 = mkV2 (mkV "flap" "flaps" "flapped" "flapped" "flapping");
lin flapjack_N = mkN "flapjack" "flapjacks";
lin flapper_N = mkN "flapper" "flappers";
lin flare_N = mkN "flare" "flares";
lin flare_V = mkV "flare" "flares" "flared" "flared" "flaring";
lin flare_V2 = mkV2 (mkV "flare" "flares" "flared" "flared" "flaring");
lin flare_path_N = mkN "flare-path" "flare-paths";
lin flare_up_N = mkN "flare-up" "flare-ups";
lin flash_N = mkN "flash" "flashes";
lin flash_V = mkV "flash" "flashes" "flashed" "flashed" "flashing";
lin flash_V2 = mkV2 (mkV "flash" "flashes" "flashed" "flashed" "flashing");
lin flashback_N = mkN "flashback" "flashbacks";
lin flashboard_N = mkN "flashboard" ;
lin flashbulb_N = mkN "flashbulb" "flashbulbs";
lin flasher_N = mkN "flasher" ;
lin flashgun_N = mkN "flashgun" "flashguns";
lin flashiness_N = mkN "flashiness" ;
lin flashing_N = mkN "flashing" ;
lin flashlight_N = mkN "flashlight" "flashlights";
lin flashover_N = mkN "flashover" ;
lin flashpoint_N = mkN "flashpoint" "flashpoints";
lin flashy_A = mkA "flashy" "flashier";
lin flask_N = mkN "flask" "flasks";
lin flat_A = mkA "flat" "flatter";
lin flat_Adv = mkAdv "flat";
lin flat_N = mkN "flat" "flats";
lin flat_bottomed_A = compoundA (mkA "flat-bottomed");
lin flat_car_N = mkN "flat-car" "flat-cars";
lin flat_footed_A = compoundA (mkA "flat-footed");
lin flat_iron_N = mkN "flat-iron" "flat-irons";
lin flatbed_N = mkN "flatbed" ;
lin flatbottom_A = mkA "flatbottom" ;
lin flatbread_N = mkN "flatbread" ;
lin flatbrod_N = mkN "flatbrod" ;
lin flatcar_N = mkN "flatcar" ;
lin flatfish_N = mkN "flatfish" "flatfish";
lin flatfoot_N = mkN "flatfoot" ;
lin flathead_N = mkN "flathead" ;
lin flatiron_N = mkN "flatiron" ;
lin flatlet_N = mkN "flatlet" "flatlets";
lin flatmate_N = mkN "flatmate" ;
lin flatness_N = mkN "flatness" ;
lin flats_N = mkN "flats" ;
lin flatten_V = mkV "flatten" "flattens" "flattened" "flattened" "flattening";
lin flatten_V2 = mkV2 (mkV "flatten" "flattens" "flattened" "flattened" "flattening");
lin flatter_V2 = mkV2 (mkV "flatter" "flatters" "flattered" "flattered" "flattering");
lin flatterer_N = mkN "flatterer" "flatterers";
lin flattering_A = mkA "flattering" ;
lin flattery_N = mkN "flattery" "flatteries";
lin flattop_N = mkN "flattop" "flattops";
lin flatulence_N = mkN "flatulence" ;
lin flatulent_A = mkA "flatulent" ;
lin flatware_N = mkN "flatware" ;
lin flatwork_N = mkN "flatwork" ;
lin flatworm_N = mkN "flatworm" ;
lin flaunt_N = mkN "flaunt" ;
lin flaunt_V = mkV "flaunt" "flaunts" "flaunted" "flaunted" "flaunting";
lin flaunt_V2 = mkV2 (mkV "flaunt" "flaunts" "flaunted" "flaunted" "flaunting");
lin flaunty_A = mkA "flaunty" ;
lin flautist_N = mkN "flautist" "flautists";
lin flavin_N = mkN "flavin" ;
lin flavivirus_N = mkN "flavivirus" ;
lin flavone_N = mkN "flavone" ;
lin flavonoid_N = mkN "flavonoid" ;
lin flavorer_N = mkN "flavorer" ;
lin flavorful_A = mkA "flavorful" ;
lin flavorlessness_N = mkN "flavorlessness" ;
lin flavorsomeness_N = mkN "flavorsomeness" ;
lin flavour_N = mkN (variants {"flavour"; "flavor"});
lin flavour_V2 = mkV2 (mkV "flavour" "flavours" "flavoured" "flavoured" "flavouring");
lin flavouring_N = mkN "flavouring" "flavourings";
lin flavourless_A = compoundA (mkA "flavourless");
lin flaw_N = mkN "flaw" "flaws";
lin flaw_V2 = mkV2 (mkV "flaw");
lin flawless_A = compoundA (mkA "flawless");
lin flax_N = mkN "flax" ;
lin flaxen_A = compoundA (mkA "flaxen");
lin flay_V2 = mkV2 (mkV "flay" "flays" "flayed" "flayed" "flaying");
lin flea_N = mkN "flea" "fleas";
lin flea_bite_N = mkN "flea-bite" "flea-bites";
lin flea_bitten_A = compoundA (mkA "flea-bitten");
lin fleabag_N = mkN "fleabag" ;
lin fleabane_N = mkN "fleabane" ;
lin fleapit_N = mkN "fleapit" "fleapits";
lin fleawort_N = mkN "fleawort" ;
lin flecainide_N = mkN "flecainide" ;
lin fleck_N = mkN "fleck" "flecks";
lin fleck_V2 = mkV2 (mkV "fleck" "flecks" "flecked" "flecked" "flecking");
lin fledged_A = compoundA (mkA "fledged");
lin fledgeling_N = mkN "fledgeling" "fledgelings";
lin fledgling_A = mkA "fledgling" ;
lin fledgling_N = mkN "fledgling" "fledglings";
lin flee_V = IrregEng.flee_V;
lin flee_V2 = mkV2 (IrregEng.flee_V);
lin fleece_N = mkN "fleece" "fleeces";
lin fleece_V2 = mkV2 (mkV "fleece" "fleeces" "fleeced" "fleeced" "fleecing");
lin fleeceable_A = mkA "fleeceable" ;
lin fleecy_A = mkA "fleecy" "fleecier";
lin fleer_N = mkN "fleer" ;
lin fleet_A = mkA "fleet" "fleeter";
lin fleet_N = mkN "fleet" "fleets";
lin fleet_PN = mkPN "Fleet";
lin fleet_street_PN = mkPN "Fleet street";
lin fleeting_A = compoundA (mkA "fleeting");
lin fleetness_N = mkN "fleetness" ;
lin fleetwood_PN = mkPN "Fleetwood";
lin flemish_A = compoundA (mkA "flemish");
lin flemish_N = mkN "flemish" ;
lin flesh_N = mkN "flesh" ;
lin flesh_wound_N = mkN "flesh-wound" "flesh-wounds";
lin fleshiness_N = mkN "fleshiness" ;
lin fleshly_A = compoundA (mkA "fleshly");
lin fleshy_A = mkA "fleshy" "fleshier";
lin fleur_de_lis_N = mkN (variants {"fleur-de-lis"; "fleur-de-lys"}) "fleur-de-les";
lin flex_N = mkN "flex" "flexes";
lin flex_V2 = mkV2 (mkV "flex" "flexes" "flexed" "flexed" "flexing");
lin flexibility_N = mkN "flexibility" ;
lin flexible_A = compoundA (mkA "flexible");
lin flexion_N = mkN "flexion" ;
lin flexuous_A = mkA "flexuous" ;
lin flexure_N = mkN "flexure" ;
lin flibbertigibbet_N = mkN "flibbertigibbet" "flibbertigibbets";
lin flick_N = mkN "flick" "flicks";
lin flick_V2 = mkV2 (mkV "flick" "flicks" "flicked" "flicked" "flicking");
lin flick_knife_N = mkN "flick-knife" "flick-knives";
lin flicker_N = mkN "flicker" "flickers";
lin flicker_V = mkV "flicker" "flickers" "flickered" "flickered" "flickering";
lin flickertail_N = mkN "flickertail" ;
lin flier_N = mkN "flier" "fliers";
lin flies_N = mkN "flies" ;
lin flight_N = mkN "flight" "flights";
lin flight_V2 = mkV2 (mkV "flight" "flights" "flighted" "flighted" "flighting");
lin flightiness_N = mkN "flightiness" ;
lin flightless_A = compoundA (mkA "flightless");
lin flighty_A = compoundA (mkA "flighty");
lin flimsiness_N = mkN "flimsiness" ;
lin flimsy_A = mkA "flimsy" "flimsier";
lin flimsy_N = mkN "flimsy" ;
lin flinch_V = mkV "flinch" "flinches" "flinched" "flinched" "flinching";
lin flinders_N = mkN "flinders" ;
lin fling_N = mkN "fling" "flings";
lin fling_V = IrregEng.fling_V;
lin fling_V2 = mkV2 (IrregEng.fling_V);
lin flint_N = mkN "flint" "flints";
lin flint_PN = mkPN "Flint";
lin flintlock_N = mkN "flintlock" ;
lin flintstone_N = mkN "flintstone" ;
lin flinty_A = mkA "flinty" "flintier";
lin flip_A = compoundA (mkA "flip");
lin flip_N = mkN "flip" "flips";
lin flip_V = mkV "flip" "flips" "flipped" "flipped" "flipping";
lin flip_V2 = mkV2 (mkV "flip" "flips" "flipped" "flipped" "flipping");
lin flippancy_N = mkN "flippancy" "flippancies";
lin flippant_A = compoundA (mkA "flippant");
lin flipper_N = mkN "flipper" "flippers";
lin flirt_N = mkN "flirt" "flirts";
lin flirt_V = mkV "flirt" "flirts" "flirted" "flirted" "flirting";
lin flirtation_N = mkN "flirtation" "flirtations";
lin flirtatious_A = compoundA (mkA "flirtatious");
lin flit_N = mkN "flit" "flits";
lin flit_V = mkV "flit" "flits" "flitted" "flitted" "flitting";
lin flitch_N = mkN "flitch" ;
lin float_N = mkN "float" "floats";
lin float_V = mkV "float" "floats" "floated" "floated" "floating";
lin float_V2 = mkV2 (mkV "float" "floats" "floated" "floated" "floating");
lin float_VA = mkVA (mkV "float" "floats" "floated" "floated" "floating");
lin floatation_N = mkN "floatation" "floatations";
lin floater_N = mkN "floater" ;
lin floating_N = mkN "floating" ;
lin floatplane_N = mkN "floatplane" ;
lin floccose_A = mkA "floccose" ;
lin flocculation_N = mkN "flocculation" ;
lin floccule_N = mkN "floccule" ;
lin flocculent_A = mkA "flocculent" ;
lin flock_N = mkN "flock" "flocks";
lin flock_V = mkV "flock" "flocks" "flocked" "flocked" "flocking";
lin flock_V2V = mkV2V (mkV "flock" "flocks" "flocked" "flocked" "flocking") noPrep to_Prep ;
lin floe_N = mkN "floe" "floes";
lin flog_V2 = mkV2 (mkV "flog" "flogs" "flogged" "flogged" "flogging");
lin flogger_N = mkN "flogger" ;
lin flogging_N = mkN "flogging" "floggings";
lin flood_N = mkN "flood" "floods";
lin flood_V = mkV "flood" "floods" "flooded" "flooded" "flooding";
lin flood_V2 = mkV2 (mkV "flood" "floods" "flooded" "flooded" "flooding");
lin flood_tide_N = mkN "flood-tide" "flood-tides";
lin floodgate_N = mkN "floodgate" "floodgates";
lin floodhead_N = mkN "floodhead" ;
lin floodlight_V2 = mkV2 (mkV "floodlight" "floodlights" "floodlighted" "floodlighted" "floodlighting");
lin floodlit_A = mkA "floodlit" ;
lin floodplain_N = mkN "floodplain" ;
lin floor_N = mkN "floor" "floors";
lin floor_V2 = mkV2 (mkV "floor" "floors" "floored" "floored" "flooring");
lin floor_walker_N = mkN "floor-walker" "floor-walkers";
lin floorboard_N = mkN "floorboard" "floorboards";
lin flooring_N = mkN "flooring" ;
lin floorwalker_N = mkN "floorwalker" ;
lin floozie_N = mkN "floozie" "floozies";
lin floozy_N = mkN "floozy" "floozies";
lin flop_Adv = mkAdv "flop";
lin flop_N = mkN "flop" "flops";
lin flop_V = mkV "flop" "flops" "flopped" "flopped" "flopping";
lin flop_V2 = mkV2 (mkV "flop" "flops" "flopped" "flopped" "flopping");
lin flophouse_N = mkN "flophouse" ;
lin floppy_A = mkA "floppy" "floppier";
lin flora_PN = mkPN "Flora";
lin floral_A = compoundA (mkA "floral");
lin florence_PN = mkPN "Florence";
lin floret_N = mkN "floret" ;
lin floricultural_A = mkA "floricultural" ;
lin floriculture_N = mkN "floriculture" ;
lin florid_A = compoundA (mkA "florid");
lin florida_PN = mkPN "Florida";
lin florilegium_N = mkN "florilegium" ;
lin florin_N = mkN "florin" "florins";
lin florist_N = mkN "florist" "florists";
lin florrie_PN = mkPN "Florrie";
lin floss_N = mkN "floss" ;
lin flotation_N = mkN "flotation" "flotations";
lin flotilla_N = mkN "flotilla" "flotillas";
lin flotsam_N = mkN "flotsam" ;
lin flounce_N = mkN "flounce" "flounces";
lin flounce_V = mkV "flounce" "flounces" "flounced" "flounced" "flouncing";
lin flounce_V2 = mkV2 (mkV "flounce" "flounces" "flounced" "flounced" "flouncing");
lin flounder_N = mkN "flounder" "flounders";
lin flounder_V = mkV "flounder" "flounders" "floundered" "floundered" "floundering";
lin flour_N = mkN "flour" ;
lin flour_V2 = mkV2 (mkV "flour" "flours" "floured" "floured" "flouring");
lin flourish_N = mkN "flourish" "flourishes";
lin flourish_V = mkV "flourish" "flourishes" "flourished" "flourished" "flourishing";
lin flourish_V2 = mkV2 (mkV "flourish" "flourishes" "flourished" "flourished" "flourishing");
lin floury_A = mkA "floury" "flourier";
lin flout_V2 = mkV2 (mkV "flout" "flouts" "flouted" "flouted" "flouting");
lin flow_N = mkN "flow";
lin flow_V = mkV "flow" "flows" "flowed" "flowed" "flowing";
lin flowage_N = mkN "flowage" ;
lin flower_N = mkN "flower" "flowers";
lin flower_V = mkV "flower" "flowers" "flowered" "flowered" "flowering";
lin flower_girl_N = mkN "flower-girl" "flower-girls";
lin flowerbed_N = mkN "flowerbed" "flowerbeds";
lin flowered_A = compoundA (mkA "flowered");
lin flowerless_A = compoundA (mkA "flowerless");
lin flowerpot_N = mkN "flowerpot" "flowerpots";
lin flowery_A = mkA "flowery" "flowerier";
lin floxuridine_N = mkN "floxuridine" ;
lin flu_N = mkN "flu" ;
lin fluctuate_V = mkV "fluctuate" "fluctuates" "fluctuated" "fluctuated" "fluctuating";
lin fluctuation_N = mkN "fluctuation" "fluctuations";
lin flue_N = mkN "flue" "flues";
lin fluency_N = mkN "fluency" ;
lin fluent_A = compoundA (mkA "fluent");
lin fluff_N = mkN "fluff" ;
lin fluff_V2 = mkV2 (mkV "fluff" "fluffs" "fluffed" "fluffed" "fluffing");
lin fluffy_A = mkA "fluffy" "fluffier";
lin flugelhorn_N = mkN "flugelhorn" ;
lin fluid_A = compoundA (mkA "fluid");
lin fluid_N = mkN "fluid" "fluids";
lin fluidity_N = mkN "fluidity" "fluidities";
lin fluidounce_N = mkN "fluidounce" ;
lin fluidram_N = mkN "fluidram" ;
lin fluke_N = mkN "fluke" "flukes";
lin flume_N = mkN "flume" "flumes";
lin flummery_N = mkN "flummery" ;
lin flummox_V2 = mkV2 (mkV "flummox" "flummoxes" "flummoxed" "flummoxed" "flummoxing");
lin flunitrazepan_N = mkN "flunitrazepan" ;
lin flunk_V = mkV "flunk" "flunks" "flunked" "flunked" "flunking";
lin flunk_V2 = mkV2 (mkV "flunk" "flunks" "flunked" "flunked" "flunking");
lin flunkey_N = mkN "flunkey" "flunkeys";
lin flunky_N = mkN "flunky" "flunkies";
lin fluorapatite_N = mkN "fluorapatite" ;
lin fluorescein_N = mkN "fluorescein" ;
lin fluorescence_N = mkN "fluorescence" "fluorescences";
lin fluorescent_A = compoundA (mkA "fluorescent");
lin fluorescent_N = mkN "fluorescent" ;
lin fluoridate_V2 = mkV2 (mkV "fluoridate" "fluoridates" "fluoridated" "fluoridated" "fluoridating");
lin fluoridation_N = mkN "fluoridation" "fluoridations";
lin fluoride_N = mkN "fluoride" "fluorides";
lin fluoridization_N = mkN "fluoridization" "fluoridizations";
lin fluoridize_V2 = mkV2 (mkV "fluoridize" "fluoridizes" "fluoridized" "fluoridized" "fluoridizing");
lin fluorine_N = mkN "fluorine" ;
lin fluorite_N = mkN "fluorite" ;
lin fluoroboride_N = mkN "fluoroboride" ;
lin fluorocarbon_N = mkN "fluorocarbon" ;
lin fluorochrome_N = mkN "fluorochrome" ;
lin fluoroform_N = mkN "fluoroform" ;
lin fluoroscope_N = mkN "fluoroscope" ;
lin fluoroscopy_N = mkN "fluoroscopy" ;
lin fluorosis_N = mkN "fluorosis" ;
lin fluorouracil_N = mkN "fluorouracil" ;
lin fluosilicate_N = mkN "fluosilicate" ;
lin fluoxetine_N = mkN "fluoxetine" ;
lin fluphenazine_N = mkN "fluphenazine" ;
lin flurazepam_N = mkN "flurazepam" ;
lin flurbiprofen_N = mkN "flurbiprofen" ;
lin flurry_N = mkN "flurry" "flurries";
lin flurry_V2 = mkV2 (mkV "flurry" "flurries" "flurried" "flurried" "flurrying");
lin flush_A = compoundA (mkA "flush");
lin flush_Adv = mkAdv "flush" ;
lin flush_N = mkN "flush" "flushes";
lin flush_V = mkV "flush" "flushes" "flushed" "flushed" "flushing";
lin flush_V2 = mkV2 (mkV "flush" "flushes" "flushed" "flushed" "flushing");
lin fluster_N = mkN "fluster" "flusters";
lin fluster_V2 = mkV2 (mkV "fluster" "flusters" "flustered" "flustered" "flustering");
lin flute_N = mkN "flute" "flutes";
lin flute_V = mkV "flute" "flutes" "fluted" "fluted" "fluting";
lin flute_V2 = mkV2 (mkV "flute" "flutes" "fluted" "fluted" "fluting");
lin fluting_N = mkN "fluting" ;
lin flutist_N = mkN "flutist" "flutists";
lin flutter_N = mkN "flutter" "flutters";
lin flutter_V = mkV "flutter" "flutters" "fluttered" "fluttered" "fluttering";
lin flutter_V2 = mkV2 (mkV "flutter" "flutters" "fluttered" "fluttered" "fluttering");
lin fluvastatin_N = mkN "fluvastatin" ;
lin fluvial_A = compoundA (mkA "fluvial");
lin flux_N = mkN "flux" "fluxes";
lin fluxmeter_N = mkN "fluxmeter" ;
lin fly_A = compoundA (mkA "fly");
lin fly_N = mkN "fly" "flies";
lin fly_V = IrregEng.fly_V;
lin fly_V2 = mkV2 (IrregEng.fly_V);
lin fly_VS = mkVS (IrregEng.fly_V);
lin fly_fish_V = mkV "fly-fish" "fly-fishes" "fly-fished" "fly-fished" "fly-fishing";
lin fly_fishing_N = mkN "fly-fishing" ;
lin fly_swat_N = mkN "fly-swat" "fly-swats";
lin fly_swatter_N = mkN "fly-swatter" "fly-swatters";
lin flyaway_A = mkA "flyaway" ;
lin flyblown_A = compoundA (mkA "flyblown");
lin flycatcher_N = mkN "flycatcher" "flycatchers";
lin flyer_N = mkN "flyer" "flyers";
lin flying_bomb_N = mkN "flying-bomb" "flying-bombs";
lin flying_fish_N = mkN "flying-fish" "flying-fish";
lin flying_fox_N = mkN "flying-fox" "flying-foxes";
lin flying_squad_N = mkN "flying-squad" "flying-squads";
lin flyleaf_N = mkN "flyleaf" "flyleaves";
lin flyover_N = mkN "flyover" "flyovers";
lin flypaper_N = mkN "flypaper" "flypapers";
lin flypast_N = mkN "flypast" "flypasts";
lin flyspeck_N = mkN "flyspeck" ;
lin flytrap_N = mkN "flytrap" "flytraps";
lin flyweight_N = mkN "flyweight" "flyweights";
lin flywheel_N = mkN "flywheel" "flywheels";
lin fm_N = mkN "fm" ;
lin fo'c'sle_N = mkN "fo'c'sle" "fo'c'sles";
lin fo_N = mkN "fo" ;
lin foal_N = mkN "foal" "foals";
lin foal_V = mkV "foal" "foals" "foaled" "foaled" "foaling";
lin foam_N = mkN "foam" "foams";
lin foam_V = mkV "foam" "foams" "foamed" "foamed" "foaming";
lin foam_rubber_N = mkN "foam-rubber" ;
lin foamflower_N = mkN "foamflower" ;
lin foaminess_N = mkN "foaminess" ;
lin foamy_A = mkA "foamy" "foamier";
lin fob_N = mkN "fob" ;
lin fob_V2 = mkV2 (mkV "fob" "fobs" "fobbed" "fobbed" "fobbing");
lin focal_A = compoundA (mkA "focal");
lin focalization_N = mkN "focalization" ;
lin focus_N = mkN "focus" "focuses";
lin focus_V = mkV "focus" "focuses" "focused" "focused" "focusing";
lin focus_V2 = mkV2 (mkV "focus" "focuses" "focused" "focused" "focusing");
lin fodder_N = mkN "fodder" ;
lin foe_N = mkN "foe" "foes";
lin foetal_A = compoundA (mkA "foetal");
lin foetus_N = mkN "foetus" "foetuses";
lin fog_N = mkN "fog" "fogs";
lin fog_V2 = mkV2 (mkV "fog" "fogs" "fogged" "fogged" "fogging");
lin fogbank_N = mkN "fogbank" "fogbanks";
lin fogbound_A = compoundA (mkA "fogbound");
lin fogey_N = mkN "fogey" "fogeys";
lin foggia_PN = mkPN "Foggia";
lin foggy_A = mkA "foggy" "foggier";
lin foghorn_N = mkN "foghorn" "foghorns";
lin foglamp_N = mkN "foglamp" "foglamps";
lin fogsignal_N = mkN "fogsignal" "fogsignals";
lin fogyish_A = mkA "fogyish" ;
lin fohn_N = mkN "fohn" ;
lin foible_N = mkN "foible" "foibles";
lin foil_N = mkN "foil" "foils";
lin foil_V2 = mkV2 (mkV "foil" "foils" "foiled" "foiled" "foiling");
lin foist_V2 = mkV2 (mkV "foist" "foists" "foisted" "foisted" "foisting");
lin fold_N = mkN "fold" "folds";
lin fold_V = mkV "fold" "folds" "folded" "folded" "folding";
lin fold_V2 = mkV2 (mkV "fold" "folds" "folded" "folded" "folding");
lin foldable_A = mkA "foldable" ;
lin folder_N = mkN "folder" "folders";
lin folderal_N = mkN "folderal" ;
lin folderol_N = mkN "folderol" ;
lin foldout_N = mkN "foldout" ;
lin foliaceous_A = mkA "foliaceous" ;
lin foliage_N = mkN "foliage" ;
lin foliate_A = mkA "foliate" ;
lin foliation_N = mkN "foliation" ;
lin folio_N = mkN "folio" "folios";
lin foliolate_A = mkA "foliolate" ;
lin folium_N = mkN "folium" ;
lin folk_N = mkN "folk" "folks";
lin folk_dance_N = mkN "folk-dance" "folk-dances";
lin folkestone_PN = mkPN "Folkestone";
lin folklore_N = mkN "folklore" ;
lin folks_N = mkN "folks" ;
lin folksong_N = mkN "folksong" "folksongs";
lin folksy_A = compoundA (mkA "folksy");
lin folktale_N = mkN "folktale" "folktales";
lin follicle_N = mkN "follicle" ;
lin follicular_A = mkA "follicular" ;
lin folliculitis_N = mkN "folliculitis" ;
lin follies_N = mkN "follies" ;
lin follow_V = mkV "follow" "follows" "followed" "followed" "following";
lin follow_V2 = mkV2 (mkV "follow" "follows" "followed" "followed" "following");
lin follow_VS = mkVS (mkV "follow" "follows" "followed" "followed" "following");
lin follow_on_N = mkN "follow-on" "follow-ons";
lin follow_through_N = mkN "follow-through" "follow-throughs";
lin follow_up_N = mkN "follow-up" "follow-ups";
lin follower_N = mkN "follower" "followers";
lin following_A = mkA "following";
lin following_N = mkN "following" "followings";
lin folly_N = mkN "folly" "follies";
lin foment_V2 = mkV2 (mkV "foment" "foments" "fomented" "fomented" "fomenting");
lin fomentation_N = mkN "fomentation" "fomentations";
lin fomite_N = mkN "fomite" ;
lin fond_A = mkA "fond" "fonder";
lin fondant_N = mkN "fondant" "fondants";
lin fondle_V2 = mkV2 (mkV "fondle" "fondles" "fondled" "fondled" "fondling");
lin fondler_N = mkN "fondler" ;
lin fondness_N = mkN "fondness" ;
lin fondue_N = mkN "fondue" ;
lin font_N = mkN "font" "fonts";
lin fontanelle_N = mkN "fontanelle" ;
lin foochow_PN = mkPN "Foochow";
lin food_N = mkN "food" "foods";
lin foodless_A = compoundA (mkA "foodless");
lin foodstuff_N = mkN "foodstuff" "foodstuffs";
lin fool_N = mkN "fool" "fools";
lin fool_V = mkV "fool" "fools" "fooled" "fooled" "fooling";
lin fool_V2 = mkV2 (mkV "fool" "fools" "fooled" "fooled" "fooling");
lin foolery_N = mkN "foolery" ;
lin foolhardiness_N = mkN "foolhardiness" ;
lin foolhardy_A = compoundA (mkA "foolhardy");
lin foolish_A = compoundA (mkA "foolish");
lin foolishness_N = mkN "foolishness" ;
lin foolproof_A = compoundA (mkA "foolproof");
lin foolscap_N = mkN "foolscap" ;
lin foot_N = mkN "foot" "feet";
lin foot_V = mkV "foot" "foots" "footed" "footed" "footing";
lin foot_V2 = mkV2 (mkV "foot" "foots" "footed" "footed" "footing");
lin foot_and_mouth_A = compoundA (mkA "foot-and-mouth");
lin foot_and_mouth_N = mkN "foot-and-mouth" ;
lin foot_bath_N = mkN "foot-bath" "foot-baths";
lin foot_pound_N = mkN "foot-pound" "foot-pounds";
lin foot_race_N = mkN "foot-race" "foot-races";
lin foot_rot_N = mkN "foot-rot" ;
lin footage_N = mkN "footage" ;
lin football_N = mkN "football" "footballs";
lin footballer_N = mkN "footballer" "footballers";
lin footbath_N = mkN "footbath" ;
lin footboard_N = mkN "footboard" "footboards";
lin footbridge_N = mkN "footbridge" "footbridges";
lin footcandle_N = mkN "footcandle" ;
lin footedness_N = mkN "footedness" ;
lin footer_N = mkN "footer" "footers";
lin footfall_N = mkN "footfall" "footfalls";
lin footfault_N = mkN "footfault" "footfaults";
lin foothill_N = mkN "foothill" ;
lin foothold_N = mkN "foothold" "footholds";
lin footing_N = mkN "footing" "IRREG";
lin footle_V = mkV "footle" "footles" "footled" "footled" "footling";
lin footle_V2 = mkV2 (mkV "footle" "footles" "footled" "footled" "footling");
lin footless_A = mkA "footless" ;
lin footlights_N = mkN "footlights" ;
lin footlocker_N = mkN "footlocker" ;
lin footloose_A = compoundA (mkA "footloose");
lin footman_N = mkN masculine (mkN "footman" "footmen");
lin footmark_N = mkN "footmark" "footmarks";
lin footnote_N = mkN "footnote" "footnotes";
lin footpad_N = mkN "footpad" ;
lin footpath_N = mkN "footpath" "footpaths";
lin footplate_N = mkN "footplate" "footplates";
lin footprint_N = mkN "footprint" "footprints";
lin footrace_N = mkN "footrace" ;
lin footslog_V = mkV "footslog" "footslogs" "footslogged" "footslogged" "footslogging";
lin footslogger_N = mkN "footslogger" "footsloggers";
lin footsore_A = compoundA (mkA "footsore");
lin footstep_N = mkN "footstep" "footsteps";
lin footstool_N = mkN "footstool" "footstools";
lin footsure_A = compoundA (mkA "footsure");
lin footwall_N = mkN "footwall" ;
lin footwear_N = mkN "footwear" ;
lin footwork_N = mkN "footwork" ;
lin fop_N = mkN "fop" "fops";
lin foppish_A = compoundA (mkA "foppish");
lin foppishness_N = mkN "foppishness" ;
lin for_Prep = mkPrep "for";
lin for_example_Adv = mkAdv "for example";
lin for_instance_Adv = mkAdv "for instance";
lin for_starters_Adv = mkAdv "for starters";
lin for_sure_Adv = mkAdv "for sure";
lin forage_N = mkN "forage" ;
lin forage_V = mkV "forage" "forages" "foraged" "foraged" "foraging";
lin forager_N = mkN "forager" ;
lin foraging_N = mkN "foraging" ;
lin foram_N = mkN "foram" ;
lin foramen_N = mkN "foramen" ;
lin foray_N = mkN "foray" "forays";
lin foray_V = mkV "foray" "forays" "forayed" "forayed" "foraying";
lin forbear_N = mkN "forbear" "forbears";
lin forbear_V = mkV "for" IrregEng.bear_V;
lin forbear_V2 = mkV2 (mkV "for" IrregEng.bear_V);
lin forbearance_N = mkN "forbearance" ;
lin forbid_V2 = mkV2 (IrregEng.forbid_V);
lin forbidding_A = compoundA (mkA "forbidding");
lin force_N = mkN "force" "forces";
lin force_V = mkV "force";
lin force_V2 = mkV2 (mkV "force");
lin force_V2V = mkV2V (mkV "force" "forces" "forced" "forced" "forcing") noPrep to_Prep;
lin force_VS = mkVS (mkV "force");
lin force_feed_V2 = mkV2 (mkV "force-" IrregEng.feed_V);
lin force_land_V = mkV "force-land" "force-lands" "force-landed" "force-landed" "force-landing";
lin force_land_V2 = mkV2 (mkV "force-land" "force-lands" "force-landed" "force-landed" "force-landing");
lin force_majeure_N = mkN "force majeure" ;
lin forceful_A = compoundA (mkA "forceful");
lin forcefulness_N = mkN "forcefulness" ;
lin forceless_A = mkA "forceless" ;
lin forcemeat_N = mkN "forcemeat" ;
lin forceps_N = mkN "forceps" ;
lin forcible_A = compoundA (mkA "forcible");
lin forcipate_A = mkA "forcipate" ;
lin ford_N = mkN "ford" "fords";
lin ford_V2 = mkV2 (mkV "ford" "fords" "forded" "forded" "fording");
lin fordable_A = compoundA (mkA "fordable");
lin fore_A = compoundA (mkA "fore");
lin fore_Adv = mkAdv "fore";
lin fore_N = mkN "fore" ;
lin forearm_N = mkN "forearm" "forearms";
lin forearm_V2 = mkV2 (mkV "forearm" "forearms" "forearmed" "forearmed" "forearming");
lin forebear_N = mkN "forebear" ;
lin forebode_V2 = mkV2 (mkV "forebode" "forebodes" "foreboded" "foreboded" "foreboding");
lin foreboding_N = mkN "foreboding" "forebodings";
lin forebrain_N = mkN "forebrain" ;
lin forecast_N = mkN "forecast" "forecasts";
lin forecast_V = mkV "forecast" "forecasts" "forecasted" "forecasted" "forecasting";
lin forecast_V2 = mkV2 (mkV "forecast" "forecasts" "forecasted" "forecasted" "forecasting");
lin forecast_VS = mkVS (mkV "forecast" "forecasts" "forecasted" "forecasted" "forecasting");
lin forecaster_N = mkN "forecaster" "forecasters";
lin forecastle_N = mkN "forecastle" "forecastles";
lin foreclose_V = mkV "foreclose" "forecloses" "foreclosed" "foreclosed" "foreclosing";
lin foreclose_V2 = mkV2 (mkV "foreclose" "forecloses" "foreclosed" "foreclosed" "foreclosing");
lin foreclosure_N = mkN "foreclosure" "foreclosures";
lin forecourt_N = mkN "forecourt" "forecourts";
lin foredeck_N = mkN "foredeck" ;
lin foredoom_V2 = mkV2 (mkV "foredoom" "foredooms" "foredoomed" "foredoomed" "foredooming");
lin forefather_N = mkN "forefather" "forefathers";
lin forefinger_N = mkN "forefinger" "forefingers";
lin forefoot_N = mkN "forefoot" "forefeet";
lin forefront_N = mkN "forefront" "forefronts";
lin foregather_V = mkV "foregather" "foregathers" "foregathered" "foregathered" "foregathering";
lin forego_V = mkV "fore" IrregEng.go_V;
lin forego_V2 = mkV2 (mkV "fore" IrregEng.go_V);
lin foreground_N = mkN "foreground" "foregrounds";
lin forehand_A = compoundA (mkA "forehand");
lin forehand_N = mkN "forehand" ;
lin forehanded_A = mkA "forehanded" ;
lin forehead_N = mkN "forehead" "foreheads";
lin foreign_A = compoundA (mkA "foreign");
lin foreigner_N = mkN "foreigner" "foreigners";
lin foreignness_N = mkN "foreignness" ;
lin foreknow_V = mkV "fore" IrregEng.know_V;
lin foreknow_V2 = mkV2 (mkV "fore" IrregEng.know_V);
lin foreknowledge_N = mkN "foreknowledge" ;
lin foreland_N = mkN "foreland" "forelands";
lin foreleg_N = mkN "foreleg" "forelegs";
lin forelimb_N = mkN "forelimb" ;
lin forelock_N = mkN "forelock" "forelocks";
lin foreman_N = mkN masculine (mkN "foreman" "foremen");
lin foremanship_N = mkN "foremanship" ;
lin foremast_N = mkN "foremast" "foremasts";
lin foremost_A = compoundA (mkA "foremost");
lin foremost_Adv = mkAdv "foremost";
lin foremother_N = mkN "foremother" ;
lin forename_N = mkN "forename" "forenames";
lin forenoon_N = mkN "forenoon" "forenoons";
lin forensic_A = compoundA (mkA "forensic");
lin forensics_N = mkN "forensics" ;
lin foreordain_V2 = mkV2 (mkV "foreordain" "foreordains" "foreordained" "foreordained" "foreordaining");
lin forepaw_N = mkN "forepaw" ;
lin foreperson_N = mkN "foreperson" ;
lin foreplay_N = mkN "foreplay" ;
lin forequarter_N = mkN "forequarter" ;
lin forerunner_N = mkN "forerunner" "forerunners";
lin foresail_N = mkN "foresail" "foresails";
lin foresee_V2 = mkV2 (mkV "fore" IrregEng.see_V);
lin foreseeable_A = compoundA (mkA "foreseeable");
lin foreshadow_V2 = mkV2 (mkV "foreshadow" "foreshadows" "foreshadowed" "foreshadowed" "foreshadowing");
lin foreshank_N = mkN "foreshank" ;
lin foreshock_N = mkN "foreshock" ;
lin foreshore_N = mkN "foreshore" "foreshores";
lin foreshorten_V2 = mkV2 (mkV "foreshorten" "foreshortens" "foreshortened" "foreshortened" "foreshortening");
lin foresight_N = mkN "foresight" ;
lin foreskin_N = mkN "foreskin" "foreskins";
lin forest_N = mkN "forest" "forests";
lin forestall_V2 = mkV2 (mkV "forestall" "forestalls" "forestalled" "forestalled" "forestalling");
lin forestay_N = mkN "forestay" ;
lin forested_A = mkA "forested" ;
lin forester_N = mkN "forester" "foresters";
lin forestiera_N = mkN "forestiera" ;
lin forestry_N = mkN "forestry" ;
lin foreswear_V2 = mkV2 (mkV "fore" IrregEng.swear_V);
lin foretaste_N = mkN "foretaste" "foretastes";
lin foretell_V2 = mkV2 (mkV "fore" IrregEng.tell_V);
lin forethought_N = mkN "forethought" ;
lin forethoughtful_A = mkA "forethoughtful" ;
lin foretop_N = mkN "foretop" "foretops";
lin forever_Adv = mkAdv "forever";
lin forewarn_V2 = mkV2 (mkV "forewarn" "forewarns" "forewarned" "forewarned" "forewarning");
lin forewarning_N = mkN "forewarning" ;
lin forewing_N = mkN "forewing" ;
lin forewoman_N = mkN feminine (mkN "forewoman" "forewomen");
lin foreword_N = mkN "foreword" "forewords";
lin forfar_PN = mkPN "Forfar";
lin forfeit_N = mkN "forfeit" "forfeits";
lin forfeit_V2 = mkV2 (mkV "forfeit" "forfeits" "forfeited" "forfeited" "forfeiting");
lin forfeiture_N = mkN "forfeiture" ;
lin forgather_V = mkV "forgather" "forgathers" "forgathered" "forgathered" "forgathering";
lin forge_N = mkN "forge" "forges";
lin forge_V = mkV "forge" "forges" "forged" "forged" "forging";
lin forge_V2 = mkV2 (mkV "forge" "forges" "forged" "forged" "forging");
lin forger_N = mkN "forger" "forgers";
lin forgery_N = mkN "forgery" "forgeries";
lin forget_V = IrregEng.forget_V;
lin forget_V2 = mkV2 (IrregEng.forget_V);
lin forget_VS = mkVS (IrregEng.forget_V);
lin forget_me_not_N = mkN "forget-me-not" "forget-me-nots";
lin forgetful_A = compoundA (mkA "forgetful");
lin forgetfulness_N = mkN "forgetfulness" ;
lin forgettable_A = mkA "forgettable" ;
lin forging_N = mkN "forging" "forgings";
lin forgivable_A = compoundA (mkA "forgivable");
lin forgive_V = IrregEng.forgive_V;
lin forgive_V2 = mkV2 (IrregEng.forgive_V);
lin forgiveness_N = mkN "forgiveness" ;
lin forgivingly_Adv = mkAdv "forgivingly" ;
lin forgivingness_N = mkN "forgivingness" ;
lin forgo_V2 = mkV2 (mkV "for" IrregEng.go_V);
lin forint_N = mkN "forint" ;
lin fork_N = mkN "fork" "forks";
lin fork_V = mkV "fork" "forks" "forked" "forked" "forking";
lin fork_V2 = mkV2 (mkV "fork" "forks" "forked" "forked" "forking");
lin forklift_N = mkN "forklift" ;
lin forli_PN = mkPN "Forli";
lin forlorn_A = compoundA (mkA "forlorn");
lin forlornness_N = mkN "forlornness" ;
lin form_N = mkN "form" "forms";
lin form_V = mkV "form" "forms" "formed" "formed" "forming";
lin form_V2 = mkV2 (mkV "form" "forms" "formed" "formed" "forming");
lin formal_A = compoundA (mkA "formal");
lin formaldehyde_N = mkN "formaldehyde" ;
lin formalin_N = mkN "formalin" ;
lin formalism_N = mkN "formalism" ;
lin formalistic_A = mkA "formalistic" ;
lin formality_N = mkN "formality" "formalities";
lin formalization_N = mkN "formalization" ;
lin formalize_V2 = mkV2 (mkV "formalize" "formalizes" "formalized" "formalized" "formalizing");
lin formalwear_N = mkN "formalwear" ;
lin format_N = mkN "format" "formats";
lin formation_N = mkN "formation" "formations";
lin formative_A = compoundA (mkA "formative");
lin formative_N = mkN "formative" ;
lin formby_PN = mkPN "Formby";
lin former_A = compoundA (mkA "former");
lin former_N = mkN "former" ;
lin formic_A = compoundA (mkA "formic");
lin formica_N = mkN "formica" ;
lin formication_N = mkN "formication" ;
lin formidability_N = mkN "formidability" ;
lin formidable_A = compoundA (mkA "formidable");
lin formless_A = compoundA (mkA "formless");
lin formosa_PN = mkPN "Formosa";
lin formula_N = mkN "formula" "formulas";
lin formulaic_A = mkA "formulaic" ;
lin formulary_A = mkA "formulary" ;
lin formulary_N = mkN "formulary" ;
lin formulate_V2 = mkV2 (mkV "formulate" "formulates" "formulated" "formulated" "formulating");
lin formulation_N = mkN "formulation" "formulations";
lin fornicate_V = mkV "fornicate" "fornicates" "fornicated" "fornicated" "fornicating";
lin fornication_N = mkN "fornication" ;
lin fornix_N = mkN "fornix" ;
lin forrader_Adv = mkAdv "forrader";
lin forsake_V2 = mkV2 (IrregEng.forsake_V);
lin forsaking_N = mkN "forsaking" ;
lin forsooth_Adv = mkAdv "forsooth";
lin forswear_V2 = mkV2 (mkV "for" IrregEng.swear_V);
lin forsythia_N = mkN "forsythia" ;
lin fort_N = mkN "fort" "forts";
lin fort_lauderdale_PN = mkPN "Fort lauderdale";
lin fort_william_PN = mkPN "Fort william";
lin fort_worth_PN = mkPN "Fort worth";
lin fortaleza_PN = mkPN "Fortaleza";
lin forte_A = compoundA (mkA "forte");
lin forte_Adv = mkAdv "forte";
lin forte_N = mkN "forte" "fortes";
lin fortemente_A = mkA "fortemente" ;
lin forth_Adv = mkAdv "forth";
lin forthcoming_A = compoundA (mkA "forthcoming");
lin forthright_A = compoundA (mkA "forthright");
lin forthwith_Adv = mkAdv "forthwith";
lin fortification_N = mkN "fortification" "fortifications";
lin fortify_V2 = mkV2 (mkV "fortify" "fortifies" "fortified" "fortified" "fortifying");
lin fortissimo_A = compoundA (mkA "fortissimo");
lin fortissimo_Adv = mkAdv "fortissimo";
lin fortitude_N = mkN "fortitude" ;
lin fortnight_N = mkN "fortnight" "fortnights";
lin fortnightly_A = compoundA (mkA "fortnightly");
lin fortnightly_Adv = mkAdv "fortnightly";
lin fortress_N = mkN "fortress" "fortresses";
lin fortuitous_A = compoundA (mkA "fortuitous");
lin fortuitousness_N = mkN "fortuitousness" ;
lin fortunate_A = compoundA (mkA "fortunate");
lin fortune_N = mkN "fortune" "fortunes";
lin fortuneteller_N = mkN "fortuneteller" ;
lin fortunetelling_N = mkN "fortunetelling" ;
lin forty_A = compoundA (mkA "forty");
lin forty_N = mkN "forty" "forties";
lin fortyish_A = compoundA (mkA "fortyish");
lin forum_N = mkN "forum" "forums";
lin forward_A = compoundA (mkA "forward");
lin forward_Adv = mkAdv "forward";
lin forward_N = mkN "forward" "forwards";
lin forward_V2 = mkV2 (mkV "forward" "forwards" "forwarded" "forwarded" "forwarding");
lin forwarding_N = mkN "forwarding" ;
lin forwardness_N = mkN "forwardness" ;
lin forwards_Adv = mkAdv "forwards";
lin foryml_N = mkN "foryml" ;
lin fossa_N = mkN "fossa" ;
lin fosse_N = mkN "fosse" "fosses";
lin fossil_A = mkA "fossil" ;
lin fossil_N = mkN "fossil" "fossils";
lin fossiliferous_A = mkA "fossiliferous" ;
lin fossilization_N = mkN "fossilization" "fossilizations";
lin fossilize_V = mkV "fossilize" "fossilizes" "fossilized" "fossilized" "fossilizing";
lin fossilize_V2 = mkV2 (mkV "fossilize" "fossilizes" "fossilized" "fossilized" "fossilizing");
lin fossorial_A = mkA "fossorial" ;
lin foster_A = mkA "foster" ;
lin foster_V2 = mkV2 (mkV "foster" "fosters" "fostered" "fostered" "fostering");
lin foster_brother_N = mkN "foster-brother" "foster-brothers";
lin foster_child_N = mkN "foster-child" "foster-children";
lin foster_father_N = mkN "foster-father" "foster-fathers";
lin foster_mother_N = mkN "foster-mother" "foster-mothers";
lin foster_parent_N = mkN "foster-parent" "foster-parents";
lin foster_sister_N = mkN "foster-sister" "foster-sisters";
lin fostering_N = mkN "fostering" ;
lin fothergilla_N = mkN "fothergilla" ;
lin foul_A = mkA "foul" "fouler";
lin foul_N = mkN "foul" "fouls";
lin foul_V = mkV "foul" "fouls" "fouled" "fouled" "fouling";
lin foul_V2 = mkV2 (mkV "foul" "fouls" "fouled" "fouled" "fouling");
lin foul_mouthed_A = compoundA (mkA "foul-mouthed");
lin foul_spoken_A = compoundA (mkA "foul-spoken");
lin foulard_N = mkN "foulard" ;
lin foulness_N = mkN "foulness" ;
lin found_N = mkN "found" ;
lin found_V2 = mkV2 (mkV "found" "founds" "founded" "founded" "founding");
lin foundation_N = mkN "foundation" "foundations";
lin foundation_stone_N = mkN "foundation-stone" "foundation-stones";
lin founder_N = mkN "founder" "founders";
lin founder_V = mkV "founder" "founders" "foundered" "foundered" "foundering";
lin founder_V2 = mkV2 (mkV "founder" "founders" "foundered" "foundered" "foundering");
lin foundering_N = mkN "foundering" ;
lin foundling_N = mkN "foundling" "foundlings";
lin foundress_N = mkN "foundress" "foundresses";
lin foundry_N = mkN "foundry" "foundries";
lin fount_N = mkN "fount" "founts";
lin fountain_N = mkN "fountain" "fountains";
lin fountain_head_N = mkN "fountain-head" "fountain-heads";
lin fountain_pen_N = mkN "fountain-pen" "fountain-pens";
lin fountainhead_N = mkN "fountainhead" ;
lin four_in_hand_N = mkN "four-in-hand" "four-in-hands";
lin four_part_A = compoundA (mkA "four-part");
lin four_ply_A = compoundA (mkA "four-ply");
lin four_poster_N = mkN "four-poster" "four-posters";
lin four_pounder_N = mkN "four-pounder" "four-pounders";
lin four_wheeler_N = mkN "four-wheeler" "four-wheelers";
lin fourfold_A = compoundA (mkA "fourfold");
lin fourfold_Adv = mkAdv "fourfold";
lin fourhanded_A = mkA "fourhanded" ;
lin fourpence_N = mkN "fourpence" "fourpences";
lin fourpenny_A = compoundA (mkA "fourpenny");
lin fourscore_A = compoundA (mkA "fourscore");
lin fourscore_N = mkN "fourscore";
lin foursome_N = mkN "foursome" "foursomes";
lin foursquare_A = compoundA (mkA "foursquare");
lin foursquare_Adv = mkAdv "foursquare" ;
lin fovea_N = mkN "fovea" ;
lin fowey_PN = mkPN "Fowey";
lin fowl_N = mkN "fowl" "fowls";
lin fowl_V = mkV "fowl" "fowls" "fowled" "fowled" "fowling";
lin fowl_run_N = mkN "fowl-run" "fowl-runs";
lin fowler_N = mkN "fowler" "fowlers";
lin fowlingpiece_N = mkN "fowlingpiece" "fowlingpieces";
lin fowlpest_N = mkN "fowlpest" ;
lin fox_N = mkN "fox" "foxes";
lin fox_V2 = mkV2 (mkV "fox" "foxes" "foxed" "foxed" "foxing");
lin fox_terrier_N = mkN "fox-terrier" "fox-terriers";
lin foxglove_N = mkN "foxglove" "foxgloves";
lin foxhole_N = mkN "foxhole" "foxholes";
lin foxhound_N = mkN "foxhound" "foxhounds";
lin foxhunt_N = mkN "foxhunt" "foxhunts";
lin foxhunt_V = mkV "foxhunt" "foxhunts" "foxhunted" "foxhunted" "foxhunting";
lin foxhunter_N = mkN "foxhunter" "foxhunters";
lin foxtail_N = mkN "foxtail" ;
lin foxtrot_N = mkN "foxtrot" "foxtrots";
lin foxy_A = mkA "foxy" "foxier";
lin foyer_N = mkN "foyer" "foyers";
lin fr_PN = mkPN "Fr";
lin fracas_N = mkN "fracas" (variants {"fracases"; "fracas"});
lin fractal_N = mkN "fractal" ;
lin fraction_N = mkN "fraction" "fractions";
lin fractional_A = compoundA (mkA "fractional");
lin fractionation_N = mkN "fractionation" ;
lin fractious_A = compoundA (mkA "fractious");
lin fractiousness_N = mkN "fractiousness" ;
lin fracture_N = mkN "fracture" "fractures";
lin fracture_V = mkV "fracture" "fractures" "fractured" "fractured" "fracturing";
lin fracture_V2 = mkV2 (mkV "fracture" "fractures" "fractured" "fractured" "fracturing");
lin fragile_A = compoundA (mkA "fragile");
lin fragility_N = mkN "fragility" ;
lin fragment_N = mkN "fragment" "fragments";
lin fragment_V = mkV "fragment" "fragments" "fragmented" "fragmented" "fragmenting";
lin fragment_V2 = mkV2 (mkV "fragment" "fragments" "fragmented" "fragmented" "fragmenting");
lin fragmental_A = mkA "fragmental" ;
lin fragmentary_A = compoundA (mkA "fragmentary");
lin fragmentation_N = mkN "fragmentation" "fragmentations";
lin fragrance_N = mkN "fragrance" "fragrances";
lin fragrant_A = compoundA (mkA "fragrant");
lin frail_A = mkA "frail" "frailer";
lin frail_N = mkN "frail" ;
lin frailty_N = mkN "frailty" "frailties";
lin fraise_N = mkN "fraise" ;
lin frame_N = mkN "frame" "frames";
lin frame_V = mkV "frame" "frames" "framed" "framed" "framing";
lin frame_V2 = mkV2 (mkV "frame" "frames" "framed" "framed" "framing");
lin frame_up_N = mkN "frame-up" "frame-ups";
lin framer_N = mkN "framer" ;
lin framework_N = mkN "framework" "frameworks";
lin framing_N = mkN "framing" ;
lin frampton_cotterell_PN = mkPN "Frampton cotterell";
lin fran_PN = mkPN "Fran";
lin franc_N = mkN "franc" "francs";
lin france_PN = mkPN "France";
lin frances_PN = mkPN "Frances";
lin franchise_N = mkN "franchise" "franchises";
lin francis_PN = mkPN "Francis";
lin franciscan_A = compoundA (mkA "franciscan");
lin franciscan_N = mkN "franciscan" "franciscans";
lin francium_N = mkN "francium" ;
lin frangible_A = mkA "frangible" ;
lin frangipane_N = mkN "frangipane" ;
lin frangipani_N = mkN "frangipani" ;
lin frank_A = mkA "frank" "franker";
lin frank_N = mkN "frank" "franks";
lin frank_PN = mkPN "Frank";
lin frank_V2 = mkV2 (mkV "frank" "franks" "franked" "franked" "franking");
lin frankfurt_PN = mkPN "Frankfurt";
lin frankfurter_N = mkN "frankfurter" "frankfurters";
lin frankie_PN = mkPN "Frankie";
lin frankincense_N = mkN "frankincense" ;
lin franking_machine_N = mkN "franking-machine" "franking-machines";
lin franklin_N = mkN "franklin" "franklins";
lin frankness_N = mkN "frankness" ;
lin frantic_A = compoundA (mkA "frantic");
lin frantically_Adv = mkAdv "frantically";
lin frappe_N = mkN "frappe" ;
lin fraserburgh_PN = mkPN "Fraserburgh";
lin fraternal_A = compoundA (mkA "fraternal");
lin fraternity_N = mkN "fraternity" "fraternities";
lin fraternization_N = mkN "fraternization" ;
lin fraternize_V = mkV "fraternize" "fraternizes" "fraternized" "fraternized" "fraternizing";
lin fratricide_N = mkN "fratricide" "fratricides";
lin frau_N = mkN "frau" "fraus";
lin fraud_N = mkN "fraud" "frauds";
lin fraudulence_N = mkN "fraudulence" ;
lin fraudulent_A = compoundA (mkA "fraudulent");
lin fraught_A = compoundA (mkA "fraught");
lin fraulein_N = mkN "fräulein" "fräuleins";
lin fraxinella_N = mkN "fraxinella" ;
lin fray_N = mkN "fray" "frays";
lin fray_V = mkV "fray" "frays" "frayed" "frayed" "fraying";
lin fray_V2 = mkV2 (mkV "fray" "frays" "frayed" "frayed" "fraying");
lin frazzle_N = mkN "frazzle" "frazzles";
lin freak_N = mkN "freak" "freaks";
lin freak_V = mkV "freak" "freaks" "freaked" "freaked" "freaking";
lin freak_V2 = mkV2 (mkV "freak" "freaks" "freaked" "freaked" "freaking");
lin freak_out_N = mkN "freak-out" "freak-outs";
lin freakish_A = compoundA (mkA "freakish");
lin freakishness_N = mkN "freakishness" ;
lin freaky_A = mkA "freaky" "freakier";
lin freckle_N = mkN "freckle" "freckles";
lin freckle_V = mkV "freckle" "freckles" "freckled" "freckled" "freckling";
lin freckle_V2 = mkV2 (mkV "freckle" "freckles" "freckled" "freckled" "freckling");
lin freckleton_PN = mkPN "Freckleton";
lin fred_PN = mkPN "Fred";
lin freda_PN = mkPN "Freda";
lin freddie_PN = mkPN "Freddie";
lin freddy_PN = mkPN "Freddy";
lin frederick_PN = mkPN "Frederick";
lin frederiksberg_PN = mkPN "Frederiksberg";
lin free_A = mkA "free" "freer";
lin free_of_A2 = mkA2 (mkA "free" "freer") (mkPrep "of");
lin free_N = mkN "free" ;
lin free_V2 = mkV2 (mkV "free" "frees" "freed" "freed" "freeing");
lin free_V2V = mkV2V (mkV "free") noPrep to_Prep ;
lin free_and_easy_A = compoundA (mkA "free-and-easy");
lin free_for_all_N = mkN "free-for-all" "free-for-alls";
lin free_handed_A = compoundA (mkA "free-handed");
lin free_list_N = mkN "free-list" "free-lists";
lin free_liver_N = mkN "free-liver" "free-livers";
lin free_living_N = mkN "free-living" ;
lin free_range_A = compoundA (mkA "free-range");
lin free_spoken_A = compoundA (mkA "free-spoken");
lin free_standing_A = compoundA (mkA "free-standing");
lin free_thinker_N = mkN "free-thinker" "free-thinkers";
lin free_thinking_A = compoundA (mkA "free-thinking");
lin free_thought_N = mkN "free-thought" ;
lin free_trader_N = mkN "free-trader" "free-traders";
lin freebie_N = mkN "freebie" ;
lin freebooter_N = mkN "freebooter" "freebooters";
lin freeborn_A = compoundA (mkA "freeborn");
lin freedman_N = mkN masculine (mkN "freedman" "freedmen");
lin freedom_N = mkN "freedom" "freedoms";
lin freehand_A = compoundA (mkA "freehand");
lin freehold_N = mkN "freehold" "freeholds";
lin freeholder_N = mkN "freeholder" "freeholders";
lin freelance_A = mkA "freelance" ;
lin freelance_N = mkN "freelance" "freelances";
lin freelance_V = mkV "freelance" "freelances" "freelanced" "freelanced" "freelancing";
lin freelancer_N = mkN "freelancer" ;
lin freeloader_N = mkN "freeloader" ;
lin freemail_N = mkN "freemail" ;
lin freeman_N = mkN masculine (mkN "freeman" "freemen");
lin freemason_N = mkN "freemason" "freemasons";
lin freemasonry_N = mkN "freemasonry" ;
lin freesia_N = mkN "freesia" "freesias";
lin freestanding_A = mkA "freestanding" ;
lin freestone_N = mkN "freestone" ;
lin freestyle_N = mkN "freestyle" ;
lin freetail_N = mkN "freetail" ;
lin freeware_N = mkN "freeware" ;
lin freeway_N = mkN "freeway" "freeways";
lin freewheel_N = mkN "freewheel" ;
lin freewheel_V = mkV "freewheel" "freewheels" "freewheeled" "freewheeled" "freewheeling";
lin freewill_A = compoundA (mkA "freewill");
lin freeze_N = mkN "freeze" "freezes";
lin freeze_V = IrregEng.freeze_V;
lin freeze_V2 = mkV2 (IrregEng.freeze_V);
lin freezer_N = mkN "freezer" "freezers";
lin freezing_mixture_N = mkN "freezing-mixture" "freezing-mixtures";
lin freezing_point_N = mkN "freezing-point" "freezing-points";
lin freiburg_PN = mkPN "Freiburg";
lin freight_N = mkN "freight" ;
lin freight_V2 = mkV2 (mkV "freight" "freights" "freighted" "freighted" "freighting");
lin freight_train_N = mkN "freight-train" "freight-trains";
lin freighter_N = mkN "freighter" "freighters";
lin freightliner_N = mkN "freightliner" "freightliners";
lin french_A = compoundA (mkA "French");
lin french_N = mkN "french" ;
lin frenchman_N = mkN masculine (mkN "frenchman" "frenchmen");
lin frenchwoman_N = mkN feminine (mkN "frenchwoman" "frenchwomen");
lin frenetic_A = compoundA (mkA "frenetic");
lin frenzied_A = compoundA (mkA "frenzied");
lin frenzy_N = mkN "frenzy" ;
lin frequency_N = mkN "frequency" "frequencies";
lin frequent_A = compoundA (mkA "frequent");
lin frequent_V2 = mkV2 (mkV "frequent" "frequents" "frequented" "frequented" "frequenting");
lin frequentative_N = mkN "frequentative" ;
lin fresco_N = mkN "fresco" "frescos";
lin fresco_V2 = mkV2 (mkV "fresco" "frescos" "frescoed" "frescoed" "frescoing");
lin fresh_A = mkA "fresh" "fresher";
lin fresh_Adv = mkAdv "fresh";
lin freshen_V = mkV "freshen" "freshens" "freshened" "freshened" "freshening";
lin freshen_V2 = mkV2 (mkV "freshen" "freshens" "freshened" "freshened" "freshening");
lin freshener_N = mkN "freshener" ;
lin fresher_N = mkN "fresher" "freshers";
lin freshet_N = mkN "freshet" ;
lin freshman_A = mkA "freshman" ;
lin freshman_N = mkN masculine (mkN "freshman" "freshmen");
lin freshness_N = mkN "freshness" ;
lin freshwater_A = compoundA (mkA "freshwater");
lin freshwater_PN = mkPN "Freshwater";
lin fret_N = mkN "fret" "frets";
lin fret_V = mkV "fret" "frets" "fretted" "fretted" "fretting";
lin fret_V2 = mkV2 (mkV "fret" "frets" "fretted" "fretted" "fretting");
lin fret_VS = mkVS (mkV "fret" "frets" "fretted" "fretted" "fretting");
lin fretful_A = compoundA (mkA "fretful");
lin fretsaw_N = mkN "fretsaw" "fretsaws";
lin fretwork_N = mkN "fretwork" ;
lin freudian_A = compoundA (mkA "freudian");
lin fri_PN = mkPN "Fri";
lin friability_N = mkN "friability" ;
lin friable_A = compoundA (mkA "friable");
lin friar_N = mkN "friar" "friars";
lin friary_N = mkN "friary" ;
lin fricandeau_N = mkN "fricandeau" ;
lin fricassee_N = mkN "fricassee" "fricassees";
lin fricassee_V2 = mkV2 (mkV "fricas" IrregEng.see_V);
lin fricative_A = compoundA (mkA "fricative");
lin fricative_N = mkN "fricative" "fricatives";
lin friction_N = mkN "friction" "frictions";
lin frictional_A = mkA "frictional" ;
lin frictionless_A = mkA "frictionless" ;
lin friday_N = mkN "Friday" "Fridays";
lin friday_PN = mkPN "Friday";
lin fridge_N = mkN "fridge" "fridges";
lin friedcake_N = mkN "friedcake" ;
lin friend_N = mkN "friend" "friends";
lin friendless_A = compoundA (mkA "friendless");
lin friendlessness_N = mkN "friendlessness" ;
lin friendliness_N = mkN "friendliness" ;
lin friendly_A = mkA "friendly" "friendlier";
lin friendly_N = mkN "friendly" ;
lin friendship_N = mkN "friendship" "friendships";
lin frier_N = mkN "frier" "friers";
lin frieze_N = mkN "frieze" "friezes";
lin frigate_N = mkN "frigate" "frigates";
lin fright_N = mkN "fright" "frights";
lin fright_V2 = mkV2 (mkV "fright" "frights" "frighted" "frighted" "frighting");
lin frighten_V2 = mkV2 (mkV "frighten" "frightens" "frightened" "frightened" "frightening");
lin frightening_A = compoundA (mkA "frightening");
lin frightful_A = compoundA (mkA "frightful");
lin frightfulness_N = mkN "frightfulness" ;
lin frigid_A = compoundA (mkA "frigid");
lin frigidity_N = mkN "frigidity" ;
lin frigorific_A = mkA "frigorific" ;
lin frijole_N = mkN "frijole" ;
lin frill_N = mkN "frill" "frills";
lin frilled_A = compoundA (mkA "frilled");
lin frilly_A = mkA "frilly" "frillier";
lin fringe_N = mkN "fringe" "fringes";
lin fringe_V2 = mkV2 (mkV "fringe" "fringes" "fringed" "fringed" "fringing");
lin fringepod_N = mkN "fringepod" ;
lin fringy_A = mkA "fringy" ;
lin frinton_PN = mkPN "Frinton";
lin frippery_N = mkN "frippery" "fripperies";
lin frisk_N = mkN "frisk" ;
lin frisk_V = mkV "frisk" "frisks" "frisked" "frisked" "frisking";
lin frisk_V2 = mkV2 (mkV "frisk" "frisks" "frisked" "frisked" "frisking");
lin friskiness_N = mkN "friskiness" ;
lin frisky_A = mkA "frisky" "friskier";
lin frisson_N = mkN "frisson" "frissons";
lin fritillary_N = mkN "fritillary" ;
lin frittata_N = mkN "frittata" ;
lin fritter_N = mkN "fritter" "fritters";
lin fritter_V2 = mkV2 (mkV "fritter" "fritters" "frittered" "frittered" "frittering");
lin frivol_V = mkV "frivol" "frivols" "frivolled" "frivolled" "frivolling";
lin frivol_V2 = mkV2 (mkV "frivol" "frivols" "frivolled" "frivolled" "frivolling");
lin frivolity_N = mkN "frivolity" "frivolities";
lin frivolous_A = compoundA (mkA "frivolous");
lin frizz_N = mkN "frizz" ;
lin frizz_V2 = mkV2 (mkV "frizz" "frizzes" "frizzed" "frizzed" "frizzing");
lin frizzle_V = mkV "frizzle" "frizzles" "frizzled" "frizzled" "frizzling";
lin frizzle_V2 = mkV2 (mkV "frizzle" "frizzles" "frizzled" "frizzled" "frizzling");
lin frizzy_A = mkA "frizzy" "frizzier";
lin fro_Adv = mkAdv "fro";
lin frock_N = mkN "frock" "frocks";
lin frock_coat_N = mkN "frock-coat" "frock-coats";
lin frodsham_PN = mkPN "Frodsham";
lin frog_N = mkN "frog" "frogs";
lin frogbit_N = mkN "frogbit" ;
lin frogfish_N = mkN "frogfish" ;
lin froghopper_N = mkN "froghopper" ;
lin frogman_N = mkN masculine (mkN "frogman" "frogmen");
lin frogmarch_V2 = mkV2 (mkV "frogmarch" "frogmarches" "frogmarched" "frogmarched" "frogmarching");
lin frogmouth_N = mkN "frogmouth" ;
lin frolic_N = mkN "frolic" "frolics";
lin frolic_V = mkV "frolic" "frolics" "frolicked" "frolicked" "frolicking";
lin frolicsome_A = compoundA (mkA "frolicsome");
lin from_Prep = mkPrep "from";
lin from_home_Adv = mkAdv "from home";
lin frome_PN = mkPN "Frome";
lin frond_N = mkN "frond" "fronds";
lin front_N = mkN "front" "fronts";
lin front_V = mkV "front" "fronts" "fronted" "fronted" "fronting";
lin front_V2 = mkV2 (mkV "front" "fronts" "fronted" "fronted" "fronting");
lin front_bench_N = mkN "front-bench" "front-benches";
lin front_bencher_N = mkN "front-bencher" "front-benchers";
lin frontage_N = mkN "frontage" "frontages";
lin frontal_A = compoundA (mkA "frontal");
lin frontal_N = mkN "frontal" ;
lin frontbencher_N = mkN "frontbencher" ;
lin frontier_N = mkN "frontier" "frontiers";
lin frontiersman_N = mkN masculine (mkN "frontiersman" "frontiersmen");
lin frontierswoman_N = mkN feminine (mkN "frontierswoman");
lin frontispiece_N = mkN "frontispiece" "frontispieces";
lin frontlet_N = mkN "frontlet" ;
lin frore_A = mkA "frore" ;
lin frost_N = mkN "frost" "frosts";
lin frost_V = mkV "frost" "frosts" "frosted" "frosted" "frosting";
lin frost_V2 = mkV2 (mkV "frost" "frosts" "frosted" "frosted" "frosting");
lin frost_bound_A = compoundA (mkA "frost-bound");
lin frostbite_N = mkN "frostbite" ;
lin frostbitten_A = compoundA (mkA "frostbitten");
lin frostiness_N = mkN "frostiness" ;
lin frosting_N = mkN "frosting" ;
lin frostweed_N = mkN "frostweed" ;
lin frosty_A = mkA "frosty" "frostier";
lin froth_N = mkN "froth" ;
lin froth_V = mkV "froth" "froths" "frothed" "frothed" "frothing";
lin frothiness_N = mkN "frothiness" ;
lin frothy_A = mkA "frothy" "frothier";
lin frottage_N = mkN "frottage" ;
lin frotteur_N = mkN "frotteur" ;
lin froward_A = compoundA (mkA "froward");
lin frown_N = mkN "frown" "frowns";
lin frown_V = mkV "frown" "frowns" "frowned" "frowned" "frowning";
lin frowningly_Adv = mkAdv "frowningly";
lin frowsty_A = compoundA (mkA "frowsty");
lin frowsy_A = mkA "frowsy" ;
lin frowzy_A = compoundA (mkA "frowzy");
lin frs_N = mkN "frs" ;
lin fructification_N = mkN "fructification" ;
lin fructify_V = mkV "fructify" "fructifies" "fructified" "fructified" "fructifying";
lin fructify_V2 = mkV2 (mkV "fructify" "fructifies" "fructified" "fructified" "fructifying");
lin fructose_N = mkN "fructose" ;
lin fructosuria_N = mkN "fructosuria" ;
lin frugal_A = compoundA (mkA "frugal");
lin frugality_N = mkN "frugality" "frugalities";
lin fruit_N = mkN "fruit" "fruits";
lin fruit_V = mkV "fruit" "fruits" "fruited" "fruited" "fruiting";
lin fruit_fly_N = mkN "fruit-fly" "fruit-flies";
lin fruitage_N = mkN "fruitage" ;
lin fruitcake_N = mkN "fruitcake" "fruitcakes";
lin fruiterer_N = mkN "fruiterer" "fruiterers";
lin fruitful_A = compoundA (mkA "fruitful");
lin fruitfulness_N = mkN "fruitfulness" ;
lin fruition_N = mkN "fruition" ;
lin fruitless_A = compoundA (mkA "fruitless");
lin fruitlessness_N = mkN "fruitlessness" ;
lin fruitlet_N = mkN "fruitlet" ;
lin fruitwood_N = mkN "fruitwood" ;
lin fruity_A = mkA "fruity" "fruitier";
lin frumenty_N = mkN "frumenty" ;
lin frump_N = mkN "frump" "frumps";
lin frumpish_A = compoundA (mkA "frumpish");
lin frumpy_A = mkA "frumpy" "frumpier";
lin frustrate_V2 = mkV2 (mkV "frustrate" "frustrates" "frustrated" "frustrated" "frustrating");
lin frustrating_A = mkA "frustrating" ;
lin frustration_N = mkN "frustration" "frustrations";
lin frustum_N = mkN "frustum" ;
lin fry_N = mkN "fry" "fry";
lin fry_V = mkV "fry" "fries" "fried" "fried" "frying";
lin fry_V2 = mkV2 (mkV "fry" "fries" "fried" "fried" "frying");
lin fry_pan_N = mkN "fry-pan" "fry-pans";
lin fryer_N = mkN "fryer" "fryers";
lin frying_N = mkN "frying" ;
lin frying_pan_N = mkN "frying-pan" "frying-pans";
lin ft_PN = mkPN "FT";
lin fuchsia_N = mkN "fuchsia" "fuchsias";
lin fuck_N = mkN "fuck" ;
lin fuck_V = mkV "fuck" "fucks" "fucked" "fucked" "fucking";
lin fuck_V2 = mkV2 (mkV "fuck" "fucks" "fucked" "fucked" "fucking");
lin fuck_all_N = mkN "fuck-all" ;
lin fucker_N = mkN "fucker" "fuckers";
lin fucking_Adv = mkAdv "fucking" ;
lin fucoid_N = mkN "fucoid" ;
lin fucus_N = mkN "fucus" ;
lin fuddle_V2 = mkV2 (mkV "fuddle" "fuddles" "fuddled" "fuddled" "fuddling");
lin fuddy_duddy_N = mkN "fuddy-duddy" "fuddy-duddies";
lin fudge_N = mkN "fudge" "fudges";
lin fuel_N = mkN "fuel" "fuels";
lin fuel_V = variants {mkV "fuel" "fuels" "fueled" "fueled" "fueling";   -- US
                       mkV "fuel" "fuels" "fuelled" "fuelled" "fuelling";
                      };
lin fuel_V2 = mkV2 (variants {mkV "fuel" "fuels" "fueled" "fueled" "fueling";   -- US
                              mkV "fuel" "fuels" "fuelled" "fuelled" "fuelling";
                             });
lin fueling_N = mkN "fueling" ;
lin fug_N = mkN "fug" "fugs";
lin fugacity_N = mkN "fugacity" ;
lin fugal_A = mkA "fugal" ;
lin fuggy_A = mkA "fuggy" "fuggier";
lin fugitive_A = compoundA (mkA "fugitive");
lin fugitive_N = mkN "fugitive" "fugitives";
lin fugleman_N = mkN masculine (mkN "fugleman");
lin fugly_A = mkA "fugly" ;
lin fugu_N = mkN "fugu" ;
lin fugue_N = mkN "fugue" "fugues";
lin fuhrer_N = mkN "führer" "führers";
lin fuji_N = mkN "fuji" ;
lin fulcrum_N = mkN "fulcrum" "fulcrums";
lin fulfil_V2 = mkV2 (mkV "fulfil" "fulfils" "fulfilled" "fulfilled" "fulfilling");
lin fulfill_V2 = mkV2 (mkV "fulfill");
lin fulfillment_N = mkN "fulfillment" ;
lin fulfilment_N = mkN "fulfilment" "fulfilments";
lin fulgurating_A = mkA "fulgurating" ;
lin full_A = mkA "full" "fuller";
lin full_blooded_A = compoundA (mkA "full-blooded");
lin full_blown_A = compoundA (mkA "full-blown");
lin full_dress_A = compoundA (mkA "full-dress");
lin full_fashioned_A = compoundA (mkA "full-fashioned");
lin full_fledged_A = compoundA (mkA "full-fledged");
lin full_grown_A = compoundA (mkA "full-grown");
lin full_length_A = compoundA (mkA "full-length");
lin full_page_A = compoundA (mkA "full-page");
lin full_scale_A = compoundA (mkA "full-scale");
lin full_time_A = compoundA (mkA "full-time");
lin full_time_Adv = mkAdv "full-time";
lin fullback_N = mkN "fullback" "fullbacks";
lin fuller_N = mkN "fuller" "fullers";
lin fullerene_N = mkN "fullerene" ;
lin fullness_N = mkN "fullness" ;
lin fully_fashioned_A = compoundA (mkA "fully-fashioned");
lin fully_fledged_A = compoundA (mkA "fully-fledged");
lin fully_grown_A = compoundA (mkA "fully-grown");
lin fulmar_N = mkN "fulmar" "fulmars";
lin fulminant_A = mkA "fulminant" ;
lin fulminate_N = mkN "fulminate" ;
lin fulminate_V = mkV "fulminate" "fulminates" "fulminated" "fulminated" "fulminating";
lin fulmination_N = mkN "fulmination" "fulminations";
lin fulsome_A = compoundA (mkA "fulsome");
lin fulsomeness_N = mkN "fulsomeness" ;
lin fumble_N = mkN "fumble" ;
lin fumble_V = mkV "fumble" "fumbles" "fumbled" "fumbled" "fumbling";
lin fumble_V2 = mkV2 (mkV "fumble" "fumbles" "fumbled" "fumbled" "fumbling");
lin fumbler_N = mkN "fumbler" "fumblers";
lin fume_N = mkN "fume" "fumes";
lin fume_V = mkV "fume" "fumes" "fumed" "fumed" "fuming";
lin fume_V2 = mkV2 (mkV "fume" "fumes" "fumed" "fumed" "fuming");
lin fume_VS = mkVS (mkV "fume" "fumes" "fumed" "fumed" "fuming");
lin fumewort_N = mkN "fumewort" ;
lin fumigant_N = mkN "fumigant" ;
lin fumigate_V2 = mkV2 (mkV "fumigate" "fumigates" "fumigated" "fumigated" "fumigating");
lin fumigation_N = mkN "fumigation" "fumigations";
lin fumigator_N = mkN "fumigator" ;
lin fumitory_N = mkN "fumitory" ;
lin fun_N = mkN "fun" ;
lin funambulism_N = mkN "funambulism" ;
lin funambulistMasc_N = mkN masculine (mkN human (mkN "funambulist"));
lin funambulistFem_N = mkN feminine (mkN "funambulist");
lin function_N = mkN "function" "functions";
lin function_V = mkV "function" "functions" "functioned" "functioned" "functioning";
lin functional_A = compoundA (mkA "functional");
lin functionalism_N = mkN "functionalism" ;
lin functionalist_N = mkN "functionalist" "functionalists";
lin functionality_N = mkN "functionality" ;
lin functionary_N = mkN "functionary" "functionaries";
lin fund_N = mkN "fund" "funds";
lin fund_V2 = mkV2 (mkV "fund" "funds" "funded" "funded" "funding");
lin fundamental_A = compoundA (mkA "fundamental");
lin fundamental_N = mkN "fundamental" "fundamentals";
lin fundamentalism_N = mkN "fundamentalism" ;
lin fundamentalist_A = mkA "fundamentalist" ;
lin fundamentalist_N = mkN "fundamentalist" "fundamentalists";
lin fundamentals_N = mkN "fundamentals" ;
lin fundraiser_N = mkN "fundraiser" ;
lin funds_N = mkN "funds" ;
lin fundus_N = mkN "fundus" ;
lin funeral_N = mkN "funeral" "funerals";
lin funerary_A = mkA "funerary" ;
lin funereal_A = compoundA (mkA "funereal");
lin funfair_N = mkN "funfair" "funfairs";
lin fungal_A = mkA "fungal" ;
lin fungible_A = mkA "fungible" ;
lin fungible_N = mkN "fungible" ;
lin fungicidal_A = mkA "fungicidal" ;
lin fungicide_N = mkN "fungicide" "fungicides";
lin fungoid_A = compoundA (mkA "fungoid");
lin fungous_A = compoundA (mkA "fungous");
lin fungus_N = mkN "fungus" "funguses";
lin funicle_N = mkN "funicle" ;
lin funicular_A = mkA "funicular" ;
lin funicular_N = mkN "funicular" "funiculars";
lin funiculitis_N = mkN "funiculitis" ;
lin funiculus_N = mkN "funiculus" ;
lin funk_N = mkN "funk" "funks";
lin funk_V = mkV "funk" "funks" "funked" "funked" "funking";
lin funk_V2 = mkV2 (mkV "funk" "funks" "funked" "funked" "funking");
lin funky_A = mkA "funky" "funkier";
lin funnel_N = mkN "funnel" "funnels";
lin funnel_V = mkV "funnel" "funnels" "funnelled" "funnelled" "funnelling";
lin funnel_V2 = mkV2 (mkV "funnel" "funnels" "funnelled" "funnelled" "funnelling");
lin funniness_N = mkN "funniness" ;
lin funny_A = mkA "funny" "funnier";
lin funny_bone_N = mkN "funny-bone" "funny-bones";
lin funrun_N = mkN "funrun" ;
lin fur_N = mkN "fur" "furs";
lin furan_N = mkN "furan" ;
lin furbelow_N = mkN "furbelow" "furbelows";
lin furbish_V2 = mkV2 (mkV "furbish" "furbishes" "furbished" "furbished" "furbishing");
lin furcation_N = mkN "furcation" ;
lin furcula_N = mkN "furcula" ;
lin furfural_N = mkN "furfural" ;
lin furious_A = compoundA (mkA "furious");
lin furl_V = mkV "furl" "furls" "furled" "furled" "furling";
lin furl_V2 = mkV2 (mkV "furl" "furls" "furled" "furled" "furling");
lin furlike_A = mkA "furlike" ;
lin furlong_N = mkN "furlong" "furlongs";
lin furlough_N = mkN "furlough" "furloughs";
lin furnace_N = mkN "furnace" "furnaces";
lin furnish_V2 = mkV2 (mkV "furnish" "furnishes" "furnished" "furnished" "furnishing");
lin furnishing_N = mkN "furnishing" ;
lin furniture_N = mkN "furniture" ;
lin furore_N = mkN (variants {"furore"; "furor"});
lin furosemide_N = mkN "furosemide" ;
lin furred_A = mkA "furred" ;
lin furrier_N = mkN "furrier" "furriers";
lin furring_N = mkN "furring" ;
lin furrow_N = mkN "furrow" "furrows";
lin furrow_V = mkV "furrow";
lin furrow_V2 = mkV2 (mkV "furrow" "furrows" "furrowed" "furrowed" "furrowing");
lin furry_A = mkA "furry" "furrier";
lin furth_PN = mkPN "Furth";
lin further_A = mkA "further" ;
lin further_AdV = mkAdV "further";
lin further_Adv = mkAdv "further";
lin further_V2 = mkV2 (mkV "further" "furthers" "furthered" "furthered" "furthering");
lin furtherance_N = mkN "furtherance" ;
lin furthermore_Adv = mkAdv "furthermore";
lin furthermost_A = compoundA (mkA "furthermost");
lin furthest_A = compoundA (mkA "furthest");
lin furthest_Adv = mkAdv "furthest";
lin furtive_A = compoundA (mkA "furtive");
lin furtiveness_N = mkN "furtiveness" ;
lin furunculosis_N = mkN "furunculosis" ;
lin fury_N = mkN "fury" "furies";
lin furze_N = mkN "furze" ;
lin fuschia_N = mkN "fuschia" ;
lin fuscous_A = mkA "fuscous" ;
lin fuse_N = mkN "fuse" "fuses";
lin fuse_V = mkV "fuse" "fuses" "fused" "fused" "fusing";
lin fuse_V2 = mkV2 (mkV "fuse" "fuses" "fused" "fused" "fusing");
lin fusee_N = mkN "fusee" ;
lin fuselage_N = mkN "fuselage" "fuselages";
lin fushun_PN = mkPN "Fushun";
lin fusible_A = mkA "fusible" ;
lin fusiform_A = mkA "fusiform" ;
lin fusil_N = mkN "fusil" ;
lin fusilier_N = mkN "fusilier" "fusiliers";
lin fusillade_N = mkN "fusillade" "fusillades";
lin fusion_N = mkN "fusion" "fusions";
lin fuss_N = mkN "fuss" "fusses";
lin fuss_V = mkV "fuss" "fusses" "fussed" "fussed" "fussing";
lin fuss_V2 = mkV2 (mkV "fuss" "fusses" "fussed" "fussed" "fussing");
lin fussiness_N = mkN "fussiness" ;
lin fusspot_N = mkN "fusspot" "fusspots";
lin fussy_A = mkA "fussy" "fussier";
lin fustian_N = mkN "fustian" ;
lin fusty_A = compoundA (mkA "fusty");
lin futile_A = compoundA (mkA "futile");
lin futility_N = mkN "futility" "futilities";
lin futon_N = mkN "futon" ;
lin future_A = compoundA (mkA "future");
lin future_1_N = mkN "future" "futures";
lin future_3_N = mkN "future" "futures";
lin futureless_A = compoundA (mkA "futureless");
lin futurism_N = mkN "futurism" ;
lin futuristMasc_N = mkN masculine (mkN "futurist" "futurists");
lin futuristFem_N = mkN feminine (mkN "futurist" "futurists");
lin futuristic_A = mkA "futuristic" ;
lin futurity_N = mkN "futurity" "futurities";
lin futurology_N = mkN "futurology" ;
lin fuze_N = mkN "fuze" "fuzes";
lin fuzz_N = mkN "fuzz" ;
lin fuzzed_A = mkA "fuzzed" ;
lin fuzzy_A = mkA "fuzzy" "fuzzier";
lin fwd_PN = mkPN "Fwd";
lin g_N = mkN "g" ;
lin g_man_N = mkN "g-man" "g-men";
lin gab_N = mkN "gab" ;
lin gabapentin_N = mkN "gabapentin" ;
lin gabardine_N = mkN "gabardine" ;
lin gabble_N = mkN "gabble" ;
lin gabble_V = mkV "gabble" "gabbles" "gabbled" "gabbled" "gabbling";
lin gabble_V2 = mkV2 (mkV "gabble" "gabbles" "gabbled" "gabbled" "gabbling");
lin gabbro_N = mkN "gabbro" ;
lin gaberdine_N = mkN "gaberdine" ;
lin gable_N = mkN "gable" "gables";
lin gabled_A = compoundA (mkA "gabled");
lin gabon_PN = mkPN "Gabon";
lin gabonese_A = compoundA (mkA "gabonese");
lin gabonese_N = mkN "gabonese" "gabonese";
lin gad_V = mkV "gad" "gads" "gadded" "gadded" "gadding";
lin gadabout_N = mkN "gadabout" "gadabouts";
lin gaddi_N = mkN "gaddi" ;
lin gadfly_N = mkN "gadfly" "gadflies";
lin gadget_N = mkN "gadget" "gadgets";
lin gadgeteer_N = mkN "gadgeteer" ;
lin gadgetry_N = mkN "gadgetry" ;
lin gadoid_N = mkN "gadoid" ;
lin gadolinite_N = mkN "gadolinite" ;
lin gadolinium_N = mkN "gadolinium" ;
lin gael_N = mkN "gael" "gaels";
lin gaelic_A = compoundA (mkA "gaelic");
lin gaelic_N = mkN "gaelic" "gaelics";
lin gaff_N = mkN "gaff" "gaffs";
lin gaffe_N = mkN "gaffe" "gaffes";
lin gaffer_N = mkN "gaffer" "gaffers";
lin gaffsail_N = mkN "gaffsail" ;
lin gag_N = mkN "gag" "gags";
lin gag_V = mkV "gag" "gags" "gagged" "gagged" "gagging";
lin gag_V2 = mkV2 (mkV "gag" "gags" "gagged" "gagged" "gagging");
lin gaga_A = compoundA (mkA "gaga");
lin gage_N = mkN "gage" "gages";
lin gage_V2 = mkV2 (mkV "gage" "gages" "gaged" "gaged" "gaging");
lin gaggle_N = mkN "gaggle" "gaggles";
lin gagman_N = mkN masculine (mkN "gagman" "gagmen");
lin gaiety_N = mkN "gaiety" ;
lin gaillardia_N = mkN "gaillardia" ;
lin gain_N = mkN "gain" "gains";
lin gain_V = mkV "gain" "gains" "gained" "gained" "gaining";
lin gain_V2 = mkV2 (mkV "gain" "gains" "gained" "gained" "gaining");
lin gainer_N = mkN "gainer" ;
lin gainful_A = compoundA (mkA "gainful");
lin gainly_A = mkA "gainly" ;
lin gainsay_V2 = mkV2 (mkV "gain" IrregEng.say_V);
lin gainsborough_N = mkN "gainsborough" "gainsboroughs";
lin gainsborough_PN = mkPN "Gainsborough";
lin gait_N = mkN "gait" "gaits";
lin gaiter_N = mkN "gaiter" "gaiters";
lin gal_N = mkN "gal" "gals";
lin gala_N = mkN "gala" "galas";
lin galactagogue_N = mkN "galactagogue" ;
lin galactic_A = compoundA (mkA "galactic");
lin galactocele_N = mkN "galactocele" ;
lin galactose_N = mkN "galactose" ;
lin galactosemia_N = mkN "galactosemia" ;
lin galactosis_N = mkN "galactosis" ;
lin galago_N = mkN "galago" ;
lin galangal_N = mkN "galangal" ;
lin galantine_N = mkN "galantine" "galantines";
lin galashiels_PN = mkPN "Galashiels";
lin galax_N = mkN "galax" ;
lin galaxy_N = mkN "galaxy" "galaxies";
lin galbanum_N = mkN "galbanum" ;
lin galbulus_N = mkN "galbulus" ;
lin gale_N = mkN "gale" "gales";
lin galea_N = mkN "galea" ;
lin galena_N = mkN "galena" ;
lin galere_N = mkN "galere" ;
lin galingale_N = mkN "galingale" ;
lin gall_N = mkN "gall" "galls";
lin gall_V2 = mkV2 (mkV "gall" "galls" "galled" "galled" "galling");
lin gallamine_N = mkN "gallamine" ;
lin gallant_A = compoundA (mkA "gallant");
lin gallant_N = mkN "gallant" "gallants";
lin gallantry_N = mkN "gallantry" "gallantries";
lin gallbladder_N = mkN "gallbladder" ;
lin galleon_N = mkN "galleon" "galleons";
lin gallery_N = mkN "gallery" "galleries";
lin galley_N = mkN "galley" "galleys";
lin galley_proof_N = mkN "galley-proof" "galley-proofs";
lin galley_slave_N = mkN "galley-slave" "galley-slaves";
lin gallfly_N = mkN "gallfly" ;
lin gallic_A = compoundA (mkA "gallic");
lin gallicism_N = mkN "gallicism" "gallicisms";
lin gallinaceous_A = mkA "gallinaceous" ;
lin gallinule_N = mkN "gallinule" ;
lin gallium_N = mkN "gallium" ;
lin gallivant_V = mkV "gallivant" "gallivants" "gallivanted" "gallivanted" "gallivanting";
lin gallon_N = mkN "gallon" "gallons";
lin gallop_N = mkN "gallop" "gallops";
lin gallop_V = mkV "gallop" "gallops" "galloped" "galloped" "galloping";
lin gallop_V2 = mkV2 (mkV "gallop" "gallops" "galloped" "galloped" "galloping");
lin galloway_PN = mkPN "Galloway";
lin gallows_N = mkN "gallows" ;
lin gallows_bird_N = mkN "gallows-bird" "gallows-birds";
lin gallstone_N = mkN "gallstone" "gallstones";
lin gallup_PN = mkPN "Gallup";
lin galoot_N = mkN "galoot" ;
lin galore_Adv = mkAdv "galore";
lin galosh_N = mkN "galosh" "galoshes";
lin galumph_V = mkV "galumph" "galumphs" "galumphed" "galumphed" "galumphing";
lin galvanic_A = compoundA (mkA "galvanic");
lin galvanism_N = mkN "galvanism" ;
lin galvanization_N = mkN "galvanization" ;
lin galvanize_V2 = mkV2 (mkV "galvanize" "galvanizes" "galvanized" "galvanized" "galvanizing");
lin galvanize_VS = mkVS (mkV "galvanize");
lin galvanizer_N = mkN "galvanizer" ;
lin galvanometer_N = mkN "galvanometer" ;
lin galway_PN = mkPN "Galway";
lin gam_N = mkN "gam" ;
lin gambia_PN = mkPN "Gambia";
lin gambian_A = compoundA (mkA "gambian");
lin gambian_N = mkN "gambian" "gambians";
lin gambist_N = mkN "gambist" ;
lin gambit_N = mkN "gambit" "gambits";
lin gamble_N = mkN "gamble" "gambles";
lin gamble_V = mkV "gamble" "gambles" "gambled" "gambled" "gambling";
lin gamble_V2 = mkV2 (mkV "gamble" "gambles" "gambled" "gambled" "gambling");
lin gambler_N = mkN "gambler" "gamblers";
lin gambling_N = mkN "gambling" ;
lin gambling_den_N = mkN "gambling-den" "gambling-dens";
lin gamboge_N = mkN "gamboge" ;
lin gambol_N = mkN "gambol" "gambols";
lin gambol_V = mkV "gambol" "gambols" "gambolled" "gambolled" "gambolling";
lin gambrel_N = mkN "gambrel" ;
lin game_A = compoundA (mkA "game");
lin game_N = mkN "game" "games";
lin game_V = mkV "game" "games" "gamed" "gamed" "gaming";
lin game_V2 = mkV2 (mkV "game" "games" "gamed" "gamed" "gaming");
lin game_bag_N = mkN "game-bag" "game-bags";
lin game_bird_N = mkN "game-bird" "game-birds";
lin game_licence_N = mkN "game-licence" "game-licences";
lin gamebag_N = mkN "gamebag" ;
lin gamecock_N = mkN "gamecock" "gamecocks";
lin gamekeeper_N = mkN "gamekeeper" "gamekeepers";
lin gamelan_N = mkN "gamelan" ;
lin games_master_N = mkN "games-master" "games-masters";
lin games_mistress_N = mkN "games-mistress" "games-mistresses";
lin gamesmanship_N = mkN "gamesmanship" ;
lin gametangium_N = mkN "gametangium" ;
lin gamete_N = mkN "gamete" ;
lin gametocyte_N = mkN "gametocyte" ;
lin gametoecium_N = mkN "gametoecium" ;
lin gametogenesis_N = mkN "gametogenesis" ;
lin gametophore_N = mkN "gametophore" ;
lin gametophyte_N = mkN "gametophyte" ;
lin gamey_A = mkA "gamey" ;
lin gamine_N = mkN "gamine" ;
lin gaminess_N = mkN "gaminess" ;
lin gaming_house_N = mkN "gaming-house" "gaming-houses";
lin gaming_table_N = mkN "gaming-table" "gaming-tables";
lin gamma_N = mkN "gamma" "gammas";
lin gammon_N = mkN "gammon" "gammons";
lin gammopathy_N = mkN "gammopathy" ;
lin gammy_A = compoundA (mkA "gammy");
lin gamopetalous_A = mkA "gamopetalous" ;
lin gamp_N = mkN "gamp" "gamps";
lin gamut_N = mkN "gamut" "gamuts";
lin gamy_A = mkA "gamy" "gamier";
lin gander_N = mkN "gander" "ganders";
lin gang_N = mkN "gang" "gangs";
lin gang_V = mkV "gang" "gangs" "ganged" "ganged" "ganging";
lin ganger_N = mkN "ganger" "gangers";
lin gangling_A = compoundA (mkA "gangling");
lin ganglion_N = mkN "ganglion" "ganglions";
lin gangplank_N = mkN "gangplank" "gangplanks";
lin gangrene_N = mkN "gangrene" ;
lin gangrene_V = mkV "gangrene" "gangrenes" "gangrened" "gangrened" "gangrening";
lin gangrene_V2 = mkV2 (mkV "gangrene" "gangrenes" "gangrened" "gangrened" "gangrening");
lin gangrenous_A = compoundA (mkA "gangrenous");
lin gangsaw_N = mkN "gangsaw" ;
lin gangsta_N = mkN "gangsta" ;
lin gangster_N = mkN "gangster" "gangsters";
lin gangway_N = mkN "gangway" "gangways";
lin gannet_N = mkN "gannet" "gannets";
lin ganoid_N = mkN "ganoid" ;
lin ganoin_N = mkN "ganoin" ;
lin gantlet_N = mkN "gantlet" ;
lin gantry_N = mkN "gantry" "gantries";
lin gaol_N = mkN "gaol" "gaols";
lin gaol_V2 = mkV2 (mkV "gaol" "gaols" "gaoled" "gaoled" "gaoling");
lin gaolbird_N = mkN "gaolbird" "gaolbirds";
lin gaolbreak_N = mkN "gaolbreak" "gaolbreaks";
lin gaoler_N = mkN "gaoler" "gaolers";
lin gap_N = mkN "gap" "gaps";
lin gap_toothed_A = compoundA (mkA "gap-toothed");
lin gape_N = mkN "gape" "gapes";
lin gape_V = mkV "gape" "gapes" "gaped" "gaped" "gaping";
lin gar_N = mkN "gar" ;
lin garage_N = mkN "garage" "garages";
lin garage_V2 = mkV2 (mkV "garage" "garages" "garaged" "garaged" "garaging");
lin garambulla_N = mkN "garambulla" ;
lin garb_N = mkN "garb" ;
lin garb_V2 = mkV2 (mkV "garb" "garbs" "garbed" "garbed" "garbing");
lin garbage_N = mkN "garbage" ;
lin garbage_can_N = mkN "garbage-can" "garbage-cans";
lin garble_V2 = mkV2 (mkV "garble" "garbles" "garbled" "garbled" "garbling");
lin garboard_N = mkN "garboard" ;
lin garbology_N = mkN "garbology" ;
lin garden_N = mkN "garden" "gardens";
lin garden_V = mkV "garden" "gardens" "gardened" "gardened" "gardening";
lin garden_truck_N = mkN "garden-truck" "garden-trucks";
lin gardenerMasc_N = mkN masculine (mkN "gardener" "gardeners");
lin gardenerFem_N = mkN feminine (mkN "gardener" "gardeners");
lin gardenia_N = mkN "gardenia" "gardenias";
lin gardening_N = mkN "gardening" ;
lin gareth_PN = mkPN "Gareth";
lin garforth_PN = mkPN "Garforth";
lin garganey_N = mkN "garganey" ;
lin gargantuan_A = compoundA (mkA "gargantuan");
lin gargle_N = mkN "gargle" "gargles";
lin gargle_V = mkV "gargle" "gargles" "gargled" "gargled" "gargling";
lin gargle_V2 = mkV2 (mkV "gargle" "gargles" "gargled" "gargled" "gargling");
lin gargoyle_N = mkN "gargoyle" "gargoyles";
lin garibaldi_N = mkN "garibaldi" ;
lin garish_A = compoundA (mkA "garish");
lin garishness_N = mkN "garishness" ;
lin garland_N = mkN "garland" "garlands";
lin garland_V2 = mkV2 (mkV "garland" "garlands" "garlanded" "garlanded" "garlanding");
lin garlic_N = mkN "garlic" ;
lin garlicky_A = mkA "garlicky" ;
lin garment_N = mkN "garment" "garments";
lin garmentmaker_N = mkN "garmentmaker" ;
lin garner_N = mkN "garner" "garners";
lin garner_V2 = mkV2 (mkV "garner" "garners" "garnered" "garnered" "garnering");
lin garnet_N = mkN "garnet" "garnets";
lin garnierite_N = mkN "garnierite" ;
lin garnish_N = mkN "garnish" "garnishes";
lin garnish_V2 = mkV2 (mkV "garnish" "garnishes" "garnished" "garnished" "garnishing");
lin garnishee_N = mkN "garnishee" ;
lin garnishment_N = mkN "garnishment" ;
lin garotte_N = mkN "garotte" "garottes";
lin garotte_V2 = mkV2 (mkV "garotte" "garottes" "garotted" "garotted" "garotting");
lin garret_N = mkN "garret" "garrets";
lin garrison_N = mkN "garrison" "garrisons";
lin garrison_V2 = mkV2 (mkV "garrison" "garrisons" "garrisoned" "garrisoned" "garrisoning");
lin garrote_N = mkN "garrote" ;
lin garroter_N = mkN "garroter" ;
lin garrotte_N = mkN "garrotte" "garrottes";
lin garrotte_V2 = mkV2 (mkV "garrotte" "garrottes" "garrotted" "garrotted" "garrotting");
lin garrowhill_PN = mkPN "Garrowhill";
lin garrulity_N = mkN "garrulity" ;
lin garrulous_A = compoundA (mkA "garrulous");
lin garter_N = mkN "garter" "garters";
lin gary_PN = mkPN "Gary";
lin gas_N = mkN "gas" "gases";
lin gas_V = mkV "gas" "gases" "gassed" "gassed" "gassing";
lin gas_V2 = mkV2 (mkV "gas" "gases" "gassed" "gassed" "gassing");
lin gas_bracket_N = mkN "gas-bracket" "gas-brackets";
lin gas_cooker_N = mkN "gas-cooker" "gas-cookers";
lin gas_engine_N = mkN "gas-engine" "gas-engines";
lin gas_fitter_N = mkN "gas-fitter" "gas-fitters";
lin gas_helmet_N = mkN "gas-helmet" "gas-helmets";
lin gas_holder_N = mkN "gas-holder" "gas-holders";
lin gas_mask_N = mkN "gas-mask" "gas-masks";
lin gas_meter_N = mkN "gas-meter" "gas-meters";
lin gas_oven_N = mkN "gas-oven" "gas-ovens";
lin gas_ring_N = mkN "gas-ring" "gas-rings";
lin gas_station_N = mkN "gas-station" "gas-stations";
lin gas_stove_N = mkN "gas-stove" "gas-stoves";
lin gasbag_N = mkN "gasbag" "gasbags";
lin gaseous_A = compoundA (mkA "gaseous");
lin gaseousness_N = mkN "gaseousness" ;
lin gasfield_N = mkN "gasfield" ;
lin gash_N = mkN "gash" "gashes";
lin gash_V2 = mkV2 (mkV "gash" "gashes" "gashed" "gashed" "gashing");
lin gasification_N = mkN "gasification" "gasifications";
lin gasify_V = mkV "gasify" "gasifies" "gasified" "gasified" "gasifying";
lin gasify_V2 = mkV2 (mkV "gasify" "gasifies" "gasified" "gasified" "gasifying");
lin gasket_N = mkN "gasket" "gaskets";
lin gaskin_N = mkN "gaskin" ;
lin gaslight_N = mkN "gaslight" ;
lin gasman_N = mkN "gasman" ;
lin gasmask_N = mkN "gasmask" "gasmasks";
lin gasohol_N = mkN "gasohol" ;
lin gasolene_N = mkN "gasolene" ;
lin gasoline_N = mkN "gasoline" ;
lin gasometer_N = mkN "gasometer" "gasometers";
lin gasp_N = mkN "gasp" "gasps";
lin gasp_V = mkV "gasp" "gasps" "gasped" "gasped" "gasping";
lin gasp_V2 = mkV2 (mkV "gasp" "gasps" "gasped" "gasped" "gasping");
lin gassing_N = mkN "gassing" ;
lin gassy_A = mkA "gassy" "gassier";
lin gasteromycete_N = mkN "gasteromycete" ;
lin gastrectomy_N = mkN "gastrectomy" ;
lin gastric_A = compoundA (mkA "gastric");
lin gastrin_N = mkN "gastrin" ;
lin gastritis_N = mkN "gastritis" ;
lin gastrocnemius_N = mkN "gastrocnemius" ;
lin gastroduodenal_A = mkA "gastroduodenal" ;
lin gastroenteritis_N = mkN "gastroenteritis" ;
lin gastroenterologistMasc_N = mkN masculine (mkN "gastroenterologist");
lin gastroenterologistFem_N = mkN feminine (mkN "gastroenterologist");
lin gastroenterology_N = mkN "gastroenterology" ;
lin gastroenterostomy_N = mkN "gastroenterostomy" ;
lin gastroesophageal_A = mkA "gastroesophageal" ;
lin gastrogavage_N = mkN "gastrogavage" ;
lin gastrointestinal_A = mkA "gastrointestinal" ;
lin gastromy_N = mkN "gastromy" ;
lin gastronomic_A = compoundA (mkA "gastronomic");
lin gastronomy_N = mkN "gastronomy" ;
lin gastropod_N = mkN "gastropod" ;
lin gastroscope_N = mkN "gastroscope" ;
lin gastroscopy_N = mkN "gastroscopy" ;
lin gastrostomy_N = mkN "gastrostomy" ;
lin gastrula_N = mkN "gastrula" ;
lin gastrulation_N = mkN "gastrulation" ;
lin gasworks_N = mkN "gasworks" "gasworks";
lin gat_N = mkN "gat" ;
lin gate_N = mkN "gate" "gates";
lin gate_V2 = mkV2 (mkV "gate" "gates" "gated" "gated" "gating");
lin gateau_N = mkN "gâteau" "gâteaus";
lin gatecrash_V2 = mkV2 (mkV "gatecrash" "gatecrashes" "gatecrashed" "gatecrashed" "gatecrashing");
lin gatecrasher_N = mkN "gatecrasher" "gatecrashers";
lin gatehouse_N = mkN "gatehouse" "gatehouses";
lin gatekeeper_N = mkN "gatekeeper" ;
lin gatepost_N = mkN "gatepost" "gateposts";
lin gateshead_PN = mkPN "Gateshead";
lin gateway_N = mkN "gateway" "gateways";
lin gather_N = mkN "gather" ;
lin gather_V = mkV "gather" "gathers" "gathered" "gathered" "gathering";
lin gather_V2 = mkV2 (mkV "gather" "gathers" "gathered" "gathered" "gathering");
lin gatherer_N = mkN "gatherer" "gatherers";
lin gathering_N = mkN "gathering" "gatherings";
lin gatt_N = mkN "gatt" ;
lin gauche_A = compoundA (mkA "gauche");
lin gaucherie_N = mkN "gaucherie" "gaucheries";
lin gaucho_N = mkN "gaucho" "gauchos";
lin gaud_N = mkN "gaud" "gauds";
lin gaudery_N = mkN "gaudery" ;
lin gaudy_A = mkA "gaudy" "gaudier";
lin gaudy_N = mkN "gaudy" "gaudies";
lin gauge_N = mkN "gauge" "gauges";
lin gauge_V2 = mkV2 (mkV "gauge" "gauges" "gauged" "gauged" "gauging");
lin gaul_N = mkN "gaul" "gauls";
lin gaumless_A = mkA "gaumless" ;
lin gaunt_A = compoundA (mkA "gaunt");
lin gauntlet_N = mkN "gauntlet" "gauntlets";
lin gauntleted_A = mkA "gauntleted" ;
lin gauntness_N = mkN "gauntness" ;
lin gaur_N = mkN "gaur" ;
lin gauss_N = mkN "gauss" ;
lin gauze_N = mkN "gauze" ;
lin gauzy_A = mkA "gauzy" "gauzier";
lin gavel_N = mkN "gavel" "gavels";
lin gavial_N = mkN "gavial" ;
lin gavin_PN = mkPN "Gavin";
lin gavotte_N = mkN "gavotte" "gavottes";
lin gawk_N = mkN "gawk" "gawks";
lin gawker_N = mkN "gawker" ;
lin gawkiness_N = mkN "gawkiness" ;
lin gawky_A = mkA "gawky" "gawkier";
lin gawp_V = mkV "gawp" "gawps" "gawped" "gawped" "gawping";
lin gay_A = mkA "gay" "gayer";
lin gay_N = mkN "gay" "gays";
lin gayal_N = mkN "gayal" ;
lin gayness_N = mkN "gayness" ;
lin gazania_N = mkN "gazania" ;
lin gaze_N = mkN "gaze";
lin gaze_V = mkV "gaze" "gazes" "gazed" "gazed" "gazing";
lin gazebo_N = mkN "gazebo" ;
lin gazelle_N = mkN "gazelle" "gazelles";
lin gazette_N = mkN "gazette" "gazettes";
lin gazette_V2 = mkV2 (mkV "gazette" "gazettes" "gazetted" "gazetted" "gazetting");
lin gazetteer_N = mkN "gazetteer" "gazetteers";
lin gazpacho_N = mkN "gazpacho" ;
lin gazump_V = mkV "gazump" "gazumps" "gazumped" "gazumped" "gazumping";
lin gazump_V2 = mkV2 (mkV "gazump" "gazumps" "gazumped" "gazumped" "gazumping");
lin gb_PN = mkPN "Gb";
lin gcse_N = mkN "gcse" ;
lin gcses_N = mkN "GCSE" "GCSEs" ;
lin gdansk_PN = mkPN "Gdansk";
lin gdn_PN = mkPN "Gdn";
lin gdns_PN = mkPN "Gdns";
lin gean_N = mkN "gean" ;
lin gear_N = mkN "gear" "gears";
lin gear_V = mkV "gear" "gears" "geared" "geared" "gearing";
lin gear_V2 = mkV2 (mkV "gear" "gears" "geared" "geared" "gearing");
lin gear_case_N = mkN "gear-case" "gear-cases";
lin gearbox_N = mkN "gearbox" "gearboxes";
lin gearing_N = mkN "gearing" ;
lin gearset_N = mkN "gearset" ;
lin gearshift_N = mkN "gearshift" "gearshifts";
lin gecko_N = mkN "gecko" "geckos";
lin gee_gee_N = mkN "gee-gee" "gee-gees";
lin geebung_N = mkN "geebung" ;
lin geek_N = mkN "geek" ;
lin geezer_N = mkN "geezer" "geezers";
lin geiger_N = mkN "geiger" "geigers";
lin geisha_N = mkN "geisha" "geishas";
lin gel_N = mkN "gel" "gels";
lin gel_V = mkV "gel" "gels" "gelled" "gelled" "gelling";
lin gelatin_N = mkN "gelatin" ;
lin gelatine_N = mkN "gelatine" ;
lin gelatinous_A = compoundA (mkA "gelatinous");
lin gelatinousness_N = mkN "gelatinousness" ;
lin geld_V2 = mkV2 (mkV "geld" "gelds" "gelded" "gelded" "gelding");
lin gelding_N = mkN "gelding" "geldings";
lin gelechiid_N = mkN "gelechiid" ;
lin gelignite_N = mkN "gelignite" ;
lin gelligaer_PN = mkPN "Gelligaer";
lin gelsenkirchen_PN = mkPN "Gelsenkirchen";
lin gem_N = mkN "gem" "gems";
lin gemfibrozil_N = mkN "gemfibrozil" ;
lin geminate_N = mkN "geminate" ;
lin gemination_N = mkN "gemination" ;
lin gemini_PN = mkPN "Gemini";
lin gemma_N = mkN "gemma" ;
lin gemmed_A = compoundA (mkA "gemmed");
lin gemmiferous_A = mkA "gemmiferous" ;
lin gemmule_N = mkN "gemmule" ;
lin gempylid_N = mkN "gempylid" ;
lin gemsbok_N = mkN "gemsbok" ;
lin gen_N = mkN "gen" ;
lin gen_PN = mkPN "Gen";
lin gen_V2 = mkV2 (mkV "gen" "gens" "genned" "genned" "genning");
lin gendarme_N = mkN "gendarme" "gendarmes";
lin gendarmerie_N = mkN "gendarmerie" "gendarmeries";
lin gender_N = mkN "gender" "genders";
lin gene_N = mkN "gene" "genes";
lin gene_PN = mkPN "Gene";
lin genealogic_A = mkA "genealogic" ;
lin genealogical_A = compoundA (mkA "genealogical");
lin genealogist_N = mkN "genealogist" "genealogists";
lin genealogy_N = mkN "genealogy" "genealogies";
lin general_A = compoundA (mkA "general");
lin general_N = mkN "general" "generals";
lin generalissimo_N = mkN "generalissimo" "generalissimos";
lin generality_N = mkN "generality" "generalities";
lin generalization_N = mkN "generalization" "generalizations";
lin generalize_V = mkV "generalize" "generalizes" "generalized" "generalized" "generalizing";
lin generalize_V2 = mkV2 (mkV "generalize" "generalizes" "generalized" "generalized" "generalizing");
lin generalship_N = mkN "generalship" ;
lin generate_V2 = mkV2 (mkV "generate" "generates" "generated" "generated" "generating");
lin generation_N = mkN "generation" "generations";
lin generational_A = mkA "generational" ;
lin generative_A = compoundA (mkA "generative");
lin generator_N = mkN "generator" "generators";
lin generic_A = compoundA (mkA "generic");
lin generic_N = mkN "generic" ;
lin generically_Adv = mkAdv "generically";
lin generosity_N = mkN "generosity" "generosities";
lin generous_A = compoundA (mkA "generous");
lin genesis_N = mkN "genesis" "geneses";
lin genet_N = mkN "genet" ;
lin genetic_A = compoundA (mkA "genetic");
lin genetically_Adv = mkAdv "genetically";
lin geneticism_N = mkN "geneticism" ;
lin geneticist_N = mkN human (mkN "geneticist" "geneticists");
lin genetics_N = mkN "genetics" "genetics";
lin geneva_N = mkN "geneva" ;
lin geneva_PN = mkPN "Geneva";
lin genial_A = compoundA (mkA "genial");
lin geniality_N = mkN "geniality" "genialities";
lin genic_A = mkA "genic" ;
lin geniculate_A = mkA "geniculate" ;
lin genie_N = mkN "genie" "genies";
lin genip_N = mkN "genip" ;
lin genipa_N = mkN "genipa" ;
lin genipap_N = mkN "genipap" ;
lin genital_A = compoundA (mkA "genital");
lin genitalia_N = mkN "genitalia" ;
lin genitive_A = compoundA (mkA "genitive");
lin genitive_N = mkN "genitive" ;
lin genitor_N = mkN "genitor" ;
lin genitourinary_A = mkA "genitourinary" ;
lin genius_N = mkN "genius" "geniuses";
lin genius_loci_N = mkN "genius loci" "IRREG";
lin genlisea_N = mkN "genlisea" ;
lin genoa_PN = mkPN "Genoa";
lin genocide_N = mkN "genocide" ;
lin genoise_N = mkN "genoise" ;
lin genome_N = mkN "genome" ;
lin genomics_N = mkN "genomics" ;
lin genotype_N = mkN "genotype" ;
lin genotypical_A = mkA "genotypical" ;
lin genova_PN = mkPN "Genova";
lin genre_N = mkN "genre" "genres";
lin genre_painting_N = mkN "genre-painting" "genre-paintings";
lin gent_N = mkN "gent" "gents";
lin gentamicin_N = mkN "gentamicin" ;
lin genteel_A = compoundA (mkA "genteel");
lin gentian_N = mkN "gentian" "gentians";
lin gentianella_N = mkN "gentianella" ;
lin gentile_A = compoundA (mkA "gentile");
lin gentile_N = mkN "gentile" "gentiles";
lin gentility_N = mkN "gentility" ;
lin gentle_A = mkA "gentle" "gentler";
lin gentlefolk_N = mkN "gentlefolk" ;
lin gentleman_N = mkN masculine (mkN "gentleman" "gentlemen");
lin gentleman_at_arms_N = mkN "gentleman-at-arms" "gentlemen-*at-arms";
lin gentlemanlike_A = mkA "gentlemanlike" ;
lin gentlemanly_A = compoundA (mkA "gentlemanly");
lin gentleness_N = mkN "gentleness" ;
lin gentlewoman_N = mkN feminine (mkN "gentlewoman" "gentlewomen");
lin gently_Adv = mkAdv "gently";
lin gentrification_N = mkN "gentrification" ;
lin gentry_N = mkN "gentry" "gentry";
lin genuflect_V = mkV "genuflect" "genuflects" "genuflected" "genuflected" "genuflecting";
lin genuflection_N = mkN "genuflection" "genuflections";
lin genuflexion_N = mkN "genuflexion" "genuflexions";
lin genuine_A = compoundA (mkA "genuine");
lin genuineness_N = mkN "genuineness" ;
lin genus_N = mkN "genus" "geni";
lin geocentric_A = compoundA (mkA "geocentric");
lin geochemistry_N = mkN "geochemistry" ;
lin geode_N = mkN "geode" ;
lin geodesic_N = mkN "geodesic" ;
lin geodesy_N = mkN "geodesy" ;
lin geodetic_A = mkA "geodetic" ;
lin geoduck_N = mkN "geoduck" ;
lin geoff_PN = mkPN "Geoff";
lin geoffrey_PN = mkPN "Geoffrey";
lin geographer_N = mkN human (mkN "geographer" "geographers");
lin geographic_A = mkA "geographic" ;
lin geographical_A = compoundA (mkA "geographical");
lin geography_N = mkN "geography" ;
lin geological_A = compoundA (mkA "geological");
lin geologistMasc_N = mkN masculine (mkN "geologist" "geologists");
lin geologistFem_N = mkN feminine (mkN "geologist" "geologists");
lin geology_N = mkN "geology" ;
lin geomancer_N = mkN "geomancer" ;
lin geomancy_N = mkN "geomancy" ;
lin geometer_N = mkN "geometer" ;
lin geometric_A = compoundA (mkA "geometric");
lin geometrical_A = compoundA (mkA "geometrical");
lin geometrid_N = mkN "geometrid" ;
lin geometry_N = mkN "geometry" ;
lin geomorphologic_A = mkA "geomorphologic" ;
lin geophagy_N = mkN "geophagy" ;
lin geophysical_A = compoundA (mkA "geophysical");
lin geophysicist_N = mkN "geophysicist" ;
lin geophysics_N = mkN "geophysics" "geophysics";
lin geophyte_N = mkN "geophyte" ;
lin geophytic_A = mkA "geophytic" ;
lin geopolitical_A = mkA "geopolitical" ;
lin geopolitics_N = mkN "geopolitics" "geopolitics";
lin geordie_N = mkN "geordie" ;
lin george_PN = mkPN "George";
lin georgette_N = mkN "georgette" ;
lin georgia_PN = mkPN "Georgia";
lin georgian_A = compoundA (mkA "georgian");
lin georgian_N = mkN "georgian" "georgians";
lin georgie_PN = mkPN "Georgie";
lin geostationary_A = mkA "geostationary" ;
lin geostrategic_A = mkA "geostrategic" ;
lin geostrategy_N = mkN "geostrategy" ;
lin geosynchronous_A = mkA "geosynchronous" ;
lin geothermal_A = mkA "geothermal" ;
lin geotropism_N = mkN "geotropism" ;
lin gerald_PN = mkPN "Gerald";
lin geraldine_PN = mkPN "Geraldine";
lin geranium_N = mkN "geranium" "geraniums";
lin gerard_PN = mkPN "Gerard";
lin gerardia_N = mkN "gerardia" ;
lin gerbil_N = mkN "gerbil" ;
lin gerenuk_N = mkN "gerenuk" ;
lin geriatric_A = compoundA (mkA "geriatric");
lin geriatrician_N = mkN "geriatrician" "geriatricians";
lin geriatrics_N = mkN "geriatrics" "geriatrics";
lin germ_N = mkN "germ" "germs";
lin german_A = compoundA (mkA "German");
lin germanMasc_N = mkN masculine (mkN "German" "Germans");
lin germanFem_N = mkN feminine (mkN "German" "Germans");
lin germander_N = mkN "germander" ;
lin germane_A = compoundA (mkA "germane");
lin germaneness_N = mkN "germaneness" ;
lin germanic_A = compoundA (mkA "germanic");
lin germanite_N = mkN "germanite" ;
lin germanium_N = mkN "germanium" ;
lin germany_PN = mkPN "Germany";
lin germfree_A = mkA "germfree" ;
lin germicide_N = mkN "germicide" "germicides";
lin germinal_A = mkA "germinal" ;
lin germinate_V = mkV "germinate" "germinates" "germinated" "germinated" "germinating";
lin germinate_V2 = mkV2 (mkV "germinate" "germinates" "germinated" "germinated" "germinating");
lin germination_N = mkN "germination" ;
lin germy_A = mkA "germy" ;
lin gerontocracy_N = mkN "gerontocracy" ;
lin gerontologist_N = mkN "gerontologist" ;
lin gerontology_N = mkN "gerontology" ;
lin gerry_PN = mkPN "Gerry";
lin gerrymander_N = mkN "gerrymander" "gerrymanders";
lin gerrymander_V2 = mkV2 (mkV "gerrymander" "gerrymanders" "gerrymandered" "gerrymandered" "gerrymandering");
lin gertie_PN = mkPN "Gertie";
lin gertrude_PN = mkPN "Gertrude";
lin gerund_N = mkN "gerund" "gerunds";
lin gerundial_A = mkA "gerundial" ;
lin gesneria_N = mkN "gesneria" ;
lin gesneriad_N = mkN "gesneriad" ;
lin gesso_N = mkN "gesso" ;
lin gestalt_N = mkN "gestalt" ;
lin gestapo_N = mkN "gestapo" "gestapos";
lin gestation_N = mkN "gestation" "gestations";
lin gestational_A = mkA "gestational" ;
lin gesticulate_V = mkV "gesticulate" "gesticulates" "gesticulated" "gesticulated" "gesticulating";
lin gesticulation_N = mkN "gesticulation" "gesticulations";
lin gestural_A = mkA "gestural" ;
lin gesture_N = mkN "gesture" "gestures";
lin gesture_V = mkV "gesture" "gestures" "gestured" "gestured" "gesturing";
lin get_N = mkN "get" ;
lin get_V = IrregEng.get_V;
lin get_V2 = mkV2 (IrregEng.get_V);
lin get_V2V = mkV2V (IrregEng.get_V) noPrep to_Prep ;
lin get_VA = mkVA (IrregEng.get_V);
lin get_VS = mkVS (IrregEng.get_V);
lin get_VV = mkVV (IrregEng.get_V);
lin get_at_able_A = compoundA (mkA "get-at-able");
lin get_together_N = mkN "get-together" "get-togethers";
lin get_up_N = mkN "get-up" "get-ups";
lin getaway_N = mkN "getaway" "getaways";
lin gettable_A = mkA "gettable" ;
lin geum_N = mkN "geum" "geums";
lin geyser_N = mkN "geyser" "geysers";
lin ghana_PN = mkPN "Ghana";
lin ghanaian_A = compoundA (mkA "ghanaian");
lin ghanaian_N = mkN "ghanaian" "ghanaians";
lin gharry_N = mkN "gharry" "gharries";
lin ghastliness_N = mkN "ghastliness" ;
lin ghastly_A = mkA "ghastly" "ghastlier";
lin ghat_N = mkN "ghat" "ghats";
lin ghatti_N = mkN "ghatti" ;
lin ghee_N = mkN "ghee" ;
lin ghent_PN = mkPN "Ghent";
lin gherkin_N = mkN "gherkin" "gherkins";
lin ghetto_N = mkN "ghetto" "ghettos";
lin ghillie_N = mkN "ghillie" ;
lin ghost_N = mkN "ghost" "ghosts";
lin ghost_V = mkV "ghost" "ghosts" "ghosted" "ghosted" "ghosting";
lin ghost_V2 = mkV2 (mkV "ghost" "ghosts" "ghosted" "ghosted" "ghosting");
lin ghost_writer_N = mkN "ghost-writer" "ghost-writers";
lin ghostliness_N = mkN "ghostliness" ;
lin ghostly_A = compoundA (mkA "ghostly");
lin ghostwriter_N = mkN "ghostwriter" ;
lin ghoul_N = mkN "ghoul" "ghouls";
lin ghoulish_A = compoundA (mkA "ghoulish");
lin ghq_PN = mkPN "Ghq";
lin ghrelin_N = mkN "ghrelin" ;
lin gi_N = mkN "gi" ;
lin giant_N = mkN masculine (mkN "giant" "giants");
lin giantess_N = mkN feminine (mkN "giantess" "giantesses");
lin giantism_N = mkN "giantism" ;
lin giardia_N = mkN "giardia" ;
lin giardiasis_N = mkN "giardiasis" ;
lin gib_N = mkN "gib" ;
lin gibber_V = mkV "gibber" "gibbers" "gibbered" "gibbered" "gibbering";
lin gibberellin_N = mkN "gibberellin" ;
lin gibberish_N = mkN "gibberish" ;
lin gibbet_N = mkN "gibbet" "gibbets";
lin gibbet_V2 = mkV2 (mkV "gibbet" "gibbets" "gibbeted" "gibbeted" "gibbeting");
lin gibbon_N = mkN "gibbon" "gibbons";
lin gibbous_A = compoundA (mkA "gibbous");
lin gibbsite_N = mkN "gibbsite" ;
lin gibe_N = mkN "gibe" "gibes";
lin gibe_V = mkV "gibe" "gibes" "gibed" "gibed" "gibing";
lin gibibit_N = mkN "gibibit" ;
lin gibingly_Adv = mkAdv "gibingly";
lin giblet_N = mkN "giblet" ;
lin gibraltar_PN = mkPN "Gibraltar";
lin gibraltarian_A = compoundA (mkA "gibraltarian");
lin gibraltarian_N = mkN "gibraltarian" "gibraltarians";
lin giddiness_N = mkN "giddiness" ;
lin giddy_A = mkA "giddy" "giddier";
lin gidgee_N = mkN "gidgee" ;
lin giffnock_PN = mkPN "Giffnock";
lin gift_N = mkN "gift" "gifts";
lin gift_V2 = mkV2 (mkV "gift" "gifts" "gifted" "gifted" "gifting");
lin gig_N = mkN "gig" "gigs";
lin gigabit_N = mkN "gigabit" ;
lin gigabyte_N = mkN "gigabyte" ;
lin gigahertz_N = mkN "gigahertz" ;
lin gigantic_A = compoundA (mkA "gigantic");
lin gigantism_N = mkN "gigantism" ;
lin giggle_N = mkN "giggle" "giggles";
lin giggle_V = mkV "giggle" "giggles" "giggled" "giggled" "giggling";
lin gigolo_N = mkN "gigolo" "gigolos";
lin gilbert_N = mkN "gilbert" ;
lin gilbert_PN = mkPN "Gilbert";
lin gilbertian_A = compoundA (mkA "gilbertian");
lin gild_N = mkN "gild" "gilds";
lin gild_V2 = mkV2 (mkV "gild" "gilds" "gilded" "gilded" "gilding");
lin gilder_N = mkN "gilder" "gilders";
lin gildhall_N = mkN "gildhall" ;
lin gilding_N = mkN "gilding" ;
lin giles_PN = mkPN "Giles";
lin gilfach_goch_PN = mkPN "Gilfach goch";
lin gill_N = mkN "gill" "gills";
lin gill_PN = mkPN "Gill";
lin gillian_PN = mkPN "Gillian";
lin gillie_N = mkN "gillie" "gillies";
lin gillingham_PN = mkPN "Gillingham";
lin gilt_N = mkN "gilt" ;
lin gilt_edged_A = compoundA (mkA "gilt-edged");
lin gimbal_N = mkN "gimbal" ;
lin gimbaled_A = mkA "gimbaled" ;
lin gimcrack_A = compoundA (mkA "gimcrack");
lin gimel_N = mkN "gimel" ;
lin gimlet_N = mkN "gimlet" "gimlets";
lin gimmick_N = mkN "gimmick" "gimmicks";
lin gimmickry_N = mkN "gimmickry" ;
lin gin_N = mkN "gin" "gins";
lin gin_V2 = mkV2 (mkV "gin" "gins" "ginned" "ginned" "ginning");
lin gina_PN = mkPN "Gina";
lin ginger_A = mkA "ginger" ;
lin ginger_N = mkN "ginger" ;
lin ginger_V2 = mkV2 (mkV "ginger" "gingers" "gingered" "gingered" "gingering");
lin gingerbread_N = mkN "gingerbread" "gingerbreads";
lin gingerly_A = compoundA (mkA "gingerly");
lin gingerol_N = mkN "gingerol" ;
lin gingersnap_N = mkN "gingersnap" ;
lin gingery_A = mkA "gingery" ;
lin gingham_N = mkN "gingham" ;
lin gingiva_N = mkN "gingiva" ;
lin gingival_A = mkA "gingival" ;
lin gingivitis_N = mkN "gingivitis" ;
lin gingko_N = mkN "gingko" "gingkos";
lin ginkgo_N = mkN "ginkgo" ;
lin ginseng_N = mkN "ginseng" ;
lin gipsyMasc_N = mkN masculine (mkN "gipsy" "gipsies");
lin gipsyFem_N = mkN feminine (mkN "gipsy" "gipsies");
lin gipsywort_N = mkN "gipsywort" ;
lin giraffe_N = mkN "giraffe" "giraffes";
lin girandole_N = mkN "girandole" ;
lin gird_V = mkV "gird";
lin gird_V2 = mkV2 (mkV "gird" "girds" "girded" "girded" "girding");
lin girder_N = mkN "girder" "girders";
lin girdle_N = mkN "girdle" "girdles";
lin girdle_V2 = mkV2 (mkV "girdle" "girdles" "girdled" "girdled" "girdling");
lin girl_N = mkN feminine (mkN "girl" "girls");
lin girlfriend_N = mkN feminine (mkN "girlfriend" "girlfriends");
lin girlhood_N = mkN "girlhood" ;
lin girlish_A = compoundA (mkA "girlish");
lin girlishness_N = mkN "girlishness" ;
lin giro_N = mkN "giro" ;
lin girth_N = mkN "girth" "girths";
lin girvan_PN = mkPN "Girvan";
lin gist_N = mkN "gist" "gists";
lin gitana_N = mkN "gitana" ;
lin gitano_N = mkN "gitano" ;
lin give_N = mkN "give" ;
lin give_V = IrregEng.give_V;
lin give_V2 = mkV2 (IrregEng.give_V);
lin give_V3 = mkV3 (IrregEng.give_V);
lin giveaway_N = mkN "giveaway" "giveaways";
lin given_N = mkN "given" ;
lin givenness_N = mkN "givenness" ;
lin giver_N = mkN "giver" "givers";
lin giveth_V2 = mkV2 (mkV "giveth");
lin giving_N = mkN "giving" ;
lin gizzard_N = mkN "gizzard" "gizzards";
lin glabella_N = mkN "glabella" ;
lin glabellar_A = mkA "glabellar" ;
lin glabrescent_A = mkA "glabrescent" ;
lin glabrous_A = mkA "glabrous" ;
lin glace_A = compoundA (mkA "glacé");
lin glacial_A = compoundA (mkA "glacial");
lin glaciated_A = mkA "glaciated" ;
lin glaciation_N = mkN "glaciation" ;
lin glacier_N = mkN "glacier" "glaciers";
lin glad_A = mkA "glad" "gladder";
lin gladden_V2 = mkV2 (mkV "gladden" "gladdens" "gladdened" "gladdened" "gladdening");
lin glade_N = mkN "glade" "glades";
lin gladiator_N = mkN "gladiator" "gladiators";
lin gladiatorial_A = compoundA (mkA "gladiatorial");
lin gladiolus_N = mkN "gladiolus" "gladioluses";
lin gladness_N = mkN "gladness" ;
lin gladsome_A = compoundA (mkA "gladsome");
lin gladys_PN = mkPN "Gladys";
lin glamor_N = mkN "glamor" ;
lin glamorgan_PN = mkPN "Glamorgan";
lin glamorization_N = mkN "glamorization" ;
lin glamorize_V2 = mkV2 (mkV "glamorize" "glamorizes" "glamorized" "glamorized" "glamorizing");
lin glamorous_A = compoundA (mkA "glamorous");
lin glamour_N = mkN "glamour" ;
lin glance_N = mkN "glance" "glances";
lin glance_V = mkV "glance" "glances" "glanced" "glanced" "glancing";
lin glance_V2 = mkV2 (mkV "glance" "glances" "glanced" "glanced" "glancing");
lin gland_N = mkN "gland" "glands";
lin glanders_N = mkN "glanders" ;
lin glandular_A = compoundA (mkA "glandular");
lin glans_N = mkN "glans" ;
lin glare_N = mkN "glare" "glares";
lin glare_V = mkV "glare" "glares" "glared" "glared" "glaring";
lin glare_V2 = mkV2 (mkV "glare" "glares" "glared" "glared" "glaring");
lin glaring_A = mkA "glaring" ;
lin glasgow_PN = mkPN "Glasgow";
lin glasnost_N = mkN "glasnost" ;
lin glass_N = mkN "glass" "glasses";
lin glass_V2 = mkV2 (mkV "glass" "glasses" "glassed" "glassed" "glassing");
lin glass_blower_N = mkN "glass-blower" "glass-blowers";
lin glass_cutter_N = mkN "glass-cutter" "glass-cutters";
lin glass_wool_N = mkN "glass-wool" ;
lin glassblower_N = mkN "glassblower" ;
lin glassful_N = mkN "glassful" "glassfuls";
lin glasshouse_N = mkN "glasshouse" "glasshouses";
lin glassmaker_N = mkN "glassmaker" ;
lin glassware_N = mkN "glassware" ;
lin glassworks_N = mkN "glassworks" "glassworks";
lin glasswort_N = mkN "glasswort" ;
lin glassy_A = mkA "glassy" "glassier";
lin glastonbury_PN = mkPN "Glastonbury";
lin glaswegian_A = compoundA (mkA "glaswegian");
lin glaswegian_N = mkN "glaswegian" "glaswegians";
lin glaucoma_N = mkN "glaucoma" ;
lin glauconite_N = mkN "glauconite" ;
lin glaucous_A = compoundA (mkA "glaucous");
lin glaze_N = mkN "glaze" "glazes";
lin glaze_V = mkV "glaze" "glazes" "glazed" "glazed" "glazing";
lin glaze_V2 = mkV2 (mkV "glaze" "glazes" "glazed" "glazed" "glazing");
lin glazier_N = mkN "glazier" "glaziers";
lin gleam_N = mkN "gleam" "gleams";
lin gleam_V = mkV "gleam" "gleams" "gleamed" "gleamed" "gleaming";
lin glean_V = mkV "glean" "gleans" "gleaned" "gleaned" "gleaning";
lin glean_V2 = mkV2 (mkV "glean" "gleans" "gleaned" "gleaned" "gleaning");
lin gleaner_N = mkN "gleaner" "gleaners";
lin gleba_N = mkN "gleba" ;
lin glebe_N = mkN "glebe" "glebes";
lin glee_N = mkN "glee" "glees";
lin gleeful_A = compoundA (mkA "gleeful");
lin gleet_N = mkN "gleet" ;
lin glen_N = mkN "glen" "glens";
lin glen_PN = mkPN "Glen";
lin glengarry_N = mkN "glengarry" "glengarries";
lin glenrothes_PN = mkPN "Glenrothes";
lin glial_A = mkA "glial" ;
lin glib_A = mkA "glib" "glibber";
lin glibness_N = mkN "glibness" ;
lin glide_N = mkN "glide" "glides";
lin glide_V = mkV "glide" "glides" "glided" "glided" "gliding";
lin glider_N = mkN "glider" "gliders";
lin gliding_N = mkN "gliding" ;
lin glimmer_N = mkN "glimmer" "glimmers";
lin glimmer_V = mkV "glimmer" "glimmers" "glimmered" "glimmered" "glimmering";
lin glimmery_A = mkA "glimmery" ;
lin glimpse_N = mkN "glimpse" "glimpses";
lin glimpse_V2 = mkV2 (mkV "glimpse" "glimpses" "glimpsed" "glimpsed" "glimpsing");
lin glint_N = mkN "glint" "glints";
lin glint_V = mkV "glint" "glints" "glinted" "glinted" "glinting";
lin glioblastoma_N = mkN "glioblastoma" ;
lin glioma_N = mkN "glioma" ;
lin glipizide_N = mkN "glipizide" ;
lin gliricidia_N = mkN "gliricidia" ;
lin glissade_N = mkN "glissade" "glissades";
lin glissade_V = mkV "glissade" "glissades" "glissaded" "glissaded" "glissading";
lin glissando_A = compoundA (mkA "glissando");
lin glissando_Adv = mkAdv "glissando";
lin glissando_N = mkN "glissando" ;
lin glisten_V = mkV "glisten" "glistens" "glistened" "glistened" "glistening";
lin glister_N = mkN "glister";
lin glister_V = mkV "glister" "glisters" "glistered" "glistered" "glistering";
lin glitter_N = mkN "glitter";
lin glitter_V = mkV "glitter" "glitters" "glittered" "glittered" "glittering";
lin gloaming_N = mkN "gloaming" "IRREG";
lin gloat_N = mkN "gloat" ;
lin gloat_V = mkV "gloat" "gloats" "gloated" "gloated" "gloating";
lin gloat_VS = mkVS (mkV "gloat" "gloats" "gloated" "gloated" "gloating");
lin gloatingly_Adv = mkAdv "gloatingly";
lin global_A = compoundA (mkA "global");
lin globalization_N = mkN (variants {"globalization"; "globalisation"});
lin globe_N = mkN "globe" "globes";
lin globeflower_N = mkN "globeflower" ;
lin globetrot_V = mkV "globetrot" "globetrots" "globetrotted" "globetrotted" "globetrotting";
lin globetrotter_N = mkN "globetrotter" "globetrotters";
lin globigerina_N = mkN "globigerina" ;
lin globin_N = mkN "globin" ;
lin globular_A = compoundA (mkA "globular");
lin globule_N = mkN "globule" "globules";
lin globulin_N = mkN "globulin" ;
lin glochidium_N = mkN "glochidium" ;
lin glockenspiel_N = mkN "glockenspiel" "glockenspiels";
lin glogg_N = mkN "glogg" ;
lin glomerular_A = mkA "glomerular" ;
lin glomerule_N = mkN "glomerule" ;
lin glomerulonephritis_N = mkN "glomerulonephritis" ;
lin glomerulus_N = mkN "glomerulus" ;
lin gloom_N = mkN "gloom" "glooms";
lin gloominess_N = mkN "gloominess" ;
lin glooming_A = mkA "glooming" ;
lin gloomy_A = mkA "gloomy" "gloomier";
lin glop_N = mkN "glop" ;
lin gloria_PN = mkPN "Gloria";
lin glorification_N = mkN "glorification" ;
lin glorify_V2 = mkV2 (mkV "glorify" "glorifies" "glorified" "glorified" "glorifying");
lin gloriosa_N = mkN "gloriosa" ;
lin glorious_A = compoundA (mkA "glorious");
lin glory_N = mkN "glory" "glories";
lin glory_V = mkV "glory" "glories" "gloried" "gloried" "glorying";
lin glory_hole_N = mkN "glory-hole" "glory-holes";
lin gloss_N = mkN "gloss" "glosses";
lin gloss_V2 = mkV2 (mkV "gloss" "glosses" "glossed" "glossed" "glossing");
lin glossalgia_N = mkN "glossalgia" ;
lin glossarist_N = mkN "glossarist" ;
lin glossary_N = mkN "glossary" "glossaries";
lin glossiness_N = mkN "glossiness" ;
lin glossitis_N = mkN "glossitis" ;
lin glossolalia_N = mkN "glossolalia" ;
lin glossop_PN = mkPN "Glossop";
lin glossopharyngeal_A = mkA "glossopharyngeal" ;
lin glossoptosis_N = mkN "glossoptosis" ;
lin glossy_A = mkA "glossy" "glossier";
lin glossy_N = mkN "glossy" ;
lin glottal_A = compoundA (mkA "glottal");
lin glottis_N = mkN "glottis" "glottises";
lin glottochronological_A = mkA "glottochronological" ;
lin glottochronology_N = mkN "glottochronology" ;
lin gloucester_PN = mkPN "Gloucester";
lin gloucestershire_PN = mkPN "Gloucestershire";
lin glove_N = mkN "glove" "gloves";
lin glove_compartment_N = mkN "glove-compartment" "glove-compartments";
lin gloved_A = compoundA (mkA "gloved");
lin gloveless_A = mkA "gloveless" ;
lin glow_N = mkN "glow" "IRREG";
lin glow_V = mkV "glow" "glows" "glowed" "glowed" "glowing";
lin glow_worm_N = mkN "glow-worm" "glow-worms";
lin glower_V = mkV "glower" "glowers" "glowered" "glowered" "glowering";
lin gloweringly_Adv = mkAdv "gloweringly";
lin glowingly_Adv = mkAdv "glowingly" ;
lin glowworm_N = mkN "glowworm" ;
lin gloxinia_N = mkN "gloxinia" ;
lin glucagon_N = mkN "glucagon" ;
lin glucocorticoid_N = mkN "glucocorticoid" ;
lin glucosamine_N = mkN "glucosamine" ;
lin glucose_N = mkN "glucose" ;
lin glucoside_N = mkN "glucoside" ;
lin glucosuria_N = mkN "glucosuria" ;
lin glue_N = mkN "glue" "glues";
lin glue_V2 = mkV2 (mkV "glue" "IRREG" "IRREG" "IRREG" "IRREG");
lin glued_A = mkA "glued" ;
lin gluey_A = compoundA (mkA "gluey");
lin glum_A = mkA "glum" "glummer";
lin glume_N = mkN "glume" ;
lin glumness_N = mkN "glumness" ;
lin gluon_N = mkN "gluon" ;
lin glusburn_PN = mkPN "Glusburn";
lin glut_N = mkN "glut" "gluts";
lin glut_V2 = mkV2 (mkV "glut" "gluts" "glutted" "glutted" "glutting");
lin glutamate_N = mkN "glutamate" ;
lin glutamine_N = mkN "glutamine" ;
lin gluteal_A = mkA "gluteal" ;
lin glutelin_N = mkN "glutelin" ;
lin gluten_N = mkN "gluten" ;
lin glutethimide_N = mkN "glutethimide" ;
lin gluteus_N = mkN "gluteus" ;
lin glutinous_A = compoundA (mkA "glutinous");
lin glutton_N = mkN human (mkN "glutton" "gluttons");
lin gluttonous_A = compoundA (mkA "gluttonous");
lin gluttony_N = mkN "gluttony" ;
lin glyburide_N = mkN "glyburide" ;
lin glyceraldehyde_N = mkN "glyceraldehyde" ;
lin glyceride_N = mkN "glyceride" ;
lin glycerine_N = mkN "glycerine" ;
lin glycerite_N = mkN "glycerite" ;
lin glycerogelatin_N = mkN "glycerogelatin" ;
lin glycerol_N = mkN "glycerol" ;
lin glyceryl_N = mkN "glyceryl" ;
lin glycine_N = mkN "glycine" ;
lin glycogen_N = mkN "glycogen" ;
lin glycogenesis_N = mkN "glycogenesis" ;
lin glycogenic_A = mkA "glycogenic" ;
lin glycolysis_N = mkN "glycolysis" ;
lin glycoprotein_N = mkN "glycoprotein" ;
lin glycoside_N = mkN "glycoside" ;
lin glycosuria_N = mkN "glycosuria" ;
lin glyph_N = mkN "glyph" ;
lin glyptics_N = mkN "glyptics" ;
lin glyptography_N = mkN "glyptography" ;
lin gmt_PN = mkPN "Gmt";
lin gnarled_A = compoundA (mkA "gnarled");
lin gnash_V = mkV "gnash" "gnashes" "gnashed" "gnashed" "gnashing";
lin gnash_V2 = mkV2 (mkV "gnash" "gnashes" "gnashed" "gnashed" "gnashing");
lin gnat_N = mkN "gnat" "gnats";
lin gnatcatcher_N = mkN "gnatcatcher" ;
lin gnathion_N = mkN "gnathion" ;
lin gnathostome_N = mkN "gnathostome" ;
lin gnaw_V = mkV "gnaw" "gnaws" "gnawed" "gnawed" "gnawing";
lin gnaw_V2 = mkV2 (mkV "gnaw" "gnaws" "gnawed" "gnawed" "gnawing");
lin gneiss_N = mkN "gneiss" ;
lin gnetum_N = mkN "gnetum" ;
lin gnocchi_N = mkN "gnocchi" ;
lin gnome_N = mkN "gnome" "gnomes";
lin gnomic_A = mkA "gnomic" ;
lin gnomish_A = mkA "gnomish" ;
lin gnomon_N = mkN "gnomon" ;
lin gnosis_N = mkN "gnosis" ;
lin gnostic_A = mkA "gnostic" ;
lin gnp_N = mkN "GNP" ;
lin gnu_N = mkN "gnu" "gnus";
lin go_A = mkA "go" ;
lin go_N = mkN "go" "gi";
lin go_V = IrregEng.go_V;
lin go_V2 = mkV2 (IrregEng.go_V);
lin go_VA = mkVA (IrregEng.go_V);
lin go_VS = mkVS (IrregEng.go_V);
lin go_VV = mkVV (IrregEng.go_V);
lin go_ahead_N = mkN "go-ahead" "go-aheads";
lin go_as_you_please_A = compoundA (mkA "go-as-you-please");
lin go_between_N = mkN "go-between" "go-betweens";
lin go_by_N = mkN "go-by" "IRREG";
lin go_cart_N = mkN "go-cart" "go-carts";
lin go_getter_N = mkN "go-getter" "go-getters";
lin go_kart_N = mkN "go-kart" "go-karts";
lin go_slow_N = mkN "go-slow" "go-slows";
lin go_to_meeting_A = compoundA (mkA "go-to-meeting");
lin goad_N = mkN "goad" "goads";
lin goad_V2 = mkV2 (mkV "goad" "goads" "goaded" "goaded" "goading");
lin goal_N = mkN "goal" "goals";
lin goal_kick_N = mkN "goal-kick" "goal-kicks";
lin goal_line_N = mkN "goal-line" "goal-lines";
lin goalie_N = mkN "goalie" "goalies";
lin goalkeeper_N = mkN "goalkeeper" "goalkeepers";
lin goalless_A = compoundA (mkA "goalless");
lin goalmouth_N = mkN "goalmouth" "goalmouths";
lin goalpost_N = mkN "goalpost" ;
lin goat_N = mkN "goat" "goats";
lin goatee_N = mkN "goatee" "goatees";
lin goateed_A = mkA "goateed" ;
lin goatfish_N = mkN "goatfish" ;
lin goatherd_N = mkN "goatherd" "goatherds";
lin goatsfoot_N = mkN "goatsfoot" ;
lin goatskin_N = mkN "goatskin" "goatskins";
lin goatsucker_N = mkN "goatsucker" ;
lin gob_N = mkN "gob" "gobs";
lin gobbet_N = mkN "gobbet" "gobbets";
lin gobble_N = mkN "gobble" "gobbles";
lin gobble_V = mkV "gobble" "gobbles" "gobbled" "gobbled" "gobbling";
lin gobble_V2 = mkV2 (mkV "gobble" "gobbles" "gobbled" "gobbled" "gobbling");
lin gobbledygook_N = mkN "gobbledygook" ;
lin gobbler_N = mkN "gobbler" "gobblers";
lin goblet_N = mkN "goblet" "goblets";
lin goblin_N = mkN "goblin" "goblins";
lin gobsmacked_A = mkA "gobsmacked" ;
lin goby_N = mkN "goby" ;
lin god_N = mkN masculine (mkN "god" "gods");
lin god_PN = mkPN "God";
lin god_damn_A = compoundA (mkA "god-damn");
lin god_damned_A = compoundA (mkA "god-damned");
lin godalming_PN = mkPN "Godalming";
lin godchild_N = mkN "godchild" "godchildren";
lin goddam_A = compoundA (mkA "goddam");
lin goddam_Adv = mkAdv "goddam";
lin goddaughter_N = mkN "goddaughter" "goddaughters";
lin goddess_N = mkN feminine (mkN "goddess" "goddesses");
lin godfather_N = mkN "godfather" "godfathers";
lin godfearing_A = compoundA (mkA "godfearing");
lin godforsaken_A = compoundA (mkA "godforsaken");
lin godfrey_PN = mkPN "Godfrey";
lin godhead_N = mkN "godhead" ;
lin godless_A = compoundA (mkA "godless");
lin godlessness_N = mkN "godlessness" ;
lin godlike_A = compoundA (mkA "godlike");
lin godliness_N = mkN "godliness" ;
lin godly_A = mkA "godly" "godlier";
lin godmanchester_PN = mkPN "Godmanchester";
lin godmother_N = mkN "godmother" "godmothers";
lin godown_N = mkN "godown" "godowns";
lin godparent_N = mkN "godparent" "godparents";
lin godsend_N = mkN "godsend" "godsends";
lin godson_N = mkN "godson" "godsons";
lin godspeed_N = mkN "godspeed" ;
lin godwit_N = mkN "godwit" ;
lin goethite_N = mkN "goethite" ;
lin gofer_N = mkN "gofer" ;
lin goffer_N = mkN "goffer" ;
lin goffs_oak_PN = mkPN "Goffs oak";
lin goggle_V = mkV "goggle" "goggles" "goggled" "goggled" "goggling";
lin goggle_box_N = mkN "goggle-box" "goggle-boxes";
lin goggle_eyed_A = compoundA (mkA "goggle-eyed");
lin goggles_N = mkN "goggles" ;
lin going_N = mkN "going" "goings";
lin going_over_N = mkN "going-over" "going-overs";
lin goiter_N = mkN "goiter" ;
lin goitre_N = mkN "goitre" "goitres";
lin goitrogen_N = mkN "goitrogen" ;
lin golbourne_PN = mkPN "Golbourne";
lin gold_A = mkA "gold" ;
lin gold_N = mkN "gold" ;
lin gold_beater_N = mkN "gold-beater" "gold-beaters";
lin gold_digger_N = mkN "gold-digger" "gold-diggers";
lin gold_dust_N = mkN "gold-dust" ;
lin gold_foil_N = mkN "gold-foil" ;
lin gold_leaf_N = mkN "gold-leaf" ;
lin gold_plate_N = mkN "gold-plate" ;
lin gold_rush_N = mkN "gold-rush" "gold-rushes";
lin goldbeater_N = mkN "goldbeater" ;
lin goldbrick_N = mkN "goldbrick" ;
lin goldcrest_N = mkN "goldcrest" ;
lin golden_A = compoundA (mkA "golden");
lin goldenbush_N = mkN "goldenbush" ;
lin goldeneye_N = mkN "goldeneye" ;
lin goldenrod_N = mkN "goldenrod" ;
lin goldenseal_N = mkN "goldenseal" ;
lin goldfield_N = mkN "goldfield" "goldfields";
lin goldfields_N = mkN "goldfields" ;
lin goldfinch_N = mkN "goldfinch" "goldfinches";
lin goldfish_N = mkN "goldfish" "goldfish";
lin goldilocks_N = mkN "goldilocks" ;
lin goldmine_N = mkN "goldmine" "goldmines";
lin goldsmith_N = mkN "goldsmith" "goldsmiths";
lin goldstone_N = mkN "goldstone" ;
lin goldthread_N = mkN "goldthread" ;
lin golem_N = mkN "golem" ;
lin golf_N = mkN "golf" ;
lin golf_V = mkV "golf" "golfs" "golfed" "golfed" "golfing";
lin golf_ball_N = mkN "golf-ball" "golf-balls";
lin golf_club_N = mkN "golf-club" "golf-clubs";
lin golf_course_N = mkN "golf-course" "golf-courses";
lin golf_links_N = mkN "golf-links" "golf-links";
lin golfcart_N = mkN "golfcart" ;
lin golfer_N = mkN "golfer" "golfers";
lin golfing_N = mkN "golfing" ;
lin goliard_N = mkN "goliard" ;
lin goliath_N = mkN "goliath" "goliaths";
lin golliwog_N = mkN "golliwog" "golliwogs";
lin golly_Interj = ss "golly";
lin golosh_N = mkN "golosh" "goloshes";
lin gomphothere_N = mkN "gomphothere" ;
lin gonad_N = mkN "gonad" ;
lin gonadal_A = mkA "gonadal" ;
lin gonadotropic_A = mkA "gonadotropic" ;
lin gonadotropin_N = mkN "gonadotropin" ;
lin gondola_N = mkN "gondola" "gondolas";
lin gondolier_N = mkN human (mkN "gondolier" "gondoliers");
lin goner_N = mkN "goner" "goners";
lin gong_N = mkN "gong" "gongs";
lin gong_V2 = mkV2 (mkV "gong" "gongs" "gonged" "gonged" "gonging");
lin gonif_N = mkN "gonif" ;
lin goniometer_N = mkN "goniometer" ;
lin gonion_N = mkN "gonion" ;
lin gonioscopy_N = mkN "gonioscopy" ;
lin gonococcus_N = mkN "gonococcus" ;
lin gonorrhea_N = mkN "gonorrhea" ;
lin gonorrhoea_N = mkN "gonorrhoea" ;
lin goo_N = mkN "goo" ;
lin good_A = mkA "good" "better" "best" "well";
lin good_N = mkN "good" ;
lin good_afternoon_Interj = ss "good afternoon";
lin good_evening_Interj = ss "good evening";
lin good_fellowship_N = mkN "good-fellowship" ;
lin good_for_naught_A = compoundA (mkA "good-for-naught");
lin good_for_naught_N = mkN "good-for-naught" "good-for-naughts";
lin good_for_nothing_A = compoundA (mkA "good-for-nothing");
lin good_for_nothing_N = mkN "good-for-nothing" "good-for-nothings";
lin good_humoured_A = compoundA (mkA "good-humoured");
lin good_looking_A = compoundA (mkA "good-looking");
lin good_luck_Interj = ss "good luck";
lin good_morning_Interj = ss "good morning";
lin good_natured_A = compoundA (mkA "good-natured");
lin good_neighbourliness_N = mkN "good-neighbourliness" ;
lin good_night_Interj = ss "good night";
lin good_tempered_A = compoundA (mkA "good-tempered");
lin good_time_A = compoundA (mkA "good-time");
lin goodbye_Interj = ss (variants {"goodbye"; "good-bye"});
lin goodish_A = compoundA (mkA "goodish");
lin goodly_A = mkA "goodly" "goodlier";
lin goodness_N = mkN "goodness" ;
lin goodwill_N = mkN "goodwill" ;
lin goody_N = mkN "goody" "goodies";
lin goody_goody_A = compoundA (mkA "goody-goody");
lin goody_goody_N = mkN "goody-goody" "goody-goodies";
lin gooey_A = mkA "gooey" "gooeyyer";
lin goof_N = mkN "goof" "goofs";
lin goof_V = mkV "goof" "goofs" "goofed" "goofed" "goofing";
lin goof_V2 = mkV2 (mkV "goof" "goofs" "goofed" "goofed" "goofing");
lin goofy_A = mkA "goofy" "goofier";
lin googly_N = mkN "googly" "googlies";
lin googol_N = mkN "googol" ;
lin googolplex_N = mkN "googolplex" ;
lin gook_N = mkN "gook" ;
lin goole_PN = mkPN "Goole";
lin goon_N = mkN "goon" "goons";
lin goosander_N = mkN "goosander" ;
lin goose_N = mkN "goose" "IRREG";
lin goose_flesh_N = mkN "goose-flesh" ;
lin goose_step_N = mkN "goose-step" "goose-steps";
lin gooseberry_N = mkN "gooseberry" "gooseberries";
lin goosefish_N = mkN "goosefish" ;
lin goosefoot_N = mkN "goosefoot" ;
lin gooseneck_N = mkN "gooseneck" ;
lin gopher_N = mkN "gopher" "gophers";
lin goral_N = mkN "goral" ;
lin gordian_A = compoundA (mkA "gordian");
lin gordon_PN = mkPN "Gordon";
lin gore_N = mkN "gore" ;
lin gore_V2 = mkV2 (mkV "gore" "gores" "gored" "gored" "goring");
lin gorge_N = mkN "gorge" "gorges";
lin gorge_V = mkV "gorge" "gorges" "gorged" "gorged" "gorging";
lin gorge_V2 = mkV2 (mkV "gorge" "gorges" "gorged" "gorged" "gorging");
lin gorgeous_A = compoundA (mkA "gorgeous");
lin gorgerin_N = mkN "gorgerin" ;
lin gorget_N = mkN "gorget" ;
lin gorgon_N = mkN "gorgon" "gorgons";
lin gorgonian_N = mkN "gorgonian" ;
lin gorgonzola_N = mkN "gorgonzola" ;
lin gorilla_N = mkN "gorilla" "gorillas";
lin gorky_PN = mkPN "Gorky";
lin gormandize_V = mkV "gormandize" "gormandizes" "gormandized" "gormandized" "gormandizing";
lin gormless_A = compoundA (mkA "gormless");
lin gorse_N = mkN "gorse" ;
lin gorseinon_PN = mkPN "Gorseinon";
lin gory_A = mkA "gory" "gorier";
lin goshawk_N = mkN "goshawk" ;
lin gosling_N = mkN "gosling" "goslings";
lin gospel_N = mkN "gospel" "gospels";
lin gosport_PN = mkPN "Gosport";
lin gossamer_N = mkN "gossamer" "gossamers";
lin gossip_N = mkN "gossip" "gossips";
lin gossip_V = mkV "gossip" "gossips" "gossiped" "gossiped" "gossiping";
lin gossiping_N = mkN "gossiping" ;
lin goteborg_PN = mkPN "Goteborg";
lin goth_N = mkN "goth" "goths";
lin gothenburg_PN = mkPN "Gothenburg";
lin gothic_A = compoundA (mkA "gothic");
lin gothic_N = mkN "gothic" ;
lin gottingen_PN = mkPN "Gottingen";
lin gouache_N = mkN "gouache" ;
lin gouge_N = mkN "gouge" "gouges";
lin gouge_V2 = mkV2 (mkV "gouge" "gouges" "gouged" "gouged" "gouging");
lin gouger_N = mkN "gouger" ;
lin goulash_N = mkN "goulash" "goulashes";
lin gourd_N = mkN "gourd" "gourds";
lin gourde_N = mkN "gourde" ;
lin gourmand_N = mkN "gourmand" "gourmands";
lin gourmandism_N = mkN "gourmandism" ;
lin gourmet_N = mkN "gourmet" "gourmets";
lin gourock_PN = mkPN "Gourock";
lin gout_N = mkN "gout" ;
lin gouty_A = mkA "gouty" "goutier";
lin gov_PN = mkPN "Gov";
lin govern_V = mkV "govern" "governs" "governed" "governed" "governing";
lin govern_V2 = mkV2 (mkV "govern" "governs" "governed" "governed" "governing");
lin governance_N = mkN "governance" ;
lin governed_N = mkN "governed" ;
lin governess_N = mkN "governess" "governesses";
lin government_N = mkN "government" "governments";
lin governmental_A = compoundA (mkA "governmental");
lin governor_N = mkN human (mkN "governor" "governors");
lin governor_general_N = mkN "governor-general" "governor-generals";
lin governorship_N = mkN "governorship" ;
lin govt_N = mkN "govt" ;
lin gown_N = mkN "gown" "gowns";
lin gown_V2 = mkV2 (mkV "gown" "gowns" "gowned" "gowned" "gowning");
lin gp_N = mkN "gp" "gp's";
lin grab_N = mkN "grab" "grabs";
lin grab_V = mkV "grab" "grabs" "grabbed" "grabbed" "grabbing";
lin grab_V2 = mkV2 (mkV "grab" "grabs" "grabbed" "grabbed" "grabbing");
lin grabber_N = mkN "grabber" "grabbers";
lin grace_N = mkN "grace" "graces";
lin grace_V2 = mkV2 (mkV "grace" "graces" "graced" "graced" "gracing");
lin graceful_A = compoundA (mkA "graceful");
lin gracefulness_N = mkN "gracefulness" ;
lin graceless_A = compoundA (mkA "graceless");
lin gracelessness_N = mkN "gracelessness" ;
lin gracilariid_N = mkN "gracilariid" ;
lin gracile_A = mkA "gracile" ;
lin gracious_A = compoundA (mkA "gracious");
lin graciousness_N = mkN "graciousness" ;
lin grackle_N = mkN "grackle" ;
lin grad_N = mkN "grad" ;
lin gradable_A = mkA "gradable" ;
lin gradation_N = mkN "gradation" "gradations";
lin gradational_A = mkA "gradational" ;
lin grade_N = mkN "grade" "grades";
lin grade_V2 = mkV2 (mkV "grade" "grades" "graded" "graded" "grading");
lin grader_N = mkN "grader" ;
lin gradient_N = mkN "gradient" "gradients";
lin grading_N = mkN "grading" ;
lin gradual_A = compoundA (mkA "gradual");
lin gradual_N = mkN "gradual" ;
lin graduality_N = mkN "graduality" ;
lin gradualness_N = mkN "gradualness" ;
lin graduate_N = mkN "graduate" "graduates";
lin graduate_V = mkV "graduate" "graduates" "graduated" "graduated" "graduating";
lin graduate_V2 = mkV2 (mkV "graduate" "graduates" "graduated" "graduated" "graduating");
lin graduation_N = mkN "graduation" "graduations";
lin graffito_N = mkN "graffito" "graffiti";
lin graft_N = mkN "graft" "grafts";
lin graft_V = mkV "graft" "grafts" "grafted" "grafted" "grafting";
lin graft_V2 = mkV2 (mkV "graft" "grafts" "grafted" "grafted" "grafting");
lin grail_N = mkN "grail" "grails";
lin grain_N = mkN "grain" "grains";
lin grained_A = compoundA (mkA "grained");
lin grainfield_N = mkN "grainfield" ;
lin graining_N = mkN "graining" ;
lin gram_N = mkN "gram" "grams";
lin grama_N = mkN "grama" ;
lin gramicidin_N = mkN "gramicidin" ;
lin grammar_N = mkN "grammar" "grammars";
lin grammarian_N = mkN "grammarian" "grammarians";
lin grammatical_A = compoundA (mkA "grammatical");
lin gramme_N = mkN "gramme" "grammes";
lin gramophone_N = mkN "gramophone" "gramophones";
lin grampian_PN = mkPN "Grampian";
lin grampus_N = mkN "grampus" "grampuses";
lin granada_PN = mkPN "Granada";
lin granadilla_N = mkN "granadilla" ;
lin granary_N = mkN "granary" "granaries";
lin grand_A = mkA "grand" "grander";
lin grand_prix_N = mkN "grand prix" "grand prices";
lin grandad_N = mkN "grandad" "grandads";
lin grandaunt_N = mkN "grandaunt" "grandaunts";
lin grandchild_N = mkN human (mkN "grandchild" "grandchildren");
lin granddad_N = mkN "granddad" "granddads";
lin granddaughter_N = mkN "granddaughter" "granddaughters";
lin grandee_N = mkN "grandee" "grandees";
lin grandeur_N = mkN "grandeur" ;
lin grandfather_N = mkN "grandfather" "grandfathers";
lin grandiloquence_N = mkN "grandiloquence" ;
lin grandiloquent_A = compoundA (mkA "grandiloquent");
lin grandiose_A = compoundA (mkA "grandiose");
lin grandiosity_N = mkN "grandiosity" ;
lin grandma_N = mkN "grandma" "grandmas";
lin grandmaster_N = mkN "grandmaster" ;
lin grandmother_N = mkN "grandmother" "grandmothers";
lin grandnephew_N = mkN "grandnephew" "grandnephews";
lin grandniece_N = mkN "grandniece" "grandnieces";
lin grandpa_N = mkN "grandpa" "grandpas";
lin grandparent_N = mkN "grandparent" "grandparents";
lin grandson_N = mkN "grandson" "grandsons";
lin grandstand_N = mkN "grandstand" "grandstands";
lin grandstander_N = mkN "grandstander" ;
lin granduncle_N = mkN "granduncle" "granduncles";
lin grange_N = mkN "grange" "granges";
lin grangemouth_PN = mkPN "Grangemouth";
lin granite_N = mkN "granite" ;
lin graniteware_N = mkN "graniteware" ;
lin granitic_A = mkA "granitic" ;
lin grannie_N = mkN "grannie" "grannies";
lin granny_N = mkN "granny" "grannies";
lin granola_N = mkN "granola" ;
lin grant_N = mkN "grant" "grants";
lin grant_V2 = mkV2 (mkV "grant");
lin grant_V3 = mkV3 (mkV "grant") noPrep noPrep;
lin grantee_N = mkN "grantee" ;
lin granter_N = mkN "granter" ;
lin grantham_PN = mkPN "Grantham";
lin grantor_N = mkN "grantor" ;
lin granular_A = compoundA (mkA "granular");
lin granularity_N = mkN "granularity" ;
lin granulate_V = mkV "granulate" "granulates" "granulated" "granulated" "granulating";
lin granulate_V2 = mkV2 (mkV "granulate" "granulates" "granulated" "granulated" "granulating");
lin granulation_N = mkN "granulation" ;
lin granule_N = mkN "granule" "granules";
lin granuliferous_A = mkA "granuliferous" ;
lin granulocyte_N = mkN "granulocyte" ;
lin granulocytic_A = mkA "granulocytic" ;
lin granuloma_N = mkN "granuloma" ;
lin granulomatous_A = mkA "granulomatous" ;
lin grape_N = mkN "grape" "grapes";
lin grape_sugar_N = mkN "grape-sugar" ;
lin grapefruit_N = mkN "grapefruit" "grapefruit";
lin grapelike_A = mkA "grapelike" ;
lin grapeshot_N = mkN "grapeshot" ;
lin grapevine_N = mkN "grapevine" "grapevines";
lin grapey_A = mkA "grapey" ;
lin graph_N = mkN "graph" "graphs";
lin graphic_A = compoundA (mkA "graphic");
lin graphic_N = mkN "graphic" ;
lin graphical_A = compoundA (mkA "graphical");
lin graphics_N = mkN "graphics" "graphics";
lin graphite_N = mkN "graphite" ;
lin graphologist_N = mkN "graphologist" ;
lin graphology_N = mkN "graphology" ;
lin grapnel_N = mkN "grapnel" "grapnels";
lin grappa_N = mkN "grappa" ;
lin grapple_V = mkV "grapple" "grapples" "grappled" "grappled" "grappling";
lin grappling_iron_N = mkN "grappling-iron" "grappling-irons";
lin grasp_N = mkN "grasp" "grasps";
lin grasp_V = mkV "grasp" "grasps" "grasped" "grasped" "grasping";
lin grasp_V2 = mkV2 (mkV "grasp" "grasps" "grasped" "grasped" "grasping");
lin grasping_N = mkN "grasping" ;
lin grass_N = mkN "grass" "grasses";
lin grass_V = mkV "grass" "grasses" "grassed" "grassed" "grassing";
lin grass_V2 = mkV2 (mkV "grass" "grasses" "grassed" "grassed" "grassing");
lin grassfinch_N = mkN "grassfinch" ;
lin grassfire_N = mkN "grassfire" ;
lin grasshopper_N = mkN "grasshopper" "grasshoppers";
lin grassland_N = mkN "grassland" "grasslands";
lin grassless_A = mkA "grassless" ;
lin grasslike_A = mkA "grasslike" ;
lin grassroots_A = mkA "grassroots" ;
lin grassy_A = mkA "grassy" "grassier";
lin grate_N = mkN "grate" "grates";
lin grate_V = mkV "grate" "grates" "grated" "grated" "grating";
lin grate_V2 = mkV2 (mkV "grate" "grates" "grated" "grated" "grating");
lin grateful_A = compoundA (mkA "grateful");
lin gratefulness_N = mkN "gratefulness" ;
lin grater_N = mkN "grater" "graters";
lin gratification_N = mkN "gratification" "gratifications";
lin gratify_V2 = mkV2 (mkV "gratify" "gratifies" "gratified" "gratified" "gratifying");
lin gratifying_A = compoundA (mkA "gratifying");
lin grating_N = mkN "grating" "gratings";
lin gratingly_Adv = mkAdv "gratingly";
lin gratis_A = compoundA (mkA "gratis");
lin gratis_Adv = mkAdv "gratis";
lin gratitude_N = mkN "gratitude" ;
lin gratuitous_A = compoundA (mkA "gratuitous");
lin gratuity_N = mkN "gratuity" "gratuities";
lin grave_A = mkA "grave" "graver";
lin grave_N = mkN "grave" "graves";
lin grave_V2 = mkV2 (mkV "grave" "IRREG" "IRREG" "IRREG" "IRREG");
lin gravedigger_N = mkN "gravedigger" ;
lin gravel_N = mkN "gravel" ;
lin gravel_V2 = mkV2 (mkV "gravel" "gravels" "gravelled" "gravelled" "gravelling");
lin gravelly_A = compoundA (mkA "gravelly");
lin gravelweed_N = mkN "gravelweed" ;
lin graven_A = compoundA (mkA "graven");
lin graveness_N = mkN "graveness" ;
lin gravenhage_PN = mkPN "Gravenhage";
lin graver_N = mkN "graver" ;
lin graverobber_N = mkN "graverobber" ;
lin gravesend_PN = mkPN "Gravesend";
lin gravestone_N = mkN "gravestone" "gravestones";
lin graveyard_N = mkN "graveyard" "graveyards";
lin gravida_N = mkN "gravida" ;
lin gravidity_N = mkN "gravidity" ;
lin gravimeter_N = mkN "gravimeter" ;
lin graving_dock_N = mkN "graving dock" "graving docks";
lin gravitate_V = mkV "gravitate" "gravitates" "gravitated" "gravitated" "gravitating";
lin gravitation_N = mkN "gravitation" ;
lin gravitational_A = mkA "gravitational" ;
lin graviton_N = mkN "graviton" ;
lin gravity_N = mkN "gravity" ;
lin gravure_N = mkN "gravure" "gravures";
lin gravy_N = mkN "gravy" ;
lin gravy_boat_N = mkN "gravy-boat" "gravy-boats";
lin gray_A = mkA "gray" "grayer";
lin gray_N = mkN "gray" "grays";
lin gray_V = mkV "gray" "grays" "grayed" "grayed" "graying";
lin gray_V2 = mkV2 (mkV "gray" "grays" "grayed" "grayed" "graying");
lin grayly_Adv = mkAdv "grayly" ;
lin graz_PN = mkPN "Graz";
lin graze_N = mkN "graze" "grazes";
lin graze_V = mkV "graze" "grazes" "grazed" "grazed" "grazing";
lin graze_V2 = mkV2 (mkV "graze" "grazes" "grazed" "grazed" "grazing");
lin grazier_N = mkN "grazier" "graziers";
lin grazing_N = mkN "grazing" ;
lin grazing_land_N = mkN "grazing-land" "grazing-lands";
lin grease_N = mkN "grease" ;
lin grease_V2 = mkV2 (mkV "grease" "greases" "greased" "greased" "greasing");
lin grease_gun_N = mkN "grease-gun" "grease-guns";
lin greasepaint_N = mkN "greasepaint" ;
lin greaseproof_A = compoundA (mkA "greaseproof");
lin greaser_N = mkN "greaser" "greasers";
lin greasewood_N = mkN "greasewood" ;
lin greasiness_N = mkN "greasiness" ;
lin greasy_A = mkA "greasy" "greasier";
lin great_A = mkA "great" "greater";
lin great_N = mkN "great" ;
lin great_harwood_PN = mkPN "Great harwood";
lin great_malvern_PN = mkPN "Great malvern";
lin great_shelford_PN = mkPN "Great shelford";
lin great_yarmouth_PN = mkPN "Great yarmouth";
lin greatcoat_N = mkN "greatcoat" "greatcoats";
lin greater_A = mkA "greater" ;
lin greatest_A = mkA "greatest" ;
lin greathearted_A = mkA "greathearted" ;
lin greatness_N = mkN "greatness" ;
lin greave_N = mkN "greave" ;
lin greaves_N = mkN "greaves" ;
lin grebe_N = mkN "grebe" "grebes";
lin grecian_A = compoundA (mkA "grecian");
lin greece_PN = mkPN "Greece";
lin greed_N = mkN "greed" ;
lin greediness_N = mkN "greediness" ;
lin greedy_A = mkA "greedy" "greedier";
lin greek_A = compoundA (mkA "Greek");
lin greek_N = mkN "Greek" "Greeks";
lin green_A = mkA "green" "greener";
lin green_N = mkN "green" "greens";
lin greenback_N = mkN "greenback" "greenbacks";
lin greenbelt_N = mkN "greenbelt" ;
lin greenbottle_N = mkN "greenbottle" ;
lin greenery_N = mkN "greenery" ;
lin greeneye_N = mkN "greeneye" ;
lin greeneyed_A = compoundA (mkA "greeneyed");
lin greenfly_N = mkN "greenfly" ;
lin greengage_N = mkN "greengage" "greengages";
lin greengrocer_N = mkN "greengrocer" "greengrocers";
lin greengrocery_N = mkN "greengrocery" "greengroceries";
lin greenhorn_N = mkN "greenhorn" "greenhorns";
lin greenhouse_A = mkA "greenhouse" ;
lin greenhouse_N = mkN "greenhouse" "greenhouses";
lin greenish_A = compoundA (mkA "greenish");
lin greenishness_N = mkN "greenishness" ;
lin greenling_N = mkN "greenling" ;
lin greenmail_N = mkN "greenmail" ;
lin greenness_N = mkN "greenness" ;
lin greenock_PN = mkPN "Greenock";
lin greenockite_N = mkN "greenockite" ;
lin greenroom_N = mkN "greenroom" ;
lin greens_N = mkN "greens" ;
lin greensand_N = mkN "greensand" ;
lin greenshank_N = mkN "greenshank" ;
lin greenside_A = mkA "greenside" ;
lin greenskeeper_N = mkN "greenskeeper" ;
lin greensward_N = mkN "greensward" ;
lin greenwich_PN = mkPN "Greenwich";
lin greenwing_N = mkN "greenwing" ;
lin greenwood_N = mkN "greenwood" "greenwoods";
lin greet_V2 = mkV2 (mkV "greet" "greets" "greeted" "greeted" "greeting");
lin greeter_N = mkN "greeter" ;
lin greeting_N = mkN "greeting" "greetings";
lin greg_PN = mkPN "Greg";
lin gregarine_N = mkN "gregarine" ;
lin gregarious_A = compoundA (mkA "gregarious");
lin gregariousness_N = mkN "gregariousness" ;
lin gregorian_A = compoundA (mkA "gregorian");
lin gregory_PN = mkPN "Gregory";
lin greisen_N = mkN "greisen" ;
lin gremlin_N = mkN "gremlin" "gremlins";
lin grenada_PN = mkPN "Grenada";
lin grenade_N = mkN "grenade" "grenades";
lin grenadian_A = compoundA (mkA "grenadian");
lin grenadian_N = mkN "grenadian" "grenadians";
lin grenadier_N = mkN "grenadier" "grenadiers";
lin grenadine_N = mkN "grenadine" ;
lin grevillea_N = mkN "grevillea" ;
lin grey_A = mkA "grey" "greyer";
lin grey_N = mkN "grey" "greys";
lin grey_V = mkV "grey" "greys" "greyed" "greyed" "greying";
lin grey_V2 = mkV2 (mkV "grey" "greys" "greyed" "greyed" "greying");
lin grey_headed_A = compoundA (mkA "grey-headed");
lin greyback_N = mkN "greyback" ;
lin greybeard_N = mkN "greybeard" "greybeards";
lin greyhen_N = mkN "greyhen" ;
lin greyhound_N = mkN "greyhound" "greyhounds";
lin greyish_A = compoundA (mkA "greyish");
lin greylag_N = mkN "greylag" ;
lin grid_N = mkN "grid" "grids";
lin griddle_N = mkN "griddle" "griddles";
lin gridiron_N = mkN "gridiron" "gridirons";
lin gridlock_N = mkN "gridlock" ;
lin grief_N = mkN "grief" "griefs";
lin grievance_N = mkN "grievance" "grievances";
lin grieve_V = mkV "grieve" "grieves" "grieved" "grieved" "grieving";
lin grieve_V2 = mkV2 (mkV "grieve" "grieves" "grieved" "grieved" "grieving");
lin grievous_A = compoundA (mkA "grievous");
lin griffin_N = mkN "griffin" "griffins";
lin griffon_N = mkN "griffon" "griffons";
lin grigri_N = mkN "grigri" ;
lin grill_N = mkN "grill" "grills";
lin grill_V = mkV "grill" "grills" "grilled" "grilled" "grilling";
lin grill_V2 = mkV2 (mkV "grill" "grills" "grilled" "grilled" "grilling");
lin grille_N = mkN "grille" "grilles";
lin grillroom_N = mkN "grillroom" "grillrooms";
lin grim_A = mkA "grim" "grimmer";
lin grimace_N = mkN "grimace" "grimaces";
lin grimace_V = mkV "grimace" "grimaces" "grimaced" "grimaced" "grimacing";
lin grime_N = mkN "grime" ;
lin grime_V2 = mkV2 (mkV "grime" "grimes" "grimed" "grimed" "griming");
lin grimethorpe_PN = mkPN "Grimethorpe";
lin griminess_N = mkN "griminess" ;
lin grimness_N = mkN "grimness" ;
lin grimoire_N = mkN "grimoire" ;
lin grimsby_PN = mkPN "Grimsby";
lin grimy_A = mkA "grimy" "grimier";
lin grin_N = mkN "grin" "grins";
lin grin_V = mkV "grin" "grins" "grinned" "grinned" "grinning";
lin grin_V2 = mkV2 (mkV "grin" "grins" "grinned" "grinned" "grinning");
lin grind_N = mkN "grind" "grinds";
lin grind_V = IrregEng.grind_V;
lin grind_V2 = mkV2 (IrregEng.grind_V);
lin grinder_N = mkN "grinder" "grinders";
lin grinding_N = mkN "grinding" ;
lin grindstone_N = mkN "grindstone" "grindstones";
lin gringo_N = mkN "gringo" ;
lin grinner_N = mkN "grinner" ;
lin grinstead_PN = mkPN "Grinstead";
lin griot_N = mkN "griot" ;
lin grip_N = mkN "grip" "grips";
lin grip_V = mkV "grip" "grips" "gripped" "gripped" "gripping";
lin grip_V2 = mkV2 (mkV "grip" "grips" "gripped" "gripped" "gripping");
lin gripe_N = mkN "gripe" ;
lin gripe_VS = mkVS (mkV "gripe");
lin grippe_N = mkN "grippe" "grippes";
lin gripsack_N = mkN "gripsack" "gripsacks";
lin grisaille_N = mkN "grisaille" ;
lin griseofulvin_N = mkN "griseofulvin" ;
lin grisly_A = compoundA (mkA "grisly");
lin grison_N = mkN "grison" ;
lin grissino_N = mkN "grissino" ;
lin grist_N = mkN "grist" ;
lin gristle_N = mkN "gristle" ;
lin gristmill_N = mkN "gristmill" ;
lin grit_N = mkN "grit" ;
lin grit_V2 = mkV2 (mkV "grit" "grits" "gritted" "gritted" "gritting");
lin grits_N = mkN "grits" "grits";
lin gritty_A = mkA "gritty" "grittier";
lin grivet_N = mkN "grivet" ;
lin grizzle_N = mkN "grizzle" ;
lin grizzle_V = mkV "grizzle" "grizzles" "grizzled" "grizzled" "grizzling";
lin grizzled_A = compoundA (mkA "grizzled");
lin grizzly_N = mkN "grizzly" "grizzlies";
lin groan_N = mkN "groan" "groans";
lin groan_V = mkV "groan" "groans" "groaned" "groaned" "groaning";
lin groan_V2 = mkV2 (mkV "groan" "groans" "groaned" "groaned" "groaning");
lin groaner_N = mkN "groaner" ;
lin groat_N = mkN "groat" "groats";
lin groats_N = mkN "groats" ;
lin grocer_N = mkN "grocer" "grocers";
lin grocery_N = mkN "grocery" "groceries";
lin groenendael_N = mkN "groenendael" ;
lin grog_N = mkN "grog" ;
lin grogginess_N = mkN "grogginess" ;
lin groggy_A = mkA "groggy" "groggier";
lin grogram_N = mkN "grogram" ;
lin groin_N = mkN "groin" "groins";
lin groin_V2 = mkV2 (mkV "groin" "groins" "groined" "groined" "groining");
lin gromwell_N = mkN "gromwell" ;
lin groningen_PN = mkPN "Groningen";
lin groom_N = mkN "groom" "grooms";
lin groom_V2 = mkV2 (mkV "groom" "grooms" "groomed" "groomed" "grooming");
lin groomsman_N = mkN "groomsman" ;
lin groove_N = mkN "groove" "grooves";
lin groove_V2 = mkV2 (mkV "groove" "grooves" "grooved" "grooved" "grooving");
lin groover_N = mkN "groover" "groovers";
lin grooving_N = mkN "grooving" ;
lin groovy_A = mkA "groovy" "groovier";
lin grope_N = mkN "grope" ;
lin grope_V = mkV "grope" "gropes" "groped" "groped" "groping";
lin grope_V2 = mkV2 (mkV "grope" "gropes" "groped" "groped" "groping");
lin gropingly_Adv = mkAdv "gropingly";
lin grosbeak_N = mkN "grosbeak" ;
lin groschen_N = mkN "groschen" ;
lin grosgrain_N = mkN "grosgrain" ;
lin gross_A = compoundA (mkA "gross");
lin gross_N = mkN "gross" "gross";
lin gross_V2 = mkV2 (mkV "gross" "grosses" "grossed" "grossed" "grossing");
lin grossness_N = mkN "grossness" ;
lin grosz_N = mkN "grosz" ;
lin grot_N = mkN "grot" "grots";
lin grotesque_A = compoundA (mkA "grotesque");
lin grotesque_N = mkN "grotesque" "grotesques";
lin grotesqueness_N = mkN "grotesqueness" ;
lin grotto_N = mkN "grotto" "grottos";
lin grotty_A = mkA "grotty" "grottier";
lin grouch_N = mkN "grouch" "grouches";
lin grouch_V = mkV "grouch" "grouches" "grouched" "grouched" "grouching";
lin grouchy_A = mkA "grouchy" "grouchier";
lin ground_N = mkN "ground" "grounds";
lin ground_V = mkV "ground" "grounds" "grounded" "grounded" "grounding";
lin ground_V2 = mkV2 (mkV "ground" "grounds" "grounded" "grounded" "grounding");
lin ground_bait_N = mkN "ground-bait" ;
lin ground_fish_N = mkN "ground-fish" "ground-fish";
lin ground_plan_N = mkN "ground-plan" "ground-plans";
lin ground_rent_N = mkN "ground-rent" "ground-rents";
lin groundbreaking_N = mkN "groundbreaking" ;
lin groundcover_N = mkN "groundcover" ;
lin grounder_N = mkN "grounder" ;
lin groundfish_N = mkN "groundfish" ;
lin groundhog_N = mkN "groundhog" ;
lin grounding_N = mkN "grounding" "groundings";
lin groundless_A = compoundA (mkA "groundless");
lin groundlessness_N = mkN "groundlessness" ;
lin groundling_N = mkN "groundling" ;
lin groundmass_N = mkN "groundmass" ;
lin groundnut_N = mkN "groundnut" "groundnuts";
lin grounds_N = mkN "grounds" ;
lin groundsel_N = mkN "groundsel" ;
lin groundsheet_N = mkN "groundsheet" "groundsheets";
lin groundsman_N = mkN masculine (mkN "groundsman" "groundsmen");
lin groundspeed_N = mkN "groundspeed" ;
lin groundwork_N = mkN "groundwork" ;
lin group_N = mkN "group" "groups";
lin group_V = mkV "group" "groups" "grouped" "grouped" "grouping";
lin group_V2 = mkV2 (mkV "group" "groups" "grouped" "grouped" "grouping");
lin grouper_N = mkN "grouper" ;
lin groupie_N = mkN "groupie" ;
lin grouping_N = mkN "grouping" "groupings";
lin groupthink_N = mkN "groupthink" ;
lin groupware_N = mkN "groupware" ;
lin grouse_N = mkN "grouse" "grouse";
lin grouse_V = mkV "grouse" "grouses" "groused" "groused" "grousing";
lin grouse_VS = mkVS (mkV "grouse" "grouses" "groused" "groused" "grousing");
lin grouseberry_N = mkN "grouseberry" ;
lin grout_N = mkN "grout" ;
lin grove_N = mkN "grove" "groves";
lin grovel_V = mkV "grovel" "grovels" "grovelled" "grovelled" "grovelling";
lin groveller_N = mkN "groveller" "grovellers";
lin grow_V = IrregEng.grow_V;
lin grow_V2 = mkV2 (IrregEng.grow_V);
lin grow_V2V = mkV2V (IrregEng.grow_V) noPrep to_Prep ;
lin grow_VA = mkVA (IrregEng.grow_V);
lin grow_VS = mkVS (IrregEng.grow_V);
lin grower_N = mkN "grower" "growers";
lin growing_N = mkN "growing" ;
lin growl_N = mkN "growl" "growls";
lin growl_V = mkV "growl" "growls" "growled" "growled" "growling";
lin growl_V2 = mkV2 (mkV "growl" "growls" "growled" "growled" "growling");
lin growler_N = mkN "growler" "growlers";
lin growling_N = mkN "growling" ;
lin growlingly_Adv = mkAdv "growlingly";
lin grown_up_A = compoundA (mkA "grown-up");
lin grown_up_N = mkN "grown-up" "grown-ups";
lin growth_N = mkN "growth" "growths";
lin groyne_N = mkN "groyne" "groynes";
lin grub_N = mkN "grub" "grubs";
lin grub_V = mkV "grub" "grubs" "grubbed" "grubbed" "grubbing";
lin grub_V2 = mkV2 (mkV "grub" "grubs" "grubbed" "grubbed" "grubbing");
lin grubbiness_N = mkN "grubbiness" ;
lin grubby_A = mkA "grubby" "grubbier";
lin grubby_N = mkN "grubby" ;
lin grubstake_N = mkN "grubstake" ;
lin grudge_N = mkN "grudge" "grudges";
lin grudge_V2 = mkV2 (mkV "grudge" "grudges" "grudged" "grudged" "grudging");
lin grudging_A = mkA "grudging" ;
lin gruel_N = mkN "gruel" ;
lin gruelling_A = compoundA (mkA "gruelling");
lin gruesome_A = compoundA (mkA "gruesome");
lin gruesomeness_N = mkN "gruesomeness" ;
lin gruff_A = mkA "gruff" "gruffer";
lin gruffness_N = mkN "gruffness" ;
lin grugru_N = mkN "grugru" ;
lin grumble_N = mkN "grumble" "grumbles";
lin grumble_V = mkV "grumble" "grumbles" "grumbled" "grumbled" "grumbling";
lin grumble_V2 = mkV2 (mkV "grumble" "grumbles" "grumbled" "grumbled" "grumbling");
lin grumble_VS = mkVS (mkV "grumble" "grumbles" "grumbled" "grumbled" "grumbling");
lin grumbler_N = mkN "grumbler" "grumblers";
lin grume_N = mkN "grume" ;
lin grumpiness_N = mkN "grumpiness" ;
lin grumpy_A = mkA "grumpy" "grumpier";
lin grundyism_N = mkN "grundyism" ;
lin grunt_N = mkN "grunt" "grunts";
lin grunt_V = mkV "grunt" "grunts" "grunted" "grunted" "grunting";
lin grunt_V2 = mkV2 (mkV "grunt" "grunts" "grunted" "grunted" "grunting");
lin grunter_N = mkN "grunter" ;
lin gryphon_N = mkN "gryphon" "gryphons";
lin guacamole_N = mkN "guacamole" ;
lin guadalajara_PN = mkPN "Guadalajara";
lin guaiacum_N = mkN "guaiacum" ;
lin guama_N = mkN "guama" ;
lin guan_N = mkN "guan" ;
lin guanabenz_N = mkN "guanabenz" ;
lin guanaco_N = mkN "guanaco" ;
lin guanine_N = mkN "guanine" ;
lin guano_N = mkN "guano" "guanos";
lin guar_N = mkN "guar" ;
lin guarani_N = mkN "guarani" ;
lin guarantee_N = mkN "guarantee" "guarantees";
lin guarantee_V = mkV "guarantee";
lin guarantee_V2 = mkV2 (mkV "guarantee");
lin guarantee_VS = mkVS (mkV "guarantee");
lin guarantor_N = mkN "guarantor" "guarantors";
lin guaranty_N = mkN "guaranty" "guaranties";
lin guard_N = mkN "guard" "guards";
lin guard_V = mkV "guard" "guards" "guarded" "guarded" "guarding";
lin guard_V2 = mkV2 (mkV "guard" "guards" "guarded" "guarded" "guarding");
lin guard_boat_N = mkN "guard-boat" "guard-boats";
lin guardhouse_N = mkN "guardhouse" "guardhouses";
lin guardian_N = mkN "guardian" "guardians";
lin guardianship_N = mkN "guardianship" "guardianships";
lin guardrail_N = mkN "guardrail" "guardrails";
lin guardroom_N = mkN "guardroom" "guardrooms";
lin guardship_N = mkN "guardship" "guardships";
lin guardsman_N = mkN masculine (mkN "guardsman" "guardsmen");
lin guatemala_PN = mkPN "Guatemala";
lin guatemala_city_PN = mkPN "Guatemala city";
lin guatemalan_A = compoundA (mkA "guatemalan");
lin guatemalan_N = mkN "guatemalan" "guatemalans";
lin guava_N = mkN "guava" "guavas";
lin guayaquil_PN = mkPN "Guayaquil";
lin guayule_N = mkN "guayule" ;
lin gubernatorial_A = mkA "gubernatorial" ;
lin gudgeon_N = mkN "gudgeon" "gudgeons";
lin guelder_rose_N = mkN "guelder rose" "guelder roses";
lin guenon_N = mkN "guenon" ;
lin guerdon_N = mkN "guerdon" ;
lin guereza_N = mkN "guereza" ;
lin gueridon_N = mkN "gueridon" ;
lin guerilla_N = mkN "guerilla" "guerillas";
lin guerrilla_N = mkN "guerrilla" "guerrillas";
lin guess_N = mkN "guess" "guesses";
lin guess_V = mkV "guess" "guesses" "guessed" "guessed" "guessing";
lin guess_V2 = mkV2 (mkV "guess" "guesses" "guessed" "guessed" "guessing");
lin guess_VS = mkVS (mkV "guess" "guesses" "guessed" "guessed" "guessing");
lin guesser_N = mkN "guesser" ;
lin guesstimate_N = mkN "guesstimate" "guesstimates";
lin guesswork_N = mkN "guesswork" ;
lin guest_N = mkN "guest" "guests";
lin guest_night_N = mkN "guest-night" "guest-nights";
lin guesthouse_N = mkN "guesthouse" "guesthouses";
lin guestroom_N = mkN "guestroom" "guestrooms";
lin guffaw_N = mkN "guffaw" "guffaws";
lin guffaw_V = mkV "guffaw" "guffaws" "guffawed" "guffawed" "guffawing";
lin guidance_N = mkN "guidance" ;
lin guide_N = mkN "guide" "guides";
lin guide_V2 = mkV2 (mkV "guide" "guides" "guided" "guided" "guiding");
lin guidebook_N = mkN "guidebook" "guidebooks";
lin guideline_N = mkN "guideline" "guidelines";
lin guidepost_N = mkN "guidepost" ;
lin guiding_A = mkA "guiding" ;
lin guild_N = mkN "guild" "guilds";
lin guild_hall_N = mkN "guild-hall" "guild-halls";
lin guilder_N = mkN "guilder" "guilders";
lin guildford_PN = mkPN "Guildford";
lin guildhall_N = mkN "guildhall" "guildhalls";
lin guile_N = mkN "guile" ;
lin guileful_A = compoundA (mkA "guileful");
lin guileless_A = compoundA (mkA "guileless");
lin guillemot_N = mkN "guillemot" "guillemots";
lin guilloche_N = mkN "guilloche" ;
lin guillotine_N = mkN "guillotine" "guillotines";
lin guillotine_V2 = mkV2 (mkV "guillotine" "guillotines" "guillotined" "guillotined" "guillotining");
lin guilt_N = mkN "guilt" ;
lin guiltiness_N = mkN "guiltiness" ;
lin guiltless_A = compoundA (mkA "guiltless");
lin guilty_A = mkA "guilty" "guiltier";
lin guimpe_N = mkN "guimpe" ;
lin guinea_N = mkN "guinea" "guineas";
lin guinea_PN = mkPN "Guinea";
lin guinea_fowl_N = mkN "guinea-fowl" "guinea-fowl";
lin guinea_pig_N = mkN "guinea-pig" "guinea-pigs";
lin guinean_A = compoundA (mkA "guinean");
lin guinean_N = mkN "guinean" "guineans";
lin guinness_N = mkN "guinness" "guinnesses";
lin guisborough_PN = mkPN "Guisborough";
lin guise_N = mkN "guise" "guises";
lin guitar_N = mkN "guitar" "guitars";
lin guitarfish_N = mkN "guitarfish" ;
lin guitarist_N = mkN "guitarist" "guitarists";
lin gulag_N = mkN "gulag" ;
lin gulch_N = mkN "gulch" "gulches";
lin gulden_N = mkN "gulden" "guldens";
lin gulf_N = mkN "gulf" "gulfs";
lin gulfweed_N = mkN "gulfweed" ;
lin gull_N = mkN "gull" "gulls";
lin gull_V2 = mkV2 (mkV "gull" "gulls" "gulled" "gulled" "gulling");
lin gullet_N = mkN "gullet" "gullets";
lin gullibility_N = mkN "gullibility" ;
lin gullible_A = compoundA (mkA "gullible");
lin gully_N = mkN "gully" "gullies";
lin gulp_N = mkN "gulp" "gulps";
lin gulp_V = mkV "gulp" "gulps" "gulped" "gulped" "gulping";
lin gulp_V2 = mkV2 (mkV "gulp" "gulps" "gulped" "gulped" "gulping");
lin gulper_N = mkN "gulper" ;
lin gulping_N = mkN "gulping" ;
lin gum_N = mkN "gum" "gums";
lin gum_V2 = mkV2 (mkV "gum" "gums" "gummed" "gummed" "gumming");
lin gumbo_N = mkN "gumbo" "gumbos";
lin gumboil_N = mkN "gumboil" "gumboils";
lin gumboot_N = mkN "gumboot" "gumboots";
lin gumdrop_N = mkN "gumdrop" ;
lin gumma_N = mkN "gumma" ;
lin gummite_N = mkN "gummite" ;
lin gummosis_N = mkN "gummosis" ;
lin gummy_A = mkA "gummy" "gummier";
lin gumption_N = mkN "gumption" ;
lin gumshoe_N = mkN "gumshoe" "gumshoes";
lin gumweed_N = mkN "gumweed" ;
lin gumwood_N = mkN "gumwood" ;
lin gun_N = mkN "gun" "guns";
lin gun_V2 = mkV2 (mkV "gun" "guns" "gunned" "gunned" "gunning");
lin gun_carriage_N = mkN "gun-carriage" "gun-carriages";
lin gunboat_N = mkN "gunboat" "gunboats";
lin guncotton_N = mkN "guncotton" ;
lin gundog_N = mkN "gundog" "gundogs";
lin gunfight_N = mkN "gunfight" ;
lin gunfire_N = mkN "gunfire" ;
lin gunflint_N = mkN "gunflint" ;
lin gunite_N = mkN "gunite" ;
lin gunlock_N = mkN "gunlock" ;
lin gunman_N = mkN masculine (mkN "gunman" "gunmen");
lin gunmetal_N = mkN "gunmetal" ;
lin gunnel_N = mkN "gunnel" ;
lin gunner_N = mkN "gunner" "gunners";
lin gunnery_N = mkN "gunnery" ;
lin gunny_N = mkN "gunny" ;
lin gunnysack_N = mkN "gunnysack" ;
lin gunplay_N = mkN "gunplay" ;
lin gunpoint_N = mkN "gunpoint" "IRREG";
lin gunpowder_N = mkN "gunpowder" ;
lin gunroom_N = mkN "gunroom" "gunrooms";
lin gunrunner_N = mkN "gunrunner" "gunrunners";
lin gunrunning_N = mkN "gunrunning" ;
lin gunshot_N = mkN "gunshot" "gunshots";
lin gunsight_N = mkN "gunsight" ;
lin gunsmith_N = mkN "gunsmith" "gunsmiths";
lin gunwale_N = mkN "gunwale" "gunwales";
lin guppy_N = mkN "guppy" ;
lin gurgle_N = mkN "gurgle" "gurgles";
lin gurgle_V = mkV "gurgle" "gurgles" "gurgled" "gurgled" "gurgling";
lin gurkha_N = mkN "gurkha" "gurkhas";
lin gurnard_N = mkN "gurnard" ;
lin gurney_N = mkN "gurney" ;
lin guru_N = mkN "guru" "gurus";
lin gush_N = mkN "gush" "gushes";
lin gush_V = mkV "gush" "gushes" "gushed" "gushed" "gushing";
lin gusher_N = mkN "gusher" "gushers";
lin gushingly_Adv = mkAdv "gushingly" ;
lin gusset_N = mkN "gusset" "gussets";
lin gusseted_A = compoundA (mkA "gusseted");
lin gust_N = mkN "gust" "gusts";
lin gustation_N = mkN "gustation" ;
lin gustatory_A = mkA "gustatory" ;
lin gusto_N = mkN "gusto" ;
lin gusty_A = mkA "gusty" "gustier";
lin gut_N = mkN "gut" "guts";
lin gut_V2 = mkV2 (mkV "gut" "guts" "gutted" "gutted" "gutting");
lin gutless_A = compoundA (mkA "gutless");
lin gutlessness_N = mkN "gutlessness" ;
lin gutsiness_N = mkN "gutsiness" ;
lin gutsy_A = mkA "gutsy" ;
lin gutta_percha_N = mkN "gutta-percha" ;
lin gutter_N = mkN "gutter" "gutters";
lin gutter_V = mkV "gutter" "gutters" "guttered" "guttered" "guttering";
lin guttersnipe_N = mkN "guttersnipe" "guttersnipes";
lin guttural_A = compoundA (mkA "guttural");
lin guttural_N = mkN "guttural" "gutturals";
lin guvnor_N = mkN "guvnor" "guvnors";
lin guy's_PN = mkPN "Guy's";
lin guy_N = mkN masculine (mkN "guy" "guys");
lin guy_PN = mkPN "Guy";
lin guy_V2 = mkV2 (mkV "guy" "guys" "guyed" "guyed" "guying");
lin guyana_PN = mkPN "Guyana";
lin guyanese_A = compoundA (mkA "guyanese");
lin guyanese_N = mkN "guyanese" "guyanese";
lin guyot_N = mkN "guyot" ;
lin guzzle_V = mkV "guzzle" "guzzles" "guzzled" "guzzled" "guzzling";
lin guzzle_V2 = mkV2 (mkV "guzzle" "guzzles" "guzzled" "guzzled" "guzzling");
lin guzzler_N = mkN "guzzler" "guzzlers";
lin gwen_PN = mkPN "Gwen";
lin gwendoline_PN = mkPN "Gwendoline";
lin gwent_PN = mkPN "Gwent";
lin gwersyllt_PN = mkPN "Gwersyllt";
lin gwynedd_PN = mkPN "Gwynedd";
lin gybe_V = mkV "gybe" "gybes" "gybed" "gybed" "gybing";
lin gybe_V2 = mkV2 (mkV "gybe" "gybes" "gybed" "gybed" "gybing");
lin gym_N = mkN "gym" "gyms";
lin gymkhana_N = mkN "gymkhana" "gymkhanas";
lin gymnasium_N = mkN "gymnasium" "gymnasiums";
lin gymnast_N = mkN "gymnast" "gymnasts";
lin gymnastic_A = compoundA (mkA "gymnastic");
lin gymnastics_N = mkN "gymnastics" "gymnastics";
lin gymnosophical_A = mkA "gymnosophical" ;
lin gymnosophist_N = mkN "gymnosophist" ;
lin gymnosophy_N = mkN "gymnosophy" ;
lin gymnosperm_N = mkN "gymnosperm" ;
lin gymnospermous_A = mkA "gymnospermous" ;
lin gymslip_N = mkN "gymslip" "gymslips";
lin gynaecological_A = compoundA (mkA "gynaecological");
lin gynaecologist_N = mkN "gynaecologist" "gynaecologists";
lin gynaecology_N = mkN "gynaecology" ;
lin gynandromorphic_A = mkA "gynandromorphic" ;
lin gynecocracy_N = mkN "gynecocracy" ;
lin gynecological_A = compoundA (mkA "gynecological");
lin gynecologistMasc_N = mkN masculine (mkN "gynecologist" "gynecologists");
lin gynecologistFem_N = mkN feminine (mkN "gynecologist" "gynecologists");
lin gynecology_N = mkN "gynecology" ;
lin gynecomastia_N = mkN "gynecomastia" ;
lin gyneolatry_N = mkN "gyneolatry" ;
lin gynobase_N = mkN "gynobase" ;
lin gynoecium_N = mkN "gynoecium" ;
lin gynogenesis_N = mkN "gynogenesis" ;
lin gynophobia_N = mkN "gynophobia" ;
lin gynophore_N = mkN "gynophore" ;
lin gynostegium_N = mkN "gynostegium" ;
lin gyp_N = mkN "gyp" "gyps";
lin gyp_V2 = mkV2 (mkV "gyp" "gyps" "gypped" "gypped" "gypping");
lin gypsum_N = mkN "gypsum" ;
lin gypsy_N = mkN "gypsy" "gypsies";
lin gyral_A = mkA "gyral" ;
lin gyrate_V = mkV "gyrate" "gyrates" "gyrated" "gyrated" "gyrating";
lin gyration_N = mkN "gyration" "gyrations";
lin gyrfalcon_N = mkN "gyrfalcon" ;
lin gyro_N = mkN "gyro" "gyros";
lin gyrocompass_N = mkN "gyrocompass" ;
lin gyromitra_N = mkN "gyromitra" ;
lin gyroscope_N = mkN "gyroscope" "gyroscopes";
lin gyroscopic_A = compoundA (mkA "gyroscopic");
lin gyrostabilizer_N = mkN "gyrostabilizer" ;
lin gyrus_N = mkN "gyrus" ;
lin h'm_V = mkV "h'm" "h'ms" "h'mmed" "h'mmed" "h'mming";
lin h_bomb_N = mkN "h-bomb" "h-bombs";
lin ha'p'orth_N = mkN "ha'p'orth" "ha'p'orths";
lin ha'penny_N = mkN "ha'penny" "ha'pennies";
lin haarlem_PN = mkPN "Haarlem";
lin habanera_N = mkN "habanera" ;
lin habeas_corpus_N = mkN "habeas corpus" ;
lin haberdasher_N = mkN "haberdasher" "haberdashers";
lin haberdashery_N = mkN "haberdashery" ;
lin habergeon_N = mkN "habergeon" ;
lin habit_N = mkN "habit" "habits";
lin habitability_N = mkN "habitability" ;
lin habitable_A = compoundA (mkA "habitable");
lin habitat_N = mkN "habitat" "habitats";
lin habitation_N = mkN "habitation" "habitations";
lin habited_A = mkA "habited" ;
lin habitual_A = compoundA (mkA "habitual");
lin habituate_V2 = mkV2 (mkV "habituate" "habituates" "habituated" "habituated" "habituating");
lin habituation_N = mkN "habituation" ;
lin habitude_N = mkN "habitude" ;
lin habitue_N = mkN "habitué" "habitués";
lin habitus_N = mkN "habitus" ;
lin hacek_N = mkN "hacek" ;
lin hacienda_N = mkN "hacienda" "haciendas";
lin hack_N = mkN "hack" "hacks";
lin hack_V = mkV "hack" "hacks" "hacked" "hacked" "hacking";
lin hack_V2 = mkV2 (mkV "hack" "hacks" "hacked" "hacked" "hacking");
lin hackberry_N = mkN "hackberry" ;
lin hacker_N = mkN "hacker" ;
lin hackle_N = mkN "hackle" ;
lin hackney_N = mkN "hackney" "hackneys";
lin hackney_PN = mkPN "Hackney";
lin hackneyed_A = compoundA (mkA "hackneyed");
lin hacksaw_N = mkN "hacksaw" "hacksaws";
lin hackwork_N = mkN "hackwork" ;
lin hadal_A = mkA "hadal" ;
lin haddington_PN = mkPN "Haddington";
lin haddock_N = mkN "haddock" "haddock";
lin hades_PN = mkPN "Hades";
lin hadji_N = mkN "hadji" "hadjis";
lin hadron_N = mkN "hadron" ;
lin hadrosaur_N = mkN "hadrosaur" ;
lin haematite_N = mkN "haematite" "haematites";
lin haemoglobin_N = mkN "haemoglobin" ;
lin haemophilia_N = mkN "haemophilia" ;
lin haemophiliac_N = mkN "haemophiliac" "haemophiliacs";
lin haemophilic_A = mkA "haemophilic" ;
lin haemoproteid_N = mkN "haemoproteid" ;
lin haemorrhage_N = mkN "haemorrhage" "haemorrhages";
lin haemosporidian_N = mkN "haemosporidian" ;
lin hafnium_N = mkN "hafnium" ;
lin haft_N = mkN "haft" "hafts";
lin hag_N = mkN "hag" "hags";
lin hag_ridden_A = compoundA (mkA "hag-ridden");
lin hagberry_N = mkN "hagberry" ;
lin hagen_PN = mkPN "Hagen";
lin hagfish_N = mkN "hagfish" ;
lin haggard_A = compoundA (mkA "haggard");
lin haggis_N = mkN "haggis" "haggises";
lin haggle_N = mkN "haggle" ;
lin haggle_V = mkV "haggle" "haggles" "haggled" "haggled" "haggling";
lin haggler_N = mkN "haggler" ;
lin hagiographer_N = mkN "hagiographer" ;
lin hagiography_N = mkN "hagiography" ;
lin hagiolatry_N = mkN "hagiolatry" ;
lin hagiology_N = mkN "hagiology" "hagiologies";
lin hagley_PN = mkPN "Hagley";
lin haha_N = mkN "haha" "hahas";
lin haik_N = mkN "haik" ;
lin haiku_N = mkN "haiku" ;
lin hail_N = mkN "hail" "hails";
lin hail_V = mkV "hail" "hails" "hailed" "hailed" "hailing";
lin hail_V2 = mkV2 (mkV "hail" "hails" "hailed" "hailed" "hailing");
lin hailsham_PN = mkPN "Hailsham";
lin hailstone_N = mkN "hailstone" "hailstones";
lin hailstorm_N = mkN "hailstorm" "hailstorms";
lin haiphong_PN = mkPN "Haiphong";
lin hair's_breadth_N = mkN "hair's-breadth" "hair's-breadths";
lin hair_N = mkN "hair" "hairs";
lin hair_breadth_N = mkN "hair-breadth" "hair-breadths";
lin hair_dye_N = mkN "hair-dye" "hair-dyes";
lin hair_oil_N = mkN "hair-oil" "hair-oils";
lin hair_raising_A = compoundA (mkA "hair-raising");
lin hair_shirt_N = mkN "hair-shirt" "hair-shirts";
lin hair_slide_N = mkN "hair-slide" "hair-slides";
lin hair_trigger_N = mkN "hair-trigger" "hair-triggers";
lin hairball_N = mkN "hairball" ;
lin hairbrush_N = mkN "hairbrush" "hairbrushes";
lin haircloth_N = mkN "haircloth" "haircloths";
lin haircut_N = mkN "haircut" "haircuts";
lin hairdo_N = mkN "hairdo" "hairdos";
lin hairdresser_N = mkN "hairdresser" "hairdressers";
lin hairdressing_N = mkN "hairdressing" ;
lin hairiness_N = mkN "hairiness" ;
lin hairless_A = compoundA (mkA "hairless");
lin hairlessness_N = mkN "hairlessness" ;
lin hairlike_A = compoundA (mkA "hairlike");
lin hairline_N = mkN "hairline" "hairlines";
lin hairnet_N = mkN "hairnet" "hairnets";
lin hairpiece_N = mkN "hairpiece" "hairpieces";
lin hairpin_N = mkN "hairpin" "hairpins";
lin hairsplitter_N = mkN "hairsplitter" ;
lin hairsplitting_A = compoundA (mkA "hairsplitting");
lin hairsplitting_N = mkN "hairsplitting" ;
lin hairspring_N = mkN "hairspring" "hairsprings";
lin hairstreak_N = mkN "hairstreak" ;
lin hairstyle_N = mkN "hairstyle" "hairstyles";
lin hairstylist_N = mkN "hairstylist" "hairstylists";
lin hairweaving_N = mkN "hairweaving" ;
lin hairy_A = mkA "hairy" "hairier";
lin haiti_PN = mkPN "Haiti";
lin haitian_A = compoundA (mkA "haitian");
lin haitian_N = mkN "haitian" "haitians";
lin hajj_N = mkN "hajj" ;
lin hajji_N = mkN "hajji" ;
lin hake_N = mkN "hake" "hake";
lin hakim_N = mkN "hakim" ;
lin hal_PN = mkPN "Hal";
lin halal_A = mkA "halal" ;
lin halal_N = mkN "halal" ;
lin halberd_N = mkN "halberd" "halberds";
lin halberdier_N = mkN "halberdier" "halberdiers";
lin halcyon_A = compoundA (mkA "halcyon");
lin halcyon_N = mkN "halcyon" ;
lin hale_A = compoundA (mkA "hale");
lin haler_N = mkN "haler" ;
lin halesowen_PN = mkPN "Halesowen";
lin half_A = mkA "half" ;
lin half_Adv = mkAdv "half" ;
lin half_N = mkN "half" "halves";
lin half_Predet = ss "half";
lin half_baked_A = compoundA (mkA "half-baked");
lin half_blood_N = mkN "half-blood" "half-bloods";
lin half_breed_N = mkN "half-breed" "half-breeds";
lin half_brother_N = mkN "half-brother" "half-brothers";
lin half_caste_N = mkN "half-caste" "half-castes";
lin half_crazed_A = compoundA (mkA "half-crazed");
lin half_crown_N = mkN "half-crown" "half-crowns";
lin half_hardy_A = compoundA (mkA "half-hardy");
lin half_hearted_A = compoundA (mkA "half-hearted");
lin half_holiday_N = mkN "half-holiday" "half-holidays";
lin half_hour_N = mkN "half-hour" "half-hours";
lin half_hourly_A = compoundA (mkA "half-hourly");
lin half_hourly_Adv = mkAdv "half-hourly";
lin half_length_A = compoundA (mkA "half-length");
lin half_pay_N = mkN "half-pay" ;
lin half_price_Adv = mkAdv "half-price";
lin half_seas_over_A = compoundA (mkA "half-seas-over");
lin half_sister_N = mkN "half-sister" "half-sisters";
lin half_size_A = compoundA (mkA "half-size");
lin half_timbered_A = compoundA (mkA "half-timbered");
lin half_time_N = mkN "half-time" ;
lin half_track_N = mkN "half-track" "half-tracks";
lin half_tracked_A = compoundA (mkA "half-tracked");
lin half_truth_N = mkN "half-truth" "half-truths";
lin half_volley_N = mkN "half-volley" "half-volleys";
lin half_yearly_A = compoundA (mkA "half-yearly");
lin half_yearly_Adv = mkAdv "half-yearly";
lin halfback_N = mkN "halfback" "halfbacks";
lin halfbeak_N = mkN "halfbeak" ;
lin halfhearted_A = mkA "halfhearted" ;
lin halfpenny_N = mkN "halfpenny" "halfpennies";
lin halfpennyworth_N = mkN "halfpennyworth" "halfpennyworths";
lin halftime_N = mkN "halftime" ;
lin halftone_N = mkN "halftone" "halftones";
lin halfway_A = compoundA (mkA "halfway");
lin halfway_Adv = mkAdv "halfway";
lin halfwit_N = mkN "halfwit" "halfwits";
lin halfwitted_A = compoundA (mkA "halfwitted");
lin halibut_N = mkN "halibut" "halibut";
lin halide_N = mkN "halide" ;
lin halifax_PN = mkPN "Halifax";
lin halite_N = mkN "halite" ;
lin halitosis_N = mkN "halitosis" ;
lin halitus_N = mkN "halitus" ;
lin hall_N = mkN "hall" "halls";
lin hall_stand_N = mkN "hall-stand" "hall-stands";
lin halle_PN = mkPN "Halle";
lin hallelujah_N = mkN "hallelujah" "hallelujahs";
lin halliard_N = mkN "halliard" "halliards";
lin hallmark_N = mkN "hallmark" "hallmarks";
lin halloo_N = mkN "halloo" "halloos";
lin halloo_V = mkV "halloo" "halloos" "hallooed" "hallooed" "hallooing";
lin hallow_N = mkN "hallow" "hallows";
lin hallow_V2 = mkV2 (mkV "hallow" "hallows" "hallowed" "hallowed" "hallowing");
lin hallowe'en_N = mkN "hallowe'en" "hallowe'ens";
lin hallowe'en_PN = mkPN "Hallowe'en";
lin hallstand_N = mkN "hallstand" ;
lin hallucination_N = mkN "hallucination" "hallucinations";
lin hallucinatory_A = compoundA (mkA "hallucinatory");
lin hallucinogen_N = mkN "hallucinogen" ;
lin hallucinogenic_A = compoundA (mkA "hallucinogenic");
lin hallucinosis_N = mkN "hallucinosis" ;
lin hallway_N = mkN "hallway" ;
lin halma_N = mkN "halma" ;
lin halo_N = mkN "halo" "halos";
lin halobacteria_N = mkN "halobacteria" ;
lin halocarbon_N = mkN "halocarbon" ;
lin haloform_N = mkN "haloform" ;
lin halogen_N = mkN "halogen" ;
lin halogeton_N = mkN "halogeton" ;
lin halon_N = mkN "halon" ;
lin haloperidol_N = mkN "haloperidol" ;
lin halophile_N = mkN "halophile" ;
lin halophyte_N = mkN "halophyte" ;
lin halothane_N = mkN "halothane" ;
lin halstead_PN = mkPN "Halstead";
lin halt_A = compoundA (mkA "halt");
lin halt_N = mkN "halt" "halts";
lin halt_V = mkV "halt" "halts" "halted" "halted" "halting";
lin halt_V2 = mkV2 (mkV "halt" "halts" "halted" "halted" "halting");
lin halter_N = mkN "halter" "halters";
lin haltingly_Adv = mkAdv "haltingly";
lin halve_V2 = mkV2 (mkV "halve" "halves" "halved" "halved" "halving");
lin halyard_N = mkN "halyard" "halyards";
lin ham_N = mkN "ham" "hams";
lin ham_V = mkV "ham" "hams" "hammed" "hammed" "hamming";
lin ham_V2 = mkV2 (mkV "ham" "hams" "hammed" "hammed" "hamming");
lin ham_fisted_A = compoundA (mkA "ham-fisted");
lin ham_handed_A = compoundA (mkA "ham-handed");
lin hamadryad_N = mkN "hamadryad" "hamadryads";
lin hamartoma_N = mkN "hamartoma" ;
lin hamate_N = mkN "hamate" ;
lin hamburg_PN = mkPN "Hamburg";
lin hamburger_N = mkN "hamburger" "hamburgers";
lin hame_N = mkN "hame" ;
lin hamelia_N = mkN "hamelia" ;
lin hamhung_PN = mkPN "Hamhung";
lin hamilton_PN = mkPN "Hamilton";
lin hamlet_N = mkN "hamlet" "hamlets";
lin hammer_N = mkN "hammer" "hammers";
lin hammer_V = mkV "hammer" "hammers" "hammered" "hammered" "hammering";
lin hammer_V2 = mkV2 (mkV "hammer" "hammers" "hammered" "hammered" "hammering");
lin hammerhead_N = mkN "hammerhead" ;
lin hammerlock_N = mkN "hammerlock" ;
lin hammersmith_PN = mkPN "Hammersmith";
lin hammertoe_N = mkN "hammertoe" ;
lin hamming_N = mkN "hamming" ;
lin hammock_N = mkN "hammock" "hammocks";
lin hammy_A = mkA "hammy" ;
lin hamper_N = mkN "hamper" "hampers";
lin hamper_V2 = mkV2 (mkV "hamper" "hampers" "hampered" "hampered" "hampering");
lin hampreston_PN = mkPN "Hampreston";
lin hampshire_PN = mkPN "Hampshire";
lin hamster_N = mkN "hamster" "hamsters";
lin hamstring_N = mkN "hamstring" "hamstrings";
lin hamstring_V2 = mkV2 (mkV "ham" IrregEng.string_V);
lin hand_N = mkN "hand" "hands";
lin hand_V2 = mkV2 (mkV "hand" "hands" "handed" "handed" "handing");
lin hand_barrow_N = mkN "hand-barrow" "hand-barrows";
lin hand_carry_V2 = mkV2 (mkV "hand-carry");
lin hand_grenade_N = mkN "hand-grenade" "hand-grenades";
lin hand_luggage_N = mkN "hand-luggage" ;
lin hand_me_down_N = mkN "hand-me-down" "hand-me-downs";
lin hand_organ_N = mkN "hand-organ" "hand-organs";
lin hand_out_N = mkN "hand-out" "hand-outs";
lin hand_picked_A = compoundA (mkA "hand-picked");
lin handbag_N = mkN "handbag" "handbags";
lin handball_N = mkN "handball" ;
lin handbarrow_N = mkN "handbarrow" ;
lin handbell_N = mkN "handbell" ;
lin handbill_N = mkN "handbill" "handbills";
lin handbook_N = mkN "handbook" "handbooks";
lin handbow_N = mkN "handbow" ;
lin handbrake_N = mkN "handbrake" "handbrakes";
lin handbreadth_N = mkN "handbreadth" ;
lin handcar_N = mkN "handcar" ;
lin handcart_N = mkN "handcart" "handcarts";
lin handclap_N = mkN "handclap" "handclaps";
lin handcuff_N = mkN "handcuff" "handcuffs";
lin handcuff_V2 = mkV2 (mkV "handcuff" "handcuffs" "handcuffed" "handcuffed" "handcuffing");
lin handedness_N = mkN "handedness" ;
lin handful_N = mkN "handful" "handfuls";
lin handhold_N = mkN "handhold" "handholds";
lin handicap_N = mkN "handicap" "handicaps";
lin handicap_V2 = mkV2 (mkV "handicap" "handicaps" "handicapped" "handicapped" "handicapping");
lin handicraft_N = mkN "handicraft" "handicrafts";
lin handiness_N = mkN "handiness" ;
lin handiwork_N = mkN "handiwork" "handiworks";
lin handkerchief_N = mkN "handkerchief" "handkerchiefs";
lin handle_N = mkN "handle" "handles";
lin handle_V = mkV "handle";
lin handle_V2 = mkV2 (mkV "handle" "handles" "handled" "handled" "handling");
lin handlebar_N = mkN "handlebar" "handlebars";
lin handleless_A = mkA "handleless" ;
lin handler_N = mkN "handler" "handlers";
lin handless_A = mkA "handless" ;
lin handline_N = mkN "handline" ;
lin handling_N = mkN "handling" ;
lin handloom_N = mkN "handloom" ;
lin handmade_A = compoundA (mkA "handmade");
lin handmaid_N = mkN "handmaid" "handmaids";
lin handoff_N = mkN "handoff" ;
lin handout_N = mkN "handout" ;
lin handover_N = mkN "handover" "handovers";
lin handrail_N = mkN "handrail" "handrails";
lin handrest_N = mkN "handrest" ;
lin hands_N = mkN "hands" ;
lin handsaw_N = mkN "handsaw" "handsaws";
lin handset_N = mkN "handset" ;
lin handsewn_A = mkA "handsewn" ;
lin handshake_N = mkN "handshake" "handshakes";
lin handshaking_N = mkN "handshaking" ;
lin handsome_A = compoundA (mkA "handsome");
lin handsomeness_N = mkN "handsomeness" ;
lin handspike_N = mkN "handspike" ;
lin handspring_N = mkN "handspring" ;
lin handstamp_N = mkN "handstamp" ;
lin handstand_N = mkN "handstand" "handstands";
lin handwear_N = mkN "handwear" ;
lin handwheel_N = mkN "handwheel" ;
lin handwork_N = mkN "handwork" ;
lin handwriting_N = mkN "handwriting" ;
lin handwritten_A = mkA "handwritten" ;
lin handy_A = mkA "handy" "handier";
lin handyman_N = mkN masculine (mkN "handyman" "handymen");
lin hang_N = mkN "hang" "hangs";
lin hang_V = mkV "hang" "hangs" "hung" "hung" "hanging" | mkV "hang" "hangs" "hanged" "hanged" "hanging";
lin hang_V2 = mkV2 (mkV "hang" "hangs" "hung" "hung" "hanging" | mkV "hang" "hangs" "hanged" "hanged" "hanging");
lin hang_up_N = mkN "hang-up" "hang-ups";
lin hangar_N = mkN "hangar" "hangars";
lin hangchon_PN = mkPN "Hangchon";
lin hangdog_A = compoundA (mkA "hangdog");
lin hanger_N = mkN "hanger" "hangers";
lin hanger_on_N = mkN "hanger-on" "hangers-on";
lin hanging_N = mkN "hanging" "hangings";
lin hangman_N = mkN masculine (mkN "hangman" "hangmen");
lin hangnail_N = mkN "hangnail" "hangnails";
lin hangover_N = mkN "hangover" "hangovers";
lin hank_N = mkN "hank" "hanks";
lin hanker_V = mkV "hanker" "hankers" "hankered" "hankered" "hankering";
lin hankering_N = mkN "hankering" "hankerings";
lin hanky_N = mkN "hanky" "hankies";
lin hanky_panky_N = mkN "hanky-panky" ;
lin hanoi_PN = mkPN "Hanoi";
lin hanover_PN = mkPN "Hanover";
lin hansard_N = mkN "hansard" "hansards";
lin hansom_N = mkN "hansom" "hansoms";
lin hao_N = mkN "hao" ;
lin hap_N = mkN "hap" "haps";
lin hap_V = mkV "hap" "haps" "happed" "happed" "happing";
lin haphazard_A = compoundA (mkA "haphazard");
lin haphazard_Adv = mkAdv "haphazard";
lin hapless_A = compoundA (mkA "hapless");
lin haploid_A = mkA "haploid" ;
lin haploid_N = mkN "haploid" ;
lin haploidy_N = mkN "haploidy" ;
lin haplosporidian_N = mkN "haplosporidian" ;
lin haplotype_N = mkN "haplotype" ;
lin haply_Adv = mkAdv "haply";
lin happen_V = mkV "happen" "happens" "happened" "happened" "happening";
lin happen_V2 = mkV2 (mkV "happen" "happens" "happened" "happened" "happening");
lin happen_VV = mkVV (mkV "happen" "happens" "happened" "happened" "happening");
lin happening_N = mkN "happening" "happenings";
lin happiness_N = mkN "happiness" ;
lin happy_A = mkA "happy" "happier";
lin happy_go_lucky_A = compoundA (mkA "happy-go-lucky");
lin haptic_A = mkA "haptic" ;
lin haptoglobin_N = mkN "haptoglobin" ;
lin hara_kiri_N = mkN "hara-kiri" ;
lin harakiri_N = mkN "harakiri" ;
lin harangue_N = mkN "harangue" "harangues";
lin harangue_V = mkV "harangue" "harangues" "harangued" "harangued" "haranguing";
lin harangue_V2 = mkV2 (mkV "harangue" "harangues" "harangued" "harangued" "haranguing");
lin haranguer_N = mkN "haranguer" ;
lin harass_V2 = mkV2 (mkV "harass" "harasses" "harassed" "harassed" "harassing");
lin harasser_N = mkN "harasser" ;
lin harassment_N = mkN "harassment" ;
lin harbin_PN = mkPN "Harbin";
lin harbinger_N = mkN "harbinger" "harbingers";
lin harbour_N = mkN "harbour" "harbours";
lin harbour_V = mkV "harbour" "harbours" "harboured" "harboured" "harbouring";
lin harbour_V2 = mkV2 (mkV "harbour" "harbours" "harboured" "harboured" "harbouring");
lin harbourage_N = mkN "harbourage" "harbourages";
lin hard_A = mkA "hard" "harder";
lin hard_Adv = mkAdv "hard";
lin hard_baked_A = compoundA (mkA "hard-baked");
lin hard_bitten_A = compoundA (mkA "hard-bitten");
lin hard_boiled_A = compoundA (mkA "hard-boiled");
lin hard_headed_A = compoundA (mkA "hard-headed");
lin hardback_N = mkN "hardback" "hardbacks";
lin hardbacked_A = compoundA (mkA "hardbacked");
lin hardbake_N = mkN "hardbake" ;
lin hardball_N = mkN "hardball" ;
lin hardboard_N = mkN "hardboard" ;
lin hardbound_A = compoundA (mkA "hardbound");
lin hardcover_N = mkN "hardcover" "hardcovers";
lin hardcovered_A = compoundA (mkA "hardcovered");
lin harden_V = mkV "harden" "hardens" "hardened" "hardened" "hardening";
lin harden_V2 = mkV2 (mkV "harden" "hardens" "hardened" "hardened" "hardening");
lin hardening_N = mkN "hardening" ;
lin hardheaded_A = mkA "hardheaded" ;
lin hardhearted_A = compoundA (mkA "hardhearted");
lin hardhitting_A = compoundA (mkA "hardhitting");
lin hardihood_N = mkN "hardihood" ;
lin hardiness_N = mkN "hardiness" ;
lin hardinggrass_N = mkN "hardinggrass" ;
lin hardliner_N = mkN "hardliner" "hardliners";
lin hardness_N = mkN "hardness" ;
lin hardscrabble_A = mkA "hardscrabble" ;
lin hardship_N = mkN "hardship" "hardships";
lin hardtack_N = mkN "hardtack" ;
lin hardtop_N = mkN "hardtop" "hardtops";
lin hardware_N = mkN "hardware" ;
lin hardwood_N = mkN "hardwood" ;
lin hardworking_A = compoundA (mkA "hardworking");
lin hardy_A = mkA "hardy" "hardier";
lin hare_N = mkN "hare" "hares";
lin hare_V = mkV "hare" "hares" "hared" "hared" "haring";
lin harebell_N = mkN "harebell" "harebells";
lin harebrained_A = compoundA (mkA "harebrained");
lin harelip_N = mkN "harelip" "harelips";
lin harem_N = mkN "harem" "harems";
lin haricot_N = mkN "haricot" "haricots";
lin haringey_PN = mkPN "Haringey";
lin hark_V = mkV "hark" "harks" "harked" "harked" "harking";
lin harlequin_N = mkN "harlequin" "harlequins";
lin harlequinade_N = mkN "harlequinade" "harlequinades";
lin harley_street_PN = mkPN "Harley street";
lin harlot_N = mkN "harlot" "harlots";
lin harlow_PN = mkPN "Harlow";
lin harm_N = mkN "harm" ;
lin harm_V2 = mkV2 (mkV "harm" "harms" "harmed" "harmed" "harming");
lin harmattan_N = mkN "harmattan" "harmattans";
lin harmful_A = compoundA (mkA "harmful");
lin harmfulness_N = mkN "harmfulness" ;
lin harmless_A = compoundA (mkA "harmless");
lin harmonic_A = mkA "harmonic" ;
lin harmonic_N = mkN "harmonic" "harmonics";
lin harmonica_N = mkN "harmonica" "harmonicas";
lin harmonically_Adv = mkAdv "harmonically" ;
lin harmonics_N = mkN "harmonics" ;
lin harmonious_A = compoundA (mkA "harmonious");
lin harmonium_N = mkN "harmonium" "harmoniums";
lin harmonizable_A = mkA "harmonizable" ;
lin harmonization_N = mkN "harmonization" "harmonizations";
lin harmonize_V = mkV "harmonize" "harmonizes" "harmonized" "harmonized" "harmonizing";
lin harmonize_V2 = mkV2 (mkV "harmonize" "harmonizes" "harmonized" "harmonized" "harmonizing");
lin harmonizer_N = mkN "harmonizer" ;
lin harmony_N = mkN "harmony" "harmonies";
lin harness_N = mkN "harness" "harnesses";
lin harness_V2 = mkV2 (mkV "harness" "harnesses" "harnessed" "harnessed" "harnessing");
lin harold_PN = mkPN "Harold";
lin harp_N = mkN "harp" "harps";
lin harp_V = mkV "harp" "harps" "harped" "harped" "harping";
lin harpenden_PN = mkPN "Harpenden";
lin harper_N = mkN "harper" "harpers";
lin harpist_N = mkN "harpist" "harpists";
lin harpoon_N = mkN "harpoon" "harpoons";
lin harpoon_V2 = mkV2 (mkV "harpoon" "harpoons" "harpooned" "harpooned" "harpooning");
lin harpooner_N = mkN "harpooner" ;
lin harpsichord_N = mkN "harpsichord" "harpsichords";
lin harpsichordist_N = mkN "harpsichordist" "harpsichordists";
lin harpulla_N = mkN "harpulla" ;
lin harpullia_N = mkN "harpullia" ;
lin harpy_N = mkN "harpy" "harpies";
lin harridan_N = mkN "harridan" "harridans";
lin harrier_N = mkN "harrier" "harriers";
lin harriet_PN = mkPN "Harriet";
lin harrogate_PN = mkPN "Harrogate";
lin harrow_N = mkN "harrow" "harrows";
lin harrow_PN = mkPN "Harrow";
lin harrow_V2 = mkV2 (mkV "harrow" "harrows" "harrowed" "harrowed" "harrowing");
lin harry_PN = mkPN "Harry";
lin harry_V2 = mkV2 (mkV "harry" "harries" "harried" "harried" "harrying");
lin harsh_A = mkA "harsh" "harsher";
lin harshness_N = mkN "harshness" ;
lin hart_N = mkN "hart" "harts";
lin hartebeest_N = mkN "hartebeest" ;
lin hartlepool_PN = mkPN "Hartlepool";
lin hartley_PN = mkPN "Hartley";
lin harum_scarum_A = compoundA (mkA "harum-scarum");
lin harum_scarum_N = mkN "harum-scarum" "harum-scarums";
lin harvest_N = mkN "harvest" "harvests";
lin harvest_V2 = mkV2 (mkV "harvest" "harvests" "harvested" "harvested" "harvesting");
lin harvester_N = mkN "harvester" "harvesters";
lin harvestfish_N = mkN "harvestfish" ;
lin harvestman_N = mkN masculine (mkN "harvestman" "harvestmen");
lin harvey_PN = mkPN "Harvey";
lin harwich_PN = mkPN "Harwich";
lin harwood_PN = mkPN "Harwood";
lin harworth_PN = mkPN "Harworth";
lin has_been_N = mkN "has-been" "has-beens";
lin hash_N = mkN "hash" ;
lin hash_V2 = mkV2 (mkV "hash" "hashes" "hashed" "hashed" "hashing");
lin hashish_N = mkN "hashish" ;
lin haslemere_PN = mkPN "Haslemere";
lin haslet_N = mkN "haslet" ;
lin haslingden_PN = mkPN "Haslingden";
lin hasp_N = mkN "hasp" "hasps";
lin hassium_N = mkN "hassium" ;
lin hassle_N = mkN "hassle" "hassles";
lin hassle_V = mkV "hassle" "hassles" "hassled" "hassled" "hassling";
lin hassle_V2 = mkV2 (mkV "hassle" "hassles" "hassled" "hassled" "hassling");
lin hassock_N = mkN "hassock" "hassocks";
lin hastate_A = mkA "hastate" ;
lin haste_N = mkN "haste" ;
lin hasten_V = mkV "hasten" "hastens" "hastened" "hastened" "hastening";
lin hasten_V2 = mkV2 (mkV "hasten" "hastens" "hastened" "hastened" "hastening");
lin hastiness_N = mkN "hastiness" ;
lin hastings_PN = mkPN "Hastings";
lin hasty_A = mkA "hasty" "hastier";
lin hat_N = mkN "hat" "hats";
lin hatband_N = mkN "hatband" "hatbands";
lin hatbox_N = mkN "hatbox" ;
lin hatch_N = mkN "hatch" "hatches";
lin hatch_V = mkV "hatch" "hatches" "hatched" "hatched" "hatching";
lin hatch_V2 = mkV2 (mkV "hatch" "hatches" "hatched" "hatched" "hatching");
lin hatchback_N = mkN "hatchback" ;
lin hatchel_N = mkN "hatchel" ;
lin hatchery_N = mkN "hatchery" "hatcheries";
lin hatchet_N = mkN "hatchet" "hatchets";
lin hatching_N = mkN "hatching" ;
lin hatchling_N = mkN "hatchling" ;
lin hatchway_N = mkN "hatchway" "hatchways";
lin hate_N = mkN "hate" "hates";
lin hate_V2 = mkV2 (mkV "hate" "hates" "hated" "hated" "hating");
lin hate_V2V = mkV2V (mkV "hate") noPrep to_Prep ;
lin hate_VV = mkVV (mkV "hate");
lin hateful_A = compoundA (mkA "hateful");
lin hatefulness_N = mkN "hatefulness" ;
lin hatemonger_N = mkN "hatemonger" ;
lin hater_N = mkN "hater" ;
lin hatfield_PN = mkPN "Hatfield";
lin hatful_N = mkN "hatful" "hatfuls";
lin hatless_A = compoundA (mkA "hatless");
lin hatmaker_N = mkN "hatmaker" ;
lin hatpin_N = mkN "hatpin" "hatpins";
lin hatred_N = mkN "hatred" "hatreds";
lin hatted_A = mkA "hatted" ;
lin hatter_N = mkN "hatter" "hatters";
lin hauberk_N = mkN "hauberk" "hauberks";
lin haughtiness_N = mkN "haughtiness" ;
lin haughty_A = mkA "haughty" "haughtier";
lin haul_N = mkN "haul" "hauls";
lin haul_V = mkV "haul" "hauls" "hauled" "hauled" "hauling";
lin haul_V2 = mkV2 (mkV "haul" "hauls" "hauled" "hauled" "hauling");
lin haulage_N = mkN "haulage" ;
lin hauler_N = mkN "hauler" ;
lin haulier_N = mkN "haulier" "hauliers";
lin hauling_N = mkN "hauling" ;
lin haulm_N = mkN "haulm" ;
lin haunch_N = mkN "haunch" "haunches";
lin haunt_N = mkN "haunt" "haunts";
lin haunt_V2 = mkV2 (mkV "haunt" "haunts" "haunted" "haunted" "haunting");
lin haunting_A = mkA "haunting" ;
lin hausmannite_N = mkN "hausmannite" ;
lin haustorium_N = mkN "haustorium" ;
lin hautboy_N = mkN "hautboy" "hautboys";
lin hauteur_N = mkN "hauteur" ;
lin havana_N = mkN "havana" "havanas";
lin havana_PN = mkPN "Havana";
lin have_V = IrregEng.have_V;
lin have_V2 = mkV2 (IrregEng.have_V);
lin have_V2V = mkV2V IrregEng.have_V noPrep to_Prep;
lin have_VS = mkVS (IrregEng.have_V);
lin have_VV = mkVV IrregEng.have_V;
lin havelock_N = mkN "havelock" ;
lin haven_N = mkN "haven" "havens";
lin haverfordwest_PN = mkPN "Haverfordwest";
lin haverhill_PN = mkPN "Haverhill";
lin havering_PN = mkPN "Havering";
lin haversack_N = mkN "haversack" "haversacks";
lin havoc_N = mkN "havoc" ;
lin haw_N = mkN "haw" "haws";
lin haw_V = mkV "haw" "haws" "hawed" "hawed" "hawing";
lin haw_haw_N = mkN "haw-haw" "haw-haws";
lin hawaii_PN = mkPN "Hawaii";
lin hawala_N = mkN "hawala" ;
lin hawfinch_N = mkN "hawfinch" ;
lin hawick_PN = mkPN "Hawick";
lin hawk_N = mkN "hawk" "hawks";
lin hawk_V2 = mkV2 (mkV "hawk" "hawks" "hawked" "hawked" "hawking");
lin hawk_eyed_A = compoundA (mkA "hawk-eyed");
lin hawkbit_N = mkN "hawkbit" ;
lin hawke's_bay_PN = mkPN "Hawke's bay";
lin hawker_N = mkN "hawker" "hawkers";
lin hawkishness_N = mkN "hawkishness" ;
lin hawkmoth_N = mkN "hawkmoth" ;
lin hawkweed_N = mkN "hawkweed" ;
lin hawse_N = mkN "hawse" ;
lin hawser_N = mkN "hawser" "hawsers";
lin hawthorn_N = mkN "hawthorn" "hawthorns";
lin hay_N = mkN "hay" ;
lin haycock_N = mkN "haycock" "haycocks";
lin hayfield_N = mkN "hayfield" ;
lin hayfork_N = mkN "hayfork" "hayforks";
lin haying_N = mkN "haying" ;
lin hayling_PN = mkPN "Hayling";
lin hayloft_N = mkN "hayloft" ;
lin haymaker_N = mkN "haymaker" "haymakers";
lin haymaking_N = mkN "haymaking" ;
lin haymow_N = mkN "haymow" ;
lin hayrack_N = mkN "hayrack" ;
lin hayrick_N = mkN "hayrick" "hayricks";
lin haystack_N = mkN "haystack" "haystacks";
lin haywards_heath_PN = mkPN "Haywards heath";
lin haywire_A = compoundA (mkA "haywire");
lin haywire_N = mkN "haywire" ;
lin hazard_N = mkN "hazard" "hazards";
lin hazard_V2 = mkV2 (mkV "hazard" "hazards" "hazarded" "hazarded" "hazarding");
lin hazardous_A = compoundA (mkA "hazardous");
lin hazardousness_N = mkN "hazardousness" ;
lin haze_N = mkN "haze" "hazes";
lin haze_V2 = mkV2 (mkV "haze" "hazes" "hazed" "hazed" "hazing");
lin hazel_A = mkA "hazel" ;
lin hazel_N = mkN "hazel" "hazels";
lin hazel_PN = mkPN "Hazel";
lin hazelnut_N = mkN "hazelnut" ;
lin haziness_N = mkN "haziness" ;
lin hazy_A = mkA "hazy" "hazier";
lin he_Pron = mkPron "he" "him" "his" "his" singular P3 masculine ;
lin he_goat_N = mkN "he-goat" "he-goats";
lin he_man_N = mkN "he-man" "he-men";
lin head_N = mkN "head" "heads";
lin head_V = mkV "head" "heads" "headed" "headed" "heading";
lin head_V2 = mkV2 (mkV "head" "heads" "headed" "headed" "heading");
lin head_hunter_N = mkN "head-hunter" "head-hunters";
lin head_on_A = compoundA (mkA "head-on");
lin head_on_Adv = mkAdv "head-on";
lin headache_N = mkN "headache" "headaches";
lin headband_N = mkN "headband" "headbands";
lin headboard_N = mkN "headboard" ;
lin headcheese_N = mkN "headcheese" ;
lin headdress_N = mkN "headdress" "headdresses";
lin header_N = mkN "header" "headers";
lin headfast_N = mkN "headfast" ;
lin headfirst_A = mkA "headfirst" ;
lin headful_N = mkN "headful" ;
lin headgear_N = mkN "headgear" ;
lin headhunter_N = mkN "headhunter" ;
lin heading_N = mkN "heading" "headings";
lin headlamp_N = mkN "headlamp" "headlamps";
lin headland_N = mkN "headland" "headlands";
lin headless_A = compoundA (mkA "headless");
lin headlight_N = mkN "headlight" "headlights";
lin headlike_A = mkA "headlike" ;
lin headline_N = mkN "headline" "headlines";
lin headliner_N = mkN "headliner" ;
lin headlinese_N = mkN "headlinese" ;
lin headlock_N = mkN "headlock" ;
lin headlong_A = compoundA (mkA "headlong");
lin headlong_Adv = mkAdv "headlong";
lin headman_N = mkN masculine (mkN "headman" "headmen");
lin headmaster_N = mkN "headmaster" "headmasters";
lin headmastership_N = mkN "headmastership" ;
lin headmistress_N = mkN "headmistress" "headmistresses";
lin headmistressship_N = mkN "headmistressship" ;
lin headpiece_N = mkN "headpiece" "headpieces";
lin headpin_N = mkN "headpin" ;
lin headquarter_N = mkN "headquarter";
lin headrace_N = mkN "headrace" ;
lin headrest_N = mkN "headrest" "headrests";
lin headroom_N = mkN "headroom" ;
lin headsail_N = mkN "headsail" ;
lin headscarf_N = mkN "headscarf";
lin headset_N = mkN "headset" "headsets";
lin headshake_N = mkN "headshake" ;
lin headship_N = mkN "headship" "headships";
lin headshot_N = mkN "headshot" ;
lin headsman_N = mkN "headsman" ;
lin headspace_N = mkN "headspace" ;
lin headstall_N = mkN "headstall" "headstalls";
lin headstand_N = mkN "headstand" ;
lin headstock_N = mkN "headstock" ;
lin headstone_N = mkN "headstone" "headstones";
lin headstream_N = mkN "headstream" ;
lin headstrong_A = compoundA (mkA "headstrong");
lin headwater_N = mkN "headwater" ;
lin headway_N = mkN "headway" ;
lin headwind_N = mkN "headwind" "headwinds";
lin headword_N = mkN "headword" "headwords";
lin heady_A = mkA "heady" "headier";
lin heal_V = mkV "heal" "heals" "healed" "healed" "healing";
lin heal_V2 = mkV2 (mkV "heal" "heals" "healed" "healed" "healing");
lin healer_N = mkN "healer" "healers";
lin healing_N = mkN "healing" ;
lin health_N = mkN "health" ;
lin healthcare_N = mkN "healthcare" ;
lin healthful_A = compoundA (mkA "healthful");
lin healthfulness_N = mkN "healthfulness" ;
lin healthy_A = mkA "healthy" "healthier";
lin heanor_PN = mkPN "Heanor";
lin heap_N = mkN "heap" "heaps";
lin heap_V2 = mkV2 (mkV "heap" "heaps" "heaped" "heaped" "heaping");
lin heaps_Adv = mkAdv "heaps";
lin hear_V = IrregEng.hear_V;
lin hear_V2 = mkV2 (IrregEng.hear_V);
lin hear_V2V = mkV2V (IrregEng.hear_V) noPrep to_Prep ;
lin hear_VS = mkVS (IrregEng.hear_V);
lin hearer_N = mkN "hearer" "hearers";
lin hearing_N = mkN "hearing" "hearings";
lin hearing_aid_N = mkN "hearing-aid" "hearing-aids";
lin hearken_V = mkV "hearken" "hearkens" "hearkened" "hearkened" "hearkening";
lin hearsay_A = mkA "hearsay" ;
lin hearsay_N = mkN "hearsay" ;
lin hearse_N = mkN "hearse" "hearses";
lin heart's_ease_N = mkN "heart's-ease" ;
lin heart_N = mkN "heart" "hearts";
lin heart_disease_N = mkN "heart-disease" "heart-diseases";
lin heart_failure_N = mkN "heart-failure" ;
lin heart_rending_A = compoundA (mkA "heart-rending");
lin heartache_N = mkN "heartache" "heartaches";
lin heartbeat_N = mkN "heartbeat" "heartbeats";
lin heartbreak_N = mkN "heartbreak" ;
lin heartbreaker_N = mkN "heartbreaker" ;
lin heartbreaking_A = compoundA (mkA "heartbreaking");
lin heartbroken_A = compoundA (mkA "heartbroken");
lin heartburn_N = mkN "heartburn" ;
lin heartburning_N = mkN "heartburning" ;
lin hearted_A = compoundA (mkA "hearted");
lin hearten_V2 = mkV2 (mkV "hearten" "heartens" "heartened" "heartened" "heartening");
lin heartening_A = mkA "heartening" ;
lin heartfelt_A = compoundA (mkA "heartfelt");
lin hearth_N = mkN "hearth" "hearths";
lin hearthrug_N = mkN "hearthrug" "hearthrugs";
lin hearthstone_N = mkN "hearthstone" ;
lin heartiness_N = mkN "heartiness" ;
lin heartland_N = mkN "heartland" ;
lin heartleaf_N = mkN "heartleaf" ;
lin heartless_A = compoundA (mkA "heartless");
lin heartlessness_N = mkN "heartlessness" ;
lin heartrot_N = mkN "heartrot" ;
lin hearts_N = mkN "hearts" ;
lin heartseed_N = mkN "heartseed" ;
lin heartsick_A = compoundA (mkA "heartsick");
lin heartstrings_N = mkN "heartstrings" ;
lin heartthrob_N = mkN "heartthrob" ;
lin heartwarming_A = mkA "heartwarming" ;
lin heartwood_N = mkN "heartwood" ;
lin hearty_A = mkA "hearty" "heartier";
lin heat_N = mkN "heat" "heats";
lin heat_V = mkV "heat" "heats" "heated" "heated" "heating";
lin heat_V2 = mkV2 (mkV "heat" "heats" "heated" "heated" "heating");
lin heat_flash_N = mkN "heat-flash" "heat-flashes";
lin heatable_A = mkA "heatable" ;
lin heated_A = compoundA (mkA "heated");
lin heater_N = mkN "heater" "heaters";
lin heath_N = mkN "heath" "heaths";
lin heathen_A = mkA "heathen" ;
lin heathen_N = mkN human (mkN "heathen" "heathens");
lin heathenish_A = compoundA (mkA "heathenish");
lin heather_N = mkN "heather" "heathers";
lin heather_PN = mkPN "Heather";
lin heather_mixture_N = mkN "heather-mixture" ;
lin heathlike_A = mkA "heathlike" ;
lin heating_N = mkN "heating" ;
lin heating_N = mkN "heating";
lin heatless_A = mkA "heatless" ;
lin heatspot_N = mkN "heatspot" "heatspots";
lin heatstroke_N = mkN "heatstroke" ;
lin heatwave_N = mkN "heatwave" "heatwaves";
lin heaume_N = mkN "heaume" ;
lin heave_N = mkN "heave" "heaves";
lin heave_V = mkV "heave" "heaves" "heaved" "heaved" "heaving";
lin heave_V2 = mkV2 (mkV "heave" "heaves" "heaved" "heaved" "heaving");
lin heaven_N = mkN "heaven" "heavens";
lin heavenly_A = compoundA (mkA "heavenly");
lin heavensent_A = compoundA (mkA "heavensent");
lin heavenward_A = compoundA (mkA "heavenward");
lin heavenward_Adv = mkAdv "heavenward";
lin heavenwards_A = compoundA (mkA "heavenwards");
lin heavenwards_Adv = mkAdv "heavenwards";
lin heaver_N = mkN "heaver" ;
lin heaves_N = mkN "heaves" ;
lin heaviness_N = mkN "heaviness" ;
lin heaviside_PN = mkPN "Heaviside";
lin heavy_A = mkA "heavy" "heavier";
lin heavy_Adv = mkAdv "heavy";
lin heavy_N = mkN "heavy" ;
lin heavy_handed_A = compoundA (mkA "heavy-handed");
lin heavy_hearted_A = compoundA (mkA "heavy-hearted");
lin heavy_laden_A = compoundA (mkA "heavy-laden");
lin heavyhearted_A = mkA "heavyhearted" ;
lin heavyheartedness_N = mkN "heavyheartedness" ;
lin heavyweight_N = mkN "heavyweight" "heavyweights";
lin hebden_royal_PN = mkPN "Hebden royal";
lin hebdomadal_A = compoundA (mkA "hebdomadal");
lin hebephrenia_N = mkN "hebephrenia" ;
lin hebephrenic_A = mkA "hebephrenic" ;
lin hebetude_N = mkN "hebetude" ;
lin hebraic_A = compoundA (mkA "hebraic");
lin hebrew_A = compoundA (mkA "hebrew");
lin hebrew_N = mkN "hebrew" "hebrews";
lin hecatomb_N = mkN "hecatomb" "hecatombs";
lin heck_N = mkN "heck" "hecks";
lin heckelphone_N = mkN "heckelphone" ;
lin heckle_V2 = mkV2 (mkV "heckle" "heckles" "heckled" "heckled" "heckling");
lin heckler_N = mkN "heckler" "hecklers";
lin heckling_N = mkN "heckling" ;
lin hectare_N = mkN "hectare" "hectares";
lin hectic_A = compoundA (mkA "hectic");
lin hectogram_N = mkN "hectogram" ;
lin hectograph_N = mkN "hectograph" ;
lin hectoliter_N = mkN "hectoliter" ;
lin hectometer_N = mkN "hectometer" ;
lin hector_V = mkV "hector" "hectors" "hectored" "hectored" "hectoring";
lin hector_V2 = mkV2 (mkV "hector" "hectors" "hectored" "hectored" "hectoring");
lin hedge_N = mkN "hedge" "hedges";
lin hedge_V = mkV "hedge" "hedges" "hedged" "hedged" "hedging";
lin hedge_V2 = mkV2 (mkV "hedge" "hedges" "hedged" "hedged" "hedging");
lin hedge_end_PN = mkPN "Hedge end";
lin hedge_sparrow_N = mkN "hedge-sparrow" "hedge-sparrows";
lin hedgehog_N = mkN "hedgehog" "hedgehogs";
lin hedgehop_V = mkV "hedgehop" "hedgehops" "hedgehopped" "hedgehopped" "hedgehopping";
lin hedger_N = mkN "hedger" ;
lin hedgerow_N = mkN "hedgerow" "hedgerows";
lin hedonic_A = mkA "hedonic" ;
lin hedonism_N = mkN "hedonism" ;
lin hedonist_N = mkN "hedonist" "hedonists";
lin hedonistic_A = compoundA (mkA "hedonistic");
lin heed_N = mkN "heed" ;
lin heed_V2 = mkV2 (mkV "heed" "heeds" "heeded" "heeded" "heeding");
lin heedful_A = compoundA (mkA "heedful");
lin heedless_A = compoundA (mkA "heedless");
lin heedlessness_N = mkN "heedlessness" ;
lin heehaw_N = mkN "heehaw" "heehaws";
lin heel_N = mkN "heel" "heels";
lin heel_V = mkV "heel" "heels" "heeled" "heeled" "heeling";
lin heel_V2 = mkV2 (mkV "heel" "heels" "heeled" "heeled" "heeling");
lin heelbone_N = mkN "heelbone" ;
lin heft_N = mkN "heft" ;
lin hefty_A = mkA "hefty" "heftier";
lin hegari_N = mkN "hegari" ;
lin hegemon_N = mkN "hegemon" ;
lin hegemony_N = mkN "hegemony" "hegemonies";
lin hegira_N = mkN "hegira" "hegiras";
lin heidelburg_PN = mkPN "Heidelburg";
lin heifer_N = mkN "heifer" "heifers";
lin height_N = mkN "height" "heights";
lin heighten_V = mkV "heighten" "heightens" "heightened" "heightened" "heightening";
lin heighten_V2 = mkV2 (mkV "heighten" "heightens" "heightened" "heightened" "heightening");
lin heinous_A = compoundA (mkA "heinous");
lin heinousness_N = mkN "heinousness" ;
lin heir_N = mkN human (mkN "heir" "heirs");
lin heiress_N = mkN "heiress" "heiresses";
lin heirloom_N = mkN "heirloom" "heirlooms";
lin heist_N = mkN "heist" ;
lin hejira_N = mkN "hejira" "hejiras";
lin helen_PN = mkPN "Helen";
lin helensburgh_PN = mkPN "Helensburgh";
lin heliacal_A = mkA "heliacal" ;
lin helianthemum_N = mkN "helianthemum" ;
lin helicon_N = mkN "helicon" ;
lin helicopter_N = mkN "helicopter" "helicopters";
lin heliocentric_A = mkA "heliocentric" ;
lin heliogram_N = mkN "heliogram" ;
lin heliograph_N = mkN "heliograph" "heliographs";
lin heliograph_V2 = mkV2 (mkV "heliograph" "heliographs" "heliographed" "heliographed" "heliographing");
lin heliolatry_N = mkN "heliolatry" ;
lin heliometer_N = mkN "heliometer" ;
lin heliopause_N = mkN "heliopause" ;
lin heliophila_N = mkN "heliophila" ;
lin heliopsis_N = mkN "heliopsis" ;
lin heliosphere_N = mkN "heliosphere" ;
lin heliotherapy_N = mkN "heliotherapy" ;
lin heliotrope_N = mkN "heliotrope" "heliotropes";
lin heliotropism_N = mkN "heliotropism" ;
lin heliozoan_N = mkN "heliozoan" ;
lin heliport_N = mkN "heliport" "heliports";
lin helium_N = mkN "helium" ;
lin helix_N = mkN "helix" ;
lin hell_Interj = ss "hell";
lin hell_N = mkN "hell" "hells";
lin hellbender_N = mkN "hellbender" ;
lin hellcat_N = mkN "hellcat" "hellcats";
lin hellebore_N = mkN "hellebore" ;
lin helleborine_N = mkN "helleborine" ;
lin hellene_N = mkN "hellene" "hellenes";
lin hellenic_A = compoundA (mkA "hellenic");
lin hellfire_N = mkN "hellfire" ;
lin hellgrammiate_N = mkN "hellgrammiate" ;
lin hellhound_N = mkN "hellhound" ;
lin hellion_N = mkN "hellion" ;
lin hellish_A = compoundA (mkA "hellish");
lin hello_Interj = ss "hello";
lin helm_N = mkN "helm" "helms";
lin helmet_N = mkN "helmet" "helmets";
lin helmeted_A = compoundA (mkA "helmeted");
lin helmetflower_N = mkN "helmetflower" ;
lin helminth_N = mkN "helminth" ;
lin helminthiasis_N = mkN "helminthiasis" ;
lin helmsman_N = mkN masculine (mkN "helmsman" "helmsmen");
lin helot_N = mkN "helot" "helots";
lin help_N = mkN "help" "helps";
lin help_V = mkV "help" "helps" "helped" "helped" "helping";
lin help_V2 = mkV2 (mkV "help" "helps" "helped" "helped" "helping");
lin help_V2V = mkV2V (mkV "help" "helps" "helped" "helped" "helping") noPrep noPrep ;
lin help_VS = mkVS (mkV "help" "helps" "helped" "helped" "helping");
lin help_VV = infVV (mkV "help" "helps" "helped" "helped" "helping");
lin help_to_VV = mkVV (mkV "help" "helps" "helped" "helped" "helping");
lin helperMasc_N = mkN masculine (mkN "helper" "helpers");
lin helperFem_N = mkN feminine (mkN "helper" "helpers");
lin helpful_A = compoundA (mkA "helpful");
lin helpfulness_N = mkN "helpfulness" ;
lin helping_N = mkN "helping" "helpings";
lin helpless_A = compoundA (mkA "helpless");
lin helplessness_N = mkN "helplessness" ;
lin helpmate_N = mkN "helpmate" "helpmates";
lin helpmeet_N = mkN "helpmeet" "helpmeets";
lin helsinki_PN = mkPN "Helsinki";
lin helston_PN = mkPN "Helston";
lin helter_skelter_Adv = mkAdv "helter-skelter";
lin helter_skelter_N = mkN "helter-skelter" "helter-skelters";
lin helve_N = mkN "helve" "helves";
lin helvella_N = mkN "helvella" ;
lin hem_N = mkN "hem" "hems";
lin hem_V = mkV "hem" "hems" "hemmed" "hemmed" "hemming";
lin hem_V2 = mkV2 (mkV "hem" "hems" "hemmed" "hemmed" "hemming");
lin hemagglutination_N = mkN "hemagglutination" ;
lin hemal_A = mkA "hemal" ;
lin hemangioma_N = mkN "hemangioma" ;
lin hematemesis_N = mkN "hematemesis" ;
lin hematinic_N = mkN "hematinic" ;
lin hematite_N = mkN "hematite" "hematites";
lin hematocele_N = mkN "hematocele" ;
lin hematochezia_N = mkN "hematochezia" ;
lin hematochrome_N = mkN "hematochrome" ;
lin hematocolpometra_N = mkN "hematocolpometra" ;
lin hematocolpos_N = mkN "hematocolpos" ;
lin hematocrit_N = mkN "hematocrit" ;
lin hematocytopenia_N = mkN "hematocytopenia" ;
lin hematocyturia_N = mkN "hematocyturia" ;
lin hematologic_A = mkA "hematologic" ;
lin hematologist_N = mkN "hematologist" ;
lin hematology_N = mkN "hematology" ;
lin hematoma_N = mkN "hematoma" ;
lin hematopoiesis_N = mkN "hematopoiesis" ;
lin hematopoietic_A = mkA "hematopoietic" ;
lin hematuria_N = mkN "hematuria" ;
lin heme_N = mkN "heme" ;
lin hemel_hempstead_PN = mkPN "Hemel hempstead";
lin hemeralopia_N = mkN "hemeralopia" ;
lin hemiacetal_N = mkN "hemiacetal" ;
lin hemianopia_N = mkN "hemianopia" ;
lin hemic_A = mkA "hemic" ;
lin hemiepiphyte_N = mkN "hemiepiphyte" ;
lin hemimetabolous_A = mkA "hemimetabolous" ;
lin hemimetamorphosis_N = mkN "hemimetamorphosis" ;
lin hemimorphite_N = mkN "hemimorphite" ;
lin hemin_N = mkN "hemin" ;
lin hemiparasite_N = mkN "hemiparasite" ;
lin hemiparasitic_A = mkA "hemiparasitic" ;
lin hemiplegia_N = mkN "hemiplegia" ;
lin hemiplegic_N = mkN "hemiplegic" ;
lin hemisphere_N = mkN "hemisphere" "hemispheres";
lin hemispheric_A = mkA "hemispheric" ;
lin hemispherical_A = mkA "hemispherical" ;
lin hemline_N = mkN "hemline" "hemlines";
lin hemlock_N = mkN "hemlock" "hemlocks";
lin hemming_stitch_N = mkN "hemming-stitch" "hemming-stitches";
lin hemochromatosis_N = mkN "hemochromatosis" ;
lin hemodialysis_N = mkN "hemodialysis" ;
lin hemodynamic_A = mkA "hemodynamic" ;
lin hemodynamics_N = mkN "hemodynamics" ;
lin hemoglobin_N = mkN "hemoglobin" ;
lin hemoglobinemia_N = mkN "hemoglobinemia" ;
lin hemoglobinopathy_N = mkN "hemoglobinopathy" ;
lin hemoglobinuria_N = mkN "hemoglobinuria" ;
lin hemolysin_N = mkN "hemolysin" ;
lin hemolysis_N = mkN "hemolysis" ;
lin hemolytic_A = mkA "hemolytic" ;
lin hemophilia_N = mkN "hemophilia" ;
lin hemophiliac_N = mkN "hemophiliac" "hemophiliacs";
lin hemoprotein_N = mkN "hemoprotein" ;
lin hemoptysis_N = mkN "hemoptysis" ;
lin hemorrhage_N = mkN "hemorrhage" "hemorrhages";
lin hemorrhage_V = mkV "hemorrhage";
lin hemorrhage_V2 = mkV2 (mkV "hemorrhage");
lin hemorrhagic_A = mkA "hemorrhagic" ;
lin hemorrhoid_N = mkN "hemorrhoid" ;
lin hemorrhoidectomy_N = mkN "hemorrhoidectomy" ;
lin hemosiderin_N = mkN "hemosiderin" ;
lin hemosiderosis_N = mkN "hemosiderosis" ;
lin hemostasis_N = mkN "hemostasis" ;
lin hemostat_N = mkN "hemostat" ;
lin hemothorax_N = mkN "hemothorax" ;
lin hemp_N = mkN "hemp" ;
lin hempen_A = compoundA (mkA "hempen");
lin hemstitch_N = mkN "hemstitch" "hemstitches";
lin hemstitch_V2 = mkV2 (mkV "hemstitch" "hemstitches" "hemstitched" "hemstitched" "hemstitching");
lin hemsworth_PN = mkPN "Hemsworth";
lin hen_N = mkN "hen" "hens";
lin hen_party_N = mkN "hen-party" "hen-parties";
lin henbane_N = mkN "henbane" ;
lin henbit_N = mkN "henbit" ;
lin hence_Adv = mkAdv "hence";
lin henceforth_Adv = mkAdv "henceforth";
lin henceforward_Adv = mkAdv "henceforward";
lin henchman_N = mkN masculine (mkN "henchman" "henchmen");
lin hencoop_N = mkN "hencoop" "hencoops";
lin hendiadys_N = mkN "hendiadys" ;
lin henhouse_N = mkN "henhouse" "henhouses";
lin henley_on_thames_PN = mkPN "Henley-on-thames";
lin henna_N = mkN "henna" ;
lin hennaed_A = compoundA (mkA "hennaed");
lin henpecked_A = compoundA (mkA "henpecked");
lin henroost_N = mkN "henroost" "henroosts";
lin henry_N = mkN "henry" ;
lin henry_PN = mkPN "Henry";
lin hep_A = compoundA (mkA "hep");
lin hepadnavirus_N = mkN "hepadnavirus" ;
lin heparin_N = mkN "heparin" ;
lin hepatic_A = mkA "hepatic" ;
lin hepatica_N = mkN "hepatica" ;
lin hepatitis_N = mkN "hepatitis" ;
lin hepatoma_N = mkN "hepatoma" ;
lin hepatomegaly_N = mkN "hepatomegaly" ;
lin hepatotoxic_A = mkA "hepatotoxic" ;
lin hepatotoxin_N = mkN "hepatotoxin" ;
lin heptagon_N = mkN "heptagon" "heptagons";
lin heptane_N = mkN "heptane" ;
lin herald_N = mkN "herald" "heralds";
lin herald_V2 = mkV2 (mkV "herald" "heralds" "heralded" "heralded" "heralding");
lin heraldic_A = compoundA (mkA "heraldic");
lin heraldry_N = mkN "heraldry" ;
lin herb_N = mkN "herb" "herbs";
lin herb_PN = mkPN "Herb";
lin herbaceous_A = compoundA (mkA "herbaceous");
lin herbage_N = mkN "herbage" ;
lin herbal_A = compoundA (mkA "herbal");
lin herbalist_N = mkN "herbalist" "herbalists";
lin herbarium_N = mkN "herbarium" ;
lin herbert_PN = mkPN "Herbert";
lin herbicide_N = mkN "herbicide" ;
lin herbivore_N = mkN "herbivore" ;
lin herbivorous_A = compoundA (mkA "herbivorous");
lin herculean_A = compoundA (mkA "herculean");
lin herd_N = mkN "herd" "herds";
lin herd_V = mkV "herd" "herds" "herded" "herded" "herding";
lin herd_V2 = mkV2 (mkV "herd" "herds" "herded" "herded" "herding");
lin herder_N = mkN "herder" ;
lin herdsman_N = mkN masculine (mkN "herdsman" "herdsmen");
lin here_Adv = mkAdv "here";
lin hereabout_Adv = mkAdv "hereabout" ;
lin hereabouts_Adv = mkAdv "hereabouts";
lin hereafter_Adv = mkAdv "hereafter";
lin hereafter_N = mkN "hereafter" "IRREG";
lin hereby_Adv = mkAdv "hereby";
lin hereditament_N = mkN "hereditament" "hereditaments";
lin hereditarianism_N = mkN "hereditarianism" ;
lin hereditary_A = compoundA (mkA "hereditary");
lin heredity_N = mkN "heredity" ;
lin hereford_PN = mkPN "Hereford";
lin herein_Adv = mkAdv "herein";
lin hereinafter_Adv = mkAdv "hereinafter";
lin hereinbefore_Adv = mkAdv "hereinbefore";
lin hereness_N = mkN "hereness" ;
lin hereof_Adv = mkAdv "hereof";
lin heresy_N = mkN "heresy" "heresies";
lin heretic_N = mkN human (mkN "heretic" "heretics");
lin heretical_A = compoundA (mkA "heretical");
lin hereto_Adv = mkAdv "hereto";
lin heretofore_Adv = mkAdv "heretofore";
lin hereunder_Adv = mkAdv "hereunder" ;
lin hereupon_Adv = mkAdv "hereupon";
lin herewith_Adv = mkAdv "herewith";
lin heritable_A = compoundA (mkA "heritable");
lin heritage_N = mkN "heritage" "IRREG";
lin herm_N = mkN "herm" ;
lin hermaphrodite_N = mkN "hermaphrodite" "hermaphrodites";
lin hermaphroditic_A = mkA "hermaphroditic" ;
lin hermaphroditism_N = mkN "hermaphroditism" ;
lin hermeneutic_A = mkA "hermeneutic" ;
lin hermeneutics_N = mkN "hermeneutics" ;
lin hermetic_A = compoundA (mkA "hermetic");
lin hermetically_Adv = mkAdv "hermetically";
lin hermit_N = mkN "hermit" "hermits";
lin hermitage_N = mkN "hermitage" "hermitages";
lin herne_PN = mkPN "Herne";
lin herne_bay_PN = mkPN "Herne bay";
lin hernia_N = mkN "hernia" "hernias";
lin hero_N = mkN "hero" "heroes";
lin heroic_A = compoundA (mkA "heroic");
lin heroically_Adv = mkAdv "heroically";
lin heroics_N = mkN "heroics" "heroics";
lin heroin_N = mkN "heroin" ;
lin heroine_N = mkN "heroine" "heroines";
lin heroism_N = mkN "heroism" ;
lin heron_N = mkN "heron" "herons";
lin heronry_N = mkN "heronry" "heronries";
lin herpangia_N = mkN "herpangia" ;
lin herpes_N = mkN "herpes" ;
lin herpetologist_N = mkN "herpetologist" ;
lin herpetology_N = mkN "herpetology" ;
lin herr_N = mkN "herr" "IRREG";
lin herrerasaur_N = mkN "herrerasaur" ;
lin herring_N = mkN "herring" "herring";
lin herringbone_N = mkN "herringbone" ;
lin hertford_PN = mkPN "Hertford";
lin hertfordshire_PN = mkPN "Hertfordshire";
lin hertz_N = mkN "hertz" "hertz";
lin hertzian_A = compoundA (mkA "hertzian");
lin hesitance_N = mkN "hesitance" "IRREG";
lin hesitancy_N = mkN "hesitancy" ;
lin hesitant_A = compoundA (mkA "hesitant");
lin hesitate_V = mkV "hesitate" "hesitates" "hesitated" "hesitated" "hesitating";
lin hesitate_VV = mkVV (mkV "hesitate" "hesitates" "hesitated" "hesitated" "hesitating");
lin hesitatingly_Adv = mkAdv "hesitatingly";
lin hesitation_N = mkN "hesitation" "hesitations";
lin hessian_N = mkN "hessian" ;
lin het_up_A = compoundA (mkA "het-up");
lin heterocercal_A = mkA "heterocercal" ;
lin heterocyclic_A = mkA "heterocyclic" ;
lin heterodactyl_A = mkA "heterodactyl" ;
lin heterodox_A = compoundA (mkA "heterodox");
lin heterodoxy_N = mkN "heterodoxy" ;
lin heterodyne_A = mkA "heterodyne" ;
lin heteroecious_A = mkA "heteroecious" ;
lin heterogeneity_N = mkN "heterogeneity" ;
lin heterogeneous_A = compoundA (mkA "heterogeneous");
lin heterogenous_A = mkA "heterogenous" ;
lin heterograft_N = mkN "heterograft" ;
lin heteroicous_A = mkA "heteroicous" ;
lin heterologous_A = mkA "heterologous" ;
lin heterology_N = mkN "heterology" ;
lin heterometabolism_N = mkN "heterometabolism" ;
lin heterometabolous_A = mkA "heterometabolous" ;
lin heteronym_N = mkN "heteronym" ;
lin heteroploid_N = mkN "heteroploid" ;
lin heteroploidy_N = mkN "heteroploidy" ;
lin heterosexism_N = mkN "heterosexism" ;
lin heterosexual_A = compoundA (mkA "heterosexual");
lin heterosexual_N = mkN "heterosexual" "heterosexuals";
lin heterosexuality_N = mkN "heterosexuality" ;
lin heterosis_N = mkN "heterosis" ;
lin heterosporous_A = mkA "heterosporous" ;
lin heterospory_N = mkN "heterospory" ;
lin heterostracan_N = mkN "heterostracan" ;
lin heterotroph_N = mkN "heterotroph" ;
lin heterotrophic_A = mkA "heterotrophic" ;
lin heterozygosity_N = mkN "heterozygosity" ;
lin heterozygote_N = mkN "heterozygote" ;
lin heterozygous_A = mkA "heterozygous" ;
lin heth_N = mkN "heth" ;
lin hetton_PN = mkPN "Hetton";
lin heulandite_N = mkN "heulandite" ;
lin heuristic_A = compoundA (mkA "heuristic");
lin heuristic_N = mkN "heuristic" ;
lin heuristics_N = mkN "heuristics" "heuristics";
lin hew_V = mkV "hew" "hews" "hewed" "hewed" "hewing";
lin hew_V2 = mkV2 (mkV "hew" "hews" "hewed" "hewed" "hewing");
lin hewer_N = mkN "hewer" "hewers";
lin hewn_A = mkA "hewn" ;
lin hex_N = mkN "hex" ;
lin hexachlorophene_N = mkN "hexachlorophene" ;
lin hexadecimal_A = mkA "hexadecimal" ;
lin hexagon_N = mkN "hexagon" "hexagons";
lin hexagonal_A = compoundA (mkA "hexagonal");
lin hexagram_N = mkN "hexagram" ;
lin hexahedron_N = mkN "hexahedron" ;
lin hexameter_N = mkN "hexameter" "hexameters";
lin hexane_N = mkN "hexane" ;
lin hexangular_A = mkA "hexangular" ;
lin hexapod_N = mkN "hexapod" ;
lin hexed_A = mkA "hexed" ;
lin hexestrol_N = mkN "hexestrol" ;
lin hexham_PN = mkPN "Hexham";
lin hexose_N = mkN "hexose" ;
lin hey_Interj = ss "hey";
lin heyday_N = mkN "heyday" "IRREG";
lin heysham_PN = mkPN "Heysham";
lin heywood_PN = mkPN "Heywood";
lin hi_Interj = ss "hi" ;
lin hi_fi_A = compoundA (mkA "hi-fi");
lin hi_fi_N = mkN "hi-fi" "hi-fis";
lin hiatus_N = mkN "hiatus" "hiatuses";
lin hibachi_N = mkN "hibachi" ;
lin hibernate_V = mkV "hibernate" "hibernates" "hibernated" "hibernated" "hibernating";
lin hibernation_N = mkN "hibernation" ;
lin hibiscus_N = mkN "hibiscus" ;
lin hiccough_N = mkN "hiccough" "hiccoughs";
lin hiccough_V = mkV "hiccough" "hiccoughs" "hiccoughed" "hiccoughed" "hiccoughing";
lin hiccup_N = mkN "hiccup" "hiccups";
lin hiccup_V = mkV "hiccup" "hiccups" "hiccupped" "hiccupped" "hiccupping";
lin hick_A = compoundA (mkA "hick");
lin hick_N = mkN "hick" "hicks";
lin hickey_N = mkN "hickey" ;
lin hickory_N = mkN "hickory" "hickories";
lin hiddenite_N = mkN "hiddenite" ;
lin hiddenness_N = mkN "hiddenness" ;
lin hide_N = mkN "hide" "hides";
lin hide_V = IrregEng.hide_V;
lin hide_V2 = mkV2 (IrregEng.hide_V);
lin hide_and_seek_N = mkN "hide-and-seek" ;
lin hide_out_N = mkN "hide-out" "hide-outs";
lin hideaway_N = mkN "hideaway" "hideaways";
lin hidebound_A = compoundA (mkA "hidebound");
lin hideous_A = compoundA (mkA "hideous");
lin hideousness_N = mkN "hideousness" ;
lin hideout_N = mkN "hideout" ;
lin hiding_N = mkN "hiding" "hidings";
lin hiding_place_N = mkN "hiding-place" "hiding-places";
lin hidrotic_A = mkA "hidrotic" ;
lin hie_V = mkV "hie" "IRREG" "IRREG" "IRREG" "IRREG";
lin hierarch_N = mkN "hierarch" ;
lin hierarchic_A = compoundA (mkA "hierarchic");
lin hierarchical_A = compoundA (mkA "hierarchical");
lin hierarchy_N = mkN "hierarchy" "hierarchies";
lin hieratic_A = mkA "hieratic" ;
lin hieratic_N = mkN "hieratic" ;
lin hierocracy_N = mkN "hierocracy" ;
lin hieroglyph_N = mkN "hieroglyph" "hieroglyphs";
lin hieroglyphic_A = compoundA (mkA "hieroglyphic");
lin hieroglyphically_Adv = mkAdv "hieroglyphically" ;
lin hieroglyphics_N = mkN "hieroglyphics" "hieroglyphics";
lin higgledy_piggledy_A = compoundA (mkA "higgledy-piggledy");
lin higgledy_piggledy_Adv = mkAdv "higgledy-piggledy";
lin high_A = mkA "high" "higher";
lin high_Adv = mkAdv "high";
lin high_N = mkN "high" ;
lin high_class_A = compoundA (mkA "high-class");
lin high_falutin_A = compoundA (mkA "high-falutin");
lin high_fidelity_A = compoundA (mkA "high-fidelity");
lin high_fidelity_N = mkN "high-fidelity" ;
lin high_frequency_N = mkN "high-frequency" "high-frequencies";
lin high_grade_A = compoundA (mkA "high-grade");
lin high_handed_A = compoundA (mkA "high-handed");
lin high_keyed_A = compoundA (mkA "high-keyed");
lin high_level_A = compoundA (mkA "high-level");
lin high_minded_A = compoundA (mkA "high-minded");
lin high_mindedness_N = mkN "high-mindedness" ;
lin high_necked_A = compoundA (mkA "high-necked");
lin high_octane_A = compoundA (mkA "high-octane");
lin high_pitched_A = compoundA (mkA "high-pitched");
lin high_powered_A = compoundA (mkA "high-powered");
lin high_pressure_N = mkN "high-pressure" ;
lin high_priced_A = compoundA (mkA "high-priced");
lin high_principled_A = compoundA (mkA "high-principled");
lin high_ranking_A = compoundA (mkA "high-ranking");
lin high_rise_A = compoundA (mkA "high-rise");
lin high_sounding_A = compoundA (mkA "high-sounding");
lin high_speed_A = compoundA (mkA "high-speed");
lin high_spen_PN = mkPN "High spen";
lin high_spirited_A = compoundA (mkA "high-spirited");
lin high_tension_A = compoundA (mkA "high-tension");
lin high_toned_A = compoundA (mkA "high-toned");
lin high_up_N = mkN "high-up" "high-ups";
lin high_wycombe_PN = mkPN "High wycombe";
lin highball_N = mkN "highball" "highballs";
lin highbinder_N = mkN "highbinder" ;
lin highboard_N = mkN "highboard" ;
lin highborn_A = compoundA (mkA "highborn");
lin highboy_N = mkN "highboy" "highboys";
lin highbrow_A = compoundA (mkA "highbrow");
lin highbrow_N = mkN "highbrow" "highbrows";
lin highchair_N = mkN "highchair" ;
lin highflier_N = mkN "highflier" "highfliers";
lin highflown_A = compoundA (mkA "highflown");
lin highflyer_N = mkN "highflyer" "highflyers";
lin highflying_A = compoundA (mkA "highflying");
lin highjack_N = mkN "highjack" "highjacks";
lin highjack_V2 = mkV2 (mkV "highjack" "highjacks" "highjacked" "highjacked" "highjacking");
lin highjacker_N = mkN "highjacker" ;
lin highjacking_N = mkN "highjacking" ;
lin highland_N = mkN "highland" "highlands";
lin highland_PN = mkPN "Highland";
lin highlander_N = mkN "highlander" "highlanders";
lin highlight_N = mkN "highlight" "highlights";
lin highlight_V2 = mkV2 (mkV "highlight" "highlights" "highlighted" "highlighted" "highlighting");
lin highlighter_N = mkN "highlighter" ;
lin highness_N = mkN "highness" "highnesses";
lin highroad_N = mkN "highroad" "highroads";
lin highway_N = mkN "highway" "highways";
lin highwayman_N = mkN masculine (mkN "highwayman" "highwaymen");
lin hijab_N = mkN "hijab" ;
lin hijack_N = mkN "hijack" "hijacks";
lin hijack_V2 = mkV2 (mkV "hijack" "hijacks" "hijacked" "hijacked" "hijacking");
lin hijacker_N = mkN "hijacker" "hijackers";
lin hike_N = mkN "hike" "hikes";
lin hike_V = mkV "hike" "hikes" "hiked" "hiked" "hiking";
lin hiker_N = mkN "hiker" "hikers";
lin hilar_A = mkA "hilar" ;
lin hilarious_A = compoundA (mkA "hilarious");
lin hilarity_N = mkN "hilarity" ;
lin hilary_PN = mkPN "Hilary";
lin hilda_PN = mkPN "Hilda";
lin hill_N = mkN "hill" "hills";
lin hill_billy_N = mkN "hill-billy" "hill-billies";
lin hillbilly_N = mkN "hillbilly" ;
lin hilliness_N = mkN "hilliness" ;
lin hillingdon_PN = mkPN "Hillingdon";
lin hillock_N = mkN "hillock" "hillocks";
lin hillside_N = mkN "hillside" "hillsides";
lin hilltop_N = mkN "hilltop" ;
lin hilly_A = mkA "hilly" "hillier";
lin hilt_N = mkN "hilt" "hilts";
lin hilum_N = mkN "hilum" ;
lin hilus_N = mkN "hilus" ;
lin hin_N = mkN "hin" ;
lin hinckley_PN = mkPN "Hinckley";
lin hind_A = compoundA (mkA "hind");
lin hind_N = mkN "hind" "hinds";
lin hindbrain_N = mkN "hindbrain" ;
lin hinder_V2 = mkV2 (mkV "hinder" "hinders" "hindered" "hindered" "hindering");
lin hindfoot_N = mkN "hindfoot" ;
lin hindgut_N = mkN "hindgut" ;
lin hindi_A = compoundA (mkA "hindi");
lin hindi_N = mkN "hindi" ;
lin hindmost_A = compoundA (mkA "hindmost");
lin hindquarter_N = mkN "hindquarter" ;
lin hindquarters_N = mkN "hindquarters" ;
lin hindrance_N = mkN "hindrance" "hindrances";
lin hindshank_N = mkN "hindshank" ;
lin hindsight_N = mkN "hindsight" ;
lin hindu_A = compoundA (mkA "hindu");
lin hindu_N = mkN "hindu" "hindus";
lin hinduism_N = mkN "hinduism" ;
lin hindustani_A = compoundA (mkA "hindustani");
lin hindustani_N = mkN "hindustani" "hindustanis";
lin hinge_N = mkN "hinge" "hinges";
lin hinge_V = mkV "hinge" "hinges" "hinged" "hinged" "hinging";
lin hinge_V2 = mkV2 (mkV "hinge" "hinges" "hinged" "hinged" "hinging");
lin hinny_N = mkN "hinny" ;
lin hint_N = mkN "hint" "hints";
lin hint_V = mkV "hint" "hints" "hinted" "hinted" "hinting";
lin hint_V2 = mkV2 (mkV "hint" "hints" "hinted" "hinted" "hinting");
lin hint_VS = mkVS (mkV "hint" "hints" "hinted" "hinted" "hinting");
lin hinterland_N = mkN "hinterland" "hinterlands";
lin hip_A = compoundA (mkA "hip");
lin hip_N = mkN "hip" "hips";
lin hip_bath_N = mkN "hip-bath" "hip-baths";
lin hip_flask_N = mkN "hip-flask" "hip-flasks";
lin hip_pocket_N = mkN "hip-pocket" "hip-pockets";
lin hipbone_N = mkN "hipbone" ;
lin hipflask_N = mkN "hipflask" ;
lin hiplength_A = mkA "hiplength" ;
lin hipless_A = mkA "hipless" ;
lin hipline_N = mkN "hipline" ;
lin hippeastrum_N = mkN "hippeastrum" ;
lin hipped_A = mkA "hipped" ;
lin hippie_N = mkN "hippie" "hippies";
lin hippo_N = mkN "hippo" "hippos";
lin hippocampus_N = mkN "hippocampus" ;
lin hippocratic_A = compoundA (mkA "hippocratic");
lin hippodrome_N = mkN "hippodrome" "hippodromes";
lin hippopotamus_N = mkN "hippopotamus" "hippopotamuses";
lin hippy_N = mkN "hippy" "hippies";
lin hircine_A = mkA "hircine" ;
lin hire_N = mkN "hire" ;
lin hire_V = mkV "hire";
lin hire_V2 = mkV2 (mkV "hire" "hires" "hired" "hired" "hiring");
lin hire_V2V = mkV2V (mkV "hire") noPrep to_Prep ;
lin hire_VS = mkVS (mkV "hire");
lin hireling_N = mkN human (mkN "hireling" "hirelings");
lin hiroshima_PN = mkPN "Hiroshima";
lin hirsute_A = compoundA (mkA "hirsute");
lin hirsuteness_N = mkN "hirsuteness" ;
lin hispid_A = mkA "hispid" ;
lin hiss_N = mkN "hiss" "hisses";
lin hiss_V = mkV "hiss" "hisses" "hissed" "hissed" "hissing";
lin hiss_V2 = mkV2 (mkV "hiss" "hisses" "hissed" "hissed" "hissing");
lin hiss_VQ = mkVQ (mkV "hiss" "hisses" "hissed" "hissed" "hissing");
lin hisser_N = mkN "hisser" ;
lin histaminase_N = mkN "histaminase" ;
lin histamine_N = mkN "histamine" ;
lin histidine_N = mkN "histidine" ;
lin histiocyte_N = mkN "histiocyte" ;
lin histiocytosis_N = mkN "histiocytosis" ;
lin histocompatibility_N = mkN "histocompatibility" ;
lin histogram_N = mkN "histogram" "histograms";
lin histoincompatibility_N = mkN "histoincompatibility" ;
lin histological_A = mkA "histological" ;
lin histologist_N = mkN "histologist" ;
lin histology_N = mkN "histology" ;
lin histone_N = mkN "histone" ;
lin historian_N = mkN human (mkN "historian" "historians");
lin historic_A = compoundA (mkA "historic");
lin historical_A = compoundA (mkA "historical");
lin historicalness_N = mkN "historicalness" ;
lin historicism_N = mkN "historicism" ;
lin historicize_V2 = mkV2 (mkV "historicize");
lin historiography_N = mkN "historiography" ;
lin history_N = mkN "history" "histories";
lin histrionic_A = compoundA (mkA "histrionic");
lin histrionics_N = mkN "histrionics" "histrionics";
lin hit_N = mkN "hit" "hits";
lin hit_V = IrregEng.hit_V;
lin hit_V2 = mkV2 (IrregEng.hit_V);
lin hit_and_run_A = compoundA (mkA "hit-and-run");
lin hitch_N = mkN "hitch" "hitches";
lin hitch_V = mkV "hitch" "hitches" "hitched" "hitched" "hitching";
lin hitch_V2 = mkV2 (mkV "hitch" "hitches" "hitched" "hitched" "hitching");
lin hitchhike_V = mkV "hitchhike" "hitchhikes" "hitchhiked" "hitchhiked" "hitchhiking";
lin hitchhiker_N = mkN "hitchhiker" "hitchhikers";
lin hitchin_PN = mkPN "Hitchin";
lin hitchrack_N = mkN "hitchrack" ;
lin hither_Adv = mkAdv "hither";
lin hitherto_Adv = mkAdv "hitherto";
lin hitless_A = mkA "hitless" ;
lin hitter_N = mkN "hitter" ;
lin hive_N = mkN "hive" "hives";
lin hive_V = mkV "hive" "hives" "hived" "hived" "hiving";
lin hive_V2 = mkV2 (mkV "hive" "hives" "hived" "hived" "hiving");
lin hm_PN = mkPN "Hm";
lin hmso_PN = mkPN "Hmso";
lin hoar_A = compoundA (mkA "hoar");
lin hoard_N = mkN "hoard" "hoards";
lin hoard_V = mkV "hoard" "hoards" "hoarded" "hoarded" "hoarding";
lin hoard_V2 = mkV2 (mkV "hoard" "hoards" "hoarded" "hoarded" "hoarding");
lin hoarder_N = mkN "hoarder" "hoarders";
lin hoarding_N = mkN "hoarding" "hoardings";
lin hoarfrost_N = mkN "hoarfrost" ;
lin hoariness_N = mkN "hoariness" ;
lin hoarse_A = mkA "hoarse" "hoarser";
lin hoarseness_N = mkN "hoarseness" ;
lin hoary_A = mkA "hoary" "hoarier";
lin hoatzin_N = mkN "hoatzin" ;
lin hoax_N = mkN "hoax" "hoaxes";
lin hoax_V2 = mkV2 (mkV "hoax" "hoaxes" "hoaxed" "hoaxed" "hoaxing");
lin hoaxer_N = mkN "hoaxer" "hoaxers";
lin hob_N = mkN "hob" "hobs";
lin hobbit_N = mkN "hobbit" ;
lin hobble_N = mkN "hobble" "hobbles";
lin hobble_V = mkV "hobble" "hobbles" "hobbled" "hobbled" "hobbling";
lin hobble_V2 = mkV2 (mkV "hobble" "hobbles" "hobbled" "hobbled" "hobbling");
lin hobble_skirt_N = mkN "hobble-skirt" "hobble-skirts";
lin hobbledehoy_N = mkN "hobbledehoy" "hobbledehoys";
lin hobbler_N = mkN "hobbler" ;
lin hobby_N = mkN "hobby" "hobbies";
lin hobbyhorse_N = mkN "hobbyhorse" "hobbyhorses";
lin hobbyism_N = mkN "hobbyism" ;
lin hobbyist_N = mkN "hobbyist" ;
lin hobgoblin_N = mkN "hobgoblin" "hobgoblins";
lin hobnail_N = mkN "hobnail" "hobnails";
lin hobnailed_A = compoundA (mkA "hobnailed");
lin hobnob_V = mkV "hobnob" "hobnobs" "hobnobbed" "hobnobbed" "hobnobbing";
lin hobo_N = mkN "hobo" "hobos";
lin hobson_PN = mkPN "Hobson";
lin hock_N = mkN "hock" "hocks";
lin hock_V2 = mkV2 (mkV "hock" "hocks" "hocked" "hocked" "hocking");
lin hockey_N = mkN "hockey" ;
lin hockley_PN = mkPN "Hockley";
lin hocus_pocus_N = mkN "hocus-pocus" ;
lin hod_N = mkN "hod" "hods";
lin hoddesdon_PN = mkPN "Hoddesdon";
lin hodgepodge_N = mkN "hodgepodge" ;
lin hodoscope_N = mkN "hodoscope" ;
lin hoe_N = mkN "hoe" "hoes";
lin hoe_V = mkV "hoe" "IRREG" "IRREG" "IRREG" "IRREG";
lin hoe_V2 = mkV2 (mkV "hoe" "IRREG" "IRREG" "IRREG" "IRREG");
lin hoecake_N = mkN "hoecake" ;
lin hofei_PN = mkPN "Hofei";
lin hog_N = mkN "hog" "hogs";
lin hog_V2 = mkV2 (mkV "hog" "hogs" "hogged" "hogged" "hogging");
lin hogan_N = mkN "hogan" ;
lin hogback_N = mkN "hogback" ;
lin hogchoker_N = mkN "hogchoker" ;
lin hogfish_N = mkN "hogfish" ;
lin hoggish_A = compoundA (mkA "hoggish");
lin hogmanay_N = mkN "hogmanay" "hogmanays";
lin hogmanay_PN = mkPN "Hogmanay";
lin hogshead_N = mkN "hogshead" "hogsheads";
lin hogwash_N = mkN "hogwash" ;
lin hoist_N = mkN "hoist" "hoists";
lin hoist_V2 = mkV2 (mkV "hoist" "hoists" "hoisted" "hoisted" "hoisting");
lin hoister_N = mkN "hoister" ;
lin hoity_toity_A = compoundA (mkA "hoity-toity");
lin hold_N = mkN "hold" "holds";
lin hold_V = IrregEng.hold_V;
lin hold_V2 = mkV2 (IrregEng.hold_V);
lin hold_V2V = mkV2V (IrregEng.hold_V) noPrep to_Prep ;
lin hold_V3 = mkV3 (IrregEng.hold_V) noPrep noPrep;
lin hold_VS = mkVS (IrregEng.hold_V);
lin hold_up_N = mkN "hold-up" "hold-ups";
lin holdall_N = mkN "holdall" "holdalls";
lin holder_N = mkN "holder" "holders";
lin holding_N = mkN "holding" "holdings";
lin holdout_N = mkN "holdout" ;
lin holdover_N = mkN "holdover" ;
lin holdup_N = mkN "holdup" "holdups";
lin hole_N = mkN "hole" "holes";
lin hole_V = mkV "hole" "holes" "holed" "holed" "holing";
lin hole_V2 = mkV2 (mkV "hole" "holes" "holed" "holed" "holing");
lin hole_and_corner_A = compoundA (mkA "hole-and-corner");
lin holey_A = mkA "holey" ;
lin holiday_N = mkN "holiday" "holidays";
lin holiday_V = mkV "holiday" "holidays" "holidayed" "holidayed" "holidaying";
lin holiday_maker_N = mkN "holiday-maker" "holiday-makers";
lin holiness_N = mkN "holiness" ;
lin holism_N = mkN "holism" ;
lin holistic_A = mkA "holistic" ;
lin holland_PN = mkPN "Holland";
lin hollandaise_N = mkN "hollandaise" ;
lin hollander_A = compoundA (mkA "hollander");
lin hollander_N = mkN "hollander" "hollanders";
lin holler_V = mkV "holler" "hollers" "hollered" "hollered" "hollering";
lin holler_V2 = mkV2 (mkV "holler" "hollers" "hollered" "hollered" "hollering");
lin holloa_N = mkN "holloa" "holloas";
lin hollow_A = compoundA (mkA "hollow");
lin hollow_N = mkN "hollow" "hollows";
lin hollow_V2 = mkV2 (mkV "hollow" "hollows" "hollowed" "hollowed" "hollowing");
lin hollowness_N = mkN "hollowness" ;
lin hollowware_N = mkN "hollowware" ;
lin holly_N = mkN "holly" ;
lin hollyhock_N = mkN "hollyhock" "hollyhocks";
lin hollywood_PN = mkPN "Hollywood";
lin holm_oak_N = mkN "holm-oak" "holm-oaks";
lin holmfirth_PN = mkPN "Holmfirth";
lin holmium_N = mkN "holmium" ;
lin holocaust_N = mkN "holocaust" "holocausts";
lin holocephalan_N = mkN "holocephalan" ;
lin hologram_N = mkN "hologram" ;
lin holograph_N = mkN "holograph" "holographs";
lin holographic_A = mkA "holographic" ;
lin holography_N = mkN "holography" ;
lin holometabola_N = mkN "holometabola" ;
lin holometabolic_A = mkA "holometabolic" ;
lin holometabolism_N = mkN "holometabolism" ;
lin holonym_N = mkN "holonym" ;
lin holonymy_N = mkN "holonymy" ;
lin holophyte_N = mkN "holophyte" ;
lin holophytic_A = mkA "holophytic" ;
lin holozoic_A = mkA "holozoic" ;
lin holster_N = mkN "holster" "holsters";
lin holy_A = mkA "holy" "holier";
lin holy_N = mkN "holy" "holies";
lin holyhead_PN = mkPN "Holyhead";
lin holystone_N = mkN "holystone" ;
lin holystone_V2 = mkV2 (mkV "holystone" "holystones" "holystoned" "holystoned" "holystoning");
lin homage_N = mkN "homage" ;
lin home_A = mkA "home" ;
lin home_Adv = mkAdv "home";
lin home_N = mkN "home" "homes";
lin home_baked_A = compoundA (mkA "home-baked");
lin home_brewed_A = compoundA (mkA "home-brewed");
lin home_cured_A = compoundA (mkA "home-cured");
lin home_farm_N = mkN "home-farm" "home-farms";
lin home_grown_A = compoundA (mkA "home-grown");
lin home_made_A = compoundA (mkA "home-made");
lin homebound_A = mkA "homebound" ;
lin homebound_N = mkN "homebound" ;
lin homeboy_N = mkN "homeboy" ;
lin homebuilder_N = mkN "homebuilder" ;
lin homecoming_N = mkN "homecoming" "homecomings";
lin homefolk_N = mkN "homefolk" ;
lin homegirl_N = mkN "homegirl" ;
lin homegrown_A = mkA "homegrown" ;
lin homeland_N = mkN "homeland" "homelands";
lin homeless_A = compoundA (mkA "homeless");
lin homeless_N = mkN "homeless" ;
lin homelessness_N = mkN "homelessness" ;
lin homelike_A = compoundA (mkA "homelike");
lin homeliness_N = mkN "homeliness" ;
lin homely_A = mkA "homely" "homelier";
lin homemade_A = mkA "homemade" ;
lin homemaking_N = mkN "homemaking" ;
lin homeobox_N = mkN "homeobox" ;
lin homeopath_N = mkN "homeopath" "homeopaths";
lin homeopathic_A = compoundA (mkA "homeopathic");
lin homeopathy_N = mkN "homeopathy" ;
lin homeostasis_N = mkN "homeostasis" ;
lin homeostatic_A = mkA "homeostatic" ;
lin homeostatically_Adv = mkAdv "homeostatically" ;
lin homeotherm_N = mkN "homeotherm" ;
lin homeowner_N = mkN "homeowner" ;
lin homer_N = mkN "homer" ;
lin homer_V = mkV "homer";
lin homeric_A = compoundA (mkA "homeric");
lin homesick_A = compoundA (mkA "homesick");
lin homesickness_N = mkN "homesickness" ;
lin homespun_A = compoundA (mkA "homespun");
lin homespun_N = mkN "homespun" ;
lin homestead_N = mkN "homestead" "homesteads";
lin homestretch_N = mkN "homestretch" ;
lin hometown_N = mkN "hometown" ;
lin homeward_A = compoundA (mkA "homeward");
lin homeward_Adv = mkAdv "homeward";
lin homewards_Adv = mkAdv "homewards";
lin homework_N = mkN "homework" ;
lin homey_A = compoundA (mkA "homey");
lin homicidal_A = compoundA (mkA "homicidal");
lin homicide_N = mkN "homicide" "homicides";
lin homiletic_A = compoundA (mkA "homiletic");
lin homiletics_N = mkN "homiletics" "homiletics";
lin homily_N = mkN "homily" "homilies";
lin hominal_A = mkA "hominal" ;
lin homing_A = compoundA (mkA "homing");
lin hominian_A = mkA "hominian" ;
lin hominid_N = mkN "hominid" ;
lin hominine_A = mkA "hominine" ;
lin hominoid_N = mkN "hominoid" ;
lin hominy_N = mkN "hominy" ;
lin homo_N = mkN human (mkN "homo" "homos");
lin homo_sapiens_N = mkN "homo sapiens" "IRREG";
lin homocercal_A = mkA "homocercal" ;
lin homocyclic_A = mkA "homocyclic" ;
lin homoeopath_N = mkN "homoeopath" "homoeopaths";
lin homoeopathy_N = mkN "homoeopathy" ;
lin homoerotic_A = mkA "homoerotic" ;
lin homogenate_N = mkN "homogenate" ;
lin homogeneity_N = mkN "homogeneity" ;
lin homogeneous_A = compoundA (mkA "homogeneous");
lin homogenization_N = mkN "homogenization" ;
lin homogenize_V2 = mkV2 (mkV "homogenize" "homogenizes" "homogenized" "homogenized" "homogenizing");
lin homogeny_N = mkN "homogeny" ;
lin homograft_N = mkN "homograft" ;
lin homograph_N = mkN "homograph" "homographs";
lin homoiothermic_A = mkA "homoiothermic" ;
lin homologic_A = mkA "homologic" ;
lin homologous_A = mkA "homologous" ;
lin homology_N = mkN "homology" ;
lin homomorphism_N = mkN "homomorphism" ;
lin homonym_N = mkN "homonym" "homonyms";
lin homonymic_A = mkA "homonymic" ;
lin homonymy_N = mkN "homonymy" ;
lin homophobe_N = mkN "homophobe" ;
lin homophobia_N = mkN "homophobia" ;
lin homophobic_A = mkA "homophobic" ;
lin homophone_N = mkN "homophone" "homophones";
lin homophonic_A = mkA "homophonic" ;
lin homophonous_A = mkA "homophonous" ;
lin homophony_N = mkN "homophony" ;
lin homosexual_A = compoundA (mkA "homosexual");
lin homosexual_N = mkN "homosexual" "homosexuals";
lin homosexuality_N = mkN "homosexuality" ;
lin homosporous_A = mkA "homosporous" ;
lin homospory_N = mkN "homospory" ;
lin homostylous_A = mkA "homostylous" ;
lin homozygosity_N = mkN "homozygosity" ;
lin homozygote_N = mkN "homozygote" ;
lin homozygous_A = mkA "homozygous" ;
lin homunculus_N = mkN "homunculus" ;
lin hon_PN = mkPN "Hon";
lin honduran_A = compoundA (mkA "honduran");
lin honduran_N = mkN "honduran" "hondurans";
lin honduras_PN = mkPN "Honduras";
lin hone_N = mkN "hone" "hones";
lin hone_V2 = mkV2 (mkV "hone" "hones" "honed" "honed" "honing");
lin honest_A = compoundA (mkA "honest");
lin honesty_N = mkN "honesty" ;
lin honey_A = mkA "honey" ;
lin honey_N = mkN "honey" "honeys";
lin honeybee_N = mkN "honeybee" "honeybees";
lin honeycomb_N = mkN "honeycomb" "honeycombs";
lin honeycomb_V2 = mkV2 (mkV "honeycomb" "honeycombs" "honeycombed" "honeycombed" "honeycombing");
lin honeycreeper_N = mkN "honeycreeper" ;
lin honeydew_N = mkN "honeydew" ;
lin honeyed_A = compoundA (mkA "honeyed");
lin honeyflower_N = mkN "honeyflower" ;
lin honeylike_A = mkA "honeylike" ;
lin honeymoon_N = mkN "honeymoon" "honeymoons";
lin honeymoon_V = mkV "honeymoon" "honeymoons" "honeymooned" "honeymooned" "honeymooning";
lin honeypot_N = mkN "honeypot" ;
lin honeysuckle_N = mkN "honeysuckle" ;
lin hong_kong_PN = mkPN "Hong Kong";
lin honiton_PN = mkPN "Honiton";
lin honk_N = mkN "honk" "honks";
lin honk_V = mkV "honk" "honks" "honked" "honked" "honking";
lin honker_N = mkN "honker" ;
lin honkytonk_N = mkN "honkytonk" ;
lin honorarium_N = mkN "honorarium" "honorariums";
lin honorary_A = compoundA (mkA "honorary");
lin honoree_N = mkN "honoree" ;
lin honorific_A = compoundA (mkA "honorific");
lin honorific_N = mkN "honorific" "honorifics";
lin honoring_N = mkN "honoring" ;
lin honour_N = mkN (variants {"honour"; "honor"});
lin honour_V2 = mkV2 (mkV (variants {"honour"; "honor"}));
lin honourable_A = compoundA (mkA (variants {"honourable"; "honorable"}));
lin honourableness_N = mkN (variants {"honourableness"; "honorableness"});
lin hoo_PN = mkPN "Hoo";
lin hooch_N = mkN "hooch" ;
lin hood_N = mkN "hood" "hoods";
lin hood_V2 = mkV2 (mkV "hood" "hoods" "hooded" "hooded" "hooding");
lin hoodlum_N = mkN "hoodlum" "hoodlums";
lin hoodoo_N = mkN "hoodoo" "hoodoos";
lin hoodoo_V2 = mkV2 (mkV "hoodoo" "hoodoos" "hoodooed" "hoodooed" "hoodooing");
lin hoodwink_V2 = mkV2 (mkV "hoodwink" "hoodwinks" "hoodwinked" "hoodwinked" "hoodwinking");
lin hooey_N = mkN "hooey" ;
lin hoof_N = mkN "hoof" "hoofs";
lin hoofer_N = mkN "hoofer" ;
lin hooflike_A = mkA "hooflike" ;
lin hoofprint_N = mkN "hoofprint" ;
lin hook_N = mkN "hook" "hooks";
lin hook_V = mkV "hook" "hooks" "hooked" "hooked" "hooking";
lin hook_V2 = mkV2 (mkV "hook" "hooks" "hooked" "hooked" "hooking");
lin hook_nosed_A = compoundA (mkA "hook-nosed");
lin hook_up_N = mkN "hook-up" "hook-ups";
lin hookah_N = mkN "hookah" "hookahs";
lin hooker_N = mkN "hooker" "hookers";
lin hooklike_A = mkA "hooklike" ;
lin hooks_N = mkN "hooks" ;
lin hookup_N = mkN "hookup" ;
lin hookworm_N = mkN "hookworm" "hookworms";
lin hooky_N = mkN "hooky" "IRREG";
lin hooligan_N = mkN "hooligan" "hooligans";
lin hooliganism_N = mkN "hooliganism" ;
lin hoop_N = mkN "hoop" "hoops";
lin hoop_V2 = mkV2 (mkV "hoop" "hoops" "hooped" "hooped" "hooping");
lin hoop_la_N = mkN (variants {"hoop-la"; "hoopla"}) ;
lin hoopoe_N = mkN "hoopoe" ;
lin hoopskirt_N = mkN "hoopskirt" ;
lin hoosegow_N = mkN "hoosegow" ;
lin hoot_N = mkN "hoot" "hoots";
lin hoot_V = mkV "hoot" "hoots" "hooted" "hooted" "hooting";
lin hoot_V2 = mkV2 (mkV "hoot" "hoots" "hooted" "hooted" "hooting");
lin hooter_N = mkN "hooter" "hooters";
lin hoover_N = mkN "hoover" "hoovers";
lin hoover_V2 = mkV2 (mkV "hoover" "hoovers" "hoovered" "hoovered" "hoovering");
lin hop_N = mkN "hop" "hops";
lin hop_V = mkV "hop" "hops" "hopped" "hopped" "hopping";
lin hop_V2 = mkV2 (mkV "hop" "hops" "hopped" "hopped" "hopping");
lin hop_field_N = mkN "hop-field" "hop-fields";
lin hop_garden_N = mkN "hop-garden" "hop-gardens";
lin hop_picker_N = mkN "hop-picker" "hop-pickers";
lin hop_pole_N = mkN "hop-pole" "hop-poles";
lin hope_N = mkN "hope" "hopes";
lin hope_PN = mkPN "Hope";
lin hope_V = mkV "hope" "hopes" "hoped" "hoped" "hoping";
lin hope_VS = mkVS (mkV "hope" "hopes" "hoped" "hoped" "hoping");
lin hope_VV = mkVV (mkV "hope" "hopes" "hoped" "hoped" "hoping");
lin hopeful_A = compoundA (mkA "hopeful");
lin hopefulness_N = mkN "hopefulness" ;
lin hopeless_A = compoundA (mkA "hopeless");
lin hopelessness_N = mkN "hopelessness" ;
lin hoper_N = mkN "hoper" ;
lin hopped_up_A = compoundA (mkA "hopped-up");
lin hopper_N = mkN "hopper" "hoppers";
lin hopsacking_N = mkN "hopsacking" ;
lin hopscotch_N = mkN "hopscotch" ;
lin hopscotch_V = mkV "hopscotch";
lin horace_PN = mkPN "Horace";
lin horary_A = mkA "horary" ;
lin horde_N = mkN "horde" "hordes";
lin horehound_N = mkN "horehound" ;
lin horizon_N = mkN "horizon" "horizons";
lin horizontal_A = compoundA (mkA "horizontal");
lin horizontal_N = mkN "horizontal" ;
lin horizontality_N = mkN "horizontality" ;
lin horley_PN = mkPN "Horley";
lin hormonal_A = mkA "hormonal" ;
lin hormone_N = mkN "hormone" "hormones";
lin horn_N = mkN "horn" "horns";
lin horn_V = mkV "horn" "horns" "horned" "horned" "horning";
lin horn_rimmed_A = compoundA (mkA "horn-rimmed");
lin hornbeam_N = mkN "hornbeam" "hornbeams";
lin hornbill_N = mkN "hornbill" "hornbills";
lin hornblende_N = mkN "hornblende" ;
lin hornbook_N = mkN "hornbook" ;
lin horned_A = compoundA (mkA "horned");
lin hornet_N = mkN "hornet" "hornets";
lin hornfels_N = mkN "hornfels" ;
lin horniness_N = mkN "horniness" ;
lin hornist_N = mkN "hornist" ;
lin hornless_A = compoundA (mkA "hornless");
lin hornlike_A = compoundA (mkA "hornlike");
lin hornpipe_N = mkN "hornpipe" "hornpipes";
lin hornsea_PN = mkPN "Hornsea";
lin hornwort_N = mkN "hornwort" ;
lin horny_A = mkA "horny" "hornier";
lin horology_N = mkN "horology" ;
lin horoscope_N = mkN "horoscope" "horoscopes";
lin horoscopy_N = mkN "horoscopy" ;
lin horrible_A = compoundA (mkA "horrible");
lin horrid_A = compoundA (mkA "horrid");
lin horridness_N = mkN "horridness" ;
lin horrific_A = compoundA (mkA "horrific");
lin horrify_V2 = mkV2 (mkV "horrify" "horrifies" "horrified" "horrified" "horrifying");
lin horrifyingly_Adv = mkAdv "horrifyingly";
lin horror_N = mkN "horror" "horrors";
lin horror_stricken_A = compoundA (mkA "horror-stricken");
lin horror_struck_A = compoundA (mkA "horror-struck");
lin hors_de_combat_A = compoundA (mkA "hors de combat");
lin horse_N = mkN "horse" "horses";
lin horse_chestnut_N = mkN "horse-chestnut" "horse-chestnuts";
lin horse_laugh_N = mkN "horse-laugh" "horse-laughs";
lin horse_pond_N = mkN "horse-pond" "horse-ponds";
lin horse_sense_N = mkN "horse-sense" ;
lin horseback_Adv = mkAdv "horseback" ;
lin horseback_N = mkN "horseback" ;
lin horsebox_N = mkN "horsebox" "horseboxes";
lin horsecar_N = mkN "horsecar" ;
lin horsecloth_N = mkN "horsecloth" ;
lin horseflesh_N = mkN "horseflesh" ;
lin horsefly_N = mkN "horsefly" "horseflies";
lin horsehair_N = mkN "horsehair" ;
lin horsehide_N = mkN "horsehide" ;
lin horseleech_N = mkN "horseleech" ;
lin horseman_N = mkN masculine (mkN "horseman" "horsemen");
lin horsemanship_N = mkN "horsemanship" ;
lin horsemeat_N = mkN "horsemeat" ;
lin horsemint_N = mkN "horsemint" ;
lin horseplay_N = mkN "horseplay" ;
lin horsepond_N = mkN "horsepond" ;
lin horsepower_N = mkN "horsepower" "horsepower";
lin horserace_N = mkN "horserace" "horseraces";
lin horseracing_N = mkN "horseracing" ;
lin horseradish_N = mkN "horseradish" ;
lin horseshoe_N = mkN "horseshoe" "horseshoes";
lin horseshow_N = mkN "horseshow" ;
lin horsetail_N = mkN "horsetail" ;
lin horseweed_N = mkN "horseweed" ;
lin horsewhip_N = mkN "horsewhip" "horsewhips";
lin horsewhip_V2 = mkV2 (mkV "horsewhip" "horsewhips" "horsewhipped" "horsewhipped" "horsewhipping");
lin horsewhipping_N = mkN "horsewhipping" ;
lin horsewoman_N = mkN feminine (mkN "horsewoman" "horsewomen");
lin horsham_PN = mkPN "Horsham";
lin horsley_PN = mkPN "Horsley";
lin horst_N = mkN "horst" ;
lin horsy_A = compoundA (mkA "horsy");
lin hortative_A = compoundA (mkA "hortative");
lin hortensia_N = mkN "hortensia" ;
lin horticultural_A = compoundA (mkA "horticultural");
lin horticulture_N = mkN "horticulture" ;
lin horticulturist_N = mkN "horticulturist" "horticulturists";
lin horwich_PN = mkPN "Horwich";
lin hosanna_N = mkN "hosanna" "hosannas";
lin hose_N = mkN "hose" "hoses";
lin hose_V2 = mkV2 (mkV "hose" "hoses" "hosed" "hosed" "hosing");
lin hosepipe_N = mkN "hosepipe" "hosepipes";
lin hosier_N = mkN "hosier" "hosiers";
lin hosiery_N = mkN "hosiery" ;
lin hosp_PN = mkPN "Hosp";
lin hospice_N = mkN "hospice" "hospices";
lin hospitable_A = compoundA (mkA "hospitable");
lin hospitableness_N = mkN "hospitableness" ;
lin hospital_N = mkN "hospital" "hospitals";
lin hospitality_N = mkN "hospitality" ;
lin hospitalization_N = mkN "hospitalization" "hospitalizations";
lin hospitalize_V2 = mkV2 (mkV "hospitalize" "hospitalizes" "hospitalized" "hospitalized" "hospitalizing");
lin host_N = mkN "host";
lin host_V2 = mkV2 (mkV "host" "hosts" "hosted" "hosted" "hosting");
lin hostage_N = mkN human (mkN "hostage" "hostages");
lin hostel_N = mkN "hostel" "hostels";
lin hosteller_N = mkN "hosteller" "hostellers";
lin hostelry_N = mkN "hostelry" "hostelries";
lin hostess_N = mkN "hostess" "hostesses";
lin hostile_A = compoundA (mkA "hostile");
lin hostile_N = mkN "hostile" ;
lin hostilities_N = mkN "hostilities" ;
lin hostility_N = mkN "hostility" "hostilities";
lin hot_A = mkA "hot" "hotter";
lin hot_V = mkV "hot" "hots" "hotted" "hotted" "hotting";
lin hot_V2 = mkV2 (mkV "hot" "hots" "hotted" "hotted" "hotting");
lin hot_blooded_A = compoundA (mkA "hot-blooded");
lin hot_headed_A = compoundA (mkA "hot-headed");
lin hot_tempered_A = compoundA (mkA "hot-tempered");
lin hot_water_bottle_N = mkN "hot-water-bottle" "hot-water-bottles";
lin hotbed_N = mkN "hotbed" "hotbeds";
lin hotbox_N = mkN "hotbox" ;
lin hotchpotch_N = mkN "hotchpotch" "hotchpotches";
lin hotdog_N = mkN "hotdog" ;
lin hotel_N = mkN "hotel" "hotels";
lin hotelier_N = mkN "hotelier" "hoteliers";
lin hotfoot_Adv = mkAdv "hotfoot";
lin hotfoot_N = mkN "hotfoot" ;
lin hotfoot_V = mkV "hotfoot" "hotfoots" "hotfooted" "hotfooted" "hotfooting";
lin hothead_N = mkN "hothead" "hotheads";
lin hotheaded_A = mkA "hotheaded" ;
lin hothouse_N = mkN "hothouse" "hothouses";
lin hotness_N = mkN "hotness" ;
lin hotplate_N = mkN "hotplate" "hotplates";
lin hotspur_N = mkN "hotspur" ;
lin hottish_A = mkA "hottish" ;
lin houghton_PN = mkPN "Houghton";
lin hound_N = mkN "hound" "hounds";
lin hound_V2 = mkV2 (mkV "hound" "hounds" "hounded" "hounded" "hounding");
lin hounslow_PN = mkPN "Hounslow";
lin hour_N = mkN "hour" "hours";
lin hourglass_N = mkN "hourglass" "hourglasses";
lin houri_N = mkN "houri" "houris";
lin hourlong_A = mkA "hourlong" ;
lin hourly_A = compoundA (mkA "hourly");
lin hourly_Adv = mkAdv "hourly";
lin hours_N = mkN "hours" ;
lin house_N = mkN "house" "houses";
lin house_V2 = mkV2 (mkV "house" "houses" "housed" "housed" "housing");
lin house_party_N = mkN "house-party" "house-parties";
lin house_warming_N = mkN "house-warming" "house-warmings";
lin houseboat_N = mkN "houseboat" "houseboats";
lin housebound_A = compoundA (mkA "housebound");
lin housebreaker_N = mkN "housebreaker" "housebreakers";
lin housebreaking_N = mkN "housebreaking" ;
lin housebroken_A = mkA "housebroken" ;
lin housecleaning_N = mkN "housecleaning" ;
lin housecoat_N = mkN "housecoat" "housecoats";
lin housecraft_N = mkN "housecraft" ;
lin housedog_N = mkN "housedog" "housedogs";
lin housefather_N = mkN "housefather" "housefathers";
lin housefly_N = mkN "housefly" "houseflies";
lin houseful_N = mkN "houseful" "housefuls";
lin household_N = mkN "household" "households";
lin householder_N = mkN "householder" "householders";
lin housekeeper_N = mkN "housekeeper" "housekeepers";
lin houselights_N = mkN "houselights" ;
lin housemaid_N = mkN "housemaid" "housemaids";
lin houseman_N = mkN masculine (mkN "houseman" "housemen");
lin housemaster_N = mkN "housemaster" "housemasters";
lin housemate_N = mkN "housemate" ;
lin housemother_N = mkN "housemother" "housemothers";
lin houseplant_N = mkN "houseplant" ;
lin houseproud_A = compoundA (mkA "houseproud");
lin houseroom_N = mkN "houseroom" ;
lin housetop_N = mkN "housetop" "housetops";
lin housetrained_A = compoundA (mkA "housetrained");
lin housewarming_N = mkN "housewarming" ;
lin housewife_N = mkN "housewife" "housewives";
lin housewifely_A = compoundA (mkA "housewifely");
lin housewifery_N = mkN "housewifery" ;
lin housework_N = mkN "housework" ;
lin housewrecker_N = mkN "housewrecker" "housewreckers";
lin housing_N = mkN "housing" ;
lin houston_PN = mkPN "Houston";
lin hove_PN = mkPN "Hove";
lin hovea_N = mkN "hovea" ;
lin hovel_N = mkN "hovel" "hovels";
lin hover_V = mkV "hover" "hovers" "hovered" "hovered" "hovering";
lin hovercraft_N = mkN "hovercraft" "hovercraft";
lin how8many_IDet = mkDeterminer plural "how many" ;
lin how8much_IDet = mkDeterminer singular "how much" ;
lin how_IAdv = {s="how"};
lin how_d'ye_do_N = mkN "how-d'ye-do" "how-d'ye-dos";
lin howard_PN = mkPN "Howard";
lin howdah_N = mkN "howdah" "howdahs";
lin however_Adv = mkAdv "however";
lin howitzer_N = mkN "howitzer" "howitzers";
lin howl_N = mkN "howl" "howls";
lin howl_V = mkV "howl" "howls" "howled" "howled" "howling";
lin howl_V2 = mkV2 (mkV "howl" "howls" "howled" "howled" "howling");
lin howler_N = mkN "howler" "howlers";
lin hoya_N = mkN "hoya" ;
lin hoyden_N = mkN "hoyden" "hoydens";
lin hoydenish_A = compoundA (mkA "hoydenish");
lin hoydenism_N = mkN "hoydenism" ;
lin hoylake_PN = mkPN "Hoylake";
lin hoyland_nether_PN = mkPN "Hoyland nether";
lin hp_N = mkN "hp" ;
lin hq_PN = mkPN "Hq";
lin hrh_PN = mkPN "Hrh";
lin hryvnia_N = mkN "hryvnia" ;
lin huarache_N = mkN "huarache" ;
lin hub_N = mkN "hub" "hubs";
lin hubble_bubble_N = mkN "hubble-bubble" "hubble-bubbles";
lin hubbub_N = mkN "hubbub" ;
lin hubby_N = mkN "hubby" "hubbies";
lin hubcap_N = mkN "hubcap" ;
lin hubert_PN = mkPN "Hubert";
lin hubris_N = mkN "hubris" ;
lin huck_N = mkN "huck" ;
lin huckaback_N = mkN "huckaback" ;
lin huckleberry_N = mkN "huckleberry" "huckleberries";
lin hucknall_PN = mkPN "Hucknall";
lin huckster_N = mkN "huckster" "hucksters";
lin huddersfield_PN = mkPN "Huddersfield";
lin huddle_N = mkN "huddle" "huddles";
lin huddle_V = mkV "huddle" "huddles" "huddled" "huddled" "huddling";
lin huddle_V2 = mkV2 (mkV "huddle" "huddles" "huddled" "huddled" "huddling");
lin huddler_N = mkN "huddler" ;
lin hudud_N = mkN "hudud" ;
lin hue_N = mkN "hue" "hues";
lin hued_A = compoundA (mkA "hued");
lin hueless_A = mkA "hueless" ;
lin huff_N = mkN "huff" "huffs";
lin huff_V = mkV "huff" "huffs" "huffed" "huffed" "huffing";
lin huffiness_N = mkN "huffiness" ;
lin huffish_A = compoundA (mkA "huffish");
lin huffy_A = mkA "huffy" "huffier";
lin hug_N = mkN "hug" "hugs";
lin hug_V2 = mkV2 (mkV "hug" "hugs" "hugged" "hugged" "hugging");
lin huge_A = compoundA (mkA "huge");
lin hugger_N = mkN "hugger" ;
lin hugger_mugger_A = compoundA (mkA "hugger-mugger");
lin hugger_mugger_Adv = mkAdv "hugger-mugger";
lin hugger_mugger_N = mkN "hugger-mugger" "IRREG";
lin hugh_PN = mkPN "Hugh";
lin hughie_PN = mkPN "Hughie";
lin huguenot_N = mkN "huguenot" "huguenots";
lin huhehot_PN = mkPN "Huhehot";
lin huisache_N = mkN "huisache" ;
lin huitre_N = mkN "huitre" ;
lin hula_N = mkN "hula" "hulas";
lin hulk_N = mkN "hulk" "hulks";
lin hulking_A = compoundA (mkA "hulking");
lin hull_N = mkN "hull" "hulls";
lin hull_V2 = mkV2 (mkV "hull" "hulls" "hulled" "hulled" "hulling");
lin hullabaloo_N = mkN "hullabaloo" "hullabaloos";
lin hum_N = mkN "hum" "hums";
lin hum_V = mkV "hum" "hums" "hummed" "hummed" "humming";
lin hum_V2 = mkV2 (mkV "hum" "hums" "hummed" "hummed" "humming");
lin human_A = compoundA (mkA "human");
lin human_N = mkN human (mkN "human" "humans");
lin humane_A = compoundA (mkA "humane");
lin humaneness_N = mkN "humaneness" ;
lin humanism_N = mkN "humanism" ;
lin humanist_A = mkA "humanist" ;
lin humanist_N = mkN "humanist" "humanists";
lin humanistic_A = mkA "humanistic" ;
lin humanitarian_A = compoundA (mkA "humanitarian");
lin humanitarian_N = mkN "humanitarian" "humanitarians";
lin humanitarianism_N = mkN "humanitarianism" ;
lin humanity_N = mkN "humanity" "humanities";
lin humanization_N = mkN "humanization" ;
lin humanize_V = mkV "humanize" "humanizes" "humanized" "humanized" "humanizing";
lin humanize_V2 = mkV2 (mkV "humanize" "humanizes" "humanized" "humanized" "humanizing");
lin humankind_N = mkN "humankind" ;
lin humanness_N = mkN "humanness" ;
lin humate_N = mkN "humate" ;
lin humberside_PN = mkPN "Humberside";
lin humberston_PN = mkPN "Humberston";
lin humble_A = mkA "humble" "humbler";
lin humble_V2 = mkV2 (mkV "humble" "humbles" "humbled" "humbled" "humbling");
lin humbleness_N = mkN "humbleness" ;
lin humbug_N = mkN "humbug" "humbugs";
lin humbug_V2 = mkV2 (mkV "humbug" "humbugs" "humbugged" "humbugged" "humbugging");
lin humdinger_N = mkN "humdinger" "humdingers";
lin humdrum_A = compoundA (mkA "humdrum");
lin humectant_N = mkN "humectant" ;
lin humerus_N = mkN "humerus" "humeruses";
lin humic_A = mkA "humic" ;
lin humid_A = compoundA (mkA "humid");
lin humidify_V2 = mkV2 (mkV "humidify" "humidifies" "humidified" "humidified" "humidifying");
lin humidity_N = mkN "humidity" ;
lin humification_N = mkN "humification" ;
lin humified_A = mkA "humified" ;
lin humiliate_V2 = mkV2 (mkV "humiliate" "humiliates" "humiliated" "humiliated" "humiliating");
lin humiliatingly_Adv = mkAdv "humiliatingly" ;
lin humiliation_N = mkN "humiliation" "humiliations";
lin humility_N = mkN "humility" ;
lin humin_N = mkN "humin" ;
lin hummer_N = mkN "hummer" ;
lin humming_N = mkN "humming" ;
lin humming_top_N = mkN "humming-top" "humming-tops";
lin hummingbird_N = mkN "hummingbird" "hummingbirds";
lin hummock_N = mkN "hummock" "hummocks";
lin hummus_N = mkN "hummus" ;
lin humongous_A = mkA "humongous" ;
lin humor_N = mkN "humor" ;
lin humoral_A = mkA "humoral" ;
lin humorist_N = mkN "humorist" "humorists";
lin humorless_A = mkA "humorless" ;
lin humorous_A = compoundA (mkA "humorous");
lin humour_N = mkN "humour" "humours";
lin humour_V2 = mkV2 (mkV "humour" "humours" "humoured" "humoured" "humouring");
lin humourist_N = mkN "humourist" "humourists";
lin humourless_A = compoundA (mkA "humourless");
lin hump_N = mkN "hump" "humps";
lin hump_V2 = mkV2 (mkV "hump" "humps" "humped" "humped" "humping");
lin humpback_N = mkN "humpback" "humpbacks";
lin humpbacked_A = compoundA (mkA "humpbacked");
lin humphrey_PN = mkPN "Humphrey";
lin humus_N = mkN "humus" ;
lin hun_N = mkN "hun" "huns";
lin hunch_N = mkN "hunch" "hunches";
lin hunch_V2 = mkV2 (mkV "hunch" "hunches" "hunched" "hunched" "hunching");
lin hunchback_A = compoundA (mkA "hunchback");
lin hunchback_N = mkN "hunchback" "hunchbacks";
lin hunchbacked_A = compoundA (mkA "hunchbacked");
lin hundredfold_Adv = mkAdv "hundredfold";
lin hundredweight_N = mkN "hundredweight" "hundredweights";
lin hungarian_A = compoundA (mkA "Hungarian");
lin hungarian_N = mkN "Hungarian" "Hungarians";
lin hungary_PN = mkPN "Hungary";
lin hunger_N = mkN "hunger" ;
lin hunger_V = mkV "hunger" "hungers" "hungered" "hungered" "hungering";
lin hunger_march_N = mkN "hunger-march" "hunger-marches";
lin hunger_marcher_N = mkN "hunger-marcher" "hunger-marchers";
lin hungry_A = mkA "hungry" "hungrier";
lin hunk_N = mkN "hunk" "hunks";
lin hunt_N = mkN "hunt" "hunts";
lin hunt_V = mkV "hunt" "hunts" "hunted" "hunted" "hunting";
lin hunt_V2 = mkV2 (mkV "hunt" "hunts" "hunted" "hunted" "hunting");
lin hunter_N = mkN "hunter" "hunters";
lin hunting_N = mkN "hunting" ;
lin hunting_crop_N = mkN "hunting-crop" "hunting-crops";
lin huntingdon_PN = mkPN "Huntingdon";
lin huntress_N = mkN "huntress" "huntresses";
lin huntsman_N = mkN masculine (mkN "huntsman" "huntsmen");
lin hurdle_N = mkN "hurdle" "hurdles";
lin hurdle_V = mkV "hurdle" "hurdles" "hurdled" "hurdled" "hurdling";
lin hurdle_V2 = mkV2 (mkV "hurdle" "hurdles" "hurdled" "hurdled" "hurdling");
lin hurdler_N = mkN "hurdler" "hurdlers";
lin hurdles_N = mkN "hurdles" ;
lin hurdy_gurdy_N = mkN "hurdy-gurdy" "hurdy-gurdies";
lin hurl_N = mkN "hurl" "hurls";
lin hurl_V2 = mkV2 (mkV "hurl" "hurls" "hurled" "hurled" "hurling");
lin hurling_N = mkN "hurling" ;
lin hurly_burly_N = mkN "hurly-burly" ;
lin hurrah_N = mkN "hurrah" ;
lin hurrah_V = mkV "hurrah" "hurrahs" "hurrahed" "hurrahed" "hurrahing";
lin hurricane_N = mkN "hurricane" "hurricanes";
lin hurried_A = mkA "hurried";
lin hurry_N = mkN "hurry" "hurries";
lin hurry_V = mkV "hurry" "hurries" "hurried" "hurried" "hurrying";
lin hurry_V2 = mkV2 (mkV "hurry" "hurries" "hurried" "hurried" "hurrying");
lin hurry_V2V = mkV2V (mkV "hurry" "hurries" "hurried" "hurried" "hurrying") noPrep to_Prep ;
lin hurstpierpoint_PN = mkPN "Hurstpierpoint";
lin hurt_N = mkN "hurt" ;
lin hurt_V = IrregEng.hurt_V;
lin hurt_V2 = mkV2 (IrregEng.hurt_V);
lin hurt_VS = mkVS (IrregEng.hurt_V);
lin hurtful_A = compoundA (mkA "hurtful");
lin hurtle_V = mkV "hurtle" "hurtles" "hurtled" "hurtled" "hurtling";
lin husband_N = mkN masculine (mkN "husband" "husbands");
lin husband_V2 = mkV2 (mkV "husband" "husbands" "husbanded" "husbanded" "husbanding");
lin husbandly_A = mkA "husbandly" ;
lin husbandman_N = mkN masculine (mkN "husbandman" "husbandmen");
lin husbandry_N = mkN "husbandry" ;
lin hush_N = mkN "hush" "hushes";
lin hush_V = mkV "hush" "hushes" "hushed" "hushed" "hushing";
lin hush_V2 = mkV2 (mkV "hush" "hushes" "hushed" "hushed" "hushing");
lin hush_hush_A = compoundA (mkA "hush-hush");
lin hush_money_N = mkN "hush-money" ;
lin husk_N = mkN "husk" "husks";
lin husk_V2 = mkV2 (mkV "husk" "husks" "husked" "husked" "husking");
lin huskiness_N = mkN "huskiness" ;
lin husky_A = mkA "husky" "huskier";
lin husky_N = mkN "husky" "huskies";
lin hussar_N = mkN "hussar" "hussars";
lin hussy_N = mkN "hussy" "hussies";
lin hustings_N = mkN "hustings" ;
lin hustle_N = mkN "hustle" "IRREG";
lin hustle_V = mkV "hustle" "hustles" "hustled" "hustled" "hustling";
lin hustle_V2 = mkV2 (mkV "hustle" "hustles" "hustled" "hustled" "hustling");
lin hustler_N = mkN "hustler" "hustlers";
lin hut_N = mkN "hut" "huts";
lin hutch_N = mkN "hutch" "hutches";
lin hutment_N = mkN "hutment" "hutments";
lin hutted_A = compoundA (mkA "hutted");
lin hwainan_PN = mkPN "Hwainan";
lin hyacinth_N = mkN "hyacinth" "hyacinths";
lin hyaena_N = mkN "hyaena" "hyaenas";
lin hyaline_A = mkA "hyaline" ;
lin hyaline_N = mkN "hyaline" ;
lin hyalinization_N = mkN "hyalinization" ;
lin hyaloplasm_N = mkN "hyaloplasm" ;
lin hyaloplasmic_A = mkA "hyaloplasmic" ;
lin hyaluronidase_N = mkN "hyaluronidase" ;
lin hybrid_A = compoundA (mkA "hybrid");
lin hybrid_N = mkN "hybrid" "hybrids";
lin hybridization_N = mkN "hybridization" ;
lin hybridize_V = mkV "hybridize" "hybridizes" "hybridized" "hybridized" "hybridizing";
lin hybridize_V2 = mkV2 (mkV "hybridize" "hybridizes" "hybridized" "hybridized" "hybridizing");
lin hybridoma_N = mkN "hybridoma" ;
lin hydantoin_N = mkN "hydantoin" ;
lin hydathode_N = mkN "hydathode" ;
lin hydatid_N = mkN "hydatid" ;
lin hyde_PN = mkPN "Hyde";
lin hyderabad_PN = mkPN "Hyderabad";
lin hydra_N = mkN "hydra" "hydras";
lin hydralazine_N = mkN "hydralazine" ;
lin hydramnios_N = mkN "hydramnios" ;
lin hydrangea_N = mkN "hydrangea" "hydrangeas";
lin hydrant_N = mkN "hydrant" "hydrants";
lin hydrarthrosis_N = mkN "hydrarthrosis" ;
lin hydrate_N = mkN "hydrate" "hydrates";
lin hydrate_V = mkV "hydrate" "hydrates" "hydrated" "hydrated" "hydrating";
lin hydrate_V2 = mkV2 (mkV "hydrate" "hydrates" "hydrated" "hydrated" "hydrating");
lin hydration_N = mkN "hydration" ;
lin hydraulic_A = compoundA (mkA "hydraulic");
lin hydraulically_Adv = mkAdv "hydraulically" ;
lin hydraulics_N = mkN "hydraulics" "hydraulics";
lin hydrazine_N = mkN "hydrazine" ;
lin hydrazoite_N = mkN "hydrazoite" ;
lin hydremia_N = mkN "hydremia" ;
lin hydric_A = mkA "hydric" ;
lin hydride_N = mkN "hydride" ;
lin hydrilla_N = mkN "hydrilla" ;
lin hydrocarbon_N = mkN "hydrocarbon" "hydrocarbons";
lin hydrocele_N = mkN "hydrocele" ;
lin hydrocephalic_A = mkA "hydrocephalic" ;
lin hydrocephalus_N = mkN "hydrocephalus" ;
lin hydrochloric_A = compoundA (mkA "hydrochloric");
lin hydrochloride_N = mkN "hydrochloride" ;
lin hydrochlorofluorocarbon_N = mkN "hydrochlorofluorocarbon" ;
lin hydrochlorothiazide_N = mkN "hydrochlorothiazide" ;
lin hydrocolloid_N = mkN "hydrocolloid" ;
lin hydrocortisone_N = mkN "hydrocortisone" ;
lin hydrocracking_N = mkN "hydrocracking" ;
lin hydrodynamic_A = mkA "hydrodynamic" ;
lin hydrodynamics_N = mkN "hydrodynamics" ;
lin hydroelectric_A = compoundA (mkA "hydroelectric");
lin hydroelectricity_N = mkN "hydroelectricity" ;
lin hydroflumethiazide_N = mkN "hydroflumethiazide" ;
lin hydrofluorocarbon_N = mkN "hydrofluorocarbon" ;
lin hydrofoil_N = mkN "hydrofoil" "hydrofoils";
lin hydrogel_N = mkN "hydrogel" ;
lin hydrogen_N = mkN "hydrogen" ;
lin hydrogenation_N = mkN "hydrogenation" ;
lin hydrographic_A = mkA "hydrographic" ;
lin hydrography_N = mkN "hydrography" ;
lin hydrokinetic_A = mkA "hydrokinetic" ;
lin hydrologist_N = mkN "hydrologist" ;
lin hydrology_N = mkN "hydrology" ;
lin hydrolysate_N = mkN "hydrolysate" ;
lin hydrolysis_N = mkN "hydrolysis" ;
lin hydrolyzable_A = mkA "hydrolyzable" ;
lin hydromancer_N = mkN "hydromancer" ;
lin hydromancy_N = mkN "hydromancy" ;
lin hydromel_N = mkN "hydromel" ;
lin hydrometer_N = mkN "hydrometer" ;
lin hydrometric_A = mkA "hydrometric" ;
lin hydrometry_N = mkN "hydrometry" ;
lin hydronephrosis_N = mkN "hydronephrosis" ;
lin hydropathic_A = compoundA (mkA "hydropathic");
lin hydropathy_N = mkN "hydropathy" ;
lin hydrophilic_A = mkA "hydrophilic" ;
lin hydrophobia_N = mkN "hydrophobia" ;
lin hydrophobic_A = mkA "hydrophobic" ;
lin hydrophobicity_N = mkN "hydrophobicity" ;
lin hydrophytic_A = mkA "hydrophytic" ;
lin hydroplane_N = mkN "hydroplane" "hydroplanes";
lin hydroponics_N = mkN "hydroponics" "hydroponics";
lin hydrosphere_N = mkN "hydrosphere" ;
lin hydrostatic_A = mkA "hydrostatic" ;
lin hydrostatics_N = mkN "hydrostatics" ;
lin hydrothorax_N = mkN "hydrothorax" ;
lin hydrous_A = mkA "hydrous" ;
lin hydroxide_N = mkN "hydroxide" ;
lin hydroxy_A = mkA "hydroxy" ;
lin hydroxychloroquine_N = mkN "hydroxychloroquine" ;
lin hydroxyl_N = mkN "hydroxyl" ;
lin hydroxymethyl_N = mkN "hydroxymethyl" ;
lin hydroxyproline_N = mkN "hydroxyproline" ;
lin hydrozoan_N = mkN "hydrozoan" ;
lin hyena_N = mkN "hyena" "hyenas";
lin hygiene_N = mkN "hygiene" ;
lin hygienic_A = compoundA (mkA "hygienic");
lin hygienically_Adv = mkAdv "hygienically";
lin hygienist_N = mkN "hygienist" ;
lin hygrodeik_N = mkN "hygrodeik" ;
lin hygrometer_N = mkN "hygrometer" ;
lin hygrophyte_N = mkN "hygrophyte" ;
lin hygrophytic_A = mkA "hygrophytic" ;
lin hygroscope_N = mkN "hygroscope" ;
lin hygroscopic_A = mkA "hygroscopic" ;
lin hymen_N = mkN "hymen" "hymens";
lin hymenal_A = mkA "hymenal" ;
lin hymeneal_A = mkA "hymeneal" ;
lin hymeneal_N = mkN "hymeneal" ;
lin hymenium_N = mkN "hymenium" ;
lin hymenopterous_A = mkA "hymenopterous" ;
lin hymn_N = mkN "hymn" "hymns";
lin hymn_V2 = mkV2 (mkV "hymn" "hymns" "hymned" "hymned" "hymning");
lin hymnal_N = mkN "hymnal" "hymnals";
lin hyoid_A = mkA "hyoid" ;
lin hyoid_N = mkN "hyoid" ;
lin hyoscyamine_N = mkN "hyoscyamine" ;
lin hypaethral_A = mkA "hypaethral" ;
lin hypallage_N = mkN "hypallage" ;
lin hypanthium_N = mkN "hypanthium" ;
lin hype_V2 = mkV2 (mkV "hype");
lin hyperacidity_N = mkN "hyperacidity" ;
lin hyperactive_A = mkA "hyperactive" ;
lin hyperactivity_N = mkN "hyperactivity" ;
lin hyperacusis_N = mkN "hyperacusis" ;
lin hyperbaton_N = mkN "hyperbaton" ;
lin hyperbetalipoproteinemia_N = mkN "hyperbetalipoproteinemia" ;
lin hyperbilirubinemia_N = mkN "hyperbilirubinemia" ;
lin hyperbola_N = mkN "hyperbola" "hyperbolas";
lin hyperbole_N = mkN "hyperbole" "hyperboles";
lin hyperbolic_A = compoundA (mkA "hyperbolic");
lin hyperbolically_Adv = mkAdv "hyperbolically" ;
lin hyperboloid_N = mkN "hyperboloid" ;
lin hyperboloidal_A = mkA "hyperboloidal" ;
lin hypercalcemia_N = mkN "hypercalcemia" ;
lin hypercalciuria_N = mkN "hypercalciuria" ;
lin hypercapnia_N = mkN "hypercapnia" ;
lin hypercatalectic_A = mkA "hypercatalectic" ;
lin hypercatalectic_N = mkN "hypercatalectic" ;
lin hypercellularity_N = mkN "hypercellularity" ;
lin hypercholesterolemia_N = mkN "hypercholesterolemia" ;
lin hypercoaster_N = mkN "hypercoaster" ;
lin hypercritical_A = compoundA (mkA "hypercritical");
lin hyperemesis_N = mkN "hyperemesis" ;
lin hyperemia_N = mkN "hyperemia" ;
lin hyperemic_A = mkA "hyperemic" ;
lin hyperextension_N = mkN "hyperextension" ;
lin hyperfine_A = mkA "hyperfine" ;
lin hyperglycemia_N = mkN "hyperglycemia" ;
lin hyperhidrosis_N = mkN "hyperhidrosis" ;
lin hypericism_N = mkN "hypericism" ;
lin hyperinflation_N = mkN "hyperinflation";
lin hyperkalemia_N = mkN "hyperkalemia" ;
lin hyperlink_N = mkN "hyperlink" ;
lin hyperlipoproteinemia_N = mkN "hyperlipoproteinemia" ;
lin hypermarket_N = mkN "hypermarket" "hypermarkets";
lin hypermastigote_N = mkN "hypermastigote" ;
lin hypermedia_N = mkN "hypermedia" ;
lin hypermotility_N = mkN "hypermotility" ;
lin hypernatremia_N = mkN "hypernatremia" ;
lin hypernym_N = mkN "hypernym" ;
lin hypernymy_N = mkN "hypernymy" ;
lin hyperon_N = mkN "hyperon" ;
lin hyperope_N = mkN "hyperope" ;
lin hyperopia_N = mkN "hyperopia" ;
lin hyperopic_A = mkA "hyperopic" ;
lin hyperparathyroidism_N = mkN "hyperparathyroidism" ;
lin hyperpigmentation_N = mkN "hyperpigmentation" ;
lin hyperpituitarism_N = mkN "hyperpituitarism" ;
lin hyperplasia_N = mkN "hyperplasia" ;
lin hyperpnea_N = mkN "hyperpnea" ;
lin hyperpyrexia_N = mkN "hyperpyrexia" ;
lin hypersecretion_N = mkN "hypersecretion" ;
lin hypersensitive_A = compoundA (mkA "hypersensitive");
lin hypersensitivity_N = mkN "hypersensitivity" ;
lin hypersomnia_N = mkN "hypersomnia" ;
lin hypersplenism_N = mkN "hypersplenism" ;
lin hypertensive_A = mkA "hypertensive" ;
lin hypertensive_N = mkN "hypertensive" ;
lin hypertext_N = mkN "hypertext" ;
lin hyperthermal_A = mkA "hyperthermal" ;
lin hyperthermia_N = mkN "hyperthermia" ;
lin hyperthyroidism_N = mkN "hyperthyroidism" ;
lin hypertonia_N = mkN "hypertonia" ;
lin hypertonic_A = mkA "hypertonic" ;
lin hypertonicity_N = mkN "hypertonicity" ;
lin hypertrophied_A = mkA "hypertrophied" ;
lin hypertrophy_N = mkN "hypertrophy" ;
lin hypervelocity_N = mkN "hypervelocity" ;
lin hyperventilation_N = mkN "hyperventilation" ;
lin hypervitaminosis_N = mkN "hypervitaminosis" ;
lin hypervolemia_N = mkN "hypervolemia" ;
lin hypha_N = mkN "hypha" ;
lin hyphema_N = mkN "hyphema" ;
lin hyphen_N = mkN "hyphen" "hyphens";
lin hyphen_V2 = mkV2 (mkV "hyphen" "hyphens" "hyphened" "hyphened" "hyphening");
lin hyphenate_V2 = mkV2 (mkV "hyphenate" "hyphenates" "hyphenated" "hyphenated" "hyphenating");
lin hyphenation_N = mkN "hyphenation" ;
lin hypnagogue_N = mkN "hypnagogue" ;
lin hypnoanalysis_N = mkN "hypnoanalysis" ;
lin hypnogenesis_N = mkN "hypnogenesis" ;
lin hypnoid_A = mkA "hypnoid" ;
lin hypnophobia_N = mkN "hypnophobia" ;
lin hypnosis_N = mkN "hypnosis" "hypnoses";
lin hypnotherapy_N = mkN "hypnotherapy" ;
lin hypnotic_A = compoundA (mkA "hypnotic");
lin hypnotically_Adv = mkAdv "hypnotically" ;
lin hypnotism_N = mkN "hypnotism" ;
lin hypnotist_N = mkN "hypnotist" "hypnotists";
lin hypnotize_V2 = mkV2 (mkV "hypnotize" "hypnotizes" "hypnotized" "hypnotized" "hypnotizing");
lin hypo_N = mkN "hypo" ;
lin hypoactive_A = mkA "hypoactive" ;
lin hypobasidium_N = mkN "hypobasidium" ;
lin hypobetalipoproteinemia_N = mkN "hypobetalipoproteinemia" ;
lin hypocalcemia_N = mkN "hypocalcemia" ;
lin hypocapnia_N = mkN "hypocapnia" ;
lin hypocellularity_N = mkN "hypocellularity" ;
lin hypochlorite_N = mkN "hypochlorite" ;
lin hypochondria_N = mkN "hypochondria" "hypochondrias";
lin hypochondriac_A = compoundA (mkA "hypochondriac");
lin hypochondriac_N = mkN "hypochondriac" "hypochondriacs";
lin hypochondriacal_A = compoundA (mkA "hypochondriacal");
lin hypochondrium_N = mkN "hypochondrium" ;
lin hypocrisy_N = mkN "hypocrisy" "hypocrisies";
lin hypocrite_N = mkN "hypocrite" "hypocrites";
lin hypocritical_A = compoundA (mkA "hypocritical");
lin hypocycloid_N = mkN "hypocycloid" ;
lin hypodermal_A = mkA "hypodermal" ;
lin hypodermic_A = compoundA (mkA "hypodermic");
lin hypodermic_N = mkN "hypodermic" "hypodermics";
lin hypodermis_N = mkN "hypodermis" ;
lin hypoesthesia_N = mkN "hypoesthesia" ;
lin hypogammaglobulinemia_N = mkN "hypogammaglobulinemia" ;
lin hypoglossal_N = mkN "hypoglossal" ;
lin hypoglycemia_N = mkN "hypoglycemia" ;
lin hypoglycemic_A = mkA "hypoglycemic" ;
lin hypogonadism_N = mkN "hypogonadism" ;
lin hypokalemia_N = mkN "hypokalemia" ;
lin hypolipoproteinemia_N = mkN "hypolipoproteinemia" ;
lin hyponatremia_N = mkN "hyponatremia" ;
lin hyponym_N = mkN "hyponym" ;
lin hyponymy_N = mkN "hyponymy" ;
lin hypoparathyroidism_N = mkN "hypoparathyroidism" ;
lin hypophyseal_A = mkA "hypophyseal" ;
lin hypophysectomized_A = mkA "hypophysectomized" ;
lin hypophysectomy_N = mkN "hypophysectomy" ;
lin hypopigmentation_N = mkN "hypopigmentation" ;
lin hypoplasia_N = mkN "hypoplasia" ;
lin hypopnea_N = mkN "hypopnea" ;
lin hypoproteinemia_N = mkN "hypoproteinemia" ;
lin hyposmia_N = mkN "hyposmia" ;
lin hypospadias_N = mkN "hypospadias" ;
lin hypostasis_N = mkN "hypostasis" ;
lin hypostatization_N = mkN "hypostatization" ;
lin hypotension_N = mkN "hypotension" ;
lin hypotensive_A = mkA "hypotensive" ;
lin hypotensive_N = mkN "hypotensive" ;
lin hypotenuse_N = mkN "hypotenuse" "hypotenuses";
lin hypothalamic_A = mkA "hypothalamic" ;
lin hypothalamically_Adv = mkAdv "hypothalamically" ;
lin hypothalamus_N = mkN "hypothalamus" ;
lin hypothecate_V2 = mkV2 (mkV "hypothecate" "hypothecates" "hypothecated" "hypothecated" "hypothecating");
lin hypothermia_N = mkN "hypothermia" ;
lin hypothermic_A = mkA "hypothermic" ;
lin hypothesis_N = mkN "hypothesis" "hypotheses";
lin hypothesize_V2 = mkV2 (mkV "hypothesize");
lin hypothetical_A = compoundA (mkA "hypothetical");
lin hypothetical_N = mkN "hypothetical" ;
lin hypothrombinemia_N = mkN "hypothrombinemia" ;
lin hypothyroidism_N = mkN "hypothyroidism" ;
lin hypotonia_N = mkN "hypotonia" ;
lin hypotonic_A = mkA "hypotonic" ;
lin hypotonicity_N = mkN "hypotonicity" ;
lin hypovolemia_N = mkN "hypovolemia" ;
lin hypovolemic_A = mkA "hypovolemic" ;
lin hypoxia_N = mkN "hypoxia" ;
lin hypozeugma_N = mkN "hypozeugma" ;
lin hypozeuxis_N = mkN "hypozeuxis" ;
lin hypsography_N = mkN "hypsography" ;
lin hypsometer_N = mkN "hypsometer" ;
lin hypsometry_N = mkN "hypsometry" ;
lin hyrax_N = mkN "hyrax" ;
lin hyson_N = mkN "hyson" ;
lin hyssop_N = mkN "hyssop" ;
lin hysterectomy_N = mkN "hysterectomy" ;
lin hysteresis_N = mkN "hysteresis" ;
lin hysteria_N = mkN "hysteria" ;
lin hysteric_A = mkA "hysteric" ;
lin hysteric_N = mkN "hysteric" ;
lin hysterical_A = compoundA (mkA "hysterical");
lin hysterics_N = mkN "hysterics" "hysterics";
lin hysterocatalepsy_N = mkN "hysterocatalepsy" ;
lin hysterosalpingogram_N = mkN "hysterosalpingogram" ;
lin hysteroscopy_N = mkN "hysteroscopy" ;
lin hysterotomy_N = mkN "hysterotomy" ;
lin hythe_PN = mkPN "Hythe";
lin i_Pron  = mkPron "I" "me" "my" "mine" singular P1 human;
lin i_e__Adv = mkAdv "i.e." ;
lin iamb_N = mkN "iamb" "iambs";
lin iambic_A = compoundA (mkA "iambic");
lin iambic_N = mkN "iambic" ;
lin iambics_N = mkN "iambics" "iambics";
lin iambus_N = mkN "iambus" "iambuses";
lin ian_PN = mkPN "Ian";
lin iatrogenic_A = mkA "iatrogenic" ;
lin iba_N = mkN "iba" ;
lin ibadan_PN = mkPN "Ibadan";
lin ibex_N = mkN "ibex" "ibexes";
lin ibid_PN = mkPN "Ibid";
lin ibid__Adv = mkAdv "ibid." ;
lin ibidem_Adv = mkAdv "ibidem";
lin ibis_N = mkN "ibis" "ibises";
lin ibuprofen_N = mkN "ibuprofen" ;
lin icbm_N = mkN "icbm" ;
lin ice_N = mkN "ice" "ices";
lin ice_V = mkV "ice" "ices" "iced" "iced" "icing";
lin ice_V2 = mkV2 (mkV "ice" "ices" "iced" "iced" "icing");
lin ice_axe_N = mkN "ice-axe" "ice-axes";
lin ice_cream_N = mkN (variants {"ice-cream"; "ice cream"});
lin ice_lolly_N = mkN "ice-lolly" "ice-lollies";
lin ice_show_N = mkN "ice-show" "ice-shows";
lin ice_skate_N = mkN "ice-skate" "ice-skates";
lin ice_skate_V = mkV "ice-skate" "ice-skates" "ice-skated" "ice-skated" "ice-skating";
lin ice_skating_N = mkN "ice-skating" ;
lin ice_tray_N = mkN "ice-tray" "ice-trays";
lin iceberg_N = mkN "iceberg" "icebergs";
lin iceboat_N = mkN "iceboat" "iceboats";
lin icebound_A = compoundA (mkA "icebound");
lin icebox_N = mkN "icebox" "iceboxes";
lin icebreaker_N = mkN "icebreaker" "icebreakers";
lin icecap_N = mkN "icecap" "icecaps";
lin icecube_N = mkN "icecube" "icecubes";
lin icefall_N = mkN "icefall" "icefalls";
lin icefield_N = mkN "icefield" "icefields";
lin icefloe_N = mkN "icefloe" "icefloes";
lin icefree_A = compoundA (mkA "icefree");
lin icehouse_N = mkN "icehouse" "icehouses";
lin iceland_PN = mkPN "Iceland";
lin icelander_A = compoundA (mkA "icelander");
lin icelander_N = mkN "icelander" "icelanders";
lin icelandic_A = compoundA (mkA "icelandic");
lin icelandic_N = mkN "icelandic" ;
lin iceman_N = mkN masculine (mkN "iceman" "icemen");
lin icepack_N = mkN "icepack" "icepacks";
lin icepick_N = mkN "icepick" "icepicks";
lin icerink_N = mkN "icerink" "icerinks";
lin icetray_N = mkN "icetray" ;
lin ichneumon_N = mkN "ichneumon" "ichneumons";
lin ichneumon_fly_N = mkN "ichneumon-fly" "ichneumon-flies";
lin ichor_N = mkN "ichor" ;
lin ichorous_A = mkA "ichorous" ;
lin ichthyolatry_N = mkN "ichthyolatry" ;
lin ichthyologist_N = mkN "ichthyologist" ;
lin ichthyology_N = mkN "ichthyology" ;
lin ichthyosaur_N = mkN "ichthyosaur" ;
lin ichthyosaurus_N = mkN "ichthyosaurus" ;
lin ichthyosis_N = mkN "ichthyosis" ;
lin icicle_N = mkN "icicle" "icicles";
lin icing_N = mkN "icing" ;
lin icky_A = mkA "icky" ;
lin icon_N = mkN "icon" "icons";
lin iconic_A = mkA "iconic" ;
lin iconoclasm_N = mkN "iconoclasm" ;
lin iconoclast_N = mkN "iconoclast" "iconoclasts";
lin iconoclastic_A = mkA "iconoclastic" ;
lin iconography_N = mkN "iconography" ;
lin iconolatry_N = mkN "iconolatry" ;
lin iconology_N = mkN "iconology" ;
lin iconoscope_N = mkN "iconoscope" ;
lin icosahedral_A = mkA "icosahedral" ;
lin icosahedron_N = mkN "icosahedron" ;
lin ictal_A = mkA "ictal" ;
lin icterogenic_A = mkA "icterogenic" ;
lin ictodosaur_N = mkN "ictodosaur" ;
lin icy_A = mkA "icy" "icier";
lin id_N = mkN "id" "IRREG";
lin ida_PN = mkPN "Ida";
lin idaho_PN = mkPN "Idaho";
lin idea_N = mkN "idea" "ideas";
lin idea_of_N2 = mkN2 (mkN "idea" "ideas") (mkPrep "of");
lin ideal_A = compoundA (mkA "ideal");
lin ideal_N = mkN "ideal" "ideals";
lin idealism_N = mkN "idealism" ;
lin idealist_N = mkN "idealist" "idealists";
lin idealistic_A = compoundA (mkA "idealistic");
lin ideality_N = mkN "ideality" ;
lin idealization_N = mkN "idealization" "idealizations";
lin idealize_V2 = mkV2 (mkV "idealize" "idealizes" "idealized" "idealized" "idealizing");
lin ideation_N = mkN "ideation" ;
lin idem_PN = mkPN "Idem";
lin idempotent_A = mkA "idempotent" ;
lin identical_A = compoundA (mkA "identical");
lin identifiable_A = compoundA (mkA "identifiable");
lin identification_N = mkN "identification" ;
lin identifier_N = mkN "identifier" ;
lin identify_V = mkV "identify";
lin identify_V2 = mkV2 (mkV "identify" "identifies" "identified" "identified" "identifying");
lin identikit_N = mkN "identikit" "identikits";
lin identity_N = mkN "identity" "identities";
lin ideogram_N = mkN "ideogram" "ideograms";
lin ideograph_N = mkN "ideograph" "ideographs";
lin ideographic_A = compoundA (mkA "ideographic");
lin ideographically_Adv = mkAdv "ideographically" ;
lin ideography_N = mkN "ideography" ;
lin ideological_A = compoundA (mkA "ideological");
lin ideologist_N = mkN "ideologist" ;
lin ideology_N = mkN "ideology" "ideologies";
lin ides_N = mkN "ides" ;
lin idesia_N = mkN "idesia" ;
lin idiocy_N = mkN "idiocy" "idiocies";
lin idiographic_A = mkA "idiographic" ;
lin idiolatry_N = mkN "idiolatry" ;
lin idiolect_N = mkN "idiolect" "idiolects";
lin idiom_N = mkN "idiom" "idioms";
lin idiomatic_A = compoundA (mkA "idiomatic");
lin idiomatically_Adv = mkAdv "idiomatically";
lin idiopathic_A = mkA "idiopathic" ;
lin idiosyncrasy_N = mkN "idiosyncrasy" "idiosyncrasies";
lin idiosyncratic_A = compoundA (mkA "idiosyncratic");
lin idiot_N = mkN "idiot" "idiots";
lin idiotic_A = compoundA (mkA "idiotic");
lin idiotically_Adv = mkAdv "idiotically";
lin idle_A = mkA "idle" "idler";
lin idle_N = mkN "idle" ;
lin idle_V = mkV "idle" "idles" "idled" "idled" "idling";
lin idle_V2 = mkV2 (mkV "idle" "idles" "idled" "idled" "idling");
lin idleness_N = mkN "idleness" ;
lin idler_N = mkN "idler" "idlers";
lin idly_Adv = mkAdv "idly";
lin idol_N = mkN "idol" "idols";
lin idolater_N = mkN masculine (mkN "idolater" "idolaters");
lin idolatress_N = mkN feminine (mkN "idolatress" "idolatresses");
lin idolatrous_A = compoundA (mkA "idolatrous");
lin idolatry_N = mkN "idolatry" "idolatries";
lin idolization_N = mkN "idolization" "idolizations";
lin idolize_V2 = mkV2 (mkV "idolize" "idolizes" "idolized" "idolized" "idolizing");
lin idolizer_N = mkN "idolizer" ;
lin idyll_N = mkN "idyll" "idylls";
lin idyllic_A = compoundA (mkA "idyllic");
lin idyllically_Adv = mkAdv "idyllically" ;
lin ie_PN = mkPN "IE";
lin if_Subj = mkSubj "if";
lin igloo_N = mkN "igloo" "igloos";
lin igneous_A = compoundA (mkA "igneous");
lin ignescent_A = mkA "ignescent" ;
lin ignis_fatuus_N = mkN "ignis fatuus" "ignis fatui";
lin ignite_V = mkV "ignite" "ignites" "ignited" "ignited" "igniting";
lin ignite_V2 = mkV2 (mkV "ignite" "ignites" "ignited" "ignited" "igniting");
lin igniter_N = mkN "igniter" ;
lin ignition_N = mkN "ignition" ;
lin ignoble_A = compoundA (mkA "ignoble");
lin ignobleness_N = mkN "ignobleness" ;
lin ignominious_A = compoundA (mkA "ignominious");
lin ignominy_N = mkN "ignominy" "ignominies";
lin ignoramus_N = mkN "ignoramus" "ignoramuses";
lin ignorance_N = mkN "ignorance" ;
lin ignorant_A = compoundA (mkA "ignorant");
lin ignorantness_N = mkN "ignorantness" ;
lin ignore_V = mkV "ignore";
lin ignore_V2 = mkV2 (mkV "ignore" "ignores" "ignored" "ignored" "ignoring");
lin iguana_N = mkN "iguana" "iguanas";
lin iguanid_N = mkN "iguanid" ;
lin iguanodon_N = mkN "iguanodon" ;
lin ijtihad_N = mkN "ijtihad" ;
lin ikon_N = mkN "ikon" "ikons";
lin ilama_N = mkN "ilama" ;
lin ileitis_N = mkN "ileitis" ;
lin ileostomy_N = mkN "ileostomy" ;
lin ileum_N = mkN "ileum" ;
lin ilex_N = mkN "ilex" "ilexes";
lin ilfracombe_PN = mkPN "Ilfracombe";
lin iliac_A = mkA "iliac" ;
lin ilium_N = mkN "ilium" ;
lin ilk_N = mkN "ilk" ;
lin ilkeston_PN = mkPN "Ilkeston";
lin ilkley_PN = mkPN "Ilkley";
lin ill_A = compoundA (mkA "ill");
lin ill_Adv = mkAdv "ill";
lin ill_N = mkN "ill" "ills";
lin ill_advised_A = compoundA (mkA "ill-advised");
lin ill_affected_A = compoundA (mkA "ill-affected");
lin ill_bred_A = compoundA (mkA "ill-bred");
lin ill_breeding_N = mkN "ill-breeding" ;
lin ill_disposed_A = compoundA (mkA "ill-disposed");
lin ill_fated_A = compoundA (mkA "ill-fated");
lin ill_favoured_A = compoundA (mkA "ill-favoured");
lin ill_gotten_A = compoundA (mkA "ill-gotten");
lin ill_judged_A = compoundA (mkA "ill-judged");
lin ill_mannered_A = compoundA (mkA "ill-mannered");
lin ill_natured_A = compoundA (mkA "ill-natured");
lin ill_omened_A = compoundA (mkA "ill-omened");
lin ill_starred_A = compoundA (mkA "ill-starred");
lin ill_timed_A = compoundA (mkA "ill-timed");
lin ill_treat_V2 = mkV2 (mkV "ill-treat" "ill-treats" "ill-treated" "ill-treated" "ill-treating");
lin ill_treatment_N = mkN "ill-treatment" ;
lin ill_usage_N = mkN "ill-usage" ;
lin ill_use_V2 = mkV2 (mkV "ill-use" "ill-uses" "ill-used" "ill-used" "ill-using");
lin illative_A = mkA "illative" ;
lin illegal_A = compoundA (mkA "illegal");
lin illegality_N = mkN "illegality" "illegalities";
lin illegibility_N = mkN "illegibility" ;
lin illegible_A = compoundA (mkA "illegible");
lin illegitimacy_N = mkN "illegitimacy" ;
lin illegitimate_A = compoundA (mkA "illegitimate");
lin illegitimate_N = mkN "illegitimate" "illegitimate";
lin illiberal_A = compoundA (mkA "illiberal");
lin illiberality_N = mkN "illiberality" ;
lin illicit_A = compoundA (mkA "illicit");
lin illicitness_N = mkN "illicitness" ;
lin illimitable_A = compoundA (mkA "illimitable");
lin illinois_PN = mkPN "Illinois";
lin illiteracy_N = mkN "illiteracy" "illiteracies";
lin illiterate_A = compoundA (mkA "illiterate");
lin illiterate_N = mkN "illiterate" "illiterates";
lin illness_N = mkN "illness" "illnesses";
lin illogical_A = compoundA (mkA "illogical");
lin illogicality_N = mkN "illogicality" "illogicalities";
lin illogicalness_N = mkN "illogicalness" ;
lin illume_V2 = mkV2 (mkV "illume" "illumes" "illumed" "illumed" "illuming");
lin illuminance_N = mkN "illuminance" ;
lin illuminant_N = mkN "illuminant" ;
lin illuminate_V2 = mkV2 (mkV "illuminate" "illuminates" "illuminated" "illuminated" "illuminating");
lin illumination_N = mkN "illumination" "illuminations";
lin illumine_V2 = mkV2 (mkV "illumine" "illumines" "illumined" "illumined" "illumining");
lin illusion_N = mkN "illusion" "illusions";
lin illusional_A = mkA "illusional" ;
lin illusionist_N = mkN "illusionist" "illusionists";
lin illusive_A = compoundA (mkA "illusive");
lin illusory_A = compoundA (mkA "illusory");
lin illustrate_V = mkV "illustrate";
lin illustrate_V2 = mkV2 (mkV "illustrate" "illustrates" "illustrated" "illustrated" "illustrating");
lin illustrate_VS = mkVS (mkV "illustrate");
lin illustration_N = mkN "illustration" "illustrations";
lin illustrative_A = compoundA (mkA "illustrative");
lin illustrator_N = mkN "illustrator" "illustrators";
lin illustrious_A = compoundA (mkA "illustrious");
lin ilmenite_N = mkN "ilmenite" ;
lin ilo_N = mkN "ilo" ;
lin image_N = mkN "image" "images";
lin image_V2 = mkV2 (mkV "image" "images" "imaged" "imaged" "imaging");
lin imagery_N = mkN "imagery" ;
lin imaginable_A = compoundA (mkA "imaginable");
lin imaginary_A = compoundA (mkA "imaginary");
lin imagination_N = mkN "imagination" "imaginations";
lin imaginative_A = compoundA (mkA "imaginative");
lin imagine_V = mkV "imagine";
lin imagine_V2 = mkV2 (mkV "imagine" "imagines" "imagined" "imagined" "imagining");
lin imagine_VS = mkVS (mkV "imagine");
lin imaging_N = mkN "imaging" ;
lin imagism_N = mkN "imagism" ;
lin imago_N = mkN "imago" ;
lin imam_N = mkN "imam" "imams";
lin imaret_N = mkN "imaret" ;
lin imbalance_N = mkN "imbalance" "imbalances";
lin imbecile_A = compoundA (mkA "imbecile");
lin imbecile_N = mkN "imbecile" "imbeciles";
lin imbecility_N = mkN "imbecility" "imbecilities";
lin imbed_V2 = mkV2 (mkV "imbed" "imbeds" "imbedded" "imbedded" "imbedding");
lin imbibe_V2 = mkV2 (mkV "imbibe" "imbibes" "imbibed" "imbibed" "imbibing");
lin imbibition_N = mkN "imbibition" ;
lin imbricate_A = mkA "imbricate" ;
lin imbrication_N = mkN "imbrication" ;
lin imbroglio_N = mkN "imbroglio" "imbroglios";
lin imbue_V2 = mkV2 (mkV "imbue" "imbues" "imbued" "imbued" "imbuing");
lin imf_N = mkN "imf" ;
lin imidazole_N = mkN "imidazole" ;
lin imide_N = mkN "imide" ;
lin imipramine_N = mkN "imipramine" ;
lin imitate_V2 = mkV2 (mkV "imitate" "imitates" "imitated" "imitated" "imitating");
lin imitation_N = mkN "imitation" "imitations";
lin imitative_A = compoundA (mkA "imitative");
lin imitator_N = mkN "imitator" "imitators";
lin immaculate_A = compoundA (mkA "immaculate");
lin immanence_N = mkN "immanence" "immanences";
lin immanent_A = compoundA (mkA "immanent");
lin immaterial_A = compoundA (mkA "immaterial");
lin immateriality_N = mkN "immateriality" ;
lin immature_A = compoundA (mkA "immature");
lin immaturity_N = mkN "immaturity" ;
lin immeasurable_A = compoundA (mkA "immeasurable");
lin immediacy_N = mkN "immediacy" ;
lin immediate_A = compoundA (mkA "immediate");
lin immemorial_A = compoundA (mkA "immemorial");
lin immense_A = compoundA (mkA "immense");
lin immensity_N = mkN "immensity" "immensities";
lin immerse_V2 = mkV2 (mkV "immerse" "immerses" "immersed" "immersed" "immersing");
lin immersion_N = mkN "immersion" "immersions";
lin immigrant_N = mkN "immigrant" "immigrants";
lin immigrate_V = mkV "immigrate" "immigrates" "immigrated" "immigrated" "immigrating";
lin immigration_N = mkN "immigration" "immigrations";
lin imminence_N = mkN "imminence" ;
lin imminent_A = compoundA (mkA "imminent");
lin immingham_PN = mkPN "Immingham";
lin immiscible_A = mkA "immiscible" ;
lin immobile_A = compoundA (mkA "immobile");
lin immobility_N = mkN "immobility" ;
lin immobilization_N = mkN "immobilization" ;
lin immobilize_V2 = mkV2 (mkV "immobilize" "immobilizes" "immobilized" "immobilized" "immobilizing");
lin immoderate_A = compoundA (mkA "immoderate");
lin immoderation_N = mkN "immoderation" ;
lin immodest_A = compoundA (mkA "immodest");
lin immodesty_N = mkN "immodesty" "immodesties";
lin immolate_V2 = mkV2 (mkV "immolate" "immolates" "immolated" "immolated" "immolating");
lin immolation_N = mkN "immolation" "immolations";
lin immoral_A = compoundA (mkA "immoral");
lin immorality_N = mkN "immorality" "immoralities";
lin immortal_A = compoundA (mkA "immortal");
lin immortal_N = mkN "immortal" "immortals";
lin immortality_N = mkN "immortality" ;
lin immortalize_V2 = mkV2 (mkV "immortalize" "immortalizes" "immortalized" "immortalized" "immortalizing");
lin immortelle_N = mkN "immortelle" ;
lin immotility_N = mkN "immotility" ;
lin immovability_N = mkN "immovability" ;
lin immovable_A = compoundA (mkA "immovable");
lin immune_A = compoundA (mkA "immune");
lin immune_N = mkN "immune" ;
lin immunity_N = mkN "immunity" ;
lin immunization_N = mkN "immunization" ;
lin immunize_V2 = mkV2 (mkV "immunize" "immunizes" "immunized" "immunized" "immunizing");
lin immunoassay_N = mkN "immunoassay" ;
lin immunochemical_A = mkA "immunochemical" ;
lin immunochemistry_N = mkN "immunochemistry" ;
lin immunocompetence_N = mkN "immunocompetence" ;
lin immunocompetent_A = mkA "immunocompetent" ;
lin immunocompromised_A = mkA "immunocompromised" ;
lin immunodeficiency_N = mkN "immunodeficiency" ;
lin immunodeficient_A = mkA "immunodeficient" ;
lin immunoelectrophoresis_N = mkN "immunoelectrophoresis" ;
lin immunofluorescence_N = mkN "immunofluorescence" ;
lin immunogen_N = mkN "immunogen" ;
lin immunogenic_A = mkA "immunogenic" ;
lin immunogenicity_N = mkN "immunogenicity" ;
lin immunoglobulin_N = mkN "immunoglobulin" ;
lin immunohistochemistry_N = mkN "immunohistochemistry" ;
lin immunological_A = mkA "immunological" ;
lin immunologist_N = mkN "immunologist" ;
lin immunology_N = mkN "immunology" ;
lin immunopathology_N = mkN "immunopathology" ;
lin immunosuppressant_N = mkN "immunosuppressant" ;
lin immunosuppressed_A = mkA "immunosuppressed" ;
lin immunosuppression_N = mkN "immunosuppression" ;
lin immunosuppressive_A = mkA "immunosuppressive" ;
lin immunotherapeutic_A = mkA "immunotherapeutic" ;
lin immunotherapy_N = mkN "immunotherapy" ;
lin immure_V2 = mkV2 (mkV "immure" "immures" "immured" "immured" "immuring");
lin immutability_N = mkN "immutability" ;
lin immutable_A = compoundA (mkA "immutable");
lin imp_N = mkN "imp" "imps";
lin impact_N = mkN "impact" "impacts";
lin impact_V2 = mkV2 (mkV "impact" "impacts" "impacted" "impacted" "impacting");
lin impaction_N = mkN "impaction" ;
lin impair_V2 = mkV2 (mkV "impair" "impairs" "impaired" "impaired" "impairing");
lin impairer_N = mkN "impairer" ;
lin impairment_N = mkN "impairment" "impairments";
lin impala_N = mkN "impala" "impalas";
lin impale_V2 = mkV2 (mkV "impale" "impales" "impaled" "impaled" "impaling");
lin impalement_N = mkN "impalement" "impalements";
lin impalpable_A = compoundA (mkA "impalpable");
lin impanel_V2 = mkV2 (mkV "impanel" "impanels" "impanelled" "impanelled" "impanelling");
lin impart_V2 = mkV2 (mkV "impart" "imparts" "imparted" "imparted" "imparting");
lin impartial_A = compoundA (mkA "impartial");
lin impartiality_N = mkN "impartiality" ;
lin impassable_A = compoundA (mkA "impassable");
lin impasse_N = mkN "impasse" "impasses";
lin impassioned_A = compoundA (mkA "impassioned");
lin impassive_A = compoundA (mkA "impassive");
lin impassiveness_N = mkN "impassiveness" ;
lin impassivity_N = mkN "impassivity" ;
lin impasto_N = mkN "impasto" ;
lin impatience_N = mkN "impatience" ;
lin impatient_A = compoundA (mkA "impatient");
lin impeach_V2 = mkV2 (mkV "impeach" "impeaches" "impeached" "impeached" "impeaching");
lin impeachability_N = mkN "impeachability" ;
lin impeachment_N = mkN "impeachment" "impeachments";
lin impeccability_N = mkN "impeccability" ;
lin impeccable_A = compoundA (mkA "impeccable");
lin impeccant_A = mkA "impeccant" ;
lin impecunious_A = compoundA (mkA "impecunious");
lin impecuniousness_N = mkN "impecuniousness" ;
lin impede_V2 = mkV2 (mkV "impede" "impedes" "impeded" "impeded" "impeding");
lin impediment_N = mkN "impediment" "impediments";
lin impedimenta_N = mkN "impedimenta" ;
lin impel_V2 = mkV2 (mkV "impel" "impels" "impelled" "impelled" "impelling");
lin impellent_A = mkA "impellent" ;
lin impeller_N = mkN "impeller" "impellers";
lin impelling_A = mkA "impelling" ;
lin impend_V = mkV "impend" "impends" "impended" "impended" "impending";
lin impenetrability_N = mkN "impenetrability" ;
lin impenetrable_A = compoundA (mkA "impenetrable");
lin impenitence_N = mkN "impenitence" ;
lin impenitent_A = compoundA (mkA "impenitent");
lin imperative_A = compoundA (mkA "imperative");
lin imperative_N = mkN "imperative" ;
lin imperativeness_N = mkN "imperativeness" ;
lin imperceptibility_N = mkN "imperceptibility" ;
lin imperceptible_A = compoundA (mkA "imperceptible");
lin imperfect_A = compoundA (mkA "imperfect");
lin imperfect_N = mkN "imperfect" "IRREG";
lin imperfectibility_N = mkN "imperfectibility" ;
lin imperfectible_A = mkA "imperfectible" ;
lin imperfection_N = mkN "imperfection" "imperfections";
lin imperfective_N = mkN "imperfective" ;
lin imperforate_A = mkA "imperforate" ;
lin imperial_A = compoundA (mkA "imperial");
lin imperial_N = mkN "imperial" "imperials";
lin imperialism_N = mkN "imperialism" ;
lin imperialist_N = mkN "imperialist" "imperialists";
lin imperialistic_A = compoundA (mkA "imperialistic");
lin imperil_V2 = mkV2 (mkV "imperil" "imperils" "imperilled" "imperilled" "imperilling");
lin imperile_V2 = mkV2 (mkV "imperile");
lin imperious_A = compoundA (mkA "imperious");
lin imperiousness_N = mkN "imperiousness" ;
lin imperishability_N = mkN "imperishability" ;
lin imperishable_A = compoundA (mkA "imperishable");
lin imperium_N = mkN "imperium" ;
lin impermanence_N = mkN "impermanence" ;
lin impermanent_A = compoundA (mkA "impermanent");
lin impermeability_N = mkN "impermeability" ;
lin impermeable_A = compoundA (mkA "impermeable");
lin impermissibility_N = mkN "impermissibility" ;
lin impermissible_A = mkA "impermissible" ;
lin impersonal_A = compoundA (mkA "impersonal");
lin impersonate_V2 = mkV2 (mkV "impersonate" "impersonates" "impersonated" "impersonated" "impersonating");
lin impersonation_N = mkN "impersonation" "impersonations";
lin impersonator_N = mkN "impersonator" "impersonators";
lin impertinence_N = mkN "impertinence" "impertinences";
lin impertinent_A = compoundA (mkA "impertinent");
lin imperturbability_N = mkN "imperturbability" ;
lin imperturbable_A = compoundA (mkA "imperturbable");
lin impervious_A = compoundA (mkA "impervious");
lin impetiginous_A = mkA "impetiginous" ;
lin impetigo_N = mkN "impetigo" ;
lin impetuosity_N = mkN "impetuosity" "impetuosities";
lin impetuous_A = compoundA (mkA "impetuous");
lin impetuousness_N = mkN "impetuousness" ;
lin impetus_N = mkN "impetus" "impeti";
lin impiety_N = mkN "impiety" "impieties";
lin impinge_V = mkV "impinge" "impinges" "impinged" "impinged" "impinging";
lin impingement_N = mkN "impingement" "impingements";
lin impious_A = compoundA (mkA "impious");
lin impish_A = compoundA (mkA "impish");
lin impishness_N = mkN "impishness" ;
lin implacable_A = compoundA (mkA "implacable");
lin implant_N = mkN "implant" ;
lin implant_V2 = mkV2 (mkV "implant" "implants" "implanted" "implanted" "implanting");
lin implantation_N = mkN "implantation" ;
lin implausibility_N = mkN "implausibility" ;
lin implausible_A = compoundA (mkA "implausible");
lin implement_N = mkN "implement" "implements";
lin implement_V2 = mkV2 (mkV "implement" "implements" "implemented" "implemented" "implementing");
lin implemental_A = mkA "implemental" ;
lin implementation_N = mkN "implementation" "implementations";
lin implicate_V2 = mkV2 (mkV "implicate" "implicates" "implicated" "implicated" "implicating");
lin implication_N = mkN "implication" "implications";
lin implicational_A = mkA "implicational" ;
lin implicative_A = mkA "implicative" ;
lin implicit_A = compoundA (mkA "implicit");
lin implicitness_N = mkN "implicitness" ;
lin implore_V2 = mkV2 (mkV "implore" "implores" "implored" "implored" "imploring");
lin implore_VS = mkVS (mkV "implore");
lin imploringly_Adv = mkAdv "imploringly";
lin implosion_N = mkN "implosion" "implosions";
lin imply_V = mkV "imply";
lin imply_V2 = mkV2 (mkV "imply" "implies" "implied" "implied" "implying");
lin imply_VS = mkVS (mkV "imply");
lin impolite_A = compoundA (mkA "impolite");
lin impoliteness_N = mkN "impoliteness" ;
lin impolitic_A = compoundA (mkA "impolitic");
lin imponderable_A = compoundA (mkA "imponderable");
lin imponderable_N = mkN "imponderable" "imponderables";
lin import_N = mkN "import" "imports";
lin import_V2 = mkV2 (mkV "import" "imports" "imported" "imported" "importing");
lin importance_N = mkN "importance" ;
lin important_A = compoundA (mkA "important");
lin importation_N = mkN "importation" "importations";
lin importerMasc_N = mkN masculine (mkN "importer" "importers");
lin importerFem_N = mkN feminine (mkN "importer" "importers");
lin importing_N = mkN "importing" ;
lin importunate_A = compoundA (mkA "importunate");
lin importune_V2 = mkV2 (mkV "importune" "importunes" "importuned" "importuned" "importuning");
lin importunity_N = mkN "importunity" ;
lin impose_V = mkV "impose" "imposes" "imposed" "imposed" "imposing";
lin impose_V2 = mkV2 (mkV "impose" "imposes" "imposed" "imposed" "imposing");
lin imposition_N = mkN "imposition" "impositions";
lin impossibility_N = mkN "impossibility" "impossibilities";
lin impossible_A = compoundA (mkA "impossible");
lin impossible_N = mkN "impossible" ;
lin imposter_N = mkN "imposter" ;
lin impostor_N = mkN "impostor" "impostors";
lin imposture_N = mkN "imposture" "impostures";
lin impotence_N = mkN "impotence" ;
lin impotent_A = compoundA (mkA "impotent");
lin impound_V2 = mkV2 (mkV "impound" "impounds" "impounded" "impounded" "impounding");
lin impoundment_N = mkN "impoundment" ;
lin impoverish_V2 = mkV2 (mkV "impoverish" "impoverishes" "impoverished" "impoverished" "impoverishing");
lin impoverishment_N = mkN "impoverishment" "impoverishments";
lin impracticability_N = mkN "impracticability" ;
lin impracticable_A = compoundA (mkA "impracticable");
lin impracticableness_N = mkN "impracticableness" ;
lin impractical_A = compoundA (mkA "impractical");
lin impracticality_N = mkN "impracticality" ;
lin imprecate_V2 = mkV2 (mkV "imprecate" "imprecates" "imprecated" "imprecated" "imprecating");
lin imprecation_N = mkN "imprecation" "imprecations";
lin imprecise_A = compoundA (mkA "imprecise");
lin impreciseness_N = mkN "impreciseness" ;
lin imprecision_N = mkN "imprecision" ;
lin impregnability_N = mkN "impregnability" ;
lin impregnable_A = compoundA (mkA "impregnable");
lin impregnate_V2 = mkV2 (mkV "impregnate" "impregnates" "impregnated" "impregnated" "impregnating");
lin impregnation_N = mkN "impregnation" ;
lin impresario_N = mkN "impresario" "impresarios";
lin impress_N = mkN "impress" "impresses";
lin impress_V = mkV "impress";
lin impress_V2 = mkV2 (mkV "impress" "impresses" "impressed" "impressed" "impressing");
lin impression_N = mkN "impression" "impressions";
lin impressionable_A = compoundA (mkA "impressionable");
lin impressionism_N = mkN "impressionism" ;
lin impressionist_A = mkA "impressionist" ;
lin impressionist_N = mkN "impressionist" "impressionists";
lin impressionistic_A = compoundA (mkA "impressionistic");
lin impressive_A = compoundA (mkA "impressive");
lin impressiveness_N = mkN "impressiveness" ;
lin imprimatur_N = mkN "imprimatur" "imprimaturs";
lin imprint_N = mkN "imprint" "imprints";
lin imprint_V2 = mkV2 (mkV "imprint" "imprints" "imprinted" "imprinted" "imprinting");
lin imprinting_N = mkN "imprinting" ;
lin imprison_V2 = mkV2 (mkV "imprison" "imprisons" "imprisoned" "imprisoned" "imprisoning");
lin imprisonment_N = mkN "imprisonment" ;
lin improbability_N = mkN "improbability" "improbabilities";
lin improbable_A = compoundA (mkA "improbable");
lin impromptu_A = compoundA (mkA "impromptu");
lin impromptu_Adv = mkAdv "impromptu";
lin impromptu_N = mkN "impromptu" "impromptus";
lin improper_A = compoundA (mkA "improper");
lin impropriety_N = mkN "impropriety" "improprieties";
lin improvable_A = mkA "improvable" ;
lin improve_V = mkV "improve" "improves" "improved" "improved" "improving";
lin improve_V2 = mkV2 (mkV "improve" "improves" "improved" "improved" "improving");
lin improvement_N = mkN "improvement" "improvements";
lin improver_N = mkN "improver" "improvers";
lin improvidence_N = mkN "improvidence" ;
lin improvident_A = compoundA (mkA "improvident");
lin improvisation_N = mkN "improvisation" "improvisations";
lin improvise_V = mkV "improvise" "improvises" "improvised" "improvised" "improvising";
lin improvise_V2 = mkV2 (mkV "improvise" "improvises" "improvised" "improvised" "improvising");
lin imprudence_N = mkN "imprudence" "imprudences";
lin imprudent_A = compoundA (mkA "imprudent");
lin impudence_N = mkN "impudence" ;
lin impudent_A = compoundA (mkA "impudent");
lin impugn_V2 = mkV2 (mkV "impugn" "impugns" "impugned" "impugned" "impugning");
lin impugnable_A = mkA "impugnable" ;
lin impuissant_A = mkA "impuissant" ;
lin impulse_N = mkN "impulse" "impulses";
lin impulse_buy_V = mkV "impulse-" IrregEng.buy_V;
lin impulse_buy_V2 = mkV2 (mkV "impulse-" IrregEng.buy_V);
lin impulsion_N = mkN "impulsion" "impulsions";
lin impulsive_A = compoundA (mkA "impulsive");
lin impulsiveness_N = mkN "impulsiveness" ;
lin impunity_N = mkN "impunity" ;
lin impure_A = compoundA (mkA "impure");
lin impurity_N = mkN "impurity" "impurities";
lin imputation_N = mkN "imputation" "imputations";
lin impute_V2 = mkV2 (mkV "impute" "imputes" "imputed" "imputed" "imputing");
lin imputrescible_A = mkA "imputrescible" ;
lin in_A = mkA "in" ;
lin in_Adv = mkAdv "in";
lin in_N = mkN "in" "ins";
lin in_Prep = mkPrep "in";
lin in_addition_Adv = mkAdv "in addition";
lin in_chief_A = compoundA (mkA "in-chief");
lin in_fighting_N = mkN "in-fighting" ;
lin in_general_Adv = mkAdv "in general";
lin in_loco_parentis_Adv = mkAdv "in loco parentis";
lin in_particular_Adv = mkAdv "in particular";
lin in_patient_N = mkN "in-patient" "in-patients";
lin in_service_A = compoundA (mkA "in-service");
lin in_situ_Adv = mkAdv "in situ";
lin in_toto_Adv = mkAdv "in toto";
lin in_tray_N = mkN "in-tray" "in-trays";
lin inability_N = mkN "inability" ;
lin inaccessibility_N = mkN "inaccessibility" ;
lin inaccessible_A = compoundA (mkA "inaccessible");
lin inaccuracy_N = mkN "inaccuracy" "inaccuracies";
lin inaccurate_A = compoundA (mkA "inaccurate");
lin inaction_N = mkN "inaction" ;
lin inactivate_V2 = mkV2 (mkV "inactivate" "inactivates" "inactivated" "inactivated" "inactivating");
lin inactivation_N = mkN "inactivation" ;
lin inactive_A = compoundA (mkA "inactive");
lin inactiveness_N = mkN "inactiveness" ;
lin inactivity_N = mkN "inactivity" ;
lin inadequacy_N = mkN "inadequacy" "inadequacies";
lin inadequate_A = compoundA (mkA "inadequate");
lin inadmissibility_N = mkN "inadmissibility" ;
lin inadmissible_A = compoundA (mkA "inadmissible");
lin inadvertence_N = mkN "inadvertence" "inadvertences";
lin inadvertent_A = compoundA (mkA "inadvertent");
lin inadvisability_N = mkN "inadvisability" ;
lin inadvisable_A = compoundA (mkA "inadvisable");
lin inaesthetic_A = mkA "inaesthetic" ;
lin inalienable_A = compoundA (mkA "inalienable");
lin inamorata_N = mkN "inamorata" ;
lin inamorato_N = mkN "inamorato" ;
lin inane_A = compoundA (mkA "inane");
lin inanimate_A = compoundA (mkA "inanimate");
lin inanimateness_N = mkN "inanimateness" ;
lin inanition_N = mkN "inanition" ;
lin inanity_N = mkN "inanity" "inanities";
lin inapplicability_N = mkN "inapplicability" ;
lin inapplicable_A = compoundA (mkA "inapplicable");
lin inapposite_A = mkA "inapposite" ;
lin inappreciable_A = compoundA (mkA "inappreciable");
lin inappropriate_A = compoundA (mkA "inappropriate");
lin inappropriateness_N = mkN "inappropriateness" ;
lin inapt_A = compoundA (mkA "inapt");
lin inaptitude_N = mkN "inaptitude" ;
lin inaptness_N = mkN "inaptness" ;
lin inarguable_A = mkA "inarguable" ;
lin inarticulate_A = compoundA (mkA "inarticulate");
lin inartistic_A = mkA "inartistic" ;
lin inasmuch_as_Adv = mkAdv "inasmuch as";
lin inattention_N = mkN "inattention" ;
lin inattentive_A = compoundA (mkA "inattentive");
lin inattentiveness_N = mkN "inattentiveness" ;
lin inaudibility_N = mkN "inaudibility" ;
lin inaudible_A = compoundA (mkA "inaudible");
lin inaugural_A = compoundA (mkA "inaugural");
lin inaugural_N = mkN "inaugural" "inaugurals";
lin inaugurate_V2 = mkV2 (mkV "inaugurate" "inaugurates" "inaugurated" "inaugurated" "inaugurating");
lin inauguration_N = mkN "inauguration" "inaugurations";
lin inauspicious_A = compoundA (mkA "inauspicious");
lin inauspiciousness_N = mkN "inauspiciousness" ;
lin inauthentic_A = mkA "inauthentic" ;
lin inboard_A = compoundA (mkA "inboard");
lin inborn_A = compoundA (mkA "inborn");
lin inbound_A = compoundA (mkA "inbound");
lin inbred_A = compoundA (mkA "inbred");
lin inbreeding_N = mkN "inbreeding" ;
lin inbuilt_A = compoundA (mkA "inbuilt");
lin inc_PN = mkPN "Inc";
lin incalculable_A = compoundA (mkA "incalculable");
lin incandescence_N = mkN "incandescence" ;
lin incandescent_A = compoundA (mkA "incandescent");
lin incantation_N = mkN "incantation" "incantations";
lin incapability_N = mkN "incapability" ;
lin incapable_A = compoundA (mkA "incapable");
lin incapacitate_V2 = mkV2 (mkV "incapacitate" "incapacitates" "incapacitated" "incapacitated" "incapacitating");
lin incapacity_N = mkN "incapacity" ;
lin incarcerate_V2 = mkV2 (mkV "incarcerate" "incarcerates" "incarcerated" "incarcerated" "incarcerating");
lin incarceration_N = mkN "incarceration" "incarcerations";
lin incarnate_A = compoundA (mkA "incarnate");
lin incarnate_V2 = mkV2 (mkV "incarnate" "incarnates" "incarnated" "incarnated" "incarnating");
lin incarnation_N = mkN "incarnation" "incarnations";
lin incaution_N = mkN "incaution" ;
lin incautious_A = compoundA (mkA "incautious");
lin incendiarism_N = mkN "incendiarism" ;
lin incendiary_A = mkA "incendiary" ;
lin incendiary_N = mkN "incendiary" "incendiaries";
lin incense_N = mkN "incense" ;
lin incense_V2 = mkV2 (mkV "incense" "incenses" "incensed" "incensed" "incensing");
lin incentive_N = mkN "incentive" "incentives";
lin inception_N = mkN "inception" "inceptions";
lin incertitude_N = mkN "incertitude" ;
lin incessant_A = compoundA (mkA "incessant");
lin incest_N = mkN "incest" ;
lin incestuous_A = compoundA (mkA "incestuous");
lin inch_N = mkN "inch" "inches";
lin inch_V = mkV "inch" "inches" "inched" "inched" "inching";
lin inch_V2 = mkV2 (mkV "inch" "inches" "inched" "inched" "inching");
lin inchoate_A = compoundA (mkA "inchoate");
lin inchoative_A = compoundA (mkA "inchoative");
lin inchoative_N = mkN "inchoative" ;
lin inchon_PN = mkPN "Inchon";
lin incidence_N = mkN "incidence" "incidences";
lin incident_A = compoundA (mkA "incident");
lin incident_N = mkN "incident" "incidents";
lin incidental_A = compoundA (mkA "incidental");
lin incidental_N = mkN "incidental" ;
lin incinerate_V2 = mkV2 (mkV "incinerate" "incinerates" "incinerated" "incinerated" "incinerating");
lin incineration_N = mkN "incineration" ;
lin incinerator_N = mkN "incinerator" "incinerators";
lin incipiency_N = mkN "incipiency" ;
lin incipient_A = compoundA (mkA "incipient");
lin incise_V2 = mkV2 (mkV "incise" "incises" "incised" "incised" "incising");
lin incision_N = mkN "incision" "incisions";
lin incisive_A = compoundA (mkA "incisive");
lin incisiveness_N = mkN "incisiveness" ;
lin incisor_N = mkN "incisor" "incisors";
lin incisure_N = mkN "incisure" ;
lin incitation_N = mkN "incitation" ;
lin incite_V2 = mkV2 (mkV "incite" "incites" "incited" "incited" "inciting");
lin incitement_N = mkN "incitement" "incitements";
lin incivility_N = mkN "incivility" "incivilities";
lin incl_PN = mkPN "Incl";
lin inclemency_N = mkN "inclemency" ;
lin inclement_A = compoundA (mkA "inclement");
lin inclination_N = mkN "inclination" "inclinations";
lin incline_N = mkN "incline" "inclines";
lin incline_V = mkV "incline" "inclines" "inclined" "inclined" "inclining";
lin incline_V2 = mkV2 (mkV "incline" "inclines" "inclined" "inclined" "inclining");
lin incline_V2V = mkV2V (mkV "incline" "inclines" "inclined" "inclined" "inclining") noPrep to_Prep ;
lin inclinometer_N = mkN "inclinometer" ;
lin inclose_V2 = mkV2 (mkV "inclose" "incloses" "inclosed" "inclosed" "inclosing");
lin inclosure_N = mkN "inclosure" "inclosures";
lin include_V = mkV "include";
lin include_V2 = mkV2 (mkV "include" "includes" "included" "included" "including");
lin include_VV = ingVV (mkV "include");
lin inclusion_N = mkN "inclusion" ;
lin inclusive_A = compoundA (mkA "inclusive");
lin incognito_A = compoundA (mkA "incognito");
lin incognito_Adv = mkAdv "incognito";
lin incognizable_A = mkA "incognizable" ;
lin incognizance_N = mkN "incognizance" ;
lin incoherence_N = mkN "incoherence" ;
lin incoherent_A = compoundA (mkA "incoherent");
lin incombustible_A = compoundA (mkA "incombustible");
lin income_N = mkN "income" "incomes";
lin income_tax_N = mkN "income-tax" "income-taxes";
lin incoming_A = compoundA (mkA "incoming");
lin incommensurable_A = compoundA (mkA "incommensurable");
lin incommensurate_A = compoundA (mkA "incommensurate");
lin incommode_V2 = mkV2 (mkV "incommode" "incommodes" "incommoded" "incommoded" "incommoding");
lin incommodious_A = mkA "incommodious" ;
lin incommunicado_A = compoundA (mkA "incommunicado");
lin incommutability_N = mkN "incommutability" ;
lin incommutable_A = mkA "incommutable" ;
lin incomparable_A = compoundA (mkA "incomparable");
lin incompatibility_N = mkN "incompatibility" "incompatibilities";
lin incompatible_A = compoundA (mkA "incompatible");
lin incompetence_N = mkN "incompetence" ;
lin incompetency_N = mkN "incompetency" ;
lin incompetent_A = compoundA (mkA "incompetent");
lin incompetent_N = mkN "incompetent" ;
lin incomplete_A = compoundA (mkA "incomplete");
lin incompleteness_N = mkN "incompleteness" ;
lin incomprehensibility_N = mkN "incomprehensibility" ;
lin incomprehensible_A = compoundA (mkA "incomprehensible");
lin incomprehension_N = mkN "incomprehension" ;
lin incompressibility_N = mkN "incompressibility" ;
lin incompressible_A = compoundA (mkA "incompressible");
lin incomputable_A = mkA "incomputable" ;
lin inconceivability_N = mkN "inconceivability" ;
lin inconceivable_A = compoundA (mkA "inconceivable");
lin inconclusive_A = compoundA (mkA "inconclusive");
lin inconclusiveness_N = mkN "inconclusiveness" ;
lin incongruent_A = mkA "incongruent" ;
lin incongruity_N = mkN "incongruity" "incongruities";
lin incongruous_A = compoundA (mkA "incongruous");
lin inconsequence_N = mkN "inconsequence" ;
lin inconsequent_A = compoundA (mkA "inconsequent");
lin inconsequential_A = compoundA (mkA "inconsequential");
lin inconsiderable_A = compoundA (mkA "inconsiderable");
lin inconsiderate_A = compoundA (mkA "inconsiderate");
lin inconsideration_N = mkN "inconsideration" ;
lin inconsistency_N = mkN "inconsistency" "inconsistencies";
lin inconsistent_A = compoundA (mkA "inconsistent");
lin inconsolable_A = compoundA (mkA "inconsolable");
lin inconspicuous_A = compoundA (mkA "inconspicuous");
lin inconspicuousness_N = mkN "inconspicuousness" ;
lin inconstancy_N = mkN "inconstancy" "inconstancies";
lin inconstant_A = compoundA (mkA "inconstant");
lin incontestable_A = compoundA (mkA "incontestable");
lin incontinence_N = mkN "incontinence" ;
lin incontinent_A = compoundA (mkA "incontinent");
lin incontrovertibility_N = mkN "incontrovertibility" ;
lin incontrovertible_A = compoundA (mkA "incontrovertible");
lin inconvenience_N = mkN "inconvenience" "inconveniences";
lin inconvenience_V2 = mkV2 (mkV "inconvenience" "inconveniences" "inconvenienced" "inconvenienced" "inconveniencing");
lin inconvenient_A = compoundA (mkA "inconvenient");
lin inconvertibility_N = mkN "inconvertibility" ;
lin inconvertible_A = compoundA (mkA "inconvertible");
lin incoordination_N = mkN "incoordination" ;
lin incorporate_A = compoundA (mkA "incorporate");
lin incorporate_V = mkV "incorporate" "incorporates" "incorporated" "incorporated" "incorporating";
lin incorporate_V2 = mkV2 (mkV "incorporate" "incorporates" "incorporated" "incorporated" "incorporating");
lin incorporation_N = mkN "incorporation" ;
lin incorporative_A = mkA "incorporative" ;
lin incorporeal_A = compoundA (mkA "incorporeal");
lin incorrect_A = compoundA (mkA "incorrect");
lin incorrectness_N = mkN "incorrectness" ;
lin incorrigible_A = compoundA (mkA "incorrigible");
lin incorrupt_A = mkA "incorrupt" ;
lin incorruptibility_N = mkN "incorruptibility" ;
lin incorruptible_A = compoundA (mkA "incorruptible");
lin incorruptness_N = mkN "incorruptness" ;
lin increase_N = mkN "increase" "increases";
lin increase_V = mkV "increase" "increases" "increased" "increased" "increasing";
lin increase_V2 = mkV2 (mkV "increase" "increases" "increased" "increased" "increasing");
lin increasingly_AdA = mkAdA "increasingly";
lin increasingly_Adv = mkAdv "increasingly";
lin increasingly_AdV = mkAdV "increasingly";
lin incredibility_N = mkN "incredibility" ;
lin incredible_A = compoundA (mkA "incredible");
lin incredulity_N = mkN "incredulity" ;
lin incredulous_A = compoundA (mkA "incredulous");
lin increment_N = mkN "increment" "increments";
lin incremental_A = compoundA (mkA "incremental");
lin incriminate_V2 = mkV2 (mkV "incriminate" "incriminates" "incriminated" "incriminated" "incriminating");
lin incriminatingly_Adv = mkAdv "incriminatingly" ;
lin incrimination_N = mkN "incrimination" ;
lin incrustation_N = mkN "incrustation" "incrustations";
lin incubate_V = mkV "incubate" "incubates" "incubated" "incubated" "incubating";
lin incubate_V2 = mkV2 (mkV "incubate" "incubates" "incubated" "incubated" "incubating");
lin incubation_N = mkN "incubation" "incubations";
lin incubator_N = mkN "incubator" "incubators";
lin incubus_N = mkN "incubus" "incubuses";
lin inculcate_V2 = mkV2 (mkV "inculcate" "inculcates" "inculcated" "inculcated" "inculcating");
lin inculcation_N = mkN "inculcation" ;
lin inculpate_V2 = mkV2 (mkV "inculpate" "inculpates" "inculpated" "inculpated" "inculpating");
lin inculpatory_A = mkA "inculpatory" ;
lin incumbency_N = mkN "incumbency" "incumbencies";
lin incumbent_A = compoundA (mkA "incumbent");
lin incumbent_N = mkN "incumbent" "incumbents";
lin incur_V2 = mkV2 (mkV "incur" "incurs" "incurred" "incurred" "incurring");
lin incurability_N = mkN "incurability" ;
lin incurable_A = compoundA (mkA "incurable");
lin incurable_N = mkN "incurable" "incurables";
lin incurious_A = compoundA (mkA "incurious");
lin incurrence_N = mkN "incurrence" ;
lin incurring_N = mkN "incurring" ;
lin incursion_N = mkN "incursion" "incursions";
lin incursive_A = mkA "incursive" ;
lin incurvate_A = mkA "incurvate" ;
lin incurvation_N = mkN "incurvation" ;
lin incurved_A = compoundA (mkA "incurved");
lin incus_N = mkN "incus" ;
lin indaba_N = mkN "indaba" ;
lin indapamide_N = mkN "indapamide" ;
lin indebted_A = compoundA (mkA "indebted");
lin indebtedness_N = mkN "indebtedness" ;
lin indecency_N = mkN "indecency" "indecencies";
lin indecent_A = compoundA (mkA "indecent");
lin indecipherable_A = compoundA (mkA "indecipherable");
lin indecision_N = mkN "indecision" ;
lin indecisive_A = compoundA (mkA "indecisive");
lin indecisiveness_N = mkN "indecisiveness" ;
lin indecorous_A = compoundA (mkA "indecorous");
lin indecorum_N = mkN "indecorum" ;
lin indeed_AdV = mkAdV "indeed";
lin indeed_Adv = mkAdv "indeed";
lin indefatigability_N = mkN "indefatigability" ;
lin indefatigable_A = compoundA (mkA "indefatigable");
lin indefeasible_A = compoundA (mkA "indefeasible");
lin indefensible_A = compoundA (mkA "indefensible");
lin indefinable_A = compoundA (mkA "indefinable");
lin indefinite_A = compoundA (mkA "indefinite");
lin indefiniteness_N = mkN "indefiniteness" ;
lin indehiscent_A = mkA "indehiscent" ;
lin indelible_A = compoundA (mkA "indelible");
lin indelicacy_N = mkN "indelicacy" "indelicacies";
lin indelicate_A = compoundA (mkA "indelicate");
lin indemnification_N = mkN "indemnification" "indemnifications";
lin indemnify_V2 = mkV2 (mkV "indemnify" "indemnifies" "indemnified" "indemnified" "indemnifying");
lin indemnity_N = mkN "indemnity" "indemnities";
lin indene_N = mkN "indene" ;
lin indent_N = mkN "indent" "indents";
lin indent_V = mkV "indent" "indents" "indented" "indented" "indenting";
lin indent_V2 = mkV2 (mkV "indent" "indents" "indented" "indented" "indenting");
lin indentation_N = mkN "indentation" "indentations";
lin indenture_N = mkN "indenture" "indentures";
lin indenture_V2 = mkV2 (mkV "indenture" "indentures" "indentured" "indentured" "indenturing");
lin independence_N = mkN "independence" ;
lin independent_A = compoundA (mkA "independent");
lin independent_N = mkN "independent" "independents";
lin indescribable_A = compoundA (mkA "indescribable");
lin indestructibility_N = mkN "indestructibility" ;
lin indestructible_A = compoundA (mkA "indestructible");
lin indeterminable_A = compoundA (mkA "indeterminable");
lin indeterminacy_N = mkN "indeterminacy" ;
lin indeterminate_A = compoundA (mkA "indeterminate");
lin index_N = mkN "index" "indexes";
lin index_V2 = mkV2 (mkV "index" "indexes" "indexed" "indexed" "indexing");
lin indexation_N = mkN "indexation" ;
lin indexer_N = mkN "indexer" "indexers";
lin indexical_A = mkA "indexical" ;
lin indexing_N = mkN "indexing" ;
lin indexless_A = mkA "indexless" ;
lin india_PN = mkPN "India";
lin india_rubber_N = mkN "india-rubber" "india-rubbers";
lin indiaman_N = mkN masculine (mkN "indiaman" "indiamen");
lin indian_A = compoundA (mkA "Indian");
lin indian_N = mkN "Indian" "Indians";
lin indiana_PN = mkPN "Indiana";
lin indianapolis_PN = mkPN "Indianapolis";
lin indicate_V = mkV "indicate";
lin indicate_V2 = mkV2 (mkV "indicate" "indicates" "indicated" "indicated" "indicating");
lin indicate_VS = mkVS (mkV "indicate");
lin indication_N = mkN "indication" "indications";
lin indicative_A = compoundA (mkA "indicative");
lin indicator_N = mkN "indicator" "indicators";
lin indict_V = mkV "indict";
lin indict_V2 = mkV2 (mkV "indict" "indicts" "indicted" "indicted" "indicting");
lin indictable_A = compoundA (mkA "indictable");
lin indiction_N = mkN "indiction" ;
lin indictment_N = mkN "indictment" "indictments";
lin indie_A = mkA "indie" ;
lin indie_N = mkN "indie" ;
lin indies_PN = mkPN "Indies";
lin indifference_N = mkN "indifference" ;
lin indifferent_A = compoundA (mkA "indifferent");
lin indigence_N = mkN "indigence" ;
lin indigenous_A = compoundA (mkA "indigenous");
lin indigenousness_N = mkN "indigenousness" ;
lin indigent_A = compoundA (mkA "indigent");
lin indigestibility_N = mkN "indigestibility" ;
lin indigestible_A = compoundA (mkA "indigestible");
lin indigestion_N = mkN "indigestion" ;
lin indignant_A = compoundA (mkA "indignant");
lin indignation_N = mkN "indignation" ;
lin indignity_N = mkN "indignity" "indignities";
lin indigo_A = mkA "indigo" ;
lin indigo_N = mkN "indigo" ;
lin indinavir_N = mkN "indinavir" ;
lin indirect_A = compoundA (mkA "indirect");
lin indirection_N = mkN "indirection" ;
lin indirectness_N = mkN "indirectness" ;
lin indiscernible_A = compoundA (mkA "indiscernible");
lin indiscipline_N = mkN "indiscipline" ;
lin indiscreet_A = compoundA (mkA "indiscreet");
lin indiscrete_A = compoundA (mkA "indiscrete");
lin indiscretion_N = mkN "indiscretion" "indiscretions";
lin indiscriminate_A = compoundA (mkA "indiscriminate");
lin indispensability_N = mkN "indispensability" ;
lin indispensable_A = compoundA (mkA "indispensable");
lin indisposed_A = compoundA (mkA "indisposed");
lin indisposition_N = mkN "indisposition" "indispositions";
lin indisputability_N = mkN "indisputability" ;
lin indisputable_A = compoundA (mkA "indisputable");
lin indissoluble_A = compoundA (mkA "indissoluble");
lin indistinct_A = compoundA (mkA "indistinct");
lin indistinctness_N = mkN "indistinctness" ;
lin indistinguishable_A = compoundA (mkA "indistinguishable");
lin indite_V2 = mkV2 (mkV "indite" "indites" "indited" "indited" "inditing");
lin indium_N = mkN "indium" ;
lin individual_A = compoundA (mkA "individual");
lin individual_N = mkN "individual" "individuals";
lin individualism_N = mkN "individualism" ;
lin individualist_A = mkA "individualist" ;
lin individualist_N = mkN "individualist" "individualists";
lin individualistic_A = compoundA (mkA "individualistic");
lin individualistically_Adv = mkAdv "individualistically" ;
lin individuality_N = mkN "individuality" "individualities";
lin individualization_N = mkN "individualization" ;
lin individualize_V2 = mkV2 (mkV "individualize" "individualizes" "individualized" "individualized" "individualizing");
lin indivisible_A = compoundA (mkA "indivisible");
lin indo_european_A = compoundA (mkA "indo-european");
lin indocile_A = mkA "indocile" ;
lin indoctrinate_V2 = mkV2 (mkV "indoctrinate" "indoctrinates" "indoctrinated" "indoctrinated" "indoctrinating");
lin indoctrination_N = mkN "indoctrination" ;
lin indolence_N = mkN "indolence" ;
lin indolent_A = compoundA (mkA "indolent");
lin indomethacin_N = mkN "indomethacin" ;
lin indomitability_N = mkN "indomitability" ;
lin indomitable_A = compoundA (mkA "indomitable");
lin indonesia_PN = mkPN "Indonesia";
lin indonesian_A = compoundA (mkA "indonesian");
lin indonesian_N = mkN "indonesian" "indonesians";
lin indoor_A = compoundA (mkA "indoor");
lin indoors_Adv = mkAdv "indoors";
lin indore_PN = mkPN "Indore";
lin indorse_V2 = mkV2 (mkV "indorse" "indorses" "indorsed" "indorsed" "indorsing");
lin indrawn_A = compoundA (mkA "indrawn");
lin indri_N = mkN "indri" ;
lin indubitable_A = compoundA (mkA "indubitable");
lin induce_V2 = mkV2 (mkV "induce" "induces" "induced" "induced" "inducing");
lin induce_V2V = mkV2V (mkV "induce") noPrep to_Prep ;
lin inducement_N = mkN "inducement" "inducements";
lin inducer_N = mkN "inducer" ;
lin induct_V2 = mkV2 (mkV "induct" "inducts" "inducted" "inducted" "inducting");
lin inductee_N = mkN "inductee" ;
lin induction_N = mkN "induction" "inductions";
lin inductive_A = compoundA (mkA "inductive");
lin inductor_N = mkN "inductor" ;
lin indue_V2 = mkV2 (mkV "indue" "indues" "indued" "indued" "induing");
lin indulge_V = mkV "indulge" "indulges" "indulged" "indulged" "indulging";
lin indulge_V2 = mkV2 (mkV "indulge" "indulges" "indulged" "indulged" "indulging");
lin indulgence_N = mkN "indulgence" "indulgences";
lin indulgent_A = compoundA (mkA "indulgent");
lin indumentum_N = mkN "indumentum" ;
lin indusial_A = mkA "indusial" ;
lin indusium_N = mkN "indusium" ;
lin industrial_A = compoundA (mkA "industrial");
lin industrialism_N = mkN "industrialism" ;
lin industrialist_N = mkN "industrialist" "industrialists";
lin industrialization_N = mkN (variants {"industrialization"; "industrialisation"}) ;
lin industrialize_V2 = mkV2 (mkV "industrialize");
lin industrious_A = compoundA (mkA "industrious");
lin industry_N = mkN "industry" "industries";
lin indweller_N = mkN "indweller" ;
lin indwelling_A = compoundA (mkA "indwelling");
lin inebriate_A = compoundA (mkA "inebriate");
lin inebriate_N = mkN "inebriate" "inebriates";
lin inebriate_V2 = mkV2 (mkV "inebriate" "inebriates" "inebriated" "inebriated" "inebriating");
lin inebriation_N = mkN "inebriation" "inebriations";
lin inebriety_N = mkN "inebriety" ;
lin inedible_A = compoundA (mkA "inedible");
lin ineffable_A = compoundA (mkA "ineffable");
lin ineffective_A = compoundA (mkA "ineffective");
lin ineffectiveness_N = mkN "ineffectiveness" ;
lin ineffectual_A = compoundA (mkA "ineffectual");
lin ineffectuality_N = mkN "ineffectuality" ;
lin inefficacious_A = mkA "inefficacious" ;
lin inefficacy_N = mkN "inefficacy" ;
lin inefficiency_N = mkN "inefficiency" "inefficiencies";
lin inefficient_A = compoundA (mkA "inefficient");
lin inelaborate_A = mkA "inelaborate" ;
lin inelastic_A = compoundA (mkA "inelastic");
lin inelasticity_N = mkN "inelasticity" ;
lin inelegance_N = mkN "inelegance" "inelegances";
lin inelegant_A = compoundA (mkA "inelegant");
lin ineligibility_N = mkN "ineligibility" ;
lin ineligible_A = compoundA (mkA "ineligible");
lin ineloquently_Adv = mkAdv "ineloquently" ;
lin ineluctability_N = mkN "ineluctability" ;
lin ineluctable_A = compoundA (mkA "ineluctable");
lin inept_A = compoundA (mkA "inept");
lin ineptitude_N = mkN "ineptitude" "ineptitudes";
lin inequality_N = mkN "inequality" "inequalities";
lin inequitable_A = compoundA (mkA "inequitable");
lin inequity_N = mkN "inequity" "inequities";
lin ineradicable_A = compoundA (mkA "ineradicable");
lin inerrable_A = mkA "inerrable" ;
lin inerrancy_N = mkN "inerrancy" ;
lin inert_A = compoundA (mkA "inert");
lin inertia_N = mkN "inertia" ;
lin inertial_A = mkA "inertial" ;
lin inertness_N = mkN "inertness" ;
lin inescapable_A = compoundA (mkA "inescapable");
lin inessential_A = compoundA (mkA "inessential");
lin inessential_N = mkN "inessential" "inessentials";
lin inessentiality_N = mkN "inessentiality" ;
lin inestimable_A = compoundA (mkA "inestimable");
lin inevitability_N = mkN "inevitability" ;
lin inevitable_A = compoundA (mkA "inevitable");
lin inevitable_N = mkN "inevitable" ;
lin inexact_A = compoundA (mkA "inexact");
lin inexactitude_N = mkN "inexactitude" "inexactitudes";
lin inexactness_N = mkN "inexactness" ;
lin inexcusable_A = compoundA (mkA "inexcusable");
lin inexhaustible_A = compoundA (mkA "inexhaustible");
lin inexorable_A = compoundA (mkA "inexorable");
lin inexpedience_N = mkN "inexpedience" ;
lin inexpediency_N = mkN "inexpediency" ;
lin inexpedient_A = compoundA (mkA "inexpedient");
lin inexpensive_A = compoundA (mkA "inexpensive");
lin inexpensiveness_N = mkN "inexpensiveness" ;
lin inexperience_N = mkN "inexperience" ;
lin inexperienced_A = compoundA (mkA "inexperienced");
lin inexpert_A = compoundA (mkA "inexpert");
lin inexpiable_A = compoundA (mkA "inexpiable");
lin inexplicable_A = compoundA (mkA "inexplicable");
lin inexplicitness_N = mkN "inexplicitness" ;
lin inexpressible_A = compoundA (mkA "inexpressible");
lin inexpressive_A = mkA "inexpressive" ;
lin inexpungible_A = mkA "inexpungible" ;
lin inexterminable_A = mkA "inexterminable" ;
lin inextinguishable_A = compoundA (mkA "inextinguishable");
lin inextricable_A = compoundA (mkA "inextricable");
lin infallibility_N = mkN "infallibility" ;
lin infallible_A = compoundA (mkA "infallible");
lin infamous_A = compoundA (mkA "infamous");
lin infamy_N = mkN "infamy" "infamies";
lin infancy_N = mkN "infancy" "infancies";
lin infant_N = mkN "infant" "infants";
lin infanticide_N = mkN "infanticide" ;
lin infantile_A = compoundA (mkA "infantile");
lin infantilism_N = mkN "infantilism" ;
lin infantry_N = mkN "infantry" "infantries";
lin infantryman_N = mkN masculine (mkN "infantryman" "infantrymen");
lin infarct_N = mkN "infarct" ;
lin infatuate_V2 = mkV2 (mkV "infatuate" "infatuates" "infatuated" "infatuated" "infatuating");
lin infatuation_N = mkN "infatuation" "infatuations";
lin infeasibility_N = mkN "infeasibility" ;
lin infect_V = mkV "infect";
lin infect_V2 = mkV2 (mkV "infect" "infects" "infected" "infected" "infecting");
lin infection_N = mkN "infection" "infections";
lin infectious_A = compoundA (mkA "infectious");
lin infective_A = mkA "infective" ;
lin infelicitous_A = mkA "infelicitous" ;
lin infelicity_N = mkN "infelicity" ;
lin infer_V2 = mkV2 (mkV "infer" "infers" "inferred" "inferred" "inferring");
lin inference_N = mkN "inference" "inferences";
lin inferential_A = compoundA (mkA "inferential");
lin inferior_A = compoundA (mkA "inferior");
lin inferior_N = mkN "inferior" "inferiors";
lin inferiority_N = mkN "inferiority" ;
lin infernal_A = compoundA (mkA "infernal");
lin infernal_N = mkN "infernal" ;
lin inferno_N = mkN "inferno" "infernos";
lin infertile_A = compoundA (mkA "infertile");
lin infertility_N = mkN "infertility" ;
lin infest_V2 = mkV2 (mkV "infest" "infests" "infested" "infested" "infesting");
lin infestation_N = mkN "infestation" "infestations";
lin infidel_N = mkN "infidel" "infidels";
lin infidelity_N = mkN "infidelity" "infidelities";
lin infield_N = mkN "infield" ;
lin infielder_N = mkN "infielder" ;
lin infiltrate_V = mkV "infiltrate" "infiltrates" "infiltrated" "infiltrated" "infiltrating";
lin infiltrate_V2 = mkV2 (mkV "infiltrate" "infiltrates" "infiltrated" "infiltrated" "infiltrating");
lin infiltration_N = mkN "infiltration" ;
lin infiltrator_N = mkN "infiltrator" ;
lin infinite_A = compoundA (mkA "infinite");
lin infiniteness_N = mkN "infiniteness" ;
lin infinitesimal_A = compoundA (mkA "infinitesimal");
lin infinitesimal_N = mkN "infinitesimal" ;
lin infinitival_A = mkA "infinitival" ;
lin infinitive_A = compoundA (mkA "infinitive");
lin infinitive_N = mkN "infinitive" "infinitives";
lin infinitude_N = mkN "infinitude" "infinitudes";
lin infinity_N = mkN "infinity" ;
lin infirm_A = compoundA (mkA "infirm");
lin infirmary_N = mkN "infirmary" "infirmaries";
lin infirmity_N = mkN "infirmity" "infirmities";
lin infix_N = mkN "infix" ;
lin inflame_V = mkV "inflame" "inflames" "inflamed" "inflamed" "inflaming";
lin inflame_V2 = mkV2 (mkV "inflame" "inflames" "inflamed" "inflamed" "inflaming");
lin inflammable_A = compoundA (mkA "inflammable");
lin inflammation_N = mkN "inflammation" "inflammations";
lin inflammatory_A = compoundA (mkA "inflammatory");
lin inflatable_A = compoundA (mkA "inflatable");
lin inflate_V = mkV "inflate" "inflates" "inflated" "inflated" "inflating";
lin inflate_V2 = mkV2 (mkV "inflate" "inflates" "inflated" "inflated" "inflating");
lin inflater_N = mkN "inflater" ;
lin inflation_N = mkN "inflation" ;
lin inflationary_A = compoundA (mkA "inflationary");
lin inflect_V2 = mkV2 (mkV "inflect" "inflects" "inflected" "inflected" "inflecting");
lin inflection_N = mkN "inflection" "inflections";
lin inflectional_A = compoundA (mkA "inflectional");
lin inflexibility_N = mkN "inflexibility" ;
lin inflexible_A = compoundA (mkA "inflexible");
lin inflexion_N = mkN "inflexion" "inflexions";
lin inflict_V2 = mkV2 (mkV "inflict" "inflicts" "inflicted" "inflicted" "inflicting");
lin infliction_N = mkN "infliction" "inflictions";
lin infliximab_N = mkN "infliximab" ;
lin inflorescence_N = mkN "inflorescence" ;
lin inflow_N = mkN "inflow" "inflows";
lin inflowing_A = mkA "inflowing" ;
lin influence_N = mkN "influence" "influences";
lin influence_V2 = mkV2 (mkV "influence" "influences" "influenced" "influenced" "influencing");
lin influential_A = compoundA (mkA "influential");
lin influenza_N = mkN "influenza" ;
lin influx_N = mkN "influx" "influxes";
lin info_N = mkN "info" ;
lin infomercial_N = mkN "infomercial" ;
lin inform_V = mkV "inform" "informs" "informed" "informed" "informing";
lin inform_V2 = mkV2 (mkV "inform" "informs" "informed" "informed" "informing");
lin informal_A = compoundA (mkA "informal");
lin informality_N = mkN "informality" "informalities";
lin informant_N = mkN "informant" "informants";
lin information_N = mkN "information" ;
lin informational_A = mkA "informational" ;
lin informative_A = compoundA (mkA "informative");
lin informer_N = mkN "informer" "informers";
lin informing_N = mkN "informing" ;
lin infra_Adv = mkAdv "infra";
lin infra_dig_A = compoundA (mkA "infra dig");
lin infra_red_A = compoundA (mkA "infra-red");
lin infraction_N = mkN "infraction" "infractions";
lin infrahuman_A = mkA "infrahuman" ;
lin infrangible_A = mkA "infrangible" ;
lin infrared_A = mkA "infrared" ;
lin infrared_N = mkN "infrared" ;
lin infrasonic_A = mkA "infrasonic" ;
lin infrastructure_N = mkN "infrastructure" "infrastructures";
lin infrequency_N = mkN "infrequency" ;
lin infrequent_A = compoundA (mkA "infrequent");
lin infringe_V = mkV "infringe" "infringes" "infringed" "infringed" "infringing";
lin infringe_V2 = mkV2 (mkV "infringe" "infringes" "infringed" "infringed" "infringing");
lin infringement_N = mkN "infringement" "infringements";
lin infructescence_N = mkN "infructescence" ;
lin infundibulum_N = mkN "infundibulum" ;
lin infuriate_V2 = mkV2 (mkV "infuriate" "infuriates" "infuriated" "infuriated" "infuriating");
lin infuriation_N = mkN "infuriation" ;
lin infuse_V = mkV "infuse" "infuses" "infused" "infused" "infusing";
lin infuse_V2 = mkV2 (mkV "infuse" "infuses" "infused" "infused" "infusing");
lin infusion_N = mkN "infusion" "infusions";
lin infusorian_N = mkN "infusorian" ;
lin inga_N = mkN "inga" ;
lin ingatestone_PN = mkPN "Ingatestone";
lin ingathering_N = mkN "ingathering" "ingatherings";
lin ingenious_A = compoundA (mkA "ingenious");
lin ingenue_N = mkN "ingénue" "ingénues";
lin ingenuity_N = mkN "ingenuity" ;
lin ingenuous_A = compoundA (mkA "ingenuous");
lin ingenuousness_N = mkN "ingenuousness" ;
lin ingest_V2 = mkV2 (mkV "ingest" "ingests" "ingested" "ingested" "ingesting");
lin ingesta_N = mkN "ingesta" ;
lin ingle_nook_N = mkN "ingle-nook" "ingle-nooks";
lin inglorious_A = compoundA (mkA "inglorious");
lin ingoing_A = compoundA (mkA "ingoing");
lin ingot_N = mkN "ingot" "ingots";
lin ingraft_V2 = mkV2 (mkV "ingraft" "ingrafts" "ingrafted" "ingrafted" "ingrafting");
lin ingrained_A = compoundA (mkA "ingrained");
lin ingrate_N = mkN "ingrate" ;
lin ingratiate_V2 = mkV2 (mkV "ingratiate" "ingratiates" "ingratiated" "ingratiated" "ingratiating");
lin ingratiating_A = mkA "ingratiating" ;
lin ingratiation_N = mkN "ingratiation" ;
lin ingratitude_N = mkN "ingratitude" ;
lin ingredient_N = mkN "ingredient" "ingredients";
lin ingress_N = mkN "ingress" ;
lin ingrid_PN = mkPN "Ingrid";
lin ingrowing_A = compoundA (mkA "ingrowing");
lin ingrowth_N = mkN "ingrowth" ;
lin inguinal_A = mkA "inguinal" ;
lin inhabit_V2 = mkV2 (mkV "inhabit" "inhabits" "inhabited" "inhabited" "inhabiting");
lin inhabitable_A = compoundA (mkA "inhabitable");
lin inhabitancy_N = mkN "inhabitancy" ;
lin inhabitant_N = mkN "inhabitant" "inhabitants";
lin inhalant_A = mkA "inhalant" ;
lin inhalant_N = mkN "inhalant" ;
lin inhalation_N = mkN "inhalation" "inhalations";
lin inhale_V = mkV "inhale" "inhales" "inhaled" "inhaled" "inhaling";
lin inhale_V2 = mkV2 (mkV "inhale" "inhales" "inhaled" "inhaled" "inhaling");
lin inhaler_N = mkN "inhaler" "inhalers";
lin inharmonious_A = compoundA (mkA "inharmonious");
lin inherence_N = mkN "inherence" ;
lin inherent_A = compoundA (mkA "inherent");
lin inherit_V = mkV "inherit" "inherits" "inherited" "inherited" "inheriting";
lin inherit_V2 = mkV2 (mkV "inherit" "inherits" "inherited" "inherited" "inheriting");
lin inheritable_A = mkA "inheritable" ;
lin inheritance_N = mkN "inheritance" "inheritances";
lin inheritorMasc_N = mkN masculine (mkN "inheritor" "inheritors");
lin inheritorFem_N = mkN feminine (mkN "inheritor" "inheritors");
lin inhibit_V2 = mkV2 (mkV "inhibit" "inhibits" "inhibited" "inhibited" "inhibiting");
lin inhibition_N = mkN "inhibition" "inhibitions";
lin inhibitor_N = mkN "inhibitor" "inhibitors";
lin inhibitory_A = compoundA (mkA "inhibitory");
lin inhomogeneity_N = mkN "inhomogeneity" ;
lin inhomogeneous_A = mkA "inhomogeneous" ;
lin inhospitable_A = compoundA (mkA "inhospitable");
lin inhospitableness_N = mkN "inhospitableness" ;
lin inhospitality_N = mkN "inhospitality" ;
lin inhuman_A = compoundA (mkA "inhuman");
lin inhumane_A = compoundA (mkA "inhumane");
lin inhumaneness_N = mkN "inhumaneness" ;
lin inhumanity_N = mkN "inhumanity" "inhumanities";
lin inimical_A = compoundA (mkA "inimical");
lin inimitable_A = compoundA (mkA "inimitable");
lin inion_N = mkN "inion" ;
lin iniquitous_A = compoundA (mkA "iniquitous");
lin iniquity_N = mkN "iniquity" "iniquities";
lin initial_A = compoundA (mkA "initial");
lin initial_N = mkN "initial" "initials";
lin initial_V2 = mkV2 (mkV "initial" "initials" "initialled" "initialled" "initialling");
lin initiate_A = compoundA (mkA "initiate");
lin initiate_N = mkN "initiate" "initiates";
lin initiate_V2 = mkV2 (mkV "initiate" "initiates" "initiated" "initiated" "initiating");
lin initiation_N = mkN "initiation" ;
lin initiative_N = mkN "initiative" "initiatives";
lin inject_V2 = mkV2 (mkV "inject" "injects" "injected" "injected" "injecting");
lin injectable_A = mkA "injectable" ;
lin injection_N = mkN "injection" "injections";
lin injector_N = mkN "injector" ;
lin injudicious_A = compoundA (mkA "injudicious");
lin injudiciousness_N = mkN "injudiciousness" ;
lin injunction_N = mkN "injunction" "injunctions";
lin injure_V2 = mkV2 (mkV "injure" "injures" "injured" "injured" "injuring");
lin injurious_A = compoundA (mkA "injurious");
lin injury_N = mkN "injury" "injuries";
lin injustice_N = mkN "injustice" "injustices";
lin ink_N = mkN "ink" "inks";
lin ink_V2 = mkV2 (mkV "ink" "inks" "inked" "inked" "inking");
lin ink_bottle_N = mkN "ink-bottle" "ink-bottles";
lin ink_pad_N = mkN "ink-pad" "ink-pads";
lin ink_pot_N = mkN "ink-pot" "ink-pots";
lin inkberry_N = mkN "inkberry" ;
lin inkblot_N = mkN "inkblot" ;
lin inkle_N = mkN "inkle" ;
lin inkling_N = mkN "inkling" "inklings";
lin inkstand_N = mkN "inkstand" "inkstands";
lin inkwell_N = mkN "inkwell" "inkwells";
lin inky_A = mkA "inky" "inkier";
lin inland_A = compoundA (mkA "inland");
lin inland_Adv = mkAdv "inland";
lin inlay_N = mkN "inlay" "inlays";
lin inlay_V2 = mkV2 (mkV "in" IrregEng.lay_V);
lin inlet_N = mkN "inlet" "inlets";
lin inmate_N = mkN "inmate" "inmates";
lin inmost_A = compoundA (mkA "inmost");
lin inn_N = mkN "inn" "inns";
lin innate_A = compoundA (mkA "innate");
lin innateness_N = mkN "innateness" ;
lin inner_A = compoundA (mkA "inner");
lin innermost_A = compoundA (mkA "innermost");
lin innervation_N = mkN "innervation" ;
lin inning_N = mkN "inning" "innings";
lin innings_N = mkN "innings" "innings";
lin innkeeper_N = mkN "innkeeper" "innkeepers";
lin innocence_N = mkN "innocence" ;
lin innocency_N = mkN "innocency" ;
lin innocent_A = compoundA (mkA "innocent");
lin innocent_N = mkN "innocent" "innocents";
lin innocuous_A = compoundA (mkA "innocuous");
lin innovate_V = mkV "innovate" "innovates" "innovated" "innovated" "innovating";
lin innovate_V2 = mkV2 (mkV "innovate" "innovates" "innovated" "innovated" "innovating");
lin innovation_N = mkN "innovation" "innovations";
lin innovative_A = mkA "innovative" ;
lin innovativeness_N = mkN "innovativeness" ;
lin innovator_N = mkN "innovator" "innovators";
lin innoxious_A = mkA "innoxious" ;
lin innsbruck_PN = mkPN "Innsbruck";
lin innuendo_N = mkN "innuendo" "innuendoes";
lin innumerable_A = compoundA (mkA "innumerable");
lin innumerableness_N = mkN "innumerableness" ;
lin innumerate_A = mkA "innumerate" ;
lin inoculant_N = mkN "inoculant" ;
lin inoculate_V2 = mkV2 (mkV "inoculate" "inoculates" "inoculated" "inoculated" "inoculating");
lin inoculating_N = mkN "inoculating" ;
lin inoculation_N = mkN "inoculation" "inoculations";
lin inoculator_N = mkN "inoculator" ;
lin inoffensive_A = compoundA (mkA "inoffensive");
lin inoperable_A = compoundA (mkA "inoperable");
lin inoperative_A = compoundA (mkA "inoperative");
lin inopportune_A = compoundA (mkA "inopportune");
lin inopportuneness_N = mkN "inopportuneness" ;
lin inordinate_A = compoundA (mkA "inordinate");
lin inorganic_A = compoundA (mkA "inorganic");
lin inorganically_Adv = mkAdv "inorganically";
lin inosine_N = mkN "inosine" ;
lin inositol_N = mkN "inositol" ;
lin inpatient_N = mkN "inpatient" ;
lin inpouring_A = compoundA (mkA "inpouring");
lin inpouring_N = mkN "inpouring" "inpourings";
lin input_N = mkN "input" "inputs";
lin inquest_N = mkN "inquest" "inquests";
lin inquietude_N = mkN "inquietude" ;
lin inquire_V = mkV "inquire" "inquires" "inquired" "inquired" "inquiring";
lin inquire_V2 = mkV2 (mkV "inquire" "inquires" "inquired" "inquired" "inquiring");
lin inquirer_N = mkN "inquirer" "inquirers";
lin inquiringly_Adv = mkAdv "inquiringly" ;
lin inquiry_N = mkN "inquiry" "inquiries";
lin inquisition_N = mkN "inquisition" "inquisitions";
lin inquisitive_A = compoundA (mkA "inquisitive");
lin inquisitiveness_N = mkN "inquisitiveness" ;
lin inquisitor_N = mkN "inquisitor" "inquisitors";
lin inquisitorial_A = compoundA (mkA "inquisitorial");
lin inquisitory_A = mkA "inquisitory" ;
lin inroad_N = mkN "inroad" "inroads";
lin inrush_N = mkN "inrush" "inrushes";
lin insalubrious_A = mkA "insalubrious" ;
lin insalubrity_N = mkN "insalubrity" ;
lin insane_A = compoundA (mkA "insane");
lin insanitary_A = compoundA (mkA "insanitary");
lin insanity_N = mkN "insanity" ;
lin insatiable_A = compoundA (mkA "insatiable");
lin insatiate_A = compoundA (mkA "insatiate");
lin inscribe_V2 = mkV2 (mkV "inscribe" "inscribes" "inscribed" "inscribed" "inscribing");
lin inscription_N = mkN "inscription" "inscriptions";
lin inscriptive_A = mkA "inscriptive" ;
lin inscrutability_N = mkN "inscrutability" ;
lin inscrutable_A = compoundA (mkA "inscrutable");
lin insect_N = mkN "insect" "insects";
lin insect_powder_N = mkN "insect-powder" "insect-powders";
lin insectan_A = mkA "insectan" ;
lin insecticidal_A = mkA "insecticidal" ;
lin insecticide_N = mkN "insecticide" "insecticides";
lin insectifuge_N = mkN "insectifuge" ;
lin insectivore_N = mkN "insectivore" ;
lin insectivorous_A = compoundA (mkA "insectivorous");
lin insecure_A = compoundA (mkA "insecure");
lin insecureness_N = mkN "insecureness" ;
lin insecurity_N = mkN "insecurity" ;
lin inseminate_V2 = mkV2 (mkV "inseminate" "inseminates" "inseminated" "inseminated" "inseminating");
lin insemination_N = mkN "insemination" ;
lin insensate_A = compoundA (mkA "insensate");
lin insensibility_N = mkN "insensibility" ;
lin insensible_A = compoundA (mkA "insensible");
lin insensitive_A = compoundA (mkA "insensitive");
lin insensitivity_N = mkN "insensitivity" ;
lin insentience_N = mkN "insentience" ;
lin insentient_A = compoundA (mkA "insentient");
lin inseparable_A = compoundA (mkA "inseparable");
lin insert_N = mkN "insert" "inserts";
lin insert_V2 = mkV2 (mkV "insert" "inserts" "inserted" "inserted" "inserting");
lin insertion_N = mkN "insertion" "insertions";
lin inset_N = mkN "inset" "insets";
lin inset_V2 = mkV2 (mkV "in" IrregEng.set_V);
lin inshore_A = compoundA (mkA "inshore");
lin inshore_Adv = mkAdv "inshore";
lin inside_A = compoundA (mkA "inside");
lin inside_Adv = mkAdv "inside";
lin inside_N = mkN "inside" "insides";
lin inside_Prep = mkPrep "inside";
lin insider_N = mkN "insider" "insiders";
lin insidious_A = compoundA (mkA "insidious");
lin insidiousness_N = mkN "insidiousness" ;
lin insight_N = mkN "insight" "insights";
lin insightful_A = mkA "insightful" ;
lin insightfulness_N = mkN "insightfulness" ;
lin insignia_N = mkN "insignia" ;
lin insignificance_N = mkN "insignificance" ;
lin insignificant_A = compoundA (mkA "insignificant");
lin insincere_A = compoundA (mkA "insincere");
lin insincerity_N = mkN "insincerity" ;
lin insinuate_V2 = mkV2 (mkV "insinuate" "insinuates" "insinuated" "insinuated" "insinuating");
lin insinuatingly_Adv = mkAdv "insinuatingly";
lin insinuation_N = mkN "insinuation" "insinuations";
lin insipid_A = compoundA (mkA "insipid");
lin insipidity_N = mkN "insipidity" ;
lin insipidness_N = mkN "insipidness" ;
lin insist_V = mkV "insist" "insists" "insisted" "insisted" "insisting";
lin insist_V2 = mkV2 (mkV "insist" "insists" "insisted" "insisted" "insisting");
lin insist_VS = mkVS (mkV "insist" "insists" "insisted" "insisted" "insisting");
lin insistence_N = mkN "insistence" ;
lin insistent_A = compoundA (mkA "insistent");
lin insofar_Adv = mkAdv "insofar";
lin insolation_N = mkN "insolation" ;
lin insole_N = mkN "insole" "insoles";
lin insolence_N = mkN "insolence" ;
lin insolent_A = compoundA (mkA "insolent");
lin insolubility_N = mkN "insolubility" ;
lin insoluble_A = compoundA (mkA "insoluble");
lin insolvable_A = mkA "insolvable" ;
lin insolvency_N = mkN "insolvency" ;
lin insolvent_A = compoundA (mkA "insolvent");
lin insolvent_N = mkN "insolvent" "insolvents";
lin insomnia_N = mkN "insomnia" ;
lin insomniac_A = mkA "insomniac" ;
lin insomniac_N = mkN "insomniac" "insomniacs";
lin insomuch_Adv = mkAdv "insomuch";
lin insouciance_N = mkN "insouciance" ;
lin insouciant_A = compoundA (mkA "insouciant");
lin inspan_V2 = mkV2 (mkV "inspan" "inspans" "inspanned" "inspanned" "inspanning");
lin inspect_V2 = mkV2 (mkV "inspect" "inspects" "inspected" "inspected" "inspecting");
lin inspection_N = mkN "inspection" "inspections";
lin inspector_N = mkN "inspector" "inspectors";
lin inspectorate_N = mkN "inspectorate" "inspectorates";
lin inspectorship_N = mkN "inspectorship" ;
lin inspiration_N = mkN "inspiration" "inspirations";
lin inspirational_A = compoundA (mkA "inspirational");
lin inspiratory_A = mkA "inspiratory" ;
lin inspire_V2 = mkV2 (mkV "inspire" "inspires" "inspired" "inspired" "inspiring");
lin inspire_V2V = mkV2V (mkV "inspire") noPrep to_Prep ;
lin inspiring_A = mkA "inspiring" ;
lin inspissation_N = mkN "inspissation" ;
lin inst_PN = mkPN "Inst";
lin instability_N = mkN "instability" "instabilities";
lin install_V = mkV "install";
lin install_V2 = mkV2 (mkV "install" "installs" "installed" "installed" "installing");
lin installation_N = mkN "installation" "installations";
lin installment_N = mkN "installment" ;
lin instalment_N = mkN "instalment" "instalments";
lin instance_N = mkN "instance" "instances";
lin instance_V2 = mkV2 (mkV "instance" "instances" "instanced" "instanced" "instancing");
lin instant_A = compoundA (mkA "instant");
lin instant_N = mkN "instant" "instants";
lin instantaneous_A = compoundA (mkA "instantaneous");
lin instantiation_N = mkN "instantiation" ;
lin instar_N = mkN "instar" ;
lin instead_Adv = mkAdv "instead";
lin instead_of_Prep = mkPrep "instead of";
lin instep_N = mkN "instep" "insteps";
lin instigate_V2 = mkV2 (mkV "instigate" "instigates" "instigated" "instigated" "instigating");
lin instigation_N = mkN "instigation" "instigations";
lin instigator_N = mkN "instigator" "instigators";
lin instil_V2 = mkV2 (mkV "instil" "instils" "instilled" "instilled" "instilling");
lin instillation_N = mkN "instillation" "instillations";
lin instillator_N = mkN "instillator" ;
lin instinct_A = compoundA (mkA "instinct");
lin instinct_N = mkN "instinct" "instincts";
lin instinctive_A = compoundA (mkA "instinctive");
lin institute_N = mkN "institute" "institutes";
lin institute_V2 = mkV2 (mkV "institute" "institutes" "instituted" "instituted" "instituting");
lin institution_N = mkN "institution" "institutions";
lin institutional_A = compoundA (mkA "institutional");
lin institutionalization_N = mkN (variants {"institutionalization"; "institutionalisation"});
lin institutionalize_V2 = mkV2 (mkV "institutionalize" "institutionalizes" "institutionalized" "institutionalized" "institutionalizing");
lin instroke_N = mkN "instroke" ;
lin instruct_V2 = mkV2 (mkV "instruct" "instructs" "instructed" "instructed" "instructing");
lin instruction_N = mkN "instruction" "instructions";
lin instructional_A = compoundA (mkA "instructional");
lin instructive_A = compoundA (mkA "instructive");
lin instructor_N = mkN masculine (mkN "instructor" "instructors");
lin instructorship_N = mkN "instructorship" ;
lin instructress_N = mkN feminine (mkN "instructress" "instructresses");
lin instrument_N = mkN "instrument" "instruments";
lin instrumental_A = compoundA (mkA "instrumental");
lin instrumentalism_N = mkN "instrumentalism" ;
lin instrumentalist_N = mkN "instrumentalist" "instrumentalists";
lin instrumentality_N = mkN "instrumentality" ;
lin instrumentation_N = mkN "instrumentation" ;
lin insubordinate_A = compoundA (mkA "insubordinate");
lin insubordination_N = mkN "insubordination" "insubordinations";
lin insubstantial_A = compoundA (mkA "insubstantial");
lin insubstantiality_N = mkN "insubstantiality" ;
lin insufferable_A = compoundA (mkA "insufferable");
lin insufficiency_N = mkN "insufficiency" ;
lin insufficient_A = compoundA (mkA "insufficient");
lin insufflation_N = mkN "insufflation" ;
lin insular_A = compoundA (mkA "insular");
lin insularism_N = mkN "insularism" ;
lin insularity_N = mkN "insularity" ;
lin insulate_V2 = mkV2 (mkV "insulate" "insulates" "insulated" "insulated" "insulating");
lin insulation_N = mkN "insulation" ;
lin insulator_N = mkN "insulator" "insulators";
lin insulin_N = mkN "insulin" ;
lin insult_N = mkN "insult" "insults";
lin insult_V2 = mkV2 (mkV "insult" "insults" "insulted" "insulted" "insulting");
lin insulting_A = compoundA (mkA "insulting");
lin insuperable_A = compoundA (mkA "insuperable");
lin insupportable_A = compoundA (mkA "insupportable");
lin insurability_N = mkN "insurability" ;
lin insurable_A = mkA "insurable" ;
lin insurance_N = mkN "insurance" "insurances";
lin insure_V = mkV "insure" "insures" "insured" "insured" "insuring";
lin insure_V2 = mkV2 (mkV "insure" "insures" "insured" "insured" "insuring");
lin insure_VS = mkVS (mkV "insure" "insures" "insured" "insured" "insuring");
lin insured_N = mkN "insured" ;
lin insurgency_N = mkN "insurgency" ;
lin insurgent_A = compoundA (mkA "insurgent");
lin insurgent_N = mkN human (mkN "insurgent" "insurgents");
lin insurmountable_A = compoundA (mkA "insurmountable");
lin insurrection_N = mkN "insurrection" "insurrections";
lin insurrectional_A = mkA "insurrectional" ;
lin insurrectionism_N = mkN "insurrectionism" ;
lin intact_A = compoundA (mkA "intact");
lin intactness_N = mkN "intactness" ;
lin intaglio_N = mkN "intaglio" "intaglios";
lin intake_N = mkN "intake" "intakes";
lin intangibility_N = mkN "intangibility" ;
lin intangible_A = compoundA (mkA "intangible");
lin intangible_N = mkN "intangible" ;
lin intangibles_N = mkN "intangibles" "intangibless";
lin integer_N = mkN "integer" "integers";
lin integral_A = compoundA (mkA "integral");
lin integral_N = mkN "integral" ;
lin integrate_V = mkV "integrate";
lin integrate_V2 = mkV2 (mkV "integrate" "integrates" "integrated" "integrated" "integrating");
lin integration_N = mkN "integration" ;
lin integrative_A = mkA "integrative" ;
lin integrator_N = mkN "integrator" ;
lin integrity_N = mkN "integrity" ;
lin integument_N = mkN "integument" "integuments";
lin integumentary_A = mkA "integumentary" ;
lin intellect_N = mkN "intellect" "intellects";
lin intellectual_A = compoundA (mkA "intellectual");
lin intellectual_N = mkN "intellectual" "intellectuals";
lin intellectualization_N = mkN "intellectualization" ;
lin intelligence_1_N = mkN "intelligence" ;
lin intelligence_2_N = mkN "intelligence" ;
lin intelligent_A = compoundA (mkA "intelligent");
lin intelligentsia_N = mkN "intelligentsia" "intelligentsias";
lin intelligibility_N = mkN "intelligibility" ;
lin intelligible_A = compoundA (mkA "intelligible");
lin intemperance_N = mkN "intemperance" ;
lin intemperate_A = compoundA (mkA "intemperate");
lin intend_V = mkV "intend";
lin intend_V2 = mkV2 (mkV "intend" "intends" "intended" "intended" "intending");
lin intend_V2V = mkV2V (mkV "intend") noPrep to_Prep;
lin intend_VV = mkVV (mkV "intend");
lin intense_A = compoundA (mkA "intense");
lin intensification_N = mkN "intensification" "intensifications";
lin intensifier_N = mkN "intensifier" ;
lin intensify_V = mkV "intensify" "intensifies" "intensified" "intensified" "intensifying";
lin intensify_V2 = mkV2 (mkV "intensify" "intensifies" "intensified" "intensified" "intensifying");
lin intension_N = mkN "intension" ;
lin intensional_A = mkA "intensional" ;
lin intensity_N = mkN "intensity" "intensities";
lin intensive_A = compoundA (mkA "intensive");
lin intent_A = compoundA (mkA "intent");
lin intent_N = mkN "intent" "intents";
lin intention_N = mkN "intention" "intentions";
lin intentional_A = compoundA (mkA "intentional");
lin intentionality_N = mkN "intentionality" ;
lin intentness_N = mkN "intentness" ;
lin inter_V2 = mkV2 (mkV "inter" "inters" "interred" "interred" "interring");
lin inter_alia_Adv = mkAdv "inter alia";
lin interact_V = mkV "interact" "interacts" "interacted" "interacted" "interacting";
lin interaction_N = mkN "interaction" "interactions";
lin interactional_A = mkA "interactional" ;
lin interactive_A = compoundA (mkA "interactive");
lin interbreed_V = mkV "inter" IrregEng.breed_V;
lin interbreed_V2 = mkV2 (mkV "inter" IrregEng.breed_V);
lin intercalary_A = compoundA (mkA "intercalary");
lin intercede_V = mkV "intercede" "intercedes" "interceded" "interceded" "interceding";
lin intercellular_A = mkA "intercellular" ;
lin intercept_N = mkN "intercept" ;
lin intercept_V2 = mkV2 (mkV "intercept" "intercepts" "intercepted" "intercepted" "intercepting");
lin interception_N = mkN "interception" "interceptions";
lin interceptor_N = mkN "interceptor" "interceptors";
lin intercession_N = mkN "intercession" "intercessions";
lin interchange_N = mkN "interchange" "interchanges";
lin interchange_V2 = mkV2 (mkV "interchange" "interchanges" "interchanged" "interchanged" "interchanging");
lin interchangeable_A = compoundA (mkA "interchangeable");
lin interchurch_A = mkA "interchurch" ;
lin intercollegiate_A = compoundA (mkA "intercollegiate");
lin intercom_N = mkN "intercom" "intercoms";
lin intercommunicate_V = mkV "intercommunicate" "intercommunicates" "intercommunicated" "intercommunicated" "intercommunicating";
lin intercommunication_N = mkN "intercommunication" ;
lin intercommunion_N = mkN "intercommunion" "intercommunions";
lin interconnect_V = mkV "interconnect" "interconnects" "interconnected" "interconnected" "interconnecting";
lin interconnect_V2 = mkV2 (mkV "interconnect" "interconnects" "interconnected" "interconnected" "interconnecting");
lin interconnectedness_N = mkN "interconnectedness" ;
lin interconnection_N = mkN "interconnection" "interconnections";
lin intercontinental_A = compoundA (mkA "intercontinental");
lin intercostal_A = mkA "intercostal" ;
lin intercostal_N = mkN "intercostal" ;
lin intercourse_N = mkN "intercourse" ;
lin interdenominational_A = compoundA (mkA "interdenominational");
lin interdepartmental_A = compoundA (mkA "interdepartmental");
lin interdepartmental_Adv = mkAdv "interdepartmental" ;
lin interdependence_N = mkN "interdependence" "interdependences";
lin interdependent_A = compoundA (mkA "interdependent");
lin interdict_N = mkN "interdict" "interdicts";
lin interdict_V2 = mkV2 (mkV "interdict" "interdicts" "interdicted" "interdicted" "interdicting");
lin interdiction_N = mkN "interdiction" "interdictions";
lin interdisciplinary_A = compoundA (mkA "interdisciplinary");
lin interest_N = mkN "interest" "interests";
lin interest_4_N = mkN "interest" "interests";
lin interest_V = mkV "interest";
lin interest_V2 = mkV2 (mkV "interest" "interests" "interested" "interested" "interesting");
lin interestedness_N = mkN "interestedness";
lin interested_A = mkA "interested";
lin interesting_A = mkA "interesting";
lin interface_N = mkN "interface" "interfaces";
lin interfacial_A = mkA "interfacial" ;
lin interfaith_A = mkA "interfaith" ;
lin interfere_V = mkV "interfere" "interferes" "interfered" "interfered" "interfering";
lin interference_N = mkN "interference" ;
lin interferometer_N = mkN "interferometer" ;
lin interferon_N = mkN "interferon" ;
lin intergalactic_A = mkA "intergalactic" ;
lin interim_A = mkA "interim" ;
lin interim_N = mkN "interim" ;
lin interior_A = compoundA (mkA "interior");
lin interior_N = mkN "interior" "interiors";
lin interject_V2 = mkV2 (mkV "interject" "interjects" "interjected" "interjected" "interjecting");
lin interjection_N = mkN "interjection" "interjections";
lin interlace_V = mkV "interlace" "interlaces" "interlaced" "interlaced" "interlacing";
lin interlace_V2 = mkV2 (mkV "interlace" "interlaces" "interlaced" "interlaced" "interlacing");
lin interlard_V2 = mkV2 (mkV "interlard" "interlards" "interlarded" "interlarded" "interlarding");
lin interlayer_N = mkN "interlayer" ;
lin interleaf_N = mkN "interleaf" ;
lin interleave_V2 = mkV2 (mkV "interleave" "interleaves" "interleaved" "interleaved" "interleaving");
lin interleukin_N = mkN "interleukin" ;
lin interlinear_A = mkA "interlinear" ;
lin interlink_V = mkV "interlink" "interlinks" "interlinked" "interlinked" "interlinking";
lin interlink_V2 = mkV2 (mkV "interlink" "interlinks" "interlinked" "interlinked" "interlinking");
lin interlobular_A = mkA "interlobular" ;
lin interlock_N = mkN "interlock" ;
lin interlock_V = mkV "interlock" "interlocks" "interlocked" "interlocked" "interlocking";
lin interlock_V2 = mkV2 (mkV "interlock" "interlocks" "interlocked" "interlocked" "interlocking");
lin interlocutor_N = mkN human (mkN "interlocutor" "interlocutors");
lin interlocutory_A = mkA "interlocutory" ;
lin interloper_N = mkN "interloper" "interlopers";
lin interlude_N = mkN "interlude" "interludes";
lin intermarriage_N = mkN "intermarriage" "intermarriages";
lin intermarry_V = mkV "intermarry" "intermarries" "intermarried" "intermarried" "intermarrying";
lin intermediary_N = mkN human (mkN "intermediary" "intermediaries");
lin intermediate_A = compoundA (mkA "intermediate");
lin intermediate_N = mkN "intermediate" "intermediates";
lin interment_N = mkN "interment" "interments";
lin intermezzo_N = mkN "intermezzo" "intermezzos";
lin interminable_A = compoundA (mkA "interminable");
lin intermingle_V = mkV "intermingle" "intermingles" "intermingled" "intermingled" "intermingling";
lin intermingle_V2 = mkV2 (mkV "intermingle" "intermingles" "intermingled" "intermingled" "intermingling");
lin intermission_N = mkN "intermission" "intermissions";
lin intermittence_N = mkN "intermittence" ;
lin intermittent_A = compoundA (mkA "intermittent");
lin intermix_V = mkV "intermix" "intermixes" "intermixed" "intermixed" "intermixing";
lin intermix_V2 = mkV2 (mkV "intermix" "intermixes" "intermixed" "intermixed" "intermixing");
lin intermixture_N = mkN "intermixture" "intermixtures";
lin intermolecular_A = mkA "intermolecular" ;
lin intermural_A = mkA "intermural" ;
lin intern_N = mkN "intern" "interns";
lin intern_V2 = mkV2 (mkV "intern" "interns" "interned" "interned" "interning");
lin internal_A = compoundA (mkA "internal");
lin internalization_N = mkN "internalization" ;
lin internalize_V2 = mkV2 (mkV "internalize" "internalizes" "internalized" "internalized" "internalizing");
lin international_A = compoundA (mkA "international");
lin international_N = mkN "international" "internationals";
lin internationale_N = mkN "internationale" "internationales";
lin internationalism_N = mkN "internationalism" ;
lin internationalist_A = mkA "internationalist" ;
lin internationalist_N = mkN "internationalist" "internationalists";
lin internationality_N = mkN "internationality" ;
lin internationalization_N = mkN "internationalization" "internationalizations";
lin internationalize_V2 = mkV2 (mkV "internationalize" "internationalizes" "internationalized" "internationalized" "internationalizing");
lin interne_N = mkN "interne" "internes";
lin internecine_A = compoundA (mkA "internecine");
lin internee_N = mkN "internee" "internees";
lin internet_N = mkN "internet";
lin internist_N = mkN "internist" ;
lin internment_N = mkN "internment" ;
lin internode_N = mkN "internode" ;
lin internship_N = mkN "internship" ;
lin internuncio_N = mkN "internuncio" ;
lin interoception_N = mkN "interoception" ;
lin interoceptive_A = mkA "interoceptive" ;
lin interoceptor_N = mkN "interoceptor" ;
lin interoperability_N = mkN "interoperability" ;
lin interoperable_A = mkA "interoperable" ;
lin interpellate_V2 = mkV2 (mkV "interpellate" "interpellates" "interpellated" "interpellated" "interpellating");
lin interpellation_N = mkN "interpellation" "interpellations";
lin interpenetration_N = mkN "interpenetration" ;
lin interpersonal_A = mkA "interpersonal" ;
lin interphone_N = mkN "interphone" "interphones";
lin interplanetary_A = compoundA (mkA "interplanetary");
lin interplay_N = mkN "interplay" ;
lin interpol_PN = mkPN "Interpol";
lin interpolate_V2 = mkV2 (mkV "interpolate" "interpolates" "interpolated" "interpolated" "interpolating");
lin interpolation_N = mkN "interpolation" "interpolations";
lin interpose_V = mkV "interpose" "interposes" "interposed" "interposed" "interposing";
lin interpose_V2 = mkV2 (mkV "interpose" "interposes" "interposed" "interposed" "interposing");
lin interposition_N = mkN "interposition" "interpositions";
lin interpret_V = mkV "interpret" "interprets" "interpreted" "interpreted" "interpreting";
lin interpret_V2 = mkV2 (mkV "interpret" "interprets" "interpreted" "interpreted" "interpreting");
lin interpretation_N = mkN "interpretation" "interpretations";
lin interpretative_A = compoundA (mkA "interpretative");
lin interpreter_N = mkN "interpreter" "interpreters";
lin interracial_A = compoundA (mkA "interracial");
lin interreflection_N = mkN "interreflection" ;
lin interregnum_N = mkN "interregnum" "interregnums";
lin interrelate_V = mkV "interrelate" "interrelates" "interrelated" "interrelated" "interrelating";
lin interrelate_V2 = mkV2 (mkV "interrelate" "interrelates" "interrelated" "interrelated" "interrelating");
lin interrelation_N = mkN "interrelation" "interrelations";
lin interrelationship_N = mkN "interrelationship" "interrelationships";
lin interrogate_V2 = mkV2 (mkV "interrogate" "interrogates" "interrogated" "interrogated" "interrogating");
lin interrogation_N = mkN "interrogation" "interrogations";
lin interrogative_A = compoundA (mkA "interrogative");
lin interrogative_N = mkN "interrogative" "interrogatives";
lin interrogator_N = mkN "interrogator" "interrogators";
lin interrogatory_A = compoundA (mkA "interrogatory");
lin interrupt_N = mkN "interrupt" ;
lin interrupt_V = mkV "interrupt" "interrupts" "interrupted" "interrupted" "interrupting";
lin interrupt_V2 = mkV2 (mkV "interrupt" "interrupts" "interrupted" "interrupted" "interrupting");
lin interrupter_N = mkN "interrupter" "interrupters";
lin interruption_N = mkN "interruption" "interruptions";
lin interscholastic_A = mkA "interscholastic" ;
lin intersect_V = mkV "intersect" "intersects" "intersected" "intersected" "intersecting";
lin intersect_V2 = mkV2 (mkV "intersect" "intersects" "intersected" "intersected" "intersecting");
lin intersection_N = mkN "intersection" "intersections";
lin intersexual_A = mkA "intersexual" ;
lin interspecies_A = mkA "interspecies" ;
lin intersperse_V2 = mkV2 (mkV "intersperse" "intersperses" "interspersed" "interspersed" "interspersing");
lin interspersion_N = mkN "interspersion" ;
lin interstate_A = compoundA (mkA "interstate");
lin interstate_N = mkN "interstate" ;
lin interstellar_A = compoundA (mkA "interstellar");
lin interstice_N = mkN "interstice" "interstices";
lin interstitial_A = mkA "interstitial" ;
lin intertidal_A = mkA "intertidal" ;
lin intertribal_A = compoundA (mkA "intertribal");
lin intertrigo_N = mkN "intertrigo" ;
lin intertwine_V = mkV "intertwine" "intertwines" "intertwined" "intertwined" "intertwining";
lin intertwine_V2 = mkV2 (mkV "intertwine" "intertwines" "intertwined" "intertwined" "intertwining");
lin interval_N = mkN "interval" "intervals";
lin intervene_V = mkV "intervene" "intervenes" "intervened" "intervened" "intervening";
lin intervene_V2V = mkV2V (mkV "intervene" "intervenes" "intervened" "intervened" "intervening") noPrep to_Prep ;
lin intervenor_N = mkN "intervenor" ;
lin intervention_N = mkN "intervention" "interventions";
lin intervertebral_A = mkA "intervertebral" ;
lin interview_N = mkN "interview" "interviews";
lin interview_V2 = mkV2 (mkV "interview" "interviews" "interviewed" "interviewed" "interviewing");
lin interviewee_N = mkN "interviewee" ;
lin interviewer_N = mkN "interviewer" "interviewers";
lin interweave_V2 = mkV2 (mkV "inter" IrregEng.weave_V);
lin intestacy_N = mkN "intestacy" ;
lin intestate_A = compoundA (mkA "intestate");
lin intestinal_A = compoundA (mkA "intestinal");
lin intestine_N = mkN "intestine" "intestines";
lin inti_N = mkN "inti" ;
lin intifada_N = mkN "intifada" ;
lin intima_N = mkN "intima" ;
lin intimacy_N = mkN "intimacy" "intimacies";
lin intimal_A = mkA "intimal" ;
lin intimate_A = compoundA (mkA "intimate");
lin intimate_N = mkN "intimate" "intimates";
lin intimate_V2 = mkV2 (mkV "intimate" "intimates" "intimated" "intimated" "intimating");
lin intimation_N = mkN "intimation" "intimations";
lin intimidate_V2 = mkV2 (mkV "intimidate" "intimidates" "intimidated" "intimidated" "intimidating");
lin intimidation_N = mkN "intimidation" ;
lin into_Prep = mkPrep "into";
lin intolerable_A = compoundA (mkA "intolerable");
lin intolerance_N = mkN "intolerance" ;
lin intolerant_A = compoundA (mkA "intolerant");
lin intonation_N = mkN "intonation" ;
lin intone_V = mkV "intone" "intones" "intoned" "intoned" "intoning";
lin intone_V2 = mkV2 (mkV "intone" "intones" "intoned" "intoned" "intoning");
lin intoxicant_A = compoundA (mkA "intoxicant");
lin intoxicant_N = mkN "intoxicant" "intoxicants";
lin intoxicate_V2 = mkV2 (mkV "intoxicate" "intoxicates" "intoxicated" "intoxicated" "intoxicating");
lin intoxication_N = mkN "intoxication" ;
lin intra_uterine_A = compoundA (mkA "intra-uterine");
lin intracellular_A = mkA "intracellular" ;
lin intracerebral_A = mkA "intracerebral" ;
lin intracranial_A = mkA "intracranial" ;
lin intractability_N = mkN "intractability" ;
lin intractable_A = compoundA (mkA "intractable");
lin intradepartmental_A = mkA "intradepartmental" ;
lin intradermal_A = mkA "intradermal" ;
lin intrados_N = mkN "intrados" ;
lin intralinguistic_A = mkA "intralinguistic" ;
lin intralobular_A = mkA "intralobular" ;
lin intramolecular_A = mkA "intramolecular" ;
lin intramural_A = compoundA (mkA "intramural");
lin intramuscular_A = mkA "intramuscular" ;
lin intranet_N = mkN "intranet" ;
lin intransigence_N = mkN "intransigence" ;
lin intransigency_N = mkN "intransigency" ;
lin intransigent_A = compoundA (mkA "intransigent");
lin intransitive_A = compoundA (mkA "intransitive");
lin intransitivity_N = mkN "intransitivity" ;
lin intrapulmonary_A = mkA "intrapulmonary" ;
lin intrasentential_A = mkA "intrasentential" ;
lin intraspecies_A = mkA "intraspecies" ;
lin intrastate_A = mkA "intrastate" ;
lin intrauterine_A = mkA "intrauterine" ;
lin intravasation_N = mkN "intravasation" ;
lin intravenous_A = compoundA (mkA "intravenous");
lin intraventricular_A = mkA "intraventricular" ;
lin intrench_V2 = mkV2 (mkV "intrench" "intrenches" "intrenched" "intrenched" "intrenching");
lin intrepid_A = compoundA (mkA "intrepid");
lin intrepidity_N = mkN "intrepidity" "intrepidities";
lin intricacy_N = mkN "intricacy" "intricacies";
lin intricate_A = compoundA (mkA "intricate");
lin intrigue_N = mkN "intrigue" "intrigues";
lin intrigue_V = mkV "intrigue" "intrigues" "intrigued" "intrigued" "intriguing";
lin intrigue_V2 = mkV2 (mkV "intrigue" "intrigues" "intrigued" "intrigued" "intriguing");
lin intrinsic_A = compoundA (mkA "intrinsic");
lin intrinsically_Adv = mkAdv "intrinsically";
lin intro_N = mkN "intro" "intri";
lin introduce_V2 = mkV2 (mkV "introduce" "introduces" "introduced" "introduced" "introducing");
lin introduction_N = mkN "introduction" "introductions";
lin introductory_A = compoundA (mkA "introductory");
lin introit_N = mkN "introit" ;
lin introitus_N = mkN "introitus" ;
lin introject_N = mkN "introject" ;
lin introjected_A = mkA "introjected" ;
lin introjection_N = mkN "introjection" ;
lin intron_N = mkN "intron" ;
lin introspect_V = mkV "introspect" "introspects" "introspected" "introspected" "introspecting";
lin introspection_N = mkN "introspection" ;
lin introspective_A = compoundA (mkA "introspective");
lin introspectiveness_N = mkN "introspectiveness" ;
lin introuvable_A = mkA "introuvable" ;
lin introversion_N = mkN "introversion" ;
lin introversive_A = mkA "introversive" ;
lin introvert_N = mkN "introvert" "introverts";
lin introvert_V2 = mkV2 (mkV "introvert" "introverts" "introverted" "introverted" "introverting");
lin introvertish_A = mkA "introvertish" ;
lin intrude_V = mkV "intrude" "intrudes" "intruded" "intruded" "intruding";
lin intrude_V2 = mkV2 (mkV "intrude" "intrudes" "intruded" "intruded" "intruding");
lin intruder_N = mkN "intruder" "intruders";
lin intrusion_N = mkN "intrusion" "intrusions";
lin intrusive_A = compoundA (mkA "intrusive");
lin intrusiveness_N = mkN "intrusiveness" ;
lin intrust_V2 = mkV2 (mkV "intrust" "intrusts" "intrusted" "intrusted" "intrusting");
lin intuit_V = mkV "intuit" "intuits" "intuited" "intuited" "intuiting";
lin intuit_V2 = mkV2 (mkV "intuit" "intuits" "intuited" "intuited" "intuiting");
lin intuition_N = mkN "intuition" "intuitions";
lin intuitionism_N = mkN "intuitionism" ;
lin intuitionist_A = mkA "intuitionist" ;
lin intuitive_A = compoundA (mkA "intuitive");
lin intumescence_N = mkN "intumescence" ;
lin intussusception_N = mkN "intussusception" ;
lin inula_N = mkN "inula" ;
lin inulin_N = mkN "inulin" ;
lin inundate_V2 = mkV2 (mkV "inundate" "inundates" "inundated" "inundated" "inundating");
lin inundation_N = mkN "inundation" "inundations";
lin inure_V2 = mkV2 (mkV "inure" "inures" "inured" "inured" "inuring");
lin inutile_A = mkA "inutile" ;
lin inutility_N = mkN "inutility" ;
lin invade_V2 = mkV2 (mkV "invade" "invades" "invaded" "invaded" "invading");
lin invader_N = mkN "invader" "invaders";
lin invagination_N = mkN "invagination" ;
lin invalid_A = compoundA (mkA "invalid");
lin invalid_N = mkN "invalid" "invalids";
lin invalid_V2 = mkV2 (mkV "invalid" "invalids" "invalided" "invalided" "invaliding");
lin invalidate_V2 = mkV2 (mkV "invalidate" "invalidates" "invalidated" "invalidated" "invalidating");
lin invalidation_N = mkN "invalidation" "invalidations";
lin invalidator_N = mkN "invalidator" ;
lin invalidism_N = mkN "invalidism" ;
lin invalidity_N = mkN "invalidity" ;
lin invaluable_A = compoundA (mkA "invaluable");
lin invaluableness_N = mkN "invaluableness" ;
lin invariability_N = mkN "invariability" ;
lin invariable_A = compoundA (mkA "invariable");
lin invariance_N = mkN "invariance" ;
lin invariant_A = mkA "invariant" ;
lin invariant_N = mkN "invariant" ;
lin invasion_N = mkN "invasion" "invasions";
lin invasive_A = compoundA (mkA "invasive");
lin invective_N = mkN "invective" ;
lin inveigh_V = mkV "inveigh" "inveighs" "inveighed" "inveighed" "inveighing";
lin inveigle_V2 = mkV2 (mkV "inveigle" "inveigles" "inveigled" "inveigled" "inveigling");
lin invent_V = mkV "invent";
lin invent_V2 = mkV2 (mkV "invent" "invents" "invented" "invented" "inventing");
lin invention_N = mkN "invention" "inventions";
lin inventive_A = compoundA (mkA "inventive");
lin inventiveness_N = mkN "inventiveness" ;
lin inventor_N = mkN "inventor" "inventors";
lin inventory_N = mkN "inventory" "inventories";
lin inverkeithing_PN = mkPN "Inverkeithing";
lin inverness_PN = mkPN "Inverness";
lin inverse_A = compoundA (mkA "inverse");
lin inverse_N = mkN "inverse" ;
lin inversion_N = mkN "inversion" "inversions";
lin invert_V2 = mkV2 (mkV "invert" "inverts" "inverted" "inverted" "inverting");
lin invertase_N = mkN "invertase" ;
lin invertebrate_A = compoundA (mkA "invertebrate");
lin invertebrate_N = mkN "invertebrate" "invertebrates";
lin inverter_N = mkN "inverter" ;
lin invertible_A = mkA "invertible" ;
lin inverurie_PN = mkPN "Inverurie";
lin invest_V = mkV "invest" "invests" "invested" "invested" "investing";
lin invest_V2 = mkV2 (mkV "invest" "invests" "invested" "invested" "investing");
lin investigate_V = mkV "investigate";
lin investigate_V2 = mkV2 (mkV "investigate" "investigates" "investigated" "investigated" "investigating");
lin investigation_N = mkN "investigation" "investigations";
lin investigator_N = mkN "investigator" "investigators";
lin investing_N = mkN "investing" ;
lin investiture_N = mkN "investiture" "investitures";
lin investment_N = mkN "investment" "investments";
lin investor_N = mkN "investor" "investors";
lin inveterate_A = compoundA (mkA "inveterate");
lin invidious_A = compoundA (mkA "invidious");
lin invigilate_V = mkV "invigilate" "invigilates" "invigilated" "invigilated" "invigilating";
lin invigilation_N = mkN "invigilation" "invigilations";
lin invigilator_N = mkN "invigilator" "invigilators";
lin invigorate_V2 = mkV2 (mkV "invigorate" "invigorates" "invigorated" "invigorated" "invigorating");
lin invigorating_A = mkA "invigorating" ;
lin invincibility_N = mkN "invincibility" ;
lin invincible_A = compoundA (mkA "invincible");
lin inviolable_A = compoundA (mkA "inviolable");
lin inviolate_A = compoundA (mkA "inviolate");
lin invisibility_N = mkN "invisibility" ;
lin invisible_A = compoundA (mkA "invisible");
lin invitation_N = mkN "invitation" "invitations";
lin invitational_A = mkA "invitational" ;
lin invitatory_A = mkA "invitatory" ;
lin invite_N = mkN "invite" "invites";
lin invite_V2 = mkV2 (mkV "invite" "invites" "invited" "invited" "inviting");
lin invite_V2V = mkV2V (mkV "invite") noPrep to_Prep ;
lin invocation_N = mkN "invocation" "invocations";
lin invoice_N = mkN "invoice" "invoices";
lin invoice_V2 = mkV2 (mkV "invoice" "invoices" "invoiced" "invoiced" "invoicing");
lin invoke_V2 = mkV2 (mkV "invoke" "invokes" "invoked" "invoked" "invoking");
lin involucrate_A = mkA "involucrate" ;
lin involucre_N = mkN "involucre" ;
lin involuntary_A = compoundA (mkA "involuntary");
lin involute_A = compoundA (mkA "involute");
lin involution_N = mkN "involution" "involutions";
lin involve_V = mkV "involve";
lin involve_V2 = mkV2 (mkV "involve" "involves" "involved" "involved" "involving");
lin involve_VS = mkVS (mkV "involve");
lin involvement_N = mkN "involvement" "involvements";
lin invulnerability_N = mkN "invulnerability" ;
lin invulnerable_A = compoundA (mkA "invulnerable");
lin inward_A = compoundA (mkA "inward");
lin inward_Adv = mkAdv "inward";
lin inwardness_N = mkN "inwardness" ;
lin inwards_Adv = mkAdv "inwards";
lin inwrought_A = compoundA (mkA "inwrought");
lin iodide_N = mkN "iodide" ;
lin iodinated_A = mkA "iodinated" ;
lin iodinating_A = mkA "iodinating" ;
lin iodination_N = mkN "iodination" ;
lin iodine_N = mkN "iodine" ;
lin iodochlorhydroxyquin_N = mkN "iodochlorhydroxyquin" ;
lin iodocompound_N = mkN "iodocompound" ;
lin iodoform_N = mkN "iodoform" ;
lin iodoprotein_N = mkN "iodoprotein" ;
lin iodopsin_N = mkN "iodopsin" ;
lin iodothyronine_N = mkN "iodothyronine" ;
lin iodotyrosine_N = mkN "iodotyrosine" ;
lin ion_N = mkN "ion" "ions";
lin ionic_A = compoundA (mkA "ionic");
lin ionization_N = mkN "ionization" ;
lin ionize_V = mkV "ionize" "ionizes" "ionized" "ionized" "ionizing";
lin ionize_V2 = mkV2 (mkV "ionize" "ionizes" "ionized" "ionized" "ionizing");
lin ionosphere_N = mkN "ionosphere" "ionospheres";
lin iontophoresis_N = mkN "iontophoresis" ;
lin iota_N = mkN "iota" "iotas";
lin iou_N = mkN "IOU" "IOUs" ;
lin iowa_PN = mkPN "Iowa";
lin ipecac_N = mkN "ipecac" ;
lin ipod_N = mkN "iPod" ;
lin iproclozide_N = mkN "iproclozide" ;
lin ipse_dixit_N = mkN "ipse dixit" "ipse dixits";
lin ipsilateral_A = mkA "ipsilateral" ;
lin ipso_facto_Adv = mkAdv "ipso facto";
lin ipswich_PN = mkPN "Ipswich";
lin iq_N = mkN "iq" ;
lin ira_N = mkN "ira" ;
lin iran_PN = mkPN "Iran";
lin iranian_A = compoundA (mkA "Iranian");
lin iranianMasc_N = mkN masculine (mkN "Iranian" "Iranians");
lin iranianFem_N = mkN feminine (mkN "Iranian" "Iranians");
lin iraq_PN = mkPN "Iraq";
lin iraqi_A = compoundA (mkA "iraqi");
lin iraqi_N = mkN "iraqi" "iraqis";
lin irascibility_N = mkN "irascibility" ;
lin irascible_A = compoundA (mkA "irascible");
lin irate_A = compoundA (mkA "irate");
lin ire_N = mkN "ire" ;
lin ireful_A = compoundA (mkA "ireful");
lin ireland_PN = mkPN "Ireland";
lin irene_PN = mkPN "Irene";
lin irenic_A = mkA "irenic" ;
lin iridaceous_A = mkA "iridaceous" ;
lin iridectomy_N = mkN "iridectomy" ;
lin iridescence_N = mkN "iridescence" ;
lin iridescent_A = compoundA (mkA "iridescent");
lin iridic_A = mkA "iridic" ;
lin iridium_N = mkN "iridium" ;
lin iridocyclitis_N = mkN "iridocyclitis" ;
lin iridokeratitis_N = mkN "iridokeratitis" ;
lin iridoncus_N = mkN "iridoncus" ;
lin iridotomy_N = mkN "iridotomy" ;
lin iris_N = mkN "iris" "irises";
lin iris_PN = mkPN "Iris";
lin irish_A = compoundA (mkA "Irish");
lin irishMasc_N = mkN masculine (mkN "Irish");
lin irishFem_N = mkN feminine (mkN "Irish");
lin irishman_N = mkN masculine (mkN "irishman" "irishmen");
lin irishwoman_N = mkN feminine (mkN "irishwoman" "irishwomen");
lin iritic_A = mkA "iritic" ;
lin iritis_N = mkN "iritis" ;
lin irk_V2 = mkV2 (mkV "irk" "irks" "irked" "irked" "irking");
lin irksome_A = compoundA (mkA "irksome");
lin iron_N = mkN "iron" "irons";
lin iron_V = mkV "iron" "irons" "ironed" "ironed" "ironing";
lin iron_V2 = mkV2 (mkV "iron" "irons" "ironed" "ironed" "ironing");
lin iron_foundry_N = mkN "iron-foundry" "iron-foundries";
lin iron_grey_A = compoundA (mkA "iron-grey");
lin iron_grey_N = mkN "iron-grey" ;
lin ironclad_A = compoundA (mkA "ironclad");
lin ironclad_N = mkN "ironclad" ;
lin ironic_A = compoundA (mkA "ironic");
lin ironical_A = compoundA (mkA "ironical");
lin ironing_N = mkN "ironing" ;
lin ironing_board_N = mkN "ironing-board" "ironing-boards";
lin ironlike_A = mkA "ironlike" ;
lin ironmonger_N = mkN "ironmonger" "ironmongers";
lin ironmongery_N = mkN "ironmongery" "ironmongeries";
lin ironmould_N = mkN "ironmould" "ironmoulds";
lin irons_N = mkN "irons" ;
lin ironshod_A = mkA "ironshod" ;
lin ironside_N = mkN "ironside" "ironsides";
lin ironware_N = mkN "ironware" ;
lin ironweed_N = mkN "ironweed" ;
lin ironwood_N = mkN "ironwood" ;
lin ironwork_N = mkN "ironwork" "ironworks";
lin ironworker_N = mkN "ironworker" ;
lin ironworks_N = mkN "ironworks" "ironworks";
lin irony_N = mkN "irony" "ironies";
lin irradiate_V2 = mkV2 (mkV "irradiate" "irradiates" "irradiated" "irradiated" "irradiating");
lin irradiation_N = mkN "irradiation" ;
lin irrational_A = compoundA (mkA "irrational");
lin irrationality_N = mkN "irrationality" ;
lin irreclaimable_A = mkA "irreclaimable" ;
lin irreconcilable_A = compoundA (mkA "irreconcilable");
lin irrecoverable_A = compoundA (mkA "irrecoverable");
lin irredeemable_A = compoundA (mkA "irredeemable");
lin irredenta_N = mkN "irredenta" ;
lin irredentism_N = mkN "irredentism" ;
lin irredentist_N = mkN "irredentist" "irredentists";
lin irreducible_A = compoundA (mkA "irreducible");
lin irrefutable_A = compoundA (mkA "irrefutable");
lin irregardless_Adv = mkAdv "irregardless" ;
lin irregular_A = compoundA (mkA "irregular");
lin irregular_N = mkN "irregular" "irregulars";
lin irregularity_N = mkN "irregularity" "irregularities";
lin irrelevance_N = mkN "irrelevance" "irrelevances";
lin irrelevancy_N = mkN "irrelevancy" "irrelevancies";
lin irrelevant_A = compoundA (mkA "irrelevant");
lin irreligionist_N = mkN "irreligionist" ;
lin irreligious_A = compoundA (mkA "irreligious");
lin irreligiousness_N = mkN "irreligiousness" ;
lin irremediable_A = compoundA (mkA "irremediable");
lin irremovable_A = compoundA (mkA "irremovable");
lin irreparable_A = compoundA (mkA "irreparable");
lin irreplaceable_A = compoundA (mkA "irreplaceable");
lin irreplaceableness_N = mkN "irreplaceableness" ;
lin irrepressibility_N = mkN "irrepressibility" ;
lin irrepressible_A = compoundA (mkA "irrepressible");
lin irreproachable_A = compoundA (mkA "irreproachable");
lin irreproducibility_N = mkN "irreproducibility" ;
lin irresistibility_N = mkN "irresistibility" ;
lin irresistible_A = compoundA (mkA "irresistible");
lin irresolute_A = compoundA (mkA "irresolute");
lin irresoluteness_N = mkN "irresoluteness" ;
lin irresolution_N = mkN "irresolution" ;
lin irrespective_A = compoundA (mkA "irrespective");
lin irresponsibility_N = mkN "irresponsibility" ;
lin irresponsible_A = compoundA (mkA "irresponsible");
lin irretrievable_A = compoundA (mkA "irretrievable");
lin irreverence_N = mkN "irreverence" ;
lin irreverent_A = compoundA (mkA "irreverent");
lin irreversibility_N = mkN "irreversibility" ;
lin irreversible_A = compoundA (mkA "irreversible");
lin irrevocable_A = compoundA (mkA "irrevocable");
lin irridentism_N = mkN "irridentism" ;
lin irrigate_V2 = mkV2 (mkV "irrigate" "irrigates" "irrigated" "irrigated" "irrigating");
lin irrigation_N = mkN "irrigation" ;
lin irritability_N = mkN "irritability" ;
lin irritable_A = compoundA (mkA "irritable");
lin irritant_A = compoundA (mkA "irritant");
lin irritant_N = mkN "irritant" "irritants";
lin irritate_V2 = mkV2 (mkV "irritate" "irritates" "irritated" "irritated" "irritating");
lin irritating_A = mkA "irritating" ;
lin irritation_N = mkN "irritation" "irritations";
lin irruption_N = mkN "irruption" "irruptions";
lin irruptive_A = mkA "irruptive" ;
lin irthlingborough_PN = mkPN "Irthlingborough";
lin irvine_PN = mkPN "Irvine";
lin isaac_PN = mkPN "Isaac";
lin isabel_PN = mkPN "Isabel";
lin isabella_PN = mkPN "Isabella";
lin ischemia_N = mkN "ischemia" ;
lin ischemic_A = mkA "ischemic" ;
lin ischium_N = mkN "ischium" ;
lin isentropic_A = mkA "isentropic" ;
lin isinglass_N = mkN "isinglass" ;
lin islam_N = mkN "Islam" ;
lin islamic_A = compoundA (mkA "Islamic");
lin island_N = mkN "island" "islands";
lin islander_N = mkN "islander" "islanders";
lin isle_N = mkN "isle" "isles";
lin islet_N = mkN "islet" "islets";
lin islington_PN = mkPN "Islington";
lin ism_N = mkN "ism" "isms";
lin isoagglutination_N = mkN "isoagglutination" ;
lin isoagglutinin_N = mkN "isoagglutinin" ;
lin isoagglutinogen_N = mkN "isoagglutinogen" ;
lin isoantibody_N = mkN "isoantibody" ;
lin isobar_N = mkN "isobar" "isobars";
lin isobel_PN = mkPN "Isobel";
lin isobutylene_N = mkN "isobutylene" ;
lin isocarboxazid_N = mkN "isocarboxazid" ;
lin isochronal_A = mkA "isochronal" ;
lin isochrone_N = mkN "isochrone" ;
lin isoclinal_A = mkA "isoclinal" ;
lin isocyanate_N = mkN "isocyanate" ;
lin isoflurane_N = mkN "isoflurane" ;
lin isogamete_N = mkN "isogamete" ;
lin isogamy_N = mkN "isogamy" ;
lin isogon_N = mkN "isogon" ;
lin isogonic_A = mkA "isogonic" ;
lin isogram_N = mkN "isogram" ;
lin isohel_N = mkN "isohel" ;
lin isolable_A = mkA "isolable" ;
lin isolate_V2 = mkV2 (mkV "isolate" "isolates" "isolated" "isolated" "isolating");
lin isolation_N = mkN "isolation" ;
lin isolationism_N = mkN "isolationism" ;
lin isolationist_A = mkA "isolationist" ;
lin isolationist_N = mkN "isolationist" "isolationists";
lin isoleucine_N = mkN "isoleucine" ;
lin isomer_N = mkN "isomer" ;
lin isomerase_N = mkN "isomerase" ;
lin isomeric_A = mkA "isomeric" ;
lin isomerism_N = mkN "isomerism" ;
lin isomerization_N = mkN "isomerization" ;
lin isometric_A = mkA "isometric" ;
lin isometrics_N = mkN "isometrics" ;
lin isometropia_N = mkN "isometropia" ;
lin isometry_N = mkN "isometry" ;
lin isomorphism_N = mkN "isomorphism" ;
lin isomorphous_A = mkA "isomorphous" ;
lin isoniazid_N = mkN "isoniazid" ;
lin isopod_N = mkN "isopod" ;
lin isoproterenol_N = mkN "isoproterenol" ;
lin isopteran_A = mkA "isopteran" ;
lin isosceles_A = compoundA (mkA "isosceles");
lin isosorbide_N = mkN "isosorbide" ;
lin isostasy_N = mkN "isostasy" ;
lin isotherm_N = mkN "isotherm" "isotherms";
lin isothermal_A = mkA "isothermal" ;
lin isothermic_A = mkA "isothermic" ;
lin isothiocyanate_N = mkN "isothiocyanate" ;
lin isotonic_A = mkA "isotonic" ;
lin isotope_N = mkN "isotope" "isotopes";
lin isotopic_A = mkA "isotopic" ;
lin isotropic_A = mkA "isotropic" ;
lin isotropically_Adv = mkAdv "isotropically" ;
lin isotropy_N = mkN "isotropy" ;
lin israel_PN = mkPN "Israel";
lin israeli_A = compoundA (mkA "israeli");
lin israeli_N = mkN "israeli" "israelis";
lin issue_N = mkN "issue" "issues";
lin issue_V = mkV "issue" "issues" "issued" "issued" "issuing";
lin issue_V2 = mkV2 (mkV "issue" "issues" "issued" "issued" "issuing");
lin issuer_N = mkN "issuer" ;
lin istanbul_PN = mkPN "Istanbul";
lin isthmian_A = mkA "isthmian" ;
lin isthmus_N = mkN "isthmus" "isthmuses";
lin it_Pron  = mkPron "it" "it" "its" "its" singular P3 nonhuman;
lin italian_A = compoundA (mkA "Italian");
lin italian_N = mkN "Italian" "Italians";
lin italic_A = compoundA (mkA "italic");
lin italic_N = mkN "italic" ;
lin italicize_V2 = mkV2 (mkV "italicize" "italicizes" "italicized" "italicized" "italicizing");
lin italy_PN = mkPN "Italy";
lin itch_N = mkN "itch" "itches";
lin itch_V = mkV "itch" "itches" "itched" "itched" "itching";
lin itchy_A = mkA "itchy" "itchier";
lin item_Adv = mkAdv "item";
lin item_N = mkN "item" "items";
lin itemize_V2 = mkV2 (mkV "itemize" "itemizes" "itemized" "itemized" "itemizing");
lin iterate_V2 = mkV2 (mkV "iterate" "iterates" "iterated" "iterated" "iterating");
lin iteration_N = mkN "iteration" "iterations";
lin iterative_A = mkA "iterative" ;
lin iterative_N = mkN "iterative" ;
lin itinerant_A = compoundA (mkA "itinerant");
lin itinerant_N = mkN "itinerant" ;
lin itinerary_N = mkN "itinerary" "itineraries";
lin itineration_N = mkN "itineration" ;
lin itraconazole_N = mkN "itraconazole" ;
lin itv_N = mkN "itv" ;
lin iud_N = mkN "iud" ;
lin ivan_PN = mkPN "Ivan";
lin iver_PN = mkPN "Iver";
lin ivied_A = compoundA (mkA "ivied");
lin ivor_PN = mkPN "Ivor";
lin ivory_N = mkN "ivory" ;
lin ivorybill_N = mkN "ivorybill" ;
lin ivy_N = mkN "ivy" "ivies";
lin ivy_PN = mkPN "Ivy";
lin izar_N = mkN "izar" ;
lin izmir_PN = mkPN "Izmir";
lin jab_N = mkN "jab" "jabs";
lin jab_V = mkV "jab" "jabs" "jabbed" "jabbed" "jabbing";
lin jab_V2 = mkV2 (mkV "jab" "jabs" "jabbed" "jabbed" "jabbing");
lin jabalpur_PN = mkPN "Jabalpur";
lin jabber_N = mkN "jabber" ;
lin jabber_V = mkV "jabber" "jabbers" "jabbered" "jabbered" "jabbering";
lin jabber_V2 = mkV2 (mkV "jabber" "jabbers" "jabbered" "jabbered" "jabbering");
lin jabberer_N = mkN "jabberer" "jabberers";
lin jabberwocky_N = mkN "jabberwocky" ;
lin jabiru_N = mkN "jabiru" ;
lin jabot_N = mkN "jabot" "jabots";
lin jaboticaba_N = mkN "jaboticaba" ;
lin jacamar_N = mkN "jacamar" ;
lin jack_N = mkN "jack" "jacks";
lin jack_PN = mkPN "Jack";
lin jack_V2 = mkV2 (mkV "jack" "jacks" "jacked" "jacked" "jacking");
lin jack_in_the_box_N = mkN "jack-in-the-box" "jack-in-the-boxes";
lin jack_knife_N = mkN "jack-knife" "jack-knives";
lin jack_knife_V = mkV "jack-knife" "jack-knifes" "jack-knifed" "jack-knifed" "jack-knifing";
lin jack_o'_lantern_N = mkN "jack-o'-lantern" "jack-o'-lanterns";
lin jack_plane_N = mkN "jack-plane" "jack-planes";
lin jackal_N = mkN "jackal" "jackals";
lin jackanapes_N = mkN "jackanapes" "IRREG";
lin jackass_N = mkN "jackass" "jackasses";
lin jackboot_N = mkN "jackboot" "jackboots";
lin jackdaw_N = mkN "jackdaw" "jackdaws";
lin jacket_N = mkN "jacket" "jackets";
lin jackfruit_N = mkN "jackfruit" ;
lin jackie_PN = mkPN "Jackie";
lin jackknife_N = mkN "jackknife" ;
lin jacklight_N = mkN "jacklight" ;
lin jackpot_N = mkN "jackpot" "jackpots";
lin jackrabbit_N = mkN "jackrabbit" ;
lin jacks_N = mkN "jacks" ;
lin jackscrew_N = mkN "jackscrew" ;
lin jacksmelt_N = mkN "jacksmelt" ;
lin jacksnipe_N = mkN "jacksnipe" ;
lin jacksonville_PN = mkPN "Jacksonville";
lin jackstraw_N = mkN "jackstraw" ;
lin jackstraws_N = mkN "jackstraws" ;
lin jacob_PN = mkPN "Jacob";
lin jacobean_A = compoundA (mkA "jacobean");
lin jacobin_A = compoundA (mkA "jacobin");
lin jacobin_N = mkN "jacobin" "jacobins";
lin jacobinism_N = mkN "jacobinism" ;
lin jacobite_N = mkN "jacobite" "jacobites";
lin jaconet_N = mkN "jaconet" ;
lin jacquard_N = mkN "jacquard" ;
lin jacqueline_PN = mkPN "Jacqueline";
lin jactitation_N = mkN "jactitation" ;
lin jade_A = mkA "jade" ;
lin jade_N = mkN "jade" "jades";
lin jaded_A = compoundA (mkA "jaded");
lin jadeite_N = mkN "jadeite" ;
lin jaeger_N = mkN "jaeger" ;
lin jag_N = mkN "jag" "jags";
lin jag_V2 = mkV2 (mkV "jag" "jags" "jagged" "jagged" "jagging");
lin jaggedness_N = mkN "jaggedness" ;
lin jaggery_N = mkN "jaggery" ;
lin jaggy_A = mkA "jaggy" "jaggier";
lin jaguar_N = mkN "jaguar" "jaguars";
lin jaguarundi_N = mkN "jaguarundi" ;
lin jail_N = mkN "jail" "jails";
lin jail_V2 = mkV2 (mkV "jail" "jails" "jailed" "jailed" "jailing");
lin jailer_N = mkN "jailer" "jailers";
lin jailor_N = mkN "jailor" "jailors";
lin jaipur_PN = mkPN "Jaipur";
lin jakarta_PN = mkPN "Jakarta";
lin jake_PN = mkPN "Jake";
lin jakes_N = mkN "jakes" "IRREG";
lin jalapeno_N = mkN "jalapeno" ;
lin jalopy_N = mkN "jalopy" "jalopies";
lin jalousie_N = mkN "jalousie" ;
lin jam_N = mkN "jam" "jams";
lin jam_V = mkV "jam" "jams" "jammed" "jammed" "jamming";
lin jam_V2 = mkV2 (mkV "jam" "jams" "jammed" "jammed" "jamming");
lin jam_VS = mkVS (mkV "jam" "jams" "jammed" "jammed" "jamming");
lin jamaica_PN = mkPN "Jamaica";
lin jamaican_A = compoundA (mkA "jamaican");
lin jamaican_N = mkN "jamaican" "jamaicans";
lin jamb_N = mkN "jamb" "jambs";
lin jambalaya_N = mkN "jambalaya" ;
lin jamboree_N = mkN "jamboree" "jamborees";
lin james_PN = mkPN "James";
lin jamjar_N = mkN "jamjar" "jamjars";
lin jammer_N = mkN "jammer" ;
lin jamming_N = mkN "jamming" ;
lin jampack_V2 = mkV2 (mkV "jampack" "jampacks" "jampacked" "jampacked" "jampacking");
lin jampan_N = mkN "jampan" ;
lin jampot_N = mkN "jampot" "jampots";
lin jan_PN = mkPN "Jan";
lin jane_PN = mkPN "Jane";
lin janet_PN = mkPN "Janet";
lin jangle_N = mkN "jangle" ;
lin jangle_V = mkV "jangle" "jangles" "jangled" "jangled" "jangling";
lin jangle_V2 = mkV2 (mkV "jangle" "jangles" "jangled" "jangled" "jangling");
lin janice_PN = mkPN "Janice";
lin janie_PN = mkPN "Janie";
lin janissary_N = mkN "janissary" ;
lin janitor_N = mkN "janitor" "janitors";
lin january_N = mkN "January" "Januaries";
lin january_PN = mkPN "January";
lin janus_PN = mkPN "Janus";
lin japan_N = mkN "japan" ;
lin japan_PN = mkPN "Japan";
lin japan_V2 = mkV2 (mkV "japan" "japans" "japanned" "japanned" "japanning");
lin japaneseFem_N = mkN feminine (mkN "Japanese" "Japanese");
lin japaneseMasc_N = mkN masculine (mkN "Japanese" "Japanese");
lin japanese_A = compoundA (mkA "Japanese");
lin jape_N = mkN "jape" "japes";
lin japonica_N = mkN "japonica" ;
lin jar_N = mkN "jar" "jars";
lin jar_V = mkV "jar" "jars" "jarred" "jarred" "jarring";
lin jar_V2 = mkV2 (mkV "jar" "jars" "jarred" "jarred" "jarring");
lin jarful_N = mkN "jarful" "jarfuls";
lin jargon_N = mkN "jargon" ;
lin jargoon_N = mkN "jargoon" ;
lin jarringly_Adv = mkAdv "jarringly" ;
lin jarrow_PN = mkPN "Jarrow";
lin jasmine_N = mkN "jasmine" ;
lin jason_PN = mkPN "Jason";
lin jasper_N = mkN "jasper" ;
lin jassid_N = mkN "jassid" ;
lin jati_N = mkN "jati" ;
lin jaundice_N = mkN "jaundice" ;
lin jaundice_V2 = mkV2 (mkV "jaundice" "jaundices" "jaundiced" "jaundiced" "jaundicing");
lin jaunt_N = mkN "jaunt" "jaunts";
lin jaunt_V = mkV "jaunt" "jaunts" "jaunted" "jaunted" "jaunting";
lin jauntiness_N = mkN "jauntiness" ;
lin jaunting_car_N = mkN "jaunting-car" "jaunting-cars";
lin jaunty_A = mkA "jaunty" "jauntier";
lin java_PN = mkPN "Java";
lin javanese_A = compoundA (mkA "javanese");
lin javanese_N = mkN "javanese" "javanese";
lin javelin_N = mkN "javelin" "javelins";
lin jaw_N = mkN "jaw" "jaws";
lin jaw_V = mkV "jaw" "jaws" "jawed" "jawed" "jawing";
lin jawan_N = mkN "jawan" ;
lin jawbone_N = mkN "jawbone" "jawbones";
lin jawbreaker_N = mkN "jawbreaker" "jawbreakers";
lin jawed_A = mkA "jawed" ;
lin jawfish_N = mkN "jawfish" ;
lin jawless_A = mkA "jawless" ;
lin jay_N = mkN "jay" "jays";
lin jaywalk_V = mkV "jaywalk" "jaywalks" "jaywalked" "jaywalked" "jaywalking";
lin jaywalker_N = mkN "jaywalker" "jaywalkers";
lin jazz_N = mkN "jazz" ;
lin jazz_V2 = mkV2 (mkV "jazz" "jazzes" "jazzed" "jazzed" "jazzing");
lin jazzy_A = mkA "jazzy" "jazzier";
lin jc_PN = mkPN "Jc";
lin jealous_A = compoundA (mkA "jealous");
lin jealousy_N = mkN "jealousy" "jealousies";
lin jean_N = mkN "jean" ;
lin jean_PN = mkPN "Jean";
lin jeanie_PN = mkPN "Jeanie";
lin jedburgh_PN = mkPN "Jedburgh";
lin jeep_N = mkN "jeep" "jeeps";
lin jeer_N = mkN "jeer" "jeers";
lin jeer_V = mkV "jeer" "jeers" "jeered" "jeered" "jeering";
lin jeer_V2 = mkV2 (mkV "jeer" "jeers" "jeered" "jeered" "jeering");
lin jeeringly_Adv = mkAdv "jeeringly";
lin jeff_PN = mkPN "Jeff";
lin jeffrey_PN = mkPN "Jeffrey";
lin jehovah_PN = mkPN "Jehovah";
lin jejune_A = compoundA (mkA "jejune");
lin jejuneness_N = mkN "jejuneness" ;
lin jejunitis_N = mkN "jejunitis" ;
lin jejunity_N = mkN "jejunity" ;
lin jejunoileitis_N = mkN "jejunoileitis" ;
lin jejunostomy_N = mkN "jejunostomy" ;
lin jejunum_N = mkN "jejunum" ;
lin jekyll_and_hyde_PN = mkPN "Jekyll-and-hyde";
lin jell_V = mkV "jell" "jells" "jelled" "jelled" "jelling";
lin jell_V2 = mkV2 (mkV "jell" "jells" "jelled" "jelled" "jelling");
lin jellaba_N = mkN "jellaba" "jellabas";
lin jello_N = mkN "jello" ;
lin jelly_N = mkN "jelly" "jellies";
lin jelly_V = mkV "jelly" "jellies" "jellied" "jellied" "jellying";
lin jelly_V2 = mkV2 (mkV "jelly" "jellies" "jellied" "jellied" "jellying");
lin jellyfish_N = mkN "jellyfish" "jellyfish";
lin jellyroll_N = mkN "jellyroll" ;
lin jemmy_N = mkN "jemmy" "jemmies";
lin jennet_N = mkN "jennet" ;
lin jennifer_PN = mkPN "Jennifer";
lin jenny_N = mkN "jenny" "jennies";
lin jenny_PN = mkPN "Jenny";
lin jeopardize_V2 = mkV2 (mkV "jeopardize" "jeopardizes" "jeopardized" "jeopardized" "jeopardizing");
lin jeopardy_N = mkN "jeopardy" ;
lin jerboa_N = mkN "jerboa" "jerboas";
lin jeremiad_N = mkN "jeremiad" "jeremiads";
lin jeremy_PN = mkPN "Jeremy";
lin jerk_N = mkN "jerk" "jerks";
lin jerk_V = mkV "jerk" "jerks" "jerked" "jerked" "jerking";
lin jerk_V2 = mkV2 (mkV "jerk" "jerks" "jerked" "jerked" "jerking");
lin jerkin_N = mkN "jerkin" "jerkins";
lin jerkiness_N = mkN "jerkiness" ;
lin jerkwater_A = mkA "jerkwater" ;
lin jerky_A = mkA "jerky" "jerkier";
lin jerky_N = mkN "jerky" ;
lin jeroboam_N = mkN "jeroboam" ;
lin jerome_PN = mkPN "Jerome";
lin jerry_N = mkN "jerry" "jerries";
lin jerry_PN = mkPN "Jerry";
lin jerry_builder_N = mkN "jerry-builder" "jerry-builders";
lin jerry_building_N = mkN "jerry-building" ;
lin jerry_built_A = compoundA (mkA "jerry-built");
lin jersey_N = mkN "jersey" "jerseys";
lin jersey_PN = mkPN "Jersey";
lin jess_PN = mkPN "Jess";
lin jessica_PN = mkPN "Jessica";
lin jessie_PN = mkPN "Jessie";
lin jest_N = mkN "jest" "jests";
lin jest_V = mkV "jest" "jests" "jested" "jested" "jesting";
lin jester_N = mkN "jester" "jesters";
lin jesuit_N = mkN "jesuit" "jesuits";
lin jesuitical_A = compoundA (mkA "jesuitical");
lin jesus_PN = mkPN "Jesus";
lin jet_N = mkN "jet" "jets";
lin jet_V = mkV "jet" "jets" "jetted" "jetted" "jetting";
lin jet_V2 = mkV2 (mkV "jet" "jets" "jetted" "jetted" "jetting");
lin jet_black_A = compoundA (mkA "jet-black");
lin jet_propelled_A = compoundA (mkA "jet-propelled");
lin jetliner_N = mkN "jetliner" ;
lin jetsam_N = mkN "jetsam" ;
lin jettison_V2 = mkV2 (mkV "jettison" "jettisons" "jettisoned" "jettisoned" "jettisoning");
lin jetty_N = mkN "jetty" "jetties";
lin jew_N = mkN "Jew" "Jews";
lin jewel_N = mkN "jewel" "jewels";
lin jewel_V2 = mkV2 (mkV "jewel" "jewels" "jewelled" "jewelled" "jewelling");
lin jeweller_N = mkN (variants {"jeweller"; "jeweler"});
lin jewellery_N = mkN "jewellery" ;
lin jewelry_N = mkN "jewelry" ;
lin jewelweed_N = mkN "jewelweed" ;
lin jewess_N = mkN "jewess" "jewesses";
lin jewfish_N = mkN "jewfish" ;
lin jewish_A = compoundA (mkA "jewish");
lin jezebel_N = mkN "jezebel" "jezebels";
lin jiao_N = mkN "jiao" ;
lin jib_N = mkN "jib" "jibs";
lin jib_V = mkV "jib" "jibs" "jibbed" "jibbed" "jibbing";
lin jib_boom_N = mkN "jib-boom" "jib-booms";
lin jibboom_N = mkN "jibboom" ;
lin jibe_N = mkN "jibe" "jibes";
lin jibe_V = mkV "jibe" "jibes" "jibed" "jibed" "jibing";
lin jiffy_N = mkN "jiffy" "jiffies";
lin jig_N = mkN "jig" "jigs";
lin jig_V = mkV "jig" "jigs" "jigged" "jigged" "jigging";
lin jig_V2 = mkV2 (mkV "jig" "jigs" "jigged" "jigged" "jigging");
lin jigger_N = mkN "jigger" "jiggers";
lin jiggered_A = compoundA (mkA "jiggered");
lin jiggermast_N = mkN "jiggermast" ;
lin jiggery_pokery_N = mkN "jiggery-pokery" ;
lin jiggle_N = mkN "jiggle" "jiggles";
lin jiggle_V = mkV "jiggle" "jiggles" "jiggled" "jiggled" "jiggling";
lin jiggle_V2 = mkV2 (mkV "jiggle" "jiggles" "jiggled" "jiggled" "jiggling");
lin jigsaw_N = mkN "jigsaw" "jigsaws";
lin jihad_N = mkN "jihad" "jihads";
lin jihadi_A = mkA "jihadi" ;
lin jill_PN = mkPN "Jill";
lin jilt_N = mkN "jilt" "jilts";
lin jilt_V2 = mkV2 (mkV "jilt" "jilts" "jilted" "jilted" "jilting");
lin jim_PN = mkPN "Jim";
lin jim_crow_N = mkN "jim crow" "IRREG";
lin jimdandy_N = mkN "jimdandy" ;
lin jimmies_N = mkN "jimmies" ;
lin jimmy_N = mkN "jimmy" "jimmies";
lin jimmy_PN = mkPN "Jimmy";
lin jimsonweed_N = mkN "jimsonweed" ;
lin jingle_N = mkN "jingle" "jingles";
lin jingle_V = mkV "jingle" "jingles" "jingled" "jingled" "jingling";
lin jingle_V2 = mkV2 (mkV "jingle" "jingles" "jingled" "jingled" "jingling");
lin jingo_N = mkN "jingo" "jingoes";
lin jingoism_N = mkN "jingoism" ;
lin jingoist_N = mkN "jingoist" "jingoists";
lin jingoistic_A = compoundA (mkA "jingoistic");
lin jinks_N = mkN "jinks" ;
lin jinn_N = mkN "jinn" "jinns";
lin jinrikisha_N = mkN "jinrikisha" ;
lin jinx_N = mkN "jinx" "jinxes";
lin jiqui_N = mkN "jiqui" ;
lin jird_N = mkN "jird" ;
lin jitney_N = mkN "jitney" "jitneys";
lin jitter_N = mkN "jitter" ;
lin jitterbug_N = mkN "jitterbug" "jitterbugs";
lin jitteriness_N = mkN "jitteriness" ;
lin jittering_A = mkA "jittering" ;
lin jitters_N = mkN "jitters" ;
lin jittery_A = compoundA (mkA "jittery");
lin jive_N = mkN "jive" "jives";
lin jive_V = mkV "jive" "jives" "jived" "jived" "jiving";
lin jnr_PN = mkPN "Jnr";
lin jo_PN = mkPN "Jo";
lin joan_PN = mkPN "Joan";
lin joanie_PN = mkPN "Joanie";
lin joann_PN = mkPN "Joann";
lin joanna_PN = mkPN "Joanna";
lin joanne_PN = mkPN "Joanne";
lin job_N = mkN "job" "jobs";
lin job_PN = mkPN "Job";
lin job_V = mkV "job" "jobs" "jobbed" "jobbed" "jobbing";
lin job_V2 = mkV2 (mkV "job" "jobs" "jobbed" "jobbed" "jobbing");
lin jobber_N = mkN "jobber" "jobbers";
lin jobbery_N = mkN "jobbery" ;
lin jobcentre_N = mkN "jobcentre" ;
lin jobholder_N = mkN "jobholder" ;
lin jocelyn_PN = mkPN "Jocelyn";
lin jockey_N = mkN "jockey" "jockeys";
lin jockey_V = mkV "jockey" "jockeys" "jockeyed" "jockeyed" "jockeying";
lin jockey_V2 = mkV2 (mkV "jockey" "jockeys" "jockeyed" "jockeyed" "jockeying");
lin jocose_A = compoundA (mkA "jocose");
lin jocoseness_N = mkN "jocoseness" ;
lin jocosity_N = mkN "jocosity" ;
lin jocular_A = compoundA (mkA "jocular");
lin jocularity_N = mkN "jocularity" "jocularities";
lin jocund_A = compoundA (mkA "jocund");
lin jocundity_N = mkN "jocundity" "jocundities";
lin jodhpur_N = mkN "jodhpur" ;
lin jodhpurs_N = mkN "jodhpurs" ;
lin joe_PN = mkPN "Joe";
lin joey_PN = mkPN "Joey";
lin jog_N = mkN "jog" "jogs";
lin jog_V = mkV "jog" "jogs" "jogged" "jogged" "jogging";
lin jog_V2 = mkV2 (mkV "jog" "jogs" "jogged" "jogged" "jogging");
lin jog_trot_N = mkN "jog-trot" "jog-trots";
lin jogger_N = mkN "jogger" "joggers";
lin jogging_N = mkN "jogging" ;
lin joggle_N = mkN "joggle" "joggles";
lin joggle_V = mkV "joggle" "joggles" "joggled" "joggled" "joggling";
lin joggle_V2 = mkV2 (mkV "joggle" "joggles" "joggled" "joggled" "joggling");
lin johannesburg_PN = mkPN "Johannesburg";
lin john_PN = mkPN "John";
lin john_bull_N = mkN "john bull" "IRREG";
lin johnny_PN = mkPN "Johnny";
lin johnnycake_N = mkN "johnnycake" ;
lin johnstone_PN = mkPN "Johnstone";
lin joie_de_vivre_N = mkN "joie de vivre" ;
lin join_N = mkN "join" "joins";
lin join_V = mkV "join" "joins" "joined" "joined" "joining";
lin join_V2 = mkV2 (mkV "join" "joins" "joined" "joined" "joining");
lin joiner_N = mkN "joiner" "joiners";
lin joinery_N = mkN "joinery" ;
lin joining_N = mkN "joining" ;
lin joint_A = compoundA (mkA "joint");
lin joint_N = mkN "joint" "joints";
lin joint_V2 = mkV2 (mkV "joint" "joints" "jointed" "jointed" "jointing");
lin jointer_N = mkN "jointer" ;
lin jointure_N = mkN "jointure" "jointures";
lin joist_N = mkN "joist" "joists";
lin joke_N = mkN "joke" "jokes";
lin joke_V = mkV "joke" "jokes" "joked" "joked" "joking";
lin joke_VS = mkVS (mkV "joke" "jokes" "joked" "joked" "joking");
lin joker_N = mkN "joker" "jokers";
lin jokingly_Adv = mkAdv "jokingly";
lin jollification_N = mkN "jollification" "jollifications";
lin jollity_N = mkN "jollity" "jollities";
lin jolly_A = mkA "jolly" "jollier";
lin jolly_Adv = mkAdv "jolly";
lin jolly_N = mkN "jolly" ;
lin jolly_V2 = mkV2 (mkV "jolly" "jollies" "jollied" "jollied" "jollying");
lin jollyboat_N = mkN "jollyboat" "jollyboats";
lin jolt_N = mkN "jolt" "jolts";
lin jolt_V = mkV "jolt" "jolts" "jolted" "jolted" "jolting";
lin jolt_V2 = mkV2 (mkV "jolt" "jolts" "jolted" "jolted" "jolting");
lin jolty_A = mkA "jolty" "joltier";
lin jonah_N = mkN "jonah" ;
lin jonah_PN = mkPN "Jonah";
lin jonathan_PN = mkPN "Jonathan";
lin jonquil_N = mkN "jonquil" "jonquils";
lin jordan_PN = mkPN "Jordan";
lin jordanian_A = compoundA (mkA "Jordanian");
lin jordanian_N = mkN "Jordanian" "Jordanians";
lin jorum_N = mkN "jorum" ;
lin joseph_PN = mkPN "Joseph";
lin josephine_PN = mkPN "Josephine";
lin josh_PN = mkPN "Josh";
lin joshua_PN = mkPN "Joshua";
lin joss_N = mkN "joss" "josses";
lin joss_house_N = mkN "joss-house" "joss-houses";
lin joss_stick_N = mkN "joss-stick" "joss-sticks";
lin jostle_N = mkN "jostle" ;
lin jostle_V = mkV "jostle" "jostles" "jostled" "jostled" "jostling";
lin jostle_V2 = mkV2 (mkV "jostle" "jostles" "jostled" "jostled" "jostling");
lin jot_N = mkN "jot" "jots";
lin jot_V2 = mkV2 (mkV "jot" "jots" "jotted" "jotted" "jotting");
lin jotter_N = mkN "jotter" "jotters";
lin jotting_N = mkN "jotting" ;
lin joule_N = mkN "joule" "joules";
lin journal_N = mkN "journal" "journals";
lin journalese_N = mkN "journalese" ;
lin journalism_N = mkN "journalism" ;
lin journalist_N = mkN "journalist" "journalists";
lin journalistic_A = compoundA (mkA "journalistic");
lin journalistically_Adv = mkAdv "journalistically";
lin journey_N = mkN "journey" "journeys";
lin journey_V = mkV "journey" "journeys" "journeyed" "journeyed" "journeying";
lin journeyman_N = mkN masculine (mkN "journeyman" "journeymen");
lin joust_N = mkN "joust" "jousts";
lin joust_V = mkV "joust" "jousts" "jousted" "jousted" "jousting";
lin jove_PN = mkPN "Jove";
lin jovial_A = compoundA (mkA "jovial");
lin joviality_N = mkN "joviality" "jovialities";
lin jowl_N = mkN "jowl" "jowls";
lin jowly_A = mkA "jowly" "jowlier";
lin joy_N = mkN "joy" "joys";
lin joy_PN = mkPN "Joy";
lin joy_V = mkV "joy" "joys" "joyed" "joyed" "joying";
lin joy_ride_N = mkN "joy-ride" "joy-rides";
lin joy_stick_N = mkN "joy-stick" "joy-sticks";
lin joyce_PN = mkPN "Joyce";
lin joyful_A = compoundA (mkA "joyful");
lin joyfulness_N = mkN "joyfulness" ;
lin joyless_A = compoundA (mkA "joyless");
lin joylessness_N = mkN "joylessness" ;
lin joyous_A = compoundA (mkA "joyous");
lin joyousness_N = mkN "joyousness" ;
lin joyride_N = mkN "joyride" ;
lin joystick_N = mkN "joystick" ;
lin jp_N = mkN "jp" ;
lin ju_jitsu_N = mkN "ju-jitsu" ;
lin jubilant_A = compoundA (mkA "jubilant");
lin jubilation_N = mkN "jubilation" "jubilations";
lin jubilee_N = mkN "jubilee" "jubilees";
lin judaic_A = compoundA (mkA "judaic");
lin judaism_N = mkN "judaism" ;
lin judas_N = mkN "judas" "judases";
lin judas_PN = mkPN "Judas";
lin judder_V = mkV "judder" "judders" "juddered" "juddered" "juddering";
lin judge_N = mkN "judge" "judges";
lin judge_V = mkV "judge" "judges" "judged" "judged" "judging";
lin judge_V2 = mkV2 (mkV "judge" "judges" "judged" "judged" "judging");
lin judge_V2V = mkV2V (mkV "judge" "judges" "judged" "judged" "judging") noPrep to_Prep ;
lin judge_VS = mkVS (mkV "judge" "judges" "judged" "judged" "judging");
lin judgement_N = mkN "judgement" "judgements";
lin judgeship_N = mkN "judgeship" ;
lin judgment_N = mkN "judgment" ;
lin judgmental_A = mkA "judgmental" ;
lin judicable_A = mkA "judicable" ;
lin judicature_N = mkN "judicature" "judicatures";
lin judicial_A = compoundA (mkA "judicial");
lin judiciary_N = mkN "judiciary" "judiciaries";
lin judicious_A = compoundA (mkA "judicious");
lin judiciousness_N = mkN "judiciousness" ;
lin judith_PN = mkPN "Judith";
lin judo_N = mkN "judo" ;
lin judy_PN = mkPN "Judy";
lin jug_N = mkN "jug" "jugs";
lin jug_V2 = mkV2 (mkV "jug" "jugs" "jugged" "jugged" "jugging");
lin jugale_N = mkN "jugale" ;
lin jugful_N = mkN "jugful" "jugfuls";
lin juggernaut_N = mkN "juggernaut" "juggernauts";
lin juggle_N = mkN "juggle" ;
lin juggle_V = mkV "juggle" "juggles" "juggled" "juggled" "juggling";
lin juggle_V2 = mkV2 (mkV "juggle" "juggles" "juggled" "juggled" "juggling");
lin juggler_N = mkN "juggler" "jugglers";
lin jugglery_N = mkN "jugglery" ;
lin jugular_A = compoundA (mkA "jugular");
lin jugular_N = mkN "jugular" ;
lin juice_N = mkN "juice" "juices";
lin juiceless_A = mkA "juiceless" ;
lin juiciness_N = mkN "juiciness" ;
lin juicy_A = mkA "juicy" "juicier";
lin juju_N = mkN "juju" "jujus";
lin jujube_N = mkN "jujube" "jujubes";
lin jujutsu_N = mkN "jujutsu" ;
lin juke_N = mkN "juke" ;
lin jukebox_N = mkN "jukebox" "jukeboxes";
lin jul_PN = mkPN "Jul";
lin julep_N = mkN "julep" "juleps";
lin julia_PN = mkPN "Julia";
lin julian_A = compoundA (mkA "julian");
lin julian_PN = mkPN "Julian";
lin julie_PN = mkPN "Julie";
lin julienne_N = mkN "julienne" ;
lin juliet_PN = mkPN "Juliet";
lin july_PN = mkPN "July";
lin jumble_N = mkN "jumble" "jumbles";
lin jumble_V = mkV "jumble" "jumbles" "jumbled" "jumbled" "jumbling";
lin jumble_V2 = mkV2 (mkV "jumble" "jumbles" "jumbled" "jumbled" "jumbling");
lin jumble_sale_N = mkN "jumble-sale" "jumble-sales";
lin jumbo_A = compoundA (mkA "jumbo");
lin jumbojet_N = mkN "jumbojet" ;
lin jumentous_A = mkA "jumentous" ;
lin jump_N = mkN "jump" "jumps";
lin jump_V = mkV "jump" "jumps" "jumped" "jumped" "jumping";
lin jump_V2 = mkV2 (mkV "jump" "jumps" "jumped" "jumped" "jumping");
lin jump_V2V = mkV2V (mkV "jump" "jumps" "jumped" "jumped" "jumping") noPrep to_Prep ;
lin jump_VV = mkVV (mkV "jump" "jumps" "jumped" "jumped" "jumping") ;
lin jumped_up_A = compoundA (mkA "jumped-up");
lin jumper_N = mkN "jumper" "jumpers";
lin jumpiness_N = mkN "jumpiness" ;
lin jumping_N = mkN "jumping" ;
lin jumpstart_N = mkN "jumpstart" ;
lin jumpy_A = mkA "jumpy" "jumpier";
lin jun_PN = mkPN "Jun";
lin junco_N = mkN "junco" ;
lin junction_N = mkN "junction" "junctions";
lin juncture_N = mkN "juncture" "junctures";
lin june_N = mkN "June" "Junes";
lin june_PN = mkPN "June";
lin jungle_N = mkN "jungle" "jungles";
lin jungly_A = mkA "jungly" "junglier";
lin junior_A = compoundA (mkA "junior");
lin junior_N = mkN "junior" "juniors";
lin juniper_N = mkN "juniper" "junipers";
lin junk_N = mkN "junk" "junks";
lin junk_V2 = mkV2 (mkV "junk");
lin junk_shop_N = mkN "junk-shop" "junk-shops";
lin junket_N = mkN "junket" "junkets";
lin junket_V = mkV "junket" "junkets" "junketed" "junketed" "junketing";
lin junketing_N = mkN "junketing" ;
lin junkie_N = mkN "junkie" "junkies";
lin junky_N = mkN "junky" "junkies";
lin junkyard_N = mkN "junkyard" ;
lin junoesque_A = compoundA (mkA "junoesque");
lin junta_N = mkN "junta" "juntas";
lin jupati_N = mkN "jupati" ;
lin jupiter_PN = mkPN "Jupiter";
lin jural_A = mkA "jural" ;
lin juridical_A = compoundA (mkA "juridical");
lin jurisdiction_N = mkN "jurisdiction" ;
lin jurisdictional_A = mkA "jurisdictional" ;
lin jurisprudence_N = mkN "jurisprudence" ;
lin jurisprudential_A = mkA "jurisprudential" ;
lin jurist_N = mkN "jurist" "jurists";
lin juror_N = mkN "juror" "jurors";
lin jury_N = mkN "jury" "juries";
lin jury_box_N = mkN "jury-box" "jury-boxes";
lin jury_mast_N = mkN "jury-mast" "jury-masts";
lin jury_rigge_V2 = mkV2 (mkV "jury-rigge");
lin juryman_N = mkN masculine (mkN "juryman" "jurymen");
lin just_A = mkA "just" ;
lin just_AdV = mkAdV "just";
lin just_Adv = mkAdv "just";
lin just_Predet = {s="just"};
lin justice_N = mkN "justice" "justices";
lin justiciar_N = mkN "justiciar" ;
lin justiciary_N = mkN "justiciary" "justiciaries";
lin justifiable_A = compoundA (mkA "justifiable");
lin justification_N = mkN "justification" "justifications";
lin justificative_A = mkA "justificative" ;
lin justify_V2 = mkV2 (mkV "justify" "justifies" "justified" "justified" "justifying");
lin justify_VV = ingVV (mkV "justify" "justifies" "justified" "justified" "justifying");
lin justin_PN = mkPN "Justin";
lin justness_N = mkN "justness" ;
lin jut_V = mkV "jut" "juts" "jutted" "jutted" "jutting";
lin jute_N = mkN "jute" ;
lin juvenescence_N = mkN "juvenescence" ;
lin juvenile_A = compoundA (mkA "juvenile");
lin juvenile_N = mkN "juvenile" "juveniles";
lin juxtapose_V2 = mkV2 (mkV "juxtapose" "juxtaposes" "juxtaposed" "juxtaposed" "juxtaposing");
lin juxtaposition_N = mkN "juxtaposition" ;
lin kabbalism_N = mkN "kabbalism" ;
lin kabob_N = mkN "kabob" ;
lin kachina_N = mkN "kachina" ;
lin kaffir_N = mkN "kaffir" "kaffirs";
lin kaffiyeh_N = mkN "kaffiyeh" ;
lin kafkaesque_A = mkA "kafkaesque" ;
lin kahikatea_N = mkN "kahikatea" ;
lin kail_N = mkN "kail" ;
lin kainite_N = mkN "kainite" ;
lin kaiser_N = mkN "kaiser" "kaisers";
lin kakemono_N = mkN "kakemono" "kakemonos";
lin kaki_N = mkN "kaki" ;
lin kalansuwa_N = mkN "kalansuwa" ;
lin kale_N = mkN "kale" ;
lin kaleidoscope_N = mkN "kaleidoscope" "kaleidoscopes";
lin kaleidoscopic_A = compoundA (mkA "kaleidoscopic");
lin kalemia_N = mkN "kalemia" ;
lin kalgan_PN = mkPN "Kalgan";
lin kaliuresis_N = mkN "kaliuresis" ;
lin kalmia_N = mkN "kalmia" ;
lin kalumpang_N = mkN "kalumpang" ;
lin kameez_N = mkN "kameez" ;
lin kamikaze_N = mkN "kamikaze" ;
lin kampong_N = mkN "kampong" "kampongs";
lin kampuchea_PN = mkPN "Kampuchea";
lin kampuchean_A = compoundA (mkA "kampuchean");
lin kampuchean_N = mkN "kampuchean" "kampucheans";
lin kanamycin_N = mkN "kanamycin" ;
lin kanchil_N = mkN "kanchil" ;
lin kangaroo_N = mkN "kangaroo" "kangaroos";
lin kanpur_PN = mkPN "Kanpur";
lin kansas_PN = mkPN "Kansas";
lin kansas_city_PN = mkPN "Kansas city";
lin kanzu_N = mkN "kanzu" ;
lin kaohsiung_PN = mkPN "Kaohsiung";
lin kaoliang_N = mkN "kaoliang" ;
lin kaolin_N = mkN "kaolin" ;
lin kaolinite_N = mkN "kaolinite" ;
lin kaon_N = mkN "kaon" ;
lin kapeika_N = mkN "kapeika" ;
lin kaph_N = mkN "kaph" ;
lin kapok_N = mkN "kapok" ;
lin kappa_N = mkN "kappa" ;
lin kapuka_N = mkN "kapuka" ;
lin kaput_A = compoundA (mkA "kaput");
lin karachi_PN = mkPN "Karachi";
lin karaganda_PN = mkPN "Karaganda";
lin karaoke_N = mkN "karaoke" ;
lin karat_N = mkN "karat" "karats";
lin karate_N = mkN "karate" ;
lin karen_PN = mkPN "Karen";
lin karlsruhe_PN = mkPN "Karlsruhe";
lin karma_N = mkN "karma" "karmas";
lin karyokinesis_N = mkN "karyokinesis" ;
lin karyokinetic_A = mkA "karyokinetic" ;
lin karyolymph_N = mkN "karyolymph" ;
lin karyolysis_N = mkN "karyolysis" ;
lin karyotype_N = mkN "karyotype" ;
lin kasbah_N = mkN "kasbah" ;
lin kasha_N = mkN "kasha" ;
lin kashmir_PN = mkPN "Kashmir";
lin kashmiri_A = compoundA (mkA "kashmiri");
lin kashmiri_N = mkN "kashmiri" "kashmiris";
lin kassel_PN = mkPN "Kassel";
lin kat_N = mkN "kat" ;
lin katabatic_A = mkA "katabatic" ;
lin katamorphism_N = mkN "katamorphism" ;
lin kate_PN = mkPN "Kate";
lin kath_PN = mkPN "Kath";
lin katharobe_N = mkN "katharobe" ;
lin katharobic_A = mkA "katharobic" ;
lin katharometer_N = mkN "katharometer" ;
lin katherine_PN = mkPN "Katherine";
lin kathy_PN = mkPN "Kathy";
lin katie_PN = mkPN "Katie";
lin katowice_PN = mkPN "Katowice";
lin katydid_N = mkN "katydid" ;
lin kauri_N = mkN "kauri" ;
lin kava_N = mkN "kava" ;
lin kawaka_N = mkN "kawaka" ;
lin kay_PN = mkPN "Kay";
lin kayak_N = mkN "kayak" "kayaks";
lin kazan_PN = mkPN "Kazan";
lin kazoo_N = mkN "kazoo" ;
lin kea_N = mkN "kea" ;
lin kebab_N = mkN "kebab" "kebabs";
lin kedgeree_N = mkN "kedgeree" ;
lin keel_N = mkN "keel" "keels";
lin keel_V = mkV "keel" "keels" "keeled" "keeled" "keeling";
lin keel_V2 = mkV2 (mkV "keel" "keels" "keeled" "keeled" "keeling");
lin keelboat_N = mkN "keelboat" ;
lin keelson_N = mkN "keelson" ;
lin keen_A = mkA "keen" "keener";
lin keen_N = mkN "keen" "keens";
lin keen_V = mkV "keen" "keens" "keened" "keened" "keening";
lin keen_V2 = mkV2 (mkV "keen" "keens" "keened" "keened" "keening");
lin keenness_N = mkN "keenness" ;
lin keep_N = mkN "keep" "keeps";
lin keep_V = IrregEng.keep_V;
lin keep_V2 = mkV2 (IrregEng.keep_V);
lin keep_V2A = mkV2A (IrregEng.keep_V) noPrep;
lin keep_VA = mkVA (IrregEng.keep_V);
lin keep_VS = mkVS (IrregEng.keep_V);
lin keep_VV = ingVV (IrregEng.keep_V);
lin keep_ing_V2V = ingV2V (IrregEng.keep_V) noPrep noPrep;
lin keep_to_V2V = mkV2V (IrregEng.keep_V) noPrep to_Prep;
lin keeper_N = mkN "keeper" "keepers";
lin keeping_N = mkN "keeping" ;
lin keepsake_N = mkN "keepsake" "keepsakes";
lin keeshond_N = mkN "keeshond" ;
lin keg_N = mkN "keg" "kegs";
lin keighley_PN = mkPN "Keighley";
lin keith_PN = mkPN "Keith";
lin keloid_N = mkN "keloid" ;
lin kelp_N = mkN "kelp" ;
lin kelpie_N = mkN "kelpie" ;
lin kelpy_N = mkN "kelpy" ;
lin kelso_PN = mkPN "Kelso";
lin kelt_N = mkN "kelt" "kelts";
lin kelty_PN = mkPN "Kelty";
lin kelvin_N = mkN "kelvin" ;
lin kempt_A = mkA "kempt" ;
lin kemsing_PN = mkPN "Kemsing";
lin ken_N = mkN "ken" ;
lin ken_PN = mkPN "Ken";
lin ken_V2 = mkV2 (mkV "ken" "kens" "kenned" "kenned" "kenning");
lin kenaf_N = mkN "kenaf" ;
lin kendal_PN = mkPN "Kendal";
lin kenilworth_PN = mkPN "Kenilworth";
lin kennel_N = mkN "kennel" "kennels";
lin kennel_V = mkV "kennel" "kennels" "kennelled" "kennelled" "kennelling";
lin kennel_V2 = mkV2 (mkV "kennel" "kennels" "kennelled" "kennelled" "kennelling");
lin kenneth_PN = mkPN "Kenneth";
lin kenning_N = mkN "kenning" ;
lin kenny_PN = mkPN "Kenny";
lin kensington_PN = mkPN "Kensington";
lin kent_PN = mkPN "Kent";
lin kentucky_PN = mkPN "Kentucky";
lin kenya_PN = mkPN "Kenya";
lin kenyan_A = compoundA (mkA "kenyan");
lin kenyan_N = mkN "kenyan" "kenyans";
lin kepi_N = mkN "kepi" "kepis";
lin keratalgia_N = mkN "keratalgia" ;
lin keratectasia_N = mkN "keratectasia" ;
lin keratin_N = mkN "keratin" ;
lin keratinization_N = mkN "keratinization" ;
lin keratitis_N = mkN "keratitis" ;
lin keratoacanthoma_N = mkN "keratoacanthoma" ;
lin keratocele_N = mkN "keratocele" ;
lin keratoconjunctivitis_N = mkN "keratoconjunctivitis" ;
lin keratoconus_N = mkN "keratoconus" ;
lin keratoderma_N = mkN "keratoderma" ;
lin keratohyalin_N = mkN "keratohyalin" ;
lin keratoiritis_N = mkN "keratoiritis" ;
lin keratomalacia_N = mkN "keratomalacia" ;
lin keratomycosis_N = mkN "keratomycosis" ;
lin keratonosis_N = mkN "keratonosis" ;
lin keratonosus_N = mkN "keratonosus" ;
lin keratoplasty_N = mkN "keratoplasty" ;
lin keratoscleritis_N = mkN "keratoscleritis" ;
lin keratoscope_N = mkN "keratoscope" ;
lin keratoscopy_N = mkN "keratoscopy" ;
lin keratosis_N = mkN "keratosis" ;
lin keratotomy_N = mkN "keratotomy" ;
lin kerb_N = mkN "kerb" "kerbs";
lin kerbstone_N = mkN "kerbstone" "kerbstones";
lin kerchief_N = mkN "kerchief" "kerchiefs";
lin kerion_N = mkN "kerion" ;
lin kern_N = mkN "kern" ;
lin kernel_N = mkN "kernel" "kernels";
lin kernicterus_N = mkN "kernicterus" ;
lin kernite_N = mkN "kernite" ;
lin kerosene_N = mkN "kerosene" ;
lin kerry_PN = mkPN "Kerry";
lin kerygma_N = mkN "kerygma" ;
lin kestrel_N = mkN "kestrel" "kestrels";
lin ketamine_N = mkN "ketamine" ;
lin ketch_N = mkN "ketch" "ketches";
lin ketchup_N = mkN "ketchup" ;
lin keteleeria_N = mkN "keteleeria" ;
lin ketembilla_N = mkN "ketembilla" ;
lin ketoacidosis_N = mkN "ketoacidosis" ;
lin ketohexose_N = mkN "ketohexose" ;
lin ketone_N = mkN "ketone" ;
lin ketonemia_N = mkN "ketonemia" ;
lin ketonuria_N = mkN "ketonuria" ;
lin ketoprofen_N = mkN "ketoprofen" ;
lin ketorolac_N = mkN "ketorolac" ;
lin ketose_N = mkN "ketose" ;
lin ketosteroid_N = mkN "ketosteroid" ;
lin kettering_PN = mkPN "Kettering";
lin kettle_N = mkN "kettle" "kettles";
lin kettledrum_N = mkN "kettledrum" "kettledrums";
lin keurboom_N = mkN "keurboom" ;
lin kevin_PN = mkPN "Kevin";
lin key_A = mkA "key";
lin key_N = mkN "key";
lin key_V2 = mkV2 (mkV "key" "keys" "keyed" "keyed" "keying");
lin keyboard_N = mkN "keyboard" "keyboards";
lin keyboardist_N = mkN "keyboardist" ;
lin keycard_N = mkN "keycard" ;
lin keyhole_N = mkN "keyhole" "keyholes";
lin keyless_A = compoundA (mkA "keyless");
lin keynote_N = mkN "keynote" "keynotes";
lin keynsham_PN = mkPN "Keynsham";
lin keyring_N = mkN "keyring" "keyrings";
lin keystone_N = mkN "keystone" "keystones";
lin keystroke_N = mkN "keystroke" ;
lin keyword_N = mkN "keyword" "keywords";
lin keyworth_PN = mkPN "Keyworth";
lin kg_N = mkN "kg" "kg";
lin kgb_N = mkN "kgb" ;
lin khadi_N = mkN "khadi" ;
lin khaki_A = compoundA (mkA "khaki");
lin khaki_N = mkN "khaki" ;
lin khakis_N = mkN "khakis" ;
lin khalka_N = mkN "khalka" ;
lin khamsin_N = mkN "khamsin" ;
lin khan_N = mkN "khan" "khans";
lin khanate_N = mkN "khanate" ;
lin kharkov_PN = mkPN "Kharkov";
lin khartoum_PN = mkPN "Khartoum";
lin khimar_N = mkN "khimar" ;
lin khmer_N = mkN "khmer" ;
lin khoum_N = mkN "khoum" ;
lin khukuri_N = mkN "khukuri" ;
lin kiang_N = mkN "kiang" ;
lin kibble_N = mkN "kibble" ;
lin kibbutz_N = mkN "kibbutz" "IRREG";
lin kibbutznik_N = mkN "kibbutznik" "kibbutzniks";
lin kibe_N = mkN "kibe" ;
lin kibibit_N = mkN "kibibit" ;
lin kibitzer_N = mkN "kibitzer" ;
lin kick_N = mkN "kick" "kicks";
lin kick_V = mkV "kick" "kicks" "kicked" "kicked" "kicking";
lin kick_V2 = mkV2 (mkV "kick" "kicks" "kicked" "kicked" "kicking");
lin kick_start_N = mkN "kick-start" "kick-starts";
lin kick_starter_N = mkN "kick-starter" "kick-starters";
lin kickback_N = mkN "kickback" "kickbacks";
lin kicker_N = mkN "kicker" ;
lin kickoff_N = mkN "kickoff" "kickoffs";
lin kicksorter_N = mkN "kicksorter" ;
lin kickstand_N = mkN "kickstand" ;
lin kid_N = mkN "kid" "kids";
lin kid_V = mkV "kid" "kids" "kidded" "kidded" "kidding";
lin kid_V2 = mkV2 (mkV "kid" "kids" "kidded" "kidded" "kidding");
lin kidderminster_PN = mkPN "Kidderminster";
lin kiddy_N = mkN "kiddy" "kiddies";
lin kidlington_PN = mkPN "Kidlington";
lin kidnap_V2 = mkV2 (mkV "kidnap" "kidnaps" "kidnapped" "kidnapped" "kidnapping");
lin kidnapper_N = mkN "kidnapper" "kidnappers";
lin kidnapping_N = mkN "kidnapping" ;
lin kidney_N = mkN "kidney" "kidneys";
lin kidney_bean_N = mkN "kidney-bean" "kidney-beans";
lin kidsgrove_PN = mkPN "Kidsgrove";
lin kieserite_N = mkN "kieserite" ;
lin kiev_PN = mkPN "Kiev";
lin kike_N = mkN "kike" ;
lin kilbirnie_PN = mkPN "Kilbirnie";
lin kildare_PN = mkPN "Kildare";
lin kilderkin_N = mkN "kilderkin" ;
lin kilkenny_PN = mkPN "Kilkenny";
lin kill_N = mkN "kill" "IRREG";
lin kill_V = mkV "kill" "kills" "killed" "killed" "killing";
lin kill_V2 = mkV2 (mkV "kill" "kills" "killed" "killed" "killing");
lin killable_A = mkA "killable" ;
lin killarney_PN = mkPN "Killarney";
lin killdeer_N = mkN "killdeer" ;
lin killer_N = mkN "killer" "killers";
lin killifish_N = mkN "killifish" ;
lin killing_N = mkN "killing" "killings";
lin killingly_Adv = mkAdv "killingly" ;
lin killjoy_N = mkN "killjoy" "killjoys";
lin kilmarnock_PN = mkPN "Kilmarnock";
lin kiln_N = mkN "kiln" "kilns";
lin kilo_N = mkN "kilo" "kilos";
lin kilobit_N = mkN "kilobit" ;
lin kilobyte_N = mkN "kilobyte" ;
lin kilocycle_N = mkN "kilocycle" "kilocycles";
lin kilogram_N = mkN (variants {"kilogram"; "kilogramme"});
lin kilohertz_N = mkN "kilohertz" ;
lin kilolitre_N = variants {mkN "kilolitre" "kilolitres"; mkN "kiloliter" "kiloliters"};
lin kilometre_N = variants {mkN "kilometre" "kilometres"; mkN "kilometer" "kilometers"};
lin kiloton_N = mkN "kiloton" ;
lin kilovolt_N = mkN "kilovolt" ;
lin kilowatt_N = mkN "kilowatt" "kilowatts";
lin kilsyth_PN = mkPN "Kilsyth";
lin kilt_N = mkN "kilt" "kilts";
lin kilter_N = mkN "kilter" ;
lin kilwinning_PN = mkPN "Kilwinning";
lin kimberley_PN = mkPN "Kimberley";
lin kimberlite_N = mkN "kimberlite" ;
lin kimono_N = mkN "kimono" "kimonos";
lin kin_N = mkN "kin" ;
lin kina_N = mkN "kina" ;
lin kinanesthesia_N = mkN "kinanesthesia" ;
lin kinase_N = mkN "kinase" ;
lin kind_A = mkA "kind" "kinder";
lin kind_N = mkN "kind" "kinds";
lin kind_hearted_A = compoundA (mkA "kind-hearted");
lin kinda_Adv = mkAdv "kinda";
lin kindergarten_N = mkN "kindergarten" "kindergartens";
lin kindhearted_A = mkA "kindhearted" ;
lin kindheartedness_N = mkN "kindheartedness" ;
lin kindle_V = mkV "kindle" "kindles" "kindled" "kindled" "kindling";
lin kindle_V2 = mkV2 (mkV "kindle" "kindles" "kindled" "kindled" "kindling");
lin kindliness_N = mkN "kindliness" ;
lin kindling_N = mkN "kindling" ;
lin kindly_A = mkA "kindly" "kindlier";
lin kindness_N = mkN "kindness" "kindnesses";
lin kindred_A = compoundA (mkA "kindred");
lin kindred_N = mkN "kindred" ;
lin kinematics_N = mkN "kinematics" ;
lin kinescope_N = mkN "kinescope" ;
lin kinesiology_N = mkN "kinesiology" ;
lin kinesis_N = mkN "kinesis" ;
lin kinesthesia_N = mkN "kinesthesia" ;
lin kinesthesis_N = mkN "kinesthesis" ;
lin kinesthetic_A = mkA "kinesthetic" ;
lin kinesthetically_Adv = mkAdv "kinesthetically" ;
lin kinetic_A = compoundA (mkA "kinetic");
lin kinetics_N = mkN "kinetics" "kinetics";
lin king's_lynn_PN = mkPN "King's lynn";
lin king_N = mkN masculine (mkN "king" "kings");
lin king_size_A = compoundA (mkA "king-size");
lin king_sized_A = compoundA (mkA "king-sized");
lin kingbird_N = mkN "kingbird" ;
lin kingbolt_N = mkN "kingbolt" ;
lin kingcup_N = mkN "kingcup" "kingcups";
lin kingdom_N = mkN "kingdom" "kingdoms";
lin kingfish_N = mkN "kingfish" ;
lin kingfisher_N = mkN "kingfisher" "kingfishers";
lin kinglet_N = mkN "kinglet" ;
lin kinglike_A = compoundA (mkA "kinglike");
lin kingly_A = compoundA (mkA "kingly");
lin kingmaker_N = mkN "kingmaker" ;
lin kingpin_N = mkN "kingpin" "kingpins";
lin kingsbury_PN = mkPN "Kingsbury";
lin kingship_N = mkN "kingship" ;
lin kingsteignton_PN = mkPN "Kingsteignton";
lin kingston_PN = mkPN "Kingston";
lin kingston_upon_hull_PN = mkPN "Kingston upon hull";
lin kingston_upon_thames_PN = mkPN "Kingston upon thames";
lin kingwood_N = mkN "kingwood" ;
lin kinin_N = mkN "kinin" ;
lin kink_N = mkN "kink" "kinks";
lin kink_V = mkV "kink" "kinks" "kinked" "kinked" "kinking";
lin kink_V2 = mkV2 (mkV "kink" "kinks" "kinked" "kinked" "kinking");
lin kinkajou_N = mkN "kinkajou" ;
lin kinky_A = mkA "kinky" "kinkier";
lin kino_N = mkN "kino" ;
lin kinshasa_PN = mkPN "Kinshasa";
lin kinship_N = mkN "kinship" ;
lin kinsman_N = mkN masculine (mkN "kinsman" "kinsmen");
lin kinswoman_N = mkN feminine (mkN "kinswoman" "kinswomen");
lin kiosk_N = mkN "kiosk" "kiosks";
lin kip_N = mkN "kip" "kips";
lin kip_V = mkV "kip" "kips" "kipped" "kipped" "kipping";
lin kippax_PN = mkPN "Kippax";
lin kipper_N = mkN "kipper" "kippers";
lin kirin_PN = mkPN "Kirin";
lin kirk_N = mkN "kirk" "kirks";
lin kirkby_PN = mkPN "Kirkby";
lin kirkby_in_ashfield_PN = mkPN "Kirkby in ashfield";
lin kirkcaldy_PN = mkPN "Kirkcaldy";
lin kirkham_PN = mkPN "Kirkham";
lin kirkintilloch_PN = mkPN "Kirkintilloch";
lin kirkwall_PN = mkPN "Kirkwall";
lin kirpan_N = mkN "kirpan" ;
lin kirsch_N = mkN "kirsch" ;
lin kirtle_N = mkN "kirtle" "kirtles";
lin kishke_N = mkN "kishke" ;
lin kismet_N = mkN "kismet" ;
lin kiss_N = mkN "kiss" "kisses";
lin kiss_V = mkV "kiss" "kisses" "kissed" "kissed" "kissing";
lin kiss_V2 = mkV2 (mkV "kiss" "kisses" "kissed" "kissed" "kissing");
lin kisser_N = mkN "kisser" "kissers";
lin kit_N = mkN "kit" "kits";
lin kit_V2 = mkV2 (mkV "kit" "kits" "kitted" "kitted" "kitting");
lin kitakyushu_PN = mkPN "Kitakyushu";
lin kitbag_N = mkN "kitbag" "kitbags";
lin kitchen_N = mkN "kitchen" "kitchens";
lin kitchenette_N = mkN "kitchenette" "kitchenettes";
lin kitchenware_N = mkN "kitchenware" ;
lin kite_N = mkN "kite" "kites";
lin kite_balloon_N = mkN "kite-balloon" "kite-balloons";
lin kith_N = mkN "kith" ;
lin kitsch_A = compoundA (mkA "kitsch");
lin kitsch_N = mkN "kitsch" ;
lin kittee_N = mkN "kittee" ;
lin kitten_N = mkN "kitten" "kittens";
lin kittenish_A = compoundA (mkA "kittenish");
lin kittiwake_N = mkN "kittiwake" ;
lin kitty_N = mkN "kitty" "kitties";
lin kitty_PN = mkPN "Kitty";
lin kiwi_N = mkN "kiwi" "kiwis";
lin klavern_N = mkN "klavern" ;
lin klaxon_N = mkN "klaxon" "klaxons";
lin klebsiella_N = mkN "klebsiella" ;
lin kleenex_N = mkN "kleenex" "kleenexes";
lin kleptomania_N = mkN "kleptomania" ;
lin kleptomaniac_N = mkN "kleptomaniac" "kleptomaniacs";
lin klondike_N = mkN "klondike" ;
lin kludge_N = mkN "kludge" ;
lin klutz_N = mkN "klutz" ;
lin klystron_N = mkN "klystron" ;
lin km_N = mkN "km" "km";
lin knack_N = mkN "knack" "knacks";
lin knacker_N = mkN "knacker" "knackers";
lin knackered_A = mkA "knackered" ;
lin knackwurst_N = mkN "knackwurst" ;
lin knap_V2 = mkV2 (mkV "knap" "knaps" "knapped" "knapped" "knapping");
lin knapsack_N = mkN "knapsack" "knapsacks";
lin knapweed_N = mkN "knapweed" ;
lin knaresborough_PN = mkPN "Knaresborough";
lin knave_N = mkN "knave" "knaves";
lin knavery_N = mkN "knavery" "knaveries";
lin knavish_A = compoundA (mkA "knavish");
lin knawel_N = mkN "knawel" ;
lin knead_V = mkV "knead";
lin knead_V2 = mkV2 (mkV "knead" "kneads" "kneaded" "kneaded" "kneading");
lin knee_N = mkN "knee" "knees";
lin knee_deep_A = compoundA (mkA "knee-deep");
lin knee_deep_Adv = mkAdv "knee-deep";
lin knee_high_A = compoundA (mkA "knee-high");
lin knee_high_Adv = mkAdv "knee-high";
lin kneecap_N = mkN "kneecap" "kneecaps";
lin kneel_N = mkN "kneel" ;
lin kneel_V = mkV "kneel" "kneels" "kneeled" "kneeled" "kneeling";
lin kneeler_N = mkN "kneeler" ;
lin knell_N = mkN "knell" "IRREG";
lin knesset_N = mkN "knesset" "knessets";
lin knick_knack_N = mkN "knick-knack" "knick-knacks";
lin knickknack_N = mkN "knickknack" ;
lin knife_N = mkN "knife" "knives";
lin knife_V2 = mkV2 (mkV "knife" "knifes" "knifed" "knifed" "knifing");
lin knife_edge_N = mkN "knife-edge" "knife-edges";
lin knifelike_A = mkA "knifelike" ;
lin knight_N = mkN "knight" "knights";
lin knight_V2 = mkV2 (mkV "knight" "knights" "knighted" "knighted" "knighting");
lin knight_errant_N = mkN "knight-errant" "knights-errant";
lin knighthood_N = mkN "knighthood" "knighthoods";
lin knightly_A = compoundA (mkA "knightly");
lin kniphofia_N = mkN "kniphofia" ;
lin knish_N = mkN "knish" ;
lin knit_N = mkN "knit" ;
lin knit_V = mkV "knit" "knits" "knitted" "knitted" "knitting";
lin knit_V2 = mkV2 (mkV "knit" "knits" "knitted" "knitted" "knitting");
lin knitter_N = mkN "knitter" "knitters";
lin knitting_N = mkN "knitting" ;
lin knitting_machine_N = mkN "knitting-machine" "knitting-machines";
lin knitting_needle_N = mkN "knitting-needle" "knitting-needles";
lin knitwear_N = mkN "knitwear" ;
lin knob_N = mkN "knob" "knobs";
lin knobble_N = mkN "knobble" "knobbles";
lin knobbly_A = mkA "knobbly" "knobblier";
lin knobby_A = mkA "knobby" ;
lin knobkerrie_N = mkN "knobkerrie" "knobkerries";
lin knock_N = mkN "knock" "knocks";
lin knock_V = mkV "knock" "knocks" "knocked" "knocked" "knocking";
lin knock_V2 = mkV2 (mkV "knock" "knocks" "knocked" "knocked" "knocking");
lin knock_kneed_A = compoundA (mkA "knock-kneed");
lin knock_on_N = mkN "knock-on" "knock-ons";
lin knockabout_A = compoundA (mkA "knockabout");
lin knockabout_N = mkN "knockabout" ;
lin knockdown_A = compoundA (mkA "knockdown");
lin knockdown_N = mkN "knockdown" ;
lin knocker_N = mkN "knocker" "knockers";
lin knockoff_N = mkN "knockoff" ;
lin knockout_A = compoundA (mkA "knockout");
lin knockout_N = mkN "knockout" "knockouts";
lin knoll_N = mkN "knoll" "knolls";
lin knot_N = mkN "knot" "knots";
lin knot_V = mkV "knot" "knots" "knotted" "knotted" "knotting";
lin knot_V2 = mkV2 (mkV "knot" "knots" "knotted" "knotted" "knotting");
lin knotgrass_N = mkN "knotgrass" ;
lin knothole_N = mkN "knothole" "knotholes";
lin knottingley_PN = mkPN "Knottingley";
lin knotty_A = mkA "knotty" "knottier";
lin knout_N = mkN "knout" "knouts";
lin know_N = mkN "know" "knows";
lin know_V = mkV "know" "knows" "knew" "known" "knowing";
lin know_V2 = mkV2 (mkV "know" "knows" "knew" "known" "knowing");
lin know_V2V = mkV2V (mkV "know" "knows" "knew" "known" "knowing") noPrep to_Prep ;
lin know_VQ = mkVQ (mkV "know" "knows" "knew" "known" "knowing");
lin know_VS = mkVS (mkV "know" "knows" "knew" "known" "knowing");
lin know_all_N = mkN "know-all" "know-alls";
lin know_how_N = mkN "know-how" ;
lin knowable_A = mkA "knowable" ;
lin knower_N = mkN "knower" ;
lin knowing_N = mkN "knowing" ;
lin knowingness_N = mkN "knowingness" ;
lin knowledge_N = mkN "knowledge" ;
lin knowledgeability_N = mkN "knowledgeability" ;
lin knowledgeable_A = compoundA (mkA "knowledgeable");
lin knuckle_N = mkN "knuckle" "knuckles";
lin knuckle_V = mkV "knuckle" "knuckles" "knuckled" "knuckled" "knuckling";
lin knuckleball_N = mkN "knuckleball" ;
lin knutsford_PN = mkPN "Knutsford";
lin ko_N = mkN "ko" ;
lin koala_N = mkN "koala" "koalas";
lin koan_N = mkN "koan" ;
lin kob_N = mkN "kob" ;
lin kobe_PN = mkPN "Kobe";
lin koblenz_PN = mkPN "Koblenz";
lin kobo_N = mkN "kobo" "kobos";
lin kohl_N = mkN "kohl" ;
lin kohleria_N = mkN "kohleria" ;
lin kohlrabi_N = mkN "kohlrabi" "kohlrabis";
lin koinonia_N = mkN "koinonia" ;
lin kola_N = mkN "kola" "kolas";
lin kola_nut_N = mkN "kola-nut" "kola-nuts";
lin kolkhoz_N = mkN "kolkhoz" ;
lin kolkhoznik_N = mkN "kolkhoznik" ;
lin koln_PN = mkPN "Koln";
lin komondor_N = mkN "komondor" ;
lin konini_N = mkN "konini" ;
lin kook_N = mkN "kook" ;
lin kookaburra_N = mkN "kookaburra" "kookaburras";
lin kopeck_N = mkN "kopeck" "kopecks";
lin kopek_N = mkN "kopek" ;
lin kopiyka_N = mkN "kopiyka" ;
lin kopje_N = mkN "kopje" "kopjes";
lin koppie_N = mkN "koppie" "koppies";
lin koran_N = mkN "koran" "korans";
lin koranic_A = compoundA (mkA "koranic");
lin korea_PN = mkPN "Korea";
lin korean_A = compoundA (mkA "korean");
lin korean_N = mkN "korean" "koreans";
lin koruna_N = mkN "koruna" ;
lin kos_N = mkN "kos" ;
lin kosher_A = compoundA (mkA "kosher");
lin kosher_N = mkN "kosher" ;
lin koto_N = mkN "koto" ;
lin kotow_N = mkN "kotow" "kotows";
lin kotow_V = mkV "kotow" "kotows" "kotowed" "kotowed" "kotowing";
lin koumiss_N = mkN "koumiss" ;
lin kowhai_N = mkN "kowhai" ;
lin kowtow_N = mkN "kowtow" "kowtows";
lin kowtow_V = mkV "kowtow" "kowtows" "kowtowed" "kowtowed" "kowtowing";
lin kraal_N = mkN "kraal" "kraals";
lin kraft_N = mkN "kraft" ;
lin krait_N = mkN "krait" ;
lin krakow_PN = mkPN "Krakow";
lin krasnoyarsk_PN = mkPN "Krasnoyarsk";
lin kraurosis_N = mkN "kraurosis" ;
lin krefeld_PN = mkPN "Krefeld";
lin kremlin_N = mkN "kremlin" "kremlins";
lin krigia_N = mkN "krigia" ;
lin krill_N = mkN "krill" ;
lin kris_N = mkN "kris" ;
lin krivoi_rog_PN = mkPN "Krivoi rog";
lin krona_N = mkN "krona" "kronae";
lin krone_N = mkN "krone" "IRREG";
lin kroon_N = mkN "kroon" ;
lin krubi_N = mkN "krubi" ;
lin krummhorn_N = mkN "krummhorn" ;
lin krypton_N = mkN "krypton" ;
lin kudos_N = mkN "kudos" ;
lin kudu_N = mkN "kudu" ;
lin kudzu_N = mkN "kudzu" ;
lin kumis_N = mkN "kumis" ;
lin kummel_N = mkN "kümmel" ;
lin kumquat_N = mkN "kumquat" ;
lin kung_fu_N = mkN "kung fu" ;
lin kunming_PN = mkPN "Kunming";
lin kunzite_N = mkN "kunzite" ;
lin kurd_N = mkN "Kurd";
lin kurrajong_N = mkN "kurrajong" ;
lin kurta_N = mkN "kurta" ;
lin kuru_N = mkN "kuru" ;
lin kurus_N = mkN "kurus" ;
lin kuvasz_N = mkN "kuvasz" ;
lin kuwait_PN = mkPN "Kuwait";
lin kuwait_city_PN = mkPN "Kuwait city";
lin kuwaiti_A = compoundA (mkA "kuwaiti");
lin kuwaiti_N = mkN "kuwaiti" "kuwaitis";
lin kuybyshev_PN = mkPN "Kuybyshev";
lin kvass_N = mkN "kvass" ;
lin kvetch_N = mkN "kvetch" ;
lin kw_N = mkN "kw" "kw";
lin kwacha_N = mkN "kwacha" "kwacha";
lin kwanza_N = mkN "kwanza" ;
lin kwashiorkor_N = mkN "kwashiorkor" ;
lin kweiyang_PN = mkPN "Kweiyang";
lin kwela_N = mkN "kwela" ;
lin kyanite_N = mkN "kyanite" ;
lin kyat_N = mkN "kyat" ;
lin kylie_N = mkN "kylie" ;
lin kylix_N = mkN "kylix" ;
lin kymograph_N = mkN "kymograph" ;
lin kyoto_PN = mkPN "Kyoto";
lin kyphosis_N = mkN "kyphosis" ;
lin l_plate_N = mkN "l-plate" "l-plates";
lin la_N = mkN "la" "lae";
lin la_PN = mkPN "La";
lin la_di_da_A = compoundA (mkA "la-di-da");
lin la_habana_PN = mkPN "La habana";
lin la_paz_PN = mkPN "La paz";
lin la_plata_PN = mkPN "La plata";
lin la_spezia_PN = mkPN "La spezia";
lin laager_N = mkN "laager" "laagers";
lin lab_N = mkN "lab" "labs";
lin lab_PN = mkPN "Lab";
lin labdanum_N = mkN "labdanum" ;
lin label_N = mkN "label" "labels";
lin label_V = mkV "label";
lin label_V2 = mkV2 (mkV "label" (variants {"labelled"; "labeled"}));
lin label_V2A = mkV2A (mkV "label" (variants {"labelled"; "labeled"})) noPrep;
lin label_V3 = mkV3 (mkV "label" (variants {"labelled"; "labeled"}));
lin labeled_A = mkA "labeled" ;
lin labetalol_N = mkN "labetalol" ;
lin labial_A = compoundA (mkA "labial");
lin labiate_A = mkA "labiate" ;
lin labile_A = mkA "labile" ;
lin labium_N = mkN "labium" ;
lin laboratory_N = mkN "laboratory" "laboratories";
lin labored_A = mkA "labored" ;
lin laborer_N = mkN "laborer" ;
lin laborious_A = compoundA (mkA "laborious");
lin laboriousness_N = mkN "laboriousness" ;
lin laborsaving_A = mkA "laborsaving" ;
lin labour_N = mkN (variants {"labour" | "labor"});
lin labour_V = variants {mkV "labour" "labours" "laboured" "laboured" "labouring";
                         mkV "labor" "labors" "labored" "labored" "laboring"};
lin labour_V2 = mkV2 (variants {mkV "labour" "labours" "laboured" "laboured" "labouring";
                                mkV "labor" "labors" "labored" "labored" "laboring"});
lin labour_saving_A = compoundA (mkA "labour-saving");
lin labourer_N = mkN "labourer" "labourers";
lin labourite_N = mkN "labourite" "labourites";
lin labrador_PN = mkPN "Labrador";
lin laburnum_N = mkN "laburnum" "laburnums";
lin labyrinth_N = mkN "labyrinth" "labyrinths";
lin labyrinthine_A = compoundA (mkA "labyrinthine");
lin labyrinthitis_N = mkN "labyrinthitis" ;
lin labyrinthodont_N = mkN "labyrinthodont" ;
lin lac_N = mkN "lac" ;
lin lace_N = mkN "lace" "laces";
lin lace_V = mkV "lace" "laces" "laced" "laced" "lacing";
lin lace_V2 = mkV2 (mkV "lace" "laces" "laced" "laced" "lacing");
lin lacebark_N = mkN "lacebark" ;
lin lacer_N = mkN "lacer" ;
lin lacerate_A = mkA "lacerate" ;
lin lacerate_V2 = mkV2 (mkV "lacerate" "lacerates" "lacerated" "lacerated" "lacerating");
lin laceration_N = mkN "laceration" "lacerations";
lin lacewing_N = mkN "lacewing" ;
lin lacework_N = mkN "lacework" ;
lin lachrymal_A = compoundA (mkA "lachrymal");
lin lachrymose_A = compoundA (mkA "lachrymose");
lin lacing_N = mkN "lacing" ;
lin lack_N = mkN "lack" ;
lin lack_V = mkV "lack" "lacks" "lacked" "lacked" "lacking";
lin lack_V2 = mkV2 (mkV "lack" "lacks" "lacked" "lacked" "lacking");
lin lack_lustre_A = compoundA (mkA "lack-lustre");
lin lackadaisical_A = compoundA (mkA "lackadaisical");
lin lackey_N = mkN "lackey" "lackeys";
lin lackluster_A = mkA "lackluster" ;
lin laconic_A = compoundA (mkA "laconic");
lin laconically_Adv = mkAdv "laconically";
lin laconicism_N = mkN "laconicism" "laconicisms";
lin laconism_N = mkN "laconism" "laconisms";
lin lacquer_N = mkN "lacquer" "lacquers";
lin lacquer_V2 = mkV2 (mkV "lacquer" "lacquers" "lacquered" "lacquered" "lacquering");
lin lacquerware_N = mkN "lacquerware" ;
lin lacrimal_A = mkA "lacrimal" ;
lin lacrimation_N = mkN "lacrimation" ;
lin lacrimatory_A = mkA "lacrimatory" ;
lin lacrosse_N = mkN "lacrosse" ;
lin lactalbumin_N = mkN "lactalbumin" ;
lin lactase_N = mkN "lactase" ;
lin lactate_N = mkN "lactate" ;
lin lactation_N = mkN "lactation" ;
lin lacteal_A = mkA "lacteal" ;
lin lacteal_N = mkN "lacteal" ;
lin lactic_A = compoundA (mkA "lactic");
lin lactifuge_N = mkN "lactifuge" ;
lin lactobacillus_N = mkN "lactobacillus" ;
lin lactogen_N = mkN "lactogen" ;
lin lactogenic_A = mkA "lactogenic" ;
lin lactose_N = mkN "lactose" ;
lin lactosuria_N = mkN "lactosuria" ;
lin lacuna_N = mkN "lacuna" "lacunas";
lin lacustrine_A = mkA "lacustrine" ;
lin lacy_A = mkA "lacy" "lacier";
lin lad_N = mkN "lad" "lads";
lin ladder_N = mkN "ladder" "ladders";
lin ladder_V = mkV "ladder" "ladders" "laddered" "laddered" "laddering";
lin ladder_proof_A = compoundA (mkA "ladder-proof");
lin laddie_N = mkN "laddie" "laddies";
lin lade_V2 = mkV2 (mkV "lade" "IRREG" "IRREG" "IRREG" "IRREG");
lin laden_A = compoundA (mkA "laden");
lin lading_N = mkN "lading" ;
lin ladle_N = mkN "ladle" "ladles";
lin ladle_V2 = mkV2 (mkV "ladle" "ladles" "ladled" "ladled" "ladling");
lin lady's_maid_N = mkN "lady's-maid" "lady's-maids";
lin lady_N = mkN "lady" "ladies";
lin lady_chapel_N = mkN "lady-chapel" "lady-chapels";
lin lady_in_waiting_N = mkN "lady-in-waiting" "ladies-in-waiting";
lin lady_killer_N = mkN "lady-killer" "lady-killers";
lin ladybird_N = mkN "ladybird" "ladybirds";
lin ladybug_N = mkN "ladybug" ;
lin ladyfinger_N = mkN "ladyfinger" ;
lin ladyfish_N = mkN "ladyfish" ;
lin ladylike_A = compoundA (mkA "ladylike");
lin ladylikeness_N = mkN "ladylikeness" ;
lin ladylove_N = mkN "ladylove" ;
lin ladyship_N = mkN "ladyship" "ladyships";
lin laelia_N = mkN "laelia" ;
lin laetrile_N = mkN "laetrile" ;
lin lag_N = mkN "lag" "lags";
lin lag_V = mkV "lag" "lags" "lagged" "lagged" "lagging";
lin lag_V2 = mkV2 (mkV "lag" "lags" "lagged" "lagged" "lagging");
lin lagan_N = mkN "lagan" ;
lin lager_N = mkN "lager" "lagers";
lin lagerphone_N = mkN "lagerphone" ;
lin laggard_N = mkN "laggard" "laggards";
lin lagging_N = mkN "lagging" ;
lin lagniappe_N = mkN "lagniappe" ;
lin lagomorph_N = mkN "lagomorph" ;
lin lagoon_N = mkN "lagoon" "lagoons";
lin lagophthalmos_N = mkN "lagophthalmos" ;
lin lagos_PN = mkPN "Lagos";
lin lahar_N = mkN "lahar" ;
lin lahore_PN = mkPN "Lahore";
lin laic_A = compoundA (mkA "laic");
lin laicize_V2 = mkV2 (mkV "laicize" "laicizes" "laicized" "laicized" "laicizing");
lin lair_N = mkN "lair" "lairs";
lin laird_N = mkN "laird" "lairds";
lin laissez_faire_N = mkN "laissez-faire" ;
lin laity_N = mkN "laity" "laities";
lin lake_N = mkN "lake" "lakes";
lin lakefront_N = mkN "lakefront" ;
lin lakenheath_PN = mkPN "Lakenheath";
lin lakeside_N = mkN "lakeside" ;
lin lakh_N = mkN "lakh" "lakhs";
lin lallation_N = mkN "lallation" ;
lin lally_N = mkN "lally" ;
lin lam_V = mkV "lam" "lams" "lammed" "lammed" "lamming";
lin lam_V2 = mkV2 (mkV "lam" "lams" "lammed" "lammed" "lamming");
lin lama_N = mkN "lama" "lamas";
lin lamasery_N = mkN "lamasery" "lamaseries";
lin lamb_N = mkN "lamb" "lambs";
lin lamb_V = mkV "lamb" "lambs" "lambed" "lambed" "lambing";
lin lambaste_V2 = mkV2 (mkV "lambaste" "lambastes" "lambasted" "lambasted" "lambasting");
lin lambda_N = mkN "lambda" ;
lin lambdacism_N = mkN "lambdacism" ;
lin lambency_N = mkN "lambency" ;
lin lambent_A = compoundA (mkA "lambent");
lin lambert_N = mkN "lambert" ;
lin lambeth_PN = mkPN "Lambeth";
lin lambkin_N = mkN "lambkin" "lambkins";
lin lamblike_A = mkA "lamblike" ;
lin lambrequin_N = mkN "lambrequin" ;
lin lambskin_N = mkN "lambskin" "lambskins";
lin lame_A = mkA "lame" "lamer";
lin lame_N = mkN "lamé" ;
lin lame_V2 = mkV2 (mkV "lame" "lames" "lamed" "lamed" "laming");
lin lamedh_N = mkN "lamedh" ;
lin lamella_N = mkN "lamella" ;
lin lamellibranch_A = mkA "lamellibranch" ;
lin lameness_N = mkN "lameness" ;
lin lament_N = mkN "lament" "laments";
lin lament_V = mkV "lament" "laments" "lamented" "lamented" "lamenting";
lin lament_V2 = mkV2 (mkV "lament" "laments" "lamented" "lamented" "lamenting");
lin lament_VS = mkVS (mkV "lament" "laments" "lamented" "lamented" "lamenting");
lin lamentable_A = compoundA (mkA "lamentable");
lin lamentation_N = mkN "lamentation" "lamentations";
lin lamina_N = mkN "lamina" ;
lin laminar_A = mkA "laminar" ;
lin laminate_N = mkN "laminate" ;
lin laminate_V = mkV "laminate" "laminates" "laminated" "laminated" "laminating";
lin laminate_V2 = mkV2 (mkV "laminate" "laminates" "laminated" "laminated" "laminating");
lin lamination_N = mkN "lamination" ;
lin laminator_N = mkN "laminator" ;
lin laminectomy_N = mkN "laminectomy" ;
lin laminitis_N = mkN "laminitis" ;
lin lamivudine_N = mkN "lamivudine" ;
lin lammas_N = mkN "lammas" "lammases";
lin lammas_PN = mkPN "Lammas";
lin lamp_N = mkN "lamp" "lamps";
lin lamp_black_N = mkN "lamp-black" ;
lin lamplight_N = mkN "lamplight" ;
lin lamplighter_N = mkN "lamplighter" "lamplighters";
lin lamplit_A = compoundA (mkA "lamplit");
lin lampoon_N = mkN "lampoon" "lampoons";
lin lampoon_V2 = mkV2 (mkV "lampoon" "lampoons" "lampooned" "lampooned" "lampooning");
lin lamppost_N = mkN "lamppost" "lampposts";
lin lamprey_N = mkN "lamprey" "lampreys";
lin lampshade_N = mkN "lampshade" "lampshades";
lin lanai_N = mkN "lanai" ;
lin lanark_PN = mkPN "Lanark";
lin lanate_A = mkA "lanate" ;
lin lancashire_PN = mkPN "Lancashire";
lin lancaster_PN = mkPN "Lancaster";
lin lancastrian_A = compoundA (mkA "lancastrian");
lin lancastrian_N = mkN "lancastrian" "lancastrians";
lin lance_N = mkN "lance" "lances";
lin lance_V2 = mkV2 (mkV "lance" "lances" "lanced" "lanced" "lancing");
lin lance_corporal_N = mkN "lance-corporal" "lance-corporals";
lin lancelet_N = mkN "lancelet" ;
lin lanceolate_A = mkA "lanceolate" ;
lin lancer_N = mkN "lancer" "lancers";
lin lancers_N = mkN "lancers" ;
lin lancet_N = mkN "lancet" "lancets";
lin lancetfish_N = mkN "lancetfish" ;
lin lancewood_N = mkN "lancewood" ;
lin lanchow_PN = mkPN "Lanchow";
lin lancing_PN = mkPN "Lancing";
lin land_N = mkN "land" "lands";
lin land_V = mkV "land" "lands" "landed" "landed" "landing";
lin land_V2 = mkV2 (mkV "land" "lands" "landed" "landed" "landing");
lin land_agent_N = mkN "land-agent" "land-agents";
lin landau_N = mkN "landau" "landaus";
lin lander_N = mkN "lander" ;
lin landfall_N = mkN "landfall" "landfalls";
lin landfill_N = mkN "landfill" ;
lin landgrave_N = mkN "landgrave" "landgraves";
lin landholder_N = mkN "landholder" "landholders";
lin landholding_N = mkN "landholding" ;
lin landing_N = mkN "landing" "landings";
lin landing_craft_N = mkN "landing-craft" "landing-craft";
lin landing_field_N = mkN "landing-field" "landing-fields";
lin landing_gear_N = mkN "landing-gear" ;
lin landing_net_N = mkN "landing-net" "landing-nets";
lin landing_party_N = mkN "landing-party" "landing-parties";
lin landing_place_N = mkN "landing-place" "landing-places";
lin landing_stage_N = mkN "landing-stage" "landing-stages";
lin landing_strip_N = mkN "landing-strip" "landing-strips";
lin landlady_N = mkN feminine (mkN "landlady" "landladies");
lin landler_N = mkN "landler" ;
lin landless_A = compoundA (mkA "landless");
lin landlocked_A = compoundA (mkA "landlocked");
lin landlord_N = mkN masculine (mkN "landlord" "landlords");
lin landlubber_N = mkN "landlubber" "landlubbers";
lin landmark_N = mkN "landmark" "landmarks";
lin landmass_N = mkN "landmass" ;
lin landmine_N = mkN "landmine" "landmines";
lin landowner_N = mkN "landowner" "landowners";
lin landrover_N = mkN "landrover" "landrovers";
lin landscape_N = mkN "landscape" "landscapes";
lin landscape_V2 = mkV2 (mkV "landscape" "landscapes" "landscaped" "landscaped" "landscaping");
lin landscaping_N = mkN "landscaping" ;
lin landscapist_N = mkN "landscapist" ;
lin landside_N = mkN "landside" ;
lin landslide_N = mkN "landslide" "landslides";
lin landslip_N = mkN "landslip" "landslips";
lin landsman_N = mkN masculine (mkN "landsman" "landsmen");
lin landward_Adv = mkAdv "landward";
lin lane_N = mkN "lane" "lanes";
lin langbeinite_N = mkN "langbeinite" ;
lin langlaufer_N = mkN "langlaufer" ;
lin langley_N = mkN "langley" ;
lin langsyne_Adv = mkAdv "langsyne";
lin langsyne_N = mkN "langsyne" ;
lin language_N = mkN "language" "languages";
lin languid_A = compoundA (mkA "languid");
lin languish_V = mkV "languish" "languishes" "languished" "languished" "languishing";
lin languisher_N = mkN "languisher" ;
lin languor_N = mkN "languor" ;
lin languorous_A = compoundA (mkA "languorous");
lin langur_N = mkN "langur" "langurs";
lin lank_A = compoundA (mkA "lank");
lin lankiness_N = mkN "lankiness" ;
lin lanky_A = mkA "lanky" "lankier";
lin lanolin_N = mkN "lanolin" ;
lin lanseh_N = mkN "lanseh" ;
lin lansoprazole_N = mkN "lansoprazole" ;
lin lantana_N = mkN "lantana" ;
lin lantern_N = mkN "lantern" "lanterns";
lin lantern_jawed_A = compoundA (mkA "lantern-jawed");
lin lanternfish_N = mkN "lanternfish" ;
lin lanthanum_N = mkN "lanthanum" ;
lin lanugo_N = mkN "lanugo" ;
lin lanyard_N = mkN "lanyard" "lanyards";
lin lao_N = mkN "lao" ;
lin laos_PN = mkPN "Laos";
lin laotian_A = compoundA (mkA "laotian");
lin laotian_N = mkN "laotian" "laotians";
lin lap_N = mkN "lap" "laps";
lin lap_V = mkV "lap" "laps" "lapped" "lapped" "lapping";
lin lap_V2 = mkV2 (mkV "lap" "laps" "lapped" "lapped" "lapping");
lin lap_dog_N = mkN "lap-dog" "lap-dogs";
lin laparocele_N = mkN "laparocele" ;
lin laparoscope_N = mkN "laparoscope" ;
lin laparoscopy_N = mkN "laparoscopy" ;
lin laparotomy_N = mkN "laparotomy" ;
lin lapboard_N = mkN "lapboard" ;
lin lapdog_N = mkN "lapdog" ;
lin lapel_N = mkN "lapel" "lapels";
lin lapful_N = mkN "lapful" ;
lin lapidarian_A = mkA "lapidarian" ;
lin lapidary_A = compoundA (mkA "lapidary");
lin lapidary_N = mkN "lapidary" "lapidaries";
lin lapin_N = mkN "lapin" ;
lin lapis_lazuli_N = mkN "lapis lazuli" "lapis lazulis";
lin lappet_N = mkN "lappet" ;
lin lapse_N = mkN "lapse" "lapses";
lin lapse_V = mkV "lapse" "lapses" "lapsed" "lapsed" "lapsing";
lin lapsed_A = mkA "lapsed" ;
lin laptop_N = mkN "laptop" ;
lin lapwing_N = mkN "lapwing" "lapwings";
lin larboard_A = compoundA (mkA "larboard");
lin larboard_N = mkN "larboard" ;
lin larcenist_N = mkN "larcenist" ;
lin larceny_N = mkN "larceny" "larcenies";
lin larch_N = mkN "larch" "larches";
lin lard_N = mkN "lard" ;
lin lard_V2 = mkV2 (mkV "lard" "lards" "larded" "larded" "larding");
lin larder_N = mkN "larder" "larders";
lin large_A = mkA "large" "larger";
lin large_Adv = mkAdv "large";
lin large_N = mkN "large" ;
lin large_scale_A = compoundA (mkA "large-scale");
lin largemouth_N = mkN "largemouth" ;
lin largeness_N = mkN "largeness" ;
lin largess_N = mkN "largess" ;
lin largesse_N = mkN "largesse" ;
lin larghetto_A = mkA "larghetto" ;
lin larghetto_N = mkN "larghetto" ;
lin larghissimo_A = mkA "larghissimo" ;
lin largish_A = compoundA (mkA "largish");
lin largo_A = mkA "largo" ;
lin largo_Adv = mkAdv "largo" ;
lin largo_N = mkN "largo" "largos";
lin largs_PN = mkPN "Largs";
lin lari_N = mkN "lari" ;
lin lariat_N = mkN "lariat" "lariats";
lin larid_N = mkN "larid" ;
lin lark_N = mkN "lark" "larks";
lin lark_V = mkV "lark" "larks" "larked" "larked" "larking";
lin larkhall_PN = mkPN "Larkhall";
lin larkspur_N = mkN "larkspur" "larkspurs";
lin larn_V = mkV "larn" "larns" "larned" "larned" "larning";
lin larn_V2 = mkV2 (mkV "larn" "larns" "larned" "larned" "larning");
lin larne_PN = mkPN "Larne";
lin larry_PN = mkPN "Larry";
lin larva_N = mkN "larva" "larvae";
lin larvacean_N = mkN "larvacean" ;
lin larvacide_N = mkN "larvacide" ;
lin larval_A = compoundA (mkA "larval");
lin larvicide_N = mkN "larvicide" ;
lin laryngeal_A = mkA "laryngeal" ;
lin laryngectomy_N = mkN "laryngectomy" ;
lin laryngismus_N = mkN "laryngismus" ;
lin laryngitis_N = mkN "laryngitis" ;
lin laryngopharyngeal_A = mkA "laryngopharyngeal" ;
lin laryngopharyngitis_N = mkN "laryngopharyngitis" ;
lin laryngopharynx_N = mkN "laryngopharynx" ;
lin laryngoscope_N = mkN "laryngoscope" ;
lin laryngospasm_N = mkN "laryngospasm" ;
lin laryngostenosis_N = mkN "laryngostenosis" ;
lin laryngotracheobronchitis_N = mkN "laryngotracheobronchitis" ;
lin larynx_N = mkN "larynx" "larynxes";
lin las_palmas_PN = mkPN "Las palmas";
lin lasagna_N = mkN "lasagna" ;
lin lascar_N = mkN "lascar" "lascars";
lin lascivious_A = compoundA (mkA "lascivious");
lin lasciviousness_N = mkN "lasciviousness" ;
lin laser_N = mkN "laser" "lasers";
lin lash_N = mkN "lash" "lashes";
lin lash_V = mkV "lash" "lashes" "lashed" "lashed" "lashing";
lin lash_V2 = mkV2 (mkV "lash" "lashes" "lashed" "lashed" "lashing");
lin lash_up_N = mkN "lash-up" "lash-ups";
lin lasher_N = mkN "lasher" ;
lin lashing_N = mkN "lashing" "lashings";
lin lasiocampid_N = mkN "lasiocampid" ;
lin lass_N = mkN "lass" "lasses";
lin lassie_N = mkN "lassie" "lassies";
lin lassitude_N = mkN "lassitude" ;
lin lasso_N = mkN "lasso" "lassos";
lin lasso_V2 = mkV2 (mkV "lasso" "lassos" "lassoed" "lassoed" "lassoing");
lin last_A = irregAdv (mkA "last") "last";
lin last_N = mkN "last" ;
lin last_V = mkV "last" "lasts" "lasted" "lasted" "lasting";
lin last_V2 = mkV2 (mkV "last" "lasts" "lasted" "lasted" "lasting");
lin lasting_A = mkA "lasting" ;
lin lastingness_N = mkN "lastingness" ;
lin lat_N = mkN "lat" ;
lin latakia_N = mkN "latakia" ;
lin latanier_N = mkN "latanier" ;
lin latch_N = mkN "latch" "latches";
lin latch_V = mkV "latch" "latches" "latched" "latched" "latching";
lin latch_V2 = mkV2 (mkV "latch" "latches" "latched" "latched" "latching");
lin latchet_N = mkN "latchet" ;
lin latchkey_N = mkN "latchkey" "latchkeys";
lin latchstring_N = mkN "latchstring" ;
lin late_A = mkA "late" "later";
lin late_Adv = mkAdv "late";
lin latecomer_N = mkN "latecomer" ;
lin lateen_A = compoundA (mkA "lateen");
lin lateen_N = mkN "lateen" ;
lin latency_N = mkN "latency" ;
lin lateness_N = mkN "lateness" ;
lin latent_A = compoundA (mkA "latent");
lin later_Adv = mkAdv "later" ;
lin lateral_A = compoundA (mkA "lateral");
lin laterality_N = mkN "laterality" ;
lin lateralization_N = mkN "lateralization" ;
lin laterite_N = mkN "laterite" ;
lin latest_A = mkA "latest" ;
lin latest_N = mkN "latest" ;
lin latex_N = mkN "latex" ;
lin lath_N = mkN "lath" "laths";
lin lathe_N = mkN "lathe" "lathes";
lin lather_N = mkN "lather" ;
lin lather_V = mkV "lather" "lathers" "lathered" "lathered" "lathering";
lin lather_V2 = mkV2 (mkV "lather" "lathers" "lathered" "lathered" "lathering");
lin lathery_A = mkA "lathery" ;
lin lathi_N = mkN "lathi" "lathis";
lin laticifer_N = mkN "laticifer" ;
lin latin_A = compoundA (mkA "latin");
lin latin_N = mkN "latin" "latins";
lin latinate_A = mkA "latinate" ;
lin latinist_N = mkN "latinist" "latinists";
lin latinize_V2 = mkV2 (mkV "latinize" "latinizes" "latinized" "latinized" "latinizing");
lin latish_A = compoundA (mkA "latish");
lin latitude_N = mkN "latitude" "latitudes";
lin latitudes_N = mkN "latitudes" "latitudess";
lin latitudinal_A = compoundA (mkA "latitudinal");
lin latitudinarian_A = compoundA (mkA "latitudinarian");
lin latitudinarian_N = mkN "latitudinarian" "latitudinarians";
lin latrine_N = mkN "latrine" "latrines";
lin lats_N = mkN "lats" ;
lin latten_N = mkN "latten" ;
lin latter_A = compoundA (mkA "latter");
lin latter_N = mkN "latter" ;
lin latter_day_A = compoundA (mkA "latter-day");
lin lattice_N = mkN "lattice" "lattices";
lin latticed_A = compoundA (mkA "latticed");
lin laud_V2 = mkV2 (mkV "laud" "lauds" "lauded" "lauded" "lauding");
lin laudable_A = compoundA (mkA "laudable");
lin laudanum_N = mkN "laudanum" ;
lin laudator_N = mkN "laudator" ;
lin laudatory_A = compoundA (mkA "laudatory");
lin laugh_N = mkN "laugh" "laughs";
lin laugh_V = mkV "laugh" "laughs" "laughed" "laughed" "laughing";
lin laugh_V2 = mkV2 (mkV "laugh" "laughs" "laughed" "laughed" "laughing");
lin laugh_at_V2 = mkV2 (mkV "laugh" "laughs" "laughed" "laughed" "laughing") (mkPrep "at");
lin laugh_VS = mkVS (mkV "laugh" "laughs" "laughed" "laughed" "laughing");
lin laughable_A = compoundA (mkA "laughable");
lin laugher_N = mkN "laugher" ;
lin laughing_gas_N = mkN "laughing-gas" ;
lin laughing_stock_N = mkN "laughing-stock" "laughing-stocks";
lin laughing_A = compoundA (mkA "laughing");
lin laughter_N = mkN "laughter" ;
lin launch_N = mkN "launch" "launches";
lin launch_V = mkV "launch" "launches" "launched" "launched" "launching";
lin launch_V2 = mkV2 (mkV "launch" "launches" "launched" "launched" "launching");
lin launcher_N = mkN "launcher" "launchers";
lin launching_N = mkN "launching" ;
lin launching_pad_N = mkN "launching-pad" "launching-pads";
lin launching_site_N = mkN "launching-site" "launching-sites";
lin launder_V = mkV "launder" "launders" "laundered" "laundered" "laundering";
lin launder_V2 = mkV2 (mkV "launder" "launders" "laundered" "laundered" "laundering");
lin launderette_N = mkN "launderette" "launderettes";
lin laundering_N = mkN "laundering" ;
lin laundress_N = mkN feminine (mkN "laundress" "laundresses");
lin laundry_N = mkN "laundry" "laundries";
lin laundryman_N = mkN masculine (mkN "laundryman" "laundrymen");
lin laundrywoman_N = mkN feminine (mkN "laundrywoman" "laundrywomen");
lin laura_PN = mkPN "Laura";
lin laureate_A = compoundA (mkA "laureate");
lin laureate_N = mkN "laureate" "laureates";
lin laurel_N = mkN "laurel" "laurels";
lin laureled_A = mkA "laureled" ;
lin laurelled_A = compoundA (mkA "laurelled");
lin laurelwood_N = mkN "laurelwood" ;
lin laurence_PN = mkPN "Laurence";
lin lausanne_PN = mkPN "Lausanne";
lin lav_N = mkN "lav" "lavs";
lin lava_N = mkN "lava" ;
lin lavage_N = mkN "lavage" ;
lin lavalava_N = mkN "lavalava" ;
lin lavaliere_N = mkN "lavaliere" ;
lin lavatory_N = mkN "lavatory" "lavatories";
lin lave_V2 = mkV2 (mkV "lave" "laves" "laved" "laved" "laving");
lin lavender_A = mkA "lavender" ;
lin lavender_N = mkN "lavender" ;
lin laver_N = mkN "laver" ;
lin lavish_A = compoundA (mkA "lavish");
lin lavish_V2 = mkV2 (mkV "lavish" "lavishes" "lavished" "lavished" "lavishing");
lin lavishness_N = mkN "lavishness" ;
lin law_N = mkN "law" "laws";
lin law_abiding_A = compoundA (mkA "law-abiding");
lin law_officer_N = mkN "law-officer" "law-officers";
lin lawbreaker_N = mkN "lawbreaker" "lawbreakers";
lin lawful_A = compoundA (mkA "lawful");
lin lawfulness_N = mkN "lawfulness" ;
lin lawgiver_N = mkN "lawgiver" "lawgivers";
lin lawless_A = compoundA (mkA "lawless");
lin lawlessness_N = mkN "lawlessness" ;
lin lawmaker_N = mkN "lawmaker" "lawmakers";
lin lawmaking_N = mkN "lawmaking" ;
lin lawman_N = mkN masculine (mkN "lawman" "lawmen");
lin lawn_N = mkN "lawn" "lawns";
lin lawn_mower_N = mkN "lawn-mower" "lawn-mowers";
lin lawrence_PN = mkPN "Lawrence";
lin lawrencium_N = mkN "lawrencium" ;
lin lawsuit_N = mkN "lawsuit" ;
lin lawyer_N = mkN "lawyer" "lawyers";
lin lawyerbush_N = mkN "lawyerbush" ;
lin lax_A = compoundA (mkA "lax");
lin laxative_A = compoundA (mkA "laxative");
lin laxative_N = mkN "laxative" "laxatives";
lin laxity_N = mkN "laxity" "laxities";
lin laxness_N = mkN "laxness" ;
lin lay_A = compoundA (mkA "lay");
lin lay_N = mkN "lay" "lays";
lin lay_V = IrregEng.lay_V;
lin lay_V2 = mkV2 (IrregEng.lay_V);
lin lay_VS = mkVS (IrregEng.lay_V);
lin lay_figure_N = mkN "lay figure" "lay figures";
lin lay_off_N = mkN "lay-off" "lay-offs";
lin lay_out_N = mkN "lay-out" "lay-outs";
lin layabout_N = mkN "layabout" "layabouts";
lin layby_N = mkN "layby" "laybys";
lin layer_N = mkN "layer" "layers";
lin layer_V2 = mkV2 (mkV "layer" "layers" "layered" "layered" "layering");
lin layer_cake_N = mkN "layer-cake" "layer-cakes";
lin layette_N = mkN "layette" "layettes";
lin laying_N = mkN "laying" ;
lin layman_N = mkN masculine (mkN "layman" "laymen");
lin layoff_N = mkN "layoff" ;
lin layout_N = mkN "layout" ;
lin layover_N = mkN "layover" "layovers";
lin lazar_N = mkN "lazar" "lazars";
lin lazaret_N = mkN "lazaret" "lazarets";
lin lazarette_N = mkN "lazarette" "lazarettes";
lin lazaretto_N = mkN "lazaretto" "lazarettos";
lin lazarus_N = mkN "lazarus" "lazari";
lin lazarus_PN = mkPN "Lazarus";
lin laze_V = mkV "laze" "lazes" "lazed" "lazed" "lazing";
lin laze_V2 = mkV2 (mkV "laze" "lazes" "lazed" "lazed" "lazing");
lin laziness_N = mkN "laziness" ;
lin lazy_A = mkA "lazy" "lazier";
lin lazybones_N = mkN "lazybones" "IRREG";
lin lb_N = mkN "lb" "lbs" ;
lin lbw_PN = mkPN "Lbw";
lin le_havre_PN = mkPN "Le havre";
lin le_mans_PN = mkPN "Le mans";
lin lea_N = mkN "lea" "leas" ;
lin leach_N = mkN "leach" ;
lin leach_V2 = mkV2 (mkV "leach" "leaches" "leached" "leached" "leaching");
lin lead_N = mkN "lead" "leads";
lin lead_V = IrregEng.lead_V;
lin lead_V2 = mkV2 (IrregEng.lead_V);
lin lead_V2V = mkV2V (IrregEng.lead_V) noPrep to_Prep ;
lin lead_VS = mkVS (IrregEng.lead_V);
lin lead_in_N = mkN "lead-in" "lead-ins";
lin lead_ore_N = mkN "lead-ore" ;
lin leaded_A = compoundA (mkA "leaded");
lin leaden_A = compoundA (mkA "leaden");
lin leader_N = mkN "leader" "leaders";
lin leaderless_A = compoundA (mkA "leaderless");
lin leadership_N = mkN "leadership" ;
lin leading_N = mkN "leading" ;
lin leading_rein_N = mkN "leading-rein" "leading-reins";
lin leadplant_N = mkN "leadplant" ;
lin leadwort_N = mkN "leadwort" ;
lin leaf_N = mkN "leaf" "leaves";
lin leaf_V = mkV "leaf" "leafs" "leafed" "leafed" "leafing";
lin leaf_bud_N = mkN "leaf-bud" "leaf-buds";
lin leaf_mould_N = mkN "leaf-mould" ;
lin leafed_A = mkA "leafed" ;
lin leafhopper_N = mkN "leafhopper" ;
lin leafless_A = compoundA (mkA "leafless");
lin leaflet_N = mkN "leaflet" "leaflets";
lin leaflike_A = mkA "leaflike" ;
lin leafy_A = mkA "leafy" "leafier";
lin league_N = mkN "league" "leagues";
lin league_V = mkV "league" "leagues" "leagued" "leagued" "leaguing";
lin league_V2 = mkV2 (mkV "league" "leagues" "leagued" "leagued" "leaguing");
lin leak_N = mkN "leak" "leaks";
lin leak_V = mkV "leak" "leaks" "leaked" "leaked" "leaking";
lin leak_V2 = mkV2 (mkV "leak" "leaks" "leaked" "leaked" "leaking");
lin leakage_N = mkN "leakage" "leakages";
lin leaker_N = mkN "leaker" ;
lin leakiness_N = mkN "leakiness" ;
lin leakproof_A = mkA "leakproof" ;
lin leaky_A = mkA "leaky" "leakier";
lin leal_A = compoundA (mkA "leal");
lin leamington_spa_PN = mkPN "Leamington spa";
lin lean_A = mkA "lean" "leaner";
lin lean_N = mkN "lean" ;
lin lean_V = mkV "lean" "leans" "leaned" "leaned" "leaning";
lin lean_V2 = mkV2 (mkV "lean" "leans" "leaned" "leaned" "leaning");
lin lean_to_N = mkN "lean-to" "lean-tos";
lin leaner_N = mkN "leaner" ;
lin leaning_N = mkN "leaning" "leanings";
lin leanness_N = mkN "leanness" ;
lin leap_N = mkN "leap" "leaps";
lin leap_V = mkV "leap" "leaps" "leaped" "leaped" "leaping";
lin leap_V2 = mkV2 (mkV "leap" "leaps" "leaped" "leaped" "leaping");
lin leap_year_N = mkN "leap-year" "leap-years";
lin leapfrog_N = mkN "leapfrog" ;
lin leapfrog_V2 = mkV2 (mkV "leapfrog" "leapfrogs" "leapfrogged" "leapfrogged" "leapfrogging");
lin learn_V = mkV "learn" "learns" "learned" "learned" "learning";
lin learn_V2 = mkV2 (mkV "learn" "learns" "learned" "learned" "learning");
lin learn_VS = mkVS (mkV "learn" "learns" "learned" "learned" "learning");
lin learn_VV = mkVV (mkV "learn" "learns" "learned" "learned" "learning");
lin learner_N = mkN "learner" "learners";
lin learning_N = mkN "learning" ;
lin lease_N = mkN "lease" "leases";
lin lease_V2 = mkV2 (mkV "lease" "leases" "leased" "leased" "leasing");
lin lease_lend_N = mkN "lease-lend" ;
lin leasehold_A = compoundA (mkA "leasehold");
lin leasehold_N = mkN "leasehold" "leaseholds";
lin leaseholder_N = mkN "leaseholder" "leaseholders";
lin leash_N = mkN "leash" "leashes";
lin least_Adv = mkAdv "least";
lin least_N = mkN "least" "IRREG";
lin leastways_Adv = mkAdv "leastways";
lin leastwise_Adv = mkAdv "leastwise";
lin leather_N = mkN "leather" "leathers";
lin leather_jacket_N = mkN "leather-jacket" "leather-jackets";
lin leatherette_N = mkN "leatherette" ;
lin leatherhead_PN = mkPN "Leatherhead";
lin leatherjacket_N = mkN "leatherjacket" ;
lin leatherleaf_N = mkN "leatherleaf" ;
lin leatherneck_N = mkN "leatherneck" "leathernecks";
lin leatherwood_N = mkN "leatherwood" ;
lin leatherwork_N = mkN "leatherwork" ;
lin leathery_A = compoundA (mkA "leathery");
lin leave_N = mkN "leave" "leaves";
lin leave_V = IrregEng.leave_V;
lin leave_V2 = mkV2 (IrregEng.leave_V);
lin leave_V2V = mkV2V (IrregEng.leave_V) noPrep to_Prep ;
lin leave_VS = mkVS (IrregEng.leave_V);
lin leave_VV = mkVV (IrregEng.leave_V);
lin leave_taking_N = mkN "leave-taking" "leave-takings";
lin leaven_N = mkN "leaven" ;
lin leaven_V2 = mkV2 (mkV "leaven" "leavens" "leavened" "leavened" "leavening");
lin lebanese_A = compoundA (mkA "Lebanese");
lin lebaneseMasc_N = mkN masculine (mkN "Lebanese" "Lebanese");
lin lebaneseFem_N = mkN feminine (mkN "Lebanese" "Lebanese");
lin lebanon_PN = mkPN "Lebanon";
lin lecanopteris_N = mkN "lecanopteris" ;
lin lecanora_N = mkN "lecanora" ;
lin lecher_N = mkN "lecher" "lechers";
lin lecherous_A = compoundA (mkA "lecherous");
lin lecherousness_N = mkN "lecherousness" ;
lin lechery_N = mkN "lechery" "lecheries";
lin lechwe_N = mkN "lechwe" ;
lin lecithin_N = mkN "lecithin" ;
lin lectern_N = mkN "lectern" "lecterns";
lin lectin_N = mkN "lectin" ;
lin lector_N = mkN "lector" ;
lin lecture_N = mkN "lecture" "lectures";
lin lecture_V = mkV "lecture" "lectures" "lectured" "lectured" "lecturing";
lin lecture_V2 = mkV2 (mkV "lecture" "lectures" "lectured" "lectured" "lecturing");
lin lecturer_N = mkN "lecturer" "lecturers";
lin lectureship_N = mkN "lectureship" "lectureships";
lin lederhosen_N = mkN "lederhosen" ;
lin ledge_N = mkN "ledge" "ledges";
lin ledger_N = mkN "ledger" "ledgers";
lin lee_N = mkN "lee" ;
lin leech_N = mkN "leech" "leeches";
lin leeds_PN = mkPN "Leeds";
lin leek_N = mkN "leek" "leeks";
lin leek_PN = mkPN "Leek";
lin leer_N = mkN "leer" "leers";
lin leer_V = mkV "leer" "leers" "leered" "leered" "leering";
lin leery_A = mkA "leery" ;
lin lees_N = mkN "lees" ;
lin leeward_A = compoundA (mkA "leeward");
lin leeward_Adv = mkAdv "leeward";
lin leeward_N = mkN "leeward" ;
lin leeway_N = mkN "leeway" ;
lin leflunomide_N = mkN "leflunomide" ;
lin left_A = irregAdv (mkA "left") "left";
lin left_N = mkN "left" ;
lin left_hand_A = compoundA (mkA "left-hand");
lin left_handed_A = compoundA (mkA "left-handed");
lin left_wing_N = mkN "left-wing" "left-wings";
lin left_winger_N = mkN "left-winger" "left-wingers";
lin leftish_A = mkA "leftish" ;
lin leftism_N = mkN "leftism" ;
lin leftist_A = mkA "leftist" ;
lin leftist_N = mkN "leftist" "leftists";
lin leftmost_A = mkA "leftmost" ;
lin leftover_A = mkA "leftover" ;
lin leftover_N = mkN "leftover" ;
lin leftovers_N = mkN "leftovers" ;
lin leg_N = mkN "leg" "legs";
lin leg_pull_N = mkN "leg-pull" "leg-pulls";
lin leg_pulling_N = mkN "leg-pulling" ;
lin legacy_N = mkN "legacy" "legacies";
lin legal_A = compoundA (mkA "legal");
lin legalese_N = mkN "legalese" ;
lin legalism_N = mkN "legalism" ;
lin legalistic_A = compoundA (mkA "legalistic");
lin legality_N = mkN "legality" ;
lin legalization_N = mkN (variants {"legalization"; "legalisation"}) ;
lin legalize_V2 = mkV2 (mkV "legalize" "legalizes" "legalized" "legalized" "legalizing");
lin legate_N = mkN "legate" "legates";
lin legatee_N = mkN "legatee" "legatees";
lin legation_N = mkN "legation" "legations";
lin legato_A = compoundA (mkA "legato");
lin legato_Adv = mkAdv "legato";
lin legend_N = mkN "legend" "legends";
lin legendary_A = compoundA (mkA "legendary");
lin leger_line_N = mkN "leger line" "leger lines";
lin legerdemain_N = mkN "legerdemain" ;
lin legged_A = compoundA (mkA "legged");
lin legging_N = mkN "legging" "leggings";
lin leggy_A = compoundA (mkA "leggy");
lin leghorn_N = mkN "leghorn" "leghorns";
lin legibility_N = mkN "legibility" ;
lin legible_A = compoundA (mkA "legible");
lin legion_N = mkN "legion" "legions";
lin legionary_N = mkN "legionary" "legionaries";
lin legionnaire_N = mkN "legionnaire" ;
lin legislate_V = mkV "legislate" "legislates" "legislated" "legislated" "legislating";
lin legislate_V2 = mkV2 (mkV "legislate" "legislates" "legislated" "legislated" "legislating");
lin legislation_N = mkN "legislation" ;
lin legislative_A = compoundA (mkA "legislative");
lin legislator_N = mkN "legislator" "legislators";
lin legislatorship_N = mkN "legislatorship" ;
lin legislature_N = mkN "legislature" "legislatures";
lin legitimacy_N = mkN "legitimacy" ;
lin legitimate_A = compoundA (mkA "legitimate");
lin legitimation_N = mkN "legitimation" ;
lin legitimatize_V2 = mkV2 (mkV "legitimatize" "legitimatizes" "legitimatized" "legitimatized" "legitimatizing");
lin legitimize_V2 = mkV2 (mkV "legitimize");
lin legitimize_V2V = mkV2V (mkV "legitimize") noPrep to_Prep ;
lin legless_A = compoundA (mkA "legless");
lin leglike_A = mkA "leglike" ;
lin legs_N = mkN "legs" ;
lin legume_N = mkN "legume" ;
lin leguminous_A = compoundA (mkA "leguminous");
lin lei_N = mkN "lei" "leis";
lin leicester_PN = mkPN "Leicester";
lin leicestershire_PN = mkPN "Leicestershire";
lin leiden_PN = mkPN "Leiden";
lin leigh_PN = mkPN "Leigh";
lin leighton_linslade_PN = mkPN "Leighton-linslade";
lin leinster_PN = mkPN "Leinster";
lin leiomyoma_N = mkN "leiomyoma" ;
lin leiomyosarcoma_N = mkN "leiomyosarcoma" ;
lin leipzig_PN = mkPN "Leipzig";
lin leishmaniasis_N = mkN "leishmaniasis" ;
lin leister_N = mkN "leister" ;
lin leisure_N = mkN "leisure" ;
lin leisured_A = compoundA (mkA "leisured");
lin leisureliness_N = mkN "leisureliness" ;
lin leisurely_A = compoundA (mkA "leisurely");
lin leisurely_Adv = mkAdv "leisurely";
lin leitmotiv_N = mkN "leitmotiv" ;
lin leitrim_PN = mkPN "Leitrim";
lin leix_PN = mkPN "Leix";
lin lek_N = mkN "lek" ;
lin lekvar_N = mkN "lekvar" ;
lin lemma_N = mkN "lemma" ;
lin lemming_N = mkN "lemming" "lemmings";
lin lemniscus_N = mkN "lemniscus" ;
lin lemon_N = mkN "lemon" "lemons";
lin lemonade_N = mkN "lemonade" ;
lin lemongrass_N = mkN "lemongrass" ;
lin lemonwood_N = mkN "lemonwood" ;
lin lemony_A = mkA "lemony" ;
lin lempira_N = mkN "lempira" ;
lin lemur_N = mkN "lemur" "lemurs";
lin len_PN = mkPN "Len";
lin lend_V = mkV "lend";
lin lend_V2 = mkV2 (IrregEng.lend_V);
lin lendable_A = mkA "lendable" ;
lin lender_N = mkN "lender" "lenders";
lin lending_N = mkN "lending" ;
lin lending_library_N = mkN "lending-library" "lending-libraries";
lin length_N = mkN "length" "lengths";
lin lengthen_V = mkV "lengthen" "lengthens" "lengthened" "lengthened" "lengthening";
lin lengthen_V2 = mkV2 (mkV "lengthen" "lengthens" "lengthened" "lengthened" "lengthening");
lin lengthiness_N = mkN "lengthiness" ;
lin lengthways_A = compoundA (mkA "lengthways");
lin lengthways_Adv = mkAdv "lengthways";
lin lengthwise_A = mkA "lengthwise" ;
lin lengthwise_Adv = mkAdv "lengthwise";
lin lengthy_A = mkA "lengthy" "lengthier";
lin lenience_N = mkN "lenience" ;
lin leniency_N = mkN "leniency" ;
lin lenient_A = compoundA (mkA "lenient");
lin leningrad_PN = mkPN "Leningrad";
lin lenitive_N = mkN "lenitive" ;
lin lenity_N = mkN "lenity" ;
lin lenny_PN = mkPN "Lenny";
lin lens_N = mkN "lens" "lenses";
lin lens_PN = mkPN "Lens";
lin lent_N = mkN "lent" "lents";
lin lent_PN = mkPN "Lent";
lin lenten_A = compoundA (mkA "lenten");
lin lentic_A = mkA "lentic" ;
lin lenticel_N = mkN "lenticel" ;
lin lentil_N = mkN "lentil" "lentils";
lin lentissimo_A = mkA "lentissimo" ;
lin lento_A = compoundA (mkA "lento");
lin lento_Adv = mkAdv "lento";
lin leo_PN = mkPN "Leo";
lin leominster_PN = mkPN "Leominster";
lin leon_PN = mkPN "Leon";
lin leonard_PN = mkPN "Leonard";
lin leone_N = mkN "leone" ;
lin leonine_A = compoundA (mkA "leonine");
lin leopard_N = mkN "leopard" "leopards";
lin leopardess_N = mkN "leopardess" "leopardesses";
lin leotard_N = mkN "leotard" ;
lin leper_N = mkN "leper" "lepers";
lin lepidobotrys_N = mkN "lepidobotrys" ;
lin lepidocrocite_N = mkN "lepidocrocite" ;
lin lepidolite_N = mkN "lepidolite" ;
lin lepidomelane_N = mkN "lepidomelane" ;
lin lepidophobia_N = mkN "lepidophobia" ;
lin lepidopterist_N = mkN "lepidopterist" ;
lin lepidopterology_N = mkN "lepidopterology" ;
lin lepidote_A = mkA "lepidote" ;
lin lepiota_N = mkN "lepiota" ;
lin leporid_N = mkN "leporid" ;
lin leprechaun_N = mkN "leprechaun" "leprechauns";
lin leprosy_N = mkN "leprosy" ;
lin leprous_A = compoundA (mkA "leprous");
lin leptocephalus_N = mkN "leptocephalus" ;
lin leptomeninges_N = mkN "leptomeninges" ;
lin leptomeningitis_N = mkN "leptomeningitis" ;
lin lepton_N = mkN "lepton" ;
lin leptorrhine_A = mkA "leptorrhine" ;
lin leptospira_N = mkN "leptospira" ;
lin leptosporangiate_A = mkA "leptosporangiate" ;
lin leptosporangium_N = mkN "leptosporangium" ;
lin leptotene_N = mkN "leptotene" ;
lin leresis_N = mkN "leresis" ;
lin lerot_N = mkN "lerot" ;
lin lerwick_PN = mkPN "Lerwick";
lin les_PN = mkPN "Les";
lin lesbian_A = mkA "lesbian" ;
lin lesbian_N = mkN "lesbian" "lesbians";
lin lesbianism_N = mkN "lesbianism" ;
lin lese_majesty_N = mkN "lese majesty" ;
lin lesion_N = mkN "lesion" "lesions";
lin lesley_PN = mkPN "Lesley";
lin leslie_PN = mkPN "Leslie";
lin lesotho_PN = mkPN "Lesotho";
lin less_A = mkA "less" ;
lin less_AdA = mkAdA "less";
lin less_Adv = mkAdv "less";
lin less_Det = mkDeterminer singular (variants {"less"; "lesser"}) ;
lin less_than_AdN = mkAdN "less than";
lin lessee_N = mkN "lessee" "lessees";
lin lessen_V = mkV "lessen" "lessens" "lessened" "lessened" "lessening";
lin lessen_V2 = mkV2 (mkV "lessen" "lessens" "lessened" "lessened" "lessening");
lin lesser_A = mkA "lesser" ;
lin lesson_N = mkN "lesson" "lessons";
lin lessor_N = mkN "lessor" "lessors";
lin lest_Prep = mkPrep "lest";
lin let_N = mkN "let" "lets";
lin let_V = IrregEng.let_V;
lin let_V2 = mkV2 (IrregEng.let_V);
lin let_V2V = mkV2V (IrregEng.let_V) noPrep noPrep ;
lin let_VS = mkVS (IrregEng.let_V);
lin let_down_N = mkN "let-down" "let-downs";
lin let_up_N = mkN "let-up" "let-ups";
lin letchworth_PN = mkPN "Letchworth";
lin lethal_A = compoundA (mkA "lethal");
lin lethargic_A = compoundA (mkA "lethargic");
lin lethargically_Adv = mkAdv "lethargically";
lin lethargy_N = mkN "lethargy" ;
lin lethe_PN = mkPN "Lethe";
lin letter_1_N = mkN "letter" "letters";
lin letter_2_N = mkN "letter" "letters";
lin letter_box_N = mkN "letter-box" "letter-boxes";
lin letter_card_N = mkN "letter-card" "letter-cards";
lin letter_case_N = mkN "letter-case" "letter-cases";
lin lettercard_N = mkN "lettercard" ;
lin lettered_A = compoundA (mkA "lettered");
lin letterer_N = mkN "letterer" ;
lin letterhead_N = mkN "letterhead" "letterheads";
lin lettering_N = mkN "lettering" ;
lin letterman_N = mkN masculine (mkN "letterman");
lin letterpress_N = mkN "letterpress" ;
lin letters_N = mkN "letters" ;
lin letting_N = mkN "letting" "lettings";
lin lettuce_N = mkN "lettuce" "lettuces";
lin letup_N = mkN "letup" ;
lin leu_N = mkN "leu" ;
lin leucine_N = mkN "leucine" ;
lin leucocyte_N = mkN "leucocyte" "leucocytes";
lin leucocytozoan_N = mkN "leucocytozoan" ;
lin leucothoe_N = mkN "leucothoe" ;
lin leukaemia_N = mkN "leukaemia" ;
lin leukemia_N = mkN "leukemia" ;
lin leukocyte_N = mkN "leukocyte" ;
lin leukocytosis_N = mkN "leukocytosis" ;
lin leukoderma_N = mkN "leukoderma" ;
lin leukoencephalitis_N = mkN "leukoencephalitis" ;
lin leukoma_N = mkN "leukoma" ;
lin leukopenia_N = mkN "leukopenia" ;
lin leukorrhea_N = mkN "leukorrhea" ;
lin lev_N = mkN "lev" ;
lin levallorphan_N = mkN "levallorphan" ;
lin levant_PN = mkPN "Levant";
lin levant_V = mkV "levant" "levants" "levanted" "levanted" "levanting";
lin levanter_N = mkN "levanter" ;
lin levantine_A = compoundA (mkA "levantine");
lin levantine_N = mkN "levantine" "levantines";
lin levator_N = mkN "levator" ;
lin levee_N = mkN "levee" "levees";
lin level_A = compoundA (mkA "level");
lin level_N = mkN "level" "levels";
lin level_V = mkV "level" "levels" "levelled" "levelled" "levelling";
lin level_V2 = mkV2 (mkV "level" "levels" "levelled" "levelled" "levelling");
lin level_headed_A = compoundA (mkA "level-headed");
lin leveler_N = mkN "leveler" ;
lin leveller_N = mkN "leveller" "levellers";
lin leven_PN = mkPN "Leven";
lin lever_N = mkN "lever" "levers";
lin lever_V2 = mkV2 (mkV "lever" "levers" "levered" "levered" "levering");
lin leverage_N = mkN "leverage" ;
lin leveret_N = mkN "leveret" "leverets";
lin leverkusen_PN = mkPN "Leverkusen";
lin leviathan_N = mkN "leviathan" "leviathans";
lin levirate_N = mkN "levirate" ;
lin levitate_V = mkV "levitate" "levitates" "levitated" "levitated" "levitating";
lin levitate_V2 = mkV2 (mkV "levitate" "levitates" "levitated" "levitated" "levitating");
lin levitation_N = mkN "levitation" "levitations";
lin levity_N = mkN "levity" "levities";
lin levorotary_A = mkA "levorotary" ;
lin levorotation_N = mkN "levorotation" ;
lin levy_N = mkN "levy" "levies";
lin levy_V = mkV "levy" "levies" "levied" "levied" "levying";
lin levy_V2 = mkV2 (mkV "levy" "levies" "levied" "levied" "levying");
lin lewd_A = mkA "lewd" "lewder";
lin lewdness_N = mkN "lewdness" ;
lin lewes_PN = mkPN "Lewes";
lin lewis_PN = mkPN "Lewis";
lin lewisham_PN = mkPN "Lewisham";
lin lexeme_N = mkN "lexeme" ;
lin lexical_A = compoundA (mkA "lexical");
lin lexicalization_N = mkN "lexicalization" ;
lin lexicalized_A = mkA "lexicalized" ;
lin lexicographerMasc_N = mkN masculine (mkN "lexicographer" "lexicographers");
lin lexicographerFem_N = mkN feminine (mkN "lexicographer" "lexicographers");
lin lexicographic_A = mkA "lexicographic" ;
lin lexicography_N = mkN "lexicography" ;
lin lexicology_N = mkN "lexicology" ;
lin lexicon_N = mkN "lexicon" "lexicons";
lin lexicostatistic_A = mkA "lexicostatistic" ;
lin lexicostatistics_N = mkN "lexicostatistics" ;
lin lexis_N = mkN "lexis" ;
lin ley_N = mkN "ley" "leys";
lin leyland_PN = mkPN "Leyland";
lin li_N = mkN "li" ;
lin liabilities_N = mkN "liabilities" ;
lin liability_N = mkN "liability" "liabilities";
lin liable_A = compoundA (mkA "liable");
lin liaise_V = mkV "liaise" "liaises" "liaised" "liaised" "liaising";
lin liaison_N = mkN "liaison" "liaisons";
lin liana_N = mkN "liana" "lianas";
lin liar_N = mkN "liar" "liars";
lin lib_N = mkN "lib" "IRREG";
lin lib_PN = mkPN "Lib";
lin libation_N = mkN "libation" "libations";
lin libel_N = mkN "libel" "libels";
lin libel_V2 = mkV2 (mkV "libel" "libels" "libelled" "libelled" "libelling");
lin libellous_A = compoundA (mkA "libellous");
lin liberal_A = compoundA (mkA "liberal");
lin liberal_N = mkN "liberal" "liberals";
lin liberalism_N = mkN "liberalism" ;
lin liberalistic_A = mkA "liberalistic" ;
lin liberality_N = mkN "liberality" "liberalities";
lin liberalization_N = mkN (variants {"liberalization"; "liberalisation"});
lin liberalize_V2 = mkV2 (mkV "liberalize" "liberalizes" "liberalized" "liberalized" "liberalizing");
lin liberate_V2 = mkV2 (mkV "liberate" "liberates" "liberated" "liberated" "liberating");
lin liberation_N = mkN "liberation" "liberations";
lin liberator_N = mkN "liberator" "liberators";
lin liberia_PN = mkPN "Liberia";
lin liberian_A = compoundA (mkA "liberian");
lin liberian_N = mkN "liberian" "liberians";
lin libertarian_N = mkN "libertarian" ;
lin libertarianism_N = mkN "libertarianism" ;
lin libertine_N = mkN "libertine" "libertines";
lin liberty_N = mkN "liberty" "liberties";
lin libidinal_A = mkA "libidinal" ;
lin libidinous_A = compoundA (mkA "libidinous");
lin libido_N = mkN "libido" "libidos";
lin libra_PN = mkPN "Libra";
lin librarian_N = mkN "librarian" "librarians";
lin librarianship_N = mkN "librarianship" ;
lin library_N = mkN "library" "libraries";
lin libration_N = mkN "libration" ;
lin librettist_N = mkN "librettist" "librettists";
lin libretto_N = mkN "libretto" "librettos";
lin libya_PN = mkPN "Libya";
lin libyan_A = compoundA (mkA "libyan");
lin libyan_N = mkN "libyan" "libyans";
lin licence_N = mkN (variants {"licence"; "license"});
lin licence_V2 = mkV2 (mkV "licence" "licences" "licenced" "licenced" "licencing");
lin license_V2 = mkV2 (mkV "license" "licenses" "licensed" "licensed" "licensing");
lin licensee_N = mkN "licensee" "licensees";
lin licenser_N = mkN "licenser" ;
lin licentiate_N = mkN "licentiate" "licentiates";
lin licentious_A = compoundA (mkA "licentious");
lin licentiousness_N = mkN "licentiousness" ;
lin lichee_N = mkN "lichee" "lichees";
lin lichen_N = mkN "lichen" ;
lin lichfield_PN = mkPN "Lichfield";
lin lichgate_N = mkN "lichgate" "lichgates";
lin lichi_N = mkN "lichi" "lichis";
lin licit_A = compoundA (mkA "licit");
lin licitness_N = mkN "licitness" ;
lin lick_N = mkN "lick" "licks";
lin lick_V = mkV "lick" "licks" "licked" "licked" "licking";
lin lick_V2 = mkV2 (mkV "lick" "licks" "licked" "licked" "licking");
lin licking_N = mkN "licking" "IRREG";
lin licorice_N = mkN "licorice" ;
lin lid_N = mkN "lid" "lids";
lin lidar_N = mkN "lidar" ;
lin lidded_A = mkA "lidded" ;
lin lidless_A = compoundA (mkA "lidless");
lin lido_N = mkN "lido" "lidos";
lin lie_1_V = IrregEng.lie_V;
lin lie_2_V = mkV "lie" "lies" "lied" "lied" "lying";
lin lie_N = mkN "lie" "lies";
lin lie_VS = mkVS (IrregEng.lie_V);
lin lie_abed_N = mkN "lie-abed" "lie-abeds";
lin lie_detector_N = mkN "lie-detector" "lie-detectors";
lin lie_in_N = mkN "lie-in" "lie-ins";
lin liebfraumilch_N = mkN "liebfraumilch" ;
lin liechtenstein_PN = mkPN "Liechtenstein";
lin liechtensteiner_A = compoundA (mkA "liechtensteiner");
lin liechtensteiner_N = mkN "liechtensteiner" "liechtensteiners";
lin lied_N = mkN "lied" "IRREG";
lin lieder_singer_N = mkN "lieder-singer" "lieder-singers";
lin lief_Adv = mkAdv "lief";
lin liege_A = compoundA (mkA "liege");
lin liege_N = mkN "liege" "lieges";
lin liege_PN = mkPN "Liege";
lin liegeman_N = mkN masculine (mkN "liegeman" "liegemen");
lin lien_N = mkN "lien" "liens";
lin lieu_N = mkN "lieu" ;
lin lieutenancy_N = mkN "lieutenancy" "lieutenancies";
lin lieutenant_N = mkN "lieutenant" "lieutenants";
lin life_N = mkN "life" "lives";
lin life_buoy_N = mkN "life-buoy" "life-buoys";
lin life_giving_A = compoundA (mkA "life-giving");
lin life_jacket_N = mkN "life-jacket" "life-jackets";
lin life_office_N = mkN "life-office" "life-offices";
lin life_preserver_N = mkN "life-preserver" "life-preservers";
lin life_raft_N = mkN "life-raft" "life-rafts";
lin life_saver_N = mkN "life-saver" "life-savers";
lin life_size_A = compoundA (mkA "life-size");
lin life_sized_A = compoundA (mkA "life-sized");
lin life_span_N = mkN "life-span" "life-spans";
lin life_work_N = mkN "life-work" "life-works";
lin lifebelt_N = mkN "lifebelt" "lifebelts";
lin lifeblood_N = mkN "lifeblood" ;
lin lifeboat_N = mkN "lifeboat" "lifeboats";
lin lifebuoy_N = mkN "lifebuoy" "lifebuoys";
lin lifeguard_N = mkN "lifeguard" "lifeguards";
lin lifeless_A = compoundA (mkA "lifeless");
lin lifelike_A = compoundA (mkA "lifelike");
lin lifeline_N = mkN "lifeline" "lifelines";
lin lifelong_A = compoundA (mkA "lifelong");
lin lifer_N = mkN "lifer" "lifers";
lin lifesaving_N = mkN "lifesaving" ;
lin lifetime_N = mkN "lifetime" "lifetimes";
lin lifework_N = mkN "lifework" ;
lin lift_N = mkN "lift" "lifts";
lin lift_V = mkV "lift" "lifts" "lifted" "lifted" "lifting";
lin lift_V2 = mkV2 (mkV "lift" "lifts" "lifted" "lifted" "lifting");
lin lift_off_N = mkN "lift-off" "lift-offs";
lin liftman_N = mkN masculine (mkN "liftman" "liftmen");
lin liftoff_N = mkN "liftoff" ;
lin ligament_N = mkN "ligament" "ligaments";
lin ligand_N = mkN "ligand" ;
lin ligation_N = mkN "ligation" ;
lin ligature_N = mkN "ligature" "ligatures";
lin liger_N = mkN "liger" ;
lin light_A = mkA "light" "lighter";
lin light_Adv = mkAdv "light";
lin light_N = mkN "light" "lights";
lin light_V = mkV "light" "lights" "lighted" "lighted" "lighting";
lin light_V2 = mkV2 (mkV "light" "lights" "lighted" "lighted" "lighting");
lin light_armed_A = compoundA (mkA "light-armed");
lin light_coloured_A = compoundA (mkA "light-coloured");
lin light_fingered_A = compoundA (mkA "light-fingered");
lin light_handed_A = compoundA (mkA "light-handed");
lin light_headed_A = compoundA (mkA "light-headed");
lin light_headedness_N = mkN "light-headedness" ;
lin light_hearted_A = compoundA (mkA "light-hearted");
lin light_heartedness_N = mkN "light-heartedness" ;
lin light_heavyweight_N = mkN "light-heavyweight" "light-heavyweights";
lin light_minded_A = compoundA (mkA "light-minded");
lin light_mindedness_N = mkN "light-mindedness" ;
lin light_o'_love_N = mkN "light-o'-love" "light-o'-loves";
lin lighten_V = mkV "lighten" "lightens" "lightened" "lightened" "lightening";
lin lighten_V2 = mkV2 (mkV "lighten" "lightens" "lightened" "lightened" "lightening");
lin lightening_N = mkN "lightening" ;
lin lighter_N = mkN "lighter" "lighters";
lin lighter_V2 = mkV2 (mkV "lighter" "lighters" "lightered" "lightered" "lightering");
lin lighterage_N = mkN "lighterage" ;
lin lighterman_N = mkN masculine (mkN "lighterman");
lin lightheadedness_N = mkN "lightheadedness" ;
lin lighthouse_N = mkN "lighthouse" "lighthouses";
lin lighting_N = mkN "lighting" ;
lin lighting_up_A = compoundA (mkA "lighting-up");
lin lightless_A = mkA "lightless" ;
lin lightness_N = mkN "lightness" ;
lin lightning_N = mkN "lightning" ;
lin lightning_conductor_N = mkN "lightning-conductor" "lightning-conductors";
lin lightning_rod_N = mkN "lightning-rod" "lightning-rods";
lin lightproof_A = mkA "lightproof" ;
lin lightship_N = mkN "lightship" "lightships";
lin lightsome_A = compoundA (mkA "lightsome");
lin lightsomeness_N = mkN "lightsomeness" ;
lin lightweight_A = compoundA (mkA "lightweight");
lin lightweight_N = mkN "lightweight" "lightweights";
lin lightwood_N = mkN "lightwood" ;
lin ligne_N = mkN "ligne" ;
lin ligneous_A = compoundA (mkA "ligneous");
lin lignin_N = mkN "lignin" ;
lin lignite_N = mkN "lignite" ;
lin lignosae_N = mkN "lignosae" ;
lin lignum_N = mkN "lignum" ;
lin ligule_N = mkN "ligule" ;
lin likable_A = compoundA (mkA "likable");
lin like_A = compoundA (mkA "like");
lin like_Adv = mkAdv "like";
lin like_N = mkN "like" "likes";
lin like_Prep = mkPrep "like";
lin like_V2 = mkV2 (mkV "like" "likes" "liked" "liked" "liking");
lin like_V2V = mkV2V (mkV "like") noPrep to_Prep ;
lin like_VS = mkVS (mkV "like");
lin like_VV = mkVV (mkV "like");
lin like_minded_A = compoundA (mkA "like-minded");
lin likeable_A = compoundA (mkA "likeable");
lin likelihood_N = mkN "likelihood" ;
lin likely_A = mkA "likely" "likelier";
lin liken_V2 = mkV2 (mkV "liken" "likens" "likened" "likened" "likening");
lin likeness_N = mkN "likeness" "likenesses";
lin likening_N = mkN "likening" ;
lin likewise_Adv = mkAdv "likewise";
lin liking_N = mkN "liking" "likings";
lin likuta_N = mkN "likuta" ;
lin lilac_N = mkN "lilac" "lilacs";
lin lilangeni_N = mkN "lilangeni" ;
lin liliaceous_A = mkA "liliaceous" ;
lin lilian_PN = mkPN "Lilian";
lin lille_PN = mkPN "Lille";
lin lilliputian_A = compoundA (mkA "lilliputian");
lin lilliputian_N = mkN "lilliputian" "lilliputians";
lin lilt_N = mkN "lilt" "lilts";
lin lilt_V = mkV "lilt" "lilts" "lilted" "lilted" "lilting";
lin lilt_V2 = mkV2 (mkV "lilt" "lilts" "lilted" "lilted" "lilting");
lin lily_N = mkN "lily" "lilies";
lin lily_PN = mkPN "Lily";
lin lily_livered_A = compoundA (mkA "lily-livered");
lin lily_white_A = compoundA (mkA "lily-white");
lin lilyturf_N = mkN "lilyturf" ;
lin lima_PN = mkPN "Lima";
lin limacine_A = mkA "limacine" ;
lin liman_N = mkN "liman" ;
lin limb_N = mkN "limb" "limbs";
lin limbed_A = compoundA (mkA "limbed");
lin limber_A = compoundA (mkA "limber");
lin limber_N = mkN "limber" ;
lin limber_V = mkV "limber" "limbers" "limbered" "limbered" "limbering";
lin limber_V2 = mkV2 (mkV "limber" "limbers" "limbered" "limbered" "limbering");
lin limbers_N = mkN "limbers" ;
lin limbic_A = mkA "limbic" ;
lin limbless_A = compoundA (mkA "limbless");
lin limbo_N = mkN "limbo" "limbos";
lin limbus_N = mkN "limbus" ;
lin lime_N = mkN "lime" "limes";
lin lime_V2 = mkV2 (mkV "lime" "limes" "limed" "limed" "liming");
lin lime_tree_N = mkN "lime-tree" "lime-trees";
lin limeade_N = mkN "limeade" ;
lin limejuice_N = mkN "limejuice" ;
lin limekiln_N = mkN "limekiln" "limekilns";
lin limelight_N = mkN "limelight" ;
lin limerick_N = mkN "limerick" "limericks";
lin limerick_PN = mkPN "Limerick";
lin limestone_N = mkN "limestone" ;
lin limewater_N = mkN "limewater" ;
lin limey_N = mkN "limey" "limeys";
lin limit_N = mkN "limit" "limits";
lin limit_V2 = mkV2 (mkV "limit" "limits" "limited" "limited" "limiting");
lin limit_V2V = mkV2V (mkV "limit" "limits" "limited" "limited" "limiting") noPrep to_Prep;
lin limitation_N = mkN "limitation" "limitations";
lin limitedly_Adv = mkAdv "limitedly" ;
lin limiter_N = mkN "limiter" ;
lin limiting_A = mkA "limiting" ;
lin limitless_A = compoundA (mkA "limitless");
lin limn_V2 = mkV2 (mkV "limn" "limns" "limned" "limned" "limning");
lin limnological_A = mkA "limnological" ;
lin limnologist_N = mkN "limnologist" ;
lin limnology_N = mkN "limnology" ;
lin limoges_PN = mkPN "Limoges";
lin limonene_N = mkN "limonene" ;
lin limonite_N = mkN "limonite" ;
lin limousine_N = mkN "limousine" "limousines";
lin limp_A = compoundA (mkA "limp");
lin limp_N = mkN "limp" "limps";
lin limp_V = mkV "limp" "limps" "limped" "limped" "limping";
lin limpa_N = mkN "limpa" ;
lin limpet_N = mkN "limpet" "limpets";
lin limpid_A = compoundA (mkA "limpid");
lin limpidity_N = mkN "limpidity" ;
lin limpkin_N = mkN "limpkin" ;
lin limpness_N = mkN "limpness" ;
lin linage_N = mkN "linage" ;
lin linalool_N = mkN "linalool" ;
lin linchpin_N = mkN "linchpin" "linchpins";
lin lincoln_PN = mkPN "Lincoln";
lin lincolnshire_PN = mkPN "Lincolnshire";
lin lincomycin_N = mkN "lincomycin" ;
lin linda_PN = mkPN "Linda";
lin lindane_N = mkN "lindane" ;
lin linden_N = mkN "linden" "lindens";
lin linden_tree_N = mkN "linden-tree" "linden-trees";
lin lindy_N = mkN "lindy" ;
lin line_N = mkN "line" "lines";
lin line_V = mkV "line" "lines" "lined" "lined" "lining";
lin line_V2 = mkV2 (mkV "line" "lines" "lined" "lined" "lining");
lin line_shooter_N = mkN "line-shooter" "line-shooters";
lin line_shooting_N = mkN "line-shooting" ;
lin line_up_N = mkN "line-up" "line-ups";
lin lineage_N = mkN "lineage" ;
lin lineal_A = compoundA (mkA "lineal");
lin lineament_N = mkN "lineament" "lineaments";
lin linear_A = compoundA (mkA "linear");
lin lineation_N = mkN "lineation" ;
lin linebacker_N = mkN "linebacker" ;
lin linecut_N = mkN "linecut" ;
lin linelike_A = mkA "linelike" ;
lin lineman_N = mkN masculine (mkN "lineman" "linemen");
lin linen_N = mkN "linen" ;
lin linen_draper_N = mkN "linen-draper" "linen-drapers";
lin linendraper_N = mkN "linendraper" ;
lin liner_N = mkN "liner" "liners";
lin liner_train_N = mkN "liner-train" "liner-trains";
lin linesman_N = mkN masculine (mkN "linesman" "linesmen");
lin lineup_N = mkN "lineup" ;
lin ling_N = mkN "ling" "lings";
lin lingam_N = mkN "lingam" "lingams";
lin lingcod_N = mkN "lingcod" ;
lin linger_V = mkV "linger" "lingers" "lingered" "lingered" "lingering";
lin lingerer_N = mkN "lingerer" "lingerers";
lin lingerie_N = mkN "lingerie" ;
lin lingeringly_Adv = mkAdv "lingeringly" ;
lin lingo_N = mkN "lingo" "lingoes";
lin lingonberry_N = mkN "lingonberry" ;
lin lingua_franca_N = mkN "lingua franca" "lingua francae";
lin lingual_A = compoundA (mkA "lingual");
lin lingual_N = mkN "lingual" ;
lin linguica_N = mkN "linguica" ;
lin linguine_N = mkN "linguine" ;
lin linguist_N = mkN "linguist" "linguists";
lin linguistic_A = compoundA (mkA "linguistic");
lin linguistically_Adv = mkAdv "linguistically";
lin linguistics_N = mkN "linguistics" "linguistics";
lin lingulate_A = mkA "lingulate" ;
lin liniment_N = mkN "liniment" "liniments";
lin linin_N = mkN "linin" ;
lin lining_N = mkN "lining" "linings";
lin link_N = mkN "link" "links";
lin link_V = mkV "link" "links" "linked" "linked" "linking";
lin link_V2 = mkV2 (mkV "link" "links" "linked" "linked" "linking");
lin link_up_N = mkN "link-up" "link-ups";
lin linkage_N = mkN "linkage" "linkages";
lin linkboy_N = mkN "linkboy" "linkboys";
lin linkman_N = mkN masculine (mkN "linkman" "linkmen");
lin links_N = mkN "links" "links";
lin linlithgow_PN = mkPN "Linlithgow";
lin linnet_N = mkN "linnet" "linnets";
lin lino_N = mkN "lino" ;
lin linocut_N = mkN "linocut" "linocuts";
lin linoleum_N = mkN "linoleum" ;
lin linotype_N = mkN "linotype" "linotypes";
lin linseed_N = mkN "linseed" ;
lin linsey_woolsey_N = mkN "linsey-woolsey" ;
lin linstock_N = mkN "linstock" ;
lin lint_N = mkN "lint" ;
lin lintel_N = mkN "lintel" "lintels";
lin linuron_N = mkN "linuron" ;
lin linwood_PN = mkPN "Linwood";
lin linz_PN = mkPN "Linz";
lin lion_N = mkN "lion" "lions";
lin lion_hearted_A = compoundA (mkA "lion-hearted");
lin lion_hunter_N = mkN "lion-hunter" "lion-hunters";
lin lionel_PN = mkPN "Lionel";
lin lioness_N = mkN "lioness" "lionesses";
lin lionet_N = mkN "lionet" ;
lin lionfish_N = mkN "lionfish" ;
lin lionhearted_A = mkA "lionhearted" ;
lin lionize_V2 = mkV2 (mkV "lionize" "lionizes" "lionized" "lionized" "lionizing");
lin lip_N = mkN "lip" "lips";
lin lip_read_V2 = mkV2 (mkV "lip-" IrregEng.read_V);
lin lip_reading_N = mkN "lip-reading" ;
lin liparis_N = mkN "liparis" ;
lin lipase_N = mkN "lipase" ;
lin lipectomy_N = mkN "lipectomy" ;
lin lipemia_N = mkN "lipemia" ;
lin lipid_N = mkN "lipid" ;
lin lipidosis_N = mkN "lipidosis" ;
lin lipless_A = mkA "lipless" ;
lin lipogram_N = mkN "lipogram" ;
lin lipoma_N = mkN "lipoma" ;
lin lipomatosis_N = mkN "lipomatosis" ;
lin lipophilic_A = mkA "lipophilic" ;
lin lipoprotein_N = mkN "lipoprotein" ;
lin liposarcoma_N = mkN "liposarcoma" ;
lin liposome_N = mkN "liposome" ;
lin liposuction_N = mkN "liposuction" ;
lin lipped_A = compoundA (mkA "lipped");
lin lipreading_N = mkN "lipreading" ;
lin lipstick_N = mkN "lipstick" "lipsticks";
lin liquefaction_N = mkN "liquefaction" ;
lin liquefiable_A = mkA "liquefiable" ;
lin liquefy_V = mkV "liquefy" "liquefies" "liquefied" "liquefied" "liquefying";
lin liquefy_V2 = mkV2 (mkV "liquefy" "liquefies" "liquefied" "liquefied" "liquefying");
lin liquescent_A = compoundA (mkA "liquescent");
lin liqueur_N = mkN "liqueur" "liqueurs";
lin liquid_A = compoundA (mkA "liquid");
lin liquid_N = mkN "liquid" "liquids";
lin liquidambar_N = mkN "liquidambar" ;
lin liquidate_V = mkV "liquidate" "liquidates" "liquidated" "liquidated" "liquidating";
lin liquidate_V2 = mkV2 (mkV "liquidate" "liquidates" "liquidated" "liquidated" "liquidating");
lin liquidation_N = mkN "liquidation" ;
lin liquidator_N = mkN human (mkN "liquidator" "liquidators");
lin liquidity_N = mkN "liquidity" ;
lin liquidize_V2 = mkV2 (mkV "liquidize" "liquidizes" "liquidized" "liquidized" "liquidizing");
lin liquidizer_N = mkN "liquidizer" "liquidizers";
lin liquor_N = mkN "liquor" "liquors";
lin liquorice_N = mkN "liquorice" ;
lin lira_N = mkN "lira" "liras";
lin lisa_PN = mkPN "Lisa";
lin lisbon_PN = mkPN "Lisbon";
lin lisinopril_N = mkN "lisinopril" ;
lin liskeard_PN = mkPN "Liskeard";
lin lisle_N = mkN "lisle" ;
lin lisp_N = mkN "lisp" "lisps";
lin lisp_V = mkV "lisp" "lisps" "lisped" "lisped" "lisping";
lin lisp_V2 = mkV2 (mkV "lisp" "lisps" "lisped" "lisped" "lisping");
lin lisper_N = mkN "lisper" ;
lin lispingly_Adv = mkAdv "lispingly";
lin lissom_A = compoundA (mkA "lissom");
lin lissome_A = compoundA (mkA "lissome");
lin lissomeness_N = mkN "lissomeness" ;
lin lissomness_N = mkN "lissomness" ;
lin list_N = mkN "list" "lists";
lin list_of_N2 = mkN2 (mkN "list") (mkPrep "of");
lin list_V = mkV "list" "lists" "listed" "listed" "listing";
lin list_V2 = mkV2 (mkV "list" "lists" "listed" "listed" "listing");
lin list_V2V = mkV2V (mkV "list" "lists" "listed" "listed" "listing") noPrep to_Prep ;
lin list_price_N = mkN "list-price" "list-prices";
lin listen_V = mkV "listen" "listens" "listened" "listened" "listening";
lin listenerMasc_N = mkN masculine (mkN "listener" "listeners");
lin listenerFem_N = mkN feminine (mkN "listener" "listeners");
lin listening_N = mkN "listening" ;
lin lister_N = mkN "lister" ;
lin listeria_N = mkN "listeria" ;
lin listeriosis_N = mkN "listeriosis" ;
lin listing_N = mkN "listing" "listings";
lin listless_A = compoundA (mkA "listless");
lin listlessness_N = mkN "listlessness" ;
lin lit_V2 = mkV2 (irregDuplV "lit" "lit" "lit");
lin litany_N = mkN "litany" "litanies";
lin litas_N = mkN "litas" ;
lin litchee_N = mkN "litchee" "litchees";
lin litchi_N = mkN "litchi" "litchis";
lin literacy_N = mkN "literacy" ;
lin literal_A = compoundA (mkA "literal");
lin literal_N = mkN "literal" "literals";
lin literalism_N = mkN "literalism" ;
lin literalness_N = mkN "literalness" ;
lin literary_A = compoundA (mkA "literary");
lin literate_A = compoundA (mkA "literate");
lin literate_N = mkN human (mkN "literate" "literates");
lin literati_N = mkN "literati" ;
lin literatim_Adv = mkAdv "literatim" ;
lin literature_N = mkN "literature" ;
lin lithe_A = compoundA (mkA "lithe");
lin lithiasis_N = mkN "lithiasis" ;
lin lithic_A = mkA "lithic" ;
lin lithium_N = mkN "lithium" ;
lin lithograph_N = mkN "lithograph" "lithographs";
lin lithograph_V = mkV "lithograph" "lithographs" "lithographed" "lithographed" "lithographing";
lin lithograph_V2 = mkV2 (mkV "lithograph" "lithographs" "lithographed" "lithographed" "lithographing");
lin lithographer_N = mkN human (mkN "lithographer");
lin lithographic_A = compoundA (mkA "lithographic");
lin lithography_N = mkN "lithography" ;
lin lithomancer_N = mkN "lithomancer" ;
lin lithomancy_N = mkN "lithomancy" ;
lin lithomantic_A = mkA "lithomantic" ;
lin lithophyte_N = mkN "lithophyte" ;
lin lithophytic_A = mkA "lithophytic" ;
lin lithops_N = mkN "lithops" ;
lin lithosphere_N = mkN "lithosphere" ;
lin lithotomy_N = mkN "lithotomy" ;
lin lithuresis_N = mkN "lithuresis" ;
lin litigant_N = mkN "litigant" "litigants";
lin litigate_V = mkV "litigate" "litigates" "litigated" "litigated" "litigating";
lin litigate_V2 = mkV2 (mkV "litigate" "litigates" "litigated" "litigated" "litigating");
lin litigation_N = mkN "litigation" ;
lin litigious_A = compoundA (mkA "litigious");
lin litigiousness_N = mkN "litigiousness" ;
lin litmus_N = mkN "litmus" ;
lin litmus_paper_N = mkN "litmus-paper" "litmus-papers";
lin litotes_N = mkN "litotes" "litotes";
lin litre_N = mkN "litre" "litres";
lin litter_N = mkN "litter" "litters";
lin litter_V = mkV "litter" "litters" "littered" "littered" "littering";
lin litter_V2 = mkV2 (mkV "litter" "litters" "littered" "littered" "littering");
lin litter_basket_N = mkN "litter-basket" "litter-baskets";
lin litter_lout_N = mkN "litter-lout" "litter-louts";
lin litterbin_N = mkN "litterbin" "litterbins";
lin litterer_N = mkN "litterer" ;
lin little_A = variants {mkA "little" "less"   "least"     "little";
                         mkA "little" "lesser" "least"     "little";
                         mkA "little" "littler" "littlest" "little"};
lin little_Det = mkDeterminer singular "little" ;
lin little_N = mkN "little" ;
lin littlehampton_PN = mkPN "Littlehampton";
lin littleneck_N = mkN "littleneck" ;
lin littleness_N = mkN "littleness" ;
lin littoral_A = compoundA (mkA "littoral");
lin littoral_N = mkN "littoral" "littorals";
lin liturgical_A = compoundA (mkA "liturgical");
lin liturgics_N = mkN "liturgics" ;
lin liturgist_N = mkN "liturgist" ;
lin liturgy_N = mkN "liturgy" "liturgies";
lin livable_A = compoundA (mkA "livable");
lin live_A = compoundA (mkA "live");
lin live_Adv = mkAdv "live";
lin live_V = mkV "live" "lives" "lived" "lived" "living";
lin live_V2 = mkV2 (mkV "live" "lives" "lived" "lived" "living");
lin live_VV = mkVV (mkV "live" "lives" "lived" "lived" "living");
lin live_birth_N = mkN "live-birth" "live-births";
lin liveable_A = compoundA (mkA "liveable");
lin liveborn_A = mkA "liveborn" ;
lin livedo_N = mkN "livedo" ;
lin livelihood_N = mkN "livelihood" "livelihoods";
lin liveliness_N = mkN "liveliness" ;
lin livelong_A = compoundA (mkA "livelong");
lin lively_A = mkA "lively" "livelier";
lin liven_V = mkV "liven" "livens" "livened" "livened" "livening";
lin liven_V2 = mkV2 (mkV "liven" "livens" "livened" "livened" "livening");
lin liver_N = mkN "liver" "livers";
lin liveried_A = compoundA (mkA "liveried");
lin liverish_A = compoundA (mkA "liverish");
lin liverpool_PN = mkPN "Liverpool";
lin liverpudlian_A = compoundA (mkA "liverpudlian");
lin liverpudlian_N = mkN "liverpudlian" "liverpudlians";
lin liverwort_N = mkN "liverwort" ;
lin liverwurst_N = mkN "liverwurst" ;
lin livery_A = compoundA (mkA "livery");
lin livery_N = mkN "livery" "liveries";
lin liveryman_N = mkN masculine (mkN "liveryman" "liverymen");
lin livestock_N = mkN "livestock" ;
lin livid_A = compoundA (mkA "livid");
lin lividity_N = mkN "lividity" ;
lin lividness_N = mkN "lividness" ;
lin living_A = mkA "living";
lin living_N = mkN "living" "livings";
lin living_room_N = mkN "living-room" "living-rooms";
lin living_space_N = mkN "living-space" "living-spaces";
lin livingston_PN = mkPN "Livingston";
lin livorno_PN = mkPN "Livorno";
lin liz_PN = mkPN "Liz";
lin liza_N = mkN "liza" ;
lin liza_PN = mkPN "Liza";
lin lizard_N = mkN "lizard" "lizards";
lin lizardfish_N = mkN "lizardfish" ;
lin lizzy_PN = mkPN "Lizzy";
lin ljubljana_PN = mkPN "Ljubljana";
lin llama_N = mkN "llama" "llamas";
lin llandudno_PN = mkPN "Llandudno";
lin llanelli_PN = mkPN "Llanelli";
lin llangollen_PN = mkPN "Llangollen";
lin llano_N = mkN "llano" ;
lin llantrisant_PN = mkPN "Llantrisant";
lin llantwit_major_PN = mkPN "Llantwit major";
lin llb_N = mkN "llb" ;
lin lloyd's_PN = mkPN "Lloyd's";
lin loach_N = mkN "loach" ;
lin load_N = mkN "load" "loads";
lin load_V = mkV "load" "loads" "loaded" "loaded" "loading";
lin load_V2 = mkV2 (mkV "load" "loads" "loaded" "loaded" "loading");
lin load_line_N = mkN "load-line" "load-lines";
lin load_shedding_N = mkN "load-shedding" ;
lin loader_N = mkN "loader" "loaders";
lin loading_N = mkN "loading" "loadings";
lin loadstar_N = mkN "loadstar" "loadstars";
lin loadstone_N = mkN "loadstone" ;
lin loaf_N = mkN "loaf" "loaves" {- FIXME: guessed plural form -};
lin loaf_V = mkV "loaf" "loafs" "loafed" "loafed" "loafing";
lin loaf_V2 = mkV2 (mkV "loaf" "loafs" "loafed" "loafed" "loafing");
lin loaf_sugar_N = mkN "loaf-sugar" ;
lin loafer_N = mkN "loafer" "loafers";
lin loam_N = mkN "loam" ;
lin loamless_A = mkA "loamless" ;
lin loamy_A = mkA "loamy" "loamier";
lin loan_N = mkN "loan" "loans";
lin loan_V2 = mkV2 (mkV "loan" "loans" "loaned" "loaned" "loaning");
lin loan_collection_N = mkN "loan-collection" "loan-collections";
lin loan_office_N = mkN "loan-office" "loan-offices";
lin loanblend_N = mkN "loanblend" ;
lin loaner_N = mkN "loaner" ;
lin loanhead_PN = mkPN "Loanhead";
lin loanword_N = mkN "loanword" "loanwords";
lin loasa_N = mkN "loasa" ;
lin loath_A = compoundA (mkA "loath");
lin loathe_V2 = mkV2 (mkV "loathe" "loathes" "loathed" "loathed" "loathing");
lin loathing_N = mkN "loathing" ;
lin loathly_A = mkA "loathly" "loathlier";
lin loathsome_A = compoundA (mkA "loathsome");
lin loathsomeness_N = mkN "loathsomeness" ;
lin lob_N = mkN "lob" "lobs";
lin lob_V = mkV "lob" "lobs" "lobbed" "lobbed" "lobbing";
lin lob_V2 = mkV2 (mkV "lob" "lobs" "lobbed" "lobbed" "lobbing");
lin lobar_A = mkA "lobar" ;
lin lobate_A = mkA "lobate" ;
lin lobby_N = mkN "lobby" "lobbies";
lin lobby_V = mkV "lobby" "lobbies" "lobbied" "lobbied" "lobbying";
lin lobby_V2 = mkV2 (mkV "lobby" "lobbies" "lobbied" "lobbied" "lobbying");
lin lobby_V2V = mkV2V (mkV "lobby" "lobbies" "lobbied" "lobbied" "lobbying") noPrep to_Prep ;
lin lobbyism_N = mkN "lobbyism" ;
lin lobbyist_N = mkN "lobbyist" "lobbyists";
lin lobe_N = mkN "lobe" "lobes";
lin lobectomy_N = mkN "lobectomy" ;
lin lobed_A = compoundA (mkA "lobed");
lin lobelia_N = mkN "lobelia" ;
lin lobeliaceous_A = mkA "lobeliaceous" ;
lin loblolly_N = mkN "loblolly" ;
lin lobotomy_N = mkN "lobotomy" ;
lin lobscouse_N = mkN "lobscouse" ;
lin lobster_N = mkN "lobster" "lobsters";
lin lobster_pot_N = mkN "lobster-pot" "lobster-pots";
lin lobsterman_N = mkN masculine (mkN "lobsterman" "lobstermen");
lin lobular_A = mkA "lobular" ;
lin lobularity_N = mkN "lobularity" ;
lin lobule_N = mkN "lobule" ;
lin loc_cit_PN = mkPN "Loc cit";
lin local_A = compoundA (mkA "local");
lin local_N = mkN "local" "locals";
lin locale_N = mkN "locale" "locales";
lin localism_N = mkN "localism" "localisms";
lin locality_N = mkN "locality" "localities";
lin localization_N = mkN "localization" "localizations";
lin localize_V2 = mkV2 (mkV "localize" "localizes" "localized" "localized" "localizing");
lin locate_V = mkV "locate";
lin locate_V2 = mkV2 (mkV "locate" "locates" "located" "located" "locating");
lin location_N = mkN "location" "locations";
lin locator_N = mkN "locator" ;
lin loch_N = mkN "loch" "lochs";
lin lochgelly_PN = mkPN "Lochgelly";
lin lochia_N = mkN "lochia" ;
lin lock_N = mkN "lock" "locks";
lin lock_V = mkV "lock" "locks" "locked" "locked" "locking";
lin lock_V2 = mkV2 (mkV "lock" "locks" "locked" "locked" "locking");
lin lock_gate_N = mkN "lock-gate" "lock-gates";
lin lock_keeper_N = mkN "lock-keeper" "lock-keepers";
lin lockage_N = mkN "lockage" ;
lin lockdown_N = mkN "lockdown" ;
lin locker_N = mkN "locker" "lockers";
lin locket_N = mkN "locket" "lockets";
lin locking_N = mkN "locking" ;
lin lockjaw_N = mkN "lockjaw" ;
lin lockmaster_N = mkN "lockmaster" ;
lin locknut_N = mkN "locknut" "locknuts";
lin lockout_N = mkN "lockout" "lockouts";
lin lockring_N = mkN "lockring" ;
lin locksmith_N = mkN "locksmith" "locksmiths";
lin lockstep_N = mkN "lockstep" ;
lin lockstitch_N = mkN "lockstitch" "lockstitches";
lin lockup_A = compoundA (mkA "lockup");
lin lockup_N = mkN "lockup" "lockups";
lin loco_A = compoundA (mkA "loco");
lin locomotion_N = mkN "locomotion" ;
lin locomotive_A = compoundA (mkA "locomotive");
lin locomotive_N = mkN "locomotive" "locomotives";
lin locoweed_N = mkN "locoweed" ;
lin locule_N = mkN "locule" ;
lin locum_N = mkN "locum" "locums";
lin locum_tenens_N = mkN "locum tenens" "IRREG";
lin locus_N = mkN "locus" "loci" {- FIXME: guessed plural form -};
lin locus_classicus_N = mkN "locus classicus" "locus classici" {- FIXME: guessed plural form -};
lin locust_N = mkN "locust" "locusts";
lin locust_tree_N = mkN "locust-tree" "locust-trees";
lin locution_N = mkN "locution" "locutions";
lin lode_N = mkN "lode" "lodes";
lin lodestar_N = mkN "lodestar" "lodestars";
lin lodestone_N = mkN "lodestone" ;
lin lodge_N = mkN "lodge" "lodges";
lin lodge_V = mkV "lodge" "lodges" "lodged" "lodged" "lodging";
lin lodge_V2 = mkV2 (mkV "lodge" "lodges" "lodged" "lodged" "lodging");
lin lodgement_N = mkN "lodgement" "lodgements";
lin lodger_N = mkN "lodger" "lodgers";
lin lodging_N = mkN "lodging" "lodgings";
lin lodging_house_N = mkN "lodging-house" "lodging-houses";
lin lodgment_N = mkN "lodgment" "lodgments";
lin lodz_PN = mkPN "Lodz";
lin loess_N = mkN "loess" ;
lin loft_N = mkN "loft" "lofts";
lin loft_V2 = mkV2 (mkV "loft" "lofts" "lofted" "lofted" "lofting");
lin loftiness_N = mkN "loftiness" ;
lin loftus_PN = mkPN "Loftus";
lin lofty_A = mkA "lofty" "loftier";
lin log_N = mkN "log" "logs";
lin log_V2 = mkV2 (mkV "log" "logs" "logged" "logged" "logging");
lin log_cabin_N = mkN "log-cabin" "log-cabins";
lin log_jam_N = mkN "log-jam" "log-jams";
lin log_rolling_N = mkN "log-rolling" ;
lin loganberry_N = mkN "loganberry" "loganberries";
lin logarithm_N = mkN "logarithm" "logarithms";
lin logarithmic_A = compoundA (mkA "logarithmic");
lin logarithmically_Adv = mkAdv "logarithmically";
lin logbook_N = mkN "logbook" "logbooks";
lin loge_N = mkN "loge" ;
lin loggerhead_N = mkN "loggerhead" ;
lin loggerheads_N = mkN "loggerheads" ;
lin loggia_N = mkN "loggia" "loggias";
lin logging_N = mkN "logging" ;
lin logic_N = mkN "logic" "logics";
lin logical_A = compoundA (mkA "logical");
lin logicality_N = mkN "logicality" ;
lin logician_N = mkN "logician" "logicians";
lin logicism_N = mkN "logicism" ;
lin loginess_N = mkN "loginess" ;
lin logion_N = mkN "logion" ;
lin logistic_A = mkA "logistic" ;
lin logistics_N = mkN "logistics" "logistics";
lin logjam_N = mkN "logjam" ;
lin logo_N = mkN "logo" ;
lin logogram_N = mkN "logogram" ;
lin logogrammatic_A = mkA "logogrammatic" ;
lin logogrammatically_Adv = mkAdv "logogrammatically" ;
lin logomach_N = mkN "logomach" ;
lin logomachy_N = mkN "logomachy" ;
lin logorrhea_N = mkN "logorrhea" ;
lin logrolling_N = mkN "logrolling" ;
lin logwood_N = mkN "logwood" ;
lin loin_N = mkN "loin" "loins";
lin loincloth_N = mkN "loincloth" "loincloths";
lin loins_N = mkN "loins" ;
lin loir_N = mkN "loir" ;
lin lois_PN = mkPN "Lois";
lin loiter_V = mkV "loiter" "loiters" "loitered" "loitered" "loitering";
lin loiter_V2 = mkV2 (mkV "loiter" "loiters" "loitered" "loitered" "loitering");
lin loiterer_N = mkN "loiterer" "loiterers";
lin loligo_N = mkN "loligo" ;
lin loll_V = mkV "loll" "lolls" "lolled" "lolled" "lolling";
lin loll_V2 = mkV2 (mkV "loll" "lolls" "lolled" "lolled" "lolling");
lin lollipop_N = mkN "lollipop" "lollipops";
lin lolly_N = mkN "lolly" "lollies";
lin lomatia_N = mkN "lomatia" ;
lin loment_N = mkN "loment" ;
lin lomustine_N = mkN "lomustine" ;
lin london_PN = mkPN "London";
lin londonderry_PN = mkPN "Londonderry";
lin londoner_N = mkN "londoner" "londoners";
lin lone_A = compoundA (mkA "lone");
lin loneliness_N = mkN "loneliness" ;
lin lonely_A = mkA "lonely" "lonelier";
lin loner_N = mkN "loner" ;
lin lonesome_A = compoundA (mkA "lonesome");
lin long_A = irregAdv (mkA "long" "longer") "long";
lin long_N = mkN "long" "longs";
lin long_V = mkV "long" "longs" "longed" "longed" "longing";
lin long_distance_A = compoundA (mkA "long-distance");
lin long_drawn_out_A = compoundA (mkA "long-drawn-out");
lin long_eaton_PN = mkPN "Long eaton";
lin long_haired_A = compoundA (mkA "long-haired");
lin long_headed_A = compoundA (mkA "long-headed");
lin long_lived_A = compoundA (mkA "long-lived");
lin long_play_A = compoundA (mkA "long-play");
lin long_playing_A = compoundA (mkA "long-playing");
lin long_range_A = compoundA (mkA "long-range");
lin long_sighted_A = compoundA (mkA "long-sighted");
lin long_standing_A = compoundA (mkA "long-standing");
lin long_suffering_A = compoundA (mkA "long-suffering");
lin long_term_A = compoundA (mkA "long-term");
lin long_time_A = compoundA (mkA "long-time");
lin long_winded_A = compoundA (mkA "long-winded");
lin long_windedness_N = mkN "long-windedness" ;
lin longan_N = mkN "longan" ;
lin longanberry_N = mkN "longanberry" ;
lin longboat_N = mkN "longboat" "longboats";
lin longbow_N = mkN "longbow" "longbows";
lin longbowman_N = mkN masculine (mkN "longbowman" "longbowmen");
lin longer_Adv = mkAdv "longer";
lin longer_N = mkN "longer" ;
lin longest_Adv = mkAdv "longest";
lin longevity_N = mkN "longevity" ;
lin longhand_A = mkA "longhand" ;
lin longhand_N = mkN "longhand" ;
lin longhorn_N = mkN "longhorn" ;
lin longing_N = mkN "longing" "longings";
lin longingly_Adv = mkAdv "longingly" ;
lin longish_A = compoundA (mkA "longish");
lin longitude_N = mkN "longitude" "longitudes";
lin longitudinal_A = compoundA (mkA "longitudinal");
lin longness_N = mkN "longness" ;
lin longridge_PN = mkPN "Longridge";
lin longshoreman_N = mkN masculine (mkN "longshoreman" "longshoremen");
lin longshot_N = mkN "longshot" ;
lin longstanding_A = mkA "longstanding" ;
lin longton_PN = mkPN "Longton";
lin longueur_N = mkN "longueur" ;
lin longways_Adv = mkAdv "longways";
lin longways_N = mkN "longways" ;
lin longwise_Adv = mkAdv "longwise";
lin longwool_N = mkN "longwool" ;
lin loo_N = mkN "loo" "loos";
lin loofa_N = mkN "loofa" "loofas";
lin loofah_N = mkN "loofah" "loofahs";
lin look_N = mkN "look" "looks";
lin look_V = mkV "look" "looks" "looked" "looked" "looking";
lin look_V2 = mkV2 (mkV "look" "looks" "looked" "looked" "looking");
lin look_V2V = mkV2V (mkV "look" "looks" "looked" "looked" "looking") noPrep to_Prep ;
lin look_VA = mkVA (mkV "look" "looks" "looked" "looked" "looking");
lin look_VV = mkVV (mkV "look" "looks" "looked" "looked" "looking");
lin look_ahead_to_V2 = mkV2 (partV (mkV "look") "ahead") (mkPrep "to");
lin look_after_V2 = prepV2 (mkV "look") (mkPrep "after");
lin look_around_V = partV (mkV "look") "around";
lin look_around_at_V2 = mkV2 (partV (mkV "look") "around") (mkPrep "at");
lin look_at_V2 = mkV2 (mkV "look" "looks" "looked" "looked" "looking") (mkPrep "at");
lin look_back_V = partV (mkV "look") "back";
lin look_back_on_V2 = prepV2 (partV (mkV "look") "back") (mkPrep "on");
lin look_down_V = partV (mkV "look") "down";
lin look_for_V2 = mkV2 (mkV "look" "looks" "looked" "looked" "looking") (mkPrep "for");
lin look_forward_to_V2 = prepV2 (partV (mkV "look") "forward") (mkPrep "to");
lin look_into_V2 = prepV2 (mkV "look") (mkPrep "into");
lin look_on_V = partV (mkV "look") "on";
lin look_over_N = mkN "look-over" "look-overs";
lin look_to_V2 = prepV2 (mkV "look") (mkPrep "to");
lin look_toward_V2 = prepV2 (mkV "look") (mkPrep "toward");
lin look_up_V = partV (mkV "look") "up";
lin look_upon_as_V3 = mkV3 (partV (mkV "look") "upon") noPrep (mkPrep "as");
lin lookdown_N = mkN "lookdown" ;
lin looker_N = mkN "looker" "lookers";
lin looker_on_N = mkN "looker-on" "looker-a" {- FIXME: guessed plural form -};
lin looking_N = mkN "looking" ;
lin looking_glass_N = mkN "looking-glass" "looking-glasses";
lin lookout_N = mkN "lookout" "lookouts";
lin loom_N = mkN "loom" "looms";
lin loom_V = mkV "loom" "looms" "loomed" "loomed" "looming";
lin loon_N = mkN "loon" "loons";
lin loony_A = mkA "loony" "loonier";
lin loony_N = mkN "loony" "loonies";
lin loonybin_N = mkN "loonybin" "loonybins";
lin loop_N = mkN "loop" "loops";
lin loop_V = mkV "loop" "loops" "looped" "looped" "looping";
lin loop_V2 = mkV2 (mkV "loop" "loops" "looped" "looped" "looping");
lin loop_line_N = mkN "loop-line" "loop-lines";
lin loophole_N = mkN "loophole" "loopholes";
lin loopy_A = compoundA (mkA "loopy");
lin loose_A = mkA "loose" "looser";
lin loose_Adv = mkAdv "loose" ;
lin loose_V2 = mkV2 (mkV "loose" "looses" "loosed" "loosed" "loosing");
lin loose_leaf_A = compoundA (mkA "loose-leaf");
lin looseleaf_A = mkA "looseleaf" ;
lin loosen_V = mkV "loosen" "loosens" "loosened" "loosened" "loosening";
lin loosen_V2 = mkV2 (mkV "loosen" "loosens" "loosened" "loosened" "loosening");
lin looseness_N = mkN "looseness" ;
lin loosening_N = mkN "loosening" ;
lin loosestrife_N = mkN "loosestrife" ;
lin loot_N = mkN "loot" ;
lin loot_V = mkV "loot" "loots" "looted" "looted" "looting";
lin loot_V2 = mkV2 (mkV "loot" "loots" "looted" "looted" "looting");
lin looter_N = mkN "looter" "looters";
lin looting_N = mkN "looting" ;
lin lop_V = mkV "lop" "lops" "lopped" "lopped" "lopping";
lin lop_V2 = mkV2 (mkV "lop" "lops" "lopped" "lopped" "lopping");
lin lop_eared_A = compoundA (mkA "lop-eared");
lin lope_N = mkN "lope" "IRREG";
lin lope_V = mkV "lope" "lopes" "loped" "loped" "loping";
lin lopsided_A = compoundA (mkA "lopsided");
lin lopsidedness_N = mkN "lopsidedness" ;
lin loquacious_A = compoundA (mkA "loquacious");
lin loquaciousness_N = mkN "loquaciousness" ;
lin loquacity_N = mkN "loquacity" ;
lin loquat_N = mkN "loquat" "loquats";
lin lorazepam_N = mkN "lorazepam" ;
lin lorchel_N = mkN "lorchel" ;
lin lord_N = mkN "lord" "lords";
lin lord_V2 = mkV2 (mkV "lord" "lords" "lorded" "lorded" "lording");
lin lordless_A = compoundA (mkA "lordless");
lin lordliness_N = mkN "lordliness" ;
lin lordly_A = mkA "lordly" "lordlier";
lin lordolatry_N = mkN "lordolatry" ;
lin lordosis_N = mkN "lordosis" ;
lin lordship_N = mkN "lordship" "lordships";
lin lore_N = mkN "lore" ;
lin lorgnette_N = mkN "lorgnette" "lorgnettes";
lin lorica_N = mkN "lorica" ;
lin lorikeet_N = mkN "lorikeet" ;
lin lorn_A = compoundA (mkA "lorn");
lin lorna_PN = mkPN "Lorna";
lin lorry_N = mkN "lorry" "lorries";
lin lory_N = mkN "lory" ;
lin los_angeles_PN = mkPN "Los Angeles";
lin lose_V = IrregEng.lose_V;
lin lose_V2 = mkV2 (IrregEng.lose_V);
lin loser_N = mkN "loser" "losers";
lin losings_N = mkN "losings" ;
lin loss_N = mkN "loss" "losses";
lin loss_leader_N = mkN "loss-leader" "loss-leaders";
lin lossiemouth_PN = mkPN "Lossiemouth";
lin lossless_A = mkA "lossless" ;
lin lossy_A = mkA "lossy" ;
lin lot_N = mkN "lot" "lots";
lin lota_N = mkN "lota" ;
lin loth_A = compoundA (mkA "loth");
lin lothian_PN = mkPN "Lothian";
lin loti_N = mkN "loti" ;
lin lotic_A = mkA "lotic" ;
lin lotion_N = mkN "lotion" "lotions";
lin lottery_N = mkN "lottery" "lotteries";
lin lotto_N = mkN "lotto" ;
lin lotus_N = mkN "lotus" "lotuses";
lin lotus_eater_N = mkN "lotus-eater" "lotus-eaters";
lin lotusland_N = mkN "lotusland" ;
lin louche_A = mkA "louche" ;
lin loud_A = mkA "loud" "louder";
lin loud_Adv = mkAdv "loud";
lin loud_hailer_N = mkN "loud-hailer" "loud-hailers";
lin loudmouth_N = mkN "loudmouth" ;
lin loudness_N = mkN "loudness" ;
lin loudspeaker_N = mkN "loudspeaker" "loudspeakers";
lin lough_N = mkN "lough" "loughs";
lin loughborough_PN = mkPN "Loughborough";
lin louis_PN = mkPN "Louis";
lin louise_PN = mkPN "Louise";
lin louisiana_PN = mkPN "Louisiana";
lin louisville_PN = mkPN "Louisville";
lin lounge_N = mkN "lounge" "lounges";
lin lounge_V = mkV "lounge" "lounges" "lounged" "lounged" "lounging";
lin lounge_chair_N = mkN "lounge-chair" "lounge-chairs";
lin lounge_lizard_N = mkN "lounge-lizard" "lounge-lizards";
lin lounge_suit_N = mkN "lounge-suit" "lounge-suits";
lin lounger_N = mkN "lounger" "loungers";
lin loungewear_N = mkN "loungewear" ;
lin loupe_N = mkN "loupe" ;
lin lour_V = mkV "lour" "lours" "loured" "loured" "louring";
lin louringly_Adv = mkAdv "louringly";
lin louse_N = mkN "louse" "lice" {- FIXME: guessed plural form -};
lin lousy_A = mkA "lousy" "lousier";
lin lout_N = mkN "lout" "louts";
lin louth_PN = mkPN "Louth";
lin loutish_A = compoundA (mkA "loutish");
lin louvar_N = mkN "louvar" ;
lin louver_N = mkN "louver" ;
lin louvered_A = compoundA (mkA "louvered");
lin louvre_N = mkN "louvre" "louvres";
lin lovable_A = compoundA (mkA "lovable");
lin lovage_N = mkN "lovage" ;
lin lovastatin_N = mkN "lovastatin" ;
lin love_N = mkN "love" "loves";
lin love_V2 = mkV2 (mkV "love" "loves" "loved" "loved" "loving");
lin love_V2V = mkV2V (mkV "love") noPrep to_Prep ;
lin love_VV = mkVV (mkV "love") ;
lin love_affair_N = mkN "love-affair" "love-affairs";
lin love_child_N = mkN "love-child" "love-children" {- FIXME: guessed plural form -};
lin love_feast_N = mkN "love-feast" "love-feasts";
lin love_knot_N = mkN "love-knot" "love-knots";
lin love_letter_N = mkN "love-letter" "love-letters";
lin love_match_N = mkN "love-match" "love-matches";
lin love_philtre_N = mkN "love-philtre" "love-philtres";
lin love_potion_N = mkN "love-potion" "love-potions";
lin love_seat_N = mkN "love-seat" "love-seats";
lin love_song_N = mkN "love-song" "love-songs";
lin love_story_N = mkN "love-story" "love-stories";
lin love_token_N = mkN "love-token" "love-tokens";
lin lovebird_N = mkN "lovebird" "lovebirds";
lin loveless_A = compoundA (mkA "loveless");
lin loveliness_N = mkN "loveliness" ;
lin lovelorn_A = compoundA (mkA "lovelorn");
lin lovely_A = mkA "lovely" "lovelier";
lin lovemaking_N = mkN "lovemaking" ;
lin lover_N = mkN human (mkN "lover" "lovers");
lin loverlike_A = compoundA (mkA "loverlike");
lin lovesick_A = compoundA (mkA "lovesick");
lin lovesickness_N = mkN "lovesickness" ;
lin loving_A = compoundA (mkA "loving");
lin loving_cup_N = mkN "loving-cup" "loving-cups";
lin loving_kindness_N = mkN "loving-kindness" ;
lin lovingness_N = mkN "lovingness" ;
lin low_A = mkA "low" "lower";
lin low_Adv = mkAdv "low";
lin low_N = mkN "low" "lows";
lin low_V = mkV "low" "lows" "lowed" "lowed" "lowing";
lin low_down_A = compoundA (mkA "low-down");
lin low_keyed_A = compoundA (mkA "low-keyed");
lin low_pitched_A = compoundA (mkA "low-pitched");
lin low_relief_N = mkN "low-relief" "low-reliefs";
lin low_spirited_A = compoundA (mkA "low-spirited");
lin lowborn_A = compoundA (mkA "lowborn");
lin lowboy_N = mkN "lowboy" ;
lin lowbred_A = compoundA (mkA "lowbred");
lin lowbrow_A = compoundA (mkA "lowbrow");
lin lowbrow_N = mkN "lowbrow" "lowbrows";
lin lower_Adv = mkAdv "lower";
lin lower_V = mkV "lower" "lowers" "lowered" "lowered" "lowering";
lin lower_V2 = mkV2 (mkV "lower" "lowers" "lowered" "lowered" "lowering");
lin lowercase_A = mkA "lowercase" ;
lin lowerclassman_N = mkN masculine (mkN "lowerclassman" "lowerclassmen");
lin lowering_N = mkN "lowering" ;
lin loweringly_Adv = mkAdv "loweringly" ;
lin lowermost_A = compoundA (mkA "lowermost");
lin lowest_Adv = mkAdv "lowest";
lin lowestoft_PN = mkPN "Lowestoft";
lin lowland_A = mkA "lowland" ;
lin lowland_N = mkN "lowland" ;
lin lowlander_N = mkN "lowlander" "lowlanders";
lin lowliness_N = mkN "lowliness" ;
lin lowly_A = mkA "lowly" "lowlier";
lin lowness_N = mkN "lowness" ;
lin lowset_A = mkA "lowset" ;
lin lox_N = mkN "lox" ;
lin loxapine_N = mkN "loxapine" ;
lin loyal_A = mkA "loyal" "loyaller";
lin loyalist_N = mkN "loyalist" "loyalists";
lin loyalty_N = mkN "loyalty" "loyalties";
lin loyang_PN = mkPN "Loyang";
lin lozenge_N = mkN "lozenge" "lozenges";
lin lp_N = mkN "lp" "lps";
lin lsd_N = mkN "lsd" ;
lin lt_PN = mkPN "Lt";
lin ltd_PN = mkPN "Ltd";
lin luau_N = mkN "luau" ;
lin lubber_N = mkN "lubber" "lubbers";
lin lubberly_A = compoundA (mkA "lubberly");
lin lubeck_PN = mkPN "Lubeck";
lin lubricant_N = mkN "lubricant" "lubricants";
lin lubricate_V2 = mkV2 (mkV "lubricate" "lubricates" "lubricated" "lubricated" "lubricating");
lin lubrication_N = mkN "lubrication" "lubrications";
lin lubricious_A = mkA "lubricious" ;
lin lucent_A = compoundA (mkA "lucent");
lin lucerne_N = mkN "lucerne" ;
lin lucid_A = compoundA (mkA "lucid");
lin lucidity_N = mkN "lucidity" ;
lin lucifer_N = mkN "lucifer" "lucifers";
lin luciferin_N = mkN "luciferin" ;
lin lucifugous_A = mkA "lucifugous" ;
lin luck_N = mkN "luck" ;
lin luckless_A = compoundA (mkA "luckless");
lin lucknow_PN = mkPN "Lucknow";
lin lucky_A = mkA "lucky" "luckier";
lin lucrative_A = compoundA (mkA "lucrative");
lin lucre_N = mkN "lucre" ;
lin lucubration_N = mkN "lucubration" ;
lin lucy_PN = mkPN "Lucy";
lin luddite_N = mkN "luddite" "luddites";
lin ludicrous_A = compoundA (mkA "ludicrous");
lin ludlow_PN = mkPN "Ludlow";
lin ludo_N = mkN "ludo" ;
lin ludwigshafen_PN = mkPN "Ludwigshafen";
lin luff_N = mkN "luff" ;
lin luff_V = mkV "luff" "luffs" "luffed" "luffed" "luffing";
lin luff_V2 = mkV2 (mkV "luff" "luffs" "luffed" "luffed" "luffing");
lin luffa_N = mkN "luffa" ;
lin lug_N = mkN "lug" "lugs";
lin lug_V2 = mkV2 (mkV "lug" "lugs" "lugged" "lugged" "lugging");
lin luge_N = mkN "luge" "luges";
lin luger_N = mkN "luger" ;
lin luggage_N = mkN "luggage" ;
lin luggage_carrier_N = mkN "luggage-carrier" "luggage-carriers";
lin luggage_rack_N = mkN "luggage-rack" "luggage-racks";
lin luggage_van_N = mkN "luggage-van" "luggage-vans";
lin lugger_N = mkN "lugger" "luggers";
lin luging_N = mkN "luging" ;
lin lugsail_N = mkN "lugsail" "lugsails";
lin lugubrious_A = compoundA (mkA "lugubrious");
lin lugubriousness_N = mkN "lugubriousness" ;
lin lugworm_N = mkN "lugworm" ;
lin luke_PN = mkPN "Luke";
lin lukewarm_A = compoundA (mkA "lukewarm");
lin lukewarmness_N = mkN "lukewarmness" ;
lin lull_N = mkN "lull" "lulls";
lin lull_V = mkV "lull" "lulls" "lulled" "lulled" "lulling";
lin lull_V2 = mkV2 (mkV "lull" "lulls" "lulled" "lulled" "lulling");
lin lullaby_N = mkN "lullaby" "lullabies";
lin lumbago_N = mkN "lumbago" ;
lin lumbar_A = compoundA (mkA "lumbar");
lin lumber_N = mkN "lumber" ;
lin lumber_V = mkV "lumber" "lumbers" "lumbered" "lumbered" "lumbering";
lin lumber_V2 = mkV2 (mkV "lumber" "lumbers" "lumbered" "lumbered" "lumbering");
lin lumber_mill_N = mkN "lumber-mill" "lumber-mills";
lin lumbering_N = mkN "lumbering" ;
lin lumberjack_N = mkN "lumberjack" "lumberjacks";
lin lumberman_N = mkN masculine (mkN "lumberman" "lumbermen");
lin lumbermill_N = mkN "lumbermill" ;
lin lumberroom_N = mkN "lumberroom" "lumberrooms";
lin lumberyard_N = mkN "lumberyard" "lumberyards";
lin lumbosacral_A = mkA "lumbosacral" ;
lin lumen_N = mkN "lumen" ;
lin luminary_N = mkN "luminary" "luminaries";
lin luminescence_N = mkN "luminescence" ;
lin luminescent_A = mkA "luminescent" ;
lin luminism_N = mkN "luminism" ;
lin luminosity_N = mkN "luminosity" ;
lin luminous_A = compoundA (mkA "luminous");
lin lumma_N = mkN "lumma" ;
lin lump_N = mkN "lump" "lumps";
lin lump_V2 = mkV2 (mkV "lump" "lumps" "lumped" "lumped" "lumping");
lin lumpectomy_N = mkN "lumpectomy" ;
lin lumpenproletariat_N = mkN "lumpenproletariat" ;
lin lumper_N = mkN "lumper" ;
lin lumpfish_N = mkN "lumpfish" ;
lin lumpish_A = compoundA (mkA "lumpish");
lin lumpsucker_N = mkN "lumpsucker" ;
lin lumpy_A = mkA "lumpy" "lumpier";
lin lunacy_N = mkN "lunacy" "lunacies";
lin lunar_A = compoundA (mkA "lunar");
lin lunatic_A = mkA "lunatic" ;
lin lunatic_N = mkN "lunatic" "lunatics";
lin lunch_N = mkN "lunch" "lunches";
lin lunch_V = mkV "lunch" "lunches" "lunched" "lunched" "lunching";
lin lunch_V2 = mkV2 (mkV "lunch" "lunches" "lunched" "lunched" "lunching");
lin luncheon_N = mkN "luncheon" "luncheons";
lin luncher_N = mkN "luncher" ;
lin lunching_N = mkN "lunching" ;
lin lunchroom_N = mkN "lunchroom" ;
lin lunchtime_N = mkN "lunchtime" "lunchtimes";
lin lunette_N = mkN "lunette" ;
lin lung_N = mkN "lung" "lungs";
lin lung_power_N = mkN "lung-power" ;
lin lunge_N = mkN "lunge" "lunges";
lin lunge_V = mkV "lunge" "lunges" "lunged" "lunged" "lunging";
lin lunger_N = mkN "lunger" ;
lin lungfish_N = mkN "lungfish" ;
lin lungi_N = mkN "lungi" ;
lin lunisolar_A = mkA "lunisolar" ;
lin lunula_N = mkN "lunula" ;
lin lupin_N = mkN "lupin" "lupins";
lin lupine_A = mkA "lupine" ;
lin lupine_N = mkN "lupine" ;
lin lupus_N = mkN "lupus" ;
lin lurch_N = mkN "lurch" "lurches";
lin lurch_V = mkV "lurch" "lurches" "lurched" "lurched" "lurching";
lin lurcher_N = mkN "lurcher" "lurchers";
lin lure_N = mkN "lure" "lures";
lin lure_V2 = mkV2 (mkV "lure" "lures" "lured" "lured" "luring");
lin lurid_A = compoundA (mkA "lurid");
lin luridness_N = mkN "luridness" ;
lin lurk_V = mkV "lurk" "lurks" "lurked" "lurked" "lurking";
lin lurker_N = mkN "lurker" ;
lin lurking_place_N = mkN "lurking-place" "lurking-places";
lin luscious_A = compoundA (mkA "luscious");
lin lusciousness_N = mkN "lusciousness" ;
lin lush_A = mkA "lush" "lusher";
lin lush_N = mkN "lush" "lushes";
lin lust_N = mkN "lust" "lusts";
lin lust_V = mkV "lust" "lusts" "lusted" "lusted" "lusting";
lin luster_N = mkN "luster" ;
lin lusterware_N = mkN "lusterware" ;
lin lustful_A = compoundA (mkA "lustful");
lin lustre_N = mkN "lustre" ;
lin lustrous_A = compoundA (mkA "lustrous");
lin lustrum_N = mkN "lustrum" ;
lin lusty_A = mkA "lusty" "lustier";
lin luta_PN = mkPN "Luta";
lin lutanist_N = mkN "lutanist" "lutanists";
lin lute_N = mkN "lute" "lutes";
lin luteal_A = mkA "luteal" ;
lin lutefisk_N = mkN "lutefisk" ;
lin lutenist_N = mkN "lutenist" "lutenists";
lin lutetium_N = mkN "lutetium" ;
lin lutheran_A = compoundA (mkA "lutheran");
lin lutheran_N = mkN "lutheran" "lutherans";
lin luthier_N = mkN "luthier" ;
lin lutist_N = mkN "lutist" ;
lin luton_PN = mkPN "Luton";
lin lux_N = mkN "lux" ;
lin luxation_N = mkN "luxation" ;
lin luxe_A = compoundA (mkA "luxe");
lin luxembourg_PN = mkPN "Luxembourg";
lin luxemburg_PN = mkPN "Luxemburg";
lin luxemburger_A = compoundA (mkA "luxemburger");
lin luxemburger_N = mkN "luxemburger" "luxemburgers";
lin luxuriance_N = mkN "luxuriance" ;
lin luxuriant_A = compoundA (mkA "luxuriant");
lin luxuriate_V = mkV "luxuriate" "luxuriates" "luxuriated" "luxuriated" "luxuriating";
lin luxuriation_N = mkN "luxuriation" ;
lin luxurious_A = compoundA (mkA "luxurious");
lin luxury_N = mkN "luxury" "luxuries";
lin lvov_PN = mkPN "Lvov";
lin lwei_N = mkN "lwei" ;
lin lyallpur_PN = mkPN "Lyallpur";
lin lycaenid_N = mkN "lycaenid" ;
lin lycanthropy_N = mkN "lycanthropy" ;
lin lycee_N = mkN "lycée" "lycées";
lin lyceum_N = mkN "lyceum" "lyceums";
lin lychee_N = mkN "lychee" "lychees";
lin lychgate_N = mkN "lychgate" "lychgates";
lin lychnis_N = mkN "lychnis" ;
lin lycopene_N = mkN "lycopene" ;
lin lydia_PN = mkPN "Lydia";
lin lydney_PN = mkPN "Lydney";
lin lye_N = mkN "lye" "lyes";
lin lygaeid_N = mkN "lygaeid" ;
lin lying_N = mkN "lying" ;
lin lying_in_A = compoundA (mkA "lying-in");
lin lymantriid_N = mkN "lymantriid" ;
lin lymington_PN = mkPN "Lymington";
lin lymm_PN = mkPN "Lymm";
lin lymph_N = mkN "lymph" ;
lin lymphadenitis_N = mkN "lymphadenitis" ;
lin lymphadenoma_N = mkN "lymphadenoma" ;
lin lymphadenopathy_N = mkN "lymphadenopathy" ;
lin lymphangiectasia_N = mkN "lymphangiectasia" ;
lin lymphangiogram_N = mkN "lymphangiogram" ;
lin lymphangiography_N = mkN "lymphangiography" ;
lin lymphangioma_N = mkN "lymphangioma" ;
lin lymphangitis_N = mkN "lymphangitis" ;
lin lymphatic_A = compoundA (mkA "lymphatic");
lin lymphedema_N = mkN "lymphedema" ;
lin lymphoblast_N = mkN "lymphoblast" ;
lin lymphocyte_N = mkN "lymphocyte" ;
lin lymphocytic_A = mkA "lymphocytic" ;
lin lymphocytopenia_N = mkN "lymphocytopenia" ;
lin lymphocytosis_N = mkN "lymphocytosis" ;
lin lymphogranuloma_N = mkN "lymphogranuloma" ;
lin lymphoid_A = mkA "lymphoid" ;
lin lymphokine_N = mkN "lymphokine" ;
lin lymphoma_N = mkN "lymphoma" ;
lin lymphopoiesis_N = mkN "lymphopoiesis" ;
lin lymphuria_N = mkN "lymphuria" ;
lin lynch_N = mkN "lynch" ;
lin lynch_V2 = mkV2 (mkV "lynch" "lynches" "lynched" "lynched" "lynching");
lin lynching_N = mkN "lynching" ;
lin lynchpin_N = mkN "lynchpin" "lynchpins";
lin lynn_PN = mkPN "Lynn";
lin lynne_PN = mkPN "Lynne";
lin lynx_N = mkN "lynx" "lynxes";
lin lynx_eyed_A = compoundA (mkA "lynx-eyed");
lin lyonnaise_A = mkA "lyonnaise" ;
lin lyons_PN = mkPN "Lyons";
lin lyophilized_A = mkA "lyophilized" ;
lin lypressin_N = mkN "lypressin" ;
lin lyrate_A = mkA "lyrate" ;
lin lyre_N = mkN "lyre" "lyres";
lin lyre_bird_N = mkN "lyre-bird" "lyre-birds";
lin lyrebird_N = mkN "lyrebird" ;
lin lyric_A = compoundA (mkA "lyric");
lin lyric_N = mkN "lyric" "lyrics";
lin lyrical_A = compoundA (mkA "lyrical");
lin lyricality_N = mkN "lyricality" ;
lin lyricism_N = mkN "lyricism" ;
lin lyricist_N = mkN human (mkN "lyricist" "lyricists");
lin lysin_N = mkN "lysin" ;
lin lysine_N = mkN "lysine" ;
lin lysinemia_N = mkN "lysinemia" ;
lin lysis_N = mkN "lysis" ;
lin lysogenic_A = mkA "lysogenic" ;
lin lysogenization_N = mkN "lysogenization" ;
lin lysogeny_N = mkN "lysogeny" ;
lin lysol_N = mkN "lysol" ;
lin lysosome_N = mkN "lysosome" ;
lin lysozyme_N = mkN "lysozyme" ;
lin lyssavirus_N = mkN "lyssavirus" ;
lin lytham_PN = mkPN "Lytham";
lin lytham_st_annes_PN = mkPN "Lytham st annes";
lin ma'am_N = mkN "ma'am" "IRREG";
lin ma_N = mkN "ma" ;
lin maar_N = mkN "maar" ;
lin maastricht_PN = mkPN "Maastricht";
lin mabel_PN = mkPN "Mabel";
lin mac_N = mkN "mac" "macs";
lin macabre_A = compoundA (mkA "macabre");
lin macadam_N = mkN "macadam" ;
lin macadamia_N = mkN "macadamia" ;
lin macadamize_V2 = mkV2 (mkV "macadamize" "macadamizes" "macadamized" "macadamized" "macadamizing");
lin macaque_N = mkN "macaque" ;
lin macaroni_N = mkN "macaroni" ;
lin macaronic_A = mkA "macaronic" ;
lin macaroon_N = mkN "macaroon" "macaroons";
lin macaw_N = mkN "macaw" "macaws";
lin macclesfield_PN = mkPN "Macclesfield";
lin mace_N = mkN "mace" "maces";
lin mace_bearer_N = mkN "mace-bearer" "mace-bearers";
lin macebearer_N = mkN "macebearer" ;
lin macedoine_N = mkN "macedoine" ;
lin macedonian_A = compoundA (mkA "Macedonian");
lin macedonian_N = mkN "Macedonian" "Macedonians";
lin macerate_V = mkV "macerate" "macerates" "macerated" "macerated" "macerating";
lin macerate_V2 = mkV2 (mkV "macerate" "macerates" "macerated" "macerated" "macerating");
lin maceration_N = mkN "maceration" ;
lin macerative_A = mkA "macerative" ;
lin mach_PN = mkPN "Mach";
lin machete_N = mkN "machete" "machetes";
lin machiavellian_A = compoundA (mkA "machiavellian");
lin machicolation_N = mkN "machicolation" ;
lin machination_N = mkN "machination" "machinations";
lin machine_N = mkN "machine" "machines";
lin machine_V2 = mkV2 (mkV "machine" "machines" "machined" "machined" "machining");
lin machine_gun_N = mkN "machine-gun" "machine-guns";
lin machine_made_A = compoundA (mkA "machine-made");
lin machinery_N = mkN "machinery" ;
lin machinist_N = mkN "machinist" "machinists";
lin machismo_N = mkN "machismo" ;
lin machmeter_N = mkN "machmeter" ;
lin macho_N = mkN "macho" ;
lin macintosh_N = mkN "macintosh" ;
lin mackerel_N = mkN "mackerel" "mackerel";
lin mackinaw_N = mkN "mackinaw" ;
lin mackintosh_N = mkN "mackintosh" "mackintoshes";
lin mackle_N = mkN "mackle" ;
lin macon_N = mkN "macon" ;
lin macrame_N = mkN "macrame" ;
lin macrencephalic_A = mkA "macrencephalic" ;
lin macrencephaly_N = mkN "macrencephaly" ;
lin macro_A = mkA "macro" ;
lin macro_N = mkN "macro" ;
lin macrobiotic_A = compoundA (mkA "macrobiotic");
lin macrobiotics_N = mkN "macrobiotics" ;
lin macrocephalic_A = mkA "macrocephalic" ;
lin macrocephaly_N = mkN "macrocephaly" ;
lin macrocosm_N = mkN "macrocosm" "macrocosms";
lin macrocosmic_A = mkA "macrocosmic" ;
lin macrocytosis_N = mkN "macrocytosis" ;
lin macroeconomic_A = mkA "macroeconomic" ;
lin macroeconomics_N = mkN "macroeconomics" ;
lin macroeconomist_N = mkN "macroeconomist" ;
lin macroevolution_N = mkN "macroevolution" ;
lin macroglossia_N = mkN "macroglossia" ;
lin macromolecular_A = mkA "macromolecular" ;
lin macromolecule_N = mkN "macromolecule" ;
lin macron_N = mkN "macron" ;
lin macrophage_N = mkN "macrophage" ;
lin macroscopic_A = mkA "macroscopic" ;
lin macroscopically_Adv = mkAdv "macroscopically" ;
lin macrotus_N = mkN "macrotus" ;
lin macrozamia_N = mkN "macrozamia" ;
lin macula_N = mkN "macula" ;
lin maculate_A = mkA "maculate" ;
lin macule_N = mkN "macule" ;
lin macumba_N = mkN "macumba" ;
lin macushla_N = mkN "macushla" ;
lin mad_A = mkA "mad" "madder";
lin madagascan_A = compoundA (mkA "madagascan");
lin madagascan_N = mkN "madagascan" "madagascans";
lin madagascar_PN = mkPN "Madagascar";
lin madam_N = mkN "madam" "madams";
lin madame_N = mkN "madame" "madames";
lin madcap_N = mkN "madcap" "madcaps";
lin madden_V2 = mkV2 (mkV "madden" "maddens" "maddened" "maddened" "maddening");
lin madder_N = mkN "madder" ;
lin madderwort_N = mkN "madderwort" ;
lin maddy_PN = mkPN "Maddy";
lin madeira_N = mkN "madeira" "madeiras";
lin madeleine_PN = mkPN "Madeleine";
lin mademoiselle_N = mkN "mademoiselle" "mademoiselles";
lin madge_PN = mkPN "Madge";
lin madhouse_N = mkN "madhouse" "madhouses";
lin madman_N = mkN masculine (mkN "madman" "madmen");
lin madness_N = mkN "madness" ;
lin madonna_N = mkN "madonna" "madonnas";
lin madras_N = mkN "madras" ;
lin madras_PN = mkPN "Madras";
lin madrasa_N = mkN "madrasa" ;
lin madrid_PN = mkPN "Madrid";
lin madrigal_N = mkN "madrigal" "madrigals";
lin madrigalist_N = mkN "madrigalist" ;
lin madrilene_N = mkN "madrilene" ;
lin madrona_N = mkN "madrona" ;
lin madurai_PN = mkPN "Madurai";
lin madwoman_N = mkN feminine (mkN "madwoman" "madwomen");
lin maecenas_PN = mkPN "Maecenas";
lin maelstrom_N = mkN "maelstrom" "maelstroms";
lin maenad_N = mkN "maenad" "maenads";
lin maesteg_PN = mkPN "Maesteg";
lin maestro_N = mkN "maestro" "maestros";
lin maffick_V = mkV "maffick" "mafficks" "mafficked" "mafficked" "mafficking";
lin mafia_N = mkN "mafia" "mafias";
lin mafioso_N = mkN "mafioso" ;
lin mag_N = mkN "mag" "mags";
lin magazine_N = mkN "magazine" "magazines";
lin magdalen_N = mkN "magdalen" ;
lin magdeburg_PN = mkPN "Magdeburg";
lin magenta_A = compoundA (mkA "magenta");
lin magenta_N = mkN "magenta" ;
lin maggie_PN = mkPN "Maggie";
lin maggot_N = mkN "maggot" "maggots";
lin maggoty_A = compoundA (mkA "maggoty");
lin maghull_PN = mkPN "Maghull";
lin magic_A = compoundA (mkA "magic");
lin magic_N = mkN "magic" ;
lin magical_A = compoundA (mkA "magical");
lin magician_N = mkN human (mkN "magician" "magicians");
lin magisterial_A = compoundA (mkA "magisterial");
lin magistracy_N = mkN "magistracy" "magistracies";
lin magistrate_N = mkN "magistrate" "magistrates";
lin magma_N = mkN "magma" ;
lin magnanimity_N = mkN "magnanimity" "magnanimities";
lin magnanimous_A = compoundA (mkA "magnanimous");
lin magnate_N = mkN "magnate" "magnates";
lin magnesia_N = mkN "magnesia" ;
lin magnesite_N = mkN "magnesite" ;
lin magnesium_N = mkN "magnesium" ;
lin magnet_N = mkN "magnet" "magnets";
lin magnetic_A = compoundA (mkA "magnetic");
lin magnetically_Adv = mkAdv "magnetically";
lin magnetism_N = mkN "magnetism" ;
lin magnetite_N = mkN "magnetite" ;
lin magnetization_N = mkN "magnetization" ;
lin magnetize_V2 = mkV2 (mkV "magnetize" "magnetizes" "magnetized" "magnetized" "magnetizing");
lin magneto_N = mkN "magneto" "magnetos";
lin magnetograph_N = mkN "magnetograph" ;
lin magnetohydrodynamics_N = mkN "magnetohydrodynamics" ;
lin magnetometer_N = mkN "magnetometer" ;
lin magneton_N = mkN "magneton" ;
lin magnetosphere_N = mkN "magnetosphere" ;
lin magnetron_N = mkN "magnetron" ;
lin magnificat_N = mkN "magnificat" "magnificats";
lin magnification_N = mkN "magnification" "magnifications";
lin magnificence_N = mkN "magnificence" ;
lin magnificent_A = compoundA (mkA "magnificent");
lin magnifico_N = mkN "magnifico" ;
lin magnifier_N = mkN "magnifier" "magnifiers";
lin magnify_V2 = mkV2 (mkV "magnify" "magnifies" "magnified" "magnified" "magnifying");
lin magniloquence_N = mkN "magniloquence" ;
lin magniloquent_A = compoundA (mkA "magniloquent");
lin magnitude_N = mkN "magnitude" ;
lin magnolia_N = mkN "magnolia" "magnolias";
lin magnum_N = mkN "magnum" "magnums";
lin magnum_opus_N = mkN "magnum opus" "magnum opi" {- FIXME: guessed plural form -};
lin magpie_N = mkN "magpie" "magpies";
lin maguey_N = mkN "maguey" ;
lin magus_N = mkN "magus" ;
lin magyar_A = compoundA (mkA "Magyar");
lin magyarMasc_N = mkN masculine (mkN "Magyar" "Magyars");
lin magyarFem_N = mkN feminine (mkN "Magyar" "Magyars");
lin maharaja_N = mkN "maharaja" "maharajas";
lin maharajah_N = mkN "maharajah" "maharajahs";
lin maharanee_N = mkN "maharanee" "maharanees";
lin maharani_N = mkN "maharani" ;
lin mahatma_N = mkN "mahatma" "mahatmas";
lin mahjong_N = mkN "mahjong" ;
lin mahoe_N = mkN "mahoe" ;
lin mahogany_N = mkN "mahogany" "mahoganies";
lin mahout_N = mkN "mahout" "mahouts";
lin mahuang_N = mkN "mahuang" ;
lin maid_N = mkN "maid" "maids";
lin maiden_A = compoundA (mkA "maiden");
lin maiden_N = mkN "maiden" "maidens";
lin maidenhair_N = mkN "maidenhair" "maidenhairs";
lin maidenhead_N = mkN "maidenhead" ;
lin maidenhead_PN = mkPN "Maidenhead";
lin maidenhood_N = mkN "maidenhood" "maidenhoods";
lin maidenlike_A = compoundA (mkA "maidenlike");
lin maidenliness_N = mkN "maidenliness" ;
lin maidenly_A = compoundA (mkA "maidenly");
lin maidservant_N = mkN "maidservant" "maidservants";
lin maidstone_PN = mkPN "Maidstone";
lin maigre_N = mkN "maigre" ;
lin mail_N = mkN "mail" "mails";
lin mail_V2 = mkV2 (mkV "mail" "mails" "mailed" "mailed" "mailing");
lin mail_train_N = mkN "mail-train" "mail-trains";
lin mailbag_N = mkN "mailbag" "mailbags";
lin mailboat_N = mkN "mailboat" "mailboats";
lin mailbox_N = mkN "mailbox" "mailboxes";
lin maildrop_N = mkN "maildrop" ;
lin mailer_N = mkN "mailer" ;
lin mailing_N = mkN "mailing" ;
lin mailing_card_N = mkN "mailing-card" "mailing-cards";
lin mailing_list_N = mkN "mailing-list" "mailing-lists";
lin maillot_N = mkN "maillot" ;
lin mailman_N = mkN masculine (mkN "mailman" "mailmen");
lin mailsorter_N = mkN "mailsorter" ;
lin maim_V2 = mkV2 (mkV "maim" "maims" "maimed" "maimed" "maiming");
lin main_A = compoundA (mkA "main");
lin main_N = mkN "main" "mains";
lin maine_PN = mkPN "Maine";
lin mainframe_N = mkN "mainframe" ;
lin mainland_N = mkN "mainland" "mainlands";
lin mainmast_N = mkN "mainmast" "mainmasts";
lin mainsail_N = mkN "mainsail" ;
lin mainspring_N = mkN "mainspring" "mainsprings";
lin mainstay_N = mkN "mainstay" "mainstays";
lin mainstream_N = mkN "mainstream";
lin mainstreamed_A = mkA "mainstreamed" ;
lin maintain_V = mkV "maintain";
lin maintain_V2 = mkV2 (mkV "maintain" "maintains" "maintained" "maintained" "maintaining");
lin maintain_VS = mkVS (mkV "maintain" "maintains" "maintained" "maintained" "maintaining");
lin maintainable_A = compoundA (mkA "maintainable");
lin maintenance_N = mkN "maintenance" ;
lin mainz_PN = mkPN "Mainz";
lin maisonette_N = mkN "maisonette" ;
lin maisonnette_N = mkN "maisonnette" "maisonnettes";
lin maize_N = mkN "maize" ;
lin maj_PN = mkPN "Maj";
lin majestic_A = compoundA (mkA "majestic");
lin majestically_Adv = mkAdv "majestically";
lin majesty_N = mkN "majesty" "majesties";
lin majolica_N = mkN "majolica" ;
lin major_A = compoundA (mkA "major");
lin major_N = mkN "major" "majors";
lin major_V = mkV "major" "majors" "majored" "majored" "majoring";
lin major_domo_N = mkN "major-domo" "major-domos";
lin major_general_N = mkN "major-general" "major-generals";
lin majority_N = mkN "majority" "majorities";
lin majuscular_A = mkA "majuscular" ;
lin majuscule_A = mkA "majuscule" ;
lin make_N = mkN "make" "makes";
lin make_V = IrregEng.make_V;
lin make_V2 = mkV2 (IrregEng.make_V);
lin make_V2A = mkV2A (IrregEng.make_V) noPrep;
lin make_V2V = mkV2V (IrregEng.make_V) noPrep noPrep;
lin make_V3 = mkV3 (IrregEng.make_V);
lin make_VA = mkVA (IrregEng.make_V);
lin make_VS = mkVS (IrregEng.make_V);
lin make_VV = mkVV (IrregEng.make_V);
lin make_believe_N = mkN "make-believe" "make-believes";
lin make_up_N = mkN "make-up" "make-ups";
lin makeover_N = mkN "makeover" ;
lin maker_N = mkN "maker" "makers";
lin makeready_N = mkN "makeready" ;
lin makeshift_N = mkN "makeshift" "makeshifts";
lin makeup_N = mkN "makeup" ;
lin makeweight_N = mkN "makeweight" "makeweights";
lin making_N = mkN "making" "makings";
lin mako_N = mkN "mako" ;
lin makomako_N = mkN "makomako" ;
lin malabsorption_N = mkN "malabsorption" ;
lin malacca_N = mkN "malacca" ;
lin malachite_N = mkN "malachite" ;
lin malacia_N = mkN "malacia" ;
lin malacologist_N = mkN "malacologist" ;
lin malacology_N = mkN "malacology" ;
lin maladaptive_A = mkA "maladaptive" ;
lin maladjusted_A = compoundA (mkA "maladjusted");
lin maladjustive_A = mkA "maladjustive" ;
lin maladjustment_N = mkN "maladjustment" ;
lin maladroit_A = compoundA (mkA "maladroit");
lin maladroitness_N = mkN "maladroitness" ;
lin malady_N = mkN "malady" "maladies";
lin malaga_PN = mkPN "Malaga";
lin malahini_N = mkN "malahini" ;
lin malaise_N = mkN "malaise" "malaises";
lin malamute_N = mkN "malamute" ;
lin malapropism_N = mkN "malapropism" "malapropisms";
lin malapropos_A = compoundA (mkA "malapropos");
lin malapropos_Adv = mkAdv "malapropos";
lin malaria_N = mkN "malaria" ;
lin malarial_A = compoundA (mkA "malarial");
lin malawi_PN = mkPN "Malawi";
lin malawian_A = compoundA (mkA "malawian");
lin malawian_N = mkN "malawian" "malawians";
lin malay_A = compoundA (mkA "malay");
lin malay_N = mkN "malay" "malays";
lin malaya_PN = mkPN "Malaya";
lin malayan_A = compoundA (mkA "malayan");
lin malayan_N = mkN "malayan" "malayans";
lin malaysia_PN = mkPN "Malaysia";
lin malaysian_A = compoundA (mkA "malaysian");
lin malaysian_N = mkN "malaysian" "malaysians";
lin malcolm_PN = mkPN "Malcolm";
lin malcontent_A = compoundA (mkA "malcontent");
lin malcontent_N = mkN "malcontent" "malcontents";
lin maldon_PN = mkPN "Maldon";
lin male_A = compoundA (mkA "male");
lin male_N = mkN "male" "males";
lin maleate_N = mkN "maleate" ;
lin maleberry_N = mkN "maleberry" ;
lin malediction_N = mkN "malediction" "maledictions";
lin malefactor_N = mkN "malefactor" "malefactors";
lin malefic_A = mkA "malefic" ;
lin maleficence_N = mkN "maleficence" ;
lin maleficent_A = compoundA (mkA "maleficent");
lin maleness_N = mkN "maleness" ;
lin maleo_N = mkN "maleo" ;
lin malevolence_N = mkN "malevolence" ;
lin malevolent_A = compoundA (mkA "malevolent");
lin malfeasance_N = mkN "malfeasance" "malfeasances";
lin malfeasant_N = mkN "malfeasant" ;
lin malformation_N = mkN "malformation" "malformations";
lin malformed_A = compoundA (mkA "malformed");
lin malfunction_N = mkN "malfunction" "malfunctions";
lin malfunction_V = mkV "malfunction" "malfunctions" "malfunctioned" "malfunctioned" "malfunctioning";
lin mali_PN = mkPN "Mali";
lin malian_A = compoundA (mkA "malian");
lin malian_N = mkN "malian" "malians";
lin malice_N = mkN "malice" ;
lin malicious_A = compoundA (mkA "malicious");
lin malign_A = compoundA (mkA "malign");
lin malign_V2 = mkV2 (mkV "malign" "maligns" "maligned" "maligned" "maligning");
lin malignancy_N = mkN "malignancy" ;
lin malignant_A = compoundA (mkA "malignant");
lin malignity_N = mkN "malignity" "malignities";
lin malik_N = mkN "malik" ;
lin malinger_V = mkV "malinger" "malingers" "malingered" "malingered" "malingering";
lin malingerer_N = mkN "malingerer" "malingerers";
lin malingering_N = mkN "malingering" ;
lin malinois_N = mkN "malinois" ;
lin mallard_N = mkN "mallard" "mallards";
lin malleability_N = mkN "malleability" ;
lin malleable_A = compoundA (mkA "malleable");
lin mallee_N = mkN "mallee" ;
lin mallet_N = mkN "mallet" "mallets";
lin malleus_N = mkN "malleus" ;
lin mallow_N = mkN "mallow" "mallows";
lin mallow_PN = mkPN "Mallow";
lin malmo_PN = mkPN "Malmo";
lin malmsey_N = mkN "malmsey" ;
lin malnourished_A = mkA "malnourished" ;
lin malnutrition_N = mkN "malnutrition" ;
lin malocclusion_N = mkN "malocclusion" ;
lin malodor_N = mkN "malodor" ;
lin malodorous_A = compoundA (mkA "malodorous");
lin malodorousness_N = mkN "malodorousness" ;
lin malope_N = mkN "malope" ;
lin malposed_A = mkA "malposed" ;
lin malposition_N = mkN "malposition" ;
lin malpractice_N = mkN "malpractice" "malpractices";
lin malt_N = mkN "malt" ;
lin malt_V = mkV "malt" "malts" "malted" "malted" "malting";
lin malt_V2 = mkV2 (mkV "malt" "malts" "malted" "malted" "malting");
lin malta_PN = mkPN "Malta";
lin maltby_PN = mkPN "Maltby";
lin malted_N = mkN "malted" ;
lin maltese_A = compoundA (mkA "maltese");
lin maltese_N = mkN "maltese" "maltese";
lin maltha_N = mkN "maltha" ;
lin malthusian_A = compoundA (mkA "malthusian");
lin maltose_N = mkN "maltose" ;
lin maltreat_V2 = mkV2 (mkV "maltreat" "maltreats" "maltreated" "maltreated" "maltreating");
lin maltreatment_N = mkN "maltreatment" ;
lin maltster_N = mkN "maltster" "maltsters";
lin malvasia_N = mkN "malvasia" ;
lin malvern_PN = mkPN "Malvern";
lin malversation_N = mkN "malversation" ;
lin mama_N = mkN "mama" "mamas";
lin mamba_N = mkN "mamba" "mambas";
lin mambo_N = mkN "mambo" ;
lin mamey_N = mkN "mamey" ;
lin mamie_PN = mkPN "Mamie";
lin mamma_N = mkN "mamma" "mammas";
lin mammal_N = mkN "mammal" "mammals";
lin mammalian_A = mkA "mammalian" ;
lin mammalogist_N = mkN "mammalogist" ;
lin mammalogy_N = mkN "mammalogy" ;
lin mammary_A = mkA "mammary" ;
lin mammillaria_N = mkN "mammillaria" ;
lin mammogram_N = mkN "mammogram" ;
lin mammography_N = mkN "mammography" ;
lin mammon_N = mkN "mammon" ;
lin mammoth_N = mkN "mammoth" "mammoths";
lin mammothermography_N = mkN "mammothermography" ;
lin mammy_N = mkN "mammy" "mammies";
lin mamo_N = mkN "mamo" ;
lin man_N = mkN masculine (mkN "man" "men");
lin man_V2 = mkV2 (mkV "man" "mans" "manned" "manned" "manning");
lin man_at_arms_N = mkN "man-at-arms" "men*-at-arms";
lin man_eater_N = mkN "man-eater" "man-eaters";
lin man_hour_N = mkN "man-hour" "man-hours";
lin man_of_war_N = mkN "man-of-war" "men*-of-war";
lin man_sized_A = compoundA (mkA "man-sized");
lin manacle_N = mkN "manacle" "manacles";
lin manacle_V2 = mkV2 (mkV "manacle" "manacles" "manacled" "manacled" "manacling");
lin manage_V = mkV "manage" "manages" "managed" "managed" "managing";
lin manage_V2 = mkV2 (mkV "manage" "manages" "managed" "managed" "managing");
lin manage_VV = mkVV (mkV "manage" "manages" "managed" "managed" "managing");
lin manageability_N = mkN "manageability" ;
lin manageable_A = compoundA (mkA "manageable");
lin management_N = mkN "management" "managements";
lin manager_N = mkN "manager" "managers";
lin manageress_N = mkN "manageress" "manageresses";
lin managerial_A = compoundA (mkA "managerial");
lin managership_N = mkN "managership" ;
lin manakin_N = mkN "manakin" ;
lin manana_N = mkN "manana" ;
lin manat_N = mkN "manat" ;
lin manatee_N = mkN "manatee" "manatees";
lin manchester_PN = mkPN "Manchester";
lin mancunian_A = compoundA (mkA "mancunian");
lin mancunian_N = mkN "mancunian" "mancunians";
lin mandala_N = mkN "mandala" ;
lin mandamus_N = mkN "mandamus" ;
lin mandarin_N = mkN "mandarin" "mandarins";
lin mandatary_N = mkN "mandatary" "mandataries";
lin mandate_N = mkN "mandate" "mandates";
lin mandate_V2 = mkV2 (mkV "mandate" "mandates" "mandated" "mandated" "mandating");
lin mandate_VS = mkVS (mkV "mandate");
lin mandator_N = mkN "mandator" ;
lin mandatory_A = compoundA (mkA "mandatory");
lin mandatory_N = mkN "mandatory" "mandatories";
lin mandible_N = mkN "mandible" "mandibles";
lin mandibular_A = mkA "mandibular" ;
lin mandibulate_A = mkA "mandibulate" ;
lin mandibulofacial_A = mkA "mandibulofacial" ;
lin mandola_N = mkN "mandola" ;
lin mandolin_N = mkN "mandolin" "mandolins";
lin mandragora_N = mkN "mandragora" ;
lin mandrake_N = mkN "mandrake" "mandrakes";
lin mandrill_N = mkN "mandrill" "mandrills";
lin mandy_PN = mkPN "Mandy";
lin mane_N = mkN "mane" "manes";
lin maneuver_N = mkN "maneuver" ;
lin maneuver_V = mkV "maneuver";
lin maneuver_V2 = mkV2 (mkV "maneuver");
lin maneuverability_N = mkN "maneuverability" ;
lin maneuverable_A = mkA "maneuverable" ;
lin maneuverer_N = mkN "maneuverer" ;
lin manful_A = compoundA (mkA "manful");
lin manfulness_N = mkN "manfulness" ;
lin mangabey_N = mkN "mangabey" ;
lin manganate_N = mkN "manganate" ;
lin manganese_N = mkN "manganese" ;
lin manganite_N = mkN "manganite" ;
lin mange_N = mkN "mange" ;
lin mangel_wurzel_N = mkN "mangel-wurzel" "mangel-wurzels";
lin manger_N = mkN "manger" "mangers";
lin mangle_N = mkN "mangle" "mangles";
lin mangle_V2 = mkV2 (mkV "mangle" "mangles" "mangled" "mangled" "mangling");
lin manglietia_N = mkN "manglietia" ;
lin mango_N = mkN "mango" "mangos";
lin mangosteen_N = mkN "mangosteen" "mangosteens";
lin mangrove_N = mkN "mangrove" "mangroves";
lin mangy_A = mkA "mangy" "mangier";
lin manhandle_V2 = mkV2 (mkV "manhandle" "manhandles" "manhandled" "manhandled" "manhandling");
lin manhattan_PN = mkPN "Manhattan";
lin manhole_N = mkN "manhole" "manholes";
lin manhood_N = mkN "manhood" ;
lin manhunt_N = mkN "manhunt" ;
lin mania_N = mkN "mania" "manias";
lin maniac_N = mkN "maniac" "maniacs";
lin maniacal_A = compoundA (mkA "maniacal");
lin manic_depressive_A = compoundA (mkA "manic-depressive");
lin manic_depressive_N = mkN "manic-depressive" "manic-depressives";
lin maniclike_A = mkA "maniclike" ;
lin manicotti_N = mkN "manicotti" ;
lin manicure_N = mkN "manicure" "manicures";
lin manicure_V2 = mkV2 (mkV "manicure" "manicures" "manicured" "manicured" "manicuring");
lin manicurist_N = mkN "manicurist" "manicurists";
lin manifest_A = compoundA (mkA "manifest");
lin manifest_N = mkN "manifest" "manifests";
lin manifest_V2 = mkV2 (mkV "manifest" "manifests" "manifested" "manifested" "manifesting");
lin manifestation_N = mkN "manifestation" "manifestations";
lin manifesto_N = mkN "manifesto" "manifestos";
lin manifold_A = compoundA (mkA "manifold");
lin manifold_N = mkN "manifold" "manifolds";
lin manifold_V2 = mkV2 (mkV "manifold" "manifolds" "manifolded" "manifolded" "manifolding");
lin manikin_N = mkN "manikin" "manikins";
lin manila_N = mkN "manila" ;
lin manila_PN = mkPN "Manila";
lin manilla_N = mkN "manilla" "manillas";
lin manipulability_N = mkN "manipulability" ;
lin manipulate_V2 = mkV2 (mkV "manipulate" "manipulates" "manipulated" "manipulated" "manipulating");
lin manipulation_N = mkN "manipulation" "manipulations";
lin manipulative_A = compoundA (mkA "manipulative");
lin manipulator_N = mkN "manipulator" ;
lin maniraptor_N = mkN "maniraptor" ;
lin manitoba_PN = mkPN "Manitoba";
lin mankind_N = mkN "mankind" ;
lin manky_A = mkA "manky" ;
lin manlike_A = compoundA (mkA "manlike");
lin manliness_N = mkN "manliness" ;
lin manly_A = mkA "manly" "manlier";
lin manna_N = mkN "manna" ;
lin mannequin_N = mkN "mannequin" "mannequins";
lin manner_N = mkN "manner" "manners";
lin mannered_A = compoundA (mkA "mannered");
lin mannerism_N = mkN "mannerism" "mannerisms";
lin mannerly_A = compoundA (mkA "mannerly");
lin manners_N = mkN "manners" ;
lin mannheim_PN = mkPN "Mannheim";
lin mannish_A = compoundA (mkA "mannish");
lin mannitol_N = mkN "mannitol" ;
lin manoeuvrability_N = mkN "manoeuvrability" ;
lin manoeuvrable_A = compoundA (mkA "manoeuvrable");
lin manoeuvre_N = mkN "manoeuvre" "manoeuvres";
lin manoeuvre_V = mkV "manoeuvre" "manoeuvres" "manoeuvred" "manoeuvred" "manoeuvring";
lin manoeuvre_V2 = mkV2 (mkV "manoeuvre" "manoeuvres" "manoeuvred" "manoeuvred" "manoeuvring");
lin manoeuvrer_N = mkN "manoeuvrer" "manoeuvrers";
lin manometer_N = mkN "manometer" ;
lin manor_N = mkN "manor" "manors";
lin manor_house_N = mkN "manor-house" "manor-houses";
lin manorial_A = compoundA (mkA "manorial");
lin manpower_N = mkN "manpower" ;
lin manque_A = mkA "manque" ;
lin mansard_A = mkA "mansard" ;
lin mansard_N = mkN "mansard" "mansards";
lin manse_N = mkN "manse" "manses";
lin manservant_N = mkN "manservant" "manservants";
lin mansfield_PN = mkPN "Mansfield";
lin mansion_N = mkN "mansion" "mansions";
lin manslaughter_N = mkN "manslaughter" ;
lin manta_N = mkN "manta" ;
lin mantel_N = mkN "mantel" "mantels";
lin mantelet_N = mkN "mantelet" ;
lin mantelpiece_N = mkN "mantelpiece" "mantelpieces";
lin manticore_N = mkN "manticore" ;
lin mantilla_N = mkN "mantilla" "mantillas";
lin mantis_N = mkN "mantis" "mantises";
lin mantispid_N = mkN "mantispid" ;
lin mantissa_N = mkN "mantissa" ;
lin mantle_N = mkN "mantle" "mantles";
lin mantle_V = mkV "mantle" "mantles" "mantled" "mantled" "mantling";
lin mantle_V2 = mkV2 (mkV "mantle" "mantles" "mantled" "mantled" "mantling");
lin mantra_N = mkN "mantra" ;
lin mantrap_N = mkN "mantrap" "mantraps";
lin mantua_N = mkN "mantua" ;
lin manual_A = compoundA (mkA "manual");
lin manual_N = mkN "manual" "manuals";
lin manubrium_N = mkN "manubrium" ;
lin manufacture_N = mkN "manufacture" ;
lin manufacture_V2 = mkV2 (mkV "manufacture" "manufactures" "manufactured" "manufactured" "manufacturing");
lin manufacturer_N = mkN "manufacturer" "manufacturers";
lin manul_N = mkN "manul" ;
lin manumission_N = mkN "manumission" "manumissions";
lin manumit_V2 = mkV2 (mkV "manumit" "manumits" "manumitted" "manumitted" "manumitting");
lin manure_N = mkN "manure" ;
lin manure_V2 = mkV2 (mkV "manure" "manures" "manured" "manured" "manuring");
lin manuscript_N = mkN "manuscript" "manuscripts";
lin manx_A = compoundA (mkA "manx");
lin manx_N = mkN "manx" ;
lin many_A = mkA "many" ;
lin many_Det = mkDeterminer plural "many" ;
lin many_sided_A = compoundA (mkA "many-sided");
lin manzanita_N = mkN "manzanita" ;
lin maoism_N = mkN "maoism" ;
lin maoist_N = mkN "maoist" "maoists";
lin maori_N = mkN "maori" "maoris";
lin map_N = mkN "map" "maps";
lin map_V2 = mkV2 (mkV "map" "maps" "mapped" "mapped" "mapping");
lin map_reader_N = mkN "map-reader" "map-readers";
lin mapinguari_N = mkN "mapinguari" ;
lin maple_N = mkN "maple" "maples";
lin maple_leaf_N = mkN "maple-leaf" "maple-leaves";
lin maplelike_A = mkA "maplelike" ;
lin mapmaking_N = mkN "mapmaking" ;
lin mapping_N = mkN "mapping" ;
lin maquiladora_N = mkN "maquiladora" ;
lin maquis_N = mkN "maquis" "maques" {- FIXME: guessed plural form -};
lin mar_PN = mkPN "Mar";
lin mar_V2 = mkV2 (mkV "mar" "mars" "marred" "marred" "marring");
lin mara_N = mkN "mara" ;
lin marabou_N = mkN "marabou" "marabous";
lin maraca_N = mkN "maraca" ;
lin maracaibo_PN = mkPN "Maracaibo";
lin marang_N = mkN "marang" ;
lin maranta_N = mkN "maranta" ;
lin marasca_N = mkN "marasca" ;
lin maraschino_N = mkN "maraschino" "maraschinos";
lin marasmus_N = mkN "marasmus" ;
lin marathon_N = mkN "marathon" "marathons";
lin marathoner_N = mkN "marathoner" ;
lin maraud_V = mkV "maraud" "marauds" "marauded" "marauded" "marauding";
lin marauder_N = mkN "marauder" "marauders";
lin marble_N = mkN "marble" "marbles";
lin marbled_A = compoundA (mkA "marbled");
lin marbleization_N = mkN "marbleization" ;
lin marbles_N = mkN "marbles" ;
lin marblewood_N = mkN "marblewood" ;
lin marbling_N = mkN "marbling" ;
lin marc_N = mkN "marc" ;
lin marcel_N = mkN "marcel" ;
lin march_N = mkN "March" "Marches";
lin march_PN = mkPN "March";
lin march_V = mkV "march" "marches" "marched" "marched" "marching";
lin march_V2 = mkV2 (mkV "march" "marches" "marched" "marched" "marching");
lin marcher_N = mkN "marcher" "marchers";
lin marchioness_N = mkN "marchioness" "marchionesses";
lin mardi_gras_N = mkN "mardi gras" "mardi gras";
lin mare_N = mkN "mare" "mares";
lin margaret_PN = mkPN "Margaret";
lin margarin_N = mkN "margarin" ;
lin margarine_N = mkN "margarine" ;
lin margarita_N = mkN "margarita" ;
lin margate_N = mkN "margate" ;
lin margate_PN = mkPN "Margate";
lin margay_N = mkN "margay" ;
lin marge_N = mkN "marge" ;
lin marge_PN = mkPN "Marge";
lin margery_PN = mkPN "Margery";
lin margie_PN = mkPN "Margie";
lin margin_N = mkN "margin" "margins";
lin marginal_A = compoundA (mkA "marginal");
lin marginalia_N = mkN "marginalia" ;
lin marginality_N = mkN "marginality" ;
lin marginalization_N = mkN (variants {"marginalization"; "marginalisation"});
lin marginalize_V2 = mkV2 (mkV "marginalize");
lin margrave_N = mkN "margrave" "margraves";
lin marguerite_N = mkN "marguerite" "marguerites";
lin maria_PN = mkPN "Maria";
lin mariachi_N = mkN "mariachi" ;
lin marian_PN = mkPN "Marian";
lin marie_PN = mkPN "Marie";
lin marigold_N = mkN "marigold" "marigolds";
lin marihuana_N = mkN "marihuana" ;
lin marijuana_N = mkN "marijuana" ;
lin marilyn_PN = mkPN "Marilyn";
lin marimba_N = mkN "marimba" "marimbas";
lin marina_N = mkN "marina" "marinas";
lin marinade_N = mkN "marinade" ;
lin marinade_V2 = mkV2 (mkV "marinade" "marinades" "marinaded" "marinaded" "marinading");
lin marinara_N = mkN "marinara" ;
lin marinate_V2 = mkV2 (mkV "marinate" "marinates" "marinated" "marinated" "marinating");
lin marine_A = compoundA (mkA "marine");
lin marine_N = mkN "marine" "marines";
lin mariner_N = mkN "mariner" "mariners";
lin marion_PN = mkPN "Marion";
lin marionette_N = mkN "marionette" "marionettes";
lin mariposa_N = mkN "mariposa" ;
lin marital_A = compoundA (mkA "marital");
lin mariticide_N = mkN "mariticide" ;
lin maritime_A = compoundA (mkA "maritime");
lin marjoram_N = mkN "marjoram" ;
lin marjorie_PN = mkPN "Marjorie";
lin mark_N = mkN "mark" "marks";
lin mark_PN = mkPN "Mark";
lin mark_V2 = mkV2 (mkV "mark" "marks" "marked" "marked" "marking");
lin mark_V3 = mkV3 (mkV "mark" "marks" "marked" "marked" "marking");
lin mark_up_N = mkN "mark-up" "mark-ups";
lin marke_VS = mkVS (mkV "marke");
lin marked_A = mkA "marked" ;
lin marker_N = mkN "marker" "markers";
lin market_N = mkN "market" "markets";
lin market_V = mkV "market" "markets" "marketed" "marketed" "marketing";
lin market_V2 = mkV2 (mkV "market" "markets" "marketed" "marketed" "marketing");
lin market_cross_N = mkN "market-cross" "market-crosses";
lin market_day_N = mkN "market-day" "market-days";
lin market_drayton_PN = mkPN "Market drayton";
lin market_garden_N = mkN "market-garden" "market-gardens";
lin market_gardening_N = mkN "market-gardening" ;
lin market_harborough_PN = mkPN "Market harborough";
lin market_square_N = mkN "market-square" "market-squares";
lin market_town_N = mkN "market-town" "market-towns";
lin marketable_A = compoundA (mkA "marketable");
lin marketing_N = mkN "marketing" "marketings";
lin marketplace_N = mkN "marketplace" "marketplaces";
lin markhor_N = mkN "markhor" ;
lin marking_N = mkN "marking" "markings";
lin marking_ink_N = mkN "marking-ink" "marking-inks";
lin marking_inks_N = mkN "marking-inks" "marking-inkss";
lin markka_N = mkN "markka" ;
lin marksman_N = mkN masculine (mkN "marksman" "marksmen");
lin marksmanship_N = mkN "marksmanship" ;
lin markup_N = mkN "markup" ;
lin marl_N = mkN "marl" ;
lin marlberry_N = mkN "marlberry" ;
lin marlborough_PN = mkPN "Marlborough";
lin marlene_PN = mkPN "Marlene";
lin marlin_N = mkN "marlin" ;
lin marline_N = mkN "marline" ;
lin marlinespike_N = mkN "marlinespike" "marlinespikes";
lin marlite_N = mkN "marlite" ;
lin marlow_PN = mkPN "Marlow";
lin marly_A = mkA "marly" ;
lin marmalade_N = mkN "marmalade" ;
lin marmite_N = mkN "marmite" ;
lin marmoreal_A = compoundA (mkA "marmoreal");
lin marmorean_A = mkA "marmorean" ;
lin marmoset_N = mkN "marmoset" "marmosets";
lin marmot_N = mkN "marmot" "marmots";
lin marocain_N = mkN "marocain" ;
lin maroon_A = compoundA (mkA "maroon");
lin maroon_N = mkN "maroon" "maroons";
lin maroon_V2 = mkV2 (mkV "maroon" "maroons" "marooned" "marooned" "marooning");
lin marple_PN = mkPN "Marple";
lin marque_N = mkN "marque" "marques";
lin marquee_N = mkN "marquee" "marquees";
lin marquess_N = mkN "marquess" "marquesses";
lin marquetry_N = mkN "marquetry" ;
lin marquis_N = mkN "marquis" "marquises";
lin marriage_N = mkN "marriage" "marriages";
lin marriageability_N = mkN "marriageability" ;
lin marriageable_A = compoundA (mkA "marriageable");
lin married_N = mkN "married" ;
lin marrow_N = mkN "marrow" "marrows";
lin marrowbone_N = mkN "marrowbone" "marrowbones";
lin marry_V = mkV "marry" "marries" "married" "married" "marrying";
lin marry_V2 = mkV2 (mkV "marry" "marries" "married" "married" "marrying");
lin mars_PN = mkPN "Mars";
lin marsala_N = mkN "marsala" ;
lin marseillaise_N = mkN "marseillaise" "marseillaises";
lin marseille_N = mkN "marseille" ;
lin marseilles_PN = mkPN "Marseilles";
lin marsh_N = mkN "marsh" "marshes";
lin marshal_N = mkN "marshal" "marshals";
lin marshal_V2 = mkV2 (mkV "marshal" "marshals" "marshalled" "marshalled" "marshalling");
lin marshalling_yard_N = mkN "marshalling-yard" "marshalling-yards";
lin marshalship_N = mkN "marshalship" ;
lin marshmallow_N = mkN "marshmallow" "marshmallows";
lin marshy_A = mkA "marshy" "marshier";
lin marske_PN = mkPN "Marske";
lin marsupial_A = compoundA (mkA "marsupial");
lin marsupial_N = mkN "marsupial" "marsupials";
lin marsupium_N = mkN "marsupium" ;
lin mart_N = mkN "mart" "marts";
lin marten_N = mkN "marten" "martens";
lin martensite_N = mkN "martensite" ;
lin martha_PN = mkPN "Martha";
lin martial_A = compoundA (mkA "martial");
lin martian_A = compoundA (mkA "martian");
lin martian_N = mkN "martian" "martians";
lin martin_N = mkN "martin" "martins";
lin martin_PN = mkPN "Martin";
lin martinet_N = mkN "martinet" "martinets";
lin martingale_N = mkN "martingale" ;
lin martini_N = mkN "martini" "martinis";
lin martynia_N = mkN "martynia" ;
lin martyr_N = mkN human (mkN "martyr" "martyrs");
lin martyr_V2 = mkV2 (mkV "martyr" "martyrs" "martyred" "martyred" "martyring");
lin martyrdom_N = mkN "martyrdom" "martyrdoms";
lin marumi_N = mkN "marumi" ;
lin marupa_N = mkN "marupa" ;
lin marvel_N = mkN "marvel" "marvels";
lin marvel_V = mkV "marvel" "marvels" "marvelled" "marvelled" "marvelling";
lin marvellous_A = compoundA (mkA (variants {"marvellous"; "marvelous"}));
lin marxism_N = mkN "marxism";
lin marxistMasc_N = mkN masculine (mkN "marxist" "marxists");
lin marxistFem_N = mkN feminine (mkN "marxist" "marxists");
lin mary_PN = mkPN "Mary";
lin maryland_PN = mkPN "Maryland";
lin maryport_PN = mkPN "Maryport";
lin marzipan_N = mkN "marzipan" "marzipans";
lin masc_PN = mkPN "Masc";
lin mascara_N = mkN "mascara" ;
lin mascarpone_N = mkN "mascarpone" ;
lin mascot_N = mkN "mascot" "mascots";
lin masculine_A = compoundA (mkA "masculine");
lin masculine_N = mkN "masculine" ;
lin masculinity_N = mkN "masculinity" ;
lin masculinization_N = mkN "masculinization" ;
lin masdevallia_N = mkN "masdevallia" ;
lin maser_N = mkN "maser" "masers";
lin mash_N = mkN "mash" "mashes";
lin mash_V2 = mkV2 (mkV "mash" "mashes" "mashed" "mashed" "mashing");
lin masher_N = mkN "masher" "mashers";
lin mashie_N = mkN "mashie" ;
lin masjid_N = mkN "masjid" ;
lin mask_N = mkN "mask" "masks";
lin mask_V2 = mkV2 (mkV "mask" "masks" "masked" "masked" "masking");
lin masking_N = mkN "masking" ;
lin masochism_N = mkN "masochism" ;
lin masochist_N = mkN "masochist" "masochists";
lin masochistic_A = compoundA (mkA "masochistic");
lin masochistically_Adv = mkAdv "masochistically";
lin mason_N = mkN "mason" "masons";
lin mason_dixon_PN = mkPN "Mason-dixon";
lin masonic_A = compoundA (mkA "masonic");
lin masonry_N = mkN "masonry" ;
lin masque_N = mkN "masque" "masques";
lin masquerade_N = mkN "masquerade" "masquerades";
lin masquerade_V = mkV "masquerade" "masquerades" "masqueraded" "masqueraded" "masquerading";
lin masquerader_N = mkN "masquerader" ;
lin mass_N = mkN "mass" "masses";
lin mass_V = mkV "mass" "masses" "massed" "massed" "massing";
lin mass_V2 = mkV2 (mkV "mass" "masses" "massed" "massed" "massing");
lin mass_produce_V2 = mkV2 (mkV "mass-produce" "mass-produces" "mass-produced" "mass-produced" "mass-producing");
lin massachusetts_PN = mkPN "Massachusetts";
lin massacre_N = mkN "massacre" "massacres";
lin massacre_V2 = mkV2 (mkV "massacre" "massacres" "massacred" "massacred" "massacring");
lin massage_N = mkN "massage" "massages";
lin massage_V2 = mkV2 (mkV "massage" "massages" "massaged" "massaged" "massaging");
lin massager_N = mkN "massager" ;
lin massasauga_N = mkN "massasauga" ;
lin masse_N = mkN "masse" ;
lin masseter_N = mkN "masseter" ;
lin masseur_N = mkN "masseur" "masseurs";
lin masseuse_N = mkN "masseuse" "masseuses";
lin massicot_N = mkN "massicot" ;
lin massif_N = mkN "massif" "massifs";
lin massive_A = compoundA (mkA "massive");
lin massiveness_N = mkN "massiveness" ;
lin massy_A = mkA "massy" "massier";
lin mast_N = mkN "mast" "masts";
lin mastaba_N = mkN "mastaba" ;
lin mastalgia_N = mkN "mastalgia" ;
lin mastectomy_N = mkN "mastectomy" ;
lin masted_A = mkA "masted" ;
lin master_N = mkN "master" "masters";
lin master_V2 = mkV2 (mkV "master" "masters" "mastered" "mastered" "mastering");
lin master_at_arms_N = mkN "master-at-arms" "masters-at-arms";
lin master_key_N = mkN "master-key" "master-keys";
lin masterful_A = compoundA (mkA "masterful");
lin mastering_N = mkN "mastering" ;
lin masterless_A = compoundA (mkA "masterless");
lin masterly_A = compoundA (mkA "masterly");
lin mastermind_N = mkN "mastermind" "masterminds";
lin mastermind_V2 = mkV2 (mkV "mastermind" "masterminds" "masterminded" "masterminded" "masterminding");
lin masterpiece_N = mkN "masterpiece" "masterpieces";
lin mastership_N = mkN "mastership" "masterships";
lin masterstroke_N = mkN "masterstroke" "masterstrokes";
lin mastery_N = mkN "mastery" ;
lin masthead_N = mkN "masthead" "mastheads";
lin mastic_N = mkN "mastic" ;
lin masticate_V2 = mkV2 (mkV "masticate" "masticates" "masticated" "masticated" "masticating");
lin mastication_N = mkN "mastication" ;
lin mastiff_N = mkN "mastiff" "mastiffs";
lin mastitis_N = mkN "mastitis" ;
lin mastodon_N = mkN "mastodon" "mastodons";
lin mastoid_A = mkA "mastoid" ;
lin mastoid_N = mkN "mastoid" "mastoids";
lin mastoidale_N = mkN "mastoidale" ;
lin mastoidectomy_N = mkN "mastoidectomy" ;
lin mastoiditis_N = mkN "mastoiditis" ;
lin mastopathy_N = mkN "mastopathy" ;
lin mastopexy_N = mkN "mastopexy" ;
lin masturbate_V = mkV "masturbate" "masturbates" "masturbated" "masturbated" "masturbating";
lin masturbate_V2 = mkV2 (mkV "masturbate" "masturbates" "masturbated" "masturbated" "masturbating");
lin masturbation_N = mkN "masturbation" ;
lin masturbator_N = mkN "masturbator" ;
lin mat_A = compoundA (mkA "mat");
lin mat_N = mkN "mat" "mats";
lin mat_V = mkV "mat" "mats" "matted" "matted" "matting";
lin mat_V2 = mkV2 (mkV "mat" "mats" "matted" "matted" "matting");
lin matador_N = mkN "matador" "matadors";
lin matai_N = mkN "matai" ;
lin match_N = mkN "match" "matches";
lin match_V = mkV "match" "matches" "matched" "matched" "matching";
lin match_V2 = mkV2 (mkV "match" "matches" "matched" "matched" "matching");
lin match_point_N = mkN "match-point" "match-points";
lin matchboard_N = mkN "matchboard" ;
lin matchbook_N = mkN "matchbook" ;
lin matchbox_N = mkN "matchbox" "matchboxes";
lin matchet_N = mkN "matchet" "matchets";
lin matchless_A = compoundA (mkA "matchless");
lin matchlock_N = mkN "matchlock" "matchlocks";
lin matchmaker_N = mkN "matchmaker" "matchmakers";
lin matchmaking_N = mkN "matchmaking" ;
lin matchstick_N = mkN "matchstick" ;
lin matchweed_N = mkN "matchweed" ;
lin matchwood_N = mkN "matchwood" ;
lin mate_1_N = mkN "mate" "mates";
lin mate_2_N = mkN "maté" "matés" ;
lin mate_N = mkN "mate" ;
lin mate_V = mkV "mate" "mates" "mated" "mated" "mating";
lin mate_V2 = mkV2 (mkV "mate" "mates" "mated" "mated" "mating");
lin mateless_A = mkA "mateless" ;
lin matelote_N = mkN "matelote" ;
lin mater_N = mkN "mater" ;
lin material_A = compoundA (mkA "material");
lin material_N = mkN "material" "materials";
lin materialism_N = mkN "materialism" ;
lin materialist_N = mkN "materialist" "materialists";
lin materialistic_A = compoundA (mkA "materialistic");
lin materialistically_Adv = mkAdv "materialistically";
lin materiality_N = mkN "materiality" ;
lin materialization_N = mkN "materialization" "materializations";
lin materialize_V = mkV "materialize" "materializes" "materialized" "materialized" "materializing";
lin materialize_V2V = mkV2V (mkV "materialize" "materializes" "materialized" "materialized" "materializing") noPrep to_Prep ;
lin materiel_N = mkN "materiel" ;
lin maternal_A = compoundA (mkA "maternal");
lin maternalism_N = mkN "maternalism" ;
lin maternalistic_A = mkA "maternalistic" ;
lin maternity_N = mkN "maternity" ;
lin matey_A = compoundA (mkA "matey");
lin mathematical_A = compoundA (mkA "mathematical");
lin mathematicianMasc_N = mkN masculine (mkN "mathematician" "mathematicians");
lin mathematicianFem_N = mkN feminine (mkN "mathematician" "mathematicians");
lin mathematics_N = mkN "mathematics" "mathematics";
lin maths_N = mkN "maths" "maths";
lin matinee_N = mkN "matinée" "matinées";
lin matins_N = mkN "matins" ;
lin matlock_PN = mkPN "Matlock";
lin matriarch_N = mkN "matriarch" "matriarchs";
lin matriarchal_A = compoundA (mkA "matriarchal");
lin matriarchic_A = mkA "matriarchic" ;
lin matriarchy_N = mkN "matriarchy" "matriarchies";
lin matric_N = mkN "matric" "matrics";
lin matricentric_A = mkA "matricentric" ;
lin matricide_N = mkN "matricide" "matricides";
lin matriculate_N = mkN "matriculate" ;
lin matriculate_V = mkV "matriculate" "matriculates" "matriculated" "matriculated" "matriculating";
lin matriculate_V2 = mkV2 (mkV "matriculate" "matriculates" "matriculated" "matriculated" "matriculating");
lin matriculation_N = mkN "matriculation" "matriculations";
lin matrilineage_N = mkN "matrilineage" ;
lin matrilineal_A = mkA "matrilineal" ;
lin matrimonial_A = compoundA (mkA "matrimonial");
lin matrimony_N = mkN "matrimony" ;
lin matrix_N = mkN "matrix" "matrixes";
lin matron_N = mkN "matron" "matrons";
lin matronly_A = compoundA (mkA "matronly");
lin matronymic_N = mkN "matronymic" ;
lin matsyendra_N = mkN "matsyendra" ;
lin matt_A = compoundA (mkA "matt");
lin matt_PN = mkPN "Matt";
lin matte_N = mkN "matte" ;
lin matter_N = mkN "matter" "matters";
lin matter_V = mkV "matter" "matters" "mattered" "mattered" "mattering";
lin matter_of_course_A = compoundA (mkA "matter-of-course");
lin matter_of_fact_A = compoundA (mkA "matter-of-fact");
lin matthew_PN = mkPN "Matthew";
lin matting_N = mkN "matting" ;
lin mattock_N = mkN "mattock" "mattocks";
lin mattress_N = mkN "mattress" "mattresses";
lin maturate_V = mkV "maturate" "maturates" "maturated" "maturated" "maturating";
lin maturation_N = mkN "maturation" ;
lin maturational_A = mkA "maturational" ;
lin mature_A = compoundA (mkA "mature");
lin mature_V = mkV "mature" "matures" "matured" "matured" "maturing";
lin mature_V2 = mkV2 (mkV "mature" "matures" "matured" "matured" "maturing");
lin maturity_1_N = mkN "maturity";
lin maturity_2_N = mkN "maturity";
lin maturity_3_N = mkN "maturity";
lin matutinal_A = compoundA (mkA "matutinal");
lin matzo_N = mkN "matzo" ;
lin maud_PN = mkPN "Maud";
lin maudie_PN = mkPN "Maudie";
lin maudlin_A = compoundA (mkA "maudlin");
lin maul_N = mkN "maul" ;
lin maul_V2 = mkV2 (mkV "maul" "mauls" "mauled" "mauled" "mauling");
lin mauler_N = mkN "mauler" ;
lin maulstick_N = mkN "maulstick" "maulsticks";
lin maund_N = mkN "maund" ;
lin maunder_V = mkV "maunder" "maunders" "maundered" "maundered" "maundering";
lin maundy_thursday_N = mkN "maundy thursday" "maundy thursdays";
lin maundy_thursday_PN = mkPN "Maundy thursday";
lin maureen_PN = mkPN "Maureen";
lin maurice_PN = mkPN "Maurice";
lin mauritania_PN = mkPN "Mauritania";
lin mauritanian_A = compoundA (mkA "mauritanian");
lin mauritanian_N = mkN "mauritanian" "mauritanians";
lin mauritian_A = compoundA (mkA "mauritian");
lin mauritian_N = mkN "mauritian" "mauritians";
lin mauritius_PN = mkPN "Mauritius";
lin mausoleum_N = mkN "mausoleum" "mausoleums";
lin mauve_A = compoundA (mkA "mauve");
lin mauve_N = mkN "mauve" "mauves";
lin maverick_N = mkN "maverick" "mavericks";
lin mavis_N = mkN "mavis" "mavises";
lin mavis_PN = mkPN "Mavis";
lin maw_N = mkN "maw" "maws";
lin mawkish_A = compoundA (mkA "mawkish");
lin mawkishness_N = mkN "mawkishness" ;
lin max_N = mkN "max" ;
lin max_PN = mkPN "Max";
lin maxi_A = mkA "maxi" ;
lin maxi_N = mkN "maxi" ;
lin maxillaria_N = mkN "maxillaria" ;
lin maxillary_A = mkA "maxillary" ;
lin maxillodental_A = mkA "maxillodental" ;
lin maxillofacial_A = mkA "maxillofacial" ;
lin maxillomandibular_A = mkA "maxillomandibular" ;
lin maxim_N = mkN "maxim" "maxims";
lin maximal_A = compoundA (mkA "maximal");
lin maximization_N = mkN "maximization" "maximizations";
lin maximize_V2 = mkV2 (mkV "maximize" "maximizes" "maximized" "maximized" "maximizing");
lin maximizing_A = mkA "maximizing" ;
lin maximum_A = compoundA (mkA "maximum");
lin maximum_N = mkN "maximum" "maximums";
lin maxine_PN = mkPN "Maxine";
lin maxwell_N = mkN "maxwell" ;
lin may_N = mkN "May" "Mays";
lin may_PN = mkPN "May";
lin may_1_VV = {
    s = table {
      VVF VInf => ["be possible to"] ;
      VVF VPres => "may" ;
      VVF VPPart => ["been possible to"] ;
      VVF VPresPart => ["being possible to"] ;
      VVF VPast => "might" ;
      VVPastNeg => "mightn't" ;
      VVPresNeg => "may not"
      } ;
    p = [] ;
    typ = VVAux
    } ;
lin may_2_VV = {
    s = table {
      VVF VInf => ["be allowed to"] ;
      VVF VPres => "may" ;
      VVF VPPart => ["been allowed to"] ;
      VVF VPresPart => ["being allowed to"] ;
      VVF VPast => "might" ;
      VVPastNeg => "mightn't" ;
      VVPresNeg => "may not"
      } ;
    p = [] ;
    typ = VVAux
    } ;
lin may_beetle_N = mkN "may-beetle" "may-beetles";
lin may_bug_N = mkN "may-bug" "may-bugs";
lin mayapple_N = mkN "mayapple" ;
lin maybe_Adv = mkAdv "maybe";
lin mayday_N = mkN "mayday" "maydays";
lin mayeng_N = mkN "mayeng" ;
lin mayfair_PN = mkPN "Mayfair";
lin mayfield_PN = mkPN "Mayfield";
lin mayfly_N = mkN "mayfly" "mayflies";
lin mayhaw_N = mkN "mayhaw" ;
lin mayhem_N = mkN "mayhem" ;
lin mayo_PN = mkPN "Mayo";
lin mayonnaise_N = mkN "mayonnaise" ;
lin mayor_N = mkN human (mkN "mayor" "mayors");
lin mayoral_A = compoundA (mkA "mayoral");
lin mayoralty_N = mkN "mayoralty" "mayoralties";
lin mayoress_N = mkN "mayoress" "mayoresses";
lin maypole_N = mkN "maypole" "maypoles";
lin maypop_N = mkN "maypop" ;
lin mayweed_N = mkN "mayweed" ;
lin maze_N = mkN "maze" "mazes";
lin mazed_A = compoundA (mkA "mazed");
lin mazer_N = mkN "mazer" ;
lin mazurka_N = mkN "mazurka" "mazurkas";
lin mb_N = mkN "mb" ;
lin mc_N = mkN "mc" ;
lin mcc_N = mkN "mcc" ;
lin mccarthyism_N = mkN "mccarthyism" ;
lin md_N = mkN "md" ;
lin mead_N = mkN "mead" "meads";
lin meadow_N = mkN "meadow" "meadows";
lin meadowgrass_N = mkN "meadowgrass" ;
lin meadowlark_N = mkN "meadowlark" ;
lin meager_A = mkA "meager" ;
lin meagerness_N = mkN "meagerness" ;
lin meagre_A = compoundA (mkA "meagre");
lin meagreness_N = mkN "meagreness" ;
lin meal_N = mkN "meal" "meals";
lin mealie_N = mkN "mealie" "mealies";
lin mealtime_N = mkN "mealtime" "mealtimes";
lin mealworm_N = mkN "mealworm" ;
lin mealy_A = mkA "mealy" "mealier";
lin mealy_bug_N = mkN "mealy-bug" "mealy-bugs";
lin mealy_mouthed_A = compoundA (mkA "mealy-mouthed");
lin mealybug_N = mkN "mealybug" ;
lin mealymouthed_A = mkA "mealymouthed" ;
lin mean_A = mkA "mean" "meaner";
lin mean_N = mkN "mean" "means";
lin mean_V = IrregEng.mean_V;
lin mean_V2 = mkV2 (IrregEng.mean_V);
lin mean_V2V = mkV2V (IrregEng.mean_V) noPrep to_Prep;
lin mean_VA = mkVA (IrregEng.mean_V);
lin mean_VS = mkVS (IrregEng.mean_V);
lin mean_VV = mkVV (IrregEng.mean_V);
lin meander_N = mkN "meander" ;
lin meander_V = mkV "meander" "meanders" "meandered" "meandered" "meandering";
lin meanderingly_Adv = mkAdv "meanderingly";
lin meanie_N = mkN "meanie" "meanies";
lin meaning_N = mkN "meaning" "meanings";
lin meaningful_A = compoundA (mkA "meaningful");
lin meaningfulness_N = mkN "meaningfulness" ;
lin meaningless_A = compoundA (mkA "meaningless");
lin meaninglessness_N = mkN "meaninglessness" ;
lin meanness_N = mkN "meanness" ;
lin means_N = mkN "means" ;
lin meanspiritedly_Adv = mkAdv "meanspiritedly" ;
lin meantime_Adv = mkAdv "meantime";
lin meantime_N = mkN "meantime" ;
lin meanwhile_Adv = mkAdv "meanwhile";
lin meany_N = mkN "meany" "meanies";
lin measles_N = mkN "measles" "measles";
lin measly_A = compoundA (mkA "measly");
lin measurable_A = compoundA (mkA "measurable");
lin measure_N = mkN "measure" "measures";
lin measure_V = mkV "measure" "measures" "measured" "measured" "measuring";
lin measure_V2 = mkV2 (mkV "measure" "measures" "measured" "measured" "measuring");
lin measuredly_Adv = mkAdv "measuredly" ;
lin measureless_A = compoundA (mkA "measureless");
lin measurement_N = mkN "measurement" "measurements";
lin measurer_N = mkN "measurer" ;
lin meat_N = mkN "meat" "meats";
lin meat_safe_N = mkN "meat-safe" "meat-safes";
lin meatball_N = mkN "meatball" "meatballs";
lin meath_PN = mkPN "Meath";
lin meatless_A = compoundA (mkA "meatless");
lin meatpacking_N = mkN "meatpacking" ;
lin meatus_N = mkN "meatus" ;
lin meaty_A = mkA "meaty" "meatier";
lin mebendazole_N = mkN "mebendazole" ;
lin mebibit_N = mkN "mebibit" ;
lin mecca_N = mkN "mecca" ;
lin mecca_PN = mkPN "Mecca";
lin mechanic_A = mkA "mechanic" ;
lin mechanic_N = mkN "mechanic" "mechanics";
lin mechanical_A = compoundA (mkA "mechanical");
lin mechanics_N = mkN "mechanics" "mechanics";
lin mechanism_N = mkN "mechanism" "mechanisms";
lin mechanist_N = mkN "mechanist" ;
lin mechanistic_A = compoundA (mkA "mechanistic");
lin mechanistically_Adv = mkAdv "mechanistically";
lin mechanization_N = mkN "mechanization" "mechanizations";
lin mechanize_V2 = mkV2 (mkV "mechanize" "mechanizes" "mechanized" "mechanized" "mechanizing");
lin meclizine_N = mkN "meclizine" ;
lin meclofenamate_N = mkN "meclofenamate" ;
lin meconium_N = mkN "meconium" ;
lin mecopteran_N = mkN "mecopteran" ;
lin mecopterous_A = mkA "mecopterous" ;
lin med_N = mkN "med" ;
lin medal_N = mkN "medal" "medals";
lin medalist_N = mkN "medalist" "medalists";
lin medallion_N = mkN "medallion" "medallions";
lin medallist_N = mkN "medallist" "medallists";
lin medan_PN = mkPN "Medan";
lin meddle_V = mkV "meddle" "meddles" "meddled" "meddled" "meddling";
lin meddler_N = mkN "meddler" "meddlers";
lin meddlesome_A = compoundA (mkA "meddlesome");
lin meddling_N = mkN "meddling" ;
lin medellin_PN = mkPN "Medellin";
lin media_N = mkN "media";
lin mediacy_N = mkN "mediacy" ;
lin mediaeval_A = compoundA (mkA "mediaeval");
lin medial_A = compoundA (mkA "medial");
lin median_A = compoundA (mkA "median");
lin median_N = mkN "median" "medians";
lin mediant_N = mkN "mediant" ;
lin mediastinum_N = mkN "mediastinum" ;
lin mediate_A = mkA "mediate" ;
lin mediate_V = mkV "mediate" "mediates" "mediated" "mediated" "mediating";
lin mediate_V2 = mkV2 (mkV "mediate" "mediates" "mediated" "mediated" "mediating");
lin mediation_N = mkN "mediation" ;
lin mediator_N = mkN human (mkN "mediator" "mediators");
lin mediatorial_A = mkA "mediatorial" ;
lin mediatory_A = mkA "mediatory" ;
lin mediatrix_N = mkN "mediatrix" ;
lin medic_N = mkN "medic" "medics";
lin medical_A = compoundA (mkA "medical");
lin medical_N = mkN "medical" "medicals";
lin medicament_N = mkN "medicament" "medicaments";
lin medicare_N = mkN "medicare" ;
lin medicate_V2 = mkV2 (mkV "medicate" "medicates" "medicated" "medicated" "medicating");
lin medication_N = mkN "medication" "medications";
lin medicative_A = mkA "medicative" ;
lin medicinal_A = compoundA (mkA "medicinal");
lin medicine_N = mkN "medicine" "medicines";
lin medicine_ball_N = mkN "medicine-ball" "medicine-balls";
lin medicine_chest_N = mkN "medicine-chest" "medicine-chests";
lin medicine_man_N = mkN masculine (mkN "medicine-man" "medicine-men");
lin medico_N = mkN "medico" "medicos";
lin medicolegal_A = mkA "medicolegal" ;
lin medieval_A = compoundA (mkA "medieval");
lin medina_N = mkN "medina" ;
lin mediocre_A = compoundA (mkA "mediocre");
lin mediocrity_N = mkN "mediocrity" "mediocrities";
lin meditate_V = mkV "meditate" "meditates" "meditated" "meditated" "meditating";
lin meditate_V2 = mkV2 (mkV "meditate" "meditates" "meditated" "meditated" "meditating");
lin meditation_N = mkN "meditation" "meditations";
lin meditative_A = compoundA (mkA "meditative");
lin mediterranean_A = compoundA (mkA "mediterranean");
lin medium_A = compoundA (mkA "medium");
lin medium_N = mkN "medium" "mediums";
lin medium_grade_A = compoundA (mkA "medium-grade");
lin medlar_N = mkN "medlar" "medlars";
lin medley_N = mkN "medley" "medleys";
lin medroxyprogesterone_N = mkN "medroxyprogesterone" ;
lin medulla_N = mkN "medulla" ;
lin medullary_A = mkA "medullary" ;
lin medusa_N = mkN "medusa" ;
lin medusoid_A = mkA "medusoid" ;
lin meed_N = mkN "meed" "meeds";
lin meek_A = mkA "meek" "meeker";
lin meekness_N = mkN "meekness" ;
lin meerkat_N = mkN "meerkat" ;
lin meerschaum_N = mkN "meerschaum" "meerschaums";
lin meet_A = compoundA (mkA "meet");
lin meet_N = mkN "meet" "meets";
lin meet_V = IrregEng.meet_V;
lin meet_V2 = mkV2 (IrregEng.meet_V);
lin meet_V2V = mkV2V (IrregEng.meet_V) noPrep to_Prep ;
lin meeting_N = mkN "meeting" "meetings";
lin meeting_house_N = mkN "meeting-house" "meeting-houses";
lin meeting_place_N = mkN "meeting-place" "meeting-places";
lin mefloquine_N = mkN "mefloquine" ;
lin meg_PN = mkPN "Meg";
lin megabit_N = mkN "megabit" ;
lin megabyte_N = mkN "megabyte" ;
lin megacolon_N = mkN "megacolon" ;
lin megacycle_N = mkN "megacycle" "megacycles";
lin megadeath_N = mkN "megadeath" "megadeaths";
lin megaflop_N = mkN "megaflop" ;
lin megagametophyte_N = mkN "megagametophyte" ;
lin megahertz_N = mkN "megahertz" ;
lin megakaryocyte_N = mkN "megakaryocyte" ;
lin megakaryocytic_A = mkA "megakaryocytic" ;
lin megalith_N = mkN "megalith" "megaliths";
lin megalithic_A = compoundA (mkA "megalithic");
lin megaloblast_N = mkN "megaloblast" ;
lin megaloblastic_A = mkA "megaloblastic" ;
lin megalocyte_N = mkN "megalocyte" ;
lin megalomania_N = mkN "megalomania" ;
lin megalomaniac_N = mkN "megalomaniac" "megalomaniacs";
lin megalomaniacal_A = mkA "megalomaniacal" ;
lin megalopolis_N = mkN "megalopolis" ;
lin megalosaur_N = mkN "megalosaur" ;
lin megaphone_N = mkN "megaphone" "megaphones";
lin megapode_N = mkN "megapode" ;
lin megascopic_A = mkA "megascopic" ;
lin megasporangium_N = mkN "megasporangium" ;
lin megaspore_N = mkN "megaspore" ;
lin megasporophyll_N = mkN "megasporophyll" ;
lin megatherian_N = mkN "megatherian" ;
lin megaton_N = mkN "megaton" "megatons";
lin megawatt_N = mkN "megawatt" ;
lin megestrol_N = mkN "megestrol" ;
lin megillah_N = mkN "megillah" ;
lin megilp_N = mkN "megilp" ;
lin megohm_N = mkN "megohm" ;
lin megrim_N = mkN "megrim" "megrims";
lin meiosis_N = mkN "meiosis" ;
lin meiotic_A = mkA "meiotic" ;
lin meitnerium_N = mkN "meitnerium" ;
lin melagra_N = mkN "melagra" ;
lin melamine_N = mkN "melamine" ;
lin melancholia_N = mkN "melancholia" ;
lin melancholic_A = compoundA (mkA "melancholic");
lin melancholic_N = mkN "melancholic" ;
lin melancholy_A = compoundA (mkA "melancholy");
lin melancholy_N = mkN "melancholy" ;
lin melange_N = mkN "mélange" "mélanges";
lin melanin_N = mkN "melanin" ;
lin melanoblast_N = mkN "melanoblast" ;
lin melanocyte_N = mkN "melanocyte" ;
lin melanoderma_N = mkN "melanoderma" ;
lin melanoma_N = mkN "melanoma" ;
lin melanosis_N = mkN "melanosis" ;
lin melatonin_N = mkN "melatonin" ;
lin melbourne_PN = mkPN "Melbourne";
lin melcombe_PN = mkPN "Melcombe";
lin melcombe_regis_PN = mkPN "Melcombe regis";
lin meld_V2 = mkV2 (mkV "meld");
lin melee_N = mkN "mêlée" "mêlées";
lin melena_N = mkN "melena" ;
lin melilotus_N = mkN "melilotus" ;
lin meliorate_V = mkV "meliorate" "meliorates" "meliorated" "meliorated" "meliorating";
lin meliorate_V2 = mkV2 (mkV "meliorate" "meliorates" "meliorated" "meliorated" "meliorating");
lin melioration_N = mkN "melioration" "meliorations";
lin meliorism_N = mkN "meliorism" ;
lin melksham_PN = mkPN "Melksham";
lin mellifluous_A = compoundA (mkA "mellifluous");
lin mellow_A = mkA "mellow" "mellower";
lin mellow_V = mkV "mellow" "mellows" "mellowed" "mellowed" "mellowing";
lin mellow_V2 = mkV2 (mkV "mellow" "mellows" "mellowed" "mellowed" "mellowing");
lin mellowing_N = mkN "mellowing" ;
lin mellowingly_Adv = mkAdv "mellowingly" ;
lin mellowness_N = mkN "mellowness" ;
lin melodic_A = compoundA (mkA "melodic");
lin melodically_Adv = mkAdv "melodically" ;
lin melodious_A = compoundA (mkA "melodious");
lin melodiousness_N = mkN "melodiousness" ;
lin melodrama_N = mkN "melodrama" "melodramas";
lin melodramatic_A = compoundA (mkA "melodramatic");
lin melodramatically_Adv = mkAdv "melodramatically";
lin melody_N = mkN "melody" "melodies";
lin melon_N = mkN "melon" "melons";
lin melosa_N = mkN "melosa" ;
lin melphalan_N = mkN "melphalan" ;
lin melt_V = mkV "melt" "melts" "melted" "melted" "melting";
lin melt_V2 = mkV2 (mkV "melt" "melts" "melted" "melted" "melting");
lin meltable_A = mkA "meltable" ;
lin meltdown_N = mkN "meltdown" ;
lin melter_N = mkN "melter" ;
lin meltham_PN = mkPN "Meltham";
lin melting_point_N = mkN "melting-point" "melting-points";
lin melting_pot_N = mkN "melting-pot" "melting-pots";
lin melton_mowbray_PN = mkPN "Melton mowbray";
lin meltwater_N = mkN "meltwater" ;
lin mem_N = mkN "mem" ;
lin member_N = mkN "member" "members";
lin membered_A = mkA "membered" ;
lin memberless_A = mkA "memberless" ;
lin membership_N = mkN "membership" ;
lin membrane_N = mkN "membrane" "membranes";
lin membranous_A = compoundA (mkA "membranous");
lin meme_N = mkN "meme" ;
lin memento_N = mkN "memento" "mementos";
lin memo_N = mkN "memo" "memos";
lin memoir_N = mkN "memoir" "memoirs";
lin memorabilia_N = mkN "memorabilia" ;
lin memorability_N = mkN "memorability" ;
lin memorable_A = compoundA (mkA "memorable");
lin memorandum_N = mkN "memorandum" "memorandums";
lin memorial_N = mkN "memorial" "memorials";
lin memorialize_V2 = mkV2 (mkV "memorialize" "memorializes" "memorialized" "memorialized" "memorializing");
lin memorization_N = mkN "memorization" ;
lin memorize_V2 = mkV2 (mkV "memorize" "memorizes" "memorized" "memorized" "memorizing");
lin memorizer_N = mkN "memorizer" ;
lin memory_N = mkN "memory" "memories";
lin memphis_PN = mkPN "Memphis";
lin memsahib_N = mkN "memsahib" "memsahibs";
lin menace_N = mkN "menace" "menaces";
lin menace_V2 = mkV2 (mkV "menace" "menaces" "menaced" "menaced" "menacing");
lin menacingly_Adv = mkAdv "menacingly";
lin menage_N = mkN "ménage" "ménages";
lin menagerie_N = mkN "menagerie" "menageries";
lin menarche_N = mkN "menarche" ;
lin mend_N = mkN "mend" "mends";
lin mend_V = mkV "mend" "mends" "mended" "mended" "mending";
lin mend_V2 = mkV2 (mkV "mend" "mends" "mended" "mended" "mending");
lin mendacious_A = compoundA (mkA "mendacious");
lin mendacity_N = mkN "mendacity" "mendacities";
lin mendelevium_N = mkN "mendelevium" ;
lin mendelian_A = compoundA (mkA "mendelian");
lin mender_N = mkN "mender" "menders";
lin mendicant_A = compoundA (mkA "mendicant");
lin mendicant_N = mkN "mendicant" "mendicants";
lin mending_N = mkN "mending" ;
lin menhaden_N = mkN "menhaden" ;
lin menhir_N = mkN "menhir" ;
lin menial_A = compoundA (mkA "menial");
lin menial_N = mkN "menial" "menials";
lin meningeal_A = mkA "meningeal" ;
lin meningioma_N = mkN "meningioma" ;
lin meningism_N = mkN "meningism" ;
lin meningitis_N = mkN "meningitis" ;
lin meningocele_N = mkN "meningocele" ;
lin meningoencephalitis_N = mkN "meningoencephalitis" ;
lin meninx_N = mkN "meninx" ;
lin meniscectomy_N = mkN "meniscectomy" ;
lin meniscus_N = mkN "meniscus" ;
lin menopausal_A = mkA "menopausal" ;
lin menopause_N = mkN "menopause" "menopauses";
lin menorah_N = mkN "menorah" ;
lin menorrhagia_N = mkN "menorrhagia" ;
lin menorrhea_N = mkN "menorrhea" ;
lin mensal_A = mkA "mensal" ;
lin mensch_N = mkN "mensch" ;
lin menstrual_A = compoundA (mkA "menstrual");
lin menstruate_V = mkV "menstruate" "menstruates" "menstruated" "menstruated" "menstruating";
lin menstruation_N = mkN "menstruation" ;
lin menstruum_N = mkN "menstruum" ;
lin mensurable_A = compoundA (mkA "mensurable");
lin mensural_A = mkA "mensural" ;
lin mensuration_N = mkN "mensuration" "mensurations";
lin mental_A = compoundA (mkA "mental");
lin mentalism_N = mkN "mentalism" ;
lin mentality_N = mkN "mentality" "mentalities";
lin menthol_N = mkN "menthol" ;
lin mentholated_A = compoundA (mkA "mentholated");
lin mention_N = mkN "mention" "mentions";
lin mention_V = mkV "mention" "mentions" "mentioned" "mentioned" "mentioning";
lin mention_V2 = mkV2 (mkV "mention" "mentions" "mentioned" "mentioned" "mentioning");
lin mention_VS = mkVS (mkV "mention" "mentions" "mentioned" "mentioned" "mentioning");
lin mentioner_N = mkN "mentioner" ;
lin mentor_N = mkN "mentor" "mentors";
lin mentum_N = mkN "mentum" ;
lin menu_N = mkN "menu" "menus";
lin meopham_PN = mkPN "Meopham";
lin meow_N = mkN "meow" ;
lin meperidine_N = mkN "meperidine" ;
lin mephenytoin_N = mkN "mephenytoin" ;
lin mephistophelian_A = compoundA (mkA "mephistophelian");
lin mephitis_N = mkN "mephitis" ;
lin mephobarbital_N = mkN "mephobarbital" ;
lin meprobamate_N = mkN "meprobamate" ;
lin meralgia_N = mkN "meralgia" ;
lin merbromine_N = mkN "merbromine" ;
lin mercantile_A = compoundA (mkA "mercantile");
lin mercantilism_N = mkN "mercantilism" ;
lin mercaptopurine_N = mkN "mercaptopurine" ;
lin mercator_PN = mkPN "Mercator";
lin mercenary_A = compoundA (mkA "mercenary");
lin mercenary_N = mkN human (mkN "mercenary" "mercenaries");
lin mercer_N = mkN "mercer" "mercers";
lin mercerize_V2 = mkV2 (mkV "mercerize" "mercerizes" "mercerized" "mercerized" "mercerizing");
lin merchandise_N = mkN "merchandise" ;
lin merchant_N = mkN "merchant" "merchants";
lin merchantability_N = mkN "merchantability" ;
lin merchantman_N = mkN masculine (mkN "merchantman" "merchantmen");
lin merciful_A = compoundA (mkA "merciful");
lin mercifulness_N = mkN "mercifulness" ;
lin merciless_A = compoundA (mkA "merciless");
lin mercilessness_N = mkN "mercilessness" ;
lin mercurial_A = compoundA (mkA "mercurial");
lin mercuric_A = mkA "mercuric" ;
lin mercury_N = mkN "mercury" ;
lin mercury_PN = mkPN "Mercury";
lin mercy_N = mkN "mercy" "mercies";
lin mere_A = compoundA (mkA "mere");
lin mere_N = mkN "mere" "meres";
lin merestone_N = mkN "merestone" ;
lin meretricious_A = compoundA (mkA "meretricious");
lin meretriciousness_N = mkN "meretriciousness" ;
lin merganser_N = mkN "merganser" ;
lin merge_V = mkV "merge" "merges" "merged" "merged" "merging";
lin merge_V2 = mkV2 (mkV "merge" "merges" "merged" "merged" "merging");
lin merger_N = mkN "merger" "mergers";
lin merging_N = mkN "merging" ;
lin mericarp_N = mkN "mericarp" ;
lin meridian_A = mkA "meridian" ;
lin meridian_N = mkN "meridian" "meridians";
lin meridional_A = compoundA (mkA "meridional");
lin meringue_N = mkN "meringue" "meringues";
lin merino_N = mkN "merino" ;
lin merino_sheep_N = mkN "merino-sheep" "merino-sheep";
lin meristem_N = mkN "meristem" ;
lin merit_N = mkN "merit" "merits";
lin merit_V2 = mkV2 (mkV "merit" "merits" "merited" "merited" "meriting");
lin meritocracy_N = mkN "meritocracy" "meritocracies";
lin meritocratic_A = compoundA (mkA "meritocratic");
lin meritorious_A = compoundA (mkA "meritorious");
lin merlon_N = mkN "merlon" ;
lin mermaid_N = mkN "mermaid" "mermaids";
lin merman_N = mkN masculine (mkN "merman" "mermen");
lin meromelia_N = mkN "meromelia" ;
lin meronym_N = mkN "meronym" ;
lin meronymy_N = mkN "meronymy" ;
lin merozoite_N = mkN "merozoite" ;
lin merriment_N = mkN "merriment" ;
lin merry_A = mkA "merry" "merrier";
lin merry_christmas_Interj = mkInterj "Merry Christmas" ;
lin merry_go_round_N = mkN "merry-go-round" "merry-go-rounds";
lin merrymaker_N = mkN "merrymaker" "merrymakers";
lin merrymaking_N = mkN "merrymaking" ;
lin merthyr_tydfil_PN = mkPN "Merthyr tydfil";
lin merton_PN = mkPN "Merton";
lin mesa_N = mkN "mesa" ;
lin mesalliance_N = mkN "mésalliance" "mésalliances";
lin mescal_N = mkN "mescal" "mescals";
lin mescaline_N = mkN "mescaline" ;
lin meseems_Adv = mkAdv "meseems";
lin mesenchyme_N = mkN "mesenchyme" ;
lin mesenteric_A = mkA "mesenteric" ;
lin mesentery_N = mkN "mesentery" ;
lin mesh_N = mkN "mesh" "meshes";
lin mesh_V = mkV "mesh" "meshes" "meshed" "meshed" "meshing";
lin mesh_V2 = mkV2 (mkV "mesh" "meshes" "meshed" "meshed" "meshing");
lin meshugaas_N = mkN "meshugaas" ;
lin meshugge_A = mkA "meshugge" ;
lin meshuggeneh_N = mkN "meshuggeneh" ;
lin mesial_A = mkA "mesial" ;
lin mesic_A = mkA "mesic" ;
lin mesmeric_A = compoundA (mkA "mesmeric");
lin mesmerism_N = mkN "mesmerism" ;
lin mesmerist_N = mkN "mesmerist" "mesmerists";
lin mesmerize_V2 = mkV2 (mkV "mesmerize" "mesmerizes" "mesmerized" "mesmerized" "mesmerizing");
lin mesoblastic_A = mkA "mesoblastic" ;
lin mesocarp_N = mkN "mesocarp" ;
lin mesocolon_N = mkN "mesocolon" ;
lin mesoderm_N = mkN "mesoderm" ;
lin mesohippus_N = mkN "mesohippus" ;
lin mesolithic_A = mkA "mesolithic" ;
lin mesomorph_N = mkN "mesomorph" ;
lin mesomorphic_A = mkA "mesomorphic" ;
lin meson_N = mkN "meson" "mesons";
lin mesonic_A = mkA "mesonic" ;
lin mesophyte_N = mkN "mesophyte" ;
lin mesophytic_A = mkA "mesophytic" ;
lin mesosphere_N = mkN "mesosphere" ;
lin mesothelioma_N = mkN "mesothelioma" ;
lin mesothelium_N = mkN "mesothelium" ;
lin mesquite_N = mkN "mesquite" ;
lin mess_N = mkN "mess" "messes";
lin mess_V = mkV "mess" "messes" "messed" "messed" "messing";
lin mess_V2 = mkV2 (mkV "mess" "messes" "messed" "messed" "messing");
lin mess_jacket_N = mkN "mess-jacket" "mess-jackets";
lin mess_up_N = mkN "mess-up" "mess-ups";
lin message_N = mkN "message" "messages";
lin messaging_N = mkN "messaging" ;
lin messenger_N = mkN "messenger" "messengers";
lin messiah_N = mkN "messiah" "messiahs";
lin messiahship_N = mkN "messiahship" ;
lin messianic_A = compoundA (mkA "messianic");
lin messina_PN = mkPN "Messina";
lin messiness_N = mkN "messiness" ;
lin messmate_N = mkN "messmate" "messmates";
lin messuage_N = mkN "messuage" "messuages";
lin messy_A = mkA "messy" "messier";
lin mestiza_N = mkN "mestiza" ;
lin mestizo_N = mkN "mestizo" ;
lin mestranol_N = mkN "mestranol" ;
lin met_PN = mkPN "Met";
lin metabolic_A = compoundA (mkA "metabolic");
lin metabolically_Adv = mkAdv "metabolically" ;
lin metabolism_N = mkN "metabolism" ;
lin metabolite_N = mkN "metabolite" ;
lin metabolize_V2 = mkV2 (mkV "metabolize");
lin metacarpal_A = compoundA (mkA "metacarpal");
lin metacarpal_N = mkN "metacarpal" "metacarpals";
lin metacarpus_N = mkN "metacarpus" ;
lin metacenter_N = mkN "metacenter" ;
lin metacentric_A = mkA "metacentric" ;
lin metadata_N = mkN "metadata" ;
lin metagenesis_N = mkN "metagenesis" ;
lin metagrobolized_A = mkA "metagrobolized" ;
lin metaknowledge_N = mkN "metaknowledge" ;
lin metal_N = mkN "metal" "metals";
lin metal_V2 = mkV2 (mkV "metal" "metals" "metalled" "metalled" "metalling");
lin metalanguage_N = mkN "metalanguage" ;
lin metalepsis_N = mkN "metalepsis" ;
lin metalhead_N = mkN "metalhead" ;
lin metallic_A = compoundA (mkA "metallic");
lin metallic_N = mkN "metallic" ;
lin metallike_A = mkA "metallike" ;
lin metalloid_A = mkA "metalloid" ;
lin metallurgical_A = compoundA (mkA "metallurgical");
lin metallurgist_N = mkN "metallurgist" "metallurgists";
lin metallurgy_N = mkN "metallurgy" ;
lin metalware_N = mkN "metalware" ;
lin metalwork_N = mkN "metalwork" "metalworks";
lin metalworker_N = mkN "metalworker" "metalworkers";
lin metalworking_N = mkN "metalworking" ;
lin metamathematics_N = mkN "metamathematics" ;
lin metamere_N = mkN "metamere" ;
lin metameric_A = mkA "metameric" ;
lin metamorphic_A = mkA "metamorphic" ;
lin metamorphism_N = mkN "metamorphism" ;
lin metamorphopsia_N = mkN "metamorphopsia" ;
lin metamorphose_V = mkV "metamorphose" "metamorphoses" "metamorphosed" "metamorphosed" "metamorphosing";
lin metamorphose_V2 = mkV2 (mkV "metamorphose" "metamorphoses" "metamorphosed" "metamorphosed" "metamorphosing");
lin metamorphosis_N = mkN "metamorphosis" "metamorphoses" {- FIXME: guessed plural form -};
lin metamorphous_A = mkA "metamorphous" ;
lin metaphase_N = mkN "metaphase" ;
lin metaphor_N = mkN "metaphor" "metaphors";
lin metaphorical_A = compoundA (mkA "metaphorical");
lin metaphysical_A = compoundA (mkA "metaphysical");
lin metaphysics_N = mkN "metaphysics" "metaphysics";
lin metaphysis_N = mkN "metaphysis" ;
lin metaproterenol_N = mkN "metaproterenol" ;
lin metarule_N = mkN "metarule" ;
lin metasequoia_N = mkN "metasequoia" ;
lin metastability_N = mkN "metastability" ;
lin metastable_A = mkA "metastable" ;
lin metastasis_N = mkN "metastasis" ;
lin metastatic_A = mkA "metastatic" ;
lin metatarsal_A = compoundA (mkA "metatarsal");
lin metatarsal_N = mkN "metatarsal" "metatarsals";
lin metatarsus_N = mkN "metatarsus" ;
lin metatherian_N = mkN "metatherian" ;
lin metathesis_N = mkN "metathesis" ;
lin metazoan_N = mkN "metazoan" ;
lin mete_V2 = mkV2 (mkV "mete" "metes" "meted" "meted" "meting");
lin metempsychosis_N = mkN "metempsychosis" ;
lin metencephalon_N = mkN "metencephalon" ;
lin meteor_N = mkN "meteor" "meteors";
lin meteoric_A = compoundA (mkA "meteoric");
lin meteorite_N = mkN "meteorite" "meteorites";
lin meteoritic_A = mkA "meteoritic" ;
lin meteoroid_N = mkN "meteoroid" ;
lin meteorologic_A = mkA "meteorologic" ;
lin meteorological_A = compoundA (mkA "meteorological");
lin meteorologist_N = mkN "meteorologist" "meteorologists";
lin meteorology_N = mkN "meteorology" ;
lin meteortropism_N = mkN "meteortropism" ;
lin meter_N = mkN "meter" "meters";
lin meterstick_N = mkN "meterstick" ;
lin metformin_N = mkN "metformin" ;
lin methacholine_N = mkN "methacholine" ;
lin methadone_N = mkN "methadone" ;
lin methamphetamine_N = mkN "methamphetamine" ;
lin methane_N = mkN "methane" ;
lin methanogen_N = mkN "methanogen" ;
lin methanol_N = mkN "methanol" ;
lin methapyrilene_N = mkN "methapyrilene" ;
lin methaqualone_N = mkN "methaqualone" ;
lin metharbital_N = mkN "metharbital" ;
lin metheglin_N = mkN "metheglin" ;
lin methenamine_N = mkN "methenamine" ;
lin methicillin_N = mkN "methicillin" ;
lin methinks_Adv = mkAdv "methinks";
lin methionine_N = mkN "methionine" ;
lin methocarbamol_N = mkN "methocarbamol" ;
lin method_N = mkN "method" "methods";
lin methodical_A = compoundA (mkA "methodical");
lin methodism_N = mkN "methodism" ;
lin methodist_A = compoundA (mkA "methodist");
lin methodist_N = mkN "methodist" "methodists";
lin methodological_A = compoundA (mkA "methodological");
lin methodology_N = mkN "methodology" "methodologies";
lin methotrexate_N = mkN "methotrexate" ;
lin methought_Adv = mkAdv "methought";
lin methuselah_PN = mkPN "Methuselah";
lin methyl_N = mkN "methyl" "methyls";
lin methylated_A = compoundA (mkA "methylated");
lin methyldopa_N = mkN "methyldopa" ;
lin methylenedioxymethamphetamine_N = mkN "methylenedioxymethamphetamine" ;
lin methylphenidate_N = mkN "methylphenidate" ;
lin methyltestosterone_N = mkN "methyltestosterone" ;
lin metic_N = mkN "metic" ;
lin metical_N = mkN "metical" ;
lin meticulous_A = compoundA (mkA "meticulous");
lin meticulousness_N = mkN "meticulousness" ;
lin metier_N = mkN "métier" "métiers";
lin metonym_N = mkN "metonym" ;
lin metonymic_A = mkA "metonymic" ;
lin metonymically_Adv = mkAdv "metonymically" ;
lin metonymy_N = mkN "metonymy" ;
lin metopion_N = mkN "metopion" ;
lin metoprolol_N = mkN "metoprolol" ;
lin metralgia_N = mkN "metralgia" ;
lin metre_N = mkN "metre" "metres";
lin metric_A = compoundA (mkA "metric");
lin metrical_A = compoundA (mkA "metrical");
lin metrication_N = mkN "metrication" "metrications";
lin metricize_V2 = mkV2 (mkV "metricize" "metricizes" "metricized" "metricized" "metricizing");
lin metrification_N = mkN "metrification" ;
lin metritis_N = mkN "metritis" ;
lin metro_N = mkN "metro" "metros";
lin metrological_A = mkA "metrological" ;
lin metrology_N = mkN "metrology" ;
lin metronidazole_N = mkN "metronidazole" ;
lin metronome_N = mkN "metronome" "metronomes";
lin metropolis_N = mkN "metropolis" "metropolises";
lin metropolitan_A = compoundA (mkA "metropolitan");
lin metropolitan_N = mkN "metropolitan" "metropolitans";
lin metroptosis_N = mkN "metroptosis" ;
lin metrorrhagia_N = mkN "metrorrhagia" ;
lin mettle_N = mkN "mettle" ;
lin mettlesome_A = compoundA (mkA "mettlesome");
lin mettlesomeness_N = mkN "mettlesomeness" ;
lin metz_PN = mkPN "Metz";
lin mew_N = mkN "mew" "mews";
lin mew_V = mkV "mew" "mews" "mewed" "mewed" "mewing";
lin mews_N = mkN "mews" "mews";
lin mexican_A = compoundA (mkA "mexican");
lin mexican_N = mkN "mexican" "mexicans";
lin mexico_PN = mkPN "Mexico";
lin mexico_city_PN = mkPN "Mexico city";
lin mexiletine_N = mkN "mexiletine" ;
lin mezereon_N = mkN "mezereon" ;
lin mezereum_N = mkN "mezereum" ;
lin mezuzah_N = mkN "mezuzah" ;
lin mezzanine_A = compoundA (mkA "mezzanine");
lin mezzanine_N = mkN "mezzanine" "mezzanines";
lin mezzo_Adv = mkAdv "mezzo";
lin mezzo_soprano_N = mkN "mezzo-soprano" "mezzo-sopranos";
lin mezzotint_N = mkN "mezzotint" "mezzotints";
lin mg_N = mkN "mg" "mg";
lin mgr_PN = mkPN "Mgr";
lin mho_N = mkN "mho" ;
lin mi5_PN = mkPN "Mi5";
lin mi6_PN = mkPN "Mi6";
lin mi_N = mkN "mi" "IRREG";
lin miami_PN = mkPN "Miami";
lin miaou_N = mkN "miaou" "miaous";
lin miaou_V = mkV "miaou" "miaous" "miaoued" "miaoued" "miaouing";
lin miaow_N = mkN "miaow" "miaows";
lin miaow_V = mkV "miaow" "miaows" "miaowed" "miaowed" "miaowing";
lin miasma_N = mkN "miasma" "miasmas";
lin miasmal_A = mkA "miasmal" ;
lin miasmic_A = mkA "miasmic" ;
lin mica_N = mkN "mica" ;
lin micaceous_A = mkA "micaceous" ;
lin micelle_N = mkN "micelle" ;
lin michael_PN = mkPN "Michael";
lin michaelmas_N = mkN "michaelmas" "michaelmases";
lin michaelmas_PN = mkPN "Michaelmas";
lin michelle_PN = mkPN "Michelle";
lin michigan_PN = mkPN "Michigan";
lin mick_PN = mkPN "Mick";
lin mickey_N = mkN "mickey" "IRREG";
lin mickey_PN = mkPN "Mickey";
lin mickle_N = mkN "mickle" "IRREG";
lin miconazole_N = mkN "miconazole" ;
lin micro_A = mkA "micro" ;
lin micro_organism_N = mkN "micro-organism" "micro-organisms";
lin microbalance_N = mkN "microbalance" ;
lin microbe_N = mkN "microbe" "microbes";
lin microbial_A = mkA "microbial" ;
lin microbiologist_N = mkN "microbiologist" ;
lin microbiology_N = mkN "microbiology" ;
lin microbrachia_N = mkN "microbrachia" ;
lin microbrewery_N = mkN "microbrewery" ;
lin microcephalic_A = mkA "microcephalic" ;
lin microcephaly_N = mkN "microcephaly" ;
lin microcosm_N = mkN "microcosm" "microcosms";
lin microcosmic_A = mkA "microcosmic" ;
lin microcrystalline_A = mkA "microcrystalline" ;
lin microcyte_N = mkN "microcyte" ;
lin microcytosis_N = mkN "microcytosis" ;
lin microdot_N = mkN "microdot" "microdots";
lin microeconomic_A = mkA "microeconomic" ;
lin microeconomics_N = mkN "microeconomics" ;
lin microeconomist_N = mkN "microeconomist" ;
lin microelectronic_A = mkA "microelectronic" ;
lin microelectronics_N = mkN "microelectronics" "microelectronics";
lin microevolution_N = mkN "microevolution" ;
lin microfarad_N = mkN "microfarad" ;
lin microfiche_N = mkN "microfiche" "microfiches";
lin microfilm_N = mkN "microfilm" "microfilms";
lin microfilm_V2 = mkV2 (mkV "microfilm" "microfilms" "microfilmed" "microfilmed" "microfilming");
lin microflora_N = mkN "microflora" ;
lin microfossil_N = mkN "microfossil" ;
lin microgametophyte_N = mkN "microgametophyte" ;
lin microgauss_N = mkN "microgauss" ;
lin microglia_N = mkN "microglia" ;
lin microgliacyte_N = mkN "microgliacyte" ;
lin microgram_N = mkN "microgram" ;
lin micrometeoric_A = mkA "micrometeoric" ;
lin micrometeorite_N = mkN "micrometeorite" ;
lin micrometeoritic_A = mkA "micrometeoritic" ;
lin micrometer_N = mkN "micrometer" "micrometers";
lin micrometry_N = mkN "micrometry" ;
lin micron_N = mkN "micron" "microns";
lin micronutrient_N = mkN "micronutrient" ;
lin microorganism_N = mkN "microorganism" ;
lin micropaleontology_N = mkN "micropaleontology" ;
lin micropenis_N = mkN "micropenis" ;
lin microphage_N = mkN "microphage" ;
lin microphone_N = mkN "microphone" "microphones";
lin microphoning_N = mkN "microphoning" ;
lin microphotometer_N = mkN "microphotometer" ;
lin microprocessor_N = mkN "microprocessor" ;
lin micropylar_A = mkA "micropylar" ;
lin micropyle_N = mkN "micropyle" ;
lin microradian_N = mkN "microradian" ;
lin microscope_N = mkN "microscope" "microscopes";
lin microscopic_A = compoundA (mkA "microscopic");
lin microscopical_A = compoundA (mkA "microscopical");
lin microscopist_N = mkN "microscopist" ;
lin microscopy_N = mkN "microscopy" ;
lin microsecond_N = mkN "microsecond" ;
lin microsomal_A = mkA "microsomal" ;
lin microsome_N = mkN "microsome" ;
lin microsporangium_N = mkN "microsporangium" ;
lin microspore_N = mkN "microspore" ;
lin microsporidian_N = mkN "microsporidian" ;
lin microsporophyll_N = mkN "microsporophyll" ;
lin microsurgery_N = mkN "microsurgery" ;
lin microtome_N = mkN "microtome" ;
lin microtubule_N = mkN "microtubule" ;
lin microvolt_N = mkN "microvolt" ;
lin microwave_N = mkN "microwave" "microwaves";
lin micturition_N = mkN "micturition" ;
lin mid_A = compoundA (mkA "mid");
lin mid_off_N = mkN "mid-off" "mid-offs";
lin mid_on_N = mkN "mid-on" "mid-ons";
lin midafternoon_N = mkN "midafternoon" ;
lin midair_N = mkN "midair" ;
lin midazolam_N = mkN "midazolam" ;
lin midbrain_N = mkN "midbrain" ;
lin midday_N = mkN "midday" ;
lin midden_N = mkN "midden" "middens";
lin middle_A = mkA "middle" ;
lin middle_N = mkN "middle" "middles";
lin middle_aged_A = compoundA (mkA "middle-aged");
lin middle_class_A = compoundA (mkA "middle-class");
lin middle_distance_A = compoundA (mkA "middle-distance");
lin middle_of_the_road_A = compoundA (mkA "middle-of-the-road");
lin middlebrow_N = mkN "middlebrow" ;
lin middlemanMasc_N = mkN masculine (mkN "middleman" "middlemen");
lin middlemanFem_N = mkN feminine (mkN "middleman" "middlemen");
lin middlemost_A = mkA "middlemost" ;
lin middlesex_PN = mkPN "Middlesex";
lin middleton_PN = mkPN "Middleton";
lin middleweight_A = compoundA (mkA "middleweight");
lin middleweight_N = mkN "middleweight" "middleweights";
lin middlewich_PN = mkPN "Middlewich";
lin middling_A = compoundA (mkA "middling");
lin middling_Adv = mkAdv "middling";
lin middling_N = mkN "middling" "middlings";
lin middy_N = mkN "middy" "middies";
lin midfield_N = mkN "midfield" "IRREG";
lin midge_N = mkN "midge" "midges";
lin midget_N = mkN "midget" "midgets";
lin midgrass_N = mkN "midgrass" ;
lin midi_A = mkA "midi" ;
lin midinette_N = mkN "midinette" "midinettes";
lin midiron_N = mkN "midiron" ;
lin midland_N = mkN "midland" "midlands";
lin midlands_PN = mkPN "Midlands";
lin midmost_A = compoundA (mkA "midmost");
lin midmost_Adv = mkAdv "midmost";
lin midnight_N = mkN "midnight" ;
lin midplane_N = mkN "midplane" ;
lin midrib_N = mkN "midrib" ;
lin midriff_N = mkN "midriff" "midriffs";
lin midshipman_N = mkN masculine (mkN "midshipman" "midshipmen");
lin midships_Adv = mkAdv "midships";
lin midst_N = mkN "midst" "IRREG";
lin midstream_N = mkN "midstream" ;
lin midsummer_N = mkN "midsummer" ;
lin midterm_N = mkN "midterm" ;
lin midway_A = compoundA (mkA "midway");
lin midway_Adv = mkAdv "midway";
lin midway_N = mkN "midway" ;
lin midweek_A = compoundA (mkA "midweek");
lin midweek_Adv = mkAdv "midweek";
lin midweek_N = mkN "midweek" ;
lin midweekly_A = mkA "midweekly" ;
lin midwest_PN = mkPN "Midwest";
lin midwestern_A = compoundA (mkA "midwestern");
lin midwife_N = mkN "midwife" "midwives" {- FIXME: guessed plural form -};
lin midwifery_N = mkN "midwifery" ;
lin midwinter_N = mkN "midwinter" ;
lin mien_N = mkN "mien" "miens";
lin miff_V2 = mkV2 (mkV "miff");
lin might_N = mkN "might" ;
lin might_have_been_N = mkN "might-have-been" "might-have-beens";
lin mighty_A = mkA "mighty" "mightier";
lin mighty_Adv = mkAdv "mighty";
lin mignonette_N = mkN "mignonette" ;
lin migraine_N = mkN "migraine" "migraines";
lin migrant_A = mkA "migrant" ;
lin migrant_N = mkN "migrant" "migrants";
lin migrate_V = mkV "migrate" "migrates" "migrated" "migrated" "migrating";
lin migration_N = mkN "migration" "migrations";
lin migrational_A = mkA "migrational" ;
lin migrator_N = mkN "migrator" ;
lin migratory_A = compoundA (mkA "migratory");
lin mihrab_N = mkN "mihrab" ;
lin mikado_N = mkN "mikado" "mikados";
lin mike_N = mkN "mike" "mikes";
lin mike_PN = mkPN "Mike";
lin mikvah_N = mkN "mikvah" ;
lin mil_N = mkN "mil" ;
lin milady_N = mkN "milady" "miladies";
lin milage_N = mkN "milage" "milages";
lin milan_PN = mkPN "Milan";
lin milano_PN = mkPN "Milano";
lin milch_A = compoundA (mkA "milch");
lin mild_A = mkA "mild" "milder";
lin mildenhall_PN = mkPN "Mildenhall";
lin mildew_N = mkN "mildew" ;
lin mildew_V = mkV "mildew" "mildews" "mildewed" "mildewed" "mildewing";
lin mildew_V2 = mkV2 (mkV "mildew" "mildews" "mildewed" "mildewed" "mildewing");
lin mildness_N = mkN "mildness" ;
lin mildred_PN = mkPN "Mildred";
lin mile_N = mkN "mile" "miles";
lin mileage_N = mkN "mileage" "mileages";
lin mileometer_N = mkN "mileometer" "mileometers";
lin miler_N = mkN "miler" "milers";
lin miles_PN = mkPN "Miles";
lin milestone_N = mkN "milestone" "milestones";
lin milford_PN = mkPN "Milford";
lin milford_haven_PN = mkPN "Milford haven";
lin milieu_N = mkN "milieu" "milieus";
lin militainment_N = mkN "militainment" ;
lin militancy_N = mkN "militancy" ;
lin militant_A = compoundA (mkA "militant");
lin militant_N = mkN "militant" "militants";
lin militarism_N = mkN "militarism" ;
lin militarist_N = mkN "militarist" "militarists";
lin militaristic_A = compoundA (mkA "militaristic");
lin militarized_A = mkA "militarized" ;
lin military_A = compoundA (mkA "military");
lin military_N = mkN "military" ;
lin militate_V = mkV "militate" "militates" "militated" "militated" "militating";
lin militia_N = mkN "militia" "militias";
lin militiaman_N = mkN masculine (mkN "militiaman" "militiamen");
lin milk_N = mkN "milk" ;
lin milk_V = mkV "milk" "milks" "milked" "milked" "milking";
lin milk_V2 = mkV2 (mkV "milk" "milks" "milked" "milked" "milking");
lin milk_churn_N = mkN "milk-churn" "milk-churns";
lin milk_powder_N = mkN "milk-powder" "milk-powders";
lin milk_shake_N = mkN "milk-shake" "milk-shakes";
lin milk_tooth_N = mkN "milk-tooth" "milk-teeth";
lin milk_white_A = compoundA (mkA "milk-white");
lin milkbar_N = mkN "milkbar" "milkbars";
lin milkcap_N = mkN "milkcap" ;
lin milking_machine_N = mkN "milking-machine" "milking-machines";
lin milkless_A = mkA "milkless" ;
lin milkmaid_N = mkN "milkmaid" "milkmaids";
lin milkman_N = mkN masculine (mkN "milkman" "milkmen");
lin milkshake_N = mkN "milkshake" "milkshakes";
lin milksop_N = mkN "milksop" "milksops";
lin milkweed_N = mkN "milkweed" "milkweeds";
lin milkwort_N = mkN "milkwort" ;
lin milky_A = mkA "milky" "milkier";
lin mill_N = mkN "mill" "mills";
lin mill_V = mkV "mill" "mills" "milled" "milled" "milling";
lin mill_V2 = mkV2 (mkV "mill" "mills" "milled" "milled" "milling");
lin mill_dam_N = mkN "mill-dam" "mill-dams";
lin mill_girl_N = mkN "mill-girl" "mill-girls";
lin mill_hand_N = mkN "mill-hand" "mill-hands";
lin millboard_N = mkN "millboard" ;
lin milldam_N = mkN "milldam" ;
lin millenarian_A = mkA "millenarian" ;
lin millenarian_N = mkN "millenarian" "millenarians";
lin millenarianism_N = mkN "millenarianism" ;
lin millenary_A = mkA "millenary" ;
lin millenary_N = mkN "millenary" ;
lin millennial_A = compoundA (mkA "millennial");
lin millennium_N = mkN "millennium" "millennia" {- FIXME: guessed plural form -};
lin millepede_N = mkN "millepede" "millepedes";
lin miller_N = mkN "miller" "millers";
lin millerite_N = mkN "millerite" ;
lin millet_N = mkN "millet" ;
lin millettia_N = mkN "millettia" ;
lin milliammeter_N = mkN "milliammeter" ;
lin milliampere_N = mkN "milliampere" ;
lin milliard_N = mkN "milliard" "milliards";
lin millibar_N = mkN "millibar" "millibars";
lin millicent_PN = mkPN "Millicent";
lin millicurie_N = mkN "millicurie" ;
lin millidegree_N = mkN "millidegree" ;
lin millie_PN = mkPN "Millie";
lin milliequivalent_N = mkN "milliequivalent" ;
lin millifarad_N = mkN "millifarad" ;
lin milligram_N = mkN "milligram" "milligrams";
lin millihenry_N = mkN "millihenry" ;
lin milliliter_N = mkN "milliliter" ;
lin millime_N = mkN "millime" ;
lin millimetre_N = variants {mkN "millimetre" "millimetres"; mkN "millimeter" "millimeters"};
lin milline_N = mkN "milline" ;
lin milliner_N = mkN "milliner" "milliners";
lin millinery_N = mkN "millinery" ;
lin milling_N = mkN "milling" ;
lin million_A = mkA "million" ;
lin million_N = mkN "million" ;
lin millionaire_N = mkN "millionaire" "millionaires";
lin millionairess_N = mkN "millionairess" "millionairesss";
lin millionfold_Adv = mkAdv "millionfold";
lin millionth_A = compoundA (mkA "millionth");
lin millionth_N = mkN "millionth" "millionths";
lin millipede_N = mkN "millipede" "millipedes";
lin milliradian_N = mkN "milliradian" ;
lin millisecond_N = mkN "millisecond" ;
lin millivolt_N = mkN "millivolt" ;
lin millivoltmeter_N = mkN "millivoltmeter" ;
lin milliwatt_N = mkN "milliwatt" ;
lin millom_PN = mkPN "Millom";
lin millpond_N = mkN "millpond" "millponds";
lin millrace_N = mkN "millrace" "millraces";
lin millstone_N = mkN "millstone" "millstones";
lin millwheel_N = mkN "millwheel" "millwheels";
lin millwork_N = mkN "millwork" ;
lin millwright_N = mkN "millwright" "millwrights";
lin milly_PN = mkPN "Milly";
lin milngavie_PN = mkPN "Milngavie";
lin milnrow_PN = mkPN "Milnrow";
lin milo_N = mkN "milo" ;
lin milometer_N = mkN "milometer" "milometers";
lin milord_N = mkN "milord" "milords";
lin milt_N = mkN "milt" ;
lin milton_keynes_PN = mkPN "Milton keynes";
lin milwaukee_PN = mkPN "Milwaukee";
lin mime_N = mkN "mime" "mimes";
lin mime_V = mkV "mime" "mimes" "mimed" "mimed" "miming";
lin mime_V2 = mkV2 (mkV "mime" "mimes" "mimed" "mimed" "miming");
lin mimeograph_N = mkN "mimeograph" "mimeographs";
lin mimeograph_V2 = mkV2 (mkV "mimeograph" "mimeographs" "mimeographed" "mimeographed" "mimeographing");
lin mimesis_N = mkN "mimesis" ;
lin mimetic_A = compoundA (mkA "mimetic");
lin mimic_A = compoundA (mkA "mimic");
lin mimic_N = mkN "mimic" "mimics";
lin mimic_V2 = mkV2 (mkV "mimic" "IRREG" "IRREG" "IRREG" "IRREG");
lin mimicry_N = mkN "mimicry" ;
lin mimosa_N = mkN "mimosa" "mimosas";
lin min_N = mkN "min" ;
lin minaret_N = mkN "minaret" "minarets";
lin minatory_A = compoundA (mkA "minatory");
lin mince_N = mkN "mince" ;
lin mince_V = mkV "mince" "minces" "minced" "minced" "mincing";
lin mince_V2 = mkV2 (mkV "mince" "minces" "minced" "minced" "mincing");
lin mince_pie_N = mkN "mince-pie" "mince-pies";
lin mincemeat_N = mkN "mincemeat" ;
lin mincer_N = mkN "mincer" "mincers";
lin mincingly_Adv = mkAdv "mincingly" ;
lin mind_N = mkN "mind" "minds";
lin mind_V = mkV "mind" "minds" "minded" "minded" "minding";
lin mind_V2 = mkV2 (mkV "mind" "minds" "minded" "minded" "minding");
lin mind_VS = mkVS (mkV "mind" "minds" "minded" "minded" "minding");
lin mind_bending_A = compoundA (mkA "mind-bending");
lin mind_blowing_A = compoundA (mkA "mind-blowing");
lin mind_boggling_A = compoundA (mkA "mind-boggling");
lin mind_reader_N = mkN "mind-reader" "mind-readers";
lin minder_N = mkN "minder" "minders";
lin mindful_A = compoundA (mkA "mindful");
lin mindfulness_N = mkN "mindfulness" ;
lin mindless_A = compoundA (mkA "mindless");
lin mindlessness_N = mkN "mindlessness" ;
lin mine_A = compoundA (mkA "mine");
lin mine_N = mkN "mine" "mines";
lin mine_V = mkV "mine" "mines" "mined" "mined" "mining";
lin mine_V2 = mkV2 (mkV "mine" "mines" "mined" "mined" "mining");
lin mine_detector_N = mkN "mine-detector" "mine-detectors";
lin mine_disposal_N = mkN "mine-disposal" "mine-disposals";
lin minefield_N = mkN "minefield" "minefields";
lin minehead_PN = mkPN "Minehead";
lin minelayer_N = mkN "minelayer" "minelayers";
lin minelaying_N = mkN "minelaying" ;
lin miner_N = mkN "miner" "miners";
lin mineral_A = compoundA (mkA "mineral");
lin mineral_N = mkN "mineral" "minerals";
lin mineralocorticoid_N = mkN "mineralocorticoid" ;
lin mineralogist_N = mkN "mineralogist" "mineralogists";
lin mineralogy_N = mkN "mineralogy" ;
lin mineshaft_N = mkN "mineshaft" ;
lin minestrone_N = mkN "minestrone" ;
lin minesweeper_N = mkN "minesweeper" "minesweepers";
lin minesweeping_N = mkN "minesweeping" ;
lin mineworker_N = mkN "mineworker" "mineworkers";
lin minge_N = mkN "minge" ;
lin mingle_V = mkV "mingle" "mingles" "mingled" "mingled" "mingling";
lin mingle_V2 = mkV2 (mkV "mingle" "mingles" "mingled" "mingled" "mingling");
lin mingling_N = mkN "mingling" ;
lin mingy_A = mkA "mingy" "mingier";
lin mini_A = mkA "mini" ;
lin miniature_A = mkA "miniature" ;
lin miniature_N = mkN "miniature" "miniatures";
lin miniaturist_N = mkN "miniaturist" "miniaturists";
lin miniaturization_N = mkN "miniaturization" ;
lin miniaturize_V2 = mkV2 (mkV "miniaturize" "miniaturizes" "miniaturized" "miniaturized" "miniaturizing");
lin minibar_N = mkN "minibar" ;
lin minibike_N = mkN "minibike" ;
lin minibus_N = mkN "minibus" ;
lin minicab_N = mkN "minicab" ;
lin minicar_N = mkN "minicar" ;
lin minicomputer_N = mkN "minicomputer" ;
lin minim_N = mkN "minim" "minims";
lin minimal_A = compoundA (mkA "minimal");
lin minimalism_N = mkN "minimalism" ;
lin minimalist_A = mkA "minimalist" ;
lin minimalist_N = mkN "minimalist" ;
lin minimization_N = mkN "minimization" ;
lin minimize_V2 = mkV2 (mkV "minimize" "minimizes" "minimized" "minimized" "minimizing");
lin minimum_A = compoundA (mkA "minimum");
lin minimum_N = mkN "minimum" "minimums";
lin minimus_N = mkN "minimus" ;
lin mining_N = mkN "mining" ;
lin minion_N = mkN "minion" "minions";
lin miniskirt_N = mkN "miniskirt" ;
lin minister_N = mkN "minister" "ministers";
lin minister_V = mkV "minister" "ministers" "ministered" "ministered" "ministering";
lin ministerial_A = compoundA (mkA "ministerial");
lin ministrant_A = compoundA (mkA "ministrant");
lin ministrant_N = mkN "ministrant" "ministrants";
lin ministration_N = mkN "ministration" "ministrations";
lin ministry_N = mkN "ministry" "ministries";
lin minisub_N = mkN "minisub" ;
lin minivan_N = mkN "minivan" ;
lin miniver_N = mkN "miniver" ;
lin mink_N = mkN "mink" "minks";
lin minneapolis_PN = mkPN "Minneapolis";
lin minnesota_PN = mkPN "Minnesota";
lin minniebush_N = mkN "minniebush" ;
lin minnow_N = mkN "minnow" "minnows";
lin minocycline_N = mkN "minocycline" ;
lin minor_A = compoundA (mkA "minor");
lin minor_N = mkN "minor" "minors";
lin minority_N = mkN "minority" "minorities";
lin minotaur_N = mkN "minotaur" "minotaurs";
lin minoxidil_N = mkN "minoxidil" ;
lin minsk_PN = mkPN "Minsk";
lin minster_N = mkN "minster" "minsters";
lin minster_in_sheppey_PN = mkPN "Minster-in-sheppey";
lin minstrel_N = mkN "minstrel" "minstrels";
lin minstrelsy_N = mkN "minstrelsy" ;
lin mint_N = mkN "mint" "mints";
lin mint_V2 = mkV2 (mkV "mint" "mints" "minted" "minted" "minting");
lin mintage_N = mkN "mintage" ;
lin mintmark_N = mkN "mintmark" ;
lin minty_A = mkA "minty" ;
lin minuend_N = mkN "minuend" ;
lin minuet_N = mkN "minuet" "minuets";
lin minus_A = compoundA (mkA "minus");
lin minus_N = mkN "minus" "minuses";
lin minus_Prep = mkPrep "minus";
lin minuscule_A = compoundA (mkA "minuscule");
lin minuscule_N = mkN "minuscule" ;
lin minute_A = mkA "minute" "minuter";
lin minute_N = mkN "minute" "minutes";
lin minute_V2 = mkV2 (mkV "minute" "minutes" "minuted" "minuted" "minuting");
lin minute_book_N = mkN "minute-book" "minute-books";
lin minute_gun_N = mkN "minute-gun" "minute-guns";
lin minute_hand_N = mkN "minute-hand" "minute-hands";
lin minuteman_N = mkN masculine (mkN "minuteman" "minutemen");
lin minuteness_N = mkN "minuteness" ;
lin minutes_N = mkN "minutes" ;
lin minutia_N = mkN "minutia" ;
lin minx_N = mkN "minx" "minxes";
lin minyan_N = mkN "minyan" ;
lin miotic_A = mkA "miotic" ;
lin miracle_N = mkN "miracle" "miracles";
lin miraculous_A = compoundA (mkA "miraculous");
lin mirage_N = mkN "mirage" "mirages";
lin miranda_PN = mkPN "Miranda";
lin mire_N = mkN "mire" ;
lin mire_V = mkV "mire" "mires" "mired" "mired" "miring";
lin mire_V2 = mkV2 (mkV "mire" "mires" "mired" "mired" "miring");
lin miriam_PN = mkPN "Miriam";
lin miro_N = mkN "miro" ;
lin mirror_N = mkN "mirror" "mirrors";
lin mirror_V2 = mkV2 (mkV "mirror" "mirrors" "mirrored" "mirrored" "mirroring");
lin mirrorlike_A = mkA "mirrorlike" ;
lin mirth_N = mkN "mirth" ;
lin mirthful_A = compoundA (mkA "mirthful");
lin mirthless_A = compoundA (mkA "mirthless");
lin miry_A = mkA "miry" "mirier";
lin misadventure_N = mkN "misadventure" "misadventures";
lin misadvise_V2 = mkV2 (mkV "misadvise" "misadvises" "misadvised" "misadvised" "misadvising");
lin misalignment_N = mkN "misalignment" ;
lin misalliance_N = mkN "misalliance" "misalliances";
lin misanthrope_N = mkN "misanthrope" "misanthropes";
lin misanthropic_A = compoundA (mkA "misanthropic");
lin misanthropy_N = mkN "misanthropy" ;
lin misapplication_N = mkN "misapplication" "misapplications";
lin misapply_V2 = mkV2 (mkV "misapply" "misapplies" "misapplied" "misapplied" "misapplying");
lin misapprehend_V2 = mkV2 (mkV "misapprehend" "misapprehends" "misapprehended" "misapprehended" "misapprehending");
lin misapprehension_N = mkN "misapprehension" "misapprehensions";
lin misappropriate_V2 = mkV2 (mkV "misappropriate" "misappropriates" "misappropriated" "misappropriated" "misappropriating");
lin misappropriation_N = mkN "misappropriation" "misappropriations";
lin misbegotten_A = compoundA (mkA "misbegotten");
lin misbehave_V = mkV "misbehave" "misbehaves" "misbehaved" "misbehaved" "misbehaving";
lin misbehave_V2 = mkV2 (mkV "misbehave" "misbehaves" "misbehaved" "misbehaved" "misbehaving");
lin misbehavior_N = mkN "misbehavior" ;
lin misbehaviour_N = mkN "misbehaviour" ;
lin misbranded_A = mkA "misbranded" ;
lin misc_PN = mkPN "Misc";
lin miscalculate_V = mkV "miscalculate" "miscalculates" "miscalculated" "miscalculated" "miscalculating";
lin miscalculate_V2 = mkV2 (mkV "miscalculate" "miscalculates" "miscalculated" "miscalculated" "miscalculating");
lin miscalculation_N = mkN "miscalculation" "miscalculations";
lin miscall_V2 = mkV2 (mkV "miscall" "miscalls" "miscalled" "miscalled" "miscalling");
lin miscarriage_N = mkN "miscarriage" "miscarriages";
lin miscarry_V2 = mkV2 (mkV "miscarry" "miscarries" "miscarried" "miscarried" "miscarrying");
lin miscast_V2 = mkV2 (mkV "mis" IrregEng.cast_V);
lin miscegenation_N = mkN "miscegenation" ;
lin miscellaneous_A = compoundA (mkA "miscellaneous");
lin miscellany_N = mkN "miscellany" "miscellanies";
lin mischance_N = mkN "mischance" "mischances";
lin mischief_N = mkN "mischief" "mischiefs";
lin mischief_maker_N = mkN "mischief-maker" "mischief-makers";
lin mischief_making_N = mkN "mischief-making" ;
lin mischievous_A = compoundA (mkA "mischievous");
lin mischievousness_N = mkN "mischievousness" ;
lin miscible_A = mkA "miscible" ;
lin misconceive_V = mkV "misconceive" "misconceives" "misconceived" "misconceived" "misconceiving";
lin misconceive_V2 = mkV2 (mkV "misconceive" "misconceives" "misconceived" "misconceived" "misconceiving");
lin misconception_N = mkN "misconception" "misconceptions";
lin misconduct_N = mkN "misconduct" ;
lin misconduct_V2 = mkV2 (mkV "misconduct" "misconducts" "misconducted" "misconducted" "misconducting");
lin misconstrual_N = mkN "misconstrual" ;
lin misconstruction_N = mkN "misconstruction" "misconstructions";
lin misconstrue_V2 = mkV2 (mkV "misconstrue" "misconstrues" "misconstrued" "misconstrued" "misconstruing");
lin miscount_N = mkN "miscount" "miscounts";
lin miscount_V = mkV "miscount" "miscounts" "miscounted" "miscounted" "miscounting";
lin miscount_V2 = mkV2 (mkV "miscount" "miscounts" "miscounted" "miscounted" "miscounting");
lin miscreant_N = mkN "miscreant" "miscreants";
lin miscue_N = mkN "miscue" ;
lin misdate_V2 = mkV2 (mkV "misdate" "misdates" "misdated" "misdated" "misdating");
lin misdeal_N = mkN "misdeal" "misdeals";
lin misdeal_V = mkV "mis" IrregEng.deal_V;
lin misdeal_V2 = mkV2 (mkV "mis" IrregEng.deal_V);
lin misdeed_N = mkN "misdeed" "misdeeds";
lin misdemeanor_N = mkN "misdemeanor" ;
lin misdemeanour_N = mkN "misdemeanour" "misdemeanours";
lin misdirect_V2 = mkV2 (mkV "misdirect" "misdirects" "misdirected" "misdirected" "misdirecting");
lin misdirection_N = mkN "misdirection" "misdirections";
lin misdoing_N = mkN "misdoing" "misdoings";
lin mise_en_scene_N = mkN "mise en scène" ;
lin miser_N = mkN "miser" "misers";
lin miserable_A = compoundA (mkA "miserable");
lin miserliness_N = mkN "miserliness" ;
lin miserly_A = compoundA (mkA "miserly");
lin misery_N = mkN "misery" "miseries";
lin misfeasance_N = mkN "misfeasance" ;
lin misfire_N = mkN "misfire" "misfires";
lin misfire_V = mkV "misfire" "misfires" "misfired" "misfired" "misfiring";
lin misfit_N = mkN "misfit" "misfits";
lin misfortune_N = mkN "misfortune" "misfortunes";
lin misgive_V2 = mkV2 (mkV "mis" IrregEng.give_V);
lin misgiving_N = mkN "misgiving" "misgivings";
lin misgovern_V2 = mkV2 (mkV "misgovern" "misgoverns" "misgoverned" "misgoverned" "misgoverning");
lin misgovernment_N = mkN "misgovernment" ;
lin misguide_V2 = mkV2 (mkV "misguide" "misguides" "misguided" "misguided" "misguiding");
lin mishandle_V2 = mkV2 (mkV "mishandle" "mishandles" "mishandled" "mishandled" "mishandling");
lin mishap_N = mkN "mishap" "mishaps";
lin mishmash_N = mkN "mishmash" ;
lin mishpocha_N = mkN "mishpocha" ;
lin misinform_V2 = mkV2 (mkV "misinform" "misinforms" "misinformed" "misinformed" "misinforming");
lin misinformation_N = mkN "misinformation" ;
lin misinterpret_V2 = mkV2 (mkV "misinterpret" "misinterprets" "misinterpreted" "misinterpreted" "misinterpreting");
lin misinterpretation_N = mkN "misinterpretation" "misinterpretations";
lin misjudge_V = mkV "misjudge" "misjudges" "misjudged" "misjudged" "misjudging";
lin misjudge_V2 = mkV2 (mkV "misjudge" "misjudges" "misjudged" "misjudged" "misjudging");
lin mislaid_A = mkA "mislaid" ;
lin mislay_V2 = mkV2 (mkV "mi" IrregEng.slay_V);
lin mislead_V2 = mkV2 (mkV "mis" IrregEng.lead_V);
lin misleader_N = mkN "misleader" ;
lin mismanage_V2 = mkV2 (mkV "mismanage" "mismanages" "mismanaged" "mismanaged" "mismanaging");
lin mismanagement_N = mkN "mismanagement" ;
lin mismatch_N = mkN "mismatch" ;
lin mismatched_A = mkA "mismatched" ;
lin misname_V2 = mkV2 (mkV "misname" "misnames" "misnamed" "misnamed" "misnaming");
lin misnomer_N = mkN "misnomer" "misnomers";
lin miso_N = mkN "miso" ;
lin misocainea_N = mkN "misocainea" ;
lin misogamist_N = mkN "misogamist" ;
lin misogamy_N = mkN "misogamy" ;
lin misogynic_A = mkA "misogynic" ;
lin misogynist_N = mkN "misogynist" "misogynists";
lin misogynous_A = mkA "misogynous" ;
lin misogyny_N = mkN "misogyny" ;
lin misology_N = mkN "misology" ;
lin misoneism_N = mkN "misoneism" ;
lin misopedia_N = mkN "misopedia" ;
lin misplace_V2 = mkV2 (mkV "misplace" "misplaces" "misplaced" "misplaced" "misplacing");
lin misprint_N = mkN "misprint" "misprints";
lin misprint_V2 = mkV2 (mkV "misprint" "misprints" "misprinted" "misprinted" "misprinting");
lin mispronounce_V2 = mkV2 (mkV "mispronounce" "mispronounces" "mispronounced" "mispronounced" "mispronouncing");
lin mispronunciation_N = mkN "mispronunciation" "mispronunciations";
lin misquotation_N = mkN "misquotation" "misquotations";
lin misquote_V2 = mkV2 (mkV "misquote" "misquotes" "misquoted" "misquoted" "misquoting");
lin misread_V2 = mkV2 (mkV "mis" IrregEng.read_V);
lin misreading_N = mkN "misreading" ;
lin misrelated_A = mkA "misrelated" ;
lin misrepresent_V2 = mkV2 (mkV "misrepresent" "misrepresents" "misrepresented" "misrepresented" "misrepresenting");
lin misrepresentation_N = mkN "misrepresentation" "misrepresentations";
lin misrule_N = mkN "misrule" ;
lin miss_N = mkN "miss" "misses";
lin miss_V = mkV "miss" "misses" "missed" "missed" "missing";
lin miss_V2 = mkV2 (mkV "miss" "misses" "missed" "missed" "missing");
lin missal_N = mkN "missal" "missals";
lin misshapen_A = compoundA (mkA "misshapen");
lin missile_N = mkN "missile" "missiles";
lin mission_N = mkN "mission" "missions";
lin missionary_A = mkA "missionary" ;
lin missionary_N = mkN "missionary" "missionaries";
lin missis_N = mkN "missis" "misses" {- FIXME: guessed plural form -};
lin mississippi_PN = mkPN "Mississippi";
lin missive_N = mkN "missive" "missives";
lin missouri_PN = mkPN "Missouri";
lin misspell_V2 = mkV2 (mkV "misspell" "misspells" "misspelled" "misspelled" "misspelling");
lin misspelling_N = mkN "misspelling" "misspellings";
lin misspend_V2 = mkV2 (mkV "mis" IrregEng.spend_V);
lin misstate_V2 = mkV2 (mkV "misstate" "misstates" "misstated" "misstated" "misstating");
lin misstatement_N = mkN "misstatement" "misstatements";
lin missus_N = mkN "missus" "missi" {- FIXME: guessed plural form -};
lin missy_N = mkN "missy" "missies";
lin mist_N = mkN "mist" "mists";
lin mist_V = mkV "mist" "mists" "misted" "misted" "misting";
lin mist_V2 = mkV2 (mkV "mist" "mists" "misted" "misted" "misting");
lin mistake_N = mkN "mistake" "mistakes";
lin mistake_V = IrregEng.mistake_V;
lin mistake_V2 = mkV2 (IrregEng.mistake_V);
lin mistaken_A = mkA "mistaken" ;
lin mister_N = mkN "mister" "misters";
lin mistflower_N = mkN "mistflower" ;
lin mistime_V2 = mkV2 (mkV "mistime" "mistimes" "mistimed" "mistimed" "mistiming");
lin mistiness_N = mkN "mistiness" ;
lin mistletoe_N = mkN "mistletoe" ;
lin mistral_N = mkN "mistral" "mistrals";
lin mistranslate_V2 = mkV2 (mkV "mistranslate" "mistranslates" "mistranslated" "mistranslated" "mistranslating");
lin mistranslation_N = mkN "mistranslation" "mistranslations";
lin mistreat_V2 = mkV2 (mkV "mistreat");
lin mistreatment_N = mkN "mistreatment" ;
lin mistress_N = mkN "mistress" "mistresses";
lin mistrial_N = mkN "mistrial" "mistrials";
lin mistrust_N = mkN "mistrust" ;
lin mistrust_V2 = mkV2 (mkV "mistrust" "mistrusts" "mistrusted" "mistrusted" "mistrusting");
lin mistrustful_A = compoundA (mkA "mistrustful");
lin misty_A = mkA "misty" "mistier";
lin misunderstand_V2 = mkV2 (mkV "mis" IrregEng.understand_V);
lin misunderstanding_N = mkN "misunderstanding" "misunderstandings";
lin misuse_N = mkN "misuse" "misuses";
lin misuse_V2 = mkV2 (mkV "misuse" "misuses" "misused" "misused" "misusing");
lin mite_N = mkN "mite" "mites";
lin miter_N = mkN "miter" ;
lin miterwort_N = mkN "miterwort" ;
lin mithraic_A = mkA "mithraic" ;
lin mithramycin_N = mkN "mithramycin" ;
lin mitigable_A = mkA "mitigable" ;
lin mitigate_V2 = mkV2 (mkV "mitigate" "mitigates" "mitigated" "mitigated" "mitigating");
lin mitigation_N = mkN "mitigation" ;
lin mitochondrion_N = mkN "mitochondrion" ;
lin mitogen_N = mkN "mitogen" ;
lin mitomycin_N = mkN "mitomycin" ;
lin mitosis_N = mkN "mitosis" ;
lin mitotic_A = mkA "mitotic" ;
lin mitral_A = mkA "mitral" ;
lin mitre_N = mkN "mitre" "mitres";
lin mitre_joint_N = mkN "mitre-joint" "mitre-joints";
lin mitt_N = mkN "mitt" "mitts";
lin mittelschmerz_N = mkN "mittelschmerz" ;
lin mitten_N = mkN "mitten" "mittens";
lin mitzvah_N = mkN "mitzvah" ;
lin mix_N = mkN "mix" "mixes";
lin mix_V = mkV "mix" "mixes" "mixed" "mixed" "mixing";
lin mix_V2 = mkV2 (mkV "mix" "mixes" "mixed" "mixed" "mixing");
lin mix_up_N = mkN "mix-up" "mix-ups";
lin mixed_up_A = compoundA (mkA "mixed-up");
lin mixer_N = mkN "mixer" "mixers";
lin mixology_N = mkN "mixology" ;
lin mixture_N = mkN "mixture" "mixtures";
lin mizen_N = mkN "mizen" "mizens";
lin mizzen_N = mkN "mizzen" "mizzens";
lin mizzen_mast_N = mkN "mizzen-mast" "mizzen-masts";
lin mizzenmast_N = mkN "mizzenmast" ;
lin mizzle_V = mkV "mizzle" "mizzles" "mizzled" "mizzled" "mizzling";
lin ml_N = mkN "ml" "ml";
lin mlle_PN = mkPN "Mlle";
lin mm_N = mkN "mm" "mm";
lin mme_PN = mkPN "Mme";
lin mnemonic_A = compoundA (mkA "mnemonic");
lin mnemonic_N = mkN "mnemonic" ;
lin mnemonics_N = mkN "mnemonics" "mnemonics";
lin mnemonist_N = mkN "mnemonist" ;
lin mo_N = mkN "mo" "mi" {- FIXME: guessed plural form -};
lin mo_PN = mkPN "Mo";
lin moa_N = mkN "moa" ;
lin moan_N = mkN "moan" "moans";
lin moan_V = mkV "moan" "moans" "moaned" "moaned" "moaning";
lin moan_V2 = mkV2 (mkV "moan" "moans" "moaned" "moaned" "moaning");
lin moan_VS = mkVS (mkV "moan" "moans" "moaned" "moaned" "moaning");
lin moat_N = mkN "moat" "moats";
lin moated_A = compoundA (mkA "moated");
lin mob_N = mkN "mob" "mobs";
lin mob_V2 = mkV2 (mkV "mob" "mobs" "mobbed" "mobbed" "mobbing");
lin mobbish_A = mkA "mobbish" ;
lin mobcap_N = mkN "mobcap" "mobcaps";
lin mobile_A = compoundA (mkA "mobile");
lin mobile_N = mkN "mobile" "mobiles";
lin mobility_N = mkN "mobility" ;
lin mobilization_N = mkN (variants {"mobilization"; "mobilisation"});
lin mobilize_V = mkV "mobilize" "mobilizes" "mobilized" "mobilized" "mobilizing";
lin mobilize_V2 = mkV2 (mkV "mobilize" "mobilizes" "mobilized" "mobilized" "mobilizing");
lin mobocracy_N = mkN "mobocracy" ;
lin mobster_N = mkN "mobster" "mobsters";
lin moccasin_N = mkN "moccasin" "moccasins";
lin mocha_N = mkN "mocha" ;
lin mock_A = compoundA (mkA "mock");
lin mock_N = mkN "mock" "mocks";
lin mock_V = mkV "mock" "mocks" "mocked" "mocked" "mocking";
lin mock_V2 = mkV2 (mkV "mock" "mocks" "mocked" "mocked" "mocking");
lin mock_up_N = mkN "mock-up" "mock-ups";
lin mocker_N = mkN "mocker" "mockers";
lin mockernut_N = mkN "mockernut" ;
lin mockery_N = mkN "mockery" "mockeries";
lin mockingbird_N = mkN "mockingbird" ;
lin mockingly_Adv = mkAdv "mockingly";
lin mod_A = compoundA (mkA "mod");
lin mod_N = mkN "mod" "mods";
lin mod_cons_N = mkN "mod con" "mod cons" ;
lin modal_A = compoundA (mkA "modal");
lin modality_N = mkN "modality" "modalities";
lin mode_N = mkN "mode" "modes";
lin model_N = mkN "model" "models";
lin model_V = variants {mkV "model" "models" "modeled"  "modeled"  "modeling"; -- US
                        mkV "model" "models" "modelled" "modelled" "modelling"
                       };
lin model_V2 = mkV2 (variants {mkV "model" "models" "modeled"  "modeled"  "modeling"; -- US
                               mkV "model" "models" "modelled" "modelled" "modelling"
                              });
lin modeler_N = mkN "modeler" "modelers";
lin modeling_N = mkN "modeling" ;
lin modeller_N = mkN "modeller" "modellers";
lin modelling_N = mkN "modelling" ;
lin modem_N = mkN "modem" ;
lin modena_PN = mkPN "Modena";
lin moderate_A = compoundA (mkA "moderate");
lin moderate_N = mkN "moderate" "moderates";
lin moderate_V = mkV "moderate" "moderates" "moderated" "moderated" "moderating";
lin moderate_V2 = mkV2 (mkV "moderate" "moderates" "moderated" "moderated" "moderating");
lin moderation_N = mkN "moderation" ;
lin moderationism_N = mkN "moderationism" ;
lin moderationist_N = mkN "moderationist" ;
lin moderato_A = mkA "moderato" ;
lin moderator_N = mkN "moderator" "moderators";
lin moderatorship_N = mkN "moderatorship" ;
lin modern_A = compoundA (mkA "modern");
lin modern_N = mkN "modern" "moderns";
lin moderne_A = mkA "moderne" ;
lin modernism_N = mkN "modernism" ;
lin modernist_N = mkN "modernist" "modernists";
lin modernistic_A = compoundA (mkA "modernistic");
lin modernity_N = mkN "modernity" ;
lin modernization_N = mkN (variants {"modernization"; "modernisation"}) ;
lin modernize_V2 = mkV2 (mkV "modernize" "modernizes" "modernized" "modernized" "modernizing");
lin modest_A = compoundA (mkA "modest");
lin modesty_N = mkN "modesty" ;
lin modicum_N = mkN "modicum" "modica" {- FIXME: guessed plural form -};
lin modifiable_A = mkA "modifiable" ;
lin modification_N = mkN "modification" "modifications";
lin modifier_N = mkN "modifier" "modifiers";
lin modify_V2 = mkV2 (mkV "modify" "modifies" "modified" "modified" "modifying");
lin modillion_N = mkN "modillion" ;
lin modiolus_N = mkN "modiolus" ;
lin modish_A = compoundA (mkA "modish");
lin modiste_N = mkN "modiste" "modistes";
lin mods_N = mkN "mods" ;
lin modular_A = compoundA (mkA "modular");
lin modulate_V = mkV "modulate" "modulates" "modulated" "modulated" "modulating";
lin modulate_V2 = mkV2 (mkV "modulate" "modulates" "modulated" "modulated" "modulating");
lin modulation_N = mkN "modulation" "modulations";
lin module_N = mkN "module" "modules";
lin modulus_N = mkN "modulus" ;
lin modus_operandi_N = mkN "modus operandi" "IRREG";
lin modus_vivendi_N = mkN "modus vivendi" "IRREG";
lin mogul_N = mkN "mogul" "moguls";
lin mohair_N = mkN "mohair" ;
lin mohammedan_N = mkN "mohammedan" "mohammedans";
lin mohawk_N = mkN "mohawk" ;
lin moiety_N = mkN "moiety" "moieties";
lin moil_V = mkV "moil" "moils" "moiled" "moiled" "moiling";
lin moira_PN = mkPN "Moira";
lin moire_A = mkA "moire" ;
lin moire_N = mkN "moire" ;
lin moist_A = compoundA (mkA "moist");
lin moisten_V = mkV "moisten" "moistens" "moistened" "moistened" "moistening";
lin moisten_V2 = mkV2 (mkV "moisten" "moistens" "moistened" "moistened" "moistening");
lin moistening_N = mkN "moistening" ;
lin moisture_N = mkN "moisture" ;
lin mojarra_N = mkN "mojarra" ;
lin mojo_N = mkN "mojo" ;
lin moke_N = mkN "moke" "mokes";
lin moksa_N = mkN "moksa" ;
lin molal_A = mkA "molal" ;
lin molality_N = mkN "molality" ;
lin molar_A = compoundA (mkA "molar");
lin molar_N = mkN "molar" "molars";
lin molarity_N = mkN "molarity" ;
lin molasses_N = mkN "molasses" ;
lin mold_N = mkN "mold" ;
lin mold_PN = mkPN "Mold";
lin mold_V = mkV "mold";
lin mold_V2 = mkV2 "mold";
lin moldboard_N = mkN "moldboard" ;
lin molding_N = mkN "molding" ;
lin moldy_A = mkA "moldy" "moldier";
lin mole_N = mkN "mole" "moles";
lin molecular_A = compoundA (mkA "molecular");
lin molecule_N = mkN "molecule" "molecules";
lin molehill_N = mkN "molehill" "molehills";
lin moleskin_N = mkN "moleskin" "moleskins";
lin molest_V2 = mkV2 (mkV "molest" "molests" "molested" "molested" "molesting");
lin molestation_N = mkN "molestation" ;
lin molester_N = mkN "molester" ;
lin molindone_N = mkN "molindone" ;
lin moll_N = mkN "moll" "molls";
lin mollie_N = mkN "mollie" ;
lin mollification_N = mkN "mollification" ;
lin mollify_V2 = mkV2 (mkV "mollify" "mollifies" "mollified" "mollified" "mollifying");
lin mollusc_N = mkN "mollusc" "molluscs";
lin molluscum_N = mkN "molluscum" ;
lin mollusk_N = mkN "mollusk" ;
lin molly_PN = mkPN "Molly";
lin mollycoddle_N = mkN "mollycoddle" "mollycoddles";
lin mollycoddle_V2 = mkV2 (mkV "mollycoddle" "mollycoddles" "mollycoddled" "mollycoddled" "mollycoddling");
lin moloch_N = mkN "moloch" ;
lin moloch_PN = mkPN "Moloch";
lin molt_N = mkN "molt" ;
lin molten_A = mkA "molten" ;
lin molter_N = mkN "molter" ;
lin molto_Adv = mkAdv "molto";
lin molybdenite_N = mkN "molybdenite" ;
lin molybdenum_N = mkN "molybdenum" ;
lin mombin_N = mkN "mombin" ;
lin moment_N = mkN "moment" "moments";
lin momentary_A = compoundA (mkA "momentary");
lin momentous_A = compoundA (mkA "momentous");
lin momentousness_N = mkN "momentousness" ;
lin momentum_N = mkN "momentum" ;
lin momism_N = mkN "momism" ;
lin mon_PN = mkPN "Mon";
lin monaco_PN = mkPN "Monaco";
lin monad_N = mkN "monad" ;
lin monaghan_PN = mkPN "Monaghan";
lin monal_N = mkN "monal" ;
lin monandrous_A = mkA "monandrous" ;
lin monandry_N = mkN "monandry" ;
lin monarch_N = mkN "monarch" "monarchs";
lin monarchal_A = mkA "monarchal" ;
lin monarchic_A = compoundA (mkA "monarchic");
lin monarchism_N = mkN "monarchism" ;
lin monarchist_N = mkN "monarchist" "monarchists";
lin monarchy_N = mkN "monarchy" "monarchies";
lin monarda_N = mkN "monarda" ;
lin monastery_N = mkN "monastery" "monasteries";
lin monastic_A = compoundA (mkA "monastic");
lin monasticism_N = mkN "monasticism" ;
lin monatomic_A = mkA "monatomic" ;
lin monaural_A = compoundA (mkA "monaural");
lin monazite_N = mkN "monazite" ;
lin monchengladbach_PN = mkPN "Monchengladbach";
lin monday_N = mkN "Monday" "Mondays";
lin monday_PN = mkPN "Monday";
lin monegasque_A = compoundA (mkA "monegasque");
lin monegasque_N = mkN "monegasque" "monegasques";
lin moneran_A = mkA "moneran" ;
lin moneran_N = mkN "moneran" ;
lin monestrous_A = mkA "monestrous" ;
lin monetarism_N = mkN "monetarism" ;
lin monetarist_N = mkN "monetarist" ;
lin monetary_A = compoundA (mkA "monetary");
lin monetization_N = mkN "monetization" ;
lin monetize_V2 = mkV2 (mkV "monetize" "monetizes" "monetized" "monetized" "monetizing");
lin money_N = mkN "money" ;
lin money_grubber_N = mkN "money-grubber" "money-grubbers";
lin money_order_N = mkN "money-order" "money-orders";
lin money_spinner_N = mkN "money-spinner" "money-spinners";
lin moneybag_N = mkN "moneybag" ;
lin moneybox_N = mkN "moneybox" "moneyboxes";
lin moneychanger_N = mkN "moneychanger" "moneychangers";
lin moneyed_A = compoundA (mkA "moneyed");
lin moneygrubber_N = mkN "moneygrubber" ;
lin moneylender_N = mkN "moneylender" "moneylenders";
lin moneyless_A = compoundA (mkA "moneyless");
lin moneymaker_N = mkN "moneymaker" ;
lin moneymaking_N = mkN "moneymaking" ;
lin moneywort_N = mkN "moneywort" ;
lin monger_N = mkN "monger" "mongers";
lin mongo_N = mkN "mongo" ;
lin mongol_A = compoundA (mkA "mongol");
lin mongol_N = mkN "mongol" "mongols";
lin mongolia_PN = mkPN "Mongolia";
lin mongolian_A = compoundA (mkA "mongolian");
lin mongolian_N = mkN "mongolian" "mongolians";
lin mongolism_N = mkN "mongolism" ;
lin mongoloid_A = mkA "mongoloid" ;
lin mongoloid_N = mkN "mongoloid" ;
lin mongoose_N = mkN "mongoose" "mongooses";
lin mongrel_A = compoundA (mkA "mongrel");
lin mongrel_N = mkN "mongrel" "mongrels";
lin monica_PN = mkPN "Monica";
lin monifieth_PN = mkPN "Monifieth";
lin monilia_N = mkN "monilia" ;
lin monism_N = mkN "monism" ;
lin monistic_A = mkA "monistic" ;
lin monition_N = mkN "monition" ;
lin monitor_N = mkN "monitor" "monitors";
lin monitor_V = mkV "monitor" "monitors" "monitored" "monitored" "monitoring";
lin monitor_V2 = mkV2 (mkV "monitor" "monitors" "monitored" "monitored" "monitoring");
lin monitoring_N = mkN "monitoring" ;
lin monk_N = mkN masculine (mkN "monk" "monks");
lin monkey_N = mkN "monkey" "monkeys";
lin monkey_V = mkV "monkey" "monkeys" "monkeyed" "monkeyed" "monkeying";
lin monkey_jacket_N = mkN "monkey-jacket" "monkey-jackets";
lin monkey_nut_N = mkN "monkey-nut" "monkey-nuts";
lin monkey_puzzle_N = mkN "monkey-puzzle" "monkey-puzzles";
lin monkey_wrench_N = mkN "monkey-wrench" "monkey-wrenches";
lin monkfish_N = mkN "monkfish" ;
lin monkish_A = compoundA (mkA "monkish");
lin monkshood_N = mkN "monkshood" ;
lin monmouth_PN = mkPN "Monmouth";
lin mono_A = compoundA (mkA "mono");
lin monoamine_N = mkN "monoamine" ;
lin monoblast_N = mkN "monoblast" ;
lin monocarboxylic_A = mkA "monocarboxylic" ;
lin monocarp_N = mkN "monocarp" ;
lin monocarpic_A = mkA "monocarpic" ;
lin monochromacy_N = mkN "monochromacy" ;
lin monochromat_N = mkN "monochromat" ;
lin monochromatic_A = mkA "monochromatic" ;
lin monochrome_A = compoundA (mkA "monochrome");
lin monochrome_N = mkN "monochrome" "monochromes";
lin monocle_N = mkN "monocle" "monocles";
lin monocled_A = compoundA (mkA "monocled");
lin monoclinal_A = mkA "monoclinal" ;
lin monocline_N = mkN "monocline" ;
lin monoclinic_A = mkA "monoclinic" ;
lin monoclinous_A = mkA "monoclinous" ;
lin monoclonal_A = mkA "monoclonal" ;
lin monocot_N = mkN "monocot" ;
lin monocotyledonous_A = mkA "monocotyledonous" ;
lin monoculture_N = mkN "monoculture" ;
lin monocyte_N = mkN "monocyte" ;
lin monocytosis_N = mkN "monocytosis" ;
lin monodic_A = mkA "monodic" ;
lin monoecious_A = mkA "monoecious" ;
lin monogamist_N = mkN "monogamist" "monogamists";
lin monogamous_A = compoundA (mkA "monogamous");
lin monogamy_N = mkN "monogamy" ;
lin monogenesis_N = mkN "monogenesis" ;
lin monogenic_A = mkA "monogenic" ;
lin monogram_N = mkN "monogram" "monograms";
lin monograph_N = mkN "monograph" "monographs";
lin monogynous_A = mkA "monogynous" ;
lin monogyny_N = mkN "monogyny" ;
lin monohybrid_N = mkN "monohybrid" ;
lin monohydrate_N = mkN "monohydrate" ;
lin monolatry_N = mkN "monolatry" ;
lin monolingual_A = mkA "monolingual" ;
lin monolingual_N = mkN "monolingual" ;
lin monolith_N = mkN "monolith" "monoliths";
lin monolithic_A = compoundA (mkA "monolithic");
lin monologist_N = mkN "monologist" ;
lin monologue_N = mkN "monologue" "monologues";
lin monomania_N = mkN "monomania" "monomanias";
lin monomaniac_N = mkN "monomaniac" "monomaniacs";
lin monomaniacal_A = mkA "monomaniacal" ;
lin monomer_N = mkN "monomer" ;
lin monometallic_A = mkA "monometallic" ;
lin monomorphemic_A = mkA "monomorphemic" ;
lin mononeuropathy_N = mkN "mononeuropathy" ;
lin mononuclear_A = mkA "mononuclear" ;
lin monophonic_A = mkA "monophonic" ;
lin monophony_N = mkN "monophony" ;
lin monoplane_N = mkN "monoplane" "monoplanes";
lin monoplegia_N = mkN "monoplegia" ;
lin monopolist_N = mkN "monopolist" "monopolists";
lin monopolistic_A = compoundA (mkA "monopolistic");
lin monopolization_N = mkN "monopolization" "monopolizations";
lin monopolize_V2 = mkV2 (mkV "monopolize" "monopolizes" "monopolized" "monopolized" "monopolizing");
lin monopoly_N = mkN "monopoly" "monopolies";
lin monopsony_N = mkN "monopsony" ;
lin monopteral_A = mkA "monopteral" ;
lin monorail_N = mkN "monorail" "monorails";
lin monorchism_N = mkN "monorchism" ;
lin monosaccharide_N = mkN "monosaccharide" ;
lin monosemous_A = mkA "monosemous" ;
lin monosemy_N = mkN "monosemy" ;
lin monosomy_N = mkN "monosomy" ;
lin monosyllabic_A = compoundA (mkA "monosyllabic");
lin monosyllabically_Adv = mkAdv "monosyllabically" ;
lin monosyllable_N = mkN "monosyllable" "monosyllables";
lin monotheism_N = mkN "monotheism" ;
lin monotheist_N = mkN "monotheist" "monotheists";
lin monotheistic_A = compoundA (mkA "monotheistic");
lin monotone_N = mkN "monotone" "monotones";
lin monotonic_A = mkA "monotonic" ;
lin monotonous_A = compoundA (mkA "monotonous");
lin monotony_N = mkN "monotony" ;
lin monotreme_N = mkN "monotreme" ;
lin monotype_N = mkN "monotype" "monotypes";
lin monotypic_A = mkA "monotypic" ;
lin monounsaturated_A = mkA "monounsaturated" ;
lin monovalent_A = mkA "monovalent" ;
lin monoxide_N = mkN "monoxide" "monoxides";
lin monozygotic_A = mkA "monozygotic" ;
lin mons_N = mkN "mons" ;
lin monsieur_N = mkN "monsieur" "IRREG";
lin monsignor_N = mkN "monsignor" "monsignors";
lin monsoon_N = mkN "monsoon" "monsoons";
lin monster_N = mkN "monster" "monsters";
lin monstera_N = mkN "monstera" ;
lin monstrance_N = mkN "monstrance" "monstrances";
lin monstrosity_N = mkN "monstrosity" "monstrosities";
lin monstrous_A = compoundA (mkA "monstrous");
lin montage_N = mkN "montage" ;
lin montana_PN = mkPN "Montana";
lin montane_A = mkA "montane" ;
lin monte_N = mkN "monte" ;
lin monterrey_PN = mkPN "Monterrey";
lin montevideo_PN = mkPN "Montevideo";
lin month_N = mkN "month" "months";
lin monthlong_A = mkA "monthlong" ;
lin monthly_A = compoundA (mkA "monthly");
lin monthly_Adv = mkAdv "monthly";
lin monthly_N = mkN "monthly" "monthlies";
lin montreal_PN = mkPN "Montreal";
lin montrose_PN = mkPN "Montrose";
lin montserrat_PN = mkPN "Montserrat";
lin montserratian_A = compoundA (mkA "montserratian");
lin montserratian_N = mkN "montserratian" "montserratians";
lin monument_N = mkN "monument" "monuments";
lin monumental_A = compoundA (mkA "monumental");
lin monza_PN = mkPN "Monza";
lin moo_N = mkN "moo" "moos";
lin moo_V = mkV "moo" "moos" "mooed" "mooed" "mooing";
lin moo_cow_N = mkN "moo-cow" "moo-cows";
lin mooch_V = mkV "mooch" "mooches" "mooched" "mooched" "mooching";
lin moocher_N = mkN "moocher" ;
lin mood_N = mkN "mood" "moods";
lin moodiness_N = mkN "moodiness" ;
lin moody_A = mkA "moody" "moodier";
lin moon_N = mkN "moon" "moons";
lin moon_V = mkV "moon" "moons" "mooned" "mooned" "mooning";
lin moon_V2 = mkV2 (mkV "moon" "moons" "mooned" "mooned" "mooning");
lin moonbeam_N = mkN "moonbeam" "moonbeams";
lin moonfish_N = mkN "moonfish" ;
lin moonflower_N = mkN "moonflower" "moonflowers";
lin moonless_A = compoundA (mkA "moonless");
lin moonlight_N = mkN "moonlight" ;
lin moonlighter_N = mkN "moonlighter" ;
lin moonlike_A = mkA "moonlike" ;
lin moonlit_A = compoundA (mkA "moonlit");
lin moonseed_N = mkN "moonseed" ;
lin moonshine_N = mkN "moonshine" ;
lin moonstone_N = mkN "moonstone" "moonstones";
lin moonstruck_A = compoundA (mkA "moonstruck");
lin moonwalk_N = mkN "moonwalk" ;
lin moonwort_N = mkN "moonwort" ;
lin moony_A = mkA "moony" "moonier";
lin moor_N = mkN "moor" "moors";
lin moor_V2 = mkV2 (mkV "moor" "moors" "moored" "moored" "mooring");
lin moorage_N = mkN "moorage" ;
lin moorcock_N = mkN "moorcock" "moorcocks";
lin moorfowl_N = mkN "moorfowl" "moorfowls";
lin moorgame_N = mkN "moorgame" "moorgame";
lin moorhen_N = mkN "moorhen" "moorhens";
lin mooring_N = mkN "mooring" ;
lin mooring_mast_N = mkN "mooring-mast" "mooring-masts";
lin moorish_A = compoundA (mkA "moorish");
lin moorland_N = mkN "moorland" "moorlands";
lin moose_N = mkN "moose" "moose";
lin moosewood_N = mkN "moosewood" ;
lin moot_A = compoundA (mkA "moot");
lin moot_N = mkN "moot" ;
lin moot_V2 = mkV2 (mkV "moot" "moots" "mooted" "mooted" "mooting");
lin mop_N = mkN "mop" "mops";
lin mop_V = mkV "mop" "mops" "mopped" "mopped" "mopping";
lin mop_V2 = mkV2 (mkV "mop" "mops" "mopped" "mopped" "mopping");
lin mope_N = mkN "mope" "mopes";
lin mope_V = mkV "mope" "mopes" "moped" "moped" "moping";
lin moped_N = mkN "moped" "mopeds";
lin mopper_N = mkN "mopper" ;
lin moppet_N = mkN "moppet" ;
lin moquette_N = mkN "moquette" ;
lin moraceous_A = mkA "moraceous" ;
lin moraine_N = mkN "moraine" "moraines";
lin moral_A = compoundA (mkA "moral");
lin moral_N = mkN "moral" "morals";
lin morale_N = mkN "morale" ;
lin moralism_N = mkN "moralism" ;
lin moralist_N = mkN "moralist" "moralists";
lin moralistic_A = compoundA (mkA "moralistic");
lin morality_N = mkN "morality" "moralities";
lin moralization_N = mkN "moralization" ;
lin moralize_V = mkV "moralize" "moralizes" "moralized" "moralized" "moralizing";
lin moralize_V2 = mkV2 (mkV "moralize" "moralizes" "moralized" "moralized" "moralizing");
lin moralizing_N = mkN "moralizing" ;
lin morass_N = mkN "morass" "morasses";
lin moratorium_N = mkN "moratorium" "moratoriums";
lin moray_N = mkN "moray" ;
lin morbid_A = compoundA (mkA "morbid");
lin morbidity_N = mkN "morbidity" "morbidities";
lin morbidness_N = mkN "morbidness" ;
lin morbilliform_A = mkA "morbilliform" ;
lin morceau_N = mkN "morceau" ;
lin mordacious_A = mkA "mordacious" ;
lin mordacity_N = mkN "mordacity" ;
lin mordant_A = compoundA (mkA "mordant");
lin mordant_N = mkN "mordant" ;
lin morePl_Det = mkDeterminer plural "more";
lin moreSg_Det = mkDeterminer singular "more";
lin more_Adv = mkAdv "more";
lin more_N = mkN "more" ;
lin more_than_AdN = mkAdN "more than";
lin more_than_Predet = ss "more than";
lin morecambe_PN = mkPN "Morecambe";
lin moreen_N = mkN "moreen" ;
lin morel_N = mkN "morel" ;
lin morello_N = mkN "morello" "morellos";
lin moreover_Adv = mkAdv "moreover";
lin mores_N = mkN "mores" ;
lin moresque_A = compoundA (mkA "moresque");
lin morganatic_A = compoundA (mkA "morganatic");
lin morganite_N = mkN "morganite" ;
lin morgen_N = mkN "morgen" ;
lin morgue_N = mkN "morgue" "morgues";
lin moribund_A = compoundA (mkA "moribund");
lin morion_N = mkN "morion" ;
lin morley_PN = mkPN "Morley";
lin mormon_A = compoundA (mkA "Mormon");
lin mormon_N = mkN "Mormon" "Mormons";
lin mormonism_N = mkN "Mormonism" ;
lin morn_N = mkN "morn" "morns";
lin morning_N = mkN "morning" "mornings";
lin morning_glory_N = mkN "morning-glory" "morning-glories";
lin morning_room_N = mkN "morning-room" "morning-rooms";
lin moroccan_A = compoundA (mkA "moroccan");
lin moroccan_N = mkN "moroccan" "moroccans";
lin morocco_N = mkN "morocco" ;
lin morocco_PN = mkPN "Morocco";
lin moron_N = mkN "moron" "morons";
lin moronic_A = compoundA (mkA "moronic");
lin moronity_N = mkN "moronity" ;
lin morose_A = compoundA (mkA "morose");
lin moroseness_N = mkN "moroseness" ;
lin morosoph_N = mkN "morosoph" ;
lin morpeth_PN = mkPN "Morpeth";
lin morphallaxis_N = mkN "morphallaxis" ;
lin morphea_N = mkN "morphea" ;
lin morpheme_N = mkN "morpheme" "morphemes";
lin morphemic_A = compoundA (mkA "morphemic");
lin morpheus_PN = mkPN "Morpheus";
lin morphia_N = mkN "morphia" ;
lin morphine_N = mkN "morphine" ;
lin morphogenesis_N = mkN "morphogenesis" ;
lin morphologic_A = mkA "morphologic" ;
lin morphological_A = compoundA (mkA "morphological");
lin morphology_N = mkN "morphology" ;
lin morphophoneme_N = mkN "morphophoneme" ;
lin morphophonemic_A = mkA "morphophonemic" ;
lin morphophonemics_N = mkN "morphophonemics" ;
lin morris_dance_N = mkN "morris dance" "morris dances";
lin morrow_N = mkN "morrow" "morrows";
lin morse_N = mkN "morse" ;
lin morsel_N = mkN "morsel" "morsels";
lin mortal_A = compoundA (mkA "mortal");
lin mortal_N = mkN "mortal" "mortals";
lin mortality_N = mkN "mortality" ;
lin mortar_N = mkN "mortar" "mortars";
lin mortar_V2 = mkV2 (mkV "mortar" "mortars" "mortared" "mortared" "mortaring");
lin mortarboard_N = mkN "mortarboard" "mortarboards";
lin mortgage_N = mkN "mortgage" "mortgages";
lin mortgage_V2 = mkV2 (mkV "mortgage" "mortgages" "mortgaged" "mortgaged" "mortgaging");
lin mortgagee_N = mkN "mortgagee" "mortgagees";
lin mortgagor_N = mkN "mortgagor" "mortgagors";
lin mortice_N = mkN "mortice" "mortices";
lin mortice_V2 = mkV2 (mkV "mortice" "mortices" "morticed" "morticed" "morticing");
lin mortician_N = mkN "mortician" "morticians";
lin mortification_N = mkN "mortification" ;
lin mortify_V = mkV "mortify" "mortifies" "mortified" "mortified" "mortifying";
lin mortify_V2 = mkV2 (mkV "mortify" "mortifies" "mortified" "mortified" "mortifying");
lin mortise_N = mkN "mortise" "mortises";
lin mortise_V2 = mkV2 (mkV "mortise" "mortises" "mortised" "mortised" "mortising");
lin mortmain_N = mkN "mortmain" ;
lin mortuary_A = mkA "mortuary" ;
lin mortuary_N = mkN "mortuary" "mortuaries";
lin morula_N = mkN "morula" ;
lin mosaic_A = compoundA (mkA "mosaic");
lin mosaic_N = mkN "mosaic" "mosaics";
lin mosaicism_N = mkN "mosaicism" ;
lin moscow_PN = mkPN "Moscow";
lin moselle_N = mkN "moselle" "moselles";
lin mosey_V = mkV "mosey" "moseys" "moseyed" "moseyed" "moseying";
lin moshav_N = mkN "moshav" ;
lin moslem_A = compoundA (mkA "moslem");
lin moslem_N = mkN "moslem" "moslems";
lin mosque_N = mkN "mosque" "mosques";
lin mosquito_N = mkN "mosquito" "mosquitoes";
lin mosquito_craft_N = mkN "mosquito-craft" "mosquito-craft";
lin mosquito_net_N = mkN "mosquito-net" "mosquito-nets";
lin mosquitofish_N = mkN "mosquitofish" ;
lin moss_N = mkN "moss" "mosses";
lin moss_grown_A = compoundA (mkA "moss-grown");
lin mossback_N = mkN "mossback" ;
lin mossley_PN = mkPN "Mossley";
lin mossy_A = mkA "mossy" "mossier";
lin most_Adv = mkAdv "most" ;
lin most_Det = mkDeterminer plural "most";
lin mostaccioli_N = mkN "mostaccioli" ;
lin mostly_Adv = mkAdv "mostly";
lin mote_N = mkN "mote" "motes";
lin motel_N = mkN "motel" "motels";
lin motet_N = mkN "motet" ;
lin moth_N = mkN "moth" "moths";
lin moth_eaten_A = compoundA (mkA "moth-eaten");
lin mothball_N = mkN "mothball" "mothballs";
lin mother_N = mkN "mother" "mothers";
lin mother_V2 = mkV2 (mkV "mother" "mothers" "mothered" "mothered" "mothering");
lin mother_in_law_N = mkN "mother-in-law" "mothers-in-law";
lin mother_of_pearl_N = mkN "mother-of-pearl" ;
lin motherhood_N = mkN "motherhood" ;
lin motherland_N = mkN "motherland" "motherlands";
lin motherless_A = compoundA (mkA "motherless");
lin motherlike_A = compoundA (mkA "motherlike");
lin motherliness_N = mkN "motherliness" ;
lin motherly_A = compoundA (mkA "motherly");
lin motherwell_PN = mkPN "Motherwell";
lin motherwort_N = mkN "motherwort" ;
lin mothproof_A = compoundA (mkA "mothproof");
lin mothproof_V2 = mkV2 (mkV "mothproof" "mothproofs" "mothproofed" "mothproofed" "mothproofing");
lin mothy_A = mkA "mothy" ;
lin motif_N = mkN "motif" "motifs";
lin motile_A = mkA "motile" ;
lin motile_N = mkN "motile" ;
lin motilin_N = mkN "motilin" ;
lin motility_N = mkN "motility" ;
lin motion_N = mkN "motion" "motions";
lin motion_V = mkV "motion" "motions" "motioned" "motioned" "motioning";
lin motion_V2 = mkV2 (mkV "motion" "motions" "motioned" "motioned" "motioning");
lin motional_A = mkA "motional" ;
lin motionless_A = compoundA (mkA "motionless");
lin motionlessness_N = mkN "motionlessness" ;
lin motivate_V2 = mkV2 (mkV "motivate" "motivates" "motivated" "motivated" "motivating");
lin motivate_V2V = mkV2V (mkV "motivate") noPrep to_Prep ;
lin motivation_N = mkN "motivation" "motivations";
lin motivational_A = mkA "motivational" ;
lin motive_A = compoundA (mkA "motive");
lin motive_N = mkN "motive" "motives";
lin motiveless_A = compoundA (mkA "motiveless");
lin motley_A = compoundA (mkA "motley");
lin motley_N = mkN "motley" ;
lin motmot_N = mkN "motmot" ;
lin motor_N = mkN "motor" "motors";
lin motor_V = mkV "motor" "motors" "motored" "motored" "motoring";
lin motor_assisted_A = compoundA (mkA "motor-assisted");
lin motorbike_N = mkN "motorbike" "motorbikes";
lin motorboat_N = mkN "motorboat" "motorboats";
lin motorcade_N = mkN "motorcade" "motorcades";
lin motorcar_N = mkN "motorcar" "motorcars";
lin motorcoach_N = mkN "motorcoach" "motorcoaches";
lin motorcycle_N = mkN "motorcycle" "motorcycles";
lin motorcycling_N = mkN "motorcycling" ;
lin motorcyclist_N = mkN "motorcyclist" ;
lin motoring_N = mkN "motoring" ;
lin motorist_N = mkN "motorist" "motorists";
lin motorization_N = mkN "motorization" ;
lin motorize_V2 = mkV2 (mkV "motorize" "motorizes" "motorized" "motorized" "motorizing");
lin motorman_N = mkN masculine (mkN "motorman" "motormen");
lin motormouth_N = mkN "motormouth" ;
lin motorway_N = mkN "motorway" "motorways";
lin mottle_N = mkN "mottle" ;
lin mottle_V2 = mkV2 (mkV "mottle" "mottles" "mottled" "mottled" "mottling");
lin mottling_N = mkN "mottling" ;
lin motto_N = mkN "motto" "mottos";
lin mouflon_N = mkN "mouflon" ;
lin moujik_N = mkN "moujik" "moujiks";
lin mould_N = mkN "mould" "moulds";
lin mould_V = mkV "mould" "moulds" "moulded" "moulded" "moulding";
lin mould_V2 = mkV2 (mkV "mould" "moulds" "moulded" "moulded" "moulding");
lin moulder_V = mkV "moulder" "moulders" "mouldered" "mouldered" "mouldering";
lin moulding_N = mkN "moulding" "mouldings";
lin mouldy_A = mkA "mouldy" "mouldier";
lin moult_N = mkN "moult" "moults";
lin moult_V = mkV "moult" "moults" "moulted" "moulted" "moulting";
lin moult_V2 = mkV2 (mkV "moult" "moults" "moulted" "moulted" "moulting");
lin mound_N = mkN "mound" "mounds";
lin mount_N = mkN "mount" "mounts";
lin mount_V = mkV "mount" "mounts" "mounted" "mounted" "mounting";
lin mount_V2 = mkV2 (mkV "mount" "mounts" "mounted" "mounted" "mounting");
lin mount_VS = mkVS (mkV "mount" "mounts" "mounted" "mounted" "mounting");
lin mountain_N = mkN "mountain" "mountains";
lin mountain_ash_PN = mkPN "Mountain ash";
lin mountaineer_N = mkN "mountaineer" "mountaineers";
lin mountaineering_N = mkN "mountaineering" ;
lin mountainous_A = compoundA (mkA "mountainous");
lin mountainside_N = mkN "mountainside" ;
lin mountebank_N = mkN "mountebank" "mountebanks";
lin mounter_N = mkN "mounter" ;
lin mountie_N = mkN "mountie" "mounties";
lin mounting_N = mkN "mounting" ;
lin mourn_V = mkV "mourn" "mourns" "mourned" "mourned" "mourning";
lin mourn_V2 = mkV2 (mkV "mourn" "mourns" "mourned" "mourned" "mourning");
lin mourner_N = mkN "mourner" "mourners";
lin mournful_A = compoundA (mkA "mournful");
lin mournfulness_N = mkN "mournfulness" ;
lin mourning_N = mkN "mourning" ;
lin mourning_band_N = mkN "mourning-band" "mourning-bands";
lin mourning_ring_N = mkN "mourning-ring" "mourning-rings";
lin mouse_N = mkN "mouse" "mice";
lin mouse_V = mkV "mouse" "mouses" "moused" "moused" "mousing";
lin mousepad_N = mkN "mousepad" ;
lin mouser_N = mkN "mouser" "mousers";
lin mousetrap_N = mkN "mousetrap" "mousetraps";
lin moussaka_N = mkN "moussaka" ;
lin mousse_N = mkN "mousse" "mousses";
lin moustache_N = mkN "moustache" "moustaches";
lin mousy_A = mkA "mousy" "mousier";
lin mouth_N = mkN "mouth" "mouths";
lin mouth_V = mkV "mouth" "mouths" "mouthed" "mouthed" "mouthing";
lin mouth_V2 = mkV2 (mkV "mouth" "mouths" "mouthed" "mouthed" "mouthing");
lin mouth_organ_N = mkN "mouth-organ" "mouth-organs";
lin mouth_watering_A = compoundA (mkA "mouth-watering");
lin mouthbreeder_N = mkN "mouthbreeder" ;
lin mouthful_N = mkN "mouthful" "mouthfuls";
lin mouthlike_A = mkA "mouthlike" ;
lin mouthpart_N = mkN "mouthpart" ;
lin mouthpiece_N = mkN "mouthpiece" "mouthpieces";
lin mouton_N = mkN "mouton" ;
lin movability_N = mkN "movability" ;
lin movable_A = compoundA (mkA "movable");
lin move_N = mkN "move" "moves";
lin move_V = mkV "move" "moves" "moved" "moved" "moving";
lin move_V2 = mkV2 (mkV "move" "moves" "moved" "moved" "moving");
lin move_V2A = mkV2A (mkV "move" "moves" "moved" "moved" "moving") noPrep;
lin move_V2V = mkV2V (mkV "move" "moves" "moved" "moved" "moving") noPrep to_Prep;
lin move_VV = mkVV (mkV "move" "moves" "moved" "moved" "moving") ;
lin movement_N = mkN "movement" "movements";
lin mover_N = mkN "mover" "movers";
lin movie_N = mkN "movie" "movies";
lin moviegoer_N = mkN "moviegoer" ;
lin moviemaking_N = mkN "moviemaking" ;
lin movingly_Adv = mkAdv "movingly" ;
lin mow_N = mkN "mow" "mows";
lin mow_V = mkV "mow" "mows" "mowed" "mowed" "mowing";
lin mow_V2 = mkV2 (mkV "mow" "mows" "mowed" "mowed" "mowing");
lin mower_N = mkN "mower" "mowers";
lin mown_A = mkA "mown" ;
lin mozambican_A = compoundA (mkA "mozambican");
lin mozambican_N = mkN "mozambican" "mozambicans";
lin mozambique_PN = mkPN "Mozambique";
lin mozzarella_N = mkN "mozzarella" ;
lin mp_N = mkN "mp" "mp's" ;
lin mpg_N = mkN "mpg" "mpg";
lin mph_N = mkN "mph" "mph";
lin mr_PN = mkPN "Mr";
lin mrs_PN = mkPN "Mrs";
lin ms_N = mkN "ms" ;
lin ms_PN = mkPN "Ms";
lin msasa_N = mkN "msasa" ;
lin msc_N = mkN "msc" ;
lin mt_PN = mkPN "Mt";
lin mu_N = mkN "mu" ;
lin much_AdA = mkAdA "much";
lin much_Adv = mkAdv "much" ;
lin much_Det = mkDeterminer singular "much";
lin much_N = mkN "much" "IRREG";
lin muchness_N = mkN "muchness" ;
lin muciferous_A = mkA "muciferous" ;
lin mucilage_N = mkN "mucilage" ;
lin mucin_N = mkN "mucin" ;
lin mucinoid_A = mkA "mucinoid" ;
lin mucinous_A = mkA "mucinous" ;
lin muck_N = mkN "muck" ;
lin muck_V = mkV "muck" "mucks" "mucked" "mucked" "mucking";
lin muck_V2 = mkV2 (mkV "muck" "mucks" "mucked" "mucked" "mucking");
lin muck_heap_N = mkN "muck-heap" "muck-heaps";
lin muckle_N = mkN "muckle" "IRREG";
lin muckraker_N = mkN "muckraker" "muckrakers";
lin muckraking_N = mkN "muckraking" ;
lin mucky_A = mkA "mucky" "muckier";
lin mucocutaneous_A = mkA "mucocutaneous" ;
lin mucoid_A = mkA "mucoid" ;
lin mucoid_N = mkN "mucoid" ;
lin mucopolysaccharide_N = mkN "mucopolysaccharide" ;
lin mucopolysaccharidosis_N = mkN "mucopolysaccharidosis" ;
lin mucopurulent_A = mkA "mucopurulent" ;
lin mucor_N = mkN "mucor" ;
lin mucosal_A = mkA "mucosal" ;
lin mucous_A = compoundA (mkA "mucous");
lin mucuna_N = mkN "mucuna" ;
lin mucus_N = mkN "mucus" ;
lin mud_N = mkN "mud" ;
lin mud_V2 = mkV2 (mkV "mud" "muds" "mudded" "mudded" "mudding");
lin mud_bath_N = mkN "mud-bath" "mud-baths";
lin mudder_N = mkN "mudder" ;
lin muddle_N = mkN "muddle" "muddles";
lin muddle_V = mkV "muddle" "muddles" "muddled" "muddled" "muddling";
lin muddle_V2 = mkV2 (mkV "muddle" "muddles" "muddled" "muddled" "muddling");
lin muddle_headed_A = compoundA (mkA "muddle-headed");
lin muddy_A = mkA "muddy" "muddier";
lin muddy_V2 = mkV2 (mkV "muddy" "muddies" "muddied" "muddied" "muddying");
lin mudguard_N = mkN "mudguard" "mudguards";
lin mudhif_N = mkN "mudhif" ;
lin mudra_N = mkN "mudra" ;
lin mudskipper_N = mkN "mudskipper" ;
lin mudslide_N = mkN "mudslide" ;
lin mudslinger_N = mkN "mudslinger" "mudslingers";
lin muesli_N = mkN "muesli" ;
lin muezzin_N = mkN "muezzin" "muezzins";
lin muff_N = mkN "muff" "muffs";
lin muff_V2 = mkV2 (mkV "muff" "muffs" "muffed" "muffed" "muffing");
lin muffin_N = mkN "muffin" "muffins";
lin muffin_man_N = mkN masculine (mkN "muffin-man" "muffin-men");
lin muffle_N = mkN "muffle" ;
lin muffle_V2 = mkV2 (mkV "muffle" "muffles" "muffled" "muffled" "muffling");
lin muffler_N = mkN "muffler" "mufflers";
lin mufti_N = mkN "mufti" ;
lin mug_N = mkN "mug" "mugs";
lin mug_V2 = mkV2 (mkV "mug" "mugs" "mugged" "mugged" "mugging");
lin muggee_N = mkN "muggee" ;
lin mugger_N = mkN "mugger" "muggers";
lin mugginess_N = mkN "mugginess" ;
lin mugging_N = mkN "mugging" "muggings";
lin muggins_N = mkN "muggins" "mugginses";
lin muggy_A = mkA "muggy" "muggier";
lin mugwort_N = mkN "mugwort" ;
lin mugwump_N = mkN "mugwump" "mugwumps";
lin muhammad_PN = mkPN "Muhammad";
lin muhammadan_A = compoundA (mkA "muhammadan");
lin muhammadan_N = mkN "muhammadan" "muhammadans";
lin muhammadanism_N = mkN "muhammadanism" ;
lin muishond_N = mkN "muishond" ;
lin mujahid_N = mkN "mujahid" ;
lin mujahidin_N = mkN "mujahidin" ;
lin mujtihad_N = mkN "mujtihad" ;
lin mukataa_N = mkN "mukataa" ;
lin mukden_PN = mkPN "Mukden";
lin mulatto_N = mkN "mulatto" "mulattos";
lin mulberry_N = mkN "mulberry" "mulberries";
lin mulch_N = mkN "mulch" "mulches";
lin mulch_V2 = mkV2 (mkV "mulch" "mulches" "mulched" "mulched" "mulching");
lin mulct_V2 = mkV2 (mkV "mulct" "mulcts" "mulcted" "mulcted" "mulcting");
lin mule_N = mkN "mule" "mules";
lin muleteer_N = mkN "muleteer" "muleteers";
lin mulheim_PN = mkPN "Mulheim";
lin mulhouse_PN = mkPN "Mulhouse";
lin mulish_A = compoundA (mkA "mulish");
lin mulishness_N = mkN "mulishness" ;
lin mull_N = mkN "mull" "mulls";
lin mull_V2 = mkV2 (mkV "mull" "mulls" "mulled" "mulled" "mulling");
lin mullah_N = mkN "mullah" "mullahs";
lin mullein_N = mkN "mullein" "mulleins";
lin muller_N = mkN "muller" ;
lin mullet_N = mkN "mullet" "mullets";
lin mulligatawny_N = mkN "mulligatawny" ;
lin mullion_N = mkN "mullion" "mullions";
lin mullioned_A = compoundA (mkA "mullioned");
lin mulloway_N = mkN "mulloway" ;
lin multan_PN = mkPN "Multan";
lin multi_ethnicity_N = mkN "multi-ethnicity";
lin multi_lingual_A = compoundA (mkA "multi-lingual");
lin multicellular_A = mkA "multicellular" ;
lin multicollinearity_N = mkN "multicollinearity" ;
lin multicultural_A = mkA "multicultural" ;
lin multiculturalism_N = mkN "multiculturalism" ;
lin multidimensional_A = mkA "multidimensional" ;
lin multiethnic_A = mkA "multiethnic" ;
lin multifactorial_A = mkA "multifactorial" ;
lin multifarious_A = compoundA (mkA "multifarious");
lin multiflora_N = mkN "multiflora" ;
lin multiform_A = compoundA (mkA "multiform");
lin multilane_A = mkA "multilane" ;
lin multilateral_A = compoundA (mkA "multilateral");
lin multilevel_A = mkA "multilevel" ;
lin multilingual_A = mkA "multilingual" ;
lin multimedia_N = mkN "multimedia" ;
lin multinational_A = mkA "multinational" ;
lin multinucleate_A = mkA "multinucleate" ;
lin multiparous_A = mkA "multiparous" ;
lin multipartite_A = mkA "multipartite" ;
lin multiphase_A = mkA "multiphase" ;
lin multiple_A = compoundA (mkA "multiple");
lin multiple_N = mkN "multiple" "multiples";
lin multiplex_A = compoundA (mkA "multiplex");
lin multiplex_N = mkN "multiplex" ;
lin multiplexer_N = mkN "multiplexer" ;
lin multiplicand_N = mkN "multiplicand" ;
lin multiplication_N = mkN "multiplication" "multiplications";
lin multiplicative_A = mkA "multiplicative" ;
lin multiplicity_N = mkN "multiplicity" ;
lin multiplier_N = mkN "multiplier" ;
lin multiply_Adv = mkAdv "multiply" ;
lin multiply_V = mkV "multiply" "multiplies" "multiplied" "multiplied" "multiplying";
lin multiply_V2 = mkV2 (mkV "multiply" "multiplies" "multiplied" "multiplied" "multiplying");
lin multipotent_A = mkA "multipotent" ;
lin multiprocessing_N = mkN "multiprocessing" ;
lin multiprocessor_N = mkN "multiprocessor" ;
lin multiprogramming_N = mkN "multiprogramming" ;
lin multipurpose_A = mkA "multipurpose" ;
lin multiracial_A = mkA "multiracial" ;
lin multistage_N = mkN "multistage" ;
lin multistory_A = mkA "multistory" ;
lin multitude_N = mkN "multitude" "multitudes";
lin multitudinous_A = compoundA (mkA "multitudinous");
lin multitudinousness_N = mkN "multitudinousness" ;
lin multivalent_A = mkA "multivalent" ;
lin multivariate_A = mkA "multivariate" ;
lin multiversity_N = mkN "multiversity" ;
lin multivitamin_N = mkN "multivitamin" ;
lin multum_in_parvo_N = mkN "multum in parvo" ;
lin mum_A = compoundA (mkA "mum");
lin mum_N = mkN "mum" "mums";
lin mumble_N = mkN "mumble" ;
lin mumble_V = mkV "mumble" "mumbles" "mumbled" "mumbled" "mumbling";
lin mumble_V2 = mkV2 (mkV "mumble" "mumbles" "mumbled" "mumbled" "mumbling");
lin mumbling_N = mkN "mumbling" ;
lin mumbo_jumbo_N = mkN "mumbo-jumbo" ;
lin mummer_N = mkN "mummer" "mummers";
lin mummery_N = mkN "mummery" "mummeries";
lin mummichog_N = mkN "mummichog" ;
lin mummification_N = mkN "mummification" "mummifications";
lin mummify_V2 = mkV2 (mkV "mummify" "mummifies" "mummified" "mummified" "mummifying");
lin mummy_N = mkN "mummy" "mummies";
lin mumps_N = mkN "mumps" "mumps";
lin mumpsimus_N = mkN "mumpsimus" ;
lin munch_N = mkN "munch" ;
lin munch_V = mkV "munch" "munches" "munched" "munched" "munching";
lin munch_V2 = mkV2 (mkV "munch" "munches" "munched" "munched" "munching");
lin muncher_N = mkN "muncher" ;
lin mundane_A = compoundA (mkA "mundane");
lin mung_N = mkN "mung" ;
lin munich_PN = mkPN "Munich";
lin municipal_A = compoundA (mkA "municipal");
lin municipality_N = mkN "municipality" "municipalities";
lin munificence_N = mkN "munificence" ;
lin munificent_A = compoundA (mkA "munificent");
lin muniments_N = mkN "muniments" ;
lin munition_N = mkN "munition" "munitions";
lin munition_V2 = mkV2 (mkV "munition" "munitions" "munitioned" "munitioned" "munitioning");
lin munj_N = mkN "munj" ;
lin munster_PN = mkPN "Munster";
lin muntjac_N = mkN "muntjac" ;
lin muon_N = mkN "muon" ;
lin mural_A = compoundA (mkA "mural");
lin mural_N = mkN "mural" "murals";
lin muralist_N = mkN "muralist" ;
lin murder_N = mkN "murder" "murders";
lin murder_V2 = mkV2 (mkV "murder" "murders" "murdered" "murdered" "murdering");
lin murderee_N = mkN "murderee" ;
lin murderer_N = mkN masculine (mkN "murderer" "murderers");
lin murderess_N = mkN feminine (mkN "murderess" "murderesses");
lin murderous_A = compoundA (mkA "murderous");
lin murderousness_N = mkN "murderousness" ;
lin muriel_PN = mkPN "Muriel";
lin murine_A = mkA "murine" ;
lin murine_N = mkN "murine" ;
lin murk_N = mkN "murk" ;
lin murky_A = mkA "murky" "murkier";
lin murmur_N = mkN "murmur" "murmurs";
lin murmur_V = mkV "murmur" "murmurs" "murmured" "murmured" "murmuring";
lin murmur_V2 = mkV2 (mkV "murmur" "murmurs" "murmured" "murmured" "murmuring");
lin murmurous_A = mkA "murmurous" ;
lin murphy_N = mkN "murphy" "murphies";
lin murrain_N = mkN "murrain" ;
lin murre_N = mkN "murre" ;
lin murton_PN = mkPN "Murton";
lin muscadine_N = mkN "muscadine" ;
lin muscat_N = mkN "muscat" ;
lin muscatel_N = mkN "muscatel" ;
lin muscle_N = mkN "muscle" "muscles";
lin muscle_V = mkV "muscle" "muscles" "muscled" "muscled" "muscling";
lin muscle_V2 = mkV2 (mkV "muscle" "muscles" "muscled" "muscled" "muscling");
lin muscle_bound_A = compoundA (mkA "muscle-bound");
lin muscleman_N = mkN masculine (mkN "muscleman" "musclemen");
lin muscovite_A = compoundA (mkA "muscovite");
lin muscovite_N = mkN "muscovite" "muscovites";
lin muscovy_N = mkN "muscovy" "muscovies";
lin muscular_A = compoundA (mkA "muscular");
lin muscularity_N = mkN "muscularity" ;
lin musculoskeletal_A = mkA "musculoskeletal" ;
lin muse_N = mkN "muse" "muses";
lin muse_V = mkV "muse" "muses" "mused" "mused" "musing";
lin muse_VS = mkVS (mkV "muse" "muses" "mused" "mused" "musing");
lin muser_N = mkN "muser" ;
lin musette_N = mkN "musette" ;
lin museum_N = mkN "museum" "museums";
lin mush_N = mkN "mush" ;
lin musher_N = mkN "musher" ;
lin mushiness_N = mkN "mushiness" ;
lin mushroom_N = mkN "mushroom" "mushrooms";
lin mushroom_V = mkV "mushroom" "mushrooms" "mushroomed" "mushroomed" "mushrooming";
lin mushy_A = mkA "mushy" "mushier";
lin music_N = mkN "music" ;
lin music_box_N = mkN "music-box" "music-boxes";
lin music_hall_N = mkN "music-hall" "music-halls";
lin music_stand_N = mkN "music-stand" "music-stands";
lin music_stool_N = mkN "music-stool" "music-stools";
lin musical_A = compoundA (mkA "musical");
lin musical_N = mkN "musical" "musicals";
lin musical_box_N = mkN "musical-box" "musical-boxes";
lin musicality_N = mkN "musicality" ;
lin musicianMasc_N = mkN masculine (mkN "musician" "musicians");
lin musicianFem_N = mkN feminine (mkN "musician" "musicians");
lin musicianship_N = mkN "musicianship" ;
lin musicological_A = mkA "musicological" ;
lin musicologist_N = mkN "musicologist" ;
lin musicology_N = mkN "musicology" ;
lin musingly_Adv = mkAdv "musingly";
lin musk_N = mkN "musk" ;
lin musk_deer_N = mkN "musk-deer" "musk-deer";
lin musk_rose_N = mkN "musk-rose" "musk-roses";
lin muskellunge_N = mkN "muskellunge" ;
lin musket_N = mkN "musket" "muskets";
lin musketeer_N = mkN "musketeer" "musketeers";
lin musketry_N = mkN "musketry" ;
lin muskiness_N = mkN "muskiness" ;
lin muskmelon_N = mkN "muskmelon" ;
lin muskrat_N = mkN "muskrat" "muskrats";
lin muskwood_N = mkN "muskwood" ;
lin musky_A = mkA "musky" "muskier";
lin muslim_N = mkN "Muslim" "Muslims";
lin muslin_N = mkN "muslin" ;
lin musnud_N = mkN "musnud" ;
lin musophobia_N = mkN "musophobia" ;
lin musquash_N = mkN "musquash" ;
lin muss_N = mkN "muss" "musses";
lin muss_V2 = mkV2 (mkV "muss" "musses" "mussed" "mussed" "mussing");
lin mussel_N = mkN "mussel" "mussels";
lin musselburgh_PN = mkPN "Musselburgh";
lin must_N = mkN "must" "musts";
lin must_VV = {
    s = table {
      VVF VInf => ["have to"] ;
      VVF VPres => "must" ;
      VVF VPPart => ["had to"] ;
      VVF VPresPart => ["having to"] ;
      VVF VPast => ["had to"] ;      --# notpresent
      VVPastNeg => ["hadn't to"] ;      --# notpresent
      VVPresNeg => "mustn't"
      } ;
    p = [] ;
    typ = VVAux
    } ;
lin mustache_N = mkN "mustache" ;
lin mustachio_N = mkN "mustachio" "mustachios";
lin mustachioed_A = mkA "mustachioed" ;
lin mustang_N = mkN "mustang" "mustangs";
lin mustard_N = mkN "mustard" ;
lin muster_N = mkN "muster" "musters";
lin muster_V = mkV "muster" "musters" "mustered" "mustered" "mustering";
lin muster_V2 = mkV2 (mkV "muster" "musters" "mustered" "mustered" "mustering");
lin musth_N = mkN "musth" ;
lin mustiness_N = mkN "mustiness" ;
lin musty_A = mkA "musty" "mustier";
lin mutability_N = mkN "mutability" ;
lin mutable_A = compoundA (mkA "mutable");
lin mutafacient_A = mkA "mutafacient" ;
lin mutagen_N = mkN "mutagen" ;
lin mutagenesis_N = mkN "mutagenesis" ;
lin mutagenic_A = mkA "mutagenic" ;
lin mutant_A = mkA "mutant" ;
lin mutant_N = mkN "mutant" ;
lin mutation_N = mkN "mutation" "mutations";
lin mutational_A = mkA "mutational" ;
lin mutatis_mutandis_Adv = mkAdv "mutatis mutandis";
lin mutative_A = mkA "mutative" ;
lin mutchkin_N = mkN "mutchkin" ;
lin mute_A = compoundA (mkA "mute");
lin mute_N = mkN "mute" "mutes";
lin mute_V2 = mkV2 (mkV "mute" "mutes" "muted" "muted" "muting");
lin muteness_N = mkN "muteness" ;
lin mutilate_V = mkV "mutilate";
lin mutilate_V2 = mkV2 (mkV "mutilate" "mutilates" "mutilated" "mutilated" "mutilating");
lin mutilation_N = mkN "mutilation" "mutilations";
lin mutilator_N = mkN "mutilator" ;
lin mutineer_N = mkN "mutineer" "mutineers";
lin mutinous_A = compoundA (mkA "mutinous");
lin mutiny_N = mkN "mutiny" "mutinies";
lin mutiny_V = mkV "mutiny" "mutinies" "mutinied" "mutinied" "mutinying";
lin mutisia_N = mkN "mutisia" ;
lin mutism_N = mkN "mutism" ;
lin muton_N = mkN "muton" ;
lin mutt_N = mkN "mutt" "mutts";
lin mutter_N = mkN "mutter" "mutters";
lin mutter_V = mkV "mutter" "mutters" "muttered" "muttered" "muttering";
lin mutter_V2 = mkV2 (mkV "mutter" "mutters" "muttered" "muttered" "muttering");
lin mutterer_N = mkN "mutterer" "mutterers";
lin mutton_N = mkN "mutton" ;
lin mutton_head_N = mkN "mutton-head" "mutton-heads";
lin mutual_A = compoundA (mkA "mutual");
lin mutuality_N = mkN "mutuality" ;
lin muzhik_N = mkN "muzhik" ;
lin muzzle_N = mkN "muzzle" "muzzles";
lin muzzle_V2 = mkV2 (mkV "muzzle" "muzzles" "muzzled" "muzzled" "muzzling");
lin muzzle_velocity_N = mkN "muzzle-velocity" "muzzle-velocities";
lin muzzler_N = mkN "muzzler" ;
lin muzzy_A = mkA "muzzy" "muzzier";
lin myalgia_N = mkN "myalgia" ;
lin myalgic_A = mkA "myalgic" ;
lin myasthenia_N = mkN "myasthenia" ;
lin mycelium_N = mkN "mycelium" ;
lin mycobacteria_N = mkN "mycobacteria" ;
lin mycologist_N = mkN "mycologist" ;
lin mycology_N = mkN "mycology" ;
lin mycomycin_N = mkN "mycomycin" ;
lin mycophagist_N = mkN "mycophagist" ;
lin mycophagy_N = mkN "mycophagy" ;
lin mycoplasma_N = mkN "mycoplasma" ;
lin mycotoxin_N = mkN "mycotoxin" ;
lin mydriasis_N = mkN "mydriasis" ;
lin mydriatic_N = mkN "mydriatic" ;
lin myelatelia_N = mkN "myelatelia" ;
lin myelencephalon_N = mkN "myelencephalon" ;
lin myelic_A = mkA "myelic" ;
lin myelin_N = mkN "myelin" ;
lin myelinated_A = mkA "myelinated" ;
lin myelinic_A = mkA "myelinic" ;
lin myelinization_N = mkN "myelinization" ;
lin myelitis_N = mkN "myelitis" ;
lin myeloblast_N = mkN "myeloblast" ;
lin myelocyte_N = mkN "myelocyte" ;
lin myelofibrosis_N = mkN "myelofibrosis" ;
lin myelogram_N = mkN "myelogram" ;
lin myelography_N = mkN "myelography" ;
lin myeloid_A = mkA "myeloid" ;
lin myeloma_N = mkN "myeloma" ;
lin myelomeningocele_N = mkN "myelomeningocele" ;
lin myiasis_N = mkN "myiasis" ;
lin mylodon_N = mkN "mylodon" ;
lin mylodontid_N = mkN "mylodontid" ;
lin myna_N = mkN "myna" "mynas";
lin mynah_N = mkN "mynah" "mynahs";
lin myocardial_A = mkA "myocardial" ;
lin myocardium_N = mkN "myocardium" ;
lin myoclonus_N = mkN "myoclonus" ;
lin myofibril_N = mkN "myofibril" ;
lin myoglobin_N = mkN "myoglobin" ;
lin myoglobinuria_N = mkN "myoglobinuria" ;
lin myogram_N = mkN "myogram" ;
lin myoid_A = mkA "myoid" ;
lin myology_N = mkN "myology" ;
lin myoma_N = mkN "myoma" ;
lin myometritis_N = mkN "myometritis" ;
lin myometrium_N = mkN "myometrium" ;
lin myonecrosis_N = mkN "myonecrosis" ;
lin myopathic_A = mkA "myopathic" ;
lin myopathy_N = mkN "myopathy" ;
lin myope_N = mkN "myope" ;
lin myopia_N = mkN "myopia" ;
lin myopic_A = compoundA (mkA "myopic");
lin myosarcoma_N = mkN "myosarcoma" ;
lin myosin_N = mkN "myosin" ;
lin myositis_N = mkN "myositis" ;
lin myotomy_N = mkN "myotomy" ;
lin myotonia_N = mkN "myotonia" ;
lin myotonic_A = mkA "myotonic" ;
lin myra_PN = mkPN "Myra";
lin myriad_A = compoundA (mkA "myriad");
lin myriad_N = mkN "myriad" "myriads";
lin myriagram_N = mkN "myriagram" ;
lin myriameter_N = mkN "myriameter" ;
lin myriapod_N = mkN "myriapod" ;
lin myringectomy_N = mkN "myringectomy" ;
lin myringoplasty_N = mkN "myringoplasty" ;
lin myringotomy_N = mkN "myringotomy" ;
lin myrmecophagous_A = mkA "myrmecophagous" ;
lin myrmecophile_N = mkN "myrmecophile" ;
lin myrmecophilous_A = mkA "myrmecophilous" ;
lin myrmecophyte_N = mkN "myrmecophyte" ;
lin myrmecophytic_A = mkA "myrmecophytic" ;
lin myrmidon_N = mkN "myrmidon" "myrmidons";
lin myrrh_N = mkN "myrrh" ;
lin myrtle_N = mkN "myrtle" "myrtles";
lin mysophilia_N = mkN "mysophilia" ;
lin mysophobia_N = mkN "mysophobia" ;
lin mysophobic_A = mkA "mysophobic" ;
lin mysterious_A = compoundA (mkA "mysterious");
lin mystery_N = mkN "mystery" "mysteries";
lin mystic_A = compoundA (mkA "mystic");
lin mysticMasc_N = mkN masculine (mkN "mystic" "mystics");
lin mysticFem_N = mkN feminine (mkN "mystic" "mystics");
lin mystical_A = compoundA (mkA "mystical");
lin mysticism_N = mkN "mysticism" ;
lin mystification_N = mkN "mystification" "mystifications";
lin mystify_V2 = mkV2 (mkV "mystify" "mystifies" "mystified" "mystified" "mystifying");
lin mystique_N = mkN "mystique" "mystiques";
lin myth_N = mkN "myth" "myths";
lin mythic_A = mkA "mythic" ;
lin mythical_A = compoundA (mkA "mythical");
lin mythological_A = compoundA (mkA "mythological");
lin mythologist_N = mkN "mythologist" "mythologists";
lin mythologization_N = mkN "mythologization" ;
lin mythology_N = mkN "mythology" "mythologies";
lin myxedema_N = mkN "myxedema" ;
lin myxobacteria_N = mkN "myxobacteria" ;
lin myxoma_N = mkN "myxoma" ;
lin myxomatosis_N = mkN "myxomatosis" ;
lin myxosporidian_N = mkN "myxosporidian" ;
lin myxovirus_N = mkN "myxovirus" ;
lin naafi_N = mkN "naafi" ;
lin nab_V2 = mkV2 (mkV "nab" "nabs" "nabbed" "nabbed" "nabbing");
lin nabob_N = mkN "nabob" "nabobs";
lin naboom_N = mkN "naboom" ;
lin nabumetone_N = mkN "nabumetone" ;
lin nacelle_N = mkN "nacelle" "nacelles";
lin nacho_N = mkN "nacho" ;
lin nacre_N = mkN "nacre" ;
lin nacreous_A = mkA "nacreous" ;
lin nadir_N = mkN "nadir" "nadirs";
lin nadolol_N = mkN "nadolol" ;
lin nae_Interj = ss "nae";
lin nafcillin_N = mkN "nafcillin" ;
lin nag_N = mkN "nag" "nags";
lin nag_V = mkV "nag" "nags" "nagged" "nagged" "nagging";
lin nag_V2 = mkV2 (mkV "nag" "nags" "nagged" "nagged" "nagging");
lin nagami_N = mkN "nagami" ;
lin nagger_N = mkN "nagger" "naggers";
lin nagi_N = mkN "nagi" ;
lin nagoya_PN = mkPN "Nagoya";
lin nagpur_PN = mkPN "Nagpur";
lin naiad_N = mkN "naiad" "naiads";
lin naiant_A = mkA "naiant" ;
lin naif_N = mkN "naif" ;
lin nail_N = mkN "nail" "nails";
lin nail_V2 = mkV2 (mkV "nail" "nails" "nailed" "nailed" "nailing");
lin nail_polish_N = mkN "nail-polish" "nail-polishes";
lin nail_varnish_N = mkN "nail-varnish" "nail-varnishes";
lin nailbrush_N = mkN "nailbrush" "nailbrushes";
lin nailer_N = mkN "nailer" ;
lin nailfile_N = mkN "nailfile" "nailfiles";
lin nailhead_N = mkN "nailhead" ;
lin nailsea_PN = mkPN "Nailsea";
lin nainsook_N = mkN "nainsook" ;
lin naira_N = mkN "naira" "nairas";
lin nairn_PN = mkPN "Nairn";
lin nairobi_PN = mkPN "Nairobi";
lin naive_1_A = compoundA (mkA "naive");
lin naive_2_A = compoundA (mkA "naïve");
lin naive_A = mkA "naive" ;
lin naivete_N = mkN "naiveté" "naivetés";
lin naivety_N = mkN "naivety" "naiveties";
lin naked_A = compoundA (mkA "naked");
lin nakedness_N = mkN "nakedness" ;
lin nakedwood_N = mkN "nakedwood" ;
lin nalorphine_N = mkN "nalorphine" ;
lin naloxone_N = mkN "naloxone" ;
lin naltrexone_N = mkN "naltrexone" ;
lin namby_pamby_A = compoundA (mkA "namby-pamby");
lin namby_pamby_N = mkN "namby-pamby" "namby-pambies";
lin name_N = mkN "name" "names";
lin name_V2 = mkV2 (mkV "name" "names" "named" "named" "naming");
lin name_V2V = mkV2V (mkV "name") noPrep to_Prep ;
lin name_V3 = mkV3 (mkV "name");
lin name_day_N = mkN "name-day" "name-days";
lin name_drop_V = mkV "name-drop" "name-drops" "name-dropped" "name-dropped" "name-dropping";
lin name_dropping_N = mkN "name-dropping" ;
lin name_part_N = mkN "name-part" "name-parts";
lin nameko_N = mkN "nameko" ;
lin nameless_A = compoundA (mkA "nameless");
lin namely_Adv = mkAdv "namely";
lin nameplate_N = mkN "nameplate" "nameplates";
lin namer_N = mkN "namer" ;
lin namesake_N = mkN "namesake" "namesakes";
lin namibia_PN = mkPN "Namibia";
lin namibian_A = compoundA (mkA "Namibian");
lin namibianMasc_N = mkN masculine (mkN "Namibian" "Namibians");
lin namibianFem_N = mkN feminine (mkN "Namibian" "Namibians");
lin naming_N = mkN "naming" ;
lin nan_N = mkN "nan" ;
lin nanchang_PN = mkPN "Nanchang";
lin nancy_PN = mkPN "Nancy";
lin nandrolone_N = mkN "nandrolone" ;
lin nankeen_N = mkN "nankeen" ;
lin nanking_PN = mkPN "Nanking";
lin nanning_PN = mkPN "Nanning";
lin nanny_N = mkN "nanny" "nannies";
lin nanny_goat_N = mkN "nanny-goat" "nanny-goats";
lin nanogram_N = mkN "nanogram" ;
lin nanometer_N = mkN "nanometer" ;
lin nanomia_N = mkN "nanomia" ;
lin nanophthalmos_N = mkN "nanophthalmos" ;
lin nanosecond_N = mkN "nanosecond" ;
lin nanotechnology_N = mkN "nanotechnology" ;
lin nanovolt_N = mkN "nanovolt" ;
lin nantwich_PN = mkPN "Nantwich";
lin naomi_PN = mkPN "Naomi";
lin nap_N = mkN "nap" "naps";
lin nap_V = mkV "nap" "naps" "napped" "napped" "napping";
lin napalm_N = mkN "napalm" ;
lin nape_N = mkN "nape" "napes";
lin napery_N = mkN "napery" ;
lin naphazoline_N = mkN "naphazoline" ;
lin naphtha_N = mkN "naphtha" ;
lin naphthalene_N = mkN "naphthalene" ;
lin naphthol_N = mkN "naphthol" ;
lin napkin_N = mkN "napkin" "napkins";
lin napkin_ring_N = mkN "napkin-ring" "napkin-rings";
lin naples_PN = mkPN "Naples";
lin napoleon_N = mkN "napoleon" ;
lin napoleonic_A = compoundA (mkA "napoleonic");
lin napoli_PN = mkPN "Napoli";
lin nappy_N = mkN "nappy" "nappies";
lin naprapath_N = mkN "naprapath" ;
lin naprapathy_N = mkN "naprapathy" ;
lin naproxen_N = mkN "naproxen" ;
lin napu_N = mkN "napu" ;
lin naranjilla_N = mkN "naranjilla" ;
lin narborough_PN = mkPN "Narborough";
lin narc_N = mkN "narc" ;
lin narcissism_N = mkN "narcissism" ;
lin narcissist_N = mkN "narcissist" ;
lin narcissus_N = mkN "narcissus" "narcissuses";
lin narcolepsy_N = mkN "narcolepsy" ;
lin narcoleptic_A = mkA "narcoleptic" ;
lin narcoleptic_N = mkN "narcoleptic" ;
lin narcosis_N = mkN "narcosis" ;
lin narcoterrorism_N = mkN "narcoterrorism" ;
lin narcotic_A = compoundA (mkA "narcotic");
lin narcotic_N = mkN "narcotic" "narcotics";
lin nard_N = mkN "nard" ;
lin nardoo_N = mkN "nardoo" ;
lin narial_A = mkA "narial" ;
lin naris_N = mkN "naris" ;
lin nark_N = mkN "nark" "narks";
lin nark_V2 = mkV2 (mkV "nark" "narks" "narked" "narked" "narking");
lin narrate_V2 = mkV2 (mkV "narrate" "narrates" "narrated" "narrated" "narrating");
lin narration_N = mkN "narration" "narrations";
lin narrative_A = mkA "narrative" ;
lin narrative_N = mkN "narrative" "narratives";
lin narrator_N = mkN "narrator" "narrators";
lin narrow_A = mkA "narrow" "narrower";
lin narrow_N = mkN "narrow" "narrows";
lin narrow_V = mkV "narrow" "narrows" "narrowed" "narrowed" "narrowing";
lin narrow_V2 = mkV2 (mkV "narrow" "narrows" "narrowed" "narrowed" "narrowing");
lin narrow_minded_A = compoundA (mkA "narrow-minded");
lin narrow_mindedness_N = mkN "narrow-mindedness" ;
lin narrowing_N = mkN "narrowing" ;
lin narrowness_N = mkN "narrowness" ;
lin narthex_N = mkN "narthex" ;
lin narwhal_N = mkN "narwhal" "narwhals";
lin nary_Predet = ss "nary";
lin nasa_PN = mkPN "NASA";
lin nasal_A = compoundA (mkA "nasal");
lin nasal_N = mkN "nasal" "nasals";
lin nasality_N = mkN "nasality" ;
lin nasalization_N = mkN "nasalization" ;
lin nasalize_V2 = mkV2 (mkV "nasalize" "nasalizes" "nasalized" "nasalized" "nasalizing");
lin nascent_A = compoundA (mkA "nascent");
lin nasion_N = mkN "nasion" ;
lin nasopharyngeal_A = mkA "nasopharyngeal" ;
lin nasopharynx_N = mkN "nasopharynx" ;
lin nastiness_N = mkN "nastiness" ;
lin nasturtium_N = mkN "nasturtium" "nasturtiums";
lin nasty_A = mkA "nasty" "nastier";
lin nat_PN = mkPN "Nat";
lin natal_A = compoundA (mkA "natal");
lin natalie_PN = mkPN "Natalie";
lin nathaniel_PN = mkPN "Nathaniel";
lin nation_N = mkN "nation" "nations";
lin national_A = compoundA (mkA "national");
lin national_N = mkN "national" "nationals";
lin nationalism_N = mkN "nationalism" ;
lin nationalist_A = compoundA (mkA "nationalist");
lin nationalist_N = mkN "nationalist" "nationalists";
lin nationalistic_A = compoundA (mkA "nationalistic");
lin nationality_N = mkN "nationality" "nationalities";
lin nationalization_N = mkN "nationalization" "nationalizations";
lin nationalize_V2 = mkV2 (mkV "nationalize" "nationalizes" "nationalized" "nationalized" "nationalizing");
lin nationhood_N = mkN "nationhood" ;
lin nationwide_A = compoundA (mkA "nationwide");
lin nationwide_Adv = mkAdv "nationwide";
lin native_A = compoundA (mkA "native");
lin native_N = mkN "native" "natives";
lin nativeness_N = mkN "nativeness" ;
lin nativism_N = mkN "nativism" ;
lin nativist_A = mkA "nativist" ;
lin nativist_N = mkN "nativist" ;
lin nativity_N = mkN "nativity" "nativities";
lin nato_PN = mkPN "Nato";
lin natriuresis_N = mkN "natriuresis" ;
lin natriuretic_A = mkA "natriuretic" ;
lin natrolite_N = mkN "natrolite" ;
lin natter_V = mkV "natter" "natters" "nattered" "nattered" "nattering";
lin natterjack_N = mkN "natterjack" ;
lin natty_A = mkA "natty" "nattier";
lin natural_A = compoundA (mkA "natural");
lin natural_N = mkN "natural" "naturals";
lin naturalism_N = mkN "naturalism" ;
lin naturalist_N = mkN "naturalist" "naturalists";
lin naturalistic_A = compoundA (mkA "naturalistic");
lin naturalization_N = mkN "naturalization" ;
lin naturalize_V = mkV "naturalize" "naturalizes" "naturalized" "naturalized" "naturalizing";
lin naturalize_V2 = mkV2 (mkV "naturalize" "naturalizes" "naturalized" "naturalized" "naturalizing");
lin naturalness_N = mkN "naturalness" ;
lin nature_N = mkN "nature" "natures";
lin naturism_N = mkN "naturism" ;
lin naturist_N = mkN "naturist" "naturists";
lin naturistic_A = mkA "naturistic" ;
lin naturopath_N = mkN "naturopath" ;
lin naturopathy_N = mkN "naturopathy" ;
lin naught_N = mkN "naught" "naughts";
lin naughtiness_N = mkN "naughtiness" ;
lin naughty_A = mkA "naughty" "naughtier";
lin naumachy_N = mkN "naumachy" ;
lin nauru_PN = mkPN "Nauru";
lin nauruan_A = compoundA (mkA "nauruan");
lin nauruan_N = mkN "nauruan" "nauruans";
lin nausea_N = mkN "nausea" ;
lin nauseate_V2 = mkV2 (mkV "nauseate" "nauseates" "nauseated" "nauseated" "nauseating");
lin nauseating_A = mkA "nauseating" ;
lin nauseous_A = compoundA (mkA "nauseous");
lin nautch_N = mkN "nautch" "nautches";
lin nautch_girl_N = mkN "nautch-girl" "nautch-girls";
lin nautical_A = compoundA (mkA "nautical");
lin nautilus_N = mkN "nautilus" "nautiluses";
lin naval_A = compoundA (mkA "naval");
lin nave_N = mkN "nave" "naves";
lin navel_N = mkN "navel" "navels";
lin navicular_A = mkA "navicular" ;
lin navigability_N = mkN "navigability" ;
lin navigable_A = compoundA (mkA "navigable");
lin navigate_V = mkV "navigate" "navigates" "navigated" "navigated" "navigating";
lin navigate_V2 = mkV2 (mkV "navigate" "navigates" "navigated" "navigated" "navigating");
lin navigation_N = mkN "navigation" ;
lin navigational_A = mkA "navigational" ;
lin navigator_N = mkN "navigator" "navigators";
lin navvy_N = mkN "navvy" "navvies";
lin navy_N = mkN "navy" "navies";
lin nawab_N = mkN "nawab" ;
lin nay_Adv = mkAdv "nay";
lin nay_N = mkN "nay" ;
lin naysay_V2 = mkV2 (mkV "naysay");
lin naysayer_N = mkN "naysayer" ;
lin naysaying_N = mkN "naysaying" ;
lin nazi_A = compoundA (mkA "nazi");
lin nazi_N = mkN "nazi" "nazis";
lin nazism_N = mkN "nazism" ;
lin nb_PN = mkPN "Nb";
lin nco_N = mkN "nco" ;
lin ne'er_Adv = mkAdv "ne'er";
lin ne'er_do_well_N = mkN "ne'er-do-well" "ne'er-do-wells";
lin ne_plus_ultra_N = mkN "ne plus ultra" "ne plus ultrae" {- FIXME: guessed plural form -};
lin neanderthal_A = compoundA (mkA "neanderthal");
lin neap_N = mkN "neap" "neaps";
lin neap_tide_N = mkN "neap-tide" "neap-tides";
lin neapolitan_A = compoundA (mkA "neapolitan");
lin neapolitan_N = mkN "neapolitan" "neapolitans";
lin near_A = mkA "near" "nearer";
lin near_Adv = mkAdv "near";
lin near_Prep = mkPrep "near";
lin near_V = mkV "near" "nears" "neared" "neared" "nearing";
lin near_V2 = mkV2 (mkV "near" "nears" "neared" "neared" "nearing");
lin near_sighted_A = compoundA (mkA "near-sighted");
lin nearby_A = compoundA (mkA "nearby");
lin nearby_Adv = mkAdv "nearby" ;
lin nearer_Adv = mkAdv "nearer";
lin nearer_Prep = mkPrep "nearer";
lin nearest_Adv = mkAdv "nearest";
lin nearest_Prep = mkPrep "nearest";
lin nearness_N = mkN "nearness" ;
lin nearside_N = mkN "nearside" "nearsides";
lin nearsighted_A = mkA "nearsighted" ;
lin neat_A = mkA "neat" "neater";
lin neath_PN = mkPN "Neath";
lin neatness_N = mkN "neatness" ;
lin nebbish_N = mkN "nebbish" ;
lin nebraska_PN = mkPN "Nebraska";
lin nebuchadnezzar_N = mkN "nebuchadnezzar" ;
lin nebula_N = mkN "nebula" "nebulas";
lin nebular_A = compoundA (mkA "nebular");
lin nebule_N = mkN "nebule" ;
lin nebulous_A = compoundA (mkA "nebulous");
lin necessary_A = compoundA (mkA "necessary");
lin necessary_N = mkN "necessary" "necessaries";
lin necessitarian_N = mkN "necessitarian" ;
lin necessitate_V2 = mkV2 (mkV "necessitate" "necessitates" "necessitated" "necessitated" "necessitating");
lin necessitous_A = compoundA (mkA "necessitous");
lin necessity_N = mkN "necessity" "necessities";
lin neck_N = mkN "neck" "necks";
lin neck_V = mkV "neck" "necks" "necked" "necked" "necking";
lin neckband_N = mkN "neckband" "neckbands";
lin neckcloth_N = mkN "neckcloth" "neckcloths";
lin necked_A = mkA "necked" ;
lin necker_N = mkN "necker" ;
lin neckerchief_N = mkN "neckerchief" "neckerchiefs";
lin necklace_N = mkN "necklace" "necklaces";
lin neckless_A = mkA "neckless" ;
lin necklet_N = mkN "necklet" "necklets";
lin necklike_A = mkA "necklike" ;
lin neckline_N = mkN "neckline" "necklines";
lin neckpiece_N = mkN "neckpiece" ;
lin necktie_N = mkN "necktie" "neckties";
lin neckwear_N = mkN "neckwear" ;
lin necrobiosis_N = mkN "necrobiosis" ;
lin necrology_N = mkN "necrology" ;
lin necrolysis_N = mkN "necrolysis" ;
lin necromancer_N = mkN "necromancer" "necromancers";
lin necromancy_N = mkN "necromancy" ;
lin necromantic_A = mkA "necromantic" ;
lin necrophagia_N = mkN "necrophagia" ;
lin necrophilia_N = mkN "necrophilia" ;
lin necropolis_N = mkN "necropolis" "necropolises";
lin necrosis_N = mkN "necrosis" ;
lin necrotic_A = mkA "necrotic" ;
lin nectar_N = mkN "nectar" ;
lin nectariferous_A = mkA "nectariferous" ;
lin nectarine_N = mkN "nectarine" "nectarines";
lin nectary_N = mkN "nectary" ;
lin ned_PN = mkPN "Ned";
lin neddy_PN = mkPN "Neddy";
lin nee_A = compoundA (mkA "née");
lin need_N = mkN "need" "needs";
lin need_V = mkV "need";
lin need_V2 = mkV2 (mkV "need" "needs" "needed" "needed" "needing");
lin need_V2V = mkV2V (mkV "need" "needs" "needed" "needed" "needing") noPrep to_Prep ;
lin need_VS = mkVS (mkV "need" "needs" "needed" "needed" "needing");
lin need_VV = mkVV (mkV "need" "needs" "needed" "needed" "needing") ;
lin needful_A = compoundA (mkA "needful");
lin neediness_N = mkN "neediness" ;
lin needle_N = mkN "needle" "needles";
lin needle_V2 = mkV2 (mkV "needle" "needles" "needled" "needled" "needling");
lin needlebush_N = mkN "needlebush" ;
lin needlecraft_N = mkN "needlecraft" ;
lin needlefish_N = mkN "needlefish" ;
lin needlepoint_N = mkN "needlepoint" ;
lin needless_A = compoundA (mkA "needless");
lin needlewoman_N = mkN feminine (mkN "needlewoman" "needlewomen");
lin needlewood_N = mkN "needlewood" ;
lin needlework_N = mkN "needlework" ;
lin needleworker_N = mkN "needleworker" ;
lin needs_Adv = mkAdv "needs";
lin needy_A = mkA "needy" "needier";
lin needy_N = mkN "needy" ;
lin neem_N = mkN "neem" ;
lin neencephalon_N = mkN "neencephalon" ;
lin nefarious_A = compoundA (mkA "nefarious");
lin nefariousness_N = mkN "nefariousness" ;
lin nefazodone_N = mkN "nefazodone" ;
lin negate_V2 = mkV2 (mkV "negate" "negates" "negated" "negated" "negating");
lin negation_N = mkN "negation" ;
lin negative_A = compoundA (mkA "negative");
lin negative_N = mkN "negative" "negatives";
lin negative_V2 = mkV2 (mkV "negative" "negatives" "negatived" "negatived" "negativing");
lin negativist_N = mkN "negativist" ;
lin negativity_N = mkN "negativity" ;
lin neglect_N = mkN "neglect" ;
lin neglect_V2 = mkV2 (mkV "neglect" "neglects" "neglected" "neglected" "neglecting");
lin neglecter_N = mkN "neglecter" ;
lin neglectful_A = compoundA (mkA "neglectful");
lin neglectfulness_N = mkN "neglectfulness" ;
lin neglige_N = mkN "négligé" "négligés";
lin negligee_N = mkN "negligee" "negligees";
lin negligence_N = mkN "negligence" ;
lin negligent_A = compoundA (mkA "negligent");
lin negligible_A = compoundA (mkA "negligible");
lin negotiable_A = compoundA (mkA "negotiable");
lin negotiate_V = mkV "negotiate" "negotiates" "negotiated" "negotiated" "negotiating";
lin negotiate_V2 = mkV2 (mkV "negotiate" "negotiates" "negotiated" "negotiated" "negotiating");
lin negotiate_VV = mkVV (mkV "negotiate" "negotiates" "negotiated" "negotiated" "negotiating");
lin negotiation_N = mkN "negotiation" "negotiations";
lin negotiator_N = mkN "negotiator" "negotiators";
lin negotiatress_N = mkN "negotiatress" ;
lin negress_N = mkN "negress" "negresses";
lin negro_A = mkA "negro" ;
lin negro_N = mkN "negro" "negroes";
lin negroid_A = compoundA (mkA "negroid");
lin negroid_N = mkN "negroid" "negroids";
lin negus_N = mkN "negus" "neguses";
lin neigh_N = mkN "neigh" "neighs";
lin neigh_V = mkV "neigh" "neighs" "neighed" "neighed" "neighing";
lin neighbour_N = mkN (variants {"neighbour"; "neighbor"});
lin neighbour_V = mkV "neighbour" "neighbours" "neighboured" "neighboured" "neighbouring";
lin neighbour_V2 = mkV2 (variants {mkV "neighbour" "neighbours" "neighboured" "neighboured" "neighbouring";
                                   mkV "neighbor"  "neighbors"  "neighbored"  "neighbored"  "neighboring"});
lin neighbourhood_N = mkN (variants {"neighbourhood"; "neighborhood"});
lin neighbourliness_N = mkN (variants {"neighbourliness"; "neighborliness"});
lin neighbourly_A = compoundA (mkA (variants {"neighbourly"; "neighborly"}));
lin neil_PN = mkPN "Neil";
lin neither7nor_DConj = mkConj "neither" "nor" singular;
lin neither_A = mkA "neither" ;
lin neither_Adv = mkAdv "neither";
lin neither_Det = mkDeterminer singular "neither";
lin neither_Prep = mkPrep "neither";
lin nekton_N = mkN "nekton" ;
lin nelfinavir_N = mkN "nelfinavir" ;
lin nell_PN = mkPN "Nell";
lin nelly_N = mkN "nelly" "IRREG";
lin nelly_PN = mkPN "Nelly";
lin nelson_N = mkN "nelson" ;
lin nelson_PN = mkPN "Nelson";
lin nem_con_Adv = mkAdv "nem con";
lin nematode_N = mkN "nematode" ;
lin nemesis_N = mkN "nemesis" "nemeses" {- FIXME: guessed plural form -};
lin nemophila_N = mkN "nemophila" ;
lin neo_A = mkA "neo" ;
lin neoclassic_A = mkA "neoclassic" ;
lin neoclassicism_N = mkN "neoclassicism" ;
lin neoclassicist_A = mkA "neoclassicist" ;
lin neoclassicist_N = mkN "neoclassicist" ;
lin neocolonialism_N = mkN "neocolonialism" ;
lin neoconservatism_N = mkN "neoconservatism" ;
lin neoconservative_N = mkN "neoconservative" ;
lin neocortical_A = mkA "neocortical" ;
lin neodymium_N = mkN "neodymium" ;
lin neoexpressionism_N = mkN "neoexpressionism" ;
lin neoliberal_A = mkA "neoliberal" ;
lin neoliberal_N = mkN "neoliberal" ;
lin neoliberalism_N = mkN "neoliberalism" ;
lin neolith_N = mkN "neolith" ;
lin neolithic_A = compoundA (mkA "neolithic");
lin neologism_N = mkN "neologism" "neologisms";
lin neologist_N = mkN "neologist" ;
lin neomycin_N = mkN "neomycin" ;
lin neon_N = mkN "neon" ;
lin neonatal_A = mkA "neonatal" ;
lin neonate_N = mkN "neonate" ;
lin neonatology_N = mkN "neonatology" ;
lin neopallium_N = mkN "neopallium" ;
lin neophobia_N = mkN "neophobia" ;
lin neophyte_N = mkN "neophyte" "neophytes";
lin neoplasia_N = mkN "neoplasia" ;
lin neoplasm_N = mkN "neoplasm" "neoplasms";
lin neoplastic_A = mkA "neoplastic" ;
lin neoprene_N = mkN "neoprene" ;
lin neoromanticism_N = mkN "neoromanticism" ;
lin neostigmine_N = mkN "neostigmine" ;
lin neotenic_A = mkA "neotenic" ;
lin neoteny_N = mkN "neoteny" ;
lin neotony_N = mkN "neotony" ;
lin nepal_PN = mkPN "Nepal";
lin nepalese_A = compoundA (mkA "nepalese");
lin nepalese_N = mkN "nepalese" "nepalese";
lin nepali_A = compoundA (mkA "nepali");
lin nepali_N = mkN "nepali" "nepalis";
lin nepheline_N = mkN "nepheline" ;
lin nephelinite_N = mkN "nephelinite" ;
lin nephew_N = mkN human (mkN "nephew" "nephews");
lin nephology_N = mkN "nephology" ;
lin nephoscope_N = mkN "nephoscope" ;
lin nephralgia_N = mkN "nephralgia" ;
lin nephrectomy_N = mkN "nephrectomy" ;
lin nephrite_N = mkN "nephrite" ;
lin nephritic_A = mkA "nephritic" ;
lin nephritis_N = mkN "nephritis" ;
lin nephrocalcinosis_N = mkN "nephrocalcinosis" ;
lin nephrolithiasis_N = mkN "nephrolithiasis" ;
lin nephrology_N = mkN "nephrology" ;
lin nephron_N = mkN "nephron" ;
lin nephroptosis_N = mkN "nephroptosis" ;
lin nephrosclerosis_N = mkN "nephrosclerosis" ;
lin nephrotomy_N = mkN "nephrotomy" ;
lin nephrotoxic_A = mkA "nephrotoxic" ;
lin nephrotoxin_N = mkN "nephrotoxin" ;
lin nephthytis_N = mkN "nephthytis" ;
lin nepotism_N = mkN "nepotism" ;
lin nepotist_N = mkN "nepotist" ;
lin neptune_PN = mkPN "Neptune";
lin neptunium_N = mkN "neptunium" ;
lin nerd_N = mkN "nerd" ;
lin nereid_N = mkN "nereid" "nereids";
lin nerita_N = mkN "nerita" ;
lin neritic_A = mkA "neritic" ;
lin neritid_N = mkN "neritid" ;
lin neritina_N = mkN "neritina" ;
lin nerve_N = mkN "nerve" "nerves";
lin nerve_V2 = mkV2 (mkV "nerve" "nerves" "nerved" "nerved" "nerving");
lin nerve_cell_N = mkN "nerve-cell" "nerve-cells";
lin nerve_centre_N = mkN "nerve-centre" "nerve-centres";
lin nerve_racking_A = compoundA (mkA "nerve-racking");
lin nerveless_A = compoundA (mkA "nerveless");
lin nerves_N = mkN "nerves" ;
lin nervous_A = compoundA (mkA "nervous");
lin nervousness_N = mkN "nervousness" ;
lin nervy_A = compoundA (mkA "nervy");
lin nescience_N = mkN "nescience" ;
lin nescient_A = compoundA (mkA "nescient");
lin ness_N = mkN "ness" "nesses";
lin nest_N = mkN "nest" "nests";
lin nest_V = mkV "nest" "nests" "nested" "nested" "nesting";
lin nest_egg_N = mkN "nest-egg" "nest-eggs";
lin nester_N = mkN "nester" ;
lin nestle_V = mkV "nestle" "nestles" "nestled" "nestled" "nestling";
lin nestle_V2 = mkV2 (mkV "nestle" "nestles" "nestled" "nestled" "nestling");
lin nestling_N = mkN "nestling" "nestlings";
lin neston_PN = mkPN "Neston";
lin nestor_PN = mkPN "Nestor";
lin net_A = compoundA (mkA "net");
lin net_N = mkN "net" "nets";
lin net_V2 = mkV2 (mkV "net" "nets" "netted" "netted" "netting");
lin netball_N = mkN "netball" ;
lin nether_A = compoundA (mkA "nether");
lin netherlander_N = mkN "netherlander" "netherlanders";
lin netherlands_PN = mkPN "Netherlands";
lin nethermost_A = compoundA (mkA "nethermost");
lin netley_PN = mkPN "Netley";
lin nett_A = compoundA (mkA "nett");
lin nett_V2 = mkV2 (mkV "nett" "netts" "netted" "netted" "netting");
lin netting_N = mkN "netting" ;
lin nettle_N = mkN "nettle" "nettles";
lin nettle_V2 = mkV2 (mkV "nettle" "nettles" "nettled" "nettled" "nettling");
lin nettlerash_N = mkN "nettlerash" ;
lin network_N = mkN "network" "networks";
lin networklike_A = mkA "networklike" ;
lin neural_A = compoundA (mkA "neural");
lin neuralgia_N = mkN "neuralgia" ;
lin neuralgic_A = compoundA (mkA "neuralgic");
lin neurasthenia_N = mkN "neurasthenia" ;
lin neurasthenic_A = compoundA (mkA "neurasthenic");
lin neurasthenic_N = mkN "neurasthenic" "neurasthenics";
lin neurectomy_N = mkN "neurectomy" ;
lin neurinoma_N = mkN "neurinoma" ;
lin neuritis_N = mkN "neuritis" ;
lin neuroanatomic_A = mkA "neuroanatomic" ;
lin neuroanatomy_N = mkN "neuroanatomy" ;
lin neurobiological_A = mkA "neurobiological" ;
lin neurobiological_Adv = mkAdv "neurobiological" ;
lin neurobiologist_N = mkN "neurobiologist" ;
lin neurobiology_N = mkN "neurobiology" ;
lin neuroblast_N = mkN "neuroblast" ;
lin neuroblastoma_N = mkN "neuroblastoma" ;
lin neurochemical_N = mkN "neurochemical" ;
lin neurodermatitis_N = mkN "neurodermatitis" ;
lin neuroendocrine_A = mkA "neuroendocrine" ;
lin neuroepithelioma_N = mkN "neuroepithelioma" ;
lin neuroepithelium_N = mkN "neuroepithelium" ;
lin neuroethics_N = mkN "neuroethics" ;
lin neurofibroma_N = mkN "neurofibroma" ;
lin neurofibromatosis_N = mkN "neurofibromatosis" ;
lin neurogenesis_N = mkN "neurogenesis" ;
lin neurogenic_A = mkA "neurogenic" ;
lin neuroglia_N = mkN "neuroglia" ;
lin neurogliacyte_N = mkN "neurogliacyte" ;
lin neuroglial_A = mkA "neuroglial" ;
lin neurohormone_N = mkN "neurohormone" ;
lin neurolemma_N = mkN "neurolemma" ;
lin neurolinguist_N = mkN "neurolinguist" ;
lin neurolinguistics_N = mkN "neurolinguistics" ;
lin neurological_A = mkA "neurological" ;
lin neurologistMasc_N = mkN masculine (mkN "neurologist" "neurologists");
lin neurologistFem_N = mkN feminine (mkN "neurologist" "neurologists");
lin neurology_N = mkN "neurology" ;
lin neuroma_N = mkN "neuroma" ;
lin neuromatous_A = mkA "neuromatous" ;
lin neuromotor_A = mkA "neuromotor" ;
lin neuromuscular_A = mkA "neuromuscular" ;
lin neuropathy_N = mkN "neuropathy" ;
lin neurophysiological_A = mkA "neurophysiological" ;
lin neurophysiology_N = mkN "neurophysiology" ;
lin neuropil_N = mkN "neuropil" ;
lin neuroplasty_N = mkN "neuroplasty" ;
lin neuropsychiatric_A = mkA "neuropsychiatric" ;
lin neuropsychiatry_N = mkN "neuropsychiatry" ;
lin neuropsychological_A = mkA "neuropsychological" ;
lin neuropteron_N = mkN "neuropteron" ;
lin neurosarcoma_N = mkN "neurosarcoma" ;
lin neuroscience_N = mkN "neuroscience" ;
lin neuroscientist_N = mkN "neuroscientist" ;
lin neurosis_N = mkN "neurosis" "neuroses" {- FIXME: guessed plural form -};
lin neurosurgeon_N = mkN "neurosurgeon" ;
lin neurosurgery_N = mkN "neurosurgery" ;
lin neurosyphilis_N = mkN "neurosyphilis" ;
lin neurotic_A = compoundA (mkA "neurotic");
lin neurotic_N = mkN "neurotic" "neurotics";
lin neurotically_Adv = mkAdv "neurotically";
lin neurotoxic_A = mkA "neurotoxic" ;
lin neurotoxin_N = mkN "neurotoxin" ;
lin neurotransmitter_N = mkN "neurotransmitter" ;
lin neurotropic_A = mkA "neurotropic" ;
lin neurotropism_N = mkN "neurotropism" ;
lin neuss_PN = mkPN "Neuss";
lin neuter_A = compoundA (mkA "neuter");
lin neuter_N = mkN "neuter" "neuters";
lin neuter_V2 = mkV2 (mkV "neuter" "neuters" "neutered" "neutered" "neutering");
lin neutering_N = mkN "neutering" ;
lin neutral_A = compoundA (mkA "neutral");
lin neutral_N = mkN "neutral" "neutrals";
lin neutralism_N = mkN "neutralism" ;
lin neutralist_N = mkN "neutralist" ;
lin neutrality_N = mkN "neutrality" ;
lin neutralization_N = mkN "neutralization" "neutralizations";
lin neutralize_V2 = mkV2 (mkV "neutralize" "neutralizes" "neutralized" "neutralized" "neutralizing");
lin neutrino_N = mkN "neutrino" ;
lin neutron_N = mkN "neutron" "neutrons";
lin neutropenia_N = mkN "neutropenia" ;
lin neutrophil_N = mkN "neutrophil" ;
lin nevada_PN = mkPN "Nevada";
lin neve_N = mkN "neve" ;
lin never_AdV = mkAdV "never";
lin never_Adv = mkAdv "never" ;
lin nevermore_Adv = mkAdv "nevermore";
lin nevertheless_Adv = mkAdv "nevertheless";
lin neville_PN = mkPN "Neville";
lin nevirapine_N = mkN "nevirapine" ;
lin new_A = mkA "new" "newer";
lin new_Adv = mkAdv "new";
lin new_cumnock_PN = mkPN "New Cumnock";
lin new_mills_PN = mkPN "New Mills";
lin new_orleans_PN = mkPN "New Orleans";
lin new_tredegar_PN = mkPN "New Tredegar";
lin new_windsor_PN = mkPN "New Windsor";
lin new_york_PN = mkPN "New York";
lin newark_PN = mkPN "Newark";
lin newarthill_PN = mkPN "Newarthill";
lin newbiggin_PN = mkPN "Newbiggin";
lin newborn_A = mkA "newborn" ;
lin newbury_PN = mkPN "Newbury";
lin newcastle_PN = mkPN "Newcastle";
lin newcastle_under_lyme_PN = mkPN "Newcastle-under-lyme";
lin newcastle_upon_tyne_PN = mkPN "Newcastle upon tyne";
lin newcomer_N = mkN "newcomer" "newcomers";
lin newel_N = mkN "newel" "newels";
lin newfangled_A = compoundA (mkA "newfangled");
lin newfound_A = mkA "newfound" ;
lin newfoundland_PN = mkPN "Newfoundland";
lin newham_PN = mkPN "Newham";
lin newhaven_PN = mkPN "Newhaven";
lin newlywed_N = mkN "newlywed" "newlyweds";
lin newmains_PN = mkPN "Newmains";
lin newmarket_N = mkN "newmarket" ;
lin newmarket_PN = mkPN "Newmarket";
lin newness_N = mkN "newness" ;
lin newport_PN = mkPN "Newport";
lin newport_pagnell_PN = mkPN "Newport Pagnell";
lin newquay_PN = mkPN "Newquay";
lin newry_PN = mkPN "Newry";
lin news_N = mkN "news" ;
lin newsagent_N = mkN "newsagent" "newsagents";
lin newsboy_N = mkN "newsboy" "newsboys";
lin newscast_N = mkN "newscast" "newscasts";
lin newscaster_N = mkN "newscaster" "newscasters";
lin newsdealer_N = mkN "newsdealer" "newsdealers";
lin newsflash_N = mkN "newsflash" "newsflashes";
lin newsless_A = compoundA (mkA "newsless");
lin newsletter_N = mkN "newsletter" "newsletters";
lin newsmonger_N = mkN "newsmonger" "newsmongers";
lin newspaper_N = mkN "newspaper" "newspapers";
lin newspapering_N = mkN "newspapering" ;
lin newspaperman_N = mkN masculine (mkN "newspaperman" "newspapermen");
lin newspeak_N = mkN "newspeak" ;
lin newsprint_N = mkN "newsprint" ;
lin newsreader_N = mkN "newsreader" ;
lin newsreel_N = mkN "newsreel" "newsreels";
lin newsroom_N = mkN "newsroom" "newsrooms";
lin newssheet_N = mkN "newssheet" "newssheets";
lin newsstand_N = mkN "newsstand" "newsstands";
lin newsvendor_N = mkN "newsvendor" "newsvendors";
lin newswoman_N = mkN feminine (mkN "newswoman");
lin newsworthiness_N = mkN "newsworthiness" ;
lin newsworthy_A = compoundA (mkA "newsworthy");
lin newsy_A = mkA "newsy" "newsier";
lin newt_N = mkN "newt" "newts";
lin newton_N = mkN "newton" ;
lin newton_abbot_PN = mkPN "Newton abbot";
lin newton_aycliffe_PN = mkPN "Newton aycliffe";
lin newton_le_willows_PN = mkPN "Newton-le-willows";
lin newton_mearns_PN = mkPN "Newton mearns";
lin newtonian_A = compoundA (mkA "newtonian");
lin newtonian_N = mkN "newtonian" "newtonians";
lin newtown_PN = mkPN "Newtown";
lin next_A = irregAdv (compoundA (mkA "next")) "next";
lin next_N = mkN "next" "next";
lin next_Prep = mkPrep "next";
lin nexus_N = mkN "nexus" "nexuses";
lin ngultrum_N = mkN "ngultrum" ;
lin ngwee_N = mkN "ngwee" ;
lin nhs_N = mkN "nhs" ;
lin niacin_N = mkN "niacin" ;
lin nib_N = mkN "nib" "nibs";
lin nibbed_A = mkA "nibbed" ;
lin nibble_N = mkN "nibble" "nibbles";
lin nibble_V = mkV "nibble" "nibbles" "nibbled" "nibbled" "nibbling";
lin nibble_V2 = mkV2 (mkV "nibble" "nibbles" "nibbled" "nibbled" "nibbling");
lin nibbler_N = mkN "nibbler" ;
lin niblick_N = mkN "niblick" ;
lin nicad_N = mkN "nicad" ;
lin nicaragua_PN = mkPN "Nicaragua";
lin nicaraguan_A = compoundA (mkA "nicaraguan");
lin nicaraguan_N = mkN "nicaraguan" "nicaraguans";
lin nice_A = mkA "nice" "nicer";
lin nice_PN = mkPN "Nice";
lin niceness_N = mkN "niceness" ;
lin nicety_N = mkN "nicety" "niceties";
lin niche_N = mkN "niche" "niches";
lin nicholas_PN = mkPN "Nicholas";
lin nick_N = mkN "nick" "nicks";
lin nick_PN = mkPN "Nick";
lin nick_V2 = mkV2 (mkV "nick" "nicks" "nicked" "nicked" "nicking");
lin nickel_N = mkN "nickel" "nickels";
lin nickel_V2 = mkV2 (mkV "nickel" "nickels" "nickelled" "nickelled" "nickelling");
lin nicknack_N = mkN "nicknack" "nicknacks";
lin nickname_N = mkN "nickname" "nicknames";
lin nickname_V2 = mkV2 (mkV "nickname" "nicknames" "nicknamed" "nicknamed" "nicknaming");
lin nickname_V3 = mkV3 (mkV "nickname");
lin nicola_PN = mkPN "Nicola";
lin nicole_PN = mkPN "Nicole";
lin nicotine_N = mkN "nicotine" ;
lin nidicolous_A = mkA "nidicolous" ;
lin nidifugous_A = mkA "nidifugous" ;
lin nidus_N = mkN "nidus" ;
lin niece_N = mkN "niece" "nieces";
lin nifedipine_N = mkN "nifedipine" ;
lin niff_N = mkN "niff" "niffs";
lin niffy_A = mkA "niffy" "niffier";
lin nifty_A = mkA "nifty" "niftier";
lin nigel_PN = mkPN "Nigel";
lin nigella_N = mkN "nigella" ;
lin niger_PN = mkPN "Niger";
lin nigeria_PN = mkPN "Nigeria";
lin nigerian_A = compoundA (mkA "nigerian");
lin nigerian_N = mkN "nigerian" "nigerians";
lin nigerien_A = compoundA (mkA "nigerien");
lin nigerien_N = mkN "nigerien" "nigeriens";
lin niggard_N = mkN "niggard" "niggards";
lin niggardliness_N = mkN "niggardliness" ;
lin niggardly_A = compoundA (mkA "niggardly");
lin nigger_N = mkN "nigger" "niggers";
lin niggle_V = mkV "niggle" "niggles" "niggled" "niggled" "niggling";
lin nigh_Adv = mkAdv "nigh";
lin nigher_Adv = mkAdv "nigher";
lin nighest_Adv = mkAdv "nighest";
lin night_N = mkN "night" "nights";
lin night_bell_N = mkN "night-bell" "night-bells";
lin night_bird_N = mkN "night-bird" "night-birds";
lin night_light_N = mkN "night-light" "night-lights";
lin night_line_N = mkN "night-line" "night-lines";
lin night_porter_N = mkN "night-porter" "night-porters";
lin night_soil_N = mkN "night-soil" ;
lin night_stop_N = mkN "night-stop" "night-stops";
lin night_time_N = mkN "night-time" ;
lin night_watch_N = mkN "night-watch" "night-watches";
lin night_watchman_N = mkN masculine (mkN "night-watchman" "night-watchmen");
lin nightcap_N = mkN "nightcap" "nightcaps";
lin nightclub_N = mkN "nightclub" "nightclubs";
lin nightdress_N = mkN "nightdress" "nightdresses";
lin nightfall_N = mkN "nightfall" ;
lin nightgown_N = mkN "nightgown" "nightgowns";
lin nighthawk_N = mkN "nighthawk" ;
lin nightie_N = mkN "nightie" "nighties";
lin nightingale_N = mkN "nightingale" "nightingales";
lin nightjar_N = mkN "nightjar" "nightjars";
lin nightlife_N = mkN "nightlife" ;
lin nightlong_A = compoundA (mkA "nightlong");
lin nightly_A = compoundA (mkA "nightly");
lin nightly_Adv = mkAdv "nightly";
lin nightmare_N = mkN "nightmare" "nightmares";
lin nightmarish_A = compoundA (mkA "nightmarish");
lin nightshade_N = mkN "nightshade" ;
lin nightshirt_N = mkN "nightshirt" "nightshirts";
lin nightwear_N = mkN "nightwear" ;
lin nightwork_N = mkN "nightwork" ;
lin nihil_N = mkN "nihil" ;
lin nihilism_N = mkN "nihilism" ;
lin nihilist_N = mkN "nihilist" "nihilists";
lin nihilistic_A = compoundA (mkA "nihilistic");
lin nijmegen_PN = mkPN "Nijmegen";
lin nil_N = mkN "nil" ;
lin nilgai_N = mkN "nilgai" ;
lin nilotic_A = compoundA (mkA "nilotic");
lin nilpotent_A = mkA "nilpotent" ;
lin nim_N = mkN "nim" ;
lin nimble_A = mkA "nimble" "nimbler";
lin nimbleness_N = mkN "nimbleness" ;
lin nimblewill_N = mkN "nimblewill" ;
lin nimbus_N = mkN "nimbus" "nimbuses";
lin niminy_piminy_A = compoundA (mkA "niminy-piminy");
lin nimrod_PN = mkPN "Nimrod";
lin nincompoop_N = mkN "nincompoop" "nincompoops";
lin ninefold_A = compoundA (mkA "ninefold");
lin ninefold_Adv = mkAdv "ninefold";
lin ninepence_N = mkN "ninepence" "ninepences";
lin ninepenny_A = compoundA (mkA "ninepenny");
lin ninepin_N = mkN "ninepin" ;
lin ninepins_N = mkN "ninepins" "ninepins";
lin ninja_N = mkN "ninja" ;
lin ninjutsu_N = mkN "ninjutsu" ;
lin ninny_N = mkN "ninny" "ninnies";
lin ninon_N = mkN "ninon" ;
lin ninth_A = mkA "ninth" ;
lin ninth_N = mkN "ninth" ;
lin niobe_PN = mkPN "Niobe";
lin niobite_N = mkN "niobite" ;
lin niobium_N = mkN "niobium" ;
lin nip_N = mkN "nip" "nips";
lin nip_V = mkV "nip" "nips" "nipped" "nipped" "nipping";
lin nip_V2 = mkV2 (mkV "nip" "nips" "nipped" "nipped" "nipping");
lin nipa_N = mkN "nipa" ;
lin nipper_N = mkN "nipper" "nippers";
lin nipple_N = mkN "nipple" "nipples";
lin nipponese_A = compoundA (mkA "nipponese");
lin nippy_A = mkA "nippy" "nippier";
lin niqaabi_N = mkN "niqaabi" ;
lin niqab_N = mkN "niqab" ;
lin nirvana_N = mkN "nirvana" "nirvanas";
lin nisi_A = compoundA (mkA "nisi");
lin nissen_PN = mkPN "Nissen";
lin nit_N = mkN "nit" "nits";
lin nitpicker_N = mkN "nitpicker" ;
lin nitrate_N = mkN "nitrate" "nitrates";
lin nitrazepam_N = mkN "nitrazepam" ;
lin nitre_N = mkN "nitre" ;
lin nitric_A = compoundA (mkA "nitric");
lin nitride_N = mkN "nitride" ;
lin nitrification_N = mkN "nitrification" ;
lin nitrile_N = mkN "nitrile" ;
lin nitrite_N = mkN "nitrite" ;
lin nitrobacterium_N = mkN "nitrobacterium" ;
lin nitrobenzene_N = mkN "nitrobenzene" ;
lin nitrocalcite_N = mkN "nitrocalcite" ;
lin nitrochalk_N = mkN "nitrochalk" ;
lin nitrochloromethane_N = mkN "nitrochloromethane" ;
lin nitrofuran_N = mkN "nitrofuran" ;
lin nitrofurantoin_N = mkN "nitrofurantoin" ;
lin nitrogen_N = mkN "nitrogen" ;
lin nitrogenase_N = mkN "nitrogenase" ;
lin nitrogenous_A = mkA "nitrogenous" ;
lin nitroglycerin_N = mkN "nitroglycerin" ;
lin nitroglycerine_N = mkN "nitroglycerine" ;
lin nitrosobacteria_N = mkN "nitrosobacteria" ;
lin nitrous_A = compoundA (mkA "nitrous");
lin nitty_gritty_N = mkN "nitty-gritty" ;
lin nitwit_N = mkN "nitwit" "nitwits";
lin nitwitted_A = compoundA (mkA "nitwitted");
lin nix_N = mkN "nix" ;
lin nix_V2 = mkV2 (mkV "nix");
lin no_Interj = ss "no";
lin no_Quant = mkQuant "no" "no" "none" "none" ;
lin no_ball_N = mkN "no-ball" "no-balls";
lin no_fewer_than_AdN = mkAdN "no fewer than";
lin no_go_A = compoundA (mkA "no-go");
lin no_longer_AdV = mkAdV "no longer";
lin no_man's_land_N = mkN "no-man's-land" "no-man's-lands";
lin no_more_than_AdN = mkAdN "no more than";
lin noah_PN = mkPN "Noah";
lin nob_N = mkN "nob" "nobs";
lin nobble_V2 = mkV2 (mkV "nobble" "nobbles" "nobbled" "nobbled" "nobbling");
lin nobel_PN = mkPN "Nobel";
lin nobelium_N = mkN "nobelium" ;
lin nobility_N = mkN "nobility" ;
lin noble_A = mkA "noble" "nobler";
lin noble_N = mkN "noble" "nobles";
lin noble_mindedness_N = mkN "noble-mindedness" ;
lin nobleman_N = mkN masculine (mkN "nobleman" "noblemen");
lin noblesse_N = mkN "noblesse" "IRREG";
lin noblesse_oblige_N = mkN "noblesse oblige" ;
lin nobody_NP = mkNP "nobody" "nobody" "nobody's" singular P3 human;
lin nocent_A = mkA "nocent" ;
lin nociceptive_A = mkA "nociceptive" ;
lin noctambulist_N = mkN "noctambulist" "noctambulists";
lin noctiluca_N = mkN "noctiluca" ;
lin noctilucent_A = mkA "noctilucent" ;
lin nocturia_N = mkN "nocturia" ;
lin nocturnal_A = compoundA (mkA "nocturnal");
lin nocturne_N = mkN "nocturne" "nocturnes";
lin nod_N = mkN "nod" "nods";
lin nod_V = mkV "nod" "nods" "nodded" "nodded" "nodding";
lin nod_V2 = mkV2 (mkV "nod" "nods" "nodded" "nodded" "nodding");
lin noddle_N = mkN "noddle" "noddles";
lin node_N = mkN "node" "nodes";
lin nodular_A = compoundA (mkA "nodular");
lin nodulated_A = compoundA (mkA "nodulated");
lin nodule_N = mkN "nodule" "nodules";
lin nodulose_A = mkA "nodulose" ;
lin noel_N = mkN "noel" "noels";
lin noel_PN = mkPN "Noel";
lin nog_N = mkN "nog" ;
lin noggin_N = mkN "noggin" "noggins";
lin nogging_N = mkN "nogging" ;
lin nohow_Adv = mkAdv "nohow";
lin noise_N = mkN "noise" "noises";
lin noise_V2 = mkV2 (mkV "noise" "noises" "noised" "noised" "noising");
lin noiseless_A = compoundA (mkA "noiseless");
lin noiselessness_N = mkN "noiselessness" ;
lin noisemaker_N = mkN "noisemaker" ;
lin noisiness_N = mkN "noisiness" ;
lin noisome_A = compoundA (mkA "noisome");
lin noisy_A = mkA "noisy" "noisier";
lin nom_de_plume_N = mkN "nom de plume" "IRREG";
lin noma_N = mkN "noma" ;
lin nomad_N = mkN "nomad" "nomads";
lin nomadic_A = compoundA (mkA "nomadic");
lin nombril_N = mkN "nombril" ;
lin nomenclature_N = mkN "nomenclature" "nomenclatures";
lin nomenklatura_N = mkN "nomenklatura" ;
lin nomia_N = mkN "nomia" ;
lin nominal_A = compoundA (mkA "nominal");
lin nominalism_N = mkN "nominalism" ;
lin nominalist_N = mkN "nominalist" ;
lin nominalistic_A = mkA "nominalistic" ;
lin nominate_V2 = mkV2 (mkV "nominate" "nominates" "nominated" "nominated" "nominating");
lin nomination_N = mkN "nomination" "nominations";
lin nominative_A = compoundA (mkA "nominative");
lin nominative_N = mkN "nominative" "nominatives";
lin nominator_N = mkN "nominator" ;
lin nominee_N = mkN "nominee" "nominees";
lin nomogram_N = mkN "nomogram" ;
lin nomothetic_A = mkA "nomothetic" ;
lin non_compliance_N = mkN "non-compliance" ;
lin non_compos_mentis_A = compoundA (mkA "non compos mentis");
lin non_contentious_A = compoundA (mkA "non-contentious");
lin non_interference_N = mkN "non-interference" ;
lin non_sequitur_N = mkN "non sequitur" "non sequiturs";
lin non_skid_A = compoundA (mkA "non-skid");
lin non_u_A = compoundA (mkA "non-u");
lin nonabsorbency_N = mkN "nonabsorbency" ;
lin nonabsorbent_A = mkA "nonabsorbent" ;
lin nonacceptance_N = mkN "nonacceptance" ;
lin nonaccomplishment_N = mkN "nonaccomplishment" ;
lin nonaddictive_A = mkA "nonaddictive" ;
lin nonadhesive_A = mkA "nonadhesive" ;
lin nonadjacent_A = mkA "nonadjacent" ;
lin nonadsorbent_A = mkA "nonadsorbent" ;
lin nonage_N = mkN "nonage" ;
lin nonagenarian_A = compoundA (mkA "nonagenarian");
lin nonagenarian_N = mkN "nonagenarian" "nonagenarians";
lin nonaggression_N = mkN "nonaggression" ;
lin nonagon_N = mkN "nonagon" ;
lin nonalcoholic_A = mkA "nonalcoholic" ;
lin nonaligned_A = mkA "nonaligned" ;
lin nonalignment_N = mkN "nonalignment" ;
lin nonallele_N = mkN "nonallele" ;
lin nonappearance_N = mkN "nonappearance" ;
lin nonappointive_A = mkA "nonappointive" ;
lin nonarbitrable_A = mkA "nonarbitrable" ;
lin nonarbitrary_A = mkA "nonarbitrary" ;
lin nonarboreal_A = mkA "nonarboreal" ;
lin nonassertive_A = mkA "nonassertive" ;
lin nonassociative_A = mkA "nonassociative" ;
lin nonastringent_A = mkA "nonastringent" ;
lin nonattendance_N = mkN "nonattendance" ;
lin nonautonomous_A = mkA "nonautonomous" ;
lin nonbearing_A = mkA "nonbearing" ;
lin nonbeing_N = mkN "nonbeing" ;
lin nonbelligerent_A = mkA "nonbelligerent" ;
lin noncaloric_A = mkA "noncaloric" ;
lin noncandidate_N = mkN "noncandidate" ;
lin noncarbonated_A = mkA "noncarbonated" ;
lin noncausative_A = mkA "noncausative" ;
lin nonce_N = mkN "nonce" "nonces";
lin nonce_word_N = mkN "nonce-word" "nonce-words";
lin noncellular_A = mkA "noncellular" ;
lin nonchalance_N = mkN "nonchalance" ;
lin nonchalant_A = compoundA (mkA "nonchalant");
lin noncivilized_A = mkA "noncivilized" ;
lin nonclassical_A = mkA "nonclassical" ;
lin noncollapsible_A = mkA "noncollapsible" ;
lin noncolumned_A = mkA "noncolumned" ;
lin noncombatant_A = mkA "noncombatant" ;
lin noncombatant_N = mkN "noncombatant" "noncombatants";
lin noncombinative_A = mkA "noncombinative" ;
lin noncombining_A = mkA "noncombining" ;
lin noncombustible_A = mkA "noncombustible" ;
lin noncommercial_A = mkA "noncommercial" ;
lin noncommissioned_A = compoundA (mkA "noncommissioned");
lin noncommittal_A = compoundA (mkA "noncommittal");
lin noncommunicable_A = mkA "noncommunicable" ;
lin noncompetitive_A = mkA "noncompetitive" ;
lin noncomprehensive_A = mkA "noncomprehensive" ;
lin nonconductive_A = mkA "nonconductive" ;
lin nonconductor_N = mkN "nonconductor" "nonconductors";
lin nonconforming_A = mkA "nonconforming" ;
lin nonconformism_N = mkN "nonconformism" ;
lin nonconformist_A = mkA "nonconformist" ;
lin nonconformist_N = mkN "nonconformist" "nonconformists";
lin nonconformity_N = mkN "nonconformity" ;
lin nonconscious_A = mkA "nonconscious" ;
lin noncontentious_A = mkA "noncontentious" ;
lin nonconvergent_A = mkA "nonconvergent" ;
lin noncritical_A = mkA "noncritical" ;
lin noncrucial_A = mkA "noncrucial" ;
lin noncrystalline_A = mkA "noncrystalline" ;
lin noncurrent_A = mkA "noncurrent" ;
lin noncyclic_A = mkA "noncyclic" ;
lin nondeductible_A = mkA "nondeductible" ;
lin nondenominational_A = mkA "nondenominational" ;
lin nondescript_A = compoundA (mkA "nondescript");
lin nondescript_N = mkN "nondescript" "nondescripts";
lin nondevelopment_N = mkN "nondevelopment" ;
lin nondigestible_A = mkA "nondigestible" ;
lin nondisjunction_N = mkN "nondisjunction" ;
lin nondisposable_A = mkA "nondisposable" ;
lin nondriver_N = mkN "nondriver" ;
lin none_A = mkA "none" ;
lin none_Adv = mkAdv "none";
lin nonechoic_A = mkA "nonechoic" ;
lin noneffervescent_A = mkA "noneffervescent" ;
lin nonelective_A = mkA "nonelective" ;
lin nonentity_N = mkN "nonentity" "nonentities";
lin nonenzymatic_A = mkA "nonenzymatic" ;
lin nonequivalence_N = mkN "nonequivalence" ;
lin nonequivalent_A = mkA "nonequivalent" ;
lin nones_N = mkN "nones" ;
lin nonesuch_N = mkN "nonesuch" "IRREG";
lin nonevent_N = mkN "nonevent" "nonevents";
lin nonexempt_A = mkA "nonexempt" ;
lin nonexistence_N = mkN "nonexistence" ;
lin nonexistent_A = mkA "nonexistent" ;
lin nonexploratory_A = mkA "nonexploratory" ;
lin nonexplosive_A = mkA "nonexplosive" ;
lin nonextant_A = mkA "nonextant" ;
lin nonextensile_A = mkA "nonextensile" ;
lin nonfat_A = mkA "nonfat" ;
lin nonfatal_A = mkA "nonfatal" ;
lin nonfeasance_N = mkN "nonfeasance" ;
lin nonfiction_N = mkN "nonfiction" ;
lin nonfictional_A = mkA "nonfictional" ;
lin nonfinancial_A = mkA "nonfinancial" ;
lin nonfissile_A = mkA "nonfissile" ;
lin nonfissionable_A = mkA "nonfissionable" ;
lin nonflammable_A = compoundA (mkA "nonflammable");
lin nonfunctional_A = mkA "nonfunctional" ;
lin nonglutinous_A = mkA "nonglutinous" ;
lin nongranular_A = mkA "nongranular" ;
lin nongregarious_A = mkA "nongregarious" ;
lin nonhairy_A = mkA "nonhairy" ;
lin nonharmonic_A = mkA "nonharmonic" ;
lin nonhereditary_A = mkA "nonhereditary" ;
lin nonhierarchical_A = mkA "nonhierarchical" ;
lin nonhuman_A = mkA "nonhuman" ;
lin nonimitative_A = mkA "nonimitative" ;
lin nonindulgent_A = mkA "nonindulgent" ;
lin nonindustrial_A = mkA "nonindustrial" ;
lin noninfectious_A = mkA "noninfectious" ;
lin noninflammatory_A = mkA "noninflammatory" ;
lin noninheritable_A = mkA "noninheritable" ;
lin noninstitutional_A = mkA "noninstitutional" ;
lin noninstitutionalized_A = mkA "noninstitutionalized" ;
lin nonintegrated_A = mkA "nonintegrated" ;
lin nonintellectual_A = mkA "nonintellectual" ;
lin noninterchangeable_A = mkA "noninterchangeable" ;
lin nonintervention_N = mkN "nonintervention" ;
lin noninvasive_A = mkA "noninvasive" ;
lin nonionic_A = mkA "nonionic" ;
lin nonionized_A = mkA "nonionized" ;
lin nonjudgmental_A = mkA "nonjudgmental" ;
lin nonkosher_A = mkA "nonkosher" ;
lin nonlethal_A = mkA "nonlethal" ;
lin nonlexical_A = mkA "nonlexical" ;
lin nonlinear_A = mkA "nonlinear" ;
lin nonlinguistic_A = mkA "nonlinguistic" ;
lin nonmagnetic_A = mkA "nonmagnetic" ;
lin nonmandatory_A = mkA "nonmandatory" ;
lin nonmechanical_A = mkA "nonmechanical" ;
lin nonmechanistic_A = mkA "nonmechanistic" ;
lin nonmember_N = mkN "nonmember" ;
lin nonmetal_N = mkN "nonmetal" ;
lin nonmetallic_A = mkA "nonmetallic" ;
lin nonmetamorphic_A = mkA "nonmetamorphic" ;
lin nonmigratory_A = mkA "nonmigratory" ;
lin nonmodern_A = mkA "nonmodern" ;
lin nonmonotonic_A = mkA "nonmonotonic" ;
lin nonmoral_A = compoundA (mkA "nonmoral");
lin nonmotile_A = mkA "nonmotile" ;
lin nonmoving_A = mkA "nonmoving" ;
lin nonnative_A = mkA "nonnative" ;
lin nonnatural_A = mkA "nonnatural" ;
lin nonnegative_A = mkA "nonnegative" ;
lin nonnomadic_A = mkA "nonnomadic" ;
lin nonnormative_A = mkA "nonnormative" ;
lin nonobservance_N = mkN "nonobservance" ;
lin nonobservant_A = mkA "nonobservant" ;
lin nonoccurrence_N = mkN "nonoccurrence" ;
lin nonopening_A = mkA "nonopening" ;
lin nonoperational_A = mkA "nonoperational" ;
lin nonoscillatory_A = mkA "nonoscillatory" ;
lin nonparallel_A = mkA "nonparallel" ;
lin nonparametric_A = mkA "nonparametric" ;
lin nonpareil_A = compoundA (mkA "nonpareil");
lin nonpareil_N = mkN "nonpareil" "nonpareils";
lin nonparticipant_N = mkN "nonparticipant" ;
lin nonparticulate_A = mkA "nonparticulate" ;
lin nonpartisan_A = mkA "nonpartisan" ;
lin nonpartisan_N = mkN "nonpartisan" ;
lin nonpasserine_A = mkA "nonpasserine" ;
lin nonpayment_N = mkN "nonpayment" "nonpayments";
lin nonperson_N = mkN "nonperson" ;
lin nonpersonal_A = mkA "nonpersonal" ;
lin nonphotosynthetic_A = mkA "nonphotosynthetic" ;
lin nonplus_V2 = mkV2 (variants {mkV "nonplus" "nonpluses" "nonplussed" "nonplussed" "nonplussing";
                                 mkV "nonplus" "nonpluses" "nonplused"  "nonplused"  "nonplusing"});
lin nonpoisonous_A = mkA "nonpoisonous" ;
lin nonpolitical_A = mkA "nonpolitical" ;
lin nonporous_A = mkA "nonporous" ;
lin nonpregnant_A = mkA "nonpregnant" ;
lin nonprehensile_A = mkA "nonprehensile" ;
lin nonproductive_A = mkA "nonproductive" ;
lin nonprofessional_A = mkA "nonprofessional" ;
lin nonprofit_A = mkA "nonprofit" ;
lin nonprognosticative_A = mkA "nonprognosticative" ;
lin nonproliferation_N = mkN "nonproliferation" ;
lin nonproprietary_A = mkA "nonproprietary" ;
lin nonpsychoactive_A = mkA "nonpsychoactive" ;
lin nonpublic_A = mkA "nonpublic" ;
lin nonpurulent_A = mkA "nonpurulent" ;
lin nonracial_A = mkA "nonracial" ;
lin nonradioactive_A = mkA "nonradioactive" ;
lin nonrandom_A = mkA "nonrandom" ;
lin nonrational_A = mkA "nonrational" ;
lin nonreader_N = mkN "nonreader" ;
lin nonreciprocal_A = mkA "nonreciprocal" ;
lin nonreciprocating_A = mkA "nonreciprocating" ;
lin nonrecreational_A = mkA "nonrecreational" ;
lin nonreflective_A = mkA "nonreflective" ;
lin nonrepetitive_A = mkA "nonrepetitive" ;
lin nonrepresentational_A = mkA "nonrepresentational" ;
lin nonrepresentative_A = mkA "nonrepresentative" ;
lin nonresident_A = compoundA (mkA "nonresident");
lin nonresident_N = mkN "nonresident" ;
lin nonresidential_A = mkA "nonresidential" ;
lin nonresilient_A = mkA "nonresilient" ;
lin nonresinous_A = mkA "nonresinous" ;
lin nonresistance_N = mkN "nonresistance" ;
lin nonresistant_A = mkA "nonresistant" ;
lin nonrestrictive_A = mkA "nonrestrictive" ;
lin nonreticulate_A = mkA "nonreticulate" ;
lin nonretractile_A = mkA "nonretractile" ;
lin nonreturnable_A = mkA "nonreturnable" ;
lin nonreversible_A = mkA "nonreversible" ;
lin nonrhythmic_A = mkA "nonrhythmic" ;
lin nonrigid_A = mkA "nonrigid" ;
lin nonruminant_A = mkA "nonruminant" ;
lin nonsectarian_A = mkA "nonsectarian" ;
lin nonsense_N = mkN "nonsense" "nonsenses";
lin nonsensical_A = compoundA (mkA "nonsensical");
lin nonsensitive_A = mkA "nonsensitive" ;
lin nonsignificant_A = mkA "nonsignificant" ;
lin nonskid_A = mkA "nonskid" ;
lin nonslip_A = mkA "nonslip" ;
lin nonslippery_A = mkA "nonslippery" ;
lin nonsmoker_N = mkN "nonsmoker" "nonsmokers";
lin nonspatial_A = mkA "nonspatial" ;
lin nonspeaking_A = mkA "nonspeaking" ;
lin nonspecific_A = mkA "nonspecific" ;
lin nonspecifically_Adv = mkAdv "nonspecifically" ;
lin nonspherical_A = mkA "nonspherical" ;
lin nonstandard_A = mkA "nonstandard" ;
lin nonstarter_N = mkN "nonstarter" "nonstarters";
lin nonsteroid_N = mkN "nonsteroid" ;
lin nonsteroidal_A = mkA "nonsteroidal" ;
lin nonstick_A = compoundA (mkA "nonstick");
lin nonstop_A = compoundA (mkA "nonstop");
lin nonstop_Adv = mkAdv "nonstop";
lin nonstructural_A = mkA "nonstructural" ;
lin nonsubmersible_A = mkA "nonsubmersible" ;
lin nonsuch_N = mkN "nonsuch" "IRREG";
lin nonsuppurative_A = mkA "nonsuppurative" ;
lin nonsurgical_A = mkA "nonsurgical" ;
lin nonsyllabic_A = mkA "nonsyllabic" ;
lin nonsynchronous_A = mkA "nonsynchronous" ;
lin nonsynthetic_A = mkA "nonsynthetic" ;
lin nontaxable_A = mkA "nontaxable" ;
lin nontechnical_A = mkA "nontechnical" ;
lin nontelescopic_A = mkA "nontelescopic" ;
lin nonterritorial_A = mkA "nonterritorial" ;
lin nonthermal_A = mkA "nonthermal" ;
lin nontoxic_A = mkA "nontoxic" ;
lin nontraditional_A = mkA "nontraditional" ;
lin nontransferable_A = mkA "nontransferable" ;
lin nontranslational_A = mkA "nontranslational" ;
lin nontricyclic_N = mkN "nontricyclic" ;
lin nonturbulent_A = mkA "nonturbulent" ;
lin nonuniformity_N = mkN "nonuniformity" ;
lin nonunion_A = compoundA (mkA "nonunion");
lin nonuple_A = mkA "nonuple" ;
lin nonvenomous_A = mkA "nonvenomous" ;
lin nonverbal_A = mkA "nonverbal" ;
lin nonviable_A = mkA "nonviable" ;
lin nonviolence_N = mkN "nonviolence" ;
lin nonviolent_A = mkA "nonviolent" ;
lin nonvisual_A = mkA "nonvisual" ;
lin nonvolatile_A = mkA "nonvolatile" ;
lin nonwashable_A = mkA "nonwashable" ;
lin nonwoody_A = mkA "nonwoody" ;
lin nonworker_N = mkN "nonworker" ;
lin noodle_N = mkN "noodle" "noodles";
lin nook_N = mkN "nook" "nooks";
lin noon_N = mkN "noon" ;
lin noonday_A = compoundA (mkA "noonday");
lin noontide_N = mkN "noontide" ;
lin noose_N = mkN "noose" "nooses";
lin noose_V2 = mkV2 (mkV "noose" "nooses" "noosed" "noosed" "noosing");
lin nopal_N = mkN "nopal" ;
lin nope_Interj = ss "nope";
lin nor'_east_Adv = mkAdv "nor'-east";
lin nor'_east_N = mkN "nor'-east" ;
lin nor'_nor'_east_Adv = mkAdv "nor'-nor'-east";
lin nor'_nor'_east_N = mkN "nor'-nor'-east" ;
lin nor'_nor'_west_Adv = mkAdv "nor'-nor'-west";
lin nor'_nor'_west_N = mkN "nor'-nor'-west" ;
lin nor'_west_Adv = mkAdv "nor'-west";
lin nor'_west_N = mkN "nor'-west" ;
lin nor_Conj = mkConj "nor";
lin nora_PN = mkPN "Nora";
lin noradrenaline_N = mkN "noradrenaline" ;
lin nordic_A = compoundA (mkA "nordic");
lin nordic_N = mkN "nordic" "nordics";
lin norethindrone_N = mkN "norethindrone" ;
lin norethynodrel_N = mkN "norethynodrel" ;
lin norfolk_PN = mkPN "Norfolk";
lin norgestrel_N = mkN "norgestrel" ;
lin noria_N = mkN "noria" ;
lin norm_N = mkN "norm" "norms";
lin normal_A = compoundA (mkA "normal");
lin normal_N = mkN "normal" ;
lin normalcy_N = mkN "normalcy" ;
lin normality_N = mkN "normality" ;
lin normalization_N = mkN (variants {"normalization"; "normalisation"});
lin normalize_V2 = mkV2 (mkV "normalize" "normalizes" "normalized" "normalized" "normalizing");
lin normalizer_N = mkN "normalizer" ;
lin norman_A = compoundA (mkA "norman");
lin norman_N = mkN "norman" "normans";
lin norman_PN = mkPN "Norman";
lin normanton_PN = mkPN "Normanton";
lin normantown_PN = mkPN "Normantown";
lin normative_A = compoundA (mkA "normative");
lin normotensive_A = mkA "normotensive" ;
lin normothermia_N = mkN "normothermia" ;
lin norse_A = compoundA (mkA "norse");
lin norse_N = mkN "norse" ;
lin north_A = mkA "North";
lin north_Adv = mkAdv "North";
lin north_N = mkN "North" ;
lin north_northeast_Adv = mkAdv "north-northeast";
lin north_northeast_N = mkN "north-northeast" ;
lin north_northwest_Adv = mkAdv "north-northwest";
lin north_northwest_N = mkN "north-northwest" ;
lin north_walsham_PN = mkPN "North walsham";
lin northallerton_PN = mkPN "Northallerton";
lin northam_PN = mkPN "Northam";
lin northampton_PN = mkPN "Northampton";
lin northamptonshire_PN = mkPN "Northamptonshire";
lin northbound_A = mkA "northbound" ;
lin northeast_Adv = mkAdv "northeast";
lin northeast_N = mkN "northeast" ;
lin northeaster_N = mkN "northeaster" "northeasters";
lin northeasterly_A = compoundA (mkA "northeasterly");
lin northeastern_A = compoundA (mkA "northeastern");
lin northeastward_A = mkA "northeastward" ;
lin northeastward_Adv = mkAdv "northeastward" ;
lin northerly_A = compoundA (mkA "northerly");
lin northerly_Adv = mkAdv "northerly";
lin northern_A = compoundA (mkA "Northern");
lin northerner_N = mkN "northerner" "northerners";
lin northernmost_A = compoundA (mkA "northernmost");
lin northernness_N = mkN "northernness" ;
lin northland_N = mkN "northland" ;
lin northman_N = mkN masculine (mkN "northman" "northmen");
lin northumberland_PN = mkPN "Northumberland";
lin northwards_Adv = mkAdv "northwards";
lin northwest_Adv = mkAdv "northwest";
lin northwest_N = mkN "northwest" ;
lin northwester_N = mkN "northwester" "northwesters";
lin northwesterly_A = compoundA (mkA "northwesterly");
lin northwestern_A = compoundA (mkA "northwestern");
lin northwestward_A = mkA "northwestward" ;
lin northwestward_Adv = mkAdv "northwestward" ;
lin northwich_PN = mkPN "Northwich";
lin norton_PN = mkPN "Norton";
lin nortriptyline_N = mkN "nortriptyline" ;
lin norway_PN = mkPN "Norway";
lin norwegian_A = compoundA (mkA "norwegian");
lin norwegian_N = mkN "norwegian" "norwegians";
lin norwich_PN = mkPN "Norwich";
lin nose_N = mkN "nose" "noses";
lin nose_V = mkV "nose" "noses" "nosed" "nosed" "nosing";
lin nose_V2 = mkV2 (mkV "nose" "noses" "nosed" "nosed" "nosing");
lin nose_flute_N = mkN "nose-flute" "nose-flutes";
lin nose_wheel_N = mkN "nose-wheel" "nose-wheels";
lin nosebag_N = mkN "nosebag" "nosebags";
lin noseband_N = mkN "noseband" ;
lin nosebleed_N = mkN "nosebleed" "nosebleeds";
lin nosecone_N = mkN "nosecone" "nosecones";
lin nosedive_N = mkN "nosedive" "nosedives";
lin nosedive_V = mkV "nosedive" "nosedives" "nosedived" "nosedived" "nosediving";
lin nosegay_N = mkN "nosegay" "nosegays";
lin noseless_A = mkA "noseless" ;
lin nosepiece_N = mkN "nosepiece" ;
lin nosering_N = mkN "nosering" "noserings";
lin nosewheel_N = mkN "nosewheel" ;
lin nosey_A = compoundA (mkA "nosey");
lin nosh_N = mkN "nosh" ;
lin nosh_V = mkV "nosh" "noshes" "noshed" "noshed" "noshing";
lin nosh_up_N = mkN "nosh-up" "nosh-ups";
lin nosher_N = mkN "nosher" ;
lin nosiness_N = mkN "nosiness" ;
lin nosocomial_A = mkA "nosocomial" ;
lin nosohusial_A = mkA "nosohusial" ;
lin nosology_N = mkN "nosology" ;
lin nostalgia_N = mkN "nostalgia" ;
lin nostalgic_A = compoundA (mkA "nostalgic");
lin nostalgically_Adv = mkAdv "nostalgically";
lin nostoc_N = mkN "nostoc" ;
lin nostril_N = mkN "nostril" "nostrils";
lin nostrum_N = mkN "nostrum" "nostrums";
lin nosy_A = mkA "nosy" "nosier";
lin notability_N = mkN "notability" "notabilities";
lin notable_A = compoundA (mkA "notable");
lin notable_N = mkN "notable" "notables";
lin notary_N = mkN "notary" "notaries";
lin notation_N = mkN "notation" "notations";
lin notch_N = mkN "notch" "notches";
lin notch_V2 = mkV2 (mkV "notch" "notches" "notched" "notched" "notching");
lin note_N = mkN "note" "notes";
lin note_V = mkV "note";
lin note_V2 = mkV2 (mkV "note" "notes" "noted" "noted" "noting");
lin note_VS = mkVS (mkV "note");
lin notebook_N = mkN "notebook" "notebooks";
lin notecase_N = mkN "notecase" "notecases";
lin notepad_N = mkN "notepad" ;
lin notepaper_N = mkN "notepaper" ;
lin noteworthy_A = compoundA (mkA "noteworthy");
lin nothing_Adv = mkAdv "nothing" ;
lin nothing_N = mkN "nothing" ;
lin nothing_NP = regNP "nothing" singular;
lin nothingness_N = mkN "nothingness" ;
lin nothings_N = mkN "nothings" ;
lin nothosaur_N = mkN "nothosaur" ;
lin notice_N = mkN "notice" "notices";
lin notice_V = mkV "notice" "notices" "noticed" "noticed" "noticing";
lin notice_V2 = mkV2 (mkV "notice" "notices" "noticed" "noticed" "noticing");
lin notice_VS = mkVS (mkV "notice" "notices" "noticed" "noticed" "noticing");
lin notice_board_N = mkN "notice-board" "notice-boards";
lin noticeable_A = compoundA (mkA "noticeable");
lin noticer_N = mkN "noticer" ;
lin notifiable_A = compoundA (mkA "notifiable");
lin notification_N = mkN "notification" "notifications";
lin notify_V2 = mkV2 (mkV "notify" "notifies" "notified" "notified" "notifying");
lin notion_N = mkN "notion" "notions";
lin notional_A = compoundA (mkA "notional");
lin notochord_N = mkN "notochord" ;
lin notoriety_N = mkN "notoriety" ;
lin notorious_A = compoundA (mkA "notorious");
lin notornis_N = mkN "notornis" ;
lin nottingham_PN = mkPN "Nottingham";
lin nottinghamshire_PN = mkPN "Nottinghamshire";
lin notwithstanding_Adv = mkAdv "notwithstanding";
lin notwithstanding_Prep = mkPrep "notwithstanding";
lin nougat_N = mkN "nougat" "nougats";
lin nought_N = mkN "nought" "noughts";
lin noumenon_N = mkN "noumenon" ;
lin noun_N = mkN "noun" "nouns";
lin nourish_V2 = mkV2 (mkV "nourish" "nourishes" "nourished" "nourished" "nourishing");
lin nourishment_N = mkN "nourishment" ;
lin nous_N = mkN "nous" ;
lin nouveau_riche_N = mkN "nouveau riche" "IRREG";
lin nov_PN = mkPN "Nov";
lin nova_N = mkN "nova" "novas";
lin nova_scotia_PN = mkPN "Nova scotia";
lin novara_PN = mkPN "Novara";
lin novation_N = mkN "novation" ;
lin novel_A = compoundA (mkA "novel");
lin novel_N = mkN "novel" "novels";
lin novelette_N = mkN "novelette" "novelettes";
lin novelist_N = mkN "novelist" "novelists";
lin novelization_N = mkN "novelization" ;
lin novelty_N = mkN "novelty" "novelties";
lin november_N = mkN "November" "Novembers";
lin november_PN = mkPN "November";
lin novena_N = mkN "novena" ;
lin novice_N = mkN "novice" "novices";
lin noviciate_N = mkN "noviciate" "noviciates";
lin novillada_N = mkN "novillada" ;
lin novillero_N = mkN "novillero" ;
lin novitiate_N = mkN "novitiate" "novitiates";
lin novobiocin_N = mkN "novobiocin" ;
lin novokuznetsk_PN = mkPN "Novokuznetsk";
lin novosibirsk_PN = mkPN "Novosibirsk";
lin now_AdV = mkAdV "now";
lin now_Adv = mkAdv "now";
lin now_N = mkN "now" ;
lin nowadays_Adv = mkAdv "nowadays";
lin nowhere_Adv = mkAdv "nowhere";
lin nowhere_N = mkN "nowhere" ;
lin nowise_Adv = mkAdv "nowise";
lin noxious_A = compoundA (mkA "noxious");
lin noxiousness_N = mkN "noxiousness" ;
lin nozzle_N = mkN "nozzle" "nozzles";
lin nr_PN = mkPN "Nr";
lin nspcc_N = mkN "nspcc" ;
lin nt_N = mkN "nt" ;
lin nth_A = mkA "nth" ;
lin nu_N = mkN "nu" ;
lin nuance_N = mkN "nuance" "nuances";
lin nub_N = mkN "nub" "nubs";
lin nubbin_N = mkN "nubbin" ;
lin nubile_A = compoundA (mkA "nubile");
lin nucellus_N = mkN "nucellus" ;
lin nuclear_A = compoundA (mkA "nuclear");
lin nuclease_N = mkN "nuclease" ;
lin nucleated_A = mkA "nucleated" ;
lin nucleic_A = compoundA (mkA "nucleic");
lin nucleolus_N = mkN "nucleolus" ;
lin nucleon_N = mkN "nucleon" ;
lin nucleoplasm_N = mkN "nucleoplasm" ;
lin nucleoprotein_N = mkN "nucleoprotein" ;
lin nucleoside_N = mkN "nucleoside" ;
lin nucleosynthesis_N = mkN "nucleosynthesis" ;
lin nucleotide_N = mkN "nucleotide" ;
lin nucleus_N = mkN "nucleus" "nuclei" {- FIXME: guessed plural form -};
lin nude_A = compoundA (mkA "nude");
lin nude_N = mkN "nude" "nudes";
lin nudge_N = mkN "nudge" "nudges";
lin nudge_V2 = mkV2 (mkV "nudge" "nudges" "nudged" "nudged" "nudging");
lin nudger_N = mkN "nudger" ;
lin nudism_N = mkN "nudism" ;
lin nudist_N = mkN "nudist" "nudists";
lin nudity_N = mkN "nudity" ;
lin nudnik_N = mkN "nudnik" ;
lin nugatory_A = compoundA (mkA "nugatory");
lin nugget_N = mkN "nugget" "nuggets";
lin nuisance_N = mkN "nuisance" "nuisances";
lin null_A = compoundA (mkA "null");
lin nullah_N = mkN "nullah" ;
lin nullification_N = mkN "nullification" ;
lin nullifier_N = mkN "nullifier" ;
lin nullify_V2 = mkV2 (mkV "nullify" "nullifies" "nullified" "nullified" "nullifying");
lin nullipara_N = mkN "nullipara" ;
lin nullity_N = mkN "nullity" ;
lin numb_A = compoundA (mkA "numb");
lin numb_V2 = mkV2 (mkV "numb" "numbs" "numbed" "numbed" "numbing");
lin numbat_N = mkN "numbat" ;
lin number_N = mkN "number" "numbers";
lin number_V2 = mkV2 (mkV "number" "numbers" "numbered" "numbered" "numbering");
lin numberless_A = compoundA (mkA "numberless");
lin numberplate_N = mkN "numberplate" "numberplates";
lin numbing_A = mkA "numbing" ;
lin numbness_N = mkN "numbness" ;
lin numdah_N = mkN "numdah" ;
lin numen_N = mkN "numen" ;
lin numerable_A = compoundA (mkA "numerable");
lin numeracy_N = mkN "numeracy" ;
lin numeral_A = compoundA (mkA "numeral");
lin numeral_N = mkN "numeral" "numerals";
lin numerate_A = compoundA (mkA "numerate");
lin numeration_N = mkN "numeration" "numerations";
lin numerator_N = mkN "numerator" "numerators";
lin numeric_A = compoundA (mkA "numeric");
lin numerical_A = compoundA (mkA "numerical");
lin numerological_A = mkA "numerological" ;
lin numerologistMasc_N = mkN masculine (mkN "numerologist");
lin numerologistFem_N = mkN feminine (mkN "numerologist");
lin numerology_N = mkN "numerology" ;
lin numerous_A = compoundA (mkA "numerous");
lin numerousness_N = mkN "numerousness" ;
lin numinous_A = compoundA (mkA "numinous");
lin numismatics_N = mkN "numismatics" "numismatics";
lin numismatist_N = mkN human (mkN "numismatist" "numismatists");
lin nummulite_N = mkN "nummulite" ;
lin numskull_N = mkN "numskull" "numskulls";
lin nun_N = mkN feminine (mkN "nun" "nuns");
lin nuncio_N = mkN "nuncio" "nuncios";
lin nuneaton_PN = mkPN "Nuneaton";
lin nunnery_N = mkN "nunnery" "nunneries";
lin nuptial_A = compoundA (mkA "nuptial");
lin nurenburg_PN = mkPN "Nurenburg";
lin nurse_N = mkN "nurse" "nurses";
lin nurse_V2 = mkV2 (mkV "nurse" "nurses" "nursed" "nursed" "nursing");
lin nurseling_N = mkN "nurseling" "nurselings";
lin nursemaid_N = mkN "nursemaid" "nursemaids";
lin nurser_N = mkN "nurser" ;
lin nursery_N = mkN "nursery" "nurseries";
lin nurseryman_N = mkN masculine (mkN "nurseryman" "nurserymen");
lin nursing_N = mkN "nursing" ;
lin nursing_home_N = mkN "nursing-home" "nursing-homes";
lin nursling_N = mkN "nursling" "nurslings";
lin nurtural_A = mkA "nurtural" ;
lin nurturance_N = mkN "nurturance" ;
lin nurturant_A = mkA "nurturant" ;
lin nurture_N = mkN "nurture" ;
lin nurture_V2 = mkV2 (mkV "nurture" "nurtures" "nurtured" "nurtured" "nurturing");
lin nut_N = mkN "nut" "nuts";
lin nut_V = mkV "nut" "nuts" "nutted" "nutted" "nutting";
lin nut_brown_A = compoundA (mkA "nut-brown");
lin nut_butter_N = mkN "nut-butter" "nut-butters";
lin nutation_N = mkN "nutation" ;
lin nutbrown_A = mkA "nutbrown" ;
lin nutcracker_N = mkN "nutcracker" ;
lin nutgrass_N = mkN "nutgrass" ;
lin nuthatch_N = mkN "nuthatch" ;
lin nuthouse_N = mkN "nuthouse" "nuthouses";
lin nutlet_N = mkN "nutlet" ;
lin nutlike_A = mkA "nutlike" ;
lin nutmeg_N = mkN "nutmeg" "nutmegs";
lin nutria_N = mkN "nutria" ;
lin nutrient_A = compoundA (mkA "nutrient");
lin nutrient_N = mkN "nutrient" "nutrients";
lin nutriment_N = mkN "nutriment" "nutriments";
lin nutrition_N = mkN "nutrition" ;
lin nutritional_A = compoundA (mkA "nutritional");
lin nutritious_A = compoundA (mkA "nutritious");
lin nutritiousness_N = mkN "nutritiousness" ;
lin nutritive_A = compoundA (mkA "nutritive");
lin nuts_A = compoundA (mkA "nuts");
lin nutshell_N = mkN "nutshell" "nutshells";
lin nutter_N = mkN "nutter" ;
lin nutty_A = mkA "nutty" "nuttier";
lin nuzzle_V = mkV "nuzzle" "nuzzles" "nuzzled" "nuzzled" "nuzzling";
lin nuzzle_V2 = mkV2 (mkV "nuzzle" "nuzzles" "nuzzled" "nuzzled" "nuzzling");
lin nyala_N = mkN "nyala" ;
lin nybble_N = mkN "nybble" ;
lin nyctalopia_N = mkN "nyctalopia" ;
lin nyctophobia_N = mkN "nyctophobia" ;
lin nylon_N = mkN "nylon" "nylons";
lin nylons_N = mkN "nylons" ;
lin nymph_N = mkN "nymph" "nymphs";
lin nymphalid_N = mkN "nymphalid" ;
lin nymphet_N = mkN "nymphet" "nymphets";
lin nympho_N = mkN "nympho" "nymphos";
lin nympholepsy_N = mkN "nympholepsy" ;
lin nympholept_N = mkN "nympholept" ;
lin nymphomania_N = mkN "nymphomania" ;
lin nymphomaniac_A = compoundA (mkA "nymphomaniac");
lin nymphomaniac_N = mkN "nymphomaniac" "nymphomaniacs";
lin nymphomaniacal_A = mkA "nymphomaniacal" ;
lin nystagmus_N = mkN "nystagmus" ;
lin nystatin_N = mkN "nystatin" ;
lin o'er_Adv = mkAdv "o'er";
lin o_level_N = mkN "o-level" "o-levels";
lin oaf_N = mkN "oaf" "oafs";
lin oafish_A = compoundA (mkA "oafish");
lin oak_N = mkN "oak" "oaks";
lin oak_apple_N = mkN "oak-apple" "oak-apples";
lin oaken_A = compoundA (mkA "oaken");
lin oakengates_PN = mkPN "Oakengates";
lin oakum_N = mkN "oakum" ;
lin oap_N = mkN "OAP" "OAP's" ;
lin oar_N = mkN "oar" "oars";
lin oarfish_N = mkN "oarfish" ;
lin oarsman_N = mkN masculine (mkN "oarsman" "oarsmen");
lin oarsmanship_N = mkN "oarsmanship" ;
lin oarswoman_N = mkN feminine (mkN "oarswoman" "oarswomen");
lin oasis_N = mkN "oasis" "oases";
lin oast_N = mkN "oast" "oasts";
lin oasthouse_N = mkN "oasthouse" "oasthouses";
lin oat_N = mkN "oat" "oats";
lin oatcake_N = mkN "oatcake" "oatcakes";
lin oaten_A = mkA "oaten" ;
lin oath_N = mkN "oath" "oaths";
lin oatmeal_N = mkN "oatmeal" ;
lin oau_N = mkN "oau" ;
lin ob_PN = mkPN "Ob";
lin oban_PN = mkPN "Oban";
lin obbligato_N = mkN "obbligato" "obbligatos";
lin obduracy_N = mkN "obduracy" ;
lin obdurate_A = compoundA (mkA "obdurate");
lin obeah_N = mkN "obeah" ;
lin obeche_N = mkN "obeche" ;
lin obedience_N = mkN "obedience" ;
lin obedient_A = compoundA (mkA "obedient");
lin obeisance_N = mkN "obeisance" "obeisances";
lin obelion_N = mkN "obelion" ;
lin obelisk_N = mkN "obelisk" "obelisks";
lin oberhausen_PN = mkPN "Oberhausen";
lin obese_A = compoundA (mkA "obese");
lin obesity_N = mkN "obesity" ;
lin obey_V = mkV "obey" "obeys" "obeyed" "obeyed" "obeying";
lin obey_V2 = mkV2 (mkV "obey" "obeys" "obeyed" "obeyed" "obeying");
lin obfuscate_V2 = mkV2 (mkV "obfuscate" "obfuscates" "obfuscated" "obfuscated" "obfuscating");
lin obfuscation_N = mkN "obfuscation" ;
lin obi_N = mkN "obi" "obis";
lin obiism_N = mkN "obiism" ;
lin obiter_dictum_N = mkN "obiter dictum" "obiter dicta" {- FIXME: guessed plural form -};
lin obituary_N = mkN "obituary" "obituaries";
lin object_N = mkN "object" "objects";
lin object_V = mkV "object" "objects" "objected" "objected" "objecting";
lin object_V2 = mkV2 (mkV "object" "objects" "objected" "objected" "objecting");
lin objectification_N = mkN "objectification" ;
lin objection_N = mkN "objection" "objections";
lin objectionable_A = compoundA (mkA "objectionable");
lin objective_A = compoundA (mkA "objective");
lin objective_N = mkN "objective" "objectives";
lin objectivity_N = mkN "objectivity" ;
lin objector_N = mkN "objector" "objectors";
lin objurgate_V2 = mkV2 (mkV "objurgate" "objurgates" "objurgated" "objurgated" "objurgating");
lin objurgation_N = mkN "objurgation" "objurgations";
lin oblanceolate_A = mkA "oblanceolate" ;
lin oblate_A = compoundA (mkA "oblate");
lin oblate_N = mkN "oblate" ;
lin oblateness_N = mkN "oblateness" ;
lin oblation_N = mkN "oblation" "oblations";
lin obligate_A = mkA "obligate" ;
lin obligate_V2 = mkV2 (mkV "obligate" "obligates" "obligated" "obligated" "obligating");
lin obligate_V2V = mkV2V (mkV "obligate") noPrep to_Prep ;
lin obligation_N = mkN "obligation" "obligations";
lin obligational_A = mkA "obligational" ;
lin obligatory_A = compoundA (mkA "obligatory");
lin oblige_V2 = mkV2 (mkV "oblige" "obliges" "obliged" "obliged" "obliging");
lin oblige_V2V = mkV2V (mkV "oblige" "obliges" "obliged" "obliged" "obliging") noPrep to_Prep;
lin obliger_N = mkN "obliger" ;
lin obliging_A = compoundA (mkA "obliging");
lin oblique_A = compoundA (mkA "oblique");
lin oblique_N = mkN "oblique" ;
lin obliqueness_N = mkN "obliqueness" ;
lin obliquity_N = mkN "obliquity" "obliquities";
lin obliterable_A = mkA "obliterable" ;
lin obliterate_V2 = mkV2 (mkV "obliterate" "obliterates" "obliterated" "obliterated" "obliterating");
lin obliteration_N = mkN "obliteration" ;
lin obliterator_N = mkN "obliterator" ;
lin oblivion_N = mkN "oblivion" ;
lin oblivious_A = compoundA (mkA "oblivious");
lin obliviousness_N = mkN "obliviousness" ;
lin oblong_A = compoundA (mkA "oblong");
lin oblong_N = mkN "oblong" "oblongs";
lin obloquy_N = mkN "obloquy" ;
lin obnoxious_A = compoundA (mkA "obnoxious");
lin obnoxiousness_N = mkN "obnoxiousness" ;
lin oboe_N = mkN "oboe" "oboes";
lin oboist_N = mkN "oboist" "oboists";
lin obolus_N = mkN "obolus" ;
lin obovate_A = mkA "obovate" ;
lin obscene_A = compoundA (mkA "obscene");
lin obscenity_N = mkN "obscenity" "obscenities";
lin obscurantism_N = mkN "obscurantism" ;
lin obscurantist_N = mkN "obscurantist" "obscurantists";
lin obscure_A = compoundA (mkA "obscure");
lin obscure_V2 = mkV2 (mkV "obscure" "obscures" "obscured" "obscured" "obscuring");
lin obscure_VA = mkVA (mkV "obscure");
lin obscureness_N = mkN "obscureness" ;
lin obscurity_N = mkN "obscurity" "obscurities";
lin obsequious_A = compoundA (mkA "obsequious");
lin obsequiousness_N = mkN "obsequiousness" ;
lin observable_A = compoundA (mkA "observable");
lin observance_N = mkN "observance" "observances";
lin observant_A = compoundA (mkA "observant");
lin observation_N = mkN "observation" "observations";
lin observatory_N = mkN "observatory" "observatories";
lin observe_V = mkV "observe" "observes" "observed" "observed" "observing";
lin observe_V2 = mkV2 (mkV "observe" "observes" "observed" "observed" "observing");
lin observe_VS = mkVS (mkV "observe" "observes" "observed" "observed" "observing");
lin observer_N = mkN "observer" "observers";
lin obsess_V2 = mkV2 (mkV "obsess" "obsesses" "obsessed" "obsessed" "obsessing");
lin obsession_N = mkN "obsession" "obsessions";
lin obsessional_A = compoundA (mkA "obsessional");
lin obsessive_A = compoundA (mkA "obsessive");
lin obsessive_N = mkN "obsessive" ;
lin obsessiveness_N = mkN "obsessiveness" ;
lin obsidian_N = mkN "obsidian" ;
lin obsolescence_N = mkN "obsolescence" ;
lin obsolescent_A = compoundA (mkA "obsolescent");
lin obsolete_A = compoundA (mkA "obsolete");
lin obsoleteness_N = mkN "obsoleteness" ;
lin obstacle_N = mkN "obstacle" "obstacles";
lin obstetric_A = compoundA (mkA "obstetric");
lin obstetrical_A = compoundA (mkA "obstetrical");
lin obstetrician_N = mkN "obstetrician" "obstetricians";
lin obstetrics_N = mkN "obstetrics" "obstetrics";
lin obstinacy_N = mkN "obstinacy" ;
lin obstinate_A = compoundA (mkA "obstinate");
lin obstipation_N = mkN "obstipation" ;
lin obstreperous_A = compoundA (mkA "obstreperous");
lin obstreperousness_N = mkN "obstreperousness" ;
lin obstruct_V2 = mkV2 (mkV "obstruct" "obstructs" "obstructed" "obstructed" "obstructing");
lin obstruction_N = mkN "obstruction" "obstructions";
lin obstructionism_N = mkN "obstructionism" ;
lin obstructionist_N = mkN "obstructionist" "obstructionists";
lin obstructive_A = compoundA (mkA "obstructive");
lin obstruent_N = mkN "obstruent" ;
lin obtain_V = mkV "obtain" "obtains" "obtained" "obtained" "obtaining";
lin obtain_V2 = mkV2 (mkV "obtain" "obtains" "obtained" "obtained" "obtaining");
lin obtainable_A = compoundA (mkA "obtainable");
lin obtainment_N = mkN "obtainment" ;
lin obtrude_V = mkV "obtrude" "obtrudes" "obtruded" "obtruded" "obtruding";
lin obtrude_V2 = mkV2 (mkV "obtrude" "obtrudes" "obtruded" "obtruded" "obtruding");
lin obtrusive_A = compoundA (mkA "obtrusive");
lin obtrusiveness_N = mkN "obtrusiveness" ;
lin obturator_N = mkN "obturator" ;
lin obtuse_A = compoundA (mkA "obtuse");
lin obtuseness_N = mkN "obtuseness" ;
lin obverse_N = mkN "obverse" "obverses";
lin obviate_V2 = mkV2 (mkV "obviate" "obviates" "obviated" "obviated" "obviating");
lin obviation_N = mkN "obviation" ;
lin obvious_A = compoundA (mkA "obvious");
lin obviousness_N = mkN "obviousness" ;
lin oca_N = mkN "oca" ;
lin ocarina_N = mkN "ocarina" "ocarinas";
lin occasion_N = mkN "occasion" "occasions";
lin occasion_V2 = mkV2 (mkV "occasion" "occasions" "occasioned" "occasioned" "occasioning");
lin occasional_A = compoundA (mkA "occasional");
lin occasions_N = mkN "occasions" ;
lin occident_PN = mkPN "Occident";
lin occidental_A = compoundA (mkA "occidental");
lin occidental_N = mkN "occidental" "occidentals";
lin occidentalism_N = mkN "occidentalism" ;
lin occipital_A = mkA "occipital" ;
lin occiput_N = mkN "occiput" ;
lin occluded_A = mkA "occluded" ;
lin occlusion_N = mkN "occlusion" ;
lin occlusive_A = mkA "occlusive" ;
lin occult_A = compoundA (mkA "occult");
lin occult_N = mkN "occult" "IRREG";
lin occultism_N = mkN "occultism" ;
lin occultist_N = mkN "occultist" ;
lin occupancy_N = mkN "occupancy" "occupancies";
lin occupant_N = mkN "occupant" "occupants";
lin occupation_N = mkN "occupation" "occupations";
lin occupational_A = compoundA (mkA "occupational");
lin occupier_N = mkN "occupier" "occupiers";
lin occupy_V = mkV "occupy";
lin occupy_V2 = mkV2 (mkV "occupy" "occupies" "occupied" "occupied" "occupying");
lin occur_V = mkV "occur" "occurs" "occurred" "occurred" "occurring";
lin occurr_V2 = mkV2 (mkV "occurr");
lin occurrence_N = mkN "occurrence" "occurrences";
lin occurrent_A = mkA "occurrent" ;
lin ocean_N = mkN "ocean" "oceans";
lin oceanfront_N = mkN "oceanfront" ;
lin oceangoing_A = mkA "oceangoing" ;
lin oceanic_A = compoundA (mkA "oceanic");
lin oceanographer_N = mkN "oceanographer" ;
lin oceanography_N = mkN "oceanography" ;
lin ocellated_A = mkA "ocellated" ;
lin ocelot_N = mkN "ocelot" ;
lin ocher_A = mkA "ocher" ;
lin ocher_N = mkN "ocher" ;
lin ochre_N = mkN "ochre" ;
lin ochronosis_N = mkN "ochronosis" ;
lin ockbrook_PN = mkPN "Ockbrook";
lin ockendon_PN = mkPN "Ockendon";
lin oclock_Adv = mkAdv "o'clock" ;
lin ocotillo_N = mkN "ocotillo" ;
lin oct_PN = mkPN "Oct";
lin octagon_N = mkN "octagon" "octagons";
lin octagonal_A = compoundA (mkA "octagonal");
lin octahedron_N = mkN "octahedron" ;
lin octal_A = mkA "octal" ;
lin octameter_N = mkN "octameter" ;
lin octane_N = mkN "octane" ;
lin octangular_A = mkA "octangular" ;
lin octant_N = mkN "octant" ;
lin octave_N = mkN "octave" "octaves";
lin octavo_N = mkN "octavo" "octavos";
lin octet_N = mkN "octet" "octets";
lin octette_N = mkN "octette" "octettes";
lin octillion_N = mkN "octillion" ;
lin october_N = mkN "October" "Octobers";
lin october_PN = mkPN "October";
lin octogenarian_A = compoundA (mkA "octogenarian");
lin octogenarian_N = mkN "octogenarian" "octogenarians";
lin octopod_N = mkN "octopod" ;
lin octopus_N = mkN "octopus" "octopuses";
lin octoroon_N = mkN "octoroon" ;
lin octosyllabic_A = mkA "octosyllabic" ;
lin octosyllable_N = mkN "octosyllable" ;
lin octroi_N = mkN "octroi" "octrois";
lin octuple_A = mkA "octuple" ;
lin ocular_A = compoundA (mkA "ocular");
lin oculism_N = mkN "oculism" ;
lin oculist_N = mkN "oculist" "oculists";
lin oculomotor_N = mkN "oculomotor" ;
lin odalisque_N = mkN "odalisque" "odalisques";
lin odd_A = mkA "odd" "odder";
lin odd_job_A = compoundA (mkA "odd-job");
lin oddish_A = mkA "oddish" ;
lin oddity_N = mkN "oddity" "oddities";
lin oddment_N = mkN "oddment" "oddments";
lin oddness_N = mkN "oddness" ;
lin odds_N = mkN "odds" "odds" ;
lin odds_on_A = compoundA (mkA "odds-on");
lin odds_on_Adv = mkAdv "odds-on";
lin ode_N = mkN "ode" "odes";
lin odessa_PN = mkPN "Odessa";
lin odious_A = compoundA (mkA "odious");
lin odist_N = mkN "odist" ;
lin odium_N = mkN "odium" ;
lin odometer_N = mkN "odometer" ;
lin odonate_N = mkN "odonate" ;
lin odontoglossum_N = mkN "odontoglossum" ;
lin odoriferous_A = compoundA (mkA "odoriferous");
lin odorless_A = mkA "odorless" ;
lin odorous_A = compoundA (mkA "odorous");
lin odour_N = mkN "odour" "odours";
lin odourless_A = compoundA (mkA "odourless");
lin odynophagia_N = mkN "odynophagia" ;
lin odyssey_N = mkN "odyssey" "odysseys";
lin oecd_N = mkN "oecd" ;
lin oecumenical_A = compoundA (mkA "oecumenical");
lin oed_N = mkN "oed" ;
lin oedipus_PN = mkPN "Oedipus";
lin oenomel_N = mkN "oenomel" ;
lin oersted_N = mkN "oersted" ;
lin oesophagus_N = mkN "oesophagus" "oesophaguses";
lin oeuvre_N = mkN "oeuvre" ;
lin of_Prep = mkPrep "of";
lin of_course_Adv = mkAdv "of course";
lin off_A = compoundA (mkA "off");
lin off_Adv = mkAdv "off";
lin off_Prep = mkPrep "off";
lin off_day_N = mkN "off-day" "off-days";
lin off_licence_N = mkN "off-licence" "off-licences";
lin off_peak_A = compoundA (mkA "off-peak");
lin off_putting_A = compoundA (mkA "off-putting");
lin off_street_A = compoundA (mkA "off-street");
lin off_white_A = compoundA (mkA "off-white");
lin offal_N = mkN "offal" ;
lin offaly_PN = mkPN "Offaly";
lin offbeat_A = compoundA (mkA "offbeat");
lin offenbach_PN = mkPN "Offenbach";
lin offence_N = mkN "offence" "offences";
lin offenceless_A = compoundA (mkA "offenceless");
lin offend_V = mkV "offend" "offends" "offended" "offended" "offending";
lin offend_V2 = mkV2 (mkV "offend" "offends" "offended" "offended" "offending");
lin offenderMasc_N = mkN masculine (mkN "offender" "offenders");
lin offenderFem_N = mkN feminine (mkN "offender" "offenders");
lin offense_N = mkN "offense" ;
lin offenseless_A = mkA "offenseless" ;
lin offensive_A = compoundA (mkA "offensive");
lin offensive_N = mkN "offensive" "offensives";
lin offensiveness_N = mkN "offensiveness" ;
lin offer_N = mkN "offer" "offers";
lin offer_V = mkV "offer" "offers" "offered" "offered" "offering";
lin offer_V2 = mkV2 (mkV "offer" "offers" "offered" "offered" "offering");
lin offer_V2V = mkV2V (mkV "offer" "offers" "offered" "offered" "offering") noPrep to_Prep;
lin offer_V3 = mkV3 (mkV "offer" "offers" "offered" "offered" "offering") noPrep noPrep;
lin offer_VS = mkVS (mkV "offer" "offers" "offered" "offered" "offering");
lin offer_VV = mkVV (mkV "offer" "offers" "offered" "offered" "offering");
lin offerer_N = mkN "offerer" ;
lin offering_N = mkN "offering" "offerings";
lin offertory_N = mkN "offertory" "offertories";
lin offhand_A = compoundA (mkA "offhand");
lin offhand_Adv = mkAdv "offhand";
lin offhanded_A = compoundA (mkA "offhanded");
lin offhanded_Adv = mkAdv "offhanded";
lin offhandedly_A = compoundA (mkA "offhandedly");
lin office_N = mkN "office" "offices";
lin office_bearer_N = mkN "office-bearer" "office-bearers";
lin office_block_N = mkN "office-block" "office-blocks";
lin office_boy_N = mkN "office-boy" "office-boys";
lin office_holder_N = mkN "office-holder" "office-holders";
lin officeholder_N = mkN "officeholder" ;
lin officer_N = mkN "officer" "officers";
lin officialFem_N = mkN feminine (mkN "official" "officials");
lin officialMasc_N = mkN masculine (mkN "official" "officials");
lin official_A = compoundA (mkA "official");
lin officialdom_N = mkN "officialdom" "officialdoms";
lin officialese_N = mkN "officialese" ;
lin officiant_N = mkN "officiant" ;
lin officiate_V = mkV "officiate" "officiates" "officiated" "officiated" "officiating";
lin officiation_N = mkN "officiation" ;
lin officious_A = compoundA (mkA "officious");
lin officiousness_N = mkN "officiousness" ;
lin offing_N = mkN "offing" "IRREG";
lin offish_A = compoundA (mkA "offish");
lin offprint_N = mkN "offprint" "offprints";
lin offset_N = mkN "offset" ;
lin offset_V2 = mkV2 (mkV "off" IrregEng.set_V);
lin offshoot_N = mkN "offshoot" "offshoots";
lin offshore_A = compoundA (mkA "offshore");
lin offshore_Adv = mkAdv "offshore" ;
lin offside_A = compoundA (mkA "offside");
lin offside_Adv = mkAdv "offside";
lin offside_N = mkN "offside" ;
lin offspring_N = mkN "offspring" "offspring";
lin offstage_A = compoundA (mkA "offstage");
lin offstage_Adv = mkAdv "offstage";
lin oft_Adv = mkAdv "oft";
lin oft_times_Adv = mkAdv "oft-times";
lin often_AdA = mkAdA "often";
lin often_AdV = mkAdV "often";
lin often_Adv = mkAdv "often";
lin oftener_Adv = mkAdv "oftener";
lin ogee_N = mkN "ogee" ;
lin ogle_V = mkV "ogle" "ogles" "ogled" "ogled" "ogling";
lin ogle_V2 = mkV2 (mkV "ogle" "ogles" "ogled" "ogled" "ogling");
lin ogler_N = mkN "ogler" ;
lin ogmore_valley_PN = mkPN "Ogmore valley";
lin ogre_N = mkN "ogre" "ogres";
lin ogreish_A = compoundA (mkA "ogreish");
lin ogress_N = mkN "ogress" "ogresses";
lin oh_Interj = ss "oh";
lin ohio_PN = mkPN "Ohio";
lin ohm_N = mkN "ohm" "ohms";
lin ohmage_N = mkN "ohmage" ;
lin ohmic_A = mkA "ohmic" ;
lin ohmmeter_N = mkN "ohmmeter" ;
lin oil_N = mkN "oil" "oils";
lin oil_V2 = mkV2 (mkV "oil" "oils" "oiled" "oiled" "oiling");
lin oil_bearing_A = compoundA (mkA "oil-bearing");
lin oil_burner_N = mkN "oil-burner" "oil-burners";
lin oil_cake_N = mkN "oil-cake" ;
lin oil_painting_N = mkN "oil-painting" "oil-paintings";
lin oil_palm_N = mkN "oil-palm" "oil-palms";
lin oil_paper_N = mkN "oil-paper" ;
lin oil_rig_N = mkN "oil-rig" "oil-rigs";
lin oil_silk_N = mkN "oil-silk" ;
lin oil_slick_N = mkN "oil-slick" "oil-slicks";
lin oil_tanker_N = mkN "oil-tanker" "oil-tankers";
lin oil_well_N = mkN "oil-well" "oil-wells";
lin oilbird_N = mkN "oilbird" ;
lin oilcan_N = mkN "oilcan" "oilcans";
lin oilcloth_N = mkN "oilcloth" ;
lin oiler_N = mkN "oiler" "oilers";
lin oilfield_N = mkN "oilfield" "oilfields";
lin oilfired_A = compoundA (mkA "oilfired");
lin oilfish_N = mkN "oilfish" ;
lin oiliness_N = mkN "oiliness" ;
lin oilman_N = mkN masculine (mkN "oilman" "oilmen");
lin oilpaper_N = mkN "oilpaper" ;
lin oilseed_N = mkN "oilseed" ;
lin oilskin_N = mkN "oilskin" "oilskins";
lin oilstone_N = mkN "oilstone" ;
lin oily_A = mkA "oily" "oilier";
lin ointment_N = mkN "ointment" "ointments";
lin ok_Interj = ss "ok";
lin oka_N = mkN "oka" ;
lin okapi_N = mkN "okapi" "okapis";
lin okay_A = compoundA (mkA "okay");
lin okay_Adv = mkAdv "okay";
lin okay_Interj = ss "okay";
lin okay_V2 = mkV2 (mkV "okay" "okays" "okayed" "okayed" "okaying");
lin oklahoma_PN = mkPN "Oklahoma";
lin oklahoma_city_PN = mkPN "Oklahoma city";
lin okra_N = mkN "okra" ;
lin ola_N = mkN "ola" ;
lin old_A = mkA "old" "older";
lin old_N = mkN "old" ;
lin old_fashioned_A = compoundA (mkA "old-fashioned");
lin old_maidish_A = compoundA (mkA "old-maidish");
lin old_time_A = compoundA (mkA "old-time");
lin old_timer_N = mkN "old-timer" "old-timers";
lin old_windsor_PN = mkPN "Old windsor";
lin old_womanish_A = compoundA (mkA "old-womanish");
lin old_world_A = compoundA (mkA "old-world");
lin olden_A = compoundA (mkA "olden");
lin oldenburg_PN = mkPN "Oldenburg";
lin oldham_PN = mkPN "Oldham";
lin oldie_N = mkN "oldie" ;
lin oldish_A = compoundA (mkA "oldish");
lin oldland_PN = mkPN "Oldland";
lin oldline_A = mkA "oldline" ;
lin oldness_N = mkN "oldness" ;
lin oldster_N = mkN "oldster" "oldsters";
lin oleaceous_A = mkA "oleaceous" ;
lin oleaginous_A = compoundA (mkA "oleaginous");
lin oleander_N = mkN "oleander" "oleanders";
lin oleaster_N = mkN "oleaster" ;
lin olecranon_N = mkN "olecranon" ;
lin oleophilic_A = mkA "oleophilic" ;
lin oleophobic_A = mkA "oleophobic" ;
lin oleoresin_N = mkN "oleoresin" ;
lin olfactory_A = compoundA (mkA "olfactory");
lin oligarch_N = mkN "oligarch" "oligarchs";
lin oligarchic_A = mkA "oligarchic" ;
lin oligarchy_N = mkN "oligarchy" "oligarchies";
lin oligochaete_N = mkN "oligochaete" ;
lin oligodactyly_N = mkN "oligodactyly" ;
lin oligodendrocyte_N = mkN "oligodendrocyte" ;
lin oligodendroglia_N = mkN "oligodendroglia" ;
lin oligodontia_N = mkN "oligodontia" ;
lin oligomenorrhea_N = mkN "oligomenorrhea" ;
lin oligopoly_N = mkN "oligopoly" ;
lin oligosaccharide_N = mkN "oligosaccharide" ;
lin oligospermia_N = mkN "oligospermia" ;
lin oliguria_N = mkN "oliguria" ;
lin olive_A = compoundA (mkA "olive");
lin olive_N = mkN "olive" "olives";
lin olive_PN = mkPN "Olive";
lin olive_tree_N = mkN "olive-tree" "olive-trees";
lin olivelike_A = mkA "olivelike" ;
lin olivenite_N = mkN "olivenite" ;
lin oliver_PN = mkPN "Oliver";
lin olivia_PN = mkPN "Olivia";
lin olivine_N = mkN "olivine" ;
lin ollerton_PN = mkPN "Ollerton";
lin ollie_PN = mkPN "Ollie";
lin olm_N = mkN "olm" ;
lin ology_N = mkN "ology" ;
lin olympiad_N = mkN "olympiad" "olympiads";
lin olympian_A = compoundA (mkA "olympian");
lin olympian_N = mkN "olympian" "olympians";
lin olympic_A = compoundA (mkA "olympic");
lin olympics_PN = mkPN "Olympics";
lin oman_PN = mkPN "Oman";
lin omani_A = compoundA (mkA "omani");
lin omani_N = mkN "omani" "omanis";
lin ombu_N = mkN "ombu" ;
lin ombudsman_N = mkN masculine (mkN "ombudsman" "ombudsmen");
lin omega_N = mkN "omega" "omegas";
lin omelet_N = mkN "omelet" "omelets";
lin omelette_N = mkN "omelette" "omelettes";
lin omen_N = mkN "omen" "omens";
lin omen_V2 = mkV2 (mkV "omen" "omens" "omened" "omened" "omening");
lin omentum_N = mkN "omentum" ;
lin omeprazole_N = mkN "omeprazole" ;
lin omerta_N = mkN "omerta" ;
lin omicron_N = mkN "omicron" ;
lin ominous_A = compoundA (mkA "ominous");
lin omissible_A = mkA "omissible" ;
lin omission_N = mkN "omission" "omissions";
lin omissive_A = mkA "omissive" ;
lin omit_V2 = mkV2 (mkV "omit" "omits" "omitted" "omitted" "omitting");
lin ommastrephes_N = mkN "ommastrephes" ;
lin ommatidium_N = mkN "ommatidium" ;
lin omnibus_N = mkN "omnibus" "omnibuses";
lin omnidirectional_A = mkA "omnidirectional" ;
lin omnifarious_A = mkA "omnifarious" ;
lin omnipotence_N = mkN "omnipotence" ;
lin omnipotent_A = compoundA (mkA "omnipotent");
lin omnipresent_A = mkA "omnipresent" ;
lin omnirange_N = mkN "omnirange" ;
lin omniscience_N = mkN "omniscience" ;
lin omniscient_A = compoundA (mkA "omniscient");
lin omnivore_N = mkN "omnivore" ;
lin omnivorous_A = compoundA (mkA "omnivorous");
lin omophagia_N = mkN "omophagia" ;
lin omphaloskepsis_N = mkN "omphaloskepsis" ;
lin omsk_PN = mkPN "Omsk";
lin on_Adv = mkAdv "on";
lin on_Prep = mkPrep "on";
lin on_licence_N = mkN "on-licence" "on-licences";
lin onager_N = mkN "onager" ;
lin once_AdV = mkAdV "once";
lin once_Adv = mkAdv "once";
lin once_Prep = mkPrep "once";
lin once_Subj = mkSubj "once";
lin onchocerciasis_N = mkN "onchocerciasis" ;
lin oncidium_N = mkN "oncidium" ;
lin oncogene_N = mkN "oncogene" ;
lin oncological_A = mkA "oncological" ;
lin oncologist_N = mkN "oncologist" ;
lin oncology_N = mkN "oncology" ;
lin oncoming_A = compoundA (mkA "oncoming");
lin oncoming_N = mkN "oncoming" "IRREG";
lin one_armed_A = compoundA (mkA "one-armed");
lin one_eyed_A = compoundA (mkA "one-eyed");
lin one_horse_A = compoundA (mkA "one-horse");
lin one_idea'd_A = compoundA (mkA "one-idea'd");
lin one_sided_A = compoundA (mkA "one-sided");
lin one_step_N = mkN "one-step" "one-steps";
lin one_time_A = compoundA (mkA "one-time");
lin one_upmanship_N = mkN "one-upmanship" ;
lin oneiric_A = mkA "oneiric" ;
lin oneiromancer_N = mkN "oneiromancer" ;
lin oneiromancy_N = mkN "oneiromancy" ;
lin oneness_N = mkN "oneness" ;
lin onerous_A = compoundA (mkA "onerous");
lin ongar_PN = mkPN "Ongar";
lin ongoing_A = compoundA (mkA "ongoing");
lin onion_N = mkN "onion" "onions";
lin onionskin_N = mkN "onionskin" ;
lin onlooker_N = mkN "onlooker" "onlookers";
lin only_Adv = mkAdv "only";
lin only_Predet = {s="only"};
lin onomancer_N = mkN "onomancer" ;
lin onomancy_N = mkN "onomancy" ;
lin onomastic_A = mkA "onomastic" ;
lin onomasticon_N = mkN "onomasticon" ;
lin onomastics_N = mkN "onomastics" ;
lin onomatomania_N = mkN "onomatomania" ;
lin onomatopoeia_N = mkN "onomatopoeia" ;
lin onomatopoeic_A = mkA "onomatopoeic" ;
lin onrush_N = mkN "onrush" "onrushes";
lin onset_N = mkN "onset" "onsets";
lin onshore_A = compoundA (mkA "onshore");
lin onshore_Adv = mkAdv "onshore";
lin onside_A = mkA "onside" ;
lin onslaught_N = mkN "onslaught" "onslaughts";
lin onstage_A = mkA "onstage" ;
lin onstage_Adv = mkAdv "onstage" ;
lin ontario_PN = mkPN "Ontario";
lin onto_Prep = mkPrep "onto";
lin ontogenetic_A = mkA "ontogenetic" ;
lin ontological_A = mkA "ontological" ;
lin ontology_N = mkN "ontology" "ontologies";
lin onus_N = mkN "onus" "oni" {- FIXME: guessed plural form -};
lin onward_A = compoundA (mkA "onward");
lin onward_Adv = mkAdv "onward";
lin onwards_Adv = mkAdv "onwards";
lin onycholysis_N = mkN "onycholysis" ;
lin onychophoran_N = mkN "onychophoran" ;
lin onychosis_N = mkN "onychosis" ;
lin onymous_A = mkA "onymous" ;
lin onyx_N = mkN "onyx" ;
lin oocyte_N = mkN "oocyte" ;
lin oogenesis_N = mkN "oogenesis" ;
lin oology_N = mkN "oology" ;
lin oolong_N = mkN "oolong" ;
lin oomph_N = mkN "oomph" ;
lin oophorectomy_N = mkN "oophorectomy" ;
lin oophoritis_N = mkN "oophoritis" ;
lin oophorosalpingectomy_N = mkN "oophorosalpingectomy" ;
lin oosphere_N = mkN "oosphere" ;
lin oospore_N = mkN "oospore" ;
lin ootid_N = mkN "ootid" ;
lin ooze_N = mkN "ooze" ;
lin ooze_V = mkV "ooze" "oozes" "oozed" "oozed" "oozing";
lin ooze_V2 = mkV2 (mkV "ooze" "oozes" "oozed" "oozed" "oozing");
lin oozy_A = mkA "oozy" "oozier";
lin op_PN = mkPN "Op";
lin op_art_N = mkN "op art" ;
lin op_cit_PN = mkPN "Op cit";
lin opacification_N = mkN "opacification" ;
lin opacity_N = mkN "opacity" ;
lin opah_N = mkN "opah" ;
lin opal_N = mkN "opal" "opals";
lin opalescence_N = mkN "opalescence" ;
lin opalescent_A = compoundA (mkA "opalescent");
lin opaque_A = compoundA (mkA "opaque");
lin opaqueness_N = mkN "opaqueness" ;
lin opec_PN = mkPN "Opec";
lin open_A = compoundA (mkA "open");
lin open_N = mkN "open" ;
lin open_V = mkV "open" "opens" "opened" "opened" "opening";
lin open_V2 = mkV2 (mkV "open" "opens" "opened" "opened" "opening");
lin open_air_A = compoundA (mkA "open-air");
lin open_ended_A = compoundA (mkA "open-ended");
lin open_eyed_A = compoundA (mkA "open-eyed");
lin open_handed_A = compoundA (mkA "open-handed");
lin open_hearted_A = compoundA (mkA "open-hearted");
lin open_minded_A = compoundA (mkA "open-minded");
lin open_mouthed_A = compoundA (mkA "open-mouthed");
lin openbill_N = mkN "openbill" ;
lin opencast_A = compoundA (mkA "opencast");
lin opener_N = mkN "opener" "openers";
lin openhearted_A = mkA "openhearted" ;
lin opening_N = mkN "opening" "openings";
lin openness_N = mkN "openness" ;
lin openwork_N = mkN "openwork" ;
lin opepe_N = mkN "opepe" ;
lin opera_N = mkN "opera" "operas";
lin opera_cloak_N = mkN "opera-cloak" "opera-cloaks";
lin opera_hat_N = mkN "opera-hat" "opera-hats";
lin opera_house_N = mkN "opera-house" "opera-houses";
lin operable_A = compoundA (mkA "operable");
lin operagoer_N = mkN "operagoer" ;
lin operand_N = mkN "operand" ;
lin operant_A = mkA "operant" ;
lin operate_V = mkV "operate" "operates" "operated" "operated" "operating";
lin operate_V2 = mkV2 (mkV "operate" "operates" "operated" "operated" "operating");
lin operatic_A = compoundA (mkA "operatic");
lin operating_table_N = mkN "operating-table" "operating-tables";
lin operating_theatre_N = mkN "operating-theatre" "operating-theatres";
lin operation_N = mkN "operation" "operations";
lin operational_A = compoundA (mkA "operational");
lin operationalism_N = mkN "operationalism" ;
lin operationalist_A = mkA "operationalist" ;
lin operations_N = mkN "operations" ;
lin operative_A = compoundA (mkA "operative");
lin operative_N = mkN "operative" "operatives";
lin operator_N = mkN "operator" "operators";
lin operculate_A = mkA "operculate" ;
lin operculum_N = mkN "operculum" ;
lin operetta_N = mkN "operetta" "operettas";
lin operon_N = mkN "operon" ;
lin ophidism_N = mkN "ophidism" ;
lin ophiolatry_N = mkN "ophiolatry" ;
lin ophryon_N = mkN "ophryon" ;
lin ophthalmectomy_N = mkN "ophthalmectomy" ;
lin ophthalmia_N = mkN "ophthalmia" ;
lin ophthalmic_A = compoundA (mkA "ophthalmic");
lin ophthalmologist_N = mkN "ophthalmologist" ;
lin ophthalmology_N = mkN "ophthalmology" ;
lin ophthalmoplegia_N = mkN "ophthalmoplegia" ;
lin ophthalmoscope_N = mkN "ophthalmoscope" "ophthalmoscopes";
lin ophthalmoscopy_N = mkN "ophthalmoscopy" ;
lin opiate_N = mkN "opiate" "opiates";
lin opine_V2 = mkV2 (mkV "opine" "opines" "opined" "opined" "opining");
lin opine_VS = mkVS (mkV "opine" "opines" "opined" "opined" "opining");
lin opinion_N = mkN "opinion" "opinions";
lin opinionated_A = compoundA (mkA "opinionated");
lin opinionative_A = compoundA (mkA "opinionative");
lin opisthognathous_A = mkA "opisthognathous" ;
lin opisthorchiasis_N = mkN "opisthorchiasis" ;
lin opisthotonos_N = mkN "opisthotonos" ;
lin opium_N = mkN "opium" ;
lin opium_den_N = mkN "opium-den" "opium-dens";
lin opopanax_N = mkN "opopanax" ;
lin opossum_N = mkN "opossum" "opossums";
lin opp_PN = mkPN "Opp";
lin opponent_A = mkA "opponent" ;
lin opponentMasc_N = mkN masculine (mkN "opponent" "opponents");
lin opponentFem_N = mkN feminine (mkN "opponent" "opponents");
lin opportune_A = compoundA (mkA "opportune");
lin opportuneness_N = mkN "opportuneness" ;
lin opportunism_N = mkN "opportunism" ;
lin opportunist_A = mkA "opportunist" ;
lin opportunistMasc_N = mkN masculine (mkN "opportunist" "opportunists");
lin opportunistFem_N = mkN feminine (mkN "opportunist" "opportunists");
lin opportunity_N = mkN "opportunity" "opportunities";
lin opposable_A = mkA "opposable" ;
lin oppose_V = mkV "oppose";
lin oppose_V2 = mkV2 (mkV "oppose" "opposes" "opposed" "opposed" "opposing");
lin oppose_VS = mkVS (mkV "oppose");
lin opposite_A = compoundA (mkA "opposite");
lin opposite_N = mkN "opposite" "opposites";
lin opposite_Prep = mkPrep "opposite";
lin opposition_N = mkN "opposition" ;
lin oppress_V2 = mkV2 (mkV "oppress" "oppresses" "oppressed" "oppressed" "oppressing");
lin oppression_N = mkN "oppression" "oppressions";
lin oppressive_A = compoundA (mkA "oppressive");
lin oppressor_N = mkN "oppressor" "oppressors";
lin opprobrious_A = compoundA (mkA "opprobrious");
lin opprobrium_N = mkN "opprobrium" ;
lin oppugn_V2 = mkV2 (mkV "oppugn" "oppugns" "oppugned" "oppugned" "oppugning");
lin opsin_N = mkN "opsin" ;
lin opsonin_N = mkN "opsonin" ;
lin opsonization_N = mkN "opsonization" ;
lin opt_V = mkV "opt" "opts" "opted" "opted" "opting";
lin opt_V2V = mkV2V (mkV "opt" "opts" "opted" "opted" "opting") noPrep to_Prep ;
lin opt_VV = mkVV (mkV "opt" "opts" "opted" "opted" "opting");
lin optative_A = compoundA (mkA "optative");
lin optative_N = mkN "optative" "optatives";
lin optic_A = compoundA (mkA "optic");
lin optical_A = compoundA (mkA "optical");
lin optician_N = mkN "optician" "opticians";
lin optics_N = mkN "optics" "optics";
lin optimal_A = compoundA (mkA "optimal");
lin optimism_N = mkN "optimism" ;
lin optimistMasc_N = mkN masculine (mkN "optimist" "optimists");
lin optimistFem_N = mkN feminine (mkN "optimist" "optimists");
lin optimistic_A = compoundA (mkA "optimistic");
lin optimistically_Adv = mkAdv "optimistically";
lin optimization_N = mkN (variants {"optimization"; "optimisation"});
lin optimum_A = mkA "optimum" ;
lin optimum_N = mkN "optimum" "optimums";
lin option_N = mkN "option" "options";
lin optional_A = compoundA (mkA "optional");
lin optometrist_N = mkN "optometrist" ;
lin optometry_N = mkN "optometry" ;
lin opulence_N = mkN "opulence" ;
lin opulent_A = compoundA (mkA "opulent");
lin opus_N = mkN "opus" "opi" {- FIXME: guessed plural form -};
lin or_Conj = mkConj "or" singular ;
lin orach_N = mkN "orach" ;
lin oracle_N = mkN "oracle" "oracles";
lin oracular_A = compoundA (mkA "oracular");
lin orad_Adv = mkAdv "orad" ;
lin oral_A = compoundA (mkA "oral");
lin oral_N = mkN "oral" "orals";
lin orang_outan_N = mkN "orang-outan" "orang-outans";
lin orang_outang_N = mkN "orang-outang" "orang-outangs";
lin orang_utan_N = mkN "orang-utan" "orang-utans";
lin orange_A = compoundA (mkA "orange");
lin orange_1_N = mkN "orange" "oranges";
lin orange_2_N = mkN "orange" "oranges";
lin orangeade_N = mkN "orangeade" ;
lin orangeman_N = mkN masculine (mkN "orangeman" "orangemen");
lin orangery_N = mkN "orangery" ;
lin orangewood_N = mkN "orangewood" ;
lin orangutan_N = mkN "orangutan" ;
lin orate_V = mkV "orate" "orates" "orated" "orated" "orating";
lin oration_N = mkN "oration" "orations";
lin oratorMasc_N = mkN masculine (mkN "orator" "orators");
lin oratorFem_N = mkN feminine (mkN "orator" "orators");
lin oratorical_A = compoundA (mkA "oratorical");
lin oratorio_N = mkN "oratorio" "oratorios";
lin oratory_N = mkN "oratory" "oratories";
lin orb_N = mkN "orb" "orbs";
lin orbiculate_A = mkA "orbiculate" ;
lin orbit_N = mkN "orbit" "orbits";
lin orbit_V = mkV "orbit" "orbits" "orbited" "orbited" "orbiting";
lin orbit_V2 = mkV2 (mkV "orbit" "orbits" "orbited" "orbited" "orbiting");
lin orbital_A = compoundA (mkA "orbital");
lin orbitale_N = mkN "orbitale" ;
lin orchard_N = mkN "orchard" "orchards";
lin orchestra_N = mkN "orchestra" "orchestras";
lin orchestral_A = compoundA (mkA "orchestral");
lin orchestrate_V2 = mkV2 (mkV "orchestrate" "orchestrates" "orchestrated" "orchestrated" "orchestrating");
lin orchestration_N = mkN "orchestration" "orchestrations";
lin orchestrator_N = mkN "orchestrator" ;
lin orchid_N = mkN "orchid" "orchids";
lin orchidalgia_N = mkN "orchidalgia" ;
lin orchidectomy_N = mkN "orchidectomy" ;
lin orchil_N = mkN "orchil" ;
lin orchiopexy_N = mkN "orchiopexy" ;
lin orchis_N = mkN "orchis" "orchises";
lin orchitis_N = mkN "orchitis" ;
lin orchotomy_N = mkN "orchotomy" ;
lin ordain_V2 = mkV2 (mkV "ordain" "ordains" "ordained" "ordained" "ordaining");
lin ordain_VS = mkVS (mkV "ordain");
lin ordainer_N = mkN "ordainer" ;
lin ordeal_N = mkN "ordeal" "ordeals";
lin order_N = mkN "order" "orders";
lin order_V = mkV "order";
lin order_V2 = mkV2 (mkV "order" "orders" "ordered" "ordered" "ordering");
lin order_V2V = mkV2V (mkV "order" "orders" "ordered" "ordered" "ordering") noPrep to_Prep ;
lin order_VV = mkVV (mkV "order" "orders" "ordered" "ordered" "ordering");
lin order_VS = mkVS (mkV "order" "orders" "ordered" "ordered" "ordering");
lin order_book_N = mkN "order-book" "order-books";
lin order_form_N = mkN "order-form" "order-forms";
lin order_paper_N = mkN "order-paper" "order-papers";
lin orderer_N = mkN "orderer" ;
lin ordering_N = mkN "ordering" "orderings";
lin orderliness_N = mkN "orderliness" ;
lin orderly_A = compoundA (mkA "orderly");
lin orderly_N = mkN "orderly" "orderlies";
lin ordinal_A = compoundA (mkA "ordinal");
lin ordinal_N = mkN "ordinal" "ordinals";
lin ordinance_N = mkN "ordinance" "ordinances";
lin ordinand_N = mkN "ordinand" "ordinands";
lin ordinariness_N = mkN "ordinariness" ;
lin ordinary_A = compoundA (mkA "ordinary");
lin ordinary_N = mkN "ordinary" ;
lin ordinate_N = mkN "ordinate" ;
lin ordination_N = mkN "ordination" "ordinations";
lin ordnance_N = mkN "ordnance" ;
lin ordure_N = mkN "ordure" ;
lin ore_N = mkN "ore" "ores";
lin oregano_N = mkN "oregano" ;
lin oregon_PN = mkPN "Oregon";
lin oreo_N = mkN "oreo" ;
lin organ_N = mkN "organ" "organs";
lin organ_blower_N = mkN "organ-blower" "organ-blowers";
lin organ_grinder_N = mkN "organ-grinder" "organ-grinders";
lin organ_loft_N = mkN "organ-loft" "organ-lofts";
lin organdie_N = mkN "organdie" ;
lin organdy_N = mkN "organdy" ;
lin organelle_N = mkN "organelle" ;
lin organic_A = compoundA (mkA "organic");
lin organic_N = mkN "organic" ;
lin organically_Adv = mkAdv "organically";
lin organicism_N = mkN "organicism" ;
lin organicistic_A = mkA "organicistic" ;
lin organification_N = mkN "organification" ;
lin organism_N = mkN "organism" "organisms";
lin organismal_A = mkA "organismal" ;
lin organist_N = mkN "organist" "organists";
lin organization_N = mkN (variants {"organization"; "organisation"});
lin organizational_A = compoundA (mkA "organizational");
lin organize_V2 = mkV2 (mkV (variants {"organize"; "organise"}));
lin organize_V2V = mkV2V (mkV (variants {"organize"; "organise"})) noPrep to_Prep ;
lin organizer_N = mkN (variants {"organizer"; "organiser"});
lin organon_N = mkN "organon" ;
lin organophosphate_N = mkN "organophosphate" ;
lin organza_N = mkN "organza" ;
lin orgasm_N = mkN "orgasm" "orgasms";
lin orgiastic_A = compoundA (mkA "orgiastic");
lin orgy_N = mkN "orgy" "orgies";
lin oriel_N = mkN "oriel" "oriels";
lin orient_A = compoundA (mkA "orient");
lin orient_N = mkN "orient";
lin orient_V2 = mkV2 (mkV "orient" "orients" "oriented" "oriented" "orienting");
lin oriental_A = compoundA (mkA "oriental");
lin oriental_N = mkN "oriental" "orientals";
lin orientalism_N = mkN "orientalism" ;
lin orientalistMasc_N = mkN masculine (mkN "orientalist" "orientalists");
lin orientalistFem_N = mkN feminine (mkN "orientalist" "orientalists");
lin orientate_V2 = mkV2 (mkV "orientate" "orientates" "orientated" "orientated" "orientating");
lin orientation_N = mkN "orientation" ;
lin orienting_A = mkA "orienting" ;
lin orifice_N = mkN "orifice" "orifices";
lin oriflamme_N = mkN "oriflamme" ;
lin origami_N = mkN "origami" ;
lin origanum_N = mkN "origanum" ;
lin origin_N = mkN "origin" "origins";
lin original_A = compoundA (mkA "original");
lin original_N = mkN "original" "originals";
lin originalism_N = mkN "originalism" ;
lin originality_N = mkN "originality" ;
lin originate_V = mkV "originate" "originates" "originated" "originated" "originating";
lin originate_V2 = mkV2 (mkV "originate" "originates" "originated" "originated" "originating");
lin originatorMasc_N = mkN masculine (mkN "originator" "originators");
lin originatorFem_N = mkN feminine (mkN "originator" "originators");
lin oriole_N = mkN "oriole" "orioles";
lin orison_N = mkN "orison" "orisons";
lin orkney_PN = mkPN "Orkney";
lin orleans_PN = mkPN "Orleans";
lin orlop_N = mkN "orlop" "orlops";
lin ormer_N = mkN "ormer" ;
lin ormolu_N = mkN "ormolu" "ormolus";
lin ormskirk_PN = mkPN "Ormskirk";
lin ornament_N = mkN "ornament" "ornaments";
lin ornament_V2 = mkV2 (mkV "ornament" "ornaments" "ornamented" "ornamented" "ornamenting");
lin ornamental_A = compoundA (mkA "ornamental");
lin ornamental_N = mkN "ornamental" ;
lin ornamentalism_N = mkN "ornamentalism" ;
lin ornamentation_N = mkN "ornamentation" ;
lin ornate_A = compoundA (mkA "ornate");
lin ornateness_N = mkN "ornateness" ;
lin ornery_A = compoundA (mkA "ornery");
lin ornithine_N = mkN "ornithine" ;
lin ornithischian_N = mkN "ornithischian" ;
lin ornithological_A = compoundA (mkA "ornithological");
lin ornithologistMasc_N = mkN masculine (mkN "ornithologist" "ornithologists");
lin ornithologistFem_N = mkN feminine (mkN "ornithologist" "ornithologists");
lin ornithology_N = mkN "ornithology" ;
lin ornithomimid_N = mkN "ornithomimid" ;
lin ornithopod_N = mkN "ornithopod" ;
lin orogeny_N = mkN "orogeny" ;
lin oroide_N = mkN "oroide" ;
lin orologistMasc_N = mkN masculine (mkN "orologist");
lin orologistFem_N = mkN feminine (mkN "orologist");
lin orology_N = mkN "orology" ;
lin oropharyngeal_A = mkA "oropharyngeal" ;
lin oropharynx_N = mkN "oropharynx" ;
lin orotund_A = compoundA (mkA "orotund");
lin orphan_N = mkN human (mkN "orphan" "orphans");
lin orphan_V2 = mkV2 (mkV "orphan" "orphans" "orphaned" "orphaned" "orphaning");
lin orphanage_N = mkN "orphanage" "orphanages";
lin orphenadrine_N = mkN "orphenadrine" ;
lin orphrey_N = mkN "orphrey" ;
lin orpiment_N = mkN "orpiment" ;
lin orpine_N = mkN "orpine" ;
lin orrery_N = mkN "orrery" ;
lin orrisroot_N = mkN "orrisroot" ;
lin orthicon_N = mkN "orthicon" ;
lin orthochorea_N = mkN "orthochorea" ;
lin orthoclase_N = mkN "orthoclase" ;
lin orthodontic_A = compoundA (mkA "orthodontic");
lin orthodontics_N = mkN "orthodontics" "orthodontics";
lin orthodontist_N = mkN "orthodontist" "orthodontists";
lin orthodox_A = compoundA (mkA "orthodox");
lin orthodoxy_N = mkN "orthodoxy" "orthodoxies";
lin orthoepist_N = mkN "orthoepist" ;
lin orthoepy_N = mkN "orthoepy" ;
lin orthogonal_A = compoundA (mkA "orthogonal");
lin orthogonality_N = mkN "orthogonality" ;
lin orthographic_A = compoundA (mkA "orthographic");
lin orthography_N = mkN "orthography" "orthographies";
lin orthomolecular_A = mkA "orthomolecular" ;
lin orthomyxovirus_N = mkN "orthomyxovirus" ;
lin orthopaedic_A = compoundA (mkA "orthopaedic");
lin orthopaedics_N = mkN "orthopaedics" "orthopaedics";
lin orthopedic_A = compoundA (mkA "orthopedic");
lin orthopedics_N = mkN "orthopedics" "orthopedics";
lin orthopedist_N = mkN "orthopedist" ;
lin orthopnea_N = mkN "orthopnea" ;
lin orthopter_N = mkN "orthopter" ;
lin orthoptic_A = mkA "orthoptic" ;
lin orthoptics_N = mkN "orthoptics" ;
lin orthoptist_N = mkN "orthoptist" ;
lin orthoscope_N = mkN "orthoscope" ;
lin orthostatic_A = mkA "orthostatic" ;
lin orthotropous_A = mkA "orthotropous" ;
lin ortolan_N = mkN "ortolan" "ortolans";
lin ortygan_N = mkN "ortygan" ;
lin oryx_N = mkN "oryx" "oryxes";
lin orzo_N = mkN "orzo" ;
lin os_N = mkN "os" ;
lin osaka_PN = mkPN "Osaka";
lin oscar_N = mkN "oscar" "oscars";
lin oscar_PN = mkPN "Oscar";
lin oscheocele_N = mkN "oscheocele" ;
lin oscillate_V = mkV "oscillate" "oscillates" "oscillated" "oscillated" "oscillating";
lin oscillate_V2 = mkV2 (mkV "oscillate" "oscillates" "oscillated" "oscillated" "oscillating");
lin oscillation_N = mkN "oscillation" "oscillations";
lin oscillator_N = mkN "oscillator" "oscillators";
lin oscillatory_A = mkA "oscillatory" ;
lin oscillogram_N = mkN "oscillogram" ;
lin oscillograph_N = mkN "oscillograph" "oscillographs";
lin oscilloscope_N = mkN "oscilloscope" "oscilloscopes";
lin oscine_A = mkA "oscine" ;
lin oscine_N = mkN "oscine" ;
lin oscitancy_N = mkN "oscitancy" ;
lin osculation_N = mkN "osculation" ;
lin osier_N = mkN "osier" "osiers";
lin oslo_PN = mkPN "Oslo";
lin osmiridium_N = mkN "osmiridium" ;
lin osmium_N = mkN "osmium" ;
lin osmoreceptor_N = mkN "osmoreceptor" ;
lin osmosis_N = mkN "osmosis" ;
lin osmotic_A = mkA "osmotic" ;
lin osmotically_Adv = mkAdv "osmotically" ;
lin osnabruck_PN = mkPN "Osnabruck";
lin osprey_N = mkN "osprey" "ospreys";
lin osseous_A = compoundA (mkA "osseous");
lin ossett_PN = mkPN "Ossett";
lin ossicle_N = mkN "ossicle" ;
lin ossicular_A = mkA "ossicular" ;
lin ossiferous_A = mkA "ossiferous" ;
lin ossification_N = mkN "ossification" ;
lin ossify_V = mkV "ossify" "ossifies" "ossified" "ossified" "ossifying";
lin ossify_V2 = mkV2 (mkV "ossify" "ossifies" "ossified" "ossified" "ossifying");
lin ossuary_N = mkN "ossuary" ;
lin osteal_A = mkA "osteal" ;
lin osteitis_N = mkN "osteitis" ;
lin ostensible_A = compoundA (mkA "ostensible");
lin ostensive_A = mkA "ostensive" ;
lin ostentation_N = mkN "ostentation" ;
lin ostentatious_A = compoundA (mkA "ostentatious");
lin osteoarthritis_N = mkN "osteoarthritis" ;
lin osteoblast_N = mkN "osteoblast" ;
lin osteoblastoma_N = mkN "osteoblastoma" ;
lin osteochondroma_N = mkN "osteochondroma" ;
lin osteoclasis_N = mkN "osteoclasis" ;
lin osteoclast_N = mkN "osteoclast" ;
lin osteocyte_N = mkN "osteocyte" ;
lin osteodystrophy_N = mkN "osteodystrophy" ;
lin osteologist_N = mkN "osteologist" ;
lin osteology_N = mkN "osteology" ;
lin osteolysis_N = mkN "osteolysis" ;
lin osteoma_N = mkN "osteoma" ;
lin osteomalacia_N = mkN "osteomalacia" ;
lin osteomyelitis_N = mkN "osteomyelitis" ;
lin osteopath_N = mkN "osteopath" "osteopaths";
lin osteopathy_N = mkN "osteopathy" ;
lin osteopetrosis_N = mkN "osteopetrosis" ;
lin osteophyte_N = mkN "osteophyte" ;
lin osteoporosis_N = mkN "osteoporosis" ;
lin osteosarcoma_N = mkN "osteosarcoma" ;
lin osteosclerosis_N = mkN "osteosclerosis" ;
lin osteostracan_N = mkN "osteostracan" ;
lin osteotomy_N = mkN "osteotomy" ;
lin ostinato_N = mkN "ostinato" ;
lin ostiole_N = mkN "ostiole" ;
lin ostler_N = mkN "ostler" "ostlers";
lin ostomy_N = mkN "ostomy" ;
lin ostracism_N = mkN "ostracism" ;
lin ostracize_V2 = mkV2 (mkV "ostracize" "ostracizes" "ostracized" "ostracized" "ostracizing");
lin ostracoderm_N = mkN "ostracoderm" ;
lin ostrich_N = mkN "ostrich" "ostriches";
lin oswald_PN = mkPN "Oswald";
lin oswestry_PN = mkPN "Oswestry";
lin ot_N = mkN "ot" ;
lin otago_PN = mkPN "Otago";
lin other_A = compoundA (mkA "other");
lin other_Adv = mkAdv "other";
lin other_N = mkN "other" "others";
lin otherness_N = mkN "otherness" ;
lin otherwise_A = mkA "otherwise" ;
lin otherwise_Adv = mkAdv "otherwise";
lin otherworld_N = mkN "otherworld" ;
lin otherworldly_A = compoundA (mkA "otherworldly");
lin othonna_N = mkN "othonna" ;
lin otic_A = mkA "otic" ;
lin otiose_A = compoundA (mkA "otiose");
lin otitis_N = mkN "otitis" ;
lin otley_PN = mkPN "Otley";
lin otology_N = mkN "otology" ;
lin otoplasty_N = mkN "otoplasty" ;
lin otorrhea_N = mkN "otorrhea" ;
lin otosclerosis_N = mkN "otosclerosis" ;
lin otoscope_N = mkN "otoscope" ;
lin ototoxic_A = mkA "ototoxic" ;
lin ottawa_PN = mkPN "Ottawa";
lin otter_N = mkN "otter" "otters";
lin otterhound_N = mkN "otterhound" ;
lin ottomanMasc_N = mkN masculine (mkN "ottoman" "ottomans");
lin ottomanFem_N = mkN feminine (mkN "ottoman" "ottomans");
lin oubliette_N = mkN "oubliette" "oubliettes";
lin ouguiya_N = mkN "ouguiya" ;
lin ouija_N = mkN "ouija" "ouijas";
lin ouija_board_N = mkN "ouija-board" "ouija-boards";
lin ounce_N = mkN "ounce" "ounces";
lin oust_V = mkV "oust";
lin oust_V2 = mkV2 (mkV "oust" "ousts" "ousted" "ousted" "ousting");
lin ouster_N = mkN "ouster" ;
lin out_A = mkA "out" ;
lin out_Adv = mkAdv "out";
lin out_N = mkN "out" ;
lin out_Prep = mkPrep "out";
lin out_V2 = mkV2 (mkV "out" "outs" "outed" "outed" "outing");
lin out_herod_V2 = mkV2 (mkV "out-herod" "out-herods" "out-heroded" "out-heroded" "out-heroding");
lin out_of_date_A = compoundA (mkA "out-of-date");
lin out_of_door_A = compoundA (mkA "out-of-door");
lin out_of_doors_Adv = mkAdv "out-of-doors";
lin out_of_the_way_A = compoundA (mkA "out-of-the-way");
lin out_of_the_way_Adv = mkAdv "out-of-the-way";
lin out_of_work_A = compoundA (mkA "out-of-work");
lin out_trade_V2 = mkV2 (mkV "out-trade");
lin out_tray_N = mkN "out-tray" "out-trays";
lin outage_N = mkN "outage" ;
lin outback_A = compoundA (mkA "outback");
lin outback_N = mkN "outback" "IRREG";
lin outbalance_V2 = mkV2 (mkV "outbalance" "outbalances" "outbalanced" "outbalanced" "outbalancing");
lin outbid_V2 = mkV2 (mkV "out" IrregEng.bid_V);
lin outboard_A = compoundA (mkA "outboard");
lin outbound_A = compoundA (mkA "outbound");
lin outbrave_V2 = mkV2 (mkV "outbrave" "outbraves" "outbraved" "outbraved" "outbraving");
lin outbreak_N = mkN "outbreak" "outbreaks";
lin outbred_A = mkA "outbred" ;
lin outbuilding_N = mkN "outbuilding" "outbuildings";
lin outburst_N = mkN "outburst" "outbursts";
lin outcast_A = compoundA (mkA "outcast");
lin outcast_N = mkN "outcast" "outcasts";
lin outcaste_A = compoundA (mkA "outcaste");
lin outcaste_N = mkN "outcaste" "outcastes";
lin outclass_V2 = mkV2 (mkV "outclass" "outclasses" "outclassed" "outclassed" "outclassing");
lin outcome_N = mkN "outcome" "outcomes";
lin outcrop_N = mkN "outcrop" "outcrops";
lin outcry_N = mkN "outcry" "outcries";
lin outdated_A = compoundA (mkA "outdated");
lin outdistance_V2 = mkV2 (mkV "outdistance" "outdistances" "outdistanced" "outdistanced" "outdistancing");
lin outdo_V2 = mkV2 (mkV "out" IrregEng.do_V);
lin outdoor_A = compoundA (mkA "outdoor");
lin outdoors_Adv = mkAdv "outdoors";
lin outdoors_N = mkN "outdoors" ;
lin outdoorsman_N = mkN masculine (mkN "outdoorsman" "outdoorsmen") ;
lin outdoorswoman_N = mkN feminine (mkN "outdoorswoman" "outdoorswomen") ;
lin outdoorsy_A = mkA "outdoorsy" ;
lin outer_A = compoundA (mkA "outer");
lin outercourse_N = mkN "outercourse" ;
lin outermost_A = compoundA (mkA "outermost");
lin outerwear_N = mkN "outerwear" ;
lin outface_V2 = mkV2 (mkV "outface" "outfaces" "outfaced" "outfaced" "outfacing");
lin outfall_N = mkN "outfall" "outfalls";
lin outfield_N = mkN "outfield" "outfields";
lin outfielder_N = mkN "outfielder" "outfielders";
lin outfight_V2 = mkV2 (mkV "out" IrregEng.fight_V);
lin outfit_N = mkN "outfit" "outfits";
lin outfit_V2 = mkV2 (mkV "outfit" "outfits" "outfitted" "outfitted" "outfitting");
lin outfitter_N = mkN "outfitter" "outfitters";
lin outfitting_N = mkN "outfitting" ;
lin outflank_V2 = mkV2 (mkV "outflank" "outflanks" "outflanked" "outflanked" "outflanking");
lin outflow_N = mkN "outflow" "outflows";
lin outfly_V2 = mkV2 (mkV "outfly");
lin outfox_V2 = mkV2 (mkV "outfox" "outfoxes" "outfoxed" "outfoxed" "outfoxing");
lin outgain_V2 = mkV2 (mkV "outgain");
lin outgo_N = mkN "outgo" "outgoes";
lin outgo_V = mkV "out" IrregEng.go_V;
lin outgrow_V2 = mkV2 (mkV "out" IrregEng.grow_V);
lin outgrowth_N = mkN "outgrowth" "outgrowths";
lin outhouse_N = mkN "outhouse" "outhouses";
lin outing_N = mkN "outing" "outings";
lin outlandish_A = compoundA (mkA "outlandish");
lin outlandishness_N = mkN "outlandishness" ;
lin outlast_V2 = mkV2 (mkV "outlast" "outlasts" "outlasted" "outlasted" "outlasting");
lin outlaw_N = mkN "outlaw" "outlaws";
lin outlaw_V2 = mkV2 (mkV "outlaw" "outlaws" "outlawed" "outlawed" "outlawing");
lin outlawry_N = mkN "outlawry" ;
lin outlay_N = mkN "outlay" "outlays";
lin outleap_V2 = mkV2 (mkV "outleap");
lin outlet_N = mkN "outlet" "outlets";
lin outlier_N = mkN "outlier" "outliers";
lin outline_N = mkN "outline" "outlines";
lin outline_V2 = mkV2 (mkV "outline" "outlines" "outlined" "outlined" "outlining");
lin outlive_V2 = mkV2 (mkV "outlive" "outlives" "outlived" "outlived" "outliving");
lin outlook_N = mkN "outlook" "outlooks";
lin outlying_A = compoundA (mkA "outlying");
lin outmanoeuvre_V2 = mkV2 (mkV "outmanoeuvre" "outmanoeuvres" "outmanoeuvred" "outmanoeuvred" "outmanoeuvring");
lin outmarch_V2 = mkV2 (mkV "outmarch" "outmarches" "outmarched" "outmarched" "outmarching");
lin outmatch_V2 = mkV2 (mkV "outmatch" "outmatches" "outmatched" "outmatched" "outmatching");
lin outmoded_A = compoundA (mkA "outmoded");
lin outmost_A = compoundA (mkA "outmost");
lin outnumber_V2 = mkV2 (mkV "outnumber" "outnumbers" "outnumbered" "outnumbered" "outnumbering");
lin outpace_V2 = mkV2 (mkV "outpace");
lin outpatient_N = mkN "outpatient" "outpatients";
lin outperform_V2 = mkV2 (mkV "outperform");
lin outplay_V2 = mkV2 (mkV "outplay" "outplays" "outplayed" "outplayed" "outplaying");
lin outpoint_V2 = mkV2 (mkV "outpoint" "outpoints" "outpointed" "outpointed" "outpointing");
lin outport_N = mkN "outport" "outports";
lin outpost_N = mkN "outpost" "outposts";
lin outpouring_N = mkN "outpouring" "outpourings";
lin output_N = mkN "output" "IRREG";
lin outrage_N = mkN "outrage" "outrages";
lin outrage_V2 = mkV2 (mkV "outrage" "outrages" "outraged" "outraged" "outraging");
lin outrageous_A = compoundA (mkA "outrageous");
lin outrageousness_N = mkN "outrageousness" ;
lin outrange_V2 = mkV2 (mkV "outrange" "outranges" "outranged" "outranged" "outranging");
lin outrank_V2 = mkV2 (mkV "outrank" "outranks" "outranked" "outranked" "outranking");
lin outre_A = compoundA (mkA "outré");
lin outreach_N = mkN "outreach" ;
lin outride_V2 = mkV2 (mkV "out" IrregEng.ride_V);
lin outrider_N = mkN "outrider" "outriders";
lin outrigged_A = compoundA (mkA "outrigged");
lin outrigger_N = mkN "outrigger" "outriggers";
lin outright_A = compoundA (mkA "outright");
lin outright_Adv = mkAdv "outright";
lin outrival_V2 = mkV2 (mkV "outrival" "outrivals" "outrivalled" "outrivalled" "outrivalling");
lin outrun_V2 = mkV2 (mkV "out" IrregEng.run_V);
lin outsail_V2 = mkV2 (mkV "outsail" "outsails" "outsailed" "outsailed" "outsailing");
lin outsell_V2 = mkV2 (mkV "outsell");
lin outset_N = mkN "outset" "outsets";
lin outshine_V2 = mkV2 (mkV "out" IrregEng.shine_V);
lin outside_A = compoundA (mkA "outside");
lin outside_Adv = mkAdv "outside";
lin outside_N = mkN "outside" "outsides";
lin outside_Prep = mkPrep "outside";
lin outsider_N = mkN "outsider" "outsiders";
lin outsize_A = compoundA (mkA "outsize");
lin outsize_N = mkN "outsize" ;
lin outskirt_N = mkN "outskirt" ;
lin outskirts_N = mkN "outskirts" ;
lin outsmart_V2 = mkV2 (mkV "outsmart" "outsmarts" "outsmarted" "outsmarted" "outsmarting");
lin outsole_N = mkN "outsole" ;
lin outspan_V = mkV "outspan" "outspans" "outspanned" "outspanned" "outspanning";
lin outspan_V2 = mkV2 (mkV "outspan" "outspans" "outspanned" "outspanned" "outspanning");
lin outspoken_A = compoundA (mkA "outspoken");
lin outspokenness_N = mkN "outspokenness" ;
lin outspread_A = compoundA (mkA "outspread");
lin outstanding_A = compoundA (mkA "outstanding");
lin outstation_N = mkN "outstation" "outstations";
lin outstay_V2 = mkV2 (mkV "outstay" "outstays" "outstayed" "outstayed" "outstaying");
lin outstretched_A = compoundA (mkA "outstretched");
lin outstrip_V2 = mkV2 (mkV "outstrip" "outstrips" "outstripped" "outstripped" "outstripping");
lin outstroke_N = mkN "outstroke" ;
lin outtake_N = mkN "outtake" ;
lin outthrust_N = mkN "outthrust" ;
lin outvie_V2 = mkV2 (mkV "outvie" "IRREG" "IRREG" "IRREG" "IRREG");
lin outvote_V2 = mkV2 (mkV "outvote" "outvotes" "outvoted" "outvoted" "outvoting");
lin outward_A = compoundA (mkA "outward");
lin outward_Adv = mkAdv "outward";
lin outwardness_N = mkN "outwardness" ;
lin outwards_Adv = mkAdv "outwards";
lin outwear_V2 = mkV2 (mkV "out" IrregEng.wear_V);
lin outweigh_V2 = mkV2 (mkV "outweigh" "outweighs" "outweighed" "outweighed" "outweighing");
lin outwit_V2 = mkV2 (mkV "outwit" "outwits" "outwitted" "outwitted" "outwitting");
lin outwork_N = mkN "outwork" "outworks";
lin ouzel_N = mkN "ouzel" "ouzels";
lin ouzo_N = mkN "ouzo" ;
lin oval_A = compoundA (mkA "oval");
lin oval_N = mkN "oval" "ovals";
lin ovarian_A = mkA "ovarian" ;
lin ovaritis_N = mkN "ovaritis" ;
lin ovary_N = mkN "ovary" "ovaries";
lin ovate_A = mkA "ovate" ;
lin ovation_N = mkN "ovation" "ovations";
lin oven_N = mkN "oven" "ovens";
lin ovenbird_N = mkN "ovenbird" ;
lin ovenware_N = mkN "ovenware" ;
lin over_Adv = mkAdv "over";
lin over_N = mkN "over" "overs";
lin over_Prep = mkPrep "over";
lin over_abundance_N = mkN "over-abundance" ;
lin over_magazine_V2 = mkV2 (mkV "over-magazine");
lin over_ripe_A = compoundA (mkA "over-ripe");
lin overabundance_N = mkN "overabundance" ;
lin overabundant_A = compoundA (mkA "overabundant");
lin overachievement_N = mkN "overachievement" ;
lin overachiever_N = mkN "overachiever" ;
lin overact_V = mkV "overact" "overacts" "overacted" "overacted" "overacting";
lin overact_V2 = mkV2 (mkV "overact" "overacts" "overacted" "overacted" "overacting");
lin overactive_A = compoundA (mkA "overactive");
lin overactivity_N = mkN "overactivity" ;
lin overage_A = mkA "overage" ;
lin overage_N = mkN "overage" ;
lin overall_A = compoundA (mkA "overall");
lin overall_N = mkN "overall" "overalls";
lin overambitious_A = compoundA (mkA "overambitious");
lin overanxiety_N = mkN "overanxiety" ;
lin overanxious_A = compoundA (mkA "overanxious");
lin overarch_V = mkV "overarch" "overarches" "overarched" "overarched" "overarching";
lin overarch_V2 = mkV2 (mkV "overarch" "overarches" "overarched" "overarched" "overarching");
lin overarm_A = compoundA (mkA "overarm");
lin overarm_Adv = mkAdv "overarm";
lin overawe_V2 = mkV2 (mkV "overawe" "overawes" "overawed" "overawed" "overawing");
lin overbalance_V = mkV "overbalance" "overbalances" "overbalanced" "overbalanced" "overbalancing";
lin overbalance_V2 = mkV2 (mkV "overbalance" "overbalances" "overbalanced" "overbalanced" "overbalancing");
lin overbear_V2 = mkV2 (mkV "over" IrregEng.bear_V);
lin overbearing_A = compoundA (mkA "overbearing");
lin overbid_N = mkN "overbid" "overbids";
lin overbid_V = mkV "over" IrregEng.bid_V;
lin overbid_V2 = mkV2 (mkV "over" IrregEng.bid_V);
lin overbite_N = mkN "overbite" ;
lin overblown_A = compoundA (mkA "overblown");
lin overboard_Adv = mkAdv "overboard";
lin overbold_A = compoundA (mkA "overbold");
lin overburden_N = mkN "overburden" ;
lin overburden_V2 = mkV2 (mkV "overburden" "overburdens" "overburdened" "overburdened" "overburdening");
lin overbusy_A = compoundA (mkA "overbusy");
lin overcall_V = mkV "overcall" "overcalls" "overcalled" "overcalled" "overcalling";
lin overcall_V2 = mkV2 (mkV "overcall" "overcalls" "overcalled" "overcalled" "overcalling");
lin overcapitalization_N = mkN "overcapitalization" ;
lin overcapitalize_V2 = mkV2 (mkV "overcapitalize" "overcapitalizes" "overcapitalized" "overcapitalized" "overcapitalizing");
lin overcareful_A = compoundA (mkA "overcareful");
lin overcast_A = compoundA (mkA "overcast");
lin overcast_N = mkN "overcast" "IRREG";
lin overcautious_A = compoundA (mkA "overcautious");
lin overcharge_N = mkN "overcharge" "overcharges";
lin overcharge_V = mkV "overcharge" "overcharges" "overcharged" "overcharged" "overcharging";
lin overcharge_V2 = mkV2 (mkV "overcharge" "overcharges" "overcharged" "overcharged" "overcharging");
lin overclothe_V2 = mkV2 (mkV "overclothe" "overclothes" "overclothed" "overclothed" "overclothing");
lin overcloud_V = mkV "overcloud" "overclouds" "overclouded" "overclouded" "overclouding";
lin overcloud_V2 = mkV2 (mkV "overcloud" "overclouds" "overclouded" "overclouded" "overclouding");
lin overcoat_N = mkN "overcoat" "overcoats";
lin overcome_V = mkV "overcome";
lin overcome_V2 = mkV2 (IrregEng.overcome_V);
lin overcommit_V2 = mkV2 (mkV "overcommit");
lin overcompensation_N = mkN "overcompensation" ;
lin overconfidence_N = mkN "overconfidence" ;
lin overconfident_A = compoundA (mkA "overconfident");
lin overcook_V2 = mkV2 (mkV "overcook" "overcooks" "overcooked" "overcooked" "overcooking");
lin overcredulity_N = mkN "overcredulity" ;
lin overcredulous_A = compoundA (mkA "overcredulous");
lin overcritical_A = compoundA (mkA "overcritical");
lin overcrop_V2 = mkV2 (mkV "overcrop" "overcrops" "overcropped" "overcropped" "overcropping");
lin overcrowd_V2 = mkV2 (mkV "overcrowd" "overcrowds" "overcrowded" "overcrowded" "overcrowding");
lin overcurious_A = compoundA (mkA "overcurious");
lin overdelicate_A = compoundA (mkA "overdelicate");
lin overdo_V2 = mkV2 (IrregEng.overdo_V);
lin overdose_V = mkV "overdose";
lin overdraft_N = mkN "overdraft" "overdrafts";
lin overdraw_V = mkV "over" IrregEng.draw_V;
lin overdraw_V2 = mkV2 (mkV "over" IrregEng.draw_V);
lin overdress_V = mkV "overdress" "overdresses" "overdressed" "overdressed" "overdressing";
lin overdress_V2 = mkV2 (mkV "overdress" "overdresses" "overdressed" "overdressed" "overdressing");
lin overdrive_N = mkN "overdrive" "overdrives";
lin overdue_A = compoundA (mkA "overdue");
lin overeager_A = compoundA (mkA "overeager");
lin overeat_V = mkV "over" IrregEng.eat_V;
lin overemotional_A = compoundA (mkA "overemotional");
lin overemphasis_N = mkN "overemphasis" ;
lin overemphasize_V = mkV "overemphasize";
lin overemphasize_V2 = mkV2 (mkV "overemphasize" "overemphasizes" "overemphasized" "overemphasized" "overemphasizing");
lin overenthusiastic_A = compoundA (mkA "overenthusiastic");
lin overestimate_N = mkN "overestimate" ;
lin overestimate_V2 = mkV2 (mkV "overestimate" "overestimates" "overestimated" "overestimated" "overestimating");
lin overexcited_A = compoundA (mkA "overexcited");
lin overexert_V2 = mkV2 (mkV "overexert" "overexerts" "overexerted" "overexerted" "overexerting");
lin overexertion_N = mkN "overexertion" "overexertions";
lin overexploitation_N = mkN "overexploitation" ;
lin overexpose_V2 = mkV2 (mkV "overexpose" "overexposes" "overexposed" "overexposed" "overexposing");
lin overexposure_N = mkN "overexposure" "overexposures";
lin overfamiliar_A = compoundA (mkA "overfamiliar");
lin overfed_A = mkA "overfed" ;
lin overfeed_V = mkV "overfeed" "overfeeds" "overfeeded" "overfeeded" "overfeeding";
lin overfeed_V2 = mkV2 (mkV "overfeed" "overfeeds" "overfeeded" "overfeeded" "overfeeding");
lin overfeeding_N = mkN "overfeeding" ;
lin overflight_N = mkN "overflight" ;
lin overflow_N = mkN "overflow" "overflows";
lin overflow_V = mkV "overflow" "overflows" "overflowed" "overflowed" "overflowing";
lin overflow_V2 = mkV2 (mkV "overflow" "overflows" "overflowed" "overflowed" "overflowing");
lin overfly_V2 = mkV2 (mkV "over" IrregEng.fly_V);
lin overfond_A = compoundA (mkA "overfond");
lin overfull_A = compoundA (mkA "overfull");
lin overgarment_N = mkN "overgarment" ;
lin overgenerous_A = compoundA (mkA "overgenerous");
lin overgreedy_A = compoundA (mkA "overgreedy");
lin overgrown_A = compoundA (mkA "overgrown");
lin overgrowth_N = mkN "overgrowth" "overgrowths";
lin overhand_A = compoundA (mkA "overhand");
lin overhang_N = mkN "overhang" "overhangs";
lin overhang_V = mkV "over" IrregEng.hang_V;
lin overhang_V2 = mkV2 (mkV "over" IrregEng.hang_V);
lin overhasty_A = compoundA (mkA "overhasty");
lin overhaul_N = mkN "overhaul" "overhauls";
lin overhaul_V2 = mkV2 (mkV "overhaul" "overhauls" "overhauled" "overhauled" "overhauling");
lin overhead_A = compoundA (mkA "overhead");
lin overhead_Adv = mkAdv "overhead";
lin overhead_N = mkN "overhead" ;
lin overhear_V2 = mkV2 (mkV "over" IrregEng.hear_V);
lin overheat_V2 = mkV2 (mkV "overheat" "overheats" "overheated" "overheated" "overheating");
lin overheating_N = mkN "overheating" ;
lin overindulge_V = mkV "overindulge" "overindulges" "overindulged" "overindulged" "overindulging";
lin overindulge_V2 = mkV2 (mkV "overindulge" "overindulges" "overindulged" "overindulged" "overindulging");
lin overindulgence_N = mkN "overindulgence" "overindulgences";
lin overindulgent_A = mkA "overindulgent" ;
lin overjealous_A = compoundA (mkA "overjealous");
lin overjoyed_A = compoundA (mkA "overjoyed");
lin overkill_N = mkN "overkill" ;
lin overladen_A = compoundA (mkA "overladen");
lin overland_A = compoundA (mkA "overland");
lin overlap_N = mkN "overlap" "overlaps";
lin overlap_V = mkV "overlap" "overlaps" "overlapped" "overlapped" "overlapping";
lin overlap_V2 = mkV2 (mkV "overlap" "overlaps" "overlapped" "overlapped" "overlapping");
lin overlarge_A = compoundA (mkA "overlarge");
lin overlay_N = mkN "overlay" "overlays";
lin overlay_V2 = mkV2 (mkV "over" IrregEng.lay_V);
lin overleaf_Adv = mkAdv "overleaf";
lin overleap_V2 = mkV2 (mkV "overleap" "overleaps" "overleaped" "overleaped" "overleaping");
lin overlie_V = mkV "over" IrregEng.lie_V;
lin overlip_N = mkN "overlip" ;
lin overload_N = mkN "overload" ;
lin overload_V2 = mkV2 (mkV "overload" "overloads" "overloaded" "overloaded" "overloading");
lin overlook_N = mkN "overlook" ;
lin overlook_V2 = mkV2 (mkV "overlook" "overlooks" "overlooked" "overlooked" "overlooking");
lin overlord_N = mkN "overlord" "overlords";
lin overlordship_N = mkN "overlordship" ;
lin overly_Adv = mkAdv "overly";
lin overmantel_N = mkN "overmantel" "overmantels";
lin overmaster_V2 = mkV2 (mkV "overmaster" "overmasters" "overmastered" "overmastered" "overmastering");
lin overmodest_A = compoundA (mkA "overmodest");
lin overmuch_A = compoundA (mkA "overmuch");
lin overmuch_Adv = mkAdv "overmuch";
lin overnervous_A = compoundA (mkA "overnervous");
lin overnight_A = compoundA (mkA "overnight");
lin overnight_Adv = mkAdv "overnight";
lin overnighter_N = mkN "overnighter" ;
lin overpass_N = mkN "overpass" "overpasses";
lin overpay_V = mkV "overpay";
lin overpay_V2 = mkV2 (mkV "over" IrregEng.pay_V);
lin overpayment_N = mkN "overpayment" "overpayments";
lin overplant_V2 = mkV2 (mkV "overplant");
lin overplay_V2 = mkV2 (mkV "overplay" "overplays" "overplayed" "overplayed" "overplaying");
lin overplus_N = mkN "overplus" "overpluses";
lin overpopulation_N = mkN "overpopulation" ;
lin overpower_V2 = mkV2 (mkV "overpower" "overpowers" "overpowered" "overpowered" "overpowering");
lin overpowering_A = compoundA (mkA "overpowering");
lin overpraise_V2 = mkV2 (mkV "overpraise" "overpraises" "overpraised" "overpraised" "overpraising");
lin overpressure_N = mkN "overpressure" ;
lin overprice_V2 = mkV2 (mkV "overprice");
lin overprint_N = mkN "overprint" "overprints";
lin overprint_V2 = mkV2 (mkV "overprint" "overprints" "overprinted" "overprinted" "overprinting");
lin overproduce_V = mkV "overproduce" "overproduces" "overproduced" "overproduced" "overproducing";
lin overproduce_V2 = mkV2 (mkV "overproduce" "overproduces" "overproduced" "overproduced" "overproducing");
lin overproduction_N = mkN "overproduction" ;
lin overprotective_A = mkA "overprotective" ;
lin overproud_A = compoundA (mkA "overproud");
lin overrate_V2 = mkV2 (mkV "overrate" "overrates" "overrated" "overrated" "overrating");
lin overreach_V2 = mkV2 (mkV "overreach" "overreaches" "overreached" "overreached" "overreaching");
lin overreaching_A = mkA "overreaching" ;
lin overreact_V = mkV "overreact";
lin overreaction_N = mkN "overreaction" ;
lin overrefined_A = mkA "overrefined" ;
lin override_N = mkN "override" ;
lin override_V2 = mkV2 (mkV "over" IrregEng.ride_V);
lin overriding_A = mkA "overriding" ;
lin overripe_A = compoundA (mkA "overripe");
lin overrule_V2 = mkV2 (mkV "overrule" "overrules" "overruled" "overruled" "overruling");
lin overrun_V2 = mkV2 (mkV "over" IrregEng.run_V);
lin oversea_A = compoundA (mkA "oversea");
lin oversea_Adv = mkAdv "oversea";
lin overseas_A = compoundA (mkA "overseas");
lin overseas_Adv = mkAdv "overseas";
lin oversee_V2 = mkV2 (mkV "over" IrregEng.see_V);
lin overseer_N = mkN "overseer" "overseers";
lin oversell_V2 = mkV2 (mkV "oversell");
lin oversensitive_A = compoundA (mkA "oversensitive");
lin oversensitiveness_N = mkN "oversensitiveness" ;
lin overserious_A = compoundA (mkA "overserious");
lin oversew_V2 = mkV2 (mkV "over" IrregEng.sew_V);
lin oversewn_A = compoundA (mkA "oversewn");
lin oversexed_A = compoundA (mkA "oversexed");
lin overshadow_V2 = mkV2 (mkV "overshadow" "overshadows" "overshadowed" "overshadowed" "overshadowing");
lin overshoe_N = mkN "overshoe" "overshoes";
lin overshoot_N = mkN "overshoot" ;
lin overshoot_V2 = mkV2 (mkV "over" IrregEng.shoot_V);
lin overside_Adv = mkAdv "overside";
lin oversight_N = mkN "oversight" "oversights";
lin oversimplification_N = mkN "oversimplification" ;
lin oversimplify_V = mkV "oversimplify";
lin oversimplify_V2 = mkV2 (mkV "oversimplify" "oversimplifies" "oversimplified" "oversimplified" "oversimplifying");
lin oversize_A = compoundA (mkA "oversize");
lin overskirt_N = mkN "overskirt" "overskirts";
lin oversleep_V = mkV "over" IrregEng.sleep_V;
lin oversolicitous_A = mkA "oversolicitous" ;
lin overspend_V = mkV "over" IrregEng.spend_V;
lin overspend_V2 = mkV2 (mkV "over" IrregEng.spend_V);
lin overspill_N = mkN "overspill" "overspills";
lin overstate_V2 = mkV2 (mkV "overstate" "overstates" "overstated" "overstated" "overstating");
lin overstatement_N = mkN "overstatement" "overstatements";
lin overstay_V2 = mkV2 (mkV "overstay" "overstays" "overstayed" "overstayed" "overstaying");
lin overstep_V2 = mkV2 (mkV "overstep" "oversteps" "overstepped" "overstepped" "overstepping");
lin overstock_V2 = mkV2 (mkV "overstock" "overstocks" "overstocked" "overstocked" "overstocking");
lin overstrain_N = mkN "overstrain" ;
lin overstrain_V2 = mkV2 (mkV "overstrain" "overstrains" "overstrained" "overstrained" "overstraining");
lin overstrung_A = compoundA (mkA "overstrung");
lin overstuffed_A = compoundA (mkA "overstuffed");
lin oversubscribe_V2 = mkV2 (mkV "oversubscribe");
lin oversuspicious_A = compoundA (mkA "oversuspicious");
lin overt_A = compoundA (mkA "overt");
lin overtake_V2 = mkV2 (IrregEng.overtake_V);
lin overtax_V2 = mkV2 (mkV "overtax" "overtaxes" "overtaxed" "overtaxed" "overtaxing");
lin overthrow_N = mkN "overthrow" "overthrows";
lin overthrow_V2 = mkV2 (IrregEng.overthrow_V);
lin overtime_Adv = mkAdv "overtime";
lin overtime_N = mkN "overtime" ;
lin overtolerance_N = mkN "overtolerance" ;
lin overtone_N = mkN "overtone" "overtones";
lin overtop_V2 = mkV2 (mkV "overtop" "overtops" "overtopped" "overtopped" "overtopping");
lin overtrump_V2 = mkV2 (mkV "overtrump" "overtrumps" "overtrumped" "overtrumped" "overtrumping");
lin overture_N = mkN "overture" "overtures";
lin overturn_N = mkN "overturn" ;
lin overturn_V = mkV "overturn" "overturns" "overturned" "overturned" "overturning";
lin overturn_V2 = mkV2 (mkV "overturn" "overturns" "overturned" "overturned" "overturning");
lin overvaliant_A = mkA "overvaliant" ;
lin overvaluation_N = mkN "overvaluation" ;
lin overvalue_V2 = mkV2 (mkV "overvalue" "overvalues" "overvalued" "overvalued" "overvaluing");
lin overview_N = mkN "overview" ;
lin overweening_A = compoundA (mkA "overweening");
lin overweight_A = compoundA (mkA "overweight");
lin overweight_N = mkN "overweight" ;
lin overweighted_A = compoundA (mkA "overweighted");
lin overwhelm_V2 = mkV2 (mkV "overwhelm" "overwhelms" "overwhelmed" "overwhelmed" "overwhelming");
lin overwhelmingly_Adv = mkAdv "overwhelmingly";
lin overwork_N = mkN "overwork" ;
lin overwork_V = mkV "overwork" "overworks" "overworked" "overworked" "overworking";
lin overwork_V2 = mkV2 (mkV "overwork" "overworks" "overworked" "overworked" "overworking");
lin overwrought_A = compoundA (mkA "overwrought");
lin overzealous_A = compoundA (mkA "overzealous");
lin oviduct_N = mkN "oviduct" "oviducts";
lin oviedo_PN = mkPN "Oviedo";
lin ovine_A = mkA "ovine" ;
lin oviparous_A = compoundA (mkA "oviparous");
lin ovipositor_N = mkN "ovipositor" ;
lin oviraptorid_N = mkN "oviraptorid" ;
lin ovoid_A = compoundA (mkA "ovoid");
lin ovoid_N = mkN "ovoid" "ovoids";
lin ovolo_N = mkN "ovolo" ;
lin ovotestis_N = mkN "ovotestis" ;
lin ovoviviparous_A = mkA "ovoviviparous" ;
lin ovular_A = mkA "ovular" ;
lin ovulation_N = mkN "ovulation" ;
lin ovule_N = mkN "ovule" ;
lin ovum_N = mkN "ovum" "ova" {- FIXME: guessed plural form -};
lin owe_V = mkV "owe" "owes" "owed" "owed" "owing";
lin owe_V2 = mkV2 (mkV "owe" "owes" "owed" "owed" "owing");
lin owl_N = mkN "owl" "owls";
lin owlet_N = mkN "owlet" "owlets";
lin owlish_A = compoundA (mkA "owlish");
lin own_A = compoundA (mkA "own");
lin own_V = mkV "own" "owns" "owned" "owned" "owning";
lin own_V2 = mkV2 (mkV "own" "owns" "owned" "owned" "owning");
lin owner_N = mkN human (mkN "owner" "owners");
lin owner_driven_A = compoundA (mkA "owner-driven");
lin owner_driver_N = mkN "owner-driver" "owner-drivers";
lin owner_occupied_A = compoundA (mkA "owner-occupied");
lin owner_occupier_N = mkN "owner-occupier" "owner-occupiers";
lin ownerless_A = compoundA (mkA "ownerless");
lin ownership_N = mkN "ownership" ;
lin ox_N = mkN "ox" "IRREG";
lin oxacillin_N = mkN "oxacillin" ;
lin oxalacetate_N = mkN "oxalacetate" ;
lin oxalate_N = mkN "oxalate" ;
lin oxalis_N = mkN "oxalis" ;
lin oxaprozin_N = mkN "oxaprozin" ;
lin oxazepam_N = mkN "oxazepam" ;
lin oxbow_N = mkN "oxbow" ;
lin oxbridge_PN = mkPN "Oxbridge";
lin oxcart_N = mkN "oxcart" ;
lin oxeye_N = mkN "oxeye" "oxeyes";
lin oxeyed_A = compoundA (mkA "oxeyed");
lin oxford_N = mkN "oxford" ;
lin oxford_PN = mkPN "Oxford";
lin oxfordshire_PN = mkPN "Oxfordshire";
lin oxidant_N = mkN "oxidant" ;
lin oxidase_N = mkN "oxidase" ;
lin oxidation_N = mkN "oxidation" ;
lin oxidative_A = mkA "oxidative" ;
lin oxide_N = mkN "oxide" "oxides";
lin oxidizable_A = mkA "oxidizable" ;
lin oxidization_N = mkN "oxidization" "oxidizations";
lin oxidize_V = mkV "oxidize" "oxidizes" "oxidized" "oxidized" "oxidizing";
lin oxidize_V2 = mkV2 (mkV "oxidize" "oxidizes" "oxidized" "oxidized" "oxidizing");
lin oxidoreductase_N = mkN "oxidoreductase" ;
lin oxime_N = mkN "oxime" ;
lin oximeter_N = mkN "oximeter" ;
lin oxlip_N = mkN "oxlip" ;
lin oxon_PN = mkPN "Oxon";
lin oxonian_A = compoundA (mkA "oxonian");
lin oxonian_N = mkN "oxonian" "oxonians";
lin oxtail_N = mkN "oxtail" "oxtails";
lin oxtant_N = mkN "oxtant" ;
lin oxted_PN = mkPN "Oxted";
lin oxtongue_N = mkN "oxtongue" ;
lin oxyacetylene_A = compoundA (mkA "oxyacetylene");
lin oxyacetylene_N = mkN "oxyacetylene" ;
lin oxyacid_N = mkN "oxyacid" ;
lin oxycephaly_N = mkN "oxycephaly" ;
lin oxygen_N = mkN "oxygen" ;
lin oxygenase_N = mkN "oxygenase" ;
lin oxygenate_V2 = mkV2 (mkV "oxygenate" "oxygenates" "oxygenated" "oxygenated" "oxygenating");
lin oxygenation_N = mkN "oxygenation" ;
lin oxygenize_V2 = mkV2 (mkV "oxygenize" "oxygenizes" "oxygenized" "oxygenized" "oxygenizing");
lin oxyhemoglobin_N = mkN "oxyhemoglobin" ;
lin oxymoron_N = mkN "oxymoron" ;
lin oxyopia_N = mkN "oxyopia" ;
lin oxyphenbutazone_N = mkN "oxyphenbutazone" ;
lin oxyphencyclimine_N = mkN "oxyphencyclimine" ;
lin oxytetracycline_N = mkN "oxytetracycline" ;
lin oxytocic_N = mkN "oxytocic" ;
lin oxytocin_N = mkN "oxytocin" ;
lin oxytone_N = mkN "oxytone" ;
lin oyabun_N = mkN "oyabun" ;
lin oyster_N = mkN "oyster" "oysters";
lin oyster_bank_N = mkN "oyster-bank" "oyster-banks";
lin oyster_bar_N = mkN "oyster-bar" "oyster-bars";
lin oyster_bed_N = mkN "oyster-bed" "oyster-beds";
lin oyster_catcher_N = mkN "oyster-catcher" "oyster-catchers";
lin oystercatcher_N = mkN "oystercatcher" ;
lin oz_N = mkN "oz" "oz";
lin ozena_N = mkN "ozena" ;
lin ozone_N = mkN "ozone" ;
lin ozonide_N = mkN "ozonide" ;
lin ozzie_PN = mkPN "Ozzie";
lin pa_N = mkN "pa" ;
lin paanga_N = mkN "pa'anga" ;
lin pabulum_N = mkN "pabulum" ;
lin paca_N = mkN "paca" ;
lin pace_N = mkN "pace" "paces";
lin pace_V = mkV "pace" "paces" "paced" "paced" "pacing";
lin pace_V2 = mkV2 (mkV "pace" "paces" "paced" "paced" "pacing");
lin pacemaker_N = mkN "pacemaker" "pacemakers";
lin pacer_N = mkN "pacer" ;
lin pacesetter_N = mkN "pacesetter" "pacesetters";
lin pachinko_N = mkN "pachinko";
lin pachisi_N = mkN "pachisi" ;
lin pachuco_N = mkN "pachuco" ;
lin pachycephalosaur_N = mkN "pachycephalosaur" ;
lin pachycheilia_N = mkN "pachycheilia" ;
lin pachyderm_N = mkN "pachyderm" "pachyderms";
lin pachydermatous_A = mkA "pachydermatous" ;
lin pachysandra_N = mkN "pachysandra" ;
lin pachytene_N = mkN "pachytene" ;
lin pacific_A = compoundA (mkA "pacific");
lin pacific_PN = mkPN "Pacific";
lin pacifically_Adv = mkAdv "pacifically";
lin pacification_N = mkN "pacification" ;
lin pacifier_N = mkN "pacifier" ;
lin pacifism_N = mkN "pacifism" ;
lin pacifistMasc_N = mkN masculine (mkN "pacifist" "pacifists");
lin pacifistFem_N = mkN feminine (mkN "pacifist" "pacifists");
lin pacifistically_Adv = mkAdv "pacifistically" ;
lin pacify_V2 = mkV2 (mkV "pacify" "pacifies" "pacified" "pacified" "pacifying");
lin pacing_N = mkN "pacing" ;
lin pack_N = mkN "pack" "packs";
lin pack_V = mkV "pack" "packs" "packed" "packed" "packing";
lin pack_V2 = mkV2 (mkV "pack" "packs" "packed" "packed" "packing");
lin pack_animal_N = mkN "pack-animal" "pack-animals";
lin pack_saddle_N = mkN "pack-saddle" "pack-saddles";
lin pack_thread_N = mkN "pack-thread" ;
lin packable_A = mkA "packable" ;
lin package_N = mkN "package" "packages";
lin package_V2 = mkV2 (mkV "package" "packages" "packaged" "packaged" "packaging");
lin packaging_N = mkN "packaging" ;
lin packer_N = mkN "packer" "packers";
lin packet_N = mkN "packet" "packets";
lin packet_boat_N = mkN "packet-boat" "packet-boats";
lin packhorse_N = mkN "packhorse" "packhorses";
lin packing_N = mkN "packing" ;
lin packing_case_N = mkN "packing-case" "packing-cases";
lin packing_needle_N = mkN "packing-needle" "packing-needles";
lin packinghouse_N = mkN "packinghouse" ;
lin packrat_N = mkN "packrat" ;
lin packsaddle_N = mkN "packsaddle" ;
lin packthread_N = mkN "packthread" ;
lin pact_N = mkN "pact" "pacts";
lin pad_N = mkN "pad" "pads";
lin pad_V = mkV "pad" "pads" "padded" "padded" "padding";
lin pad_V2 = mkV2 (mkV "pad" "pads" "padded" "padded" "padding");
lin padauk_N = mkN "padauk" ;
lin padding_N = mkN "padding" ;
lin paddle_N = mkN "paddle" "paddles";
lin paddle_V = mkV "paddle" "paddles" "paddled" "paddled" "paddling";
lin paddle_V2 = mkV2 (mkV "paddle" "paddles" "paddled" "paddled" "paddling");
lin paddle_box_N = mkN "paddle-box" "paddle-boxes";
lin paddle_steamer_N = mkN "paddle-steamer" "paddle-steamers";
lin paddle_wheel_N = mkN "paddle-wheel" "paddle-wheels";
lin paddlefish_N = mkN "paddlefish" ;
lin paddlewheel_N = mkN "paddlewheel" ;
lin paddock_N = mkN "paddock" "paddocks";
lin paddy_N = mkN "paddy" "paddies";
lin paddy_PN = mkPN "Paddy";
lin paddy_field_N = mkN "paddy-field" "paddy-fields";
lin paddy_wagon_N = mkN "paddy-wagon" "paddy-wagons";
lin pademelon_N = mkN "pademelon" ;
lin padlock_N = mkN "padlock" "padlocks";
lin padlock_V2 = mkV2 (mkV "padlock" "padlocks" "padlocked" "padlocked" "padlocking");
lin padova_PN = mkPN "Padova";
lin padre_N = mkN "padre" "padres";
lin padrone_N = mkN "padrone" ;
lin padua_PN = mkPN "Padua";
lin paean_N = mkN "paean" "paeans";
lin paederasty_N = mkN "paederasty" ;
lin paediatrics_N = mkN "paediatrics" "paediatrics";
lin paella_N = mkN "paella" ;
lin paeony_N = mkN "paeony" "paeonies";
lin pagan_A = compoundA (mkA "pagan");
lin pagan_N = mkN human (mkN "pagan" "pagans");
lin paganism_N = mkN "paganism" ;
lin page_N = mkN "page" "pages";
lin page_V2 = mkV2 (mkV "page" "pages" "paged" "paged" "paging");
lin pageant_N = mkN "pageant" "pageants";
lin pageantry_N = mkN "pageantry" ;
lin pageboy_N = mkN "pageboy" ;
lin pagination_N = mkN "pagination" ;
lin paging_N = mkN "paging" ;
lin pagoda_N = mkN "pagoda" "pagodas";
lin pahautea_N = mkN "pahautea" ;
lin pahoehoe_N = mkN "pahoehoe" ;
lin pail_N = mkN "pail" "pails";
lin pailful_N = mkN "pailful" "pailfuls";
lin paillasse_N = mkN "paillasse" "paillasses";
lin pailliasse_N = mkN "pailliasse" "pailliasses";
lin pain_N = mkN "pain" "pains";
lin pain_V2 = mkV2 (mkV "pain" "pains" "pained" "pained" "paining");
lin painful_A = compoundA (mkA "painful");
lin painfulness_N = mkN "painfulness" ;
lin painkiller_N = mkN "painkiller" "painkillers";
lin painless_A = compoundA (mkA "painless");
lin painstaking_A = compoundA (mkA "painstaking");
lin paint_N = mkN "paint" "paints";
lin paint_V = mkV "paint" "paints" "painted" "painted" "painting";
lin paint_V2 = mkV2 (mkV "paint" "paints" "painted" "painted" "painting");
lin paintable_A = mkA "paintable" ;
lin paintball_N = mkN "paintball" ;
lin paintbox_N = mkN "paintbox" "paintboxes";
lin paintbrush_N = mkN "paintbrush" "paintbrushes";
lin painter_N = mkN "painter" "painters";
lin painterly_A = mkA "painterly" ;
lin painting_N = mkN "painting" "paintings";
lin pair_N = mkN "pair" "pairs";
lin pair_V = mkV "pair" "pairs" "paired" "paired" "pairing";
lin pair_V2 = mkV2 (mkV "pair" "pairs" "paired" "paired" "pairing");
lin pairing_N = mkN "pairing" ;
lin paisa_N = mkN "paisa" ;
lin paisley_N = mkN "paisley" ;
lin paisley_PN = mkPN "Paisley";
lin pajama_N = mkN "pajama" ;
lin pakistan_PN = mkPN "Pakistan";
lin pakistani_A = compoundA (mkA "Pakistani");
lin pakistaniMasc_N = mkN masculine (mkN "Pakistani" "Pakistanis");
lin pakistaniFem_N = mkN feminine (mkN "Pakistani" "Pakistanis");
lin pal_N = mkN "pal" "pals";
lin pal_V = mkV "pal" "pals" "palled" "palled" "palling";
lin palace_N = mkN "palace" "palaces";
lin paladin_N = mkN "paladin" "paladins";
lin palaeolithic_A = compoundA (mkA "palaeolithic");
lin palaeontologist_N = mkN "palaeontologist" "palaeontologists";
lin palaeontology_N = mkN "palaeontology" ;
lin palankeen_N = mkN "palankeen" "palankeens";
lin palanquin_N = mkN "palanquin" "palanquins";
lin palatability_N = mkN "palatability" ;
lin palatable_A = compoundA (mkA "palatable");
lin palatal_A = compoundA (mkA "palatal");
lin palatal_N = mkN "palatal" "palatals";
lin palate_N = mkN "palate" "palates";
lin palatial_A = compoundA (mkA "palatial");
lin palatinate_N = mkN "palatinate" "palatinates";
lin palatine_A = mkA "palatine" ;
lin palatine_N = mkN "palatine" ;
lin palatoglossal_A = mkA "palatoglossal" ;
lin palatopharyngoplasty_N = mkN "palatopharyngoplasty" ;
lin palaver_N = mkN "palaver" "palavers";
lin palaver_V = mkV "palaver" "palavers" "palavered" "palavered" "palavering";
lin pale_A = mkA "pale" "paler";
lin pale_N = mkN "pale" "pales";
lin pale_V = mkV "pale" "pales" "paled" "paled" "paling";
lin paleencephalon_N = mkN "paleencephalon" ;
lin paleface_N = mkN "paleface" "palefaces";
lin palembang_PN = mkPN "Palembang";
lin paleness_N = mkN "paleness" ;
lin paleoanthropological_A = mkA "paleoanthropological" ;
lin paleoanthropology_N = mkN "paleoanthropology" ;
lin paleobiology_N = mkN "paleobiology" ;
lin paleobotany_N = mkN "paleobotany" ;
lin paleocerebellum_N = mkN "paleocerebellum" ;
lin paleoclimatology_N = mkN "paleoclimatology" ;
lin paleocortical_A = mkA "paleocortical" ;
lin paleodendrology_N = mkN "paleodendrology" ;
lin paleoecology_N = mkN "paleoecology" ;
lin paleoethnography_N = mkN "paleoethnography" ;
lin paleogeography_N = mkN "paleogeography" ;
lin paleogeology_N = mkN "paleogeology" ;
lin paleographer_N = mkN "paleographer" ;
lin paleography_N = mkN "paleography" ;
lin paleolith_N = mkN "paleolith" ;
lin paleolithic_A = compoundA (mkA "paleolithic");
lin paleology_N = mkN "paleology" ;
lin paleomammalogy_N = mkN "paleomammalogy" ;
lin paleontological_A = mkA "paleontological" ;
lin paleontologist_N = mkN "paleontologist" "paleontologists";
lin paleontology_N = mkN "paleontology" ;
lin paleopathology_N = mkN "paleopathology" ;
lin paleornithology_N = mkN "paleornithology" ;
lin paleozoology_N = mkN "paleozoology" ;
lin palermo_PN = mkPN "Palermo";
lin palestine_PN = mkPN "Palestine";
lin palestinian_A = compoundA (mkA "palestinian");
lin palestinian_N = mkN "palestinian" "palestinians";
lin palestra_N = mkN "palestra" ;
lin paletiology_N = mkN "paletiology" ;
lin palette_N = mkN "palette" "palettes";
lin palette_knife_N = mkN "palette-knife" "palette-knives";
lin palfrey_N = mkN "palfrey" "palfreys";
lin palilalia_N = mkN "palilalia" ;
lin palimony_N = mkN "palimony" ;
lin palimpsest_N = mkN "palimpsest" "palimpsests";
lin palindrome_N = mkN "palindrome" "palindromes";
lin paling_N = mkN "paling" "palings";
lin palingenesis_N = mkN "palingenesis" ;
lin palingenetic_A = mkA "palingenetic" ;
lin palisade_N = mkN "palisade" "palisades";
lin palisade_V2 = mkV2 (mkV "palisade" "palisades" "palisaded" "palisaded" "palisading");
lin palish_A = compoundA (mkA "palish");
lin pall_N = mkN "pall" "palls";
lin pall_V = mkV "pall" "palls" "palled" "palled" "palling";
lin palladium_N = mkN "palladium" ;
lin pallasite_N = mkN "pallasite" ;
lin pallbearer_N = mkN "pallbearer" "pallbearers";
lin pallet_N = mkN "pallet" "pallets";
lin pallette_N = mkN "pallette" ;
lin palliasse_N = mkN "palliasse" "palliasses";
lin palliate_V2 = mkV2 (mkV "palliate" "palliates" "palliated" "palliated" "palliating");
lin palliation_N = mkN "palliation" "palliations";
lin palliative_A = compoundA (mkA "palliative");
lin palliative_N = mkN "palliative" "palliatives";
lin pallid_A = compoundA (mkA "pallid");
lin pallidness_N = mkN "pallidness" ;
lin pallidum_N = mkN "pallidum" ;
lin pallium_N = mkN "pallium" ;
lin pallone_N = mkN "pallone" ;
lin pallor_N = mkN "pallor" ;
lin pally_A = mkA "pally" "pallier";
lin palm_N = mkN "palm" "palms";
lin palm_V2 = mkV2 (mkV "palm" "palms" "palmed" "palmed" "palming");
lin palm_oil_N = mkN "palm-oil" ;
lin palmar_A = mkA "palmar" ;
lin palmate_A = mkA "palmate" ;
lin palmatifid_A = mkA "palmatifid" ;
lin palmature_N = mkN "palmature" ;
lin palmer_N = mkN "palmer" "palmers";
lin palmetto_N = mkN "palmetto" "palmettos";
lin palmist_N = mkN "palmist" "palmists";
lin palmistry_N = mkN "palmistry" ;
lin palmitin_N = mkN "palmitin" ;
lin palmlike_A = mkA "palmlike" ;
lin palmy_A = mkA "palmy" "palmier";
lin palmyra_N = mkN "palmyra" ;
lin palometa_N = mkN "palometa" ;
lin palomino_N = mkN "palomino" ;
lin paloverde_N = mkN "paloverde" ;
lin palpable_A = compoundA (mkA "palpable");
lin palpation_N = mkN "palpation" ;
lin palpatory_A = mkA "palpatory" ;
lin palpebrate_A = mkA "palpebrate" ;
lin palpebration_N = mkN "palpebration" ;
lin palpitant_A = mkA "palpitant" ;
lin palpitate_V = mkV "palpitate" "palpitates" "palpitated" "palpitated" "palpitating";
lin palpitation_N = mkN "palpitation" "palpitations";
lin palsy_N = mkN "palsy" ;
lin palsy_V2 = mkV2 (mkV "palsy" "palsies" "palsied" "palsied" "palsying");
lin palter_V = mkV "palter" "palters" "paltered" "paltered" "paltering";
lin paltriness_N = mkN "paltriness" ;
lin paltry_A = mkA "paltry" "paltrier";
lin pam_PN = mkPN "Pam";
lin pamela_PN = mkPN "Pamela";
lin pampas_N = mkN "pampas" ;
lin pampas_grass_N = mkN "pampas-grass" ;
lin pamper_V2 = mkV2 (mkV "pamper" "pampers" "pampered" "pampered" "pampering");
lin pamperer_N = mkN "pamperer" ;
lin pamphlet_N = mkN "pamphlet" "pamphlets";
lin pamphleteer_N = mkN "pamphleteer" "pamphleteers";
lin pamplona_PN = mkPN "Pamplona";
lin pan_N = mkN "pan" "pans";
lin pan_V = mkV "pan" "pans" "panned" "panned" "panning";
lin pan_V2 = mkV2 (mkV "pan" "pans" "panned" "panned" "panning");
lin panacea_N = mkN "panacea" "panaceas";
lin panache_N = mkN "panache" ;
lin panama_N = mkN "panama" "panamas";
lin panama_PN = mkPN "Panama";
lin panamanian_A = compoundA (mkA "panamanian");
lin panamanian_N = mkN "panamanian" "panamanians";
lin panatela_N = mkN "panatela" ;
lin panatella_N = mkN "panatella" "panatellas";
lin pancake_N = mkN "pancake" "pancakes";
lin pancarditis_N = mkN "pancarditis" ;
lin panchayat_N = mkN "panchayat" ;
lin panchromatic_A = compoundA (mkA "panchromatic");
lin pancreas_N = mkN "pancreas" "pancreases";
lin pancreatectomy_N = mkN "pancreatectomy" ;
lin pancreatic_A = compoundA (mkA "pancreatic");
lin pancreatin_N = mkN "pancreatin" ;
lin pancreatitis_N = mkN "pancreatitis" ;
lin pancytopenia_N = mkN "pancytopenia" ;
lin panda_N = mkN "panda" "pandas";
lin pandanus_N = mkN "pandanus" ;
lin pandemic_A = compoundA (mkA "pandemic");
lin pandemic_N = mkN "pandemic" "pandemics";
lin pandemonium_N = mkN "pandemonium" "pandemoniums";
lin pander_N = mkN "pander" "panders";
lin pander_V = mkV "pander" "panders" "pandered" "pandered" "pandering";
lin panderer_N = mkN "panderer" ;
lin pandiculation_N = mkN "pandiculation" ;
lin pandurate_A = mkA "pandurate" ;
lin pane_N = mkN "pane" "panes";
lin panegyric_N = mkN "panegyric" "panegyrics";
lin panel_N = mkN "panel" "panels";
lin panel_V2 = mkV2 (mkV "panel" "panels" "panelled" "panelled" "panelling");
lin paneled_A = mkA "paneled" ;
lin paneling_N = mkN "paneling" ;
lin panelist_N = mkN "panelist" ;
lin panelling_N = mkN "panelling" ;
lin panencephalitis_N = mkN "panencephalitis" ;
lin panfish_N = mkN "panfish" ;
lin pang_N = mkN "pang" "pangs";
lin panga_N = mkN "panga" "pangas";
lin pangolin_N = mkN "pangolin" ;
lin panhandle_N = mkN "panhandle" "panhandles";
lin panhandle_V = mkV "panhandle" "panhandles" "panhandled" "panhandled" "panhandling";
lin panhandler_N = mkN "panhandler" ;
lin panic_N = mkN "panic";
lin panic_V = mkV "panic" "panics" "panicked" "panicked" "panicking";
lin panic_V2 = mkV2 (mkV "panic" "panics" "panicked" "panicked" "panicking");
lin panic_stricken_A = compoundA (mkA "panic-stricken");
lin panicky_A = compoundA (mkA "panicky");
lin panicle_N = mkN "panicle" ;
lin panicled_A = mkA "panicled" ;
lin paniculate_A = mkA "paniculate" ;
lin panjandrum_N = mkN "panjandrum" "panjandrums";
lin pannier_N = mkN "pannier" "panniers";
lin pannikin_N = mkN "pannikin" "pannikins";
lin panoplied_A = compoundA (mkA "panoplied");
lin panoply_N = mkN "panoply" "panoplies";
lin panoptic_A = compoundA (mkA "panoptic");
lin panopticon_N = mkN "panopticon" ;
lin panorama_N = mkN "panorama" "panoramas";
lin panoramic_A = compoundA (mkA "panoramic");
lin panpipe_N = mkN "panpipe" ;
lin pansexual_N = mkN "pansexual" ;
lin pansinusitis_N = mkN "pansinusitis" ;
lin pansy_N = mkN "pansy" "pansies";
lin pant_N = mkN "pant" "pants";
lin pant_V = mkV "pant" "pants" "panted" "panted" "panting";
lin pant_V2 = mkV2 (mkV "pant" "pants" "panted" "panted" "panting");
lin pantaloon_N = mkN "pantaloon" "pantaloons";
lin pantechnicon_N = mkN "pantechnicon" "pantechnicons";
lin pantheism_N = mkN "pantheism" ;
lin pantheist_A = mkA "pantheist" ;
lin pantheist_N = mkN "pantheist" "pantheists";
lin pantheistic_A = compoundA (mkA "pantheistic");
lin pantheon_N = mkN "pantheon" "pantheons";
lin panther_N = mkN "panther" "panthers";
lin pantie_N = mkN "pantie" ;
lin pantile_N = mkN "pantile" "pantiles";
lin panting_N = mkN "panting" ;
lin pantingly_Adv = mkAdv "pantingly";
lin panto_N = mkN "panto" "pantos";
lin pantograph_N = mkN "pantograph" "pantographs";
lin pantomime_N = mkN "pantomime" "pantomimes";
lin pantropical_A = mkA "pantropical" ;
lin pantry_N = mkN "pantry" "pantries";
lin pantryman_N = mkN masculine (mkN "pantryman" "pantrymen");
lin panty_hose_N = mkN "panty-hose" ;
lin pantyhose_N = mkN "pantyhose" ;
lin panzer_A = compoundA (mkA "panzer");
lin panzer_N = mkN "panzer" ;
lin paotow_PN = mkPN "Paotow";
lin pap_N = mkN "pap" ;
lin papa_N = mkN "papa" "papas";
lin papacy_N = mkN "papacy" "papacies";
lin papain_N = mkN "papain" ;
lin papal_A = compoundA (mkA "papal");
lin paparazzo_N = mkN "paparazzo" ;
lin papaverine_N = mkN "papaverine" ;
lin papaw_N = mkN "papaw" "papaws";
lin papaya_N = mkN "papaya" "papayas";
lin paper_N = mkN "paper" "papers";
lin paper_V2 = mkV2 (mkV "paper" "papers" "papered" "papered" "papering");
lin paper_chase_N = mkN "paper-chase" "paper-chases";
lin paperback_A = mkA "paperback" ;
lin paperback_N = mkN "paperback" "paperbacks";
lin paperbacked_A = compoundA (mkA "paperbacked");
lin paperboard_N = mkN "paperboard" ;
lin paperboy_N = mkN "paperboy" ;
lin paperclip_N = mkN "paperclip" "paperclips";
lin paperhanger_N = mkN "paperhanger" "paperhangers";
lin papering_N = mkN "papering" ;
lin paperknife_N = mkN "paperknife" "paperknives";
lin paperless_A = compoundA (mkA "paperless");
lin papermaking_N = mkN "papermaking" ;
lin papermill_N = mkN "papermill" "papermills";
lin paperweight_N = mkN "paperweight" "paperweights";
lin paperwork_N = mkN "paperwork" ;
lin papery_A = mkA "papery" ;
lin papier_mache_N = mkN "papier-mâché" ;
lin papilla_N = mkN "papilla" ;
lin papillary_A = mkA "papillary" ;
lin papillate_A = mkA "papillate" ;
lin papilledema_N = mkN "papilledema" ;
lin papilliform_A = mkA "papilliform" ;
lin papilloma_N = mkN "papilloma" ;
lin papillon_N = mkN "papillon" ;
lin papist_A = compoundA (mkA "papist");
lin papist_N = mkN "papist" "papists";
lin papoose_N = mkN "papoose" "papooses";
lin papovavirus_N = mkN "papovavirus" ;
lin pappose_A = mkA "pappose" ;
lin pappus_N = mkN "pappus" ;
lin paprika_N = mkN "paprika" ;
lin papua_PN = mkPN "Papua";
lin papuan_A = compoundA (mkA "papuan");
lin papuan_N = mkN "papuan" "papuans";
lin papule_N = mkN "papule" ;
lin papulovesicle_N = mkN "papulovesicle" ;
lin papyrus_N = mkN "papyrus" "papyruses";
lin par_N = mkN "par" "pars";
lin par_excellence_Adv = mkAdv "par excellence";
lin para_N = mkN "para" ;
lin parable_N = mkN "parable" "parables";
lin parabola_N = mkN "parabola" "parabolas";
lin parabolic_A = compoundA (mkA "parabolic");
lin parabolical_A = compoundA (mkA "parabolical");
lin paraboloid_N = mkN "paraboloid" ;
lin paraboloidal_A = mkA "paraboloidal" ;
lin parachute_N = mkN "parachute" "parachutes";
lin parachute_V = mkV "parachute" "parachutes" "parachuted" "parachuted" "parachuting";
lin parachute_V2 = mkV2 (mkV "parachute" "parachutes" "parachuted" "parachuted" "parachuting");
lin parachutist_N = mkN "parachutist" "parachutists";
lin paracosm_N = mkN "paracosm" ;
lin parade_N = mkN "parade" "parades";
lin parade_V = mkV "parade" "parades" "paraded" "paraded" "parading";
lin parade_V2 = mkV2 (mkV "parade" "parades" "paraded" "paraded" "parading");
lin parade_ground_N = mkN "parade-ground" "parade-grounds";
lin paradiddle_N = mkN "paradiddle" ;
lin paradigm_N = mkN "paradigm" "paradigms";
lin paradigmatic_A = mkA "paradigmatic" ;
lin paradise_N = mkN "paradise" "paradises";
lin paradisiac_A = compoundA (mkA "paradisiac");
lin paradisiacal_A = compoundA (mkA "paradisiacal");
lin paradox_N = mkN "paradox" "paradoxes";
lin paradoxical_A = compoundA (mkA "paradoxical");
lin paraffin_N = mkN "paraffin" ;
lin parafovea_N = mkN "parafovea" ;
lin paragon_N = mkN "paragon" "paragons";
lin paragonite_N = mkN "paragonite" ;
lin paragraph_N = mkN "paragraph" "paragraphs";
lin paragraph_V2 = mkV2 (mkV "paragraph" "paragraphs" "paragraphed" "paragraphed" "paragraphing");
lin paragrapher_N = mkN "paragrapher" ;
lin paraguay_PN = mkPN "Paraguay";
lin paraguayan_A = compoundA (mkA "paraguayan");
lin paraguayan_N = mkN "paraguayan" "paraguayans";
lin parakeet_N = mkN "parakeet" "parakeets";
lin paralanguage_N = mkN "paralanguage" ;
lin paraldehyde_N = mkN "paraldehyde" ;
lin paralegal_N = mkN "paralegal" ;
lin paralepsis_N = mkN "paralepsis" ;
lin parallax_N = mkN "parallax" ;
lin parallel_A = compoundA (mkA "parallel");
lin parallel_N = mkN "parallel" "parallels";
lin parallel_V2 = mkV2 (mkV "parallel" "parallels" "parallelled" "parallelled" "parallelling");
lin parallelepiped_N = mkN "parallelepiped" ;
lin parallelism_N = mkN "parallelism" "parallelisms";
lin parallelogram_N = mkN "parallelogram" "parallelograms";
lin paralogism_N = mkN "paralogism" ;
lin paralyse_V2 = mkV2 (mkV "paralyse" "paralyses" "paralysed" "paralysed" "paralysing");
lin paralysis_N = mkN "paralysis" ;
lin paralytic_A = compoundA (mkA "paralytic");
lin paralytic_N = mkN "paralytic" "paralytics";
lin paralyze_V2 = mkV2 (mkV "paralyze" "paralyzes" "paralyzed" "paralyzed" "paralyzing");
lin paramagnet_N = mkN "paramagnet" ;
lin paramagnetic_A = mkA "paramagnetic" ;
lin paramagnetism_N = mkN "paramagnetism" ;
lin paramecium_N = mkN "paramecium" ;
lin paramedic_N = mkN "paramedic" ;
lin paramedical_A = mkA "paramedical" ;
lin parameter_N = mkN "parameter" "parameters";
lin parametric_A = mkA "parametric" ;
lin parametritis_N = mkN "parametritis" ;
lin paramilitary_A = compoundA (mkA "paramilitary");
lin paramilitary_N = mkN "paramilitary" ;
lin paramnesia_N = mkN "paramnesia" ;
lin paramount_A = compoundA (mkA "paramount");
lin paramountcy_N = mkN "paramountcy" ;
lin paramour_N = mkN "paramour" "paramours";
lin paramyxovirus_N = mkN "paramyxovirus" ;
lin paranasal_A = mkA "paranasal" ;
lin parang_N = mkN "parang" ;
lin paranoia_N = mkN "paranoia" ;
lin paranoiac_N = mkN "paranoiac" "paranoiacs";
lin paranoid_A = compoundA (mkA "paranoid");
lin paranoid_N = mkN "paranoid" "paranoids";
lin paranormal_A = mkA "paranormal" ;
lin paraparesis_N = mkN "paraparesis" ;
lin parapet_N = mkN "parapet" "parapets";
lin paraph_N = mkN "paraph" ;
lin paraphernalia_N = mkN "paraphernalia" ;
lin paraphilia_N = mkN "paraphilia" ;
lin paraphrase_N = mkN "paraphrase" ;
lin paraphrase_V2 = mkV2 (mkV "paraphrase" "paraphrases" "paraphrased" "paraphrased" "paraphrasing");
lin paraphrastic_A = mkA "paraphrastic" ;
lin paraphysis_N = mkN "paraphysis" ;
lin paraplegia_N = mkN "paraplegia" ;
lin paraplegic_A = compoundA (mkA "paraplegic");
lin paraplegic_N = mkN "paraplegic" "paraplegics";
lin parapodium_N = mkN "parapodium" ;
lin paraprofessional_N = mkN "paraprofessional" ;
lin parapsychological_A = mkA "parapsychological" ;
lin parapsychologist_N = mkN "parapsychologist" ;
lin paraquat_N = mkN "paraquat" ;
lin parasail_N = mkN "parasail" ;
lin parasailing_N = mkN "parasailing" ;
lin parasite_N = mkN "parasite" "parasites";
lin parasitemia_N = mkN "parasitemia" ;
lin parasitic_A = compoundA (mkA "parasitic");
lin parasitical_A = compoundA (mkA "parasitical");
lin parasitism_N = mkN "parasitism" ;
lin parasol_N = mkN "parasol" "parasols";
lin parasympathetic_A = mkA "parasympathetic" ;
lin parasympathomimetic_A = mkA "parasympathomimetic" ;
lin parathion_N = mkN "parathion" ;
lin paratrooper_N = mkN "paratrooper" "paratroopers";
lin paratroops_N = mkN "paratroops" ;
lin paratyphoid_N = mkN "paratyphoid" ;
lin parboil_V2 = mkV2 (mkV "parboil" "parboils" "parboiled" "parboiled" "parboiling");
lin parcel_N = mkN "parcel" "parcels";
lin parcel_V2 = mkV2 (mkV "parcel" "parcels" "parcelled" "parcelled" "parcelling");
lin parcellation_N = mkN "parcellation" ;
lin parch_V2 = mkV2 (mkV "parch" "parches" "parched" "parched" "parching");
lin parchment_N = mkN "parchment" "parchments";
lin pardon_N = mkN "pardon" "pardons";
lin pardon_V2 = mkV2 (mkV "pardon" "pardons" "pardoned" "pardoned" "pardoning");
lin pardonable_A = compoundA (mkA "pardonable");
lin pardoner_N = mkN "pardoner" "pardoners";
lin pare_V2 = mkV2 (mkV "pare" "pares" "pared" "pared" "paring");
lin paregmenon_N = mkN "paregmenon" ;
lin paregoric_N = mkN "paregoric" ;
lin parenchyma_N = mkN "parenchyma" ;
lin parent_N = mkN "parent" "parents";
lin parentage_N = mkN "parentage" ;
lin parental_A = compoundA (mkA "parental");
lin parented_A = mkA "parented" ;
lin parenteral_A = mkA "parenteral" ;
lin parenthesis_N = mkN "parenthesis" "parentheses" {- FIXME: guessed plural form -};
lin parenthetic_A = compoundA (mkA "parenthetic");
lin parenthetical_A = compoundA (mkA "parenthetical");
lin parenthood_N = mkN "parenthood" ;
lin parer_N = mkN "parer" ;
lin paresis_N = mkN "paresis" ;
lin paresthesia_N = mkN "paresthesia" ;
lin paretic_N = mkN "paretic" ;
lin pareve_A = mkA "pareve" ;
lin parfait_N = mkN "parfait" ;
lin parget_N = mkN "parget" ;
lin pargeting_N = mkN "pargeting" ;
lin parhelic_A = mkA "parhelic" ;
lin parhelion_N = mkN "parhelion" ;
lin pari_mutuel_N = mkN "pari-mutuel" "pari-mutuels";
lin pari_passu_Adv = mkAdv "pari passu";
lin pariah_N = mkN "pariah" "pariahs";
lin pariah_dog_N = mkN "pariah-dog" "pariah-dogs";
lin parietal_A = mkA "parietal" ;
lin parimutuel_N = mkN "parimutuel" ;
lin paring_N = mkN "paring" ;
lin paris_PN = mkPN "Paris";
lin parish_N = mkN "parish" "parishes";
lin parishioner_N = mkN "parishioner" "parishioners";
lin parisian_A = compoundA (mkA "parisian");
lin parisian_N = mkN "parisian" "parisians";
lin parisology_N = mkN "parisology" ;
lin parity_N = mkN "parity" ;
lin park_N = mkN "park" "parks";
lin park_V = mkV "park" "parks" "parked" "parked" "parking";
lin park_V2 = mkV2 (mkV "park" "parks" "parked" "parked" "parking");
lin parka_N = mkN "parka" "parkas";
lin parking_N = mkN "parking" ;
lin parkinson's_A = compoundA (mkA "parkinson's");
lin parky_A = compoundA (mkA "parky");
lin parlance_N = mkN "parlance" "parlances";
lin parlay_N = mkN "parlay" ;
lin parley_N = mkN "parley" "parleys";
lin parley_V = mkV "parley" "parleys" "parleyed" "parleyed" "parleying";
lin parliament_N = mkN "parliament" "parliaments";
lin parliamentarian_N = mkN "parliamentarian" "parliamentarians";
lin parliamentary_A = compoundA (mkA "parliamentary");
lin parlor_N = mkN "parlor" ;
lin parlormaid_N = mkN "parlormaid" ;
lin parlour_N = mkN "parlour" "parlours";
lin parlour_car_N = mkN "parlour-car" "parlour-cars";
lin parlous_A = compoundA (mkA "parlous");
lin parma_PN = mkPN "Parma";
lin parmesan_N = mkN "parmesan" ;
lin parnassia_N = mkN "parnassia" ;
lin parochial_A = compoundA (mkA "parochial");
lin parochialism_N = mkN "parochialism" ;
lin parodist_N = mkN "parodist" "parodists";
lin parody_N = mkN "parody" "parodies";
lin parody_V2 = mkV2 (mkV "parody" "parodies" "parodied" "parodied" "parodying");
lin paroicous_A = mkA "paroicous" ;
lin parole_N = mkN "parole" ;
lin parole_V2 = mkV2 (mkV "parole" "paroles" "paroled" "paroled" "paroling");
lin paronychia_N = mkN "paronychia" ;
lin paroquet_N = mkN "paroquet" "paroquets";
lin parotid_A = mkA "parotid" ;
lin parotitis_N = mkN "parotitis" ;
lin parous_A = mkA "parous" ;
lin paroxetime_N = mkN "paroxetime" ;
lin paroxysm_N = mkN "paroxysm" "paroxysms";
lin paroxysmal_A = mkA "paroxysmal" ;
lin paroxytone_N = mkN "paroxytone" ;
lin parquet_N = mkN "parquet" ;
lin parquetry_N = mkN "parquetry" ;
lin parr_N = mkN "parr" "parrs";
lin parricide_N = mkN "parricide" "parricides";
lin parrot_N = mkN "parrot" "parrots";
lin parrotfish_N = mkN "parrotfish" ;
lin parrotlike_A = mkA "parrotlike" ;
lin parry_N = mkN "parry" "parries";
lin parry_V2 = mkV2 (mkV "parry" "parries" "parried" "parried" "parrying");
lin parse_V2 = mkV2 (mkV "parse" "parses" "parsed" "parsed" "parsing");
lin parsec_N = mkN "parsec" ;
lin parsee_N = mkN "parsee" "parsees";
lin parser_N = mkN "parser" ;
lin parsimonious_A = compoundA (mkA "parsimonious");
lin parsimony_N = mkN "parsimony" ;
lin parsley_N = mkN "parsley" ;
lin parsnip_N = mkN "parsnip" "parsnips";
lin parson_N = mkN "parson" "parsons";
lin parsonage_N = mkN "parsonage" "parsonages";
lin part_Adv = mkAdv "part";
lin part_N = mkN "part" "parts";
lin part_of_N2 = mkN2 (mkN "part" "parts") (mkPrep "of");
lin part_V = mkV "part" "parts" "parted" "parted" "parting";
lin part_V2 = mkV2 (mkV "part" "parts" "parted" "parted" "parting");
lin part_owner_N = mkN "part-owner" "part-owners";
lin part_singing_N = mkN "part-singing" ;
lin part_song_N = mkN "part-song" "part-songs";
lin part_time_A = compoundA (mkA "part-time");
lin part_time_Adv = mkAdv "part-time";
lin part_timer_N = mkN "part-timer" "part-timers";
lin partake_V = mkV "par" IrregEng.take_V;
lin partake_V2 = mkV2 (mkV "par" IrregEng.take_V);
lin partaker_N = mkN "partaker" ;
lin parterre_N = mkN "parterre" "parterres";
lin parthenocarpy_N = mkN "parthenocarpy" ;
lin parthenogenesis_N = mkN "parthenogenesis" ;
lin parthenote_N = mkN "parthenote" ;
lin parthian_A = compoundA (mkA "parthian");
lin parti_coloured_A = compoundA (mkA "parti-coloured");
lin partial_A = compoundA (mkA "partial");
lin partiality_N = mkN "partiality" "partialities";
lin partialness_N = mkN "partialness" ;
lin partible_A = mkA "partible" ;
lin participant_N = mkN human (mkN "participant" "participants");
lin participate_V = mkV "participate" "participates" "participated" "participated" "participating";
lin participate_V2 = mkV2 (mkV "participate" "participates" "participated" "participated" "participating");
lin participation_N = mkN "participation" ;
lin participatory_A = mkA "participatory" ;
lin participial_A = compoundA (mkA "participial");
lin participle_N = mkN "participle" "participles";
lin particle_N = mkN "particle" "particles";
lin particular_A = compoundA (mkA "particular");
lin particular_N = mkN "particular" "particulars";
lin particularism_N = mkN "particularism" ;
lin particularistic_A = mkA "particularistic" ;
lin particularity_N = mkN "particularity" "particularities";
lin particularization_N = mkN "particularization" ;
lin particularize_V = mkV "particularize" "particularizes" "particularized" "particularized" "particularizing";
lin particularize_V2 = mkV2 (mkV "particularize" "particularizes" "particularized" "particularized" "particularizing");
lin particulate_A = mkA "particulate" ;
lin particulate_N = mkN "particulate" ;
lin parting_N = mkN "parting" "partings";
lin partisan_A = compoundA (mkA "partisan");
lin partisan_N = mkN "partisan" "partisans";
lin partisanship_N = mkN "partisanship" ;
lin partita_N = mkN "partita" ;
lin partition_N = mkN "partition" "partitions";
lin partition_V2 = mkV2 (mkV "partition" "partitions" "partitioned" "partitioned" "partitioning");
lin partitionist_N = mkN "partitionist" ;
lin partitive_A = compoundA (mkA "partitive");
lin partitive_N = mkN "partitive" "partitives";
lin partly_Adv = mkAdv "partly";
lin partner_N = mkN "partner" "partners";
lin partner_V2 = mkV2 (mkV "partner" "partners" "partnered" "partnered" "partnering");
lin partnership_N = mkN "partnership" "partnerships";
lin partridge_N = mkN "partridge" "partridges";
lin partridgeberry_N = mkN "partridgeberry" ;
lin parts_N = mkN "parts" ;
lin partsong_N = mkN "partsong" ;
lin parturiency_N = mkN "parturiency" ;
lin parturient_A = mkA "parturient" ;
lin parturition_N = mkN "parturition" ;
lin party_N = mkN "party" "parties";
lin party_spirit_N = mkN "party-spirit" ;
lin party_spirited_A = compoundA (mkA "party-spirited");
lin party_wall_N = mkN "party-wall" "party-walls";
lin partygoer_N = mkN "partygoer" ;
lin parvenu_A = mkA "parvenu" ;
lin parvenu_N = mkN "parvenu" "parvenus";
lin parvis_N = mkN "parvis" ;
lin parvovirus_N = mkN "parvovirus" ;
lin pas_N = mkN "pas" ;
lin pascal_N = mkN "pascal" ;
lin paschal_A = compoundA (mkA "paschal");
lin pasha_N = mkN "pasha" "pashas";
lin pashto_N = mkN "pashto" ;
lin pasqueflower_N = mkN "pasqueflower" ;
lin pass_N = mkN "pass" "passes";
lin pass_V = mkV "pass" "passes" "passed" "passed" "passing";
lin pass_V2 = mkV2 (mkV "pass" "passes" "passed" "passed" "passing");
lin passable_A = compoundA (mkA "passable");
lin passage_N = mkN "passage" "passages";
lin passageway_N = mkN "passageway" "passageways";
lin passbook_N = mkN "passbook" "passbooks";
lin passe_A = compoundA (mkA "passé");
lin passee_A = compoundA (mkA "passée");
lin passenger_N = mkN human (mkN "passenger" "passengers");
lin passepartout_N = mkN "passepartout" "passepartouts";
lin passer_N = mkN "passer" ;
lin passer_by_N = mkN "passer-by" "IRREG";
lin passerby_N = mkN "passerby" ;
lin passerine_A = mkA "passerine" ;
lin passerine_N = mkN "passerine" ;
lin passim_Adv = mkAdv "passim";
lin passing_Adv = mkAdv "passing";
lin passing_N = mkN "passing" ;
lin passing_out_A = compoundA (mkA "passing-out");
lin passion_N = mkN "passion" "passions";
lin passion_flower_N = mkN "passion-flower" "passion-flowers";
lin passionate_A = compoundA (mkA "passionate");
lin passionflower_N = mkN "passionflower" ;
lin passionless_A = compoundA (mkA "passionless");
lin passive_A = compoundA (mkA "passive");
lin passive_N = mkN "passive" "passives";
lin passiveness_N = mkN "passiveness" ;
lin passivity_N = mkN "passivity" ;
lin passkey_N = mkN "passkey" "passkeys";
lin passover_N = mkN "passover" "passovers";
lin passport_N = mkN "passport" "passports";
lin password_N = mkN "password" "passwords";
lin past_A = compoundA (mkA "past");
lin past_Adv = mkAdv "past";
lin past_N = mkN "past" "pasts";
lin past_Prep = mkPrep "past";
lin pasta_N = mkN "pasta" ;
lin paste_N = mkN "paste" "pastes";
lin paste_V2 = mkV2 (mkV "paste" "pastes" "pasted" "pasted" "pasting");
lin paste_up_N = mkN "paste-up" "paste-ups";
lin pasteboard_N = mkN "pasteboard" ;
lin pastel_A = mkA "pastel" ;
lin pastel_N = mkN "pastel" "pastels";
lin paster_N = mkN "paster" ;
lin pastern_N = mkN "pastern" "pasterns";
lin pasteurization_N = mkN "pasteurization" ;
lin pasteurize_V2 = mkV2 (mkV "pasteurize" "pasteurizes" "pasteurized" "pasteurized" "pasteurizing");
lin pastiche_N = mkN "pastiche" "pastiches";
lin pastille_N = mkN "pastille" "pastilles";
lin pastime_N = mkN "pastime" "pastimes";
lin pasting_N = mkN "pasting" "pastings";
lin pastis_N = mkN "pastis" ;
lin pastness_N = mkN "pastness" ;
lin pastor_N = mkN "pastor" "pastors";
lin pastoral_A = compoundA (mkA "pastoral");
lin pastoral_N = mkN "pastoral" "pastorals";
lin pastorale_N = mkN "pastorale" ;
lin pastorate_N = mkN "pastorate" "pastorates";
lin pastorship_N = mkN "pastorship" ;
lin pastrami_N = mkN "pastrami" ;
lin pastry_N = mkN "pastry" "pastries";
lin pastry_cook_N = mkN "pastry-cook" "pastry-cooks";
lin pasturage_N = mkN "pasturage" ;
lin pasture_N = mkN "pasture" "pastures";
lin pasture_V = mkV "pasture" "pastures" "pastured" "pastured" "pasturing";
lin pasture_V2 = mkV2 (mkV "pasture" "pastures" "pastured" "pastured" "pasturing");
lin pasty_A = mkA "pasty" "pastier";
lin pasty_N = mkN "pasty" "pasties";
lin pat_A = mkA "pat" ;
lin pat_Adv = mkAdv "pat";
lin pat_N = mkN "pat" "pats";
lin pat_PN = mkPN "Pat";
lin pat_V = mkV "pat" "pats" "patted" "patted" "patting";
lin pat_V2 = mkV2 (mkV "pat" "pats" "patted" "patted" "patting");
lin pataca_N = mkN "pataca" ;
lin patas_N = mkN "patas" ;
lin patch_N = mkN "patch" "patches";
lin patch_V2 = mkV2 (mkV "patch" "patches" "patched" "patched" "patching");
lin patch_pocket_N = mkN "patch-pocket" "patch-pockets";
lin patchcord_N = mkN "patchcord" ;
lin patchiness_N = mkN "patchiness" ;
lin patching_N = mkN "patching" ;
lin patchouli_N = mkN "patchouli" ;
lin patchwork_N = mkN "patchwork" ;
lin patchy_A = mkA "patchy" "patchier";
lin pate_1_N = mkN "pate" "pates";
lin pate_2_N = mkN "pâté" "pâtés";
lin pate_N = mkN "pate" ;
lin pate_de_foie_gras_N = mkN "pate de foie gras" ;
lin patella_N = mkN "patella" "patellas";
lin patellar_A = mkA "patellar" ;
lin patency_N = mkN "patency" ;
lin patent_A = compoundA (mkA "patent");
lin patent_N = mkN "patent" "patents";
lin patent_V2 = mkV2 (mkV "patent" "patents" "patented" "patented" "patenting");
lin patentee_N = mkN "patentee" "patentees";
lin pater_N = mkN "pater" ;
lin paterfamilias_N = mkN "paterfamilias" "IRREG";
lin paternal_A = compoundA (mkA "paternal");
lin paternalism_N = mkN "paternalism" ;
lin paternalistic_A = mkA "paternalistic" ;
lin paternity_N = mkN "paternity" ;
lin paternoster_N = mkN "paternoster" "paternosters";
lin path_N = mkN "path" "paths";
lin path_finder_N = mkN "path-finder" "path-finders";
lin pathetic_A = compoundA (mkA "pathetic");
lin pathetically_Adv = mkAdv "pathetically";
lin pathless_A = compoundA (mkA "pathless");
lin pathogen_N = mkN "pathogen" "pathogens";
lin pathogenesis_N = mkN "pathogenesis" ;
lin pathogenically_Adv = mkAdv "pathogenically" ;
lin pathological_A = compoundA (mkA "pathological");
lin pathologist_N = mkN "pathologist" "pathologists";
lin pathology_N = mkN "pathology" ;
lin pathos_N = mkN "pathos" ;
lin pathway_N = mkN "pathway" "pathways";
lin patience_N = mkN "patience" ;
lin patience_PN = mkPN "Patience";
lin patient_A = compoundA (mkA "patient");
lin patient_N = mkN "patient" "patients";
lin patina_N = mkN "patina" "patinas";
lin patio_N = mkN "patio" "patios";
lin patisserie_N = mkN "patisserie" "patisseries";
lin patka_N = mkN "patka" ;
lin patois_N = mkN "patois" "patoes" {- FIXME: guessed plural form -};
lin patrai_PN = mkPN "Patrai";
lin patrial_N = mkN "patrial" "patrials";
lin patriarch_N = mkN "patriarch" "patriarchs";
lin patriarchal_A = compoundA (mkA "patriarchal");
lin patriarchate_N = mkN "patriarchate" "patriarchates";
lin patriarchic_A = mkA "patriarchic" ;
lin patriarchy_N = mkN "patriarchy" "patriarchies";
lin patricentric_A = mkA "patricentric" ;
lin patricia_PN = mkPN "Patricia";
lin patrician_A = compoundA (mkA "patrician");
lin patrician_N = mkN "patrician" "patricians";
lin patricide_N = mkN "patricide" "patricides";
lin patrick_PN = mkPN "Patrick";
lin patrilineage_N = mkN "patrilineage" ;
lin patrilineal_A = mkA "patrilineal" ;
lin patrimonial_A = compoundA (mkA "patrimonial");
lin patrimony_N = mkN "patrimony" "patrimonies";
lin patriot_N = mkN "patriot" "patriots";
lin patriotic_A = compoundA (mkA "patriotic");
lin patriotically_Adv = mkAdv "patriotically";
lin patriotism_N = mkN "patriotism" ;
lin patristic_A = mkA "patristic" ;
lin patristics_N = mkN "patristics" ;
lin patrol_N = mkN "patrol" "patrols";
lin patrol_V = mkV "patrol" "patrols" "patrolled" "patrolled" "patrolling";
lin patrol_V2 = mkV2 (mkV "patrol" "patrols" "patrolled" "patrolled" "patrolling");
lin patroller_N = mkN "patroller" ;
lin patrolman_N = mkN masculine (mkN "patrolman" "patrolmen");
lin patron_N = mkN "patron" "patrons";
lin patronage_N = mkN "patronage" ;
lin patroness_N = mkN "patroness" "patronesses";
lin patronize_V2 = mkV2 (mkV "patronize" "patronizes" "patronized" "patronized" "patronizing");
lin patronizing_A = compoundA (mkA "patronizing");
lin patronymic_A = compoundA (mkA "patronymic");
lin patronymic_N = mkN "patronymic" "patronymics";
lin patten_N = mkN "patten" "pattens";
lin patter_N = mkN "patter" ;
lin patter_V = mkV "patter" "patters" "pattered" "pattered" "pattering";
lin patter_V2 = mkV2 (mkV "patter" "patters" "pattered" "pattered" "pattering");
lin pattern_N = mkN "pattern" "patterns";
lin pattern_V2 = mkV2 (mkV "pattern" "patterns" "patterned" "patterned" "patterning");
lin patternmaker_N = mkN "patternmaker" ;
lin patty_N = mkN "patty" "patties";
lin patty_PN = mkPN "Patty";
lin patty_pan_N = mkN "patty-pan" "patty-pans";
lin patzer_N = mkN "patzer" ;
lin paucity_N = mkN "paucity" ;
lin paul_PN = mkPN "Paul";
lin paula_PN = mkPN "Paula";
lin pauline_PN = mkPN "Pauline";
lin paunch_N = mkN "paunch" "paunches";
lin paunchiness_N = mkN "paunchiness" ;
lin paunchy_A = mkA "paunchy" "paunchier";
lin pauper_N = mkN "pauper" "paupers";
lin pauperism_N = mkN "pauperism" ;
lin pauperization_N = mkN "pauperization" ;
lin pauperize_V2 = mkV2 (mkV "pauperize" "pauperizes" "pauperized" "pauperized" "pauperizing");
lin pause_N = mkN "pause" "pauses";
lin pause_V = mkV "pause" "pauses" "paused" "paused" "pausing";
lin pause_V2V = mkV2V (mkV "pause" "pauses" "paused" "paused" "pausing") noPrep to_Prep ;
lin pause_VS = mkVS (mkV "pause" "pauses" "paused" "paused" "pausing");
lin pavage_N = mkN "pavage" ;
lin pavane_N = mkN "pavane" ;
lin pave_N = mkN "pave" ;
lin pave_V2 = mkV2 (mkV "pave" "paves" "paved" "paved" "paving");
lin pavement_N = mkN "pavement" "pavements";
lin pavilion_N = mkN "pavilion" "pavilions";
lin paving_N = mkN "paving" ;
lin paving_stone_N = mkN "paving-stone" "paving-stones";
lin pavior_N = mkN "pavior" ;
lin pavis_N = mkN "pavis" ;
lin pavlova_N = mkN "pavlova" ;
lin pavonia_N = mkN "pavonia" ;
lin paw_N = mkN "paw" "paws";
lin paw_V = mkV "paw";
lin paw_V2 = mkV2 (mkV "paw" "paws" "pawed" "pawed" "pawing");
lin pawer_N = mkN "pawer" ;
lin pawky_A = compoundA (mkA "pawky");
lin pawl_N = mkN "pawl" "pawls";
lin pawn_N = mkN "pawn" "pawns";
lin pawn_V2 = mkV2 (mkV "pawn" "pawns" "pawned" "pawned" "pawning");
lin pawn_ticket_N = mkN "pawn-ticket" "pawn-tickets";
lin pawnbroker_N = mkN "pawnbroker" "pawnbrokers";
lin pawnshop_N = mkN "pawnshop" "pawnshops";
lin pawpaw_N = mkN "pawpaw" "pawpaws";
lin pax_N = mkN "pax" "paxes";
lin pax_romana_N = mkN "pax romana" "pax romanae";
lin pay_N = mkN "pay" ;
lin pay_V = IrregEng.pay_V;
lin pay_V2 = mkV2 (IrregEng.pay_V);
lin pay_V2V = mkV2V (IrregEng.pay_V) noPrep to_Prep ;
lin pay_V3 = mkV3 (IrregEng.pay_V) noPrep noPrep ;
lin pay_as_you_earn_N = mkN "pay-as-you-earn" ;
lin pay_claim_N = mkN "pay-claim" "pay-claims";
lin pay_packet_N = mkN "pay-packet" "pay-packets";
lin pay_station_N = mkN "pay-station" "pay-stations";
lin payable_A = compoundA (mkA "payable");
lin payable_N = mkN "payable" ;
lin payback_N = mkN "payback" ;
lin paycheck_N = mkN "paycheck" ;
lin payday_N = mkN "payday" "paydays";
lin paydirt_N = mkN "paydirt" ;
lin paye_PN = mkPN "Paye";
lin payee_N = mkN "payee" "payees";
lin payer_N = mkN "payer" "payers";
lin payload_N = mkN "payload" "payloads";
lin paymaster_N = mkN "paymaster" "paymasters";
lin payment_N = mkN "payment" "payments";
lin paynim_N = mkN "paynim" "paynims";
lin payoff_N = mkN "payoff" "payoffs";
lin payola_N = mkN "payola" ;
lin payphone_N = mkN "payphone" "payphones";
lin payroll_N = mkN "payroll" "payrolls";
lin paysheet_N = mkN "paysheet" "paysheets";
lin payslip_N = mkN "payslip" "payslips";
lin pc_PN = mkPN "Pc";
lin pdsa_N = mkN "pdsa" ;
lin pe_N = mkN "pe" ;
lin pea_N = mkN "pea" "peas";
lin pea_chick_N = mkN "pea-chick" "pea-chicks";
lin pea_flour_N = mkN "pea-flour" ;
lin pea_green_A = compoundA (mkA "pea-green");
lin pea_green_N = mkN "pea-green" "pea-greens";
lin pea_jacket_N = mkN "pea-jacket" "pea-jackets";
lin pea_soup_N = mkN "pea-soup" "pea-soups";
lin peace_N = mkN "peace" ;
lin peace_offering_N = mkN "peace-offering" "peace-offerings";
lin peaceable_A = compoundA (mkA "peaceable");
lin peaceableness_N = mkN "peaceableness" ;
lin peaceful_A = compoundA (mkA "peaceful");
lin peacefulness_N = mkN "peacefulness" ;
lin peacehaven_PN = mkPN "Peacehaven";
lin peacekeeper_N = mkN "peacekeeper";
lin peacekeeping_A = mkA "peacekeeping" ;
lin peacekeeping_N = mkN "peacekeeping" ;
lin peacemaker_N = mkN "peacemaker" "peacemakers";
lin peacetime_N = mkN "peacetime" ;
lin peach_N = mkN "peach" "peaches";
lin peach_V = mkV "peach" "peaches" "peached" "peached" "peaching";
lin peach_V2 = mkV2 (mkV "peach" "peaches" "peached" "peached" "peaching");
lin peachick_N = mkN "peachick" ;
lin peachy_A = mkA "peachy" ;
lin peacock_N = mkN "peacock" "peacocks";
lin peacock_blue_A = compoundA (mkA "peacock-blue");
lin peacock_blue_N = mkN "peacock-blue" "peacock-blues";
lin peafowl_N = mkN "peafowl" "peafowls";
lin peahen_N = mkN "peahen" "peahens";
lin peak_N = mkN "peak" "peaks";
lin peak_V = mkV "peak" "peaks" "peaked" "peaked" "peaking";
lin peak_V2 = mkV2 (mkV "peak" "peaks" "peaked" "peaked" "peaking");
lin peaky_A = mkA "peaky" "peakier";
lin peal_N = mkN "peal" "peals";
lin peal_V = mkV "peal" "peals" "pealed" "pealed" "pealing";
lin peal_V2 = mkV2 (mkV "peal" "peals" "pealed" "pealed" "pealing");
lin peanut_N = mkN "peanut" "peanuts";
lin peanuts_N = mkN "peanuts" ;
lin pear_N = mkN "pear" "pears";
lin pearl_N = mkN "pearl" "pearls";
lin pearl_PN = mkPN "Pearl";
lin pearl_V = mkV "pearl" "pearls" "pearled" "pearled" "pearling";
lin pearl_barley_N = mkN "pearl-barley" ;
lin pearl_diver_N = mkN "pearl-diver" "pearl-divers";
lin pearl_fishery_N = mkN "pearl-fishery" "pearl-fisheries";
lin pearl_oyster_N = mkN "pearl-oyster" "pearl-oysters";
lin pearl_sago_N = mkN "pearl-sago" ;
lin pearlfish_N = mkN "pearlfish" ;
lin pearlite_N = mkN "pearlite" ;
lin pearlwort_N = mkN "pearlwort" ;
lin pearly_A = mkA "pearly" "pearlier";
lin pearmain_N = mkN "pearmain" "pearmains";
lin peasantMasc_N = mkN masculine (mkN "peasant" "peasants");
lin peasantFem_N = mkN feminine (mkN "peasant" "peasants");
lin peasanthood_N = mkN "peasanthood" ;
lin peasantry_N = mkN "peasantry" "peasantries";
lin pease_N = mkN "pease" ;
lin pease_pudding_N = mkN "pease-pudding" "pease-puddings";
lin peashooter_N = mkN "peashooter" "peashooters";
lin peasouper_N = mkN "peasouper" "peasoupers";
lin peat_N = mkN "peat" ;
lin peaty_A = mkA "peaty" "peatier";
lin peavey_N = mkN "peavey" ;
lin peba_N = mkN "peba" ;
lin pebble_N = mkN "pebble" "pebbles";
lin pebbly_A = mkA "pebbly" "pebblier";
lin pebibit_N = mkN "pebibit" ;
lin pecan_N = mkN "pecan" "pecans";
lin peccable_A = compoundA (mkA "peccable");
lin peccadillo_N = mkN "peccadillo" "peccadillos";
lin peccary_N = mkN "peccary" "peccaries";
lin peck_N = mkN "peck" "pecks";
lin peck_V = mkV "peck" "pecks" "pecked" "pecked" "pecking";
lin peck_V2 = mkV2 (mkV "peck" "pecks" "pecked" "pecked" "pecking");
lin pecker_N = mkN "pecker" "peckers";
lin peckish_A = compoundA (mkA "peckish");
lin pecopteris_N = mkN "pecopteris" ;
lin pectic_A = compoundA (mkA "pectic");
lin pectin_N = mkN "pectin" ;
lin pectinate_A = mkA "pectinate" ;
lin pectineal_A = mkA "pectineal" ;
lin pectoral_A = compoundA (mkA "pectoral");
lin pectoral_N = mkN "pectoral" ;
lin peculate_V = mkV "peculate" "peculates" "peculated" "peculated" "peculating";
lin peculate_V2 = mkV2 (mkV "peculate" "peculates" "peculated" "peculated" "peculating");
lin peculation_N = mkN "peculation" "peculations";
lin peculiar_A = compoundA (mkA "peculiar");
lin peculiarity_N = mkN "peculiarity" "peculiarities";
lin pecuniary_A = compoundA (mkA "pecuniary");
lin pedagogic_A = compoundA (mkA "pedagogic");
lin pedagogical_A = compoundA (mkA "pedagogical");
lin pedagogueMasc_N = mkN masculine (mkN "pedagogue" "pedagogues");
lin pedagogueFem_N = mkN feminine (mkN "pedagogue" "pedagogues");
lin pedagogy_N = mkN "pedagogy" ;
lin pedal_A = compoundA (mkA "pedal");
lin pedal_N = mkN "pedal" "pedals";
lin pedal_V = mkV "pedal" "pedals" "pedalled" "pedalled" "pedalling";
lin pedal_V2 = mkV2 (mkV "pedal" "pedals" "pedalled" "pedalled" "pedalling");
lin pedaler_N = mkN "pedaler" ;
lin pedant_N = mkN "pedant" "pedants";
lin pedantic_A = compoundA (mkA "pedantic");
lin pedantically_Adv = mkAdv "pedantically";
lin pedantry_N = mkN "pedantry" "pedantries";
lin pedate_A = mkA "pedate" ;
lin peddle_V = mkV "peddle" "peddles" "peddled" "peddled" "peddling";
lin peddle_V2 = mkV2 (mkV "peddle" "peddles" "peddled" "peddled" "peddling");
lin peddler_N = mkN "peddler" "peddlers";
lin pederast_N = mkN "pederast" "pederasts";
lin pederastic_A = mkA "pederastic" ;
lin pederasty_N = mkN "pederasty" ;
lin pedestal_N = mkN "pedestal" "pedestals";
lin pedestrian_A = compoundA (mkA "pedestrian");
lin pedestrian_N = mkN "pedestrian" "pedestrians";
lin pediatric_A = mkA "pediatric" ;
lin pediatrician_N = mkN human (mkN "pediatrician" "pediatricians");
lin pediatrics_N = mkN "pediatrics" "pediatrics";
lin pedicab_N = mkN "pedicab" "pedicabs";
lin pedicel_N = mkN "pedicel" ;
lin pediculicide_N = mkN "pediculicide" ;
lin pediculosis_N = mkN "pediculosis" ;
lin pedicure_N = mkN "pedicure" "pedicures";
lin pedigree_N = mkN "pedigree" "pedigrees";
lin pediment_N = mkN "pediment" "pediments";
lin pedlar_N = mkN "pedlar" "pedlars";
lin pedodontist_N = mkN "pedodontist" ;
lin pedometer_N = mkN "pedometer" "pedometers";
lin pedophile_N = mkN "pedophile" ;
lin pedophilia_N = mkN "pedophilia" ;
lin peduncle_N = mkN "peduncle" ;
lin pedunculate_A = mkA "pedunculate" ;
lin pee_N = mkN "pee" "pees";
lin pee_V = mkV "pee" "pees" "peed" "peed" "peeing";
lin peebles_PN = mkPN "Peebles";
lin peeing_N = mkN "peeing" ;
lin peek_N = mkN "peek" "peeks";
lin peek_V = mkV "peek" "peeks" "peeked" "peeked" "peeking";
lin peek_a_boo_N = mkN "peek-a-boo" ;
lin peekaboo_N = mkN "peekaboo" ;
lin peel_N = mkN "peel" ;
lin peel_V = mkV "peel" "peels" "peeled" "peeled" "peeling";
lin peel_V2 = mkV2 (mkV "peel" "peels" "peeled" "peeled" "peeling");
lin peeler_N = mkN "peeler" "peelers";
lin peen_N = mkN "peen" ;
lin peep_N = mkN "peep" "peeps";
lin peep_V = mkV "peep" "peeps" "peeped" "peeped" "peeping";
lin peeper_N = mkN "peeper" "peepers";
lin peephole_N = mkN "peephole" "peepholes";
lin peepshow_N = mkN "peepshow" "peepshows";
lin peepul_N = mkN "peepul" "peepuls";
lin peer_N = mkN "peer" "peers";
lin peer_V = mkV "peer" "peers" "peered" "peered" "peering";
lin peerage_N = mkN "peerage" "peerages";
lin peeress_N = mkN "peeress" "peeresses";
lin peerless_A = compoundA (mkA "peerless");
lin peeve_N = mkN "peeve" ;
lin peeve_V2 = mkV2 (mkV "peeve" "peeves" "peeved" "peeved" "peeving");
lin peevish_A = compoundA (mkA "peevish");
lin peevishness_N = mkN "peevishness" ;
lin peewit_N = mkN "peewit" "peewits";
lin peg_N = mkN "peg" "pegs";
lin peg_PN = mkPN "Peg";
lin peg_V = mkV "peg" "pegs" "pegged" "pegged" "pegging";
lin peg_V2 = mkV2 (mkV "peg" "pegs" "pegged" "pegged" "pegging");
lin pegboard_N = mkN "pegboard" ;
lin peggy_PN = mkPN "Peggy";
lin pegmatite_N = mkN "pegmatite" ;
lin peignoir_N = mkN "peignoir" "peignoirs";
lin pejorative_A = compoundA (mkA "pejorative");
lin peke_N = mkN "peke" "pekes";
lin pekinese_N = mkN "pekinese" "pekinese";
lin peking_PN = mkPN "Peking";
lin pekoe_N = mkN "pekoe" ;
lin pelf_N = mkN "pelf" ;
lin pelican_N = mkN "pelican" "pelicans";
lin pelisse_N = mkN "pelisse" "pelisses";
lin pell_mell_Adv = mkAdv "pell-mell";
lin pellagra_N = mkN "pellagra" ;
lin pellet_N = mkN "pellet" "pellets";
lin pellicle_N = mkN "pellicle" ;
lin pellitory_N = mkN "pellitory" ;
lin pellucid_A = compoundA (mkA "pellucid");
lin pellucidness_N = mkN "pellucidness" ;
lin pelmet_N = mkN "pelmet" "pelmets";
lin pelota_N = mkN "pelota" ;
lin pelt_N = mkN "pelt" "pelts";
lin pelt_V = mkV "pelt" "pelts" "pelted" "pelted" "pelting";
lin pelt_V2 = mkV2 (mkV "pelt" "pelts" "pelted" "pelted" "pelting");
lin peltate_A = mkA "peltate" ;
lin pelter_N = mkN "pelter" ;
lin pelton_PN = mkPN "Pelton";
lin peludo_N = mkN "peludo" ;
lin pelvic_A = compoundA (mkA "pelvic");
lin pelvimeter_N = mkN "pelvimeter" ;
lin pelvimetry_N = mkN "pelvimetry" ;
lin pelvis_N = mkN "pelvis" "pelvises";
lin pelycosaur_N = mkN "pelycosaur" ;
lin pembroke_PN = mkPN "Pembroke";
lin pemmican_N = mkN "pemmican" ;
lin pemphigous_A = mkA "pemphigous" ;
lin pemphigus_N = mkN "pemphigus" ;
lin pen_N = mkN "pen" "pens";
lin pen_V2 = mkV2 (mkV "pen" "pens" "penned" "penned" "penning");
lin pen_and_ink_N = mkN "pen-and-ink" ;
lin pen_friend_N = mkN "pen-friend" "pen-friends";
lin pen_name_N = mkN "pen-name" "pen-names";
lin pen_pusher_N = mkN "pen-pusher" "pen-pushers";
lin penal_A = compoundA (mkA "penal");
lin penalization_N = mkN "penalization" "penalizations";
lin penalize_V2 = mkV2 (mkV "penalize" "penalizes" "penalized" "penalized" "penalizing");
lin penalty_N = mkN "penalty" "penalties";
lin penance_N = mkN "penance" ;
lin penarth_PN = mkPN "Penarth";
lin penchant_N = mkN "penchant" "penchants";
lin pencil_N = mkN "pencil" "pencils";
lin pencil_V2 = mkV2 (mkV "pencil" "pencils" "pencilled" "pencilled" "pencilling");
lin pend_V = mkV "pend";
lin pend_V2 = mkV2 (mkV "pend");
lin pendant_N = mkN "pendant" "pendants";
lin pendent_A = compoundA (mkA "pendent");
lin pending_Prep = mkPrep "pending";
lin pendlebury_PN = mkPN "Pendlebury";
lin pendragon_N = mkN "pendragon" ;
lin pendulous_A = compoundA (mkA "pendulous");
lin pendulum_N = mkN "pendulum" "pendulums";
lin penelope_PN = mkPN "Penelope";
lin peneplain_N = mkN "peneplain" ;
lin penetrability_N = mkN "penetrability" ;
lin penetrable_A = compoundA (mkA "penetrable");
lin penetralia_N = mkN "penetralia" ;
lin penetrate_V = mkV "penetrate" "penetrates" "penetrated" "penetrated" "penetrating";
lin penetrate_V2 = mkV2 (mkV "penetrate" "penetrates" "penetrated" "penetrated" "penetrating");
lin penetratingly_Adv = mkAdv "penetratingly" ;
lin penetration_N = mkN "penetration" "penetrations";
lin penetrative_A = compoundA (mkA "penetrative");
lin penetrator_N = mkN "penetrator" ;
lin pengo_N = mkN "pengo" ;
lin penguin_N = mkN "penguin" "penguins";
lin penicillamine_N = mkN "penicillamine" ;
lin penicillin_N = mkN "penicillin" ;
lin penicillinase_N = mkN "penicillinase" ;
lin penicuik_PN = mkPN "Penicuik";
lin penile_A = mkA "penile" ;
lin peninsula_N = mkN "peninsula" "peninsulas";
lin peninsular_A = compoundA (mkA "peninsular");
lin penis_N = mkN "penis" "penises";
lin penitence_N = mkN "penitence" ;
lin penitent_A = compoundA (mkA "penitent");
lin penitent_N = mkN "penitent" "penitents";
lin penitential_A = compoundA (mkA "penitential");
lin penitentiary_A = compoundA (mkA "penitentiary");
lin penitentiary_N = mkN "penitentiary" "penitentiaries";
lin penki_PN = mkPN "Penki";
lin penknife_N = mkN "penknife" "penknives";
lin penlight_N = mkN "penlight" ;
lin penmanship_N = mkN "penmanship" ;
lin penn'orth_N = mkN "penn'orth" "penn'orths";
lin pennant_N = mkN "pennant" "pennants";
lin pennate_A = mkA "pennate" ;
lin penne_N = mkN "penne" ;
lin penni_N = mkN "penni" ;
lin penniless_A = compoundA (mkA "penniless");
lin pennon_N = mkN "pennon";
lin pennoncel_N = mkN "pennoncel" ;
lin pennsylvania_PN = mkPN "Pennsylvania";
lin penny_N = mkN "penny" (variants {"pennies"; "pence"});
lin penny_PN = mkPN "Penny";
lin pennycress_N = mkN "pennycress" ;
lin pennyroyal_N = mkN "pennyroyal" ;
lin pennyweight_N = mkN "pennyweight";
lin pennywhistle_N = mkN "pennywhistle" ;
lin pennyworth_N = mkN "pennyworth";
lin penologist_N = mkN "penologist" ;
lin penology_N = mkN "penology" ;
lin penpusher_N = mkN "penpusher" ;
lin penrhyn_PN = mkPN "Penrhyn";
lin penrith_PN = mkPN "Penrith";
lin penryn_PN = mkPN "Penryn";
lin pension_N = mkN "pension";
lin pension_V2 = mkV2 (mkV "pension" "pensions" "pensioned" "pensioned" "pensioning");
lin pensionable_A = compoundA (mkA "pensionable");
lin pensioner_N = mkN "pensioner" "pensioners";
lin pensive_A = compoundA (mkA "pensive");
lin pensiveness_N = mkN "pensiveness" ;
lin penstock_N = mkN "penstock" "penstocks";
lin pent_A = mkA "pent" ;
lin pent_up_A = compoundA (mkA "pent-up");
lin pentacle_N = mkN "pentacle" ;
lin pentaerythritol_N = mkN "pentaerythritol" ;
lin pentagon_N = mkN "pentagon" "pentagons";
lin pentagonal_A = compoundA (mkA "pentagonal");
lin pentahedron_N = mkN "pentahedron" ;
lin pentail_N = mkN "pentail" ;
lin pentamerous_A = mkA "pentamerous" ;
lin pentameter_N = mkN "pentameter" "pentameters";
lin pentangular_A = mkA "pentangular" ;
lin pentasyllabic_A = mkA "pentasyllabic" ;
lin pentateuch_N = mkN "pentateuch" "pentateuchs";
lin pentathlete_N = mkN "pentathlete" ;
lin pentathlon_N = mkN "pentathlon" "pentathlons";
lin pentatonic_A = mkA "pentatonic" ;
lin pentavalent_A = mkA "pentavalent" ;
lin pentazocine_N = mkN "pentazocine" ;
lin pentecost_N = mkN "pentecost" ;
lin pentecostal_A = compoundA (mkA "pentecostal");
lin pentecostalism_N = mkN "pentecostalism" ;
lin penthouse_N = mkN "penthouse" "penthouses";
lin pentimento_N = mkN "pentimento" ;
lin pentlandite_N = mkN "pentlandite" ;
lin pentode_N = mkN "pentode" ;
lin pentose_N = mkN "pentose" ;
lin pentoxide_N = mkN "pentoxide" ;
lin pentoxifylline_N = mkN "pentoxifylline" ;
lin pentylenetetrazol_N = mkN "pentylenetetrazol" ;
lin penuche_N = mkN "penuche" ;
lin penult_N = mkN "penult" ;
lin penultimate_A = compoundA (mkA "penultimate");
lin penultimate_N = mkN "penultimate" "penultimates";
lin penumbra_N = mkN "penumbra" "penumbras";
lin penumbral_A = mkA "penumbral" ;
lin penurious_A = compoundA (mkA "penurious");
lin penuriousness_N = mkN "penuriousness" ;
lin penury_N = mkN "penury" ;
lin penzance_PN = mkPN "Penzance";
lin peon_N = mkN "peon" "peons";
lin peonage_N = mkN "peonage" ;
lin peony_N = mkN "peony" "peonies";
lin people_N = mkN "people" (variants {"people"; "peoples"});
lin people_V2 = mkV2 (mkV "people" "peoples" "peopled" "peopled" "peopling");
lin peoples_N = mkN "peoples" ;
lin pep_N = mkN "pep" ;
lin pep_V2 = mkV2 (mkV "pep" "peps" "pepped" "pepped" "pepping");
lin peperomia_N = mkN "peperomia" ;
lin peplos_N = mkN "peplos" ;
lin peplum_N = mkN "peplum" ;
lin pepper_N = mkN "pepper" "peppers";
lin pepper_V2 = mkV2 (mkV "pepper" "peppers" "peppered" "peppered" "peppering");
lin pepper_and_salt_N = mkN "pepper-and-salt" ;
lin pepper_mill_N = mkN "pepper-mill" "pepper-mills";
lin pepper_pot_N = mkN "pepper-pot" "pepper-pots";
lin peppercorn_N = mkN "peppercorn" "peppercorns";
lin peppermint_N = mkN "peppermint" "peppermints";
lin pepperoni_N = mkN "pepperoni" ;
lin peppery_A = compoundA (mkA "peppery");
lin pepsin_N = mkN "pepsin" ;
lin pepsinogen_N = mkN "pepsinogen" ;
lin peptic_A = compoundA (mkA "peptic");
lin peptide_N = mkN "peptide" ;
lin peptization_N = mkN "peptization" ;
lin peptone_N = mkN "peptone" ;
lin per_Prep = mkPrep "per";
lin peradventure_Adv = mkAdv "peradventure";
lin peradventure_N = mkN "peradventure" ;
lin perambulate_V = mkV "perambulate" "perambulates" "perambulated" "perambulated" "perambulating";
lin perambulate_V2 = mkV2 (mkV "perambulate" "perambulates" "perambulated" "perambulated" "perambulating");
lin perambulation_N = mkN "perambulation" "perambulations";
lin perambulator_N = mkN "perambulator" "perambulators";
lin percale_N = mkN "percale" ;
lin perceivable_A = compoundA (mkA "perceivable");
lin perceive_V2 = mkV2 (mkV "perceive" "perceives" "perceived" "perceived" "perceiving");
lin perceive_V2V = mkV2V (mkV "perceive") noPrep to_Prep ;
lin perceive_VS = mkVS (mkV "perceive");
lin perceiver_N = mkN "perceiver" "perceivers";
lin percent_N = mkN "percent" "percent";
lin percentage_N = mkN "percentage" "percentages";
lin percentile_N = mkN "percentile" ;
lin percept_N = mkN "percept" ;
lin perceptibility_N = mkN "perceptibility" ;
lin perceptible_A = compoundA (mkA "perceptible");
lin perception_N = mkN "perception" "perceptions";
lin perceptive_A = compoundA (mkA "perceptive");
lin perceptiveness_N = mkN "perceptiveness" ;
lin perceptual_A = compoundA (mkA "perceptual");
lin perch_N = mkN "perch" "perch";
lin perch_V = mkV "perch" "perches" "perched" "perched" "perching";
lin perch_V2 = mkV2 (mkV "perch" "perches" "perched" "perched" "perching");
lin perchance_Adv = mkAdv "perchance";
lin percher_N = mkN "percher" ;
lin perchlorate_N = mkN "perchlorate" ;
lin perchloride_N = mkN "perchloride" ;
lin percipient_A = compoundA (mkA "percipient");
lin percolate_N = mkN "percolate" ;
lin percolate_V = mkV "percolate" "percolates" "percolated" "percolated" "percolating";
lin percolate_V2 = mkV2 (mkV "percolate" "percolates" "percolated" "percolated" "percolating");
lin percolation_N = mkN "percolation" ;
lin percolator_N = mkN "percolator" "percolators";
lin percussion_N = mkN "percussion" "percussions";
lin percussionist_N = mkN "percussionist" "percussionists";
lin percussive_A = mkA "percussive" ;
lin percy_PN = mkPN "Percy";
lin perdition_N = mkN "perdition" ;
lin perdurability_N = mkN "perdurability" ;
lin peregrination_N = mkN "peregrination" "peregrinations";
lin peregrine_N = mkN "peregrine" ;
lin peremptory_A = compoundA (mkA "peremptory");
lin perennation_N = mkN "perennation" ;
lin perennial_A = compoundA (mkA "perennial");
lin perennial_N = mkN "perennial" "perennials";
lin perestroika_N = mkN "perestroika" ;
lin perfect_A = compoundA (mkA "perfect");
lin perfect_V2 = mkV2 (mkV "perfect" "perfects" "perfected" "perfected" "perfecting");
lin perfecter_N = mkN "perfecter" ;
lin perfectibility_N = mkN "perfectibility" ;
lin perfectible_A = compoundA (mkA "perfectible");
lin perfection_N = mkN "perfection" ;
lin perfectionism_N = mkN "perfectionism" ;
lin perfectionist_N = mkN "perfectionist" "perfectionists";
lin perfective_N = mkN "perfective" ;
lin perfervid_A = compoundA (mkA "perfervid");
lin perfidious_A = compoundA (mkA "perfidious");
lin perfidiousness_N = mkN "perfidiousness" ;
lin perfidy_N = mkN "perfidy" "perfidies";
lin perfluorocarbon_N = mkN "perfluorocarbon" ;
lin perfoliate_A = mkA "perfoliate" ;
lin perforate_V2 = mkV2 (mkV "perforate" "perforates" "perforated" "perforated" "perforating");
lin perforation_N = mkN "perforation" "perforations";
lin perforce_Adv = mkAdv "perforce";
lin perform_V = mkV "perform" "performs" "performed" "performed" "performing";
lin perform_V2 = mkV2 (mkV "perform" "performs" "performed" "performed" "performing");
lin performance_N = mkN "performance" "performances";
lin performer_N = mkN "performer" "performers";
lin perfume_N = mkN "perfume" "perfumes";
lin perfume_V2 = mkV2 (mkV "perfume" "perfumes" "perfumed" "perfumed" "perfuming");
lin perfumerMasc_N = mkN masculine (mkN "perfumer" "perfumers");
lin perfumerFem_N = mkN feminine (mkN "perfumer" "perfumers");
lin perfumery_N = mkN "perfumery" ;
lin perfunctory_A = compoundA (mkA "perfunctory");
lin perfusion_N = mkN "perfusion" ;
lin pergola_N = mkN "pergola" "pergolas";
lin perhaps_Adv = mkAdv "perhaps";
lin peri_N = mkN "peri" "peris";
lin perianal_A = mkA "perianal" ;
lin perianth_N = mkN "perianth" ;
lin periapsis_N = mkN "periapsis" ;
lin periarteritis_N = mkN "periarteritis" ;
lin pericardial_A = mkA "pericardial" ;
lin pericarditis_N = mkN "pericarditis" ;
lin pericardium_N = mkN "pericardium" ;
lin pericarp_N = mkN "pericarp" ;
lin pericementoclasia_N = mkN "pericementoclasia" ;
lin periclase_N = mkN "periclase" ;
lin peridinian_N = mkN "peridinian" ;
lin peridium_N = mkN "peridium" ;
lin peridot_N = mkN "peridot" ;
lin peridotite_N = mkN "peridotite" ;
lin perigee_N = mkN "perigee" "perigees";
lin perigon_N = mkN "perigon" ;
lin perigonal_A = mkA "perigonal" ;
lin perihelion_N = mkN "perihelion" "perihelions";
lin perijove_N = mkN "perijove" ;
lin peril_N = mkN "peril" "perils";
lin peril_V2 = mkV2 (mkV "peril" "perils" "perilled" "perilled" "perilling");
lin perilous_A = compoundA (mkA "perilous");
lin perilymph_N = mkN "perilymph" ;
lin perimeter_N = mkN "perimeter" "perimeters";
lin perimysium_N = mkN "perimysium" ;
lin perinasal_A = mkA "perinasal" ;
lin perinatal_A = mkA "perinatal" ;
lin perinatologist_N = mkN "perinatologist" ;
lin perinatology_N = mkN "perinatology" ;
lin perineal_A = mkA "perineal" ;
lin perineotomy_N = mkN "perineotomy" ;
lin perineum_N = mkN "perineum" ;
lin perineurium_N = mkN "perineurium" ;
lin period_N = mkN "period" "periods";
lin periodic_A = compoundA (mkA "periodic");
lin periodical_A = compoundA (mkA "periodical");
lin periodical_N = mkN "periodical" "periodicals";
lin periodontic_A = mkA "periodontic" ;
lin periodontics_N = mkN "periodontics" ;
lin periodontist_N = mkN "periodontist" ;
lin periosteum_N = mkN "periosteum" ;
lin peripatetic_A = compoundA (mkA "peripatetic");
lin peripatetic_N = mkN "peripatetic" ;
lin peripeteia_N = mkN "peripeteia" ;
lin peripheral_A = compoundA (mkA "peripheral");
lin peripheral_N = mkN "peripheral" ;
lin periphery_N = mkN "periphery" "peripheries";
lin periphrasis_N = mkN "periphrasis" "periphrases" {- FIXME: guessed plural form -};
lin periphrastic_A = compoundA (mkA "periphrastic");
lin peripteral_A = mkA "peripteral" ;
lin periscope_N = mkN "periscope" "periscopes";
lin periselene_N = mkN "periselene" ;
lin perish_V = mkV "perish" "perishes" "perished" "perished" "perishing";
lin perish_V2 = mkV2 (mkV "perish" "perishes" "perished" "perished" "perishing");
lin perishability_N = mkN "perishability" ;
lin perishable_A = compoundA (mkA "perishable");
lin perishable_N = mkN "perishable" ;
lin perisher_N = mkN "perisher" "perishers";
lin perisperm_N = mkN "perisperm" ;
lin peristalsis_N = mkN "peristalsis" ;
lin peristome_N = mkN "peristome" ;
lin peristylar_A = mkA "peristylar" ;
lin peristyle_N = mkN "peristyle" "peristyles";
lin perithecium_N = mkN "perithecium" ;
lin perithelial_A = mkA "perithelial" ;
lin perithelium_N = mkN "perithelium" ;
lin peritoneal_A = mkA "peritoneal" ;
lin peritoneum_N = mkN "peritoneum" ;
lin peritonitis_N = mkN "peritonitis" ;
lin peritrichous_A = mkA "peritrichous" ;
lin periwig_N = mkN "periwig" "periwigs";
lin periwinkle_N = mkN "periwinkle" "periwinkles";
lin perjure_V2 = mkV2 (mkV "perjure" "perjures" "perjured" "perjured" "perjuring");
lin perjurer_N = mkN "perjurer" "perjurers";
lin perjury_N = mkN "perjury" "perjuries";
lin perk_N = mkN "perk" "perks";
lin perk_V = mkV "perk" "perks" "perked" "perked" "perking";
lin perk_V2 = mkV2 (mkV "perk" "perks" "perked" "perked" "perking");
lin perkiness_N = mkN "perkiness" ;
lin perky_A = mkA "perky" "perkier";
lin perm_N = mkN "perm" "perms";
lin perm_PN = mkPN "Perm";
lin perm_V2 = mkV2 (mkV "perm" "perms" "permed" "permed" "perming");
lin permafrost_N = mkN "permafrost" ;
lin permanence_N = mkN "permanence" ;
lin permanency_N = mkN "permanency" "permanencies";
lin permanent_A = compoundA (mkA "permanent");
lin permanganate_N = mkN "permanganate" "permanganates";
lin permeability_N = mkN "permeability" ;
lin permeable_A = compoundA (mkA "permeable");
lin permeant_A = mkA "permeant" ;
lin permeate_V = mkV "permeate" "permeates" "permeated" "permeated" "permeating";
lin permeate_V2 = mkV2 (mkV "permeate" "permeates" "permeated" "permeated" "permeating");
lin permeation_N = mkN "permeation" ;
lin permissibility_N = mkN "permissibility" ;
lin permissible_A = compoundA (mkA "permissible");
lin permission_N = mkN "permission" ;
lin permissive_A = compoundA (mkA "permissive");
lin permissiveness_N = mkN "permissiveness" ;
lin permit_N = mkN "permit" "permits";
lin permit_V = mkV "permit" "permits" "permitted" "permitted" "permitting";
lin permit_V2 = mkV2 (mkV "permit" "permits" "permitted" "permitted" "permitting");
lin permit_V2V = mkV2V (mkV "permit" "permits" "permitted" "permitted" "permitting") noPrep to_Prep ;
lin permutability_N = mkN "permutability" ;
lin permutation_N = mkN "permutation" "permutations";
lin permute_V2 = mkV2 (mkV "permute" "permutes" "permuted" "permuted" "permuting");
lin pernicious_A = compoundA (mkA "pernicious");
lin perniciousness_N = mkN "perniciousness" ;
lin pernickety_A = compoundA (mkA "pernickety");
lin peroneal_A = mkA "peroneal" ;
lin peroneus_N = mkN "peroneus" ;
lin peroration_N = mkN "peroration" "perorations";
lin peroxidase_N = mkN "peroxidase" ;
lin peroxide_N = mkN "peroxide" "peroxides";
lin perpendicular_A = compoundA (mkA "perpendicular");
lin perpendicular_N = mkN "perpendicular" "perpendiculars";
lin perpendicularity_N = mkN "perpendicularity" ;
lin perpetrate_V2 = mkV2 (mkV "perpetrate" "perpetrates" "perpetrated" "perpetrated" "perpetrating");
lin perpetration_N = mkN "perpetration" "perpetrations";
lin perpetrator_N = mkN "perpetrator" "perpetrators";
lin perpetual_A = compoundA (mkA "perpetual");
lin perpetuate_V2 = mkV2 (mkV "perpetuate" "perpetuates" "perpetuated" "perpetuated" "perpetuating");
lin perpetuation_N = mkN "perpetuation" "perpetuations";
lin perpetuity_N = mkN "perpetuity" "perpetuities";
lin perphenazine_N = mkN "perphenazine" ;
lin perplex_V2 = mkV2 (mkV "perplex" "perplexes" "perplexed" "perplexed" "perplexing");
lin perplexedly_Adv = mkAdv "perplexedly" ;
lin perplexity_N = mkN "perplexity" "perplexities";
lin perquisite_N = mkN "perquisite" "perquisites";
lin perry_N = mkN "perry" ;
lin persecute_V2 = mkV2 (mkV "persecute" "persecutes" "persecuted" "persecuted" "persecuting");
lin persecution_N = mkN "persecution" "persecutions";
lin persecutor_N = mkN "persecutor" "persecutors";
lin perseverance_N = mkN "perseverance" ;
lin perseveration_N = mkN "perseveration" ;
lin persevere_V = mkV "persevere" "perseveres" "persevered" "persevered" "persevering";
lin perseveringly_Adv = mkAdv "perseveringly" ;
lin pershore_PN = mkPN "Pershore";
lin persia_PN = mkPN "Persia";
lin persianFem_N = mkN feminine (mkN "Persian" "Persians");
lin persianMasc_N = mkN masculine (mkN "Persian" "Persians");
lin persian_A = compoundA (mkA "Persian");
lin persiflage_N = mkN "persiflage" ;
lin persimmon_N = mkN "persimmon" "persimmons";
lin persist_V = mkV "persist" "persists" "persisted" "persisted" "persisting";
lin persistence_N = mkN "persistence" ;
lin persistent_A = compoundA (mkA "persistent");
lin person_N = mkN masculine (mkN "person" "persons");
lin persona_N = mkN "persona" "personas";
lin persona_grata_N = mkN "persona grata" "persona gratae" {- FIXME: guessed plural form -};
lin persona_non_grata_N = mkN "persona non grata" "persona non gratae" {- FIXME: guessed plural form -};
lin personable_A = compoundA (mkA "personable");
lin personableness_N = mkN "personableness" ;
lin personage_N = mkN "personage" "personages";
lin personal_A = compoundA (mkA "personal");
lin personal_N = mkN "personal";
lin personality_N = mkN "personality" "personalities";
lin personalize_V2 = mkV2 (mkV "personalize" "personalizes" "personalized" "personalized" "personalizing");
lin personalty_N = mkN "personalty" ;
lin personate_V2 = mkV2 (mkV "personate" "personates" "personated" "personated" "personating");
lin personation_N = mkN "personation" "personations";
lin personhood_N = mkN "personhood" ;
lin personification_N = mkN "personification" "personifications";
lin personify_V2 = mkV2 (mkV "personify" "personifies" "personified" "personified" "personifying");
lin personnel_N = mkN "personnel";
lin perspective_N = mkN "perspective" "perspectives";
lin perspex_N = mkN "perspex" ;
lin perspicacious_A = compoundA (mkA "perspicacious");
lin perspicacity_N = mkN "perspicacity" ;
lin perspicuity_N = mkN "perspicuity" ;
lin perspicuous_A = compoundA (mkA "perspicuous");
lin perspicuousness_N = mkN "perspicuousness" ;
lin perspiration_N = mkN "perspiration" ;
lin perspire_V = mkV "perspire" "perspires" "perspired" "perspired" "perspiring";
lin perspirer_N = mkN "perspirer" ;
lin persuadable_A = compoundA (mkA "persuadable");
lin persuade_V2 = mkV2 (mkV "persuade" "persuades" "persuaded" "persuaded" "persuading");
lin persuade_V2V = mkV2V (mkV "persuade" "persuades" "persuaded" "persuaded" "persuading") noPrep to_Prep;
lin persuader_N = mkN "persuader" ;
lin persuasion_N = mkN "persuasion" "persuasions";
lin persuasive_A = compoundA (mkA "persuasive");
lin persuasiveness_N = mkN "persuasiveness" ;
lin pert_A = compoundA (mkA "pert");
lin pertain_V = mkV "pertain" "pertains" "pertained" "pertained" "pertaining";
lin pertainym_N = mkN "pertainym" ;
lin perth_PN = mkPN "Perth";
lin pertinacious_A = compoundA (mkA "pertinacious");
lin pertinacity_N = mkN "pertinacity" ;
lin pertinence_N = mkN "pertinence" ;
lin pertinent_A = compoundA (mkA "pertinent");
lin pertness_N = mkN "pertness" ;
lin perturb_V2 = mkV2 (mkV "perturb" "perturbs" "perturbed" "perturbed" "perturbing");
lin perturbation_N = mkN "perturbation" "perturbations";
lin peru_PN = mkPN "Peru";
lin perugia_PN = mkPN "Perugia";
lin peruke_N = mkN "peruke" "perukes";
lin peruked_A = mkA "peruked" ;
lin perusal_N = mkN "perusal" "perusals";
lin peruse_V2 = mkV2 (mkV "peruse" "peruses" "perused" "perused" "perusing");
lin peruvian_A = compoundA (mkA "peruvian");
lin peruvian_N = mkN "peruvian" "peruvians";
lin pervade_V2 = mkV2 (mkV "pervade" "pervades" "pervaded" "pervaded" "pervading");
lin pervaporation_N = mkN "pervaporation" ;
lin pervasion_N = mkN "pervasion" ;
lin pervasive_A = compoundA (mkA "pervasive");
lin pervasiveness_N = mkN "pervasiveness" ;
lin perverse_A = compoundA (mkA "perverse");
lin perverseness_N = mkN "perverseness" ;
lin perversion_N = mkN "perversion" "perversions";
lin perversity_N = mkN "perversity" "perversities";
lin pervert_N = mkN "pervert" "perverts";
lin pervert_V2 = mkV2 (mkV "pervert" "perverts" "perverted" "perverted" "perverting");
lin pervious_A = mkA "pervious" ;
lin pesantran_N = mkN "pesantran" ;
lin pescara_PN = mkPN "Pescara";
lin peseta_N = mkN "peseta" "pesetas";
lin pesewa_N = mkN "pesewa" ;
lin peshmerga_N = mkN "peshmerga" ;
lin pesky_A = mkA "pesky" "peskier";
lin peso_N = mkN "peso" "pesos";
lin pessary_N = mkN "pessary" "pessaries";
lin pessimal_A = mkA "pessimal" ;
lin pessimism_N = mkN "pessimism" ;
lin pessimistMasc_N = mkN masculine (mkN "pessimist" "pessimists");
lin pessimistFem_N = mkN feminine (mkN "pessimist" "pessimists");
lin pessimistic_A = compoundA (mkA "pessimistic");
lin pessimistically_Adv = mkAdv "pessimistically";
lin pest_N = mkN "pest" "pests";
lin pester_V2 = mkV2 (mkV "pester" "pesters" "pestered" "pestered" "pestering");
lin pesthole_N = mkN "pesthole" ;
lin pesticide_N = mkN "pesticide" "pesticides";
lin pestiferous_A = compoundA (mkA "pestiferous");
lin pestilence_N = mkN "pestilence" "pestilences";
lin pestilent_A = compoundA (mkA "pestilent");
lin pestilential_A = compoundA (mkA "pestilential");
lin pestle_N = mkN "pestle" "pestles";
lin pestle_V2 = mkV2 (mkV "pestle" "pestles" "pestled" "pestled" "pestling");
lin pesto_N = mkN "pesto" ;
lin pet_N = mkN "pet" "pets";
lin pet_V2 = mkV2 (mkV "pet" "pets" "petted" "petted" "petting");
lin petabit_N = mkN "petabit" ;
lin petabyte_N = mkN "petabyte" ;
lin petal_N = mkN "petal" "petals";
lin petaled_A = compoundA (mkA "petaled");
lin petalled_A = compoundA (mkA "petalled");
lin petallike_A = mkA "petallike" ;
lin petaloid_A = mkA "petaloid" ;
lin petalous_A = mkA "petalous" ;
lin petard_N = mkN "petard" "petards";
lin petcock_N = mkN "petcock" ;
lin pete_PN = mkPN "Pete";
lin petechia_N = mkN "petechia" ;
lin peter_PN = mkPN "Peter";
lin peter_V = mkV "peter" "peters" "petered" "petered" "petering";
lin peterborough_PN = mkPN "Peterborough";
lin peterhead_PN = mkPN "Peterhead";
lin peterlee_PN = mkPN "Peterlee";
lin petersfield_PN = mkPN "Petersfield";
lin petfood_N = mkN "petfood" ;
lin petiole_N = mkN "petiole" ;
lin petiolule_N = mkN "petiolule" ;
lin petit_bourgeois_N = mkN "petit bourgeois" "petit bourgeoes" {- FIXME: guessed plural form -};
lin petite_A = compoundA (mkA "petite");
lin petite_N = mkN "petite" ;
lin petition_N = mkN "petition" "petitions";
lin petition_V = mkV "petition" "petitions" "petitioned" "petitioned" "petitioning";
lin petition_V2 = mkV2 (mkV "petition" "petitions" "petitioned" "petitioned" "petitioning");
lin petitionary_A = mkA "petitionary" ;
lin petitioner_N = mkN "petitioner" "petitioners";
lin petrel_N = mkN "petrel" "petrels";
lin petrifaction_N = mkN "petrifaction" "petrifactions";
lin petrify_V = mkV "petrify" "petrifies" "petrified" "petrified" "petrifying";
lin petrify_V2 = mkV2 (mkV "petrify" "petrifies" "petrified" "petrified" "petrifying");
lin petrissage_N = mkN "petrissage" ;
lin petro_chemical_N = mkN "petro-chemical" "petro-chemicals";
lin petrochemical_N = mkN "petrochemical" ;
lin petroglyph_N = mkN "petroglyph" ;
lin petrol_N = mkN "petrol" ;
lin petrolatum_N = mkN "petrolatum" ;
lin petroleum_N = mkN "petroleum" ;
lin petrology_N = mkN "petrology" ;
lin petrous_A = mkA "petrous" ;
lin petter_N = mkN "petter" ;
lin petticoat_N = mkN "petticoat" "petticoats";
lin petticoated_A = mkA "petticoated" ;
lin pettifogging_A = compoundA (mkA "pettifogging");
lin pettiness_N = mkN "pettiness" "pettinesses";
lin pettish_A = compoundA (mkA "pettish");
lin pettishness_N = mkN "pettishness" ;
lin petty_A = mkA "petty" "pettier";
lin petulance_N = mkN "petulance" ;
lin petulant_A = compoundA (mkA "petulant");
lin petunia_N = mkN "petunia" "petunias";
lin pew_N = mkN "pew" "pews";
lin pew_opener_N = mkN "pew-opener" "pew-openers";
lin pewee_N = mkN "pewee" ;
lin pewit_N = mkN "pewit" "pewits";
lin pewter_N = mkN "pewter" ;
lin peyote_N = mkN "peyote" "peyotes";
lin pfannkuchen_N = mkN "pfannkuchen" ;
lin pfennig_N = mkN "pfennig" "pfennigs";
lin ph_N = mkN "pH" ;
lin phacoemulsification_N = mkN "phacoemulsification" ;
lin phaeton_N = mkN "phaeton" "phaetons";
lin phagocyte_N = mkN "phagocyte" "phagocytes";
lin phagocytic_A = mkA "phagocytic" ;
lin phagocytosis_N = mkN "phagocytosis" ;
lin phaius_N = mkN "phaius" ;
lin phalangeal_A = mkA "phalangeal" ;
lin phalanger_N = mkN "phalanger" ;
lin phalangitis_N = mkN "phalangitis" ;
lin phalanx_N = mkN "phalanx" "phalanxes";
lin phalarope_N = mkN "phalarope" ;
lin phallic_A = compoundA (mkA "phallic");
lin phalloplasty_N = mkN "phalloplasty" ;
lin phallus_N = mkN "phallus" "phalluses";
lin phalsa_N = mkN "phalsa" ;
lin phaneromania_N = mkN "phaneromania" ;
lin phantasm_N = mkN "phantasm" "phantasms";
lin phantasmagoria_N = mkN "phantasmagoria" "phantasmagorias";
lin phantasmagoric_A = mkA "phantasmagoric" ;
lin phantasmal_A = compoundA (mkA "phantasmal");
lin phantasy_N = mkN "phantasy" "phantasies";
lin phantom_A = mkA "phantom" ;
lin phantom_N = mkN "phantom" "phantoms";
lin pharaoh_N = mkN "pharaoh" "pharaohs";
lin pharisaic_A = compoundA (mkA "pharisaic");
lin pharisaical_A = compoundA (mkA "pharisaical");
lin pharisee_N = mkN "pharisee" "pharisees";
lin pharmaceutical_A = compoundA (mkA "pharmaceutical");
lin pharmaceutical_N = mkN "pharmaceutical" ;
lin pharmacist_N = mkN "pharmacist" "pharmacists";
lin pharmacogenetics_N = mkN "pharmacogenetics" ;
lin pharmacokinetics_N = mkN "pharmacokinetics" ;
lin pharmacological_A = compoundA (mkA "pharmacological");
lin pharmacologist_N = mkN "pharmacologist" "pharmacologists";
lin pharmacology_N = mkN "pharmacology" ;
lin pharmacopoeia_N = mkN "pharmacopoeia" "pharmacopoeias";
lin pharmacy_N = mkN "pharmacy" "pharmacies";
lin pharos_N = mkN "pharos" "IRREG";
lin pharyngeal_A = mkA "pharyngeal" ;
lin pharyngitis_N = mkN "pharyngitis" ;
lin pharynx_N = mkN "pharynx" "pharynxes";
lin phase_N = mkN "phase" "phases";
lin phase_V2 = mkV2 (mkV "phase" "phases" "phased" "phased" "phasing");
lin phasianid_N = mkN "phasianid" ;
lin phasmid_N = mkN "phasmid" ;
lin phd_N = mkN "phd" ;
lin pheasant_N = mkN "pheasant" "pheasants";
lin phellem_N = mkN "phellem" ;
lin phenacomys_N = mkN "phenacomys" ;
lin phenazopyridine_N = mkN "phenazopyridine" ;
lin phencyclidine_N = mkN "phencyclidine" ;
lin phenelzine_N = mkN "phenelzine" ;
lin pheniramine_N = mkN "pheniramine" ;
lin phenobarbitone_N = mkN "phenobarbitone" ;
lin phenol_N = mkN "phenol" ;
lin phenolphthalein_N = mkN "phenolphthalein" ;
lin phenomenal_A = compoundA (mkA "phenomenal");
lin phenomenology_N = mkN "phenomenology" ;
lin phenomenon_N = mkN "phenomenon" "phenomena" {- FIXME: guessed plural form -};
lin phenothiazine_N = mkN "phenothiazine" ;
lin phenotype_N = mkN "phenotype" ;
lin phenotypical_A = mkA "phenotypical" ;
lin phensuximide_N = mkN "phensuximide" ;
lin phentolamine_N = mkN "phentolamine" ;
lin phenylalanine_N = mkN "phenylalanine" ;
lin phenylbutazone_N = mkN "phenylbutazone" ;
lin phenylephrine_N = mkN "phenylephrine" ;
lin phenylketonuria_N = mkN "phenylketonuria" ;
lin phenylpropanolamine_N = mkN "phenylpropanolamine" ;
lin phenyltoloxamine_N = mkN "phenyltoloxamine" ;
lin pheochromocytoma_N = mkN "pheochromocytoma" ;
lin pheromone_N = mkN "pheromone" ;
lin phi_N = mkN "phi" ;
lin phial_N = mkN "phial" "phials";
lin phil_PN = mkPN "Phil";
lin philadelphia_PN = mkPN "Philadelphia";
lin philadelphus_N = mkN "philadelphus" ;
lin philander_V = mkV "philander" "philanders" "philandered" "philandered" "philandering";
lin philanderer_N = mkN "philanderer" "philanderers";
lin philanthropic_A = compoundA (mkA "philanthropic");
lin philanthropically_Adv = mkAdv "philanthropically";
lin philanthropist_N = mkN "philanthropist" "philanthropists";
lin philanthropy_N = mkN "philanthropy" ;
lin philatelic_A = compoundA (mkA "philatelic");
lin philatelically_Adv = mkAdv "philatelically" ;
lin philatelist_N = mkN "philatelist" "philatelists";
lin philately_N = mkN "philately" ;
lin philharmonic_A = compoundA (mkA "philharmonic");
lin philhellene_A = compoundA (mkA "philhellene");
lin philhellene_N = mkN "philhellene" "philhellenes";
lin philhellenic_A = compoundA (mkA "philhellenic");
lin philhellenism_N = mkN "philhellenism" ;
lin philip_PN = mkPN "Philip";
lin philippa_PN = mkPN "Philippa";
lin philippine_A = compoundA (mkA "Philippine");
lin philippine_N = mkN "Philippine" "Philippines";
lin philippines_PN = mkPN "Philippines";
lin philistine_N = mkN "philistine" "philistines";
lin philistinism_N = mkN "philistinism" ;
lin phillipsite_N = mkN "phillipsite" ;
lin philodendron_N = mkN "philodendron" ;
lin philogyny_N = mkN "philogyny" ;
lin philological_A = compoundA (mkA "philological");
lin philologist_N = mkN "philologist" "philologists";
lin philology_N = mkN "philology" ;
lin philomath_N = mkN "philomath" ;
lin philosopher_N = mkN "philosopher" "philosophers";
lin philosophic_A = compoundA (mkA "philosophic");
lin philosophical_A = compoundA (mkA "philosophical");
lin philosophize_V = mkV "philosophize" "philosophizes" "philosophized" "philosophized" "philosophizing";
lin philosophizer_N = mkN "philosophizer" ;
lin philosophizing_N = mkN "philosophizing" ;
lin philosophy_N = mkN "philosophy" "philosophies";
lin philter_N = mkN "philter" ;
lin philtre_N = mkN "philtre" "philtres";
lin phimosis_N = mkN "phimosis" ;
lin phlebectomy_N = mkN "phlebectomy" ;
lin phlebitis_N = mkN "phlebitis" ;
lin phlebothrombosis_N = mkN "phlebothrombosis" ;
lin phlebotomist_N = mkN "phlebotomist" ;
lin phlegm_N = mkN "phlegm" ;
lin phlegmatic_A = compoundA (mkA "phlegmatic");
lin phlegmatically_Adv = mkAdv "phlegmatically";
lin phlegmy_A = mkA "phlegmy" ;
lin phloem_N = mkN "phloem" ;
lin phlogiston_N = mkN "phlogiston" ;
lin phlogopite_N = mkN "phlogopite" ;
lin phlomis_N = mkN "phlomis" ;
lin phlox_N = mkN "phlox" ;
lin phnom_penh_PN = mkPN "Phnom-penh";
lin phobia_N = mkN "phobia" "phobias";
lin phobic_A = mkA "phobic" ;
lin phobophobia_N = mkN "phobophobia" ;
lin phocine_A = mkA "phocine" ;
lin phocomelia_N = mkN "phocomelia" ;
lin phoebe_N = mkN "phoebe" ;
lin phoebe_PN = mkPN "Phoebe";
lin phoenicophorium_N = mkN "phoenicophorium" ;
lin phoenix_N = mkN "phoenix" "phoenixes";
lin phoenix_PN = mkPN "Phoenix";
lin phon_N = mkN "phon" ;
lin phone_N = mkN "phone" "phones";
lin phone_V = mkV "phone" "phones" "phoned" "phoned" "phoning";
lin phone_V2 = mkV2 (mkV "phone" "phones" "phoned" "phoned" "phoning");
lin phone_in_N = mkN "phone-in" "phone-ins";
lin phonebook_N = mkN "phonebook" ;
lin phonebooth_N = mkN "phonebooth" "phonebooths";
lin phonecall_N = mkN "phonecall" "phonecalls";
lin phoneme_N = mkN "phoneme" "phonemes";
lin phonemic_A = compoundA (mkA "phonemic");
lin phonemic_Adv = mkAdv "phonemic" ;
lin phonemics_N = mkN "phonemics" "phonemics";
lin phonetic_A = compoundA (mkA "phonetic");
lin phonetically_Adv = mkAdv "phonetically";
lin phonetician_N = mkN human (mkN "phonetician" "phoneticians");
lin phonetics_N = mkN "phonetics" "phonetics";
lin phoney_A = compoundA (mkA "phoney");
lin phoney_N = mkN "phoney" "phoneys";
lin phonic_A = compoundA (mkA "phonic");
lin phonics_N = mkN "phonics" "phonics";
lin phonogram_N = mkN "phonogram" ;
lin phonogramic_A = mkA "phonogramic" ;
lin phonograph_N = mkN "phonograph" "phonographs";
lin phonological_A = compoundA (mkA "phonological");
lin phonologist_N = mkN "phonologist" ;
lin phonology_N = mkN "phonology" ;
lin phonophobia_N = mkN "phonophobia" ;
lin phony_A = compoundA (mkA "phony");
lin phony_N = mkN "phony" "phonies";
lin phoronid_N = mkN "phoronid" ;
lin phosgene_N = mkN "phosgene" ;
lin phosphatase_N = mkN "phosphatase" ;
lin phosphate_N = mkN "phosphate" "phosphates";
lin phosphine_N = mkN "phosphine" ;
lin phosphocreatine_N = mkN "phosphocreatine" ;
lin phospholipid_N = mkN "phospholipid" ;
lin phosphoprotein_N = mkN "phosphoprotein" ;
lin phosphor_N = mkN "phosphor" ;
lin phosphorescence_N = mkN "phosphorescence" ;
lin phosphorescent_A = compoundA (mkA "phosphorescent");
lin phosphoric_A = compoundA (mkA "phosphoric");
lin phosphorous_A = compoundA (mkA "phosphorous");
lin phosphorus_N = mkN "phosphorus" ;
lin phot_N = mkN "phot" ;
lin photalgia_N = mkN "photalgia" ;
lin photic_A = mkA "photic" ;
lin photo_N = mkN "photo" "photos";
lin photocathode_N = mkN "photocathode" ;
lin photochemical_A = mkA "photochemical" ;
lin photochemistry_N = mkN "photochemistry" ;
lin photocoagulation_N = mkN "photocoagulation" ;
lin photocoagulator_N = mkN "photocoagulator" ;
lin photoconductive_A = mkA "photoconductive" ;
lin photoconductivity_N = mkN "photoconductivity" ;
lin photocopier_N = mkN "photocopier" "photocopiers";
lin photocopy_N = mkN "photocopy" "photocopies";
lin photocopy_V2 = mkV2 (mkV "photocopy" "photocopies" "photocopied" "photocopied" "photocopying");
lin photoelectric_A = compoundA (mkA "photoelectric");
lin photoelectrically_Adv = mkAdv "photoelectrically" ;
lin photoelectricity_N = mkN "photoelectricity" ;
lin photoelectron_N = mkN "photoelectron" ;
lin photoemission_N = mkN "photoemission" ;
lin photoemissive_A = mkA "photoemissive" ;
lin photoflash_N = mkN "photoflash" "photoflashes";
lin photogenic_A = compoundA (mkA "photogenic");
lin photograph_N = mkN "photograph" "photographs";
lin photograph_V2 = mkV2 (mkV "photograph" "photographs" "photographed" "photographed" "photographing");
lin photographer_N = mkN "photographer" "photographers";
lin photographic_A = compoundA (mkA "photographic");
lin photographically_Adv = mkAdv "photographically";
lin photography_N = mkN "photography" ;
lin photogravure_N = mkN "photogravure" "photogravures";
lin photojournalism_N = mkN "photojournalism" ;
lin photojournalist_N = mkN "photojournalist" ;
lin photolithograph_N = mkN "photolithograph" ;
lin photolithography_N = mkN "photolithography" ;
lin photomechanical_A = mkA "photomechanical" ;
lin photomechanics_N = mkN "photomechanics" ;
lin photometer_N = mkN "photometer" "photometers";
lin photometric_A = mkA "photometric" ;
lin photometrically_Adv = mkAdv "photometrically" ;
lin photometrist_N = mkN "photometrist" ;
lin photometry_N = mkN "photometry" ;
lin photomicrograph_N = mkN "photomicrograph" ;
lin photomontage_N = mkN "photomontage" ;
lin photon_N = mkN "photon" "photons";
lin photophobia_N = mkN "photophobia" ;
lin photopigment_N = mkN "photopigment" ;
lin photoretinitis_N = mkN "photoretinitis" ;
lin photosensitivity_N = mkN "photosensitivity" ;
lin photosensitize_V2 = mkV2 (mkV "photosensitize" "photosensitizes" "photosensitized" "photosensitized" "photosensitizing");
lin photosphere_N = mkN "photosphere" ;
lin photostat_N = mkN "photostat" "photostats";
lin photostat_V2 = mkV2 (mkV "photostat" "photostats" "photostatted" "photostatted" "photostatting");
lin photosynthesis_N = mkN "photosynthesis" ;
lin photosynthetic_A = mkA "photosynthetic" ;
lin phototherapy_N = mkN "phototherapy" ;
lin phototropism_N = mkN "phototropism" ;
lin photovoltaic_A = mkA "photovoltaic" ;
lin phragmocone_N = mkN "phragmocone" ;
lin phrasal_A = compoundA (mkA "phrasal");
lin phrase_N = mkN "phrase" "phrases";
lin phrase_V2 = mkV2 (mkV "phrase" "phrases" "phrased" "phrased" "phrasing");
lin phrase_book_N = mkN "phrase-book" "phrase-books";
lin phraseology_N = mkN "phraseology" ;
lin phrasing_N = mkN "phrasing" ;
lin phreatic_A = mkA "phreatic" ;
lin phrenetic_A = compoundA (mkA "phrenetic");
lin phrenic_A = mkA "phrenic" ;
lin phrenological_A = mkA "phrenological" ;
lin phrenologist_N = mkN "phrenologist" "phrenologists";
lin phrenology_N = mkN "phrenology" ;
lin phrontistery_N = mkN "phrontistery" ;
lin phthisis_N = mkN "phthisis" ;
lin phut_Adv = mkAdv "phut";
lin phycobilin_N = mkN "phycobilin" ;
lin phycocyanin_N = mkN "phycocyanin" ;
lin phycoerythrin_N = mkN "phycoerythrin" ;
lin phycology_N = mkN "phycology" ;
lin phycomycosis_N = mkN "phycomycosis" ;
lin phylactery_N = mkN "phylactery" ;
lin phyle_N = mkN "phyle" ;
lin phylliform_A = mkA "phylliform" ;
lin phyllis_PN = mkPN "Phyllis";
lin phyllo_N = mkN "phyllo" ;
lin phyllode_N = mkN "phyllode" ;
lin phyllodial_A = mkA "phyllodial" ;
lin phylogenetic_A = mkA "phylogenetic" ;
lin phylogenetically_Adv = mkAdv "phylogenetically" ;
lin phylum_N = mkN "phylum" "phylums";
lin physa_N = mkN "physa" ;
lin physic_N = mkN "physic" "physics";
lin physical_A = compoundA (mkA "physical");
lin physician_N = mkN "physician" "physicians";
lin physicist_N = mkN "physicist" "physicists";
lin physicochemical_A = mkA "physicochemical" ;
lin physics_N = mkN "physics" "physics";
lin physiognomy_N = mkN "physiognomy" "physiognomies";
lin physiologic_A = mkA "physiologic" ;
lin physiological_A = compoundA (mkA "physiological");
lin physiologist_N = mkN "physiologist" "physiologists";
lin physiology_N = mkN "physiology" ;
lin physiotherapeutic_A = mkA "physiotherapeutic" ;
lin physiotherapist_N = mkN "physiotherapist" "physiotherapists";
lin physiotherapy_N = mkN "physiotherapy" ;
lin physique_N = mkN "physique" "physiques";
lin physostegia_N = mkN "physostegia" ;
lin physostigmine_N = mkN "physostigmine" ;
lin phytelephas_N = mkN "phytelephas" ;
lin phytochemical_N = mkN "phytochemical" ;
lin phytochemist_N = mkN "phytochemist" ;
lin phytochemistry_N = mkN "phytochemistry" ;
lin phytohormone_N = mkN "phytohormone" ;
lin phytoplankton_N = mkN "phytoplankton" ;
lin phytotherapy_N = mkN "phytotherapy" ;
lin pi_N = mkN "pi" "pis";
lin pia_N = mkN "pia" ;
lin piacenza_PN = mkPN "Piacenza";
lin piaffe_N = mkN "piaffe" ;
lin pianism_N = mkN "pianism" ;
lin pianissimo_A = compoundA (mkA "pianissimo");
lin pianissimo_Adv = mkAdv "pianissimo";
lin pianistMasc_N = mkN masculine (mkN "pianist" "pianists");
lin pianistFem_N = mkN feminine (mkN "pianist" "pianists");
lin pianistic_A = mkA "pianistic" ;
lin piano_A = compoundA (mkA "piano");
lin piano_Adv = mkAdv "piano";
lin piano_N = mkN "piano" "pianos";
lin pianoforte_N = mkN "pianoforte" "pianofortes";
lin pianola_N = mkN "pianola" "pianolas";
lin piaster_N = mkN "piaster" ;
lin piastre_N = mkN "piastre" "piastres";
lin piazza_N = mkN "piazza" "piazzas";
lin pibroch_N = mkN "pibroch" "pibrochs";
lin pica_N = mkN "pica" "pica";
lin picador_N = mkN "picador" "picadors";
lin picaresque_A = compoundA (mkA "picaresque");
lin piccalilli_N = mkN "piccalilli" ;
lin piccaninny_N = mkN "piccaninny" "piccaninnies";
lin piccolo_N = mkN "piccolo" "piccolos";
lin pichi_N = mkN "pichi" ;
lin pichiciago_N = mkN "pichiciago" ;
lin pick_N = mkN "pick" "picks";
lin pick_V = mkV "pick" "picks" "picked" "picked" "picking";
lin pick_V2 = mkV2 (mkV "pick" "picks" "picked" "picked" "picking");
lin pick_me_up_N = mkN "pick-me-up" "pick-me-ups";
lin pick_up_N = mkN "pick-up" "pick-ups";
lin pickaback_Adv = mkAdv "pickaback";
lin pickaninny_N = mkN "pickaninny" ;
lin pickaxe_N = mkN "pickaxe" "pickaxes";
lin pickelhaube_N = mkN "pickelhaube" ;
lin picker_N = mkN "picker" "pickers";
lin pickerel_N = mkN "pickerel" "pickerel";
lin pickerelweed_N = mkN "pickerelweed" ;
lin picket_N = mkN "picket" "pickets";
lin picket_V = mkV "picket" "pickets" "picketed" "picketed" "picketing";
lin picket_V2 = mkV2 (mkV "picket" "pickets" "picketed" "picketed" "picketing");
lin picking_N = mkN "picking" "pickings";
lin pickings_N = mkN "pickings" ;
lin pickle_N = mkN "pickle" "pickles";
lin pickle_V2 = mkV2 (mkV "pickle" "pickles" "pickled" "pickled" "pickling");
lin pickpocket_N = mkN "pickpocket" "pickpockets";
lin pickup_N = mkN "pickup" ;
lin picnic_N = mkN "picnic" "picnics";
lin picnic_V = mkV "picnic" "picnics" "picnicked" "picnicked" "picnicking";
lin picnicker_N = mkN "picnicker" "picnickers";
lin picofarad_N = mkN "picofarad" ;
lin picometer_N = mkN "picometer" ;
lin picornavirus_N = mkN "picornavirus" ;
lin picosecond_N = mkN "picosecond" ;
lin picot_N = mkN "picot" ;
lin picovolt_N = mkN "picovolt" ;
lin picric_A = compoundA (mkA "picric");
lin pictograph_N = mkN "pictograph" ;
lin pictographic_A = mkA "pictographic" ;
lin pictorial_A = compoundA (mkA "pictorial");
lin pictorial_N = mkN "pictorial" "pictorials";
lin picture_N = mkN "picture" "pictures";
lin picture_V2 = mkV2 (mkV "picture" "pictures" "pictured" "pictured" "picturing");
lin picture_book_N = mkN "picture-book" "picture-books";
lin picture_card_N = mkN "picture-card" "picture-cards";
lin picture_gallery_N = mkN "picture-gallery" "picture-galleries";
lin picturesque_A = compoundA (mkA "picturesque");
lin picturesqueness_N = mkN "picturesqueness" ;
lin picturing_N = mkN "picturing" ;
lin picul_N = mkN "picul" ;
lin piculet_N = mkN "piculet" ;
lin piddle_N = mkN "piddle" "piddles";
lin piddle_V = mkV "piddle" "piddles" "piddled" "piddled" "piddling";
lin piddock_N = mkN "piddock" ;
lin pidgin_N = mkN "pidgin" "pidgins";
lin pie_N = mkN "pie" "pies";
lin pie_crust_N = mkN "pie-crust" ;
lin piebald_A = compoundA (mkA "piebald");
lin piece_N = mkN "piece" "pieces";
lin piece_V2 = mkV2 (mkV "piece" "pieces" "pieced" "pieced" "piecing");
lin piecemeal_A = compoundA (mkA "piecemeal");
lin piecemeal_Adv = mkAdv "piecemeal";
lin piecework_N = mkN "piecework" ;
lin pied_A = compoundA (mkA "pied");
lin pied_a_terre_N = mkN "pied-à-terre" "pied-à-terres";
lin piedmont_N = mkN "piedmont" ;
lin pieplant_N = mkN "pieplant" ;
lin pier_N = mkN "pier" "piers";
lin pier_glass_N = mkN "pier-glass" "pier-glasses";
lin pierce_V = mkV "pierce" "pierces" "pierced" "pierced" "piercing";
lin pierce_V2 = mkV2 (mkV "pierce" "pierces" "pierced" "pierced" "piercing");
lin piercingly_Adv = mkAdv "piercingly" ;
lin pierid_N = mkN "pierid" ;
lin pierrot_N = mkN "pierrot" "pierrots";
lin pieta_N = mkN "pietà" "pietàs";
lin pietistic_A = mkA "pietistic" ;
lin piety_N = mkN "piety" "pieties";
lin piezoelectric_A = mkA "piezoelectric" ;
lin piezoelectricity_N = mkN "piezoelectricity" ;
lin piezometer_N = mkN "piezometer" ;
lin piffle_N = mkN "piffle" ;
lin piffle_V = mkV "piffle" "piffles" "piffled" "piffled" "piffling";
lin pig_N = mkN "pig" "pigs";
lin pig_V = mkV "pig" "pigs" "pigged" "pigged" "pigging";
lin pig_headed_A = compoundA (mkA "pig-headed");
lin pig_headedness_N = mkN "pig-headedness" ;
lin pig_iron_N = mkN "pig-iron" ;
lin pig_sticking_N = mkN "pig-sticking" ;
lin pigboat_N = mkN "pigboat" "pigboats";
lin pigeon_N = mkN "pigeon" "pigeons";
lin pigeon_breasted_A = compoundA (mkA "pigeon-breasted");
lin pigeon_toed_A = compoundA (mkA "pigeon-toed");
lin pigeonhole_N = mkN "pigeonhole" "pigeonholes";
lin pigeonhole_V2 = mkV2 (mkV "pigeonhole" "pigeonholes" "pigeonholed" "pigeonholed" "pigeonholing");
lin pigfish_N = mkN "pigfish" ;
lin piggery_N = mkN "piggery" "piggeries";
lin piggish_A = compoundA (mkA "piggish");
lin piggishness_N = mkN "piggishness" ;
lin piggy_A = mkA "piggy" "piggier";
lin piggy_N = mkN "piggy" "piggies";
lin piggyback_Adv = mkAdv "piggyback" ;
lin piggyback_N = mkN "piggyback" "piggybacks";
lin piggyback_V = mkV "piggyback";
lin piglet_N = mkN "piglet" "piglets";
lin pigment_N = mkN "pigment" "pigments";
lin pigmentation_N = mkN "pigmentation" "pigmentations";
lin pigmy_N = mkN "pigmy" "pigmies";
lin pignut_N = mkN "pignut" ;
lin pigskin_N = mkN "pigskin" ;
lin pigsticking_N = mkN "pigsticking" ;
lin pigsty_N = mkN "pigsty" "pigsties";
lin pigswill_N = mkN "pigswill" ;
lin pigtail_N = mkN "pigtail" "pigtails";
lin pigwash_N = mkN "pigwash" ;
lin pigweed_N = mkN "pigweed" ;
lin pika_N = mkN "pika" ;
lin pike_N = mkN "pike" "pike";
lin pikeblenny_N = mkN "pikeblenny" ;
lin pikestaff_N = mkN "pikestaff" "pikestaffs";
lin pilaf_N = mkN "pilaf" ;
lin pilaff_N = mkN "pilaff" ;
lin pilar_A = mkA "pilar" ;
lin pilaster_N = mkN "pilaster" "pilasters";
lin pilau_N = mkN "pilau" ;
lin pilchard_N = mkN "pilchard" "pilchards";
lin pile_N = mkN "pile" "piles";
lin pile_V = mkV "pile" "piles" "piled" "piled" "piling";
lin pile_V2 = mkV2 (mkV "pile" "piles" "piled" "piled" "piling");
lin pile_driver_N = mkN "pile-driver" "pile-drivers";
lin pile_dwelling_N = mkN "pile-dwelling" "pile-dwellings";
lin pile_up_N = mkN "pile-up" "pile-ups";
lin piles_N = mkN "piles" "piles";
lin pileup_N = mkN "pileup" ;
lin pilfer_V = mkV "pilfer" "pilfers" "pilfered" "pilfered" "pilfering";
lin pilfer_V2 = mkV2 (mkV "pilfer" "pilfers" "pilfered" "pilfered" "pilfering");
lin pilferage_N = mkN "pilferage" ;
lin pilferer_N = mkN "pilferer" "pilferers";
lin pilgrim_N = mkN human (mkN "pilgrim" "pilgrims");
lin pilgrimage_N = mkN "pilgrimage" "pilgrimages";
lin pill_N = mkN "pill" "pills";
lin pill_PN = mkPN "Pill";
lin pillage_N = mkN "pillage" "pillages";
lin pillage_V2 = mkV2 (mkV "pillage" "pillages" "pillaged" "pillaged" "pillaging");
lin pillager_N = mkN "pillager" "pillagers";
lin pillar_N = mkN "pillar" "pillars";
lin pillar_box_N = mkN "pillar-box" "pillar-boxes";
lin pillared_A = compoundA (mkA "pillared");
lin pillbox_N = mkN "pillbox" "pillboxes";
lin pillion_N = mkN "pillion" "pillions";
lin pillory_N = mkN "pillory" "pillories";
lin pillory_V2 = mkV2 (mkV "pillory");
lin pillow_N = mkN "pillow" "pillows";
lin pillow_V2 = mkV2 (mkV "pillow" "pillows" "pillowed" "pillowed" "pillowing");
lin pillow_fight_N = mkN "pillow-fight" "pillow-fights";
lin pillowcase_N = mkN "pillowcase" "pillowcases";
lin pillowslip_N = mkN "pillowslip" "pillowslips";
lin pillwort_N = mkN "pillwort" ;
lin pilocarpine_N = mkN "pilocarpine" ;
lin pilosebaceous_A = mkA "pilosebaceous" ;
lin pilot_N = mkN "pilot" "pilots";
lin pilot_V2 = mkV2 (mkV "pilot" "pilots" "piloted" "piloted" "piloting");
lin pilot_boat_N = mkN "pilot-boat" "pilot-boats";
lin pilot_burner_N = mkN "pilot-burner" "pilot-burners";
lin pilot_cloth_N = mkN "pilot-cloth" ;
lin pilot_engine_N = mkN "pilot-engine" "pilot-engines";
lin pilot_fish_N = mkN "pilot-fish" "pilot-fish";
lin pilot_light_N = mkN "pilot-light" "pilot-lights";
lin pilotfish_N = mkN "pilotfish" ;
lin pilothouse_N = mkN "pilothouse" ;
lin piloting_N = mkN "piloting" ;
lin pilotless_A = mkA "pilotless" ;
lin pilous_A = mkA "pilous" ;
lin pilus_N = mkN "pilus" ;
lin pimento_N = mkN "pimento" "pimentos";
lin pimozide_N = mkN "pimozide" ;
lin pimp_N = mkN "pimp" "pimps";
lin pimp_V = mkV "pimp" "pimps" "pimped" "pimped" "pimping";
lin pimpernel_N = mkN "pimpernel" "pimpernels";
lin pimple_N = mkN "pimple" "pimples";
lin pimpled_A = compoundA (mkA "pimpled");
lin pimply_A = mkA "pimply" "pimplier";
lin pin_N = mkN "pin" "pins";
lin pin_V2 = mkV2 (mkV "pin" "pins" "pinned" "pinned" "pinning");
lin pin_money_N = mkN "pin-money" ;
lin pin_point_V2 = mkV2 (mkV "pin-point");
lin pin_table_N = mkN "pin-table" "pin-tables";
lin pin_up_N = mkN "pin-up" "pin-ups";
lin pinafore_N = mkN "pinafore" "pinafores";
lin pinata_N = mkN "pinata" ;
lin pinball_N = mkN "pinball" ;
lin pince_nez_N = mkN "pince-nez" "pince-nez";
lin pincer_N = mkN "pincer" "pincers";
lin pinch_N = mkN "pinch" "pinches";
lin pinch_V = mkV "pinch" "pinches" "pinched" "pinched" "pinching";
lin pinch_V2 = mkV2 (mkV "pinch" "pinches" "pinched" "pinched" "pinching");
lin pinchbeck_A = compoundA (mkA "pinchbeck");
lin pinchbeck_N = mkN "pinchbeck" "pinchbecks";
lin pinche_N = mkN "pinche" ;
lin pinchgut_N = mkN "pinchgut" ;
lin pincushion_N = mkN "pincushion" "pincushions";
lin pindolol_N = mkN "pindolol" ;
lin pine_N = mkN "pine" "pines";
lin pine_V = mkV "pine" "pines" "pined" "pined" "pining";
lin pineal_A = compoundA (mkA "pineal");
lin pinealoma_N = mkN "pinealoma" ;
lin pineapple_N = mkN "pineapple" "pineapples";
lin pinecone_N = mkN "pinecone" ;
lin pinesap_N = mkN "pinesap" ;
lin pinetum_N = mkN "pinetum" ;
lin pinfish_N = mkN "pinfish" ;
lin pinfold_N = mkN "pinfold" ;
lin ping_N = mkN "ping" "pings";
lin ping_V = mkV "ping" "pings" "pinged" "pinged" "pinging";
lin pinger_N = mkN "pinger" ;
lin pingpong_N = mkN "pingpong" ;
lin pinguecula_N = mkN "pinguecula" ;
lin pinhead_N = mkN "pinhead" "pinheads";
lin pinhole_N = mkN "pinhole" ;
lin pining_N = mkN "pining" ;
lin pinion_N = mkN "pinion" "pinions";
lin pinion_V2 = mkV2 (mkV "pinion" "pinions" "pinioned" "pinioned" "pinioning");
lin pinite_N = mkN "pinite" ;
lin pink_A = mkA "pink" "pinker";
lin pink_N = mkN "pink" "pinks";
lin pink_V = mkV "pink" "pinks" "pinked" "pinked" "pinking";
lin pink_V2 = mkV2 (mkV "pink" "pinks" "pinked" "pinked" "pinking");
lin pinkish_A = compoundA (mkA "pinkish");
lin pinkness_N = mkN "pinkness" ;
lin pinko_N = mkN "pinko" ;
lin pinkroot_N = mkN "pinkroot" ;
lin pinna_N = mkN "pinna" ;
lin pinnace_N = mkN "pinnace" "pinnaces";
lin pinnacle_N = mkN "pinnacle" "pinnacles";
lin pinnacle_V2 = mkV2 (mkV "pinnacle" "pinnacles" "pinnacled" "pinnacled" "pinnacling");
lin pinnate_A = compoundA (mkA "pinnate");
lin pinnatifid_A = mkA "pinnatifid" ;
lin pinnatisect_A = mkA "pinnatisect" ;
lin pinner_N = mkN "pinner" ;
lin pinning_N = mkN "pinning" ;
lin pinny_N = mkN "pinny" "pinnies";
lin pinochle_N = mkN "pinochle" ;
lin pinocytosis_N = mkN "pinocytosis" ;
lin pinole_N = mkN "pinole" ;
lin pinon_N = mkN "pinon" ;
lin pinpoint_N = mkN "pinpoint" "pinpoints";
lin pinpoint_V2 = mkV2 (mkV "pinpoint" "pinpoints" "pinpointed" "pinpointed" "pinpointing");
lin pinprick_N = mkN "pinprick" "pinpricks";
lin pinscher_N = mkN "pinscher" ;
lin pinstripe_A = compoundA (mkA "pinstripe");
lin pinstripe_N = mkN "pinstripe" ;
lin pinstriped_A = mkA "pinstriped" ;
lin pint_N = mkN "pint" "pints";
lin pintail_N = mkN "pintail" ;
lin pintle_N = mkN "pintle" ;
lin pinto_N = mkN "pinto" ;
lin pinwheel_N = mkN "pinwheel" ;
lin pinworm_N = mkN "pinworm" ;
lin pion_N = mkN "pion" ;
lin pioneer_N = mkN "pioneer" "pioneers";
lin pioneer_V = mkV "pioneer" "pioneers" "pioneered" "pioneered" "pioneering";
lin pioneer_V2 = mkV2 (mkV "pioneer" "pioneers" "pioneered" "pioneered" "pioneering");
lin pious_A = compoundA (mkA "pious");
lin pip_N = mkN "pip" "pips";
lin pip_V2 = mkV2 (mkV "pip" "pips" "pipped" "pipped" "pipping");
lin pipage_N = mkN "pipage" ;
lin pipal_N = mkN "pipal" "pipals";
lin pipe_N = mkN "pipe" "pipes";
lin pipe_V = mkV "pipe" "pipes" "piped" "piped" "piping";
lin pipe_V2 = mkV2 (mkV "pipe" "pipes" "piped" "piped" "piping");
lin pipe_organ_N = mkN "pipe-organ" "pipe-organs";
lin pipe_rack_N = mkN "pipe-rack" "pipe-racks";
lin pipeclay_N = mkN "pipeclay" ;
lin pipedream_N = mkN "pipedream" "pipedreams";
lin pipefish_N = mkN "pipefish" ;
lin pipefitting_N = mkN "pipefitting" ;
lin pipeful_N = mkN "pipeful" "pipefuls";
lin pipeline_N = mkN "pipeline" "pipelines";
lin piper_N = mkN "piper" "pipers";
lin piperacillin_N = mkN "piperacillin" ;
lin piperazine_N = mkN "piperazine" ;
lin piperin_N = mkN "piperin" ;
lin piperocaine_N = mkN "piperocaine" ;
lin pipet_N = mkN "pipet" ;
lin pipette_N = mkN "pipette" "pipettes";
lin pipework_N = mkN "pipework" ;
lin pipewort_N = mkN "pipewort" ;
lin piping_Adv = mkAdv "piping";
lin piping_N = mkN "piping" ;
lin pipistrelle_N = mkN "pipistrelle" ;
lin pipit_N = mkN "pipit" ;
lin pippin_N = mkN "pippin" "pippins";
lin pipsissewa_N = mkN "pipsissewa" ;
lin pipsqueak_N = mkN "pipsqueak" "pipsqueaks";
lin piquancy_N = mkN "piquancy" ;
lin piquant_A = compoundA (mkA "piquant");
lin pique_N = mkN "pique" "piques";
lin pique_V2 = mkV2 (mkV "pique" "piques" "piqued" "piqued" "piquing");
lin piquet_N = mkN "piquet" ;
lin piracy_N = mkN "piracy" "piracies";
lin piraeus_PN = mkPN "Piraeus";
lin piranha_N = mkN "piranha" "piranhas";
lin pirate_N = mkN "pirate" "pirates";
lin pirate_V2 = mkV2 (mkV "pirate" "pirates" "pirated" "pirated" "pirating");
lin piratical_A = compoundA (mkA "piratical");
lin pirogi_N = mkN "pirogi" ;
lin piroplasm_N = mkN "piroplasm" ;
lin pirouette_N = mkN "pirouette" "pirouettes";
lin pirouette_V = mkV "pirouette" "pirouettes" "pirouetted" "pirouetted" "pirouetting";
lin piroxicam_N = mkN "piroxicam" ;
lin pis_aller_N = mkN "pis aller" "IRREG";
lin pisa_PN = mkPN "Pisa";
lin pisanosaur_N = mkN "pisanosaur" ;
lin piscatorial_A = compoundA (mkA "piscatorial");
lin pisces_PN = mkPN "Pisces";
lin piscine_A = mkA "piscine" ;
lin piscivorous_A = mkA "piscivorous" ;
lin pisiform_N = mkN "pisiform" ;
lin piss_N = mkN "piss" "pisses";
lin piss_V = mkV "piss" "pisses" "pissed" "pissed" "pissing";
lin piss_V2 = mkV2 (mkV "piss" "pisses" "pissed" "pissed" "pissing");
lin pisser_N = mkN "pisser" ;
lin pistachio_N = mkN "pistachio" "pistachios";
lin piste_N = mkN "piste" ;
lin pistia_N = mkN "pistia" ;
lin pistil_N = mkN "pistil" "pistils";
lin pistillate_A = mkA "pistillate" ;
lin pistillode_N = mkN "pistillode" ;
lin pistol_N = mkN "pistol" "pistols";
lin pistoleer_N = mkN "pistoleer" ;
lin piston_N = mkN "piston" "pistons";
lin pit_N = mkN "pit" "pits";
lin pit_V2 = mkV2 (mkV "pit" "pits" "pitted" "pitted" "pitting");
lin pit_a_pat_Adv = mkAdv "pit-a-pat";
lin pit_prop_N = mkN "pit-prop" "pit-props";
lin pita_N = mkN "pita" ;
lin pitahaya_N = mkN "pitahaya" ;
lin pitch_N = mkN "pitch" "pitches";
lin pitch_V = mkV "pitch" "pitches" "pitched" "pitched" "pitching";
lin pitch_V2 = mkV2 (mkV "pitch" "pitches" "pitched" "pitched" "pitching");
lin pitch_black_A = compoundA (mkA "pitch-black");
lin pitch_dark_A = compoundA (mkA "pitch-dark");
lin pitchblende_N = mkN "pitchblende" ;
lin pitcher_N = mkN "pitcher" "pitchers";
lin pitchfork_N = mkN "pitchfork" "pitchforks";
lin pitchfork_V2 = mkV2 (mkV "pitchfork" "pitchforks" "pitchforked" "pitchforked" "pitchforking");
lin pitching_N = mkN "pitching" ;
lin pitchman_N = mkN masculine (mkN "pitchman" "pitchmen");
lin pitchstone_N = mkN "pitchstone" ;
lin pitchy_A = mkA "pitchy" ;
lin piteous_A = compoundA (mkA "piteous");
lin pitfall_N = mkN "pitfall" "pitfalls";
lin pith_N = mkN "pith" ;
lin pithead_N = mkN "pithead" "pitheads";
lin pithy_A = mkA "pithy" "pithier";
lin pitiable_A = compoundA (mkA "pitiable");
lin pitiful_A = compoundA (mkA "pitiful");
lin pitiless_A = compoundA (mkA "pitiless");
lin pitilessness_N = mkN "pitilessness" ;
lin pitman_N = mkN masculine (mkN "pitman" "pitmen");
lin piton_N = mkN "piton" "pitons";
lin pitprop_N = mkN "pitprop" ;
lin pitsaw_N = mkN "pitsaw" "pitsaws";
lin pitta_N = mkN "pitta" ;
lin pittance_N = mkN "pittance" "pittances";
lin pitter_patter_N = mkN "pitter-patter" ;
lin pitting_N = mkN "pitting" ;
lin pittsburgh_PN = mkPN "Pittsburgh";
lin pituitary_A = compoundA (mkA "pituitary");
lin pituitary_N = mkN "pituitary" "pituitaries";
lin pity_N = mkN "pity" "pities";
lin pity_V2 = mkV2 (mkV "pity" "pities" "pitied" "pitied" "pitying");
lin pitying_A = compoundA (mkA "pitying");
lin pityriasis_N = mkN "pityriasis" ;
lin pivot_N = mkN "pivot" "pivots";
lin pivot_V = mkV "pivot" "pivots" "pivoted" "pivoted" "pivoting";
lin pivot_V2 = mkV2 (mkV "pivot" "pivots" "pivoted" "pivoted" "pivoting");
lin pivotal_A = compoundA (mkA "pivotal");
lin pixel_N = mkN "pixel" ;
lin pixie_N = mkN "pixie" "pixies";
lin pixilated_A = compoundA (mkA "pixilated");
lin pixy_N = mkN "pixy" "pixies";
lin pizza_N = mkN "pizza" "pizzas";
lin pizzeria_N = mkN "pizzeria" ;
lin pizzicato_A = compoundA (mkA "pizzicato");
lin pizzicato_Adv = mkAdv "pizzicato";
lin pizzicato_N = mkN "pizzicato" ;
lin placable_A = mkA "placable" ;
lin placard_N = mkN "placard" "placards";
lin placard_V2 = mkV2 (mkV "placard" "placards" "placarded" "placarded" "placarding");
lin placate_V2 = mkV2 (mkV "placate" "placates" "placated" "placated" "placating");
lin placatingly_Adv = mkAdv "placatingly";
lin placation_N = mkN "placation" ;
lin place_N = mkN "place" "places";
lin place_V2 = mkV2 (mkV "place" "places" "placed" "placed" "placing");
lin place_bet_N = mkN "place-bet" "place-bets";
lin place_name_N = mkN "place-name" "place-names";
lin placebo_N = mkN "placebo" "placebos";
lin placeholder_N = mkN "placeholder" ;
lin placeman_N = mkN masculine (mkN "placeman" "placemen");
lin placement_N = mkN "placement" "placements";
lin placenta_N = mkN "placenta" "placentas";
lin placental_A = mkA "placental" ;
lin placental_N = mkN "placental" ;
lin placentation_N = mkN "placentation" ;
lin placer_N = mkN "placer" ;
lin placeseeker_N = mkN "placeseeker" "placeseekers";
lin placid_A = compoundA (mkA "placid");
lin placidity_N = mkN "placidity" ;
lin placing_N = mkN "placing" "placings";
lin placket_N = mkN "placket" "plackets";
lin placoderm_N = mkN "placoderm" ;
lin placoid_A = mkA "placoid" ;
lin plage_N = mkN "plage" "IRREG";
lin plagiarism_N = mkN "plagiarism" "plagiarisms";
lin plagiarist_N = mkN "plagiarist" "plagiarists";
lin plagiaristic_A = mkA "plagiaristic" ;
lin plagiarize_V2 = mkV2 (mkV "plagiarize" "plagiarizes" "plagiarized" "plagiarized" "plagiarizing");
lin plagiocephaly_N = mkN "plagiocephaly" ;
lin plagioclase_N = mkN "plagioclase" ;
lin plagioclastic_A = mkA "plagioclastic" ;
lin plague_N = mkN "plague" "plagues";
lin plague_V2 = mkV2 (mkV "plague" "plagues" "plagued" "plagued" "plaguing");
lin plague_spot_N = mkN "plague-spot" "plague-spots";
lin plaguey_Adv = mkAdv "plaguey" ;
lin plaguy_A = compoundA (mkA "plaguy");
lin plaice_N = mkN "plaice" "plaice";
lin plaid_N = mkN "plaid" "plaids";
lin plain_A = mkA "plain" "plainer";
lin plain_Adv = mkAdv "plain";
lin plain_N = mkN "plain" "plains";
lin plain_V = mkV "plain" "plains" "plained" "plained" "plaining";
lin plain_V2 = mkV2 (mkV "plain" "plains" "plained" "plained" "plaining");
lin plain_spoken_A = compoundA (mkA "plain-spoken");
lin plainclothesman_N = mkN masculine (mkN "plainclothesman" "plainclothesmen");
lin plainness_N = mkN "plainness" ;
lin plainsman_N = mkN masculine (mkN "plainsman" "plainsmen");
lin plainsong_N = mkN "plainsong" ;
lin plainspoken_A = mkA "plainspoken" ;
lin plaint_N = mkN "plaint" "plaints";
lin plaintiff_N = mkN "plaintiff" "plaintiffs";
lin plaintive_A = compoundA (mkA "plaintive");
lin plaintiveness_N = mkN "plaintiveness" ;
lin plait_N = mkN "plait" "plaits";
lin plait_V2 = mkV2 (mkV "plait" "plaits" "plaited" "plaited" "plaiting");
lin plaiter_N = mkN "plaiter" ;
lin plan_N = mkN "plan" "plans";
lin plan_V = mkV "plan";
lin plan_V2 = mkV2 (mkV "plan");
lin plan_V2V = mkV2V (mkV "plan") noPrep to_Prep ;
lin plan_VS = mkVS (mkV "plan");
lin plan_VV = mkVV (mkV "plan");
lin planar_A = mkA "planar" ;
lin planarian_N = mkN "planarian" ;
lin planate_A = mkA "planate" ;
lin planation_N = mkN "planation" ;
lin planchet_N = mkN "planchet" ;
lin planchette_N = mkN "planchette" "planchettes";
lin plane_N = mkN "plane" "planes";
lin plane_V = mkV "plane" "planes" "planed" "planed" "planing";
lin plane_V2 = mkV2 (mkV "plane" "planes" "planed" "planed" "planing");
lin plane_tree_N = mkN "plane-tree" "plane-trees";
lin planet_N = mkN "planet" "planets";
lin planetal_A = mkA "planetal" ;
lin planetarium_N = mkN "planetarium" "planetariums";
lin planetary_A = compoundA (mkA "planetary");
lin planetesimal_N = mkN "planetesimal" ;
lin plangency_N = mkN "plangency" ;
lin plangent_A = compoundA (mkA "plangent");
lin plank_N = mkN "plank" "planks";
lin plank_V2 = mkV2 (mkV "plank" "planks" "planked" "planked" "planking");
lin plank_bed_N = mkN "plank-bed" "plank-beds";
lin planking_N = mkN "planking" ;
lin plankton_N = mkN "plankton" ;
lin planktonic_A = mkA "planktonic" ;
lin planless_A = compoundA (mkA "planless");
lin planner_N = mkN human (mkN "planner" "planners");
lin planning_N = mkN "planning" ;
lin planoconcave_A = mkA "planoconcave" ;
lin planoconvex_A = mkA "planoconvex" ;
lin planographic_A = mkA "planographic" ;
lin plant_N = mkN "plant" "plants";
lin plant_V2 = mkV2 (mkV "plant" "plants" "planted" "planted" "planting");
lin plant_louse_N = mkN "plant-louse" "plant-lice";
lin plantain_N = mkN "plantain" "plantains";
lin plantal_A = mkA "plantal" ;
lin plantar_A = mkA "plantar" ;
lin plantation_N = mkN "plantation" "plantations";
lin planter_N = mkN "planter" "planters";
lin plantigrade_A = mkA "plantigrade" ;
lin planting_N = mkN "planting" ;
lin plantlet_N = mkN "plantlet" ;
lin planula_N = mkN "planula" ;
lin plaque_N = mkN "plaque" "plaques";
lin plash_N = mkN "plash" "IRREG";
lin plash_V = mkV "plash" "plashes" "plashed" "plashed" "plashing";
lin plash_V2 = mkV2 (mkV "plash" "plashes" "plashed" "plashed" "plashing");
lin plasm_N = mkN "plasm" ;
lin plasma_N = mkN "plasma" ;
lin plasmablast_N = mkN "plasmablast" ;
lin plasmacytoma_N = mkN "plasmacytoma" ;
lin plasmapheresis_N = mkN "plasmapheresis" ;
lin plasmid_N = mkN "plasmid" ;
lin plasmin_N = mkN "plasmin" ;
lin plasminogen_N = mkN "plasminogen" ;
lin plasmodium_N = mkN "plasmodium" ;
lin plaster_N = mkN "plaster" "plasters";
lin plaster_V2 = mkV2 (mkV "plaster" "plasters" "plastered" "plastered" "plastering");
lin plasterboard_N = mkN "plasterboard" ;
lin plasterer_N = mkN "plasterer" "plasterers";
lin plastering_N = mkN "plastering" ;
lin plastic_A = compoundA (mkA "plastic");
lin plastic_N = mkN "plastic" "plastics";
lin plastic_bomb_N = mkN "plastic-bomb" "plastic-bombs";
lin plastically_Adv = mkAdv "plastically" ;
lin plasticine_N = mkN "plasticine" ;
lin plasticity_N = mkN "plasticity" ;
lin plasticizer_N = mkN "plasticizer" ;
lin plastics_N = mkN "plastics" "plastics";
lin plastid_N = mkN "plastid" ;
lin plastination_N = mkN "plastination" ;
lin plastron_N = mkN "plastron" ;
lin plat_N = mkN "plat" ;
lin plate_N = mkN "plate" "plates";
lin plate_V2 = mkV2 (mkV "plate" "plates" "plated" "plated" "plating");
lin plate_glass_N = mkN "plate-glass" ;
lin plate_powder_N = mkN "plate-powder" ;
lin plate_rack_N = mkN "plate-rack" "plate-racks";
lin plateau_N = mkN "plateau" "plateaus";
lin plateful_N = mkN "plateful" "platefuls";
lin platelayer_N = mkN "platelayer" "platelayers";
lin platelet_N = mkN "platelet" ;
lin plateletpheresis_N = mkN "plateletpheresis" ;
lin platen_N = mkN "platen" ;
lin plater_N = mkN "plater" ;
lin platform_N = mkN "platform" "platforms";
lin plating_N = mkN "plating" ;
lin platinum_N = mkN "platinum" ;
lin platitude_N = mkN "platitude" "platitudes";
lin platitudinarian_N = mkN "platitudinarian" ;
lin platitudinous_A = compoundA (mkA "platitudinous");
lin platonic_A = compoundA (mkA "platonic");
lin platoon_N = mkN "platoon" "platoons";
lin platter_N = mkN "platter" "platters";
lin platy_N = mkN "platy" ;
lin platyctenean_N = mkN "platyctenean" ;
lin platypus_N = mkN "platypus" "platypuses";
lin platyrrhine_A = mkA "platyrrhine" ;
lin platysma_N = mkN "platysma" ;
lin plaudit_N = mkN "plaudit" "plaudits";
lin plausibility_N = mkN "plausibility" "plausibilities";
lin plausible_A = compoundA (mkA "plausible");
lin play_N = mkN "play" "plays";
lin play_V = mkV "play" "plays" "played" "played" "playing";
lin play_V2 = mkV2 (mkV "play" "plays" "played" "played" "playing");
lin play_VV = mkVV (mkV "play" "plays" "played" "played" "playing");
lin play_acting_N = mkN "play-acting" ;
lin play_actor_N = mkN "play-actor" "play-actors";
lin play_box_N = mkN "play-box" "play-boxes";
lin play_off_N = mkN "play-off" "play-offs";
lin play_reading_N = mkN "play-reading" "play-readings";
lin playable_A = mkA "playable" ;
lin playback_N = mkN "playback" "playbacks";
lin playbill_N = mkN "playbill" "playbills";
lin playbook_N = mkN "playbook" ;
lin playbox_N = mkN "playbox" ;
lin playboy_N = mkN "playboy" "playboys";
lin player_N = mkN "player" "players";
lin player_piano_N = mkN "player-piano" "player-pianos";
lin playfellow_N = mkN "playfellow" "playfellows";
lin playful_A = compoundA (mkA "playful");
lin playfulness_N = mkN "playfulness" ;
lin playgoer_N = mkN "playgoer" "playgoers";
lin playground_N = mkN "playground" "playgrounds";
lin playgroup_N = mkN "playgroup" "playgroups";
lin playhouse_N = mkN "playhouse" "playhouses";
lin playing_N = mkN "playing" "playings";
lin playing_card_N = mkN "playing-card" "playing-cards";
lin playing_field_N = mkN "playing-field" "playing-fields";
lin playlet_N = mkN "playlet" "playlets";
lin playlist_N = mkN "playlist" ;
lin playmaker_N = mkN "playmaker" ;
lin playmate_N = mkN "playmate" "playmates";
lin playoff_N = mkN "playoff" ;
lin playpen_N = mkN "playpen" "playpens";
lin playroom_N = mkN "playroom" "playrooms";
lin playschool_N = mkN "playschool" "playschools";
lin playsuit_N = mkN "playsuit" "playsuits";
lin plaything_N = mkN "plaything" "playthings";
lin playtime_N = mkN "playtime" "playtimes";
lin playwright_N = mkN human (mkN "playwright" "playwrights");
lin plaza_N = mkN "plaza" "plazas";
lin plc_PN = mkPN "Plc";
lin plea_N = mkN "plea" "pleas";
lin pleach_V2 = mkV2 (mkV "pleach" "pleaches" "pleached" "pleached" "pleaching");
lin plead_V = mkV "plead" "pleads" "pleaded" "pleaded" "pleading";
lin plead_V2 = mkV2 (mkV "plead" "pleads" "pleaded" "pleaded" "pleading");
lin plead_VA = mkVA (mkV "plead" "pleads" "pleaded" "pleaded" "pleading");
lin plead_VS = mkVS (mkV "plead" "pleads" "pleaded" "pleaded" "pleading");
lin pleading_N = mkN "pleading" ;
lin pleadingly_Adv = mkAdv "pleadingly";
lin pleasance_N = mkN "pleasance" "pleasances";
lin pleasant_A = mkA "pleasant" "pleasanter";
lin pleasantness_N = mkN "pleasantness" ;
lin pleasantry_N = mkN "pleasantry" "pleasantries";
lin please_Adv = mkAdv "please" ;
lin please_V = mkV "please" "pleases" "pleased" "pleased" "pleasing";
lin please_V2 = mkV2 (mkV "please" "pleases" "pleased" "pleased" "pleasing");
lin please_VV = {s = (mkVV (mkV "please" "pleases" "pleased" "pleased" "pleasing")).s; p=[]; typ = VVAux};
lin please_V2V = mkV2V (mkV "please" "pleases" "pleased" "pleased" "pleasing") noPrep to_Prep;
lin pleaser_N = mkN "pleaser" ;
lin pleasing_N = mkN "pleasing" ;
lin pleasingly_Adv = mkAdv "pleasingly" ;
lin pleasingness_N = mkN "pleasingness" ;
lin pleasurable_A = compoundA (mkA "pleasurable");
lin pleasure_N = mkN "pleasure" "pleasures";
lin pleasure_boat_N = mkN "pleasure-boat" "pleasure-boats";
lin pleasure_craft_N = mkN "pleasure-craft" "pleasure-crafts";
lin pleasure_ground_N = mkN "pleasure-ground" "pleasure-grounds";
lin pleat_N = mkN "pleat" "pleats";
lin pleat_V2 = mkV2 (mkV "pleat" "pleats" "pleated" "pleated" "pleating");
lin pleb_N = mkN "pleb" "plebs";
lin plebeian_A = compoundA (mkA "plebeian");
lin plebeian_N = mkN "plebeian" "plebeians";
lin plebiscite_N = mkN "plebiscite" "plebiscites";
lin plectognath_N = mkN "plectognath" ;
lin plectranthus_N = mkN "plectranthus" ;
lin plectrum_N = mkN "plectrum" "plectrums";
lin pledge_N = mkN "pledge" "pledges";
lin pledge_V2 = mkV2 (mkV "pledge" "pledges" "pledged" "pledged" "pledging");
lin pledge_V2V = mkV2V (mkV "pledge") noPrep to_Prep ;
lin pledge_VS = mkVS (mkV "pledge");
lin pledgee_N = mkN "pledgee" ;
lin pledger_N = mkN "pledger" ;
lin plenary_A = compoundA (mkA "plenary");
lin plenipotentiary_N = mkN "plenipotentiary" "plenipotentiaries";
lin plenitude_N = mkN "plenitude" "IRREG";
lin plenteous_A = compoundA (mkA "plenteous");
lin plentiful_A = compoundA (mkA "plentiful");
lin plenty_Adv = mkAdv "plenty";
lin plenty_N = mkN "plenty" ;
lin plenum_N = mkN "plenum" ;
lin pleochroic_A = mkA "pleochroic" ;
lin pleochroism_N = mkN "pleochroism" ;
lin pleomorphic_A = mkA "pleomorphic" ;
lin pleomorphism_N = mkN "pleomorphism" ;
lin pleonasm_N = mkN "pleonasm" "pleonasms";
lin pleonastic_A = mkA "pleonastic" ;
lin plesiosaur_N = mkN "plesiosaur" ;
lin plethora_N = mkN "plethora" "plethoras";
lin plethysmograph_N = mkN "plethysmograph" ;
lin pleura_N = mkN "pleura" ;
lin pleural_A = mkA "pleural" ;
lin pleurisy_N = mkN "pleurisy" ;
lin pleurocarp_N = mkN "pleurocarp" ;
lin pleurocarpous_A = mkA "pleurocarpous" ;
lin pleurodont_N = mkN "pleurodont" ;
lin pleurodynia_N = mkN "pleurodynia" ;
lin pleuropneumonia_N = mkN "pleuropneumonia" ;
lin pleurothallis_N = mkN "pleurothallis" ;
lin pleximeter_N = mkN "pleximeter" ;
lin plexor_N = mkN "plexor" ;
lin plexus_N = mkN "plexus" "plexus";
lin pliability_N = mkN "pliability" ;
lin pliable_A = compoundA (mkA "pliable");
lin pliancy_N = mkN "pliancy" ;
lin pliant_A = compoundA (mkA "pliant");
lin plication_N = mkN "plication" ;
lin plier_N = mkN "plier" ;
lin pliers_N = mkN "pliers" ;
lin plight_N = mkN "plight" "plights";
lin plight_V2 = mkV2 (mkV "plight" "plights" "plighted" "plighted" "plighting");
lin plimsoll_N = mkN "plimsoll" "plimsolls";
lin plinth_N = mkN "plinth" "plinths";
lin ploce_N = mkN "ploce" ;
lin plod_V = mkV "plod" "plods" "plodded" "plodded" "plodding";
lin plod_V2 = mkV2 (mkV "plod" "plods" "plodded" "plodded" "plodding");
lin plodder_N = mkN "plodder" "plodders";
lin plodding_N = mkN "plodding" ;
lin ploddingly_Adv = mkAdv "ploddingly" ;
lin plonk_Adv = mkAdv "plonk";
lin plonk_N = mkN "plonk" "plonks";
lin plonk_V = mkV "plonk" "plonks" "plonked" "plonked" "plonking";
lin plop_Adv = mkAdv "plop";
lin plop_N = mkN "plop" "plops";
lin plop_V = mkV "plop" "plops" "plopped" "plopped" "plopping";
lin plosion_N = mkN "plosion" ;
lin plosive_A = compoundA (mkA "plosive");
lin plosive_N = mkN "plosive" "plosives";
lin plot_N = mkN "plot" "plots";
lin plot_V = mkV "plot" "plots" "plotted" "plotted" "plotting";
lin plot_V2 = mkV2 (mkV "plot" "plots" "plotted" "plotted" "plotting");
lin plotter_N = mkN "plotter" "plotters";
lin plough_N = mkN "plough" "ploughs";
lin plough_V = mkV "plough" "ploughs" "ploughed" "ploughed" "ploughing";
lin plough_V2 = mkV2 (mkV "plough" "ploughs" "ploughed" "ploughed" "ploughing");
lin ploughboy_N = mkN "ploughboy" "ploughboys";
lin ploughman_N = mkN masculine (mkN "ploughman" "ploughmen");
lin ploughshare_N = mkN "ploughshare" "ploughshares";
lin plover_N = mkN "plover" "plovers";
lin plow_N = mkN "plow" ;
lin plow_V = mkV "plow";
lin plow_V2 = mkV2 (mkV "plow");
lin plowboy_N = mkN "plowboy" ;
lin plowing_N = mkN "plowing" ;
lin plowman_N = mkN masculine (mkN "plowman" "plowmen");
lin plowshare_N = mkN "plowshare" ;
lin plowwright_N = mkN "plowwright" ;
lin ploy_N = mkN "ploy" "ploys";
lin pluck_N = mkN "pluck" "plucks";
lin pluck_V = mkV "pluck" "plucks" "plucked" "plucked" "plucking";
lin pluck_V2 = mkV2 (mkV "pluck" "plucks" "plucked" "plucked" "plucking");
lin plucky_A = mkA "plucky" "pluckier";
lin plug_N = mkN "plug" "plugs";
lin plug_V = mkV "plug" "plugs" "plugged" "plugged" "plugging";
lin plug_V2 = mkV2 (mkV "plug" "plugs" "plugged" "plugged" "plugging");
lin plughole_N = mkN "plughole" "plugholes";
lin plum_N = mkN "plum" "plums";
lin plum_pudding_N = mkN "plum-pudding" "plum-puddings";
lin plumage_N = mkN "plumage" ;
lin plumaged_A = mkA "plumaged" ;
lin plumate_A = mkA "plumate" ;
lin plumb_A = mkA "plumb" ;
lin plumb_Adv = mkAdv "plumb";
lin plumb_N = mkN "plumb" "plumbs";
lin plumb_V2 = mkV2 (mkV "plumb" "plumbs" "plumbed" "plumbed" "plumbing");
lin plumbaginaceous_A = mkA "plumbaginaceous" ;
lin plumbago_N = mkN "plumbago" "plumbagos";
lin plumber_N = mkN "plumber" "plumbers";
lin plumbic_A = mkA "plumbic" ;
lin plumbing_N = mkN "plumbing" ;
lin plumcot_N = mkN "plumcot" ;
lin plume_N = mkN "plume" "plumes";
lin plume_V2 = mkV2 (mkV "plume" "plumes" "plumed" "plumed" "pluming");
lin plumelike_A = mkA "plumelike" ;
lin plumlike_A = mkA "plumlike" ;
lin plummet_N = mkN "plummet" "plummets";
lin plummet_V = mkV "plummet" "plummets" "plummeted" "plummeted" "plummeting";
lin plummet_V2 = mkV2 (mkV "plummet" "plummets" "plummeted" "plummeted" "plummeting");
lin plummy_A = mkA "plummy" "plummier";
lin plump_A = mkA "plump" "plumper";
lin plump_Adv = mkAdv "plump";
lin plump_N = mkN "plump" "plumps";
lin plump_V = mkV "plump" "plumps" "plumped" "plumped" "plumping";
lin plump_V2 = mkV2 (mkV "plump" "plumps" "plumped" "plumped" "plumping");
lin plumpness_N = mkN "plumpness" ;
lin plumule_N = mkN "plumule" ;
lin plunder_N = mkN "plunder" ;
lin plunder_V = mkV "plunder" "plunders" "plundered" "plundered" "plundering";
lin plunder_V2 = mkV2 (mkV "plunder" "plunders" "plundered" "plundered" "plundering");
lin plunderage_N = mkN "plunderage" ;
lin plunderer_N = mkN "plunderer" "plunderers";
lin plundering_N = mkN "plundering" ;
lin plunge_N = mkN "plunge" "plunges";
lin plunge_V = mkV "plunge" "plunges" "plunged" "plunged" "plunging";
lin plunge_V2 = mkV2 (mkV "plunge" "plunges" "plunged" "plunged" "plunging");
lin plunger_N = mkN "plunger" "plungers";
lin plunk_N = mkN "plunk" "plunks";
lin pluperfect_A = compoundA (mkA "pluperfect");
lin pluperfect_N = mkN "pluperfect" "pluperfects";
lin plural_A = compoundA (mkA "plural");
lin plural_N = mkN "plural" "plurals";
lin pluralism_N = mkN "pluralism" ;
lin pluralist_N = mkN "pluralist" "pluralists";
lin pluralistic_A = mkA "pluralistic" ;
lin plurality_N = mkN "plurality" "pluralities";
lin pluralization_N = mkN "pluralization" ;
lin plus_A = compoundA (mkA "plus");
lin plus_Conj = mkConj "plus";
lin plus_N = mkN "plus" "pluses";
lin plush_A = mkA "plush" "plusher";
lin plush_N = mkN "plush" ;
lin plushy_A = mkA "plushy" "plushier";
lin pluto_PN = mkPN "Pluto";
lin plutocracy_N = mkN "plutocracy" "plutocracies";
lin plutocrat_N = mkN "plutocrat" "plutocrats";
lin plutocratic_A = compoundA (mkA "plutocratic");
lin plutonium_N = mkN "plutonium" ;
lin ply_N = mkN "ply" "ply";
lin ply_V = mkV "ply" "plies" "plied" "plied" "plying";
lin ply_V2 = mkV2 (mkV "ply" "plies" "plied" "plied" "plying");
lin ply_V2A = mkV2A (mkV "ply" "plies" "plied" "plied" "plying") noPrep;
lin plymouth_PN = mkPN "Plymouth";
lin plywood_N = mkN "plywood" ;
lin pneumatic_A = compoundA (mkA "pneumatic");
lin pneumatically_Adv = mkAdv "pneumatically";
lin pneumatics_N = mkN "pneumatics" ;
lin pneumatophore_N = mkN "pneumatophore" ;
lin pneumococcal_A = mkA "pneumococcal" ;
lin pneumococcus_N = mkN "pneumococcus" ;
lin pneumoconiosis_N = mkN "pneumoconiosis" ;
lin pneumocytosis_N = mkN "pneumocytosis" ;
lin pneumogastric_A = mkA "pneumogastric" ;
lin pneumonectomy_N = mkN "pneumonectomy" ;
lin pneumonia_N = mkN "pneumonia" ;
lin pneumonic_A = mkA "pneumonic" ;
lin pneumonitis_N = mkN "pneumonitis" ;
lin pneumothorax_N = mkN "pneumothorax" ;
lin po_N = mkN "po" ;
lin poach_V = mkV "poach" "poaches" "poached" "poached" "poaching";
lin poach_V2 = mkV2 (mkV "poach" "poaches" "poached" "poached" "poaching");
lin poacher_N = mkN "poacher" "poachers";
lin poaching_N = mkN "poaching" ;
lin pochard_N = mkN "pochard" ;
lin pock_N = mkN "pock" "pocks";
lin pocked_A = compoundA (mkA "pocked");
lin pocket_N = mkN "pocket" "pockets";
lin pocket_V2 = mkV2 (mkV "pocket" "pockets" "pocketed" "pocketed" "pocketing");
lin pocket_book_N = mkN "pocket-book" "pocket-books";
lin pocket_handkerchief_N = mkN "pocket-handkerchief" "pocket-handkerchiefs";
lin pocket_knife_N = mkN "pocket-knife" "pocket-knives";
lin pocket_money_N = mkN "pocket-money" ;
lin pocketbook_N = mkN "pocketbook" ;
lin pocketcomb_N = mkN "pocketcomb" ;
lin pocketful_N = mkN "pocketful" "pocketfuls";
lin pocketknife_N = mkN "pocketknife" ;
lin pockmark_N = mkN "pockmark" ;
lin pockmarked_A = compoundA (mkA "pockmarked");
lin pod_N = mkN "pod" "pods";
lin pod_V = mkV "pod" "pods" "podded" "podded" "podding";
lin pod_V2 = mkV2 (mkV "pod" "pods" "podded" "podded" "podding");
lin podalgia_N = mkN "podalgia" ;
lin podetium_N = mkN "podetium" ;
lin podgy_A = mkA "podgy" "podgier";
lin podiatry_N = mkN "podiatry" ;
lin podium_N = mkN "podium" "podiums";
lin podlike_A = mkA "podlike" ;
lin podocarp_N = mkN "podocarp" ;
lin podzol_N = mkN "podzol" ;
lin poem_N = mkN "poem" "poems";
lin poesy_N = mkN "poesy" ;
lin poet_N = mkN "poet" "poets";
lin poetess_N = mkN "poetess" "poetesses";
lin poetic_A = compoundA (mkA "poetic");
lin poetical_A = compoundA (mkA "poetical");
lin poetics_N = mkN "poetics" ;
lin poetry_N = mkN "poetry" ;
lin pogge_N = mkN "pogge" ;
lin pogonia_N = mkN "pogonia" ;
lin pogonion_N = mkN "pogonion" ;
lin pogrom_N = mkN "pogrom" "pogroms";
lin poi_N = mkN "poi" ;
lin poignance_N = mkN "poignance" ;
lin poignancy_N = mkN "poignancy" ;
lin poignant_A = compoundA (mkA "poignant");
lin poikilotherm_N = mkN "poikilotherm" ;
lin poikilothermic_A = mkA "poikilothermic" ;
lin poilu_N = mkN "poilu" ;
lin poinsettia_N = mkN "poinsettia" "poinsettias";
lin point_N = mkN "point" "points";
lin point_V = mkV "point" "points" "pointed" "pointed" "pointing";
lin point_V2 = mkV2 (mkV "point" "points" "pointed" "pointed" "pointing");
lin point_blank_A = compoundA (mkA "point-blank");
lin point_blank_Adv = mkAdv "point-blank";
lin point_duty_N = mkN "point-duty" ;
lin pointedly_AdV = mkAdV "pointedly";
lin pointedly_Adv = mkAdv "pointedly" ;
lin pointedness_N = mkN "pointedness" ;
lin pointer_N = mkN "pointer" "pointers";
lin pointillism_N = mkN "pointillism" ;
lin pointillist_A = mkA "pointillist" ;
lin pointillist_N = mkN "pointillist" ;
lin pointless_A = compoundA (mkA "pointless");
lin pointsman_N = mkN masculine (mkN "pointsman" "pointsmen");
lin poise_N = mkN "poise" ;
lin poise_V = mkV "poise" "poises" "poised" "poised" "poising";
lin poise_V2 = mkV2 (mkV "poise" "poises" "poised" "poised" "poising");
lin poison_N = mkN "poison" "poisons";
lin poison_V2 = mkV2 (mkV "poison" "poisons" "poisoned" "poisoned" "poisoning");
lin poison_gas_N = mkN "poison-gas" "poison-gases";
lin poison_ivy_N = mkN "poison-ivy" "poison-ivies";
lin poisoner_N = mkN "poisoner" "poisoners";
lin poisoning_N = mkN "poisoning" ;
lin poisonous_A = compoundA (mkA "poisonous");
lin poke_N = mkN "poke" "pokes";
lin poke_V = mkV "poke" "pokes" "poked" "poked" "poking";
lin poke_V2 = mkV2 (mkV "poke" "pokes" "poked" "poked" "poking");
lin poke_bonnet_N = mkN "poke-bonnet" "poke-bonnets";
lin poker_N = mkN "poker" "pokers";
lin poker_face_N = mkN "poker-face" "poker-faces";
lin pokeweed_N = mkN "pokeweed" ;
lin poky_A = mkA "poky" "pokier";
lin polack_N = mkN "polack" ;
lin poland_PN = mkPN "Poland";
lin polar_A = compoundA (mkA "polar");
lin polarimeter_N = mkN "polarimeter" ;
lin polaris_N = mkN "polaris" "polares" {- FIXME: guessed plural form -};
lin polarity_N = mkN "polarity" "polarities";
lin polarization_N = mkN "polarization" "polarizations";
lin polarize_V2 = mkV2 (mkV "polarize" "polarizes" "polarized" "polarized" "polarizing");
lin polarographic_A = mkA "polarographic" ;
lin polarography_N = mkN "polarography" ;
lin polaroid_N = mkN "polaroid" ;
lin polder_N = mkN "polder" ;
lin pole_N = mkN "Pole" "Poles";
lin pole_jumping_N = mkN "pole-jumping" ;
lin pole_star_N = mkN "pole-star" "pole-stars";
lin pole_vault_N = mkN "pole-vault" "pole-vaults";
lin poleax_N = mkN "poleax" "poleaxes";
lin poleax_V2 = mkV2 (mkV "poleax" "poleaxes" "poleaxed" "poleaxed" "poleaxing");
lin poleaxe_N = mkN "poleaxe" "poleaxes";
lin poleaxe_V2 = mkV2 (mkV "poleaxe" "poleaxes" "poleaxed" "poleaxed" "poleaxing");
lin polecat_N = mkN "polecat" "polecats";
lin polemic_A = compoundA (mkA "polemic");
lin polemic_N = mkN "polemic" "polemics";
lin polemically_Adv = mkAdv "polemically";
lin polemicist_N = mkN "polemicist" ;
lin polemics_N = mkN "polemics" ;
lin polemoniaceous_A = mkA "polemoniaceous" ;
lin polemonium_N = mkN "polemonium" ;
lin polenta_N = mkN "polenta" ;
lin police_N = mkN "police" "police";
lin police_V2 = mkV2 (mkV "police" "polices" "policed" "policed" "policing");
lin police_office_N = mkN "police-office" "police-offices";
lin police_officer_N = mkN "police-officer" "police-officers";
lin police_station_N = mkN "police-station" "police-stations";
lin policeman_N = mkN masculine (mkN "policeman" "policemen");
lin policewoman_N = mkN feminine (mkN "policewoman" "policewomen");
lin policy_N = mkN "policy" "policies";
lin policyholder_N = mkN "policyholder" ;
lin polio_N = mkN "polio" ;
lin poliomyelitis_N = mkN "poliomyelitis" ;
lin poliosis_N = mkN "poliosis" ;
lin poliovirus_N = mkN "poliovirus" ;
lin polish_A = compoundA (mkA "Polish");
lin polish_N = mkN "polish";
lin polishMasc_N = mkN masculine (mkN "Polish");
lin polishFem_N = mkN feminine (mkN "Polish");
lin polish_V = mkV "polish" "polishes" "polished" "polished" "polishing";
lin polish_V2 = mkV2 (mkV "polish" "polishes" "polished" "polished" "polishing");
lin polisher_N = mkN "polisher" "polishers";
lin politburo_N = mkN "politburo" "politburos";
lin polite_A = mkA "polite" "politer";
lin politeness_N = mkN "politeness" ;
lin politic_A = compoundA (mkA "politic");
lin political_A = compoundA (mkA "political");
lin politician_N = mkN human (mkN "politician" "politicians");
lin politicize_V = mkV "politicize" "politicizes" "politicized" "politicized" "politicizing";
lin politicize_V2 = mkV2 (mkV "politicize" "politicizes" "politicized" "politicized" "politicizing");
lin politick_V = mkV "politick" "politicks" "politicked" "politicked" "politicking";
lin politics_N = mkN "politics" "politics";
lin polity_N = mkN "polity" "polities";
lin polka_N = mkN "polka" "polkas";
lin poll_N = mkN "poll" "polls";
lin poll_V = mkV "poll" "polls" "polled" "polled" "polling";
lin poll_V2 = mkV2 (mkV "poll" "polls" "polled" "polled" "polling");
lin poll_tax_N = mkN "poll-tax" "poll-taxes";
lin pollack_N = mkN "pollack" ;
lin pollard_N = mkN "pollard" "pollards";
lin pollard_V2 = mkV2 (mkV "pollard" "pollards" "pollarded" "pollarded" "pollarding");
lin pollen_N = mkN "pollen" ;
lin pollinate_V2 = mkV2 (mkV "pollinate" "pollinates" "pollinated" "pollinated" "pollinating");
lin pollination_N = mkN "pollination" ;
lin pollinator_N = mkN "pollinator" ;
lin polling_booth_N = mkN "polling-booth" "polling-booths";
lin polling_day_N = mkN "polling-day" "polling-days";
lin polling_station_N = mkN "polling-station" "polling-stations";
lin pollinium_N = mkN "pollinium" ;
lin polls_N = mkN "polls" ;
lin pollster_N = mkN "pollster" "pollsters";
lin pollucite_N = mkN "pollucite" ;
lin pollutant_N = mkN "pollutant" "pollutants";
lin pollute_V2 = mkV2 (mkV "pollute" "pollutes" "polluted" "polluted" "polluting");
lin polluter_N = mkN "polluter" ;
lin pollution_N = mkN "pollution" ;
lin polly_PN = mkPN "Polly";
lin polo_N = mkN "polo" ;
lin polo_neck_A = compoundA (mkA "polo-neck");
lin polonaise_N = mkN "polonaise" "polonaises";
lin polonium_N = mkN "polonium" ;
lin polony_N = mkN "polony" ;
lin poltergeist_N = mkN "poltergeist" "poltergeists";
lin poltroon_A = mkA "poltroon" ;
lin poltroon_N = mkN "poltroon" "poltroons";
lin poltroonery_N = mkN "poltroonery" ;
lin poly_N = mkN "poly" "polys";
lin polyamide_N = mkN "polyamide" ;
lin polyandrist_N = mkN "polyandrist" ;
lin polyandrous_A = compoundA (mkA "polyandrous");
lin polyandry_N = mkN "polyandry" ;
lin polyanthus_N = mkN "polyanthus" "polyanthuses";
lin polyarteritis_N = mkN "polyarteritis" ;
lin polyatomic_A = mkA "polyatomic" ;
lin polybutylene_N = mkN "polybutylene" ;
lin polychaete_N = mkN "polychaete" ;
lin polychromatic_A = mkA "polychromatic" ;
lin polychrome_N = mkN "polychrome" ;
lin polycrystalline_A = mkA "polycrystalline" ;
lin polycythemia_N = mkN "polycythemia" ;
lin polydactyl_A = mkA "polydactyl" ;
lin polydactyly_N = mkN "polydactyly" ;
lin polydipsia_N = mkN "polydipsia" ;
lin polyelectrolyte_N = mkN "polyelectrolyte" ;
lin polyester_N = mkN "polyester" ;
lin polyestrous_A = mkA "polyestrous" ;
lin polyethylene_N = mkN "polyethylene" ;
lin polyfoam_N = mkN "polyfoam" ;
lin polygamist_N = mkN "polygamist" "polygamists";
lin polygamous_A = compoundA (mkA "polygamous");
lin polygamy_N = mkN "polygamy" ;
lin polygene_N = mkN "polygene" ;
lin polygenic_A = mkA "polygenic" ;
lin polyglot_A = compoundA (mkA "polyglot");
lin polyglotMasc_N = mkN masculine (mkN "polyglot" "polyglots");
lin polyglotFem_N = mkN feminine (mkN "polyglot" "polyglots");
lin polygon_N = mkN "polygon" "polygons";
lin polygonal_A = compoundA (mkA "polygonal");
lin polygraph_N = mkN "polygraph" ;
lin polygynist_N = mkN "polygynist" ;
lin polygynous_A = mkA "polygynous" ;
lin polygyny_N = mkN "polygyny" ;
lin polyhedral_A = mkA "polyhedral" ;
lin polyhedron_N = mkN "polyhedron" ;
lin polymastigote_N = mkN "polymastigote" ;
lin polymath_N = mkN "polymath" ;
lin polymer_N = mkN "polymer" ;
lin polymerase_N = mkN "polymerase" ;
lin polymeric_A = mkA "polymeric" ;
lin polymerization_N = mkN "polymerization" ;
lin polymorph_N = mkN "polymorph" ;
lin polymorphemic_A = mkA "polymorphemic" ;
lin polymorphic_A = compoundA (mkA "polymorphic");
lin polymorphism_N = mkN "polymorphism" ;
lin polymorphous_A = compoundA (mkA "polymorphous");
lin polymyositis_N = mkN "polymyositis" ;
lin polymyxin_N = mkN "polymyxin" ;
lin polyneuritis_N = mkN "polyneuritis" ;
lin polynomial_A = compoundA (mkA "polynomial");
lin polynomial_N = mkN "polynomial" "polynomials";
lin polynya_N = mkN "polynya" ;
lin polyoma_N = mkN "polyoma" ;
lin polyp_N = mkN "polyp" "polyps";
lin polypectomy_N = mkN "polypectomy" ;
lin polypeptide_N = mkN "polypeptide" ;
lin polypetalous_A = mkA "polypetalous" ;
lin polyphone_N = mkN "polyphone" ;
lin polyphonic_A = compoundA (mkA "polyphonic");
lin polyphonically_Adv = mkAdv "polyphonically" ;
lin polyphony_N = mkN "polyphony" ;
lin polyphosphate_N = mkN "polyphosphate" ;
lin polyploid_A = mkA "polyploid" ;
lin polyploid_N = mkN "polyploid" ;
lin polyploidy_N = mkN "polyploidy" ;
lin polypody_N = mkN "polypody" ;
lin polypore_N = mkN "polypore" ;
lin polypropenonitrile_N = mkN "polypropenonitrile" ;
lin polypropylene_N = mkN "polypropylene" ;
lin polyptoton_N = mkN "polyptoton" ;
lin polypus_N = mkN "polypus" "polypuses";
lin polysaccharide_N = mkN "polysaccharide" ;
lin polysemant_N = mkN "polysemant" ;
lin polysemous_A = mkA "polysemous" ;
lin polysemy_N = mkN "polysemy" ;
lin polysomy_N = mkN "polysomy" ;
lin polystyrene_N = mkN "polystyrene" ;
lin polysyllabic_A = compoundA (mkA "polysyllabic");
lin polysyllabically_Adv = mkAdv "polysyllabically" ;
lin polysyllable_N = mkN "polysyllable" "polysyllables";
lin polysyndeton_N = mkN "polysyndeton" ;
lin polytechnic_N = mkN "polytechnic" "polytechnics";
lin polytheism_N = mkN "polytheism" ;
lin polytheist_N = mkN "polytheist" ;
lin polytheistic_A = compoundA (mkA "polytheistic");
lin polythene_N = mkN "polythene" ;
lin polytonal_A = mkA "polytonal" ;
lin polytonality_N = mkN "polytonality" ;
lin polyunsaturated_A = mkA "polyunsaturated" ;
lin polyurethane_N = mkN "polyurethane" ;
lin polyuria_N = mkN "polyuria" ;
lin polyvalence_N = mkN "polyvalence" ;
lin polyvalent_A = mkA "polyvalent" ;
lin pom_N = mkN "pom" "poms";
lin pomade_N = mkN "pomade" ;
lin pomade_V2 = mkV2 (mkV "pomade" "pomades" "pomaded" "pomaded" "pomading");
lin pome_N = mkN "pome" ;
lin pomegranate_N = mkN "pomegranate" "pomegranates";
lin pomelo_N = mkN "pomelo" "pomelos";
lin pomfret_N = mkN "pomfret" ;
lin pommel_N = mkN "pommel" "pommels";
lin pommel_V2 = mkV2 (mkV "pommel" "pommels" "pommelled" "pommelled" "pommelling");
lin pommy_N = mkN "pommy" "pommies";
lin pomologist_N = mkN "pomologist" ;
lin pomology_N = mkN "pomology" ;
lin pomp_N = mkN "pomp" ;
lin pompadour_N = mkN "pompadour" ;
lin pompano_N = mkN "pompano" ;
lin pompon_N = mkN "pompon" "pompons";
lin pomposity_N = mkN "pomposity" "pomposities";
lin pompous_A = compoundA (mkA "pompous");
lin ponce_N = mkN "ponce" "ponces";
lin poncho_N = mkN "poncho" "ponchos";
lin pond_N = mkN "pond" "ponds";
lin ponder_V = mkV "ponder" "ponders" "pondered" "pondered" "pondering";
lin ponder_V2 = mkV2 (mkV "ponder" "ponders" "pondered" "pondered" "pondering");
lin ponderable_A = compoundA (mkA "ponderable");
lin ponderosa_N = mkN "ponderosa" ;
lin ponderous_A = compoundA (mkA "ponderous");
lin ponderousness_N = mkN "ponderousness" ;
lin pondweed_N = mkN "pondweed" ;
lin pone_N = mkN "pone" "pones";
lin pongee_N = mkN "pongee" ;
lin poniard_N = mkN "poniard" "poniards";
lin poniard_V2 = mkV2 (mkV "poniard" "poniards" "poniarded" "poniarded" "poniarding");
lin pons_N = mkN "pons" ;
lin pont_llan_fraith_PN = mkPN "Pont-llan-fraith";
lin pontardawe_PN = mkPN "Pontardawe";
lin pontardulais_PN = mkPN "Pontardulais";
lin pontefract_PN = mkPN "Pontefract";
lin pontifex_N = mkN "pontifex" ;
lin pontiff_N = mkN "pontiff" "pontiffs";
lin pontifical_A = compoundA (mkA "pontifical");
lin pontifical_N = mkN "pontifical" ;
lin pontificate_N = mkN "pontificate" "pontificates";
lin pontificate_V = mkV "pontificate" "pontificates" "pontificated" "pontificated" "pontificating";
lin pontoon_N = mkN "pontoon" "pontoons";
lin pontycymmer_PN = mkPN "Pontycymmer";
lin pontypool_PN = mkPN "Pontypool";
lin pony_N = mkN "pony" "ponies";
lin pony_trekking_N = mkN "pony-trekking" ;
lin ponytail_N = mkN "ponytail" "ponytails";
lin pooch_N = mkN "pooch" ;
lin pood_N = mkN "pood" ;
lin poodle_N = mkN "poodle" "poodles";
lin poof_N = mkN "poof" "poofs";
lin pooh_pooh_V2 = mkV2 (mkV "pooh-pooh" "pooh-poohs" "pooh-poohed" "pooh-poohed" "pooh-poohing");
lin pool_N = mkN "pool" "pools";
lin pool_V2 = mkV2 (mkV "pool" "pools" "pooled" "pooled" "pooling");
lin poole_PN = mkPN "Poole";
lin pooler_N = mkN "pooler" ;
lin poolroom_N = mkN "poolroom" "poolrooms";
lin poon_N = mkN "poon" ;
lin poona_PN = mkPN "Poona";
lin poop_N = mkN "poop" "poops";
lin poor_A = mkA "poor" "poorer";
lin poor_box_N = mkN "poor-box" "poor-boxes";
lin poor_rate_N = mkN "poor-rate" "poor-rates";
lin poor_spirited_A = compoundA (mkA "poor-spirited");
lin poorhouse_N = mkN "poorhouse" "poorhouses";
lin poorly_A = compoundA (mkA "poorly");
lin poorness_N = mkN "poorness" ;
lin poorwill_N = mkN "poorwill" ;
lin pop_A = compoundA (mkA "pop");
lin pop_Adv = mkAdv "pop";
lin pop_N = mkN "pop" "pops";
lin pop_V = mkV "pop" "pops" "popped" "popped" "popping";
lin pop_V2 = mkV2 (mkV "pop" "pops" "popped" "popped" "popping");
lin popcorn_N = mkN "popcorn" "popcorns";
lin pope_N = mkN "pope" "popes";
lin popery_N = mkN "popery" ;
lin popeyed_A = compoundA (mkA "popeyed");
lin popgun_N = mkN "popgun" "popguns";
lin popinjay_N = mkN "popinjay" "popinjays";
lin popish_A = compoundA (mkA "popish");
lin poplar_N = mkN "poplar" "poplars";
lin poplin_N = mkN "poplin" ;
lin popliteal_A = mkA "popliteal" ;
lin popover_N = mkN "popover" ;
lin poppa_N = mkN "poppa" "poppas";
lin popper_N = mkN "popper" ;
lin poppet_N = mkN "poppet" "poppets";
lin poppy_N = mkN "poppy" "poppies";
lin poppycock_N = mkN "poppycock" ;
lin populace_N = mkN "populace" "populaces";
lin popular_A = compoundA (mkA "popular");
lin popularism_N = mkN "popularism" ;
lin popularity_N = mkN "popularity" ;
lin popularization_N = mkN "popularization" "popularizations";
lin popularize_V2 = mkV2 (mkV "popularize" "popularizes" "popularized" "popularized" "popularizing");
lin popularizer_N = mkN "popularizer" ;
lin populate_V2 = mkV2 (mkV "populate" "populates" "populated" "populated" "populating");
lin population_N = mkN "population" "populations";
lin populism_N = mkN "populism" ;
lin populist_N = mkN "populist" "populists";
lin populous_A = compoundA (mkA "populous");
lin porbeagle_N = mkN "porbeagle" ;
lin porcelain_N = mkN "porcelain" ;
lin porch_N = mkN "porch" "porches";
lin porcine_A = compoundA (mkA "porcine");
lin porcupine_N = mkN "porcupine" "porcupines";
lin porcupinefish_N = mkN "porcupinefish" ;
lin pore_N = mkN "pore" "pores";
lin pore_V = mkV "pore" "pores" "pored" "pored" "poring";
lin porgy_N = mkN "porgy" ;
lin pork_N = mkN "pork" ;
lin pork_barrel_N = mkN "pork-barrel" "pork-barrels";
lin pork_butcher_N = mkN "pork-butcher" "pork-butchers";
lin porkchop_N = mkN "porkchop" ;
lin porker_N = mkN "porker" "porkers";
lin porkfish_N = mkN "porkfish" ;
lin porkholt_N = mkN "porkholt" ;
lin porkpie_N = mkN "porkpie" ;
lin porn_N = mkN "porn" ;
lin pornographer_N = mkN "pornographer" "pornographers";
lin pornographic_A = compoundA (mkA "pornographic");
lin pornographically_Adv = mkAdv "pornographically" ;
lin pornography_N = mkN "pornography" ;
lin porose_A = mkA "porose" ;
lin porosity_N = mkN "porosity" "porosities";
lin porous_A = compoundA (mkA "porous");
lin porousness_N = mkN "porousness" ;
lin porphyria_N = mkN "porphyria" ;
lin porphyrin_N = mkN "porphyrin" ;
lin porphyritic_A = mkA "porphyritic" ;
lin porphyry_N = mkN "porphyry" ;
lin porpoise_N = mkN "porpoise" "porpoises";
lin porridge_N = mkN "porridge" ;
lin porringer_N = mkN "porringer" "porringers";
lin port_A = mkA "port" ;
lin port_N = mkN "port" "ports";
lin port_V2 = mkV2 (mkV "port" "ports" "ported" "ported" "porting");
lin port_glasgow_PN = mkPN "Port Glasgow";
lin port_talbot_PN = mkPN "Port Talbot";
lin portability_N = mkN "portability" ;
lin portable_A = compoundA (mkA "portable");
lin portable_N = mkN "portable" ;
lin portage_N = mkN "portage" "portages";
lin portal_N = mkN "portal" "portals";
lin portcullis_N = mkN "portcullis" "portcullises";
lin porte_cochere_N = mkN "porte-cochère" "porte-cochères";
lin portend_V2 = mkV2 (mkV "portend" "portends" "portended" "portended" "portending");
lin portent_N = mkN "portent" "portents";
lin portentous_A = compoundA (mkA "portentous");
lin porter_N = mkN "porter" "porters";
lin porterage_N = mkN "porterage" ;
lin porterhouse_N = mkN "porterhouse" "porterhouses";
lin portfolio_N = mkN "portfolio" "portfolios";
lin porthcawl_PN = mkPN "Porthcawl";
lin porthmadog_PN = mkPN "Porthmadog";
lin porthole_N = mkN "porthole" "portholes";
lin portico_N = mkN "portico" "porticos";
lin portiere_N = mkN "portière" "portières";
lin portion_N = mkN "portion" "portions";
lin portion_V2 = mkV2 (mkV "portion" "portions" "portioned" "portioned" "portioning");
lin portishead_PN = mkPN "Portishead";
lin portland_PN = mkPN "Portland";
lin portly_A = compoundA (mkA "portly");
lin portmanteau_N = mkN "portmanteau" "portmanteaus";
lin porto_alegre_PN = mkPN "Porto alegre";
lin portrait_N = mkN "portrait" "portraits";
lin portraitist_N = mkN "portraitist" "portraitists";
lin portraiture_N = mkN "portraiture" ;
lin portray_V2 = mkV2 (mkV "portray" "portrays" "portrayed" "portrayed" "portraying");
lin portrayal_N = mkN "portrayal" "portrayals";
lin portsmouth_PN = mkPN "Portsmouth";
lin portugal_PN = mkPN "Portugal";
lin portuguese_A = compoundA (mkA "Portuguese");
lin portuguese_N = mkN "Portuguese" "Portuguese";
lin portulaca_N = mkN "portulaca" ;
lin portwatcher_N = mkN "portwatcher" ;
lin pose_N = mkN "pose" "poses";
lin pose_V = mkV "pose" "poses" "posed" "posed" "posing";
lin pose_V2 = mkV2 (mkV "pose" "poses" "posed" "posed" "posing");
lin poser_N = mkN "poser" "posers";
lin poseur_N = mkN "poseur" "poseurs";
lin poseuse_N = mkN "poseuse" "IRREG";
lin posh_A = mkA "posh" "posher";
lin posh_V2 = mkV2 (mkV "posh" "poshes" "poshed" "poshed" "poshing");
lin posit_V2 = mkV2 (mkV "posit" "posits" "posited" "posited" "positing");
lin position_N = mkN "position" "positions";
lin position_V2 = mkV2 (mkV "position" "positions" "positioned" "positioned" "positioning");
lin position_V2V = mkV2V (mkV "position") noPrep to_Prep ;
lin positionable_A = mkA "positionable" ;
lin positional_A = mkA "positional" ;
lin positive_A = compoundA (mkA "positive");
lin positive_N = mkN "positive" "positives";
lin positiveness_N = mkN "positiveness" ;
lin positivism_N = mkN "positivism" ;
lin positivist_A = mkA "positivist" ;
lin positivist_N = mkN "positivist" "positivists";
lin positivity_N = mkN "positivity" ;
lin positron_N = mkN "positron" ;
lin posology_N = mkN "posology" ;
lin posse_N = mkN "posse" "posses";
lin posseman_N = mkN "posseman" ;
lin possess_V2 = mkV2 (mkV "possess" "possesses" "possessed" "possessed" "possessing");
lin possession_N = mkN "possession" "possessions";
lin possessive_A = compoundA (mkA "possessive");
lin possessiveness_N = mkN "possessiveness" ;
lin possessor_N = mkN "possessor" "possessors";
lin posset_N = mkN "posset" "possets";
lin possibility_N = mkN "possibility" "possibilities";
lin possible_A = compoundA (mkA "possible");
lin possible_N = mkN "possible" "possibles";
lin possum_N = mkN "possum" "possums";
lin post_N = mkN "post" "posts";
lin post_Prep = mkPrep "post";
lin post_V = mkV "post" "posts" "posted" "posted" "posting";
lin post_V2 = mkV2 (mkV "post" "posts" "posted" "posted" "posting");
lin post_chaise_N = mkN "post-chaise" "post-chaises";
lin post_free_A = compoundA (mkA "post-free");
lin post_free_Adv = mkAdv "post-free";
lin post_haste_Adv = mkAdv "post-haste";
lin post_horse_N = mkN "post-horse" "post-horses";
lin post_meridiem_Adv = mkAdv "post meridiem";
lin post_mortem_A = compoundA (mkA "post-mortem");
lin post_mortem_N = mkN "post-mortem" "post-mortems";
lin post_paid_A = compoundA (mkA "post-paid");
lin post_paid_Adv = mkAdv "post-paid";
lin postage_N = mkN "postage" ;
lin postage_stamp_N = mkN "postage-stamp" "postage-stamps";
lin postal_A = compoundA (mkA "postal");
lin postbag_N = mkN "postbag" "postbags";
lin postbiblical_A = mkA "postbiblical" ;
lin postbox_N = mkN "postbox" "postboxes";
lin postcard_N = mkN "postcard" "postcards";
lin postcode_N = mkN "postcode" "postcodes";
lin postdate_V2 = mkV2 (mkV "postdate" "postdates" "postdated" "postdated" "postdating");
lin postdiluvian_A = mkA "postdiluvian" ;
lin postdiluvian_N = mkN "postdiluvian" ;
lin postdoc_N = mkN "postdoc" ;
lin postdoctoral_A = mkA "postdoctoral" ;
lin postdoctoral_N = mkN "postdoctoral" ;
lin poste_restante_N = mkN "poste restante" ;
lin poster_N = mkN "poster" "posters";
lin posterior_A = compoundA (mkA "posterior");
lin posterior_N = mkN "posterior" "posteriors";
lin posteriority_N = mkN "posteriority" ;
lin posterity_N = mkN "posterity" ;
lin postern_N = mkN "postern" "posterns";
lin postexilic_A = mkA "postexilic" ;
lin postganglionic_A = mkA "postganglionic" ;
lin postglacial_A = mkA "postglacial" ;
lin postgraduate_A = compoundA (mkA "postgraduate");
lin postgraduate_N = mkN "postgraduate" "postgraduates";
lin posthitis_N = mkN "posthitis" ;
lin posthole_N = mkN "posthole" ;
lin posthouse_N = mkN "posthouse" ;
lin posthumous_A = compoundA (mkA "posthumous");
lin postictal_A = mkA "postictal" ;
lin postilion_N = mkN "postilion" "postilions";
lin postillion_N = mkN "postillion" "postillions";
lin postindustrial_A = mkA "postindustrial" ;
lin posting_N = mkN "posting" ;
lin postlude_N = mkN "postlude" ;
lin postman_N = mkN masculine (mkN "postman" "postmen");
lin postmark_N = mkN "postmark" "postmarks";
lin postmark_V2 = mkV2 (mkV "postmark" "postmarks" "postmarked" "postmarked" "postmarking");
lin postmaster_N = mkN "postmaster" "postmasters";
lin postmenopausal_A = mkA "postmenopausal" ;
lin postmeridian_A = mkA "postmeridian" ;
lin postmillennial_A = mkA "postmillennial" ;
lin postmistress_N = mkN "postmistress" "postmistresses";
lin postmodernism_N = mkN "postmodernism" ;
lin postmodernist_A = mkA "postmodernist" ;
lin postmortem_A = mkA "postmortem" ;
lin postmortem_N = mkN "postmortem" ;
lin postnatal_A = mkA "postnatal" ;
lin postnuptial_A = mkA "postnuptial" ;
lin postoperative_A = mkA "postoperative" ;
lin postpaid_A = mkA "postpaid" ;
lin postpone_V2 = mkV2 (mkV "postpone" "postpones" "postponed" "postponed" "postponing");
lin postponement_N = mkN "postponement" "postponements";
lin postposition_N = mkN "postposition" ;
lin postpositive_A = mkA "postpositive" ;
lin postprandial_A = compoundA (mkA "postprandial");
lin postscript_N = mkN "postscript" "postscripts";
lin postulant_N = mkN "postulant" "postulants";
lin postulate_N = mkN "postulate" "postulates";
lin postulate_V2 = mkV2 (mkV "postulate" "postulates" "postulated" "postulated" "postulating");
lin postulation_N = mkN "postulation" ;
lin postulator_N = mkN "postulator" ;
lin postural_A = compoundA (mkA "postural");
lin posture_N = mkN "posture" "postures";
lin posture_V = mkV "posture" "postures" "postured" "postured" "posturing";
lin posture_V2 = mkV2 (mkV "posture" "postures" "postured" "postured" "posturing");
lin posturer_N = mkN "posturer" ;
lin posturing_N = mkN "posturing" "posturings";
lin postwar_A = mkA "postwar" ;
lin posy_N = mkN "posy" "posies";
lin pot_N = mkN "pot" "pots";
lin pot_V = mkV "pot" "pots" "potted" "potted" "potting";
lin pot_V2 = mkV2 (mkV "pot" "pots" "potted" "potted" "potting");
lin pot_shot_N = mkN "pot-shot" "pot-shots";
lin pot_trained_A = compoundA (mkA "pot-trained");
lin potable_A = compoundA (mkA "potable");
lin potage_N = mkN "potage" ;
lin potash_N = mkN "potash" ;
lin potassium_N = mkN "potassium" ;
lin potation_N = mkN "potation" "potations";
lin potato_N = mkN "potato" "potatoes";
lin potbellied_A = compoundA (mkA "potbellied");
lin potbelly_N = mkN "potbelly" "potbellies";
lin potboiler_N = mkN "potboiler" "potboilers";
lin potbound_A = compoundA (mkA "potbound");
lin potboy_N = mkN "potboy" "potboys";
lin poteen_N = mkN "poteen" ;
lin potency_N = mkN "potency" "potencies";
lin potent_A = compoundA (mkA "potent");
lin potentate_N = mkN "potentate" "potentates";
lin potential_A = compoundA (mkA "potential");
lin potential_N = mkN "potential" "potentials";
lin potentiality_N = mkN "potentiality" "potentialities";
lin potentiation_N = mkN "potentiation" ;
lin potentiometer_N = mkN "potentiometer" ;
lin pothead_N = mkN "pothead" "potheads";
lin pother_N = mkN "pother" "pothers";
lin potherb_N = mkN "potherb" "potherbs";
lin potholder_N = mkN "potholder" ;
lin pothole_N = mkN "pothole" "potholes";
lin potholer_N = mkN "potholer" "potholers";
lin pothook_N = mkN "pothook" "pothooks";
lin pothos_N = mkN "pothos" ;
lin pothouse_N = mkN "pothouse" "pothouses";
lin pothunter_N = mkN "pothunter" "pothunters";
lin potion_N = mkN "potion" "potions";
lin potlatch_N = mkN "potlatch" ;
lin potluck_N = mkN "potluck" ;
lin potman_N = mkN masculine (mkN "potman" "potmen");
lin potoroo_N = mkN "potoroo" ;
lin potpie_N = mkN "potpie" ;
lin potpourri_N = mkN "potpourri" "potpourris";
lin potsdam_PN = mkPN "Potsdam";
lin potsherd_N = mkN "potsherd" "potsherds";
lin potshot_N = mkN "potshot" ;
lin pottage_N = mkN "pottage" "pottages";
lin potter_N = mkN "potter" "potters";
lin potter_V = mkV "potter" "potters" "pottered" "pottered" "pottering";
lin potterer_N = mkN "potterer" "potterers";
lin potters_bar_PN = mkPN "Potters bar";
lin pottery_N = mkN "pottery" "potteries";
lin pottle_N = mkN "pottle" ;
lin potto_N = mkN "potto" ;
lin potty_A = mkA "potty" "pottier";
lin potty_N = mkN "potty" "potties";
lin pouch_N = mkN "pouch" "pouches";
lin pouch_V2 = mkV2 (mkV "pouch" "pouches" "pouched" "pouched" "pouching");
lin pouf_N = mkN "pouf" "poufs";
lin pouffe_N = mkN "pouffe" "pouffes";
lin poulette_N = mkN "poulette" ;
lin poulterer_N = mkN "poulterer" "poulterers";
lin poultice_N = mkN "poultice" "poultices";
lin poultice_V2 = mkV2 (mkV "poultice" "poultices" "poulticed" "poulticed" "poulticing");
lin poultry_N = mkN "poultry" ;
lin poultryman_N = mkN masculine (mkN "poultryman" "poultrymen");
lin pounce_N = mkN "pounce" "pounces";
lin pounce_V = mkV "pounce" "pounces" "pounced" "pounced" "pouncing";
lin pound_N = mkN "pound" "pounds";
lin pound_V = mkV "pound" "pounds" "pounded" "pounded" "pounding";
lin pound_V2 = mkV2 (mkV "pound" "pounds" "pounded" "pounded" "pounding");
lin poundage_N = mkN "poundage" ;
lin poundal_N = mkN "poundal" ;
lin pounder_N = mkN "pounder" "pounders";
lin pounding_N = mkN "pounding" ;
lin pour_V = mkV "pour" "pours" "poured" "poured" "pouring";
lin pour_V2 = mkV2 (mkV "pour" "pours" "poured" "poured" "pouring");
lin pout_N = mkN "pout" "pouts";
lin pout_V = mkV "pout" "pouts" "pouted" "pouted" "pouting";
lin pout_V2 = mkV2 (mkV "pout" "pouts" "pouted" "pouted" "pouting");
lin poutingly_Adv = mkAdv "poutingly";
lin poverty_N = mkN "poverty" ;
lin poverty_stricken_A = compoundA (mkA "poverty-stricken");
lin pow_N = mkN "pow" ;
lin powder_N = mkN "powder" "powders";
lin powder_V = mkV "powder" "powders" "powdered" "powdered" "powdering";
lin powder_V2 = mkV2 (mkV "powder" "powders" "powdered" "powdered" "powdering");
lin powder_flask_N = mkN "powder-flask" "powder-flasks";
lin powder_horn_N = mkN "powder-horn" "powder-horns";
lin powder_magazine_N = mkN "powder-magazine" "powder-magazines";
lin powder_puff_N = mkN "powder-puff" "powder-puffs";
lin powder_room_N = mkN "powder-room" "powder-rooms";
lin powderer_N = mkN "powderer" ;
lin powderpuff_N = mkN "powderpuff" ;
lin powdery_A = compoundA (mkA "powdery");
lin power_N = mkN "power" "powers";
lin power_V2 = mkV2 (mkV "power" "powers" "powered" "powered" "powering");
lin power_dive_N = mkN "power-dive" "power-dives";
lin power_dive_V2 = mkV2 (mkV "power-dive" "power-dives" "power-dived" "power-dived" "power-diving");
lin power_point_N = mkN "power-point" "power-points";
lin power_station_N = mkN "power-station" "power-stations";
lin powerboat_N = mkN "powerboat" "powerboats";
lin powerful_A = compoundA (mkA "powerful");
lin powerhouse_N = mkN "powerhouse" "powerhouses";
lin powerless_A = compoundA (mkA "powerless");
lin powerlessness_N = mkN "powerlessness" ;
lin powwow_N = mkN "powwow" "powwows";
lin powwow_V = mkV "powwow" "powwows" "powwowed" "powwowed" "powwowing";
lin powys_PN = mkPN "Powys";
lin pox_N = mkN "pox" "IRREG";
lin poxvirus_N = mkN "poxvirus" ;
lin poynton_PN = mkPN "Poynton";
lin poznan_PN = mkPN "Poznan";
lin pp_N = mkN "p" "pp" ;
lin pr_N = mkN "pr" ;
lin practicability_N = mkN "practicability" ;
lin practicable_A = compoundA (mkA "practicable");
lin practical_A = compoundA (mkA "practical");
lin practicality_N = mkN "practicality" "practicalities";
lin practice_N = mkN "practice" "practices";
lin practice_V = mkV "practice";
lin practice_V2 = mkV2 (mkV "practice");
lin practician_N = mkN "practician" "practicians";
lin practise_V = mkV "practise" "practises" "practised" "practised" "practising";
lin practise_V2 = mkV2 (mkV "practise" "practises" "practised" "practised" "practising");
lin practitioner_N = mkN "practitioner" "practitioners";
lin praenomen_N = mkN "praenomen" ;
lin praesidium_N = mkN "praesidium" "praesidiums";
lin praetor_N = mkN "praetor" "praetors";
lin praetorian_A = compoundA (mkA "praetorian");
lin praetorium_N = mkN "praetorium" ;
lin praetorship_N = mkN "praetorship" ;
lin pragmatic_A = compoundA (mkA "pragmatic");
lin pragmatically_Adv = mkAdv "pragmatically";
lin pragmatics_N = mkN "pragmatics" ;
lin pragmatism_N = mkN "pragmatism" ;
lin pragmatist_N = mkN "pragmatist" "pragmatists";
lin prague_PN = mkPN "Prague";
lin prairie_N = mkN "prairie" "prairies";
lin praise_N = mkN "praise" "praises";
lin praise_V2 = mkV2 (mkV "praise" "praises" "praised" "praised" "praising");
lin praiseworthiness_N = mkN "praiseworthiness" ;
lin praiseworthy_A = compoundA (mkA "praiseworthy");
lin praisworthiness_N = mkN "praisworthiness" ;
lin praline_N = mkN "praline" ;
lin pram_N = mkN "pram" "prams";
lin prance_N = mkN "prance" "prances";
lin prance_V = mkV "prance" "prances" "pranced" "pranced" "prancing";
lin prancer_N = mkN "prancer" ;
lin prandial_A = mkA "prandial" ;
lin prang_N = mkN "prang" ;
lin prank_N = mkN "prank" "pranks";
lin prankishness_N = mkN "prankishness" ;
lin prankster_N = mkN "prankster" ;
lin praseodymium_N = mkN "praseodymium" ;
lin prate_N = mkN "prate" ;
lin prate_V = mkV "prate" "prates" "prated" "prated" "prating";
lin pratfall_N = mkN "pratfall" ;
lin pratincole_N = mkN "pratincole" ;
lin prato_PN = mkPN "Prato";
lin prattle_N = mkN "prattle" ;
lin prattle_V = mkV "prattle" "prattles" "prattled" "prattled" "prattling";
lin prattler_N = mkN "prattler" "prattlers";
lin pravastatin_N = mkN "pravastatin" ;
lin prawn_N = mkN "prawn" "prawns";
lin prawn_V = mkV "prawn" "prawns" "prawned" "prawned" "prawning";
lin pray_V = mkV "pray" "prays" "prayed" "prayed" "praying";
lin pray_V2 = mkV2 (mkV "pray" "prays" "prayed" "prayed" "praying");
lin praya_N = mkN "praya" ;
lin prayer_N = mkN "prayer" "prayers";
lin prayer_book_N = mkN "prayer-book" "prayer-books";
lin prayer_mat_N = mkN "prayer-mat" "prayer-mats";
lin prayer_meeting_N = mkN "prayer-meeting" "prayer-meetings";
lin prayer_rug_N = mkN "prayer-rug" "prayer-rugs";
lin prayer_wheel_N = mkN "prayer-wheel" "prayer-wheels";
lin prayerful_A = mkA "prayerful" ;
lin prazosin_N = mkN "prazosin" ;
lin pre_approve_V2 = mkV2 (mkV "pre-approve") ;
lin pre_eminence_N = mkN "pre-eminence" ;
lin pre_eminent_A = compoundA (mkA "pre-eminent");
lin pre_empt_V2 = mkV2 (mkV "pre-empt" "pre-empts" "pre-empted" "pre-empted" "pre-empting");
lin pre_emption_N = mkN "pre-emption" ;
lin pre_emptive_A = compoundA (mkA "pre-emptive");
lin pre_exist_V = mkV "pre-exist" "pre-exists" "pre-existed" "pre-existed" "pre-existing";
lin pre_existence_N = mkN "pre-existence" "pre-existences";
lin pre_existent_A = compoundA (mkA "pre-existent");
lin pre_packaged_A = compoundA (mkA "pre-packaged");
lin pre_raphaelite_A = compoundA (mkA "pre-raphaelite");
lin pre_raphaelite_N = mkN "pre-raphaelite" "pre-raphaelites";
lin pre_register_V2 = mkV2 (mkV "pre-register");
lin pre_sign_V2 = mkV2 (mkV "pre-sign");
lin pre_test_V2 = mkV2 (mkV "pre-test");
lin preach_V = mkV "preach" "preaches" "preached" "preached" "preaching";
lin preach_V2 = mkV2 (mkV "preach" "preaches" "preached" "preached" "preaching");
lin preacher_N = mkN human (mkN "preacher" "preachers");
lin preachification_N = mkN "preachification" ;
lin preachify_V = mkV "preachify" "preachifies" "preachified" "preachified" "preachifying";
lin preachy_A = mkA "preachy" ;
lin preamble_N = mkN "preamble" "preambles";
lin preanal_A = mkA "preanal" ;
lin prearrange_V2 = mkV2 (mkV "prearrange" "prearranges" "prearranged" "prearranged" "prearranging");
lin prearrangement_N = mkN "prearrangement" "prearrangements";
lin prebend_N = mkN "prebend" "prebends";
lin prebendary_N = mkN "prebendary" "prebendaries";
lin precancerous_A = mkA "precancerous" ;
lin precarious_A = compoundA (mkA "precarious");
lin precariousness_N = mkN "precariousness" ;
lin precast_A = compoundA (mkA "precast");
lin precatory_A = mkA "precatory" ;
lin precaution_N = mkN "precaution" "precautions";
lin precautionary_A = compoundA (mkA "precautionary");
lin precede_V = mkV "precede" "precedes" "preceded" "preceded" "preceding";
lin precede_V2 = mkV2 (mkV "precede" "precedes" "preceded" "preceded" "preceding");
lin precedence_N = mkN "precedence" ;
lin precedent_A = mkA "precedent" ;
lin precedent_N = mkN "precedent" "precedents";
lin precedented_A = compoundA (mkA "precedented");
lin precedential_A = mkA "precedential" ;
lin preceding_A = compoundA (mkA "preceding");
lin precentor_N = mkN "precentor" "precentors";
lin precentorship_N = mkN "precentorship" ;
lin precept_N = mkN "precept" "precepts";
lin preceptor_N = mkN "preceptor" "preceptors";
lin preceptorship_N = mkN "preceptorship" ;
lin precession_N = mkN "precession" "precessions";
lin prechlorination_N = mkN "prechlorination" ;
lin precinct_N = mkN "precinct" "precincts";
lin preciosity_N = mkN "preciosity" "preciosities";
lin precious_A = compoundA (mkA "precious");
lin precious_Adv = mkAdv "precious";
lin preciousness_N = mkN "preciousness" ;
lin precipice_N = mkN "precipice" "precipices";
lin precipitant_N = mkN "precipitant" ;
lin precipitate_A = compoundA (mkA "precipitate");
lin precipitate_N = mkN "precipitate" "precipitates";
lin precipitate_V2 = mkV2 (mkV "precipitate" "precipitates" "precipitated" "precipitated" "precipitating");
lin precipitation_N = mkN "precipitation" ;
lin precipitator_N = mkN "precipitator" ;
lin precipitin_N = mkN "precipitin" ;
lin precipitous_A = compoundA (mkA "precipitous");
lin precis_N = mkN "précis" "précis";
lin precis_V2 = mkV2 (mkV "précis" "IRREG" "IRREG" "IRREG" "IRREG");
lin precise_A = compoundA (mkA "precise");
lin preciseness_N = mkN "preciseness" ;
lin precision_N = mkN "precision" ;
lin preclinical_A = mkA "preclinical" ;
lin preclude_V2 = mkV2 (mkV "preclude" "precludes" "precluded" "precluded" "precluding");
lin preclusion_N = mkN "preclusion" "preclusions";
lin preclusive_A = mkA "preclusive" ;
lin precocial_A = mkA "precocial" ;
lin precocious_A = compoundA (mkA "precocious");
lin precociousness_N = mkN "precociousness" ;
lin precocity_N = mkN "precocity" ;
lin precognition_N = mkN "precognition" ;
lin preconceive_V2 = mkV2 (mkV "preconceive" "preconceives" "preconceived" "preconceived" "preconceiving");
lin preconception_N = mkN "preconception" "preconceptions";
lin preconcerted_A = compoundA (mkA "preconcerted");
lin precondition_N = mkN "precondition" "preconditions";
lin preconditioned_A = compoundA (mkA "preconditioned");
lin precooked_A = mkA "precooked" ;
lin precooled_A = mkA "precooled" ;
lin precordial_A = mkA "precordial" ;
lin precordium_N = mkN "precordium" ;
lin precursor_N = mkN "precursor" "precursors";
lin precursory_A = compoundA (mkA "precursory");
lin predaceous_A = mkA "predaceous" ;
lin predacious_A = mkA "predacious" ;
lin predate_V2 = mkV2 (mkV "predate");
lin predation_N = mkN "predation" ;
lin predator_N = mkN "predator" "predators";
lin predatory_A = compoundA (mkA "predatory");
lin predecease_V2 = mkV2 (mkV "predecease" "predeceases" "predeceased" "predeceased" "predeceasing");
lin predecessor_N = mkN "predecessor" "predecessors";
lin predestinarian_A = mkA "predestinarian" ;
lin predestinarianism_N = mkN "predestinarianism" ;
lin predestinate_A = compoundA (mkA "predestinate");
lin predestinate_V2 = mkV2 (mkV "predestinate" "predestinates" "predestinated" "predestinated" "predestinating");
lin predestination_N = mkN "predestination" "predestinations";
lin predestine_V2 = mkV2 (mkV "predestine" "predestines" "predestined" "predestined" "predestining");
lin predetermination_N = mkN "predetermination" "predeterminations";
lin predetermine_V2 = mkV2 (mkV "predetermine" "predetermines" "predetermined" "predetermined" "predetermining");
lin predicament_N = mkN "predicament" "predicaments";
lin predicate_N = mkN "predicate" "predicates";
lin predicate_V2 = mkV2 (mkV "predicate" "predicates" "predicated" "predicated" "predicating");
lin predicative_A = compoundA (mkA "predicative");
lin predicator_N = mkN "predicator" ;
lin predict_V2 = mkV2 (mkV "predict" "predicts" "predicted" "predicted" "predicting");
lin predict_VS = mkVS (mkV "predict");
lin predictability_N = mkN "predictability" ;
lin predictable_A = compoundA (mkA "predictable");
lin prediction_N = mkN "prediction" "predictions";
lin predictive_A = mkA "predictive" ;
lin predictor_N = mkN "predictor" "predictors";
lin predigest_V2 = mkV2 (mkV "predigest" "predigests" "predigested" "predigested" "predigesting");
lin predilection_N = mkN "predilection" "predilections";
lin predispose_V2 = mkV2 (mkV "predispose" "predisposes" "predisposed" "predisposed" "predisposing");
lin predisposition_N = mkN "predisposition" "predispositions";
lin prednisolone_N = mkN "prednisolone" ;
lin prednisone_N = mkN "prednisone" ;
lin predominance_N = mkN "predominance" ;
lin predominant_A = compoundA (mkA "predominant");
lin predominate_V = mkV "predominate" "predominates" "predominated" "predominated" "predominating";
lin predomination_N = mkN "predomination" ;
lin preeclampsia_N = mkN "preeclampsia" ;
lin preemption_N = mkN "preemption" ;
lin preemptive_A = mkA "preemptive" ;
lin preemptor_N = mkN "preemptor" ;
lin preen_V2 = mkV2 (mkV "preen" "preens" "preened" "preened" "preening");
lin preexistence_N = mkN "preexistence" ;
lin preexistent_A = mkA "preexistent" ;
lin prefab_A = mkA "prefab" ;
lin prefab_N = mkN "prefab" "prefabs";
lin prefabricate_V2 = mkV2 (mkV "prefabricate" "prefabricates" "prefabricated" "prefabricated" "prefabricating");
lin prefabrication_N = mkN "prefabrication" "prefabrications";
lin preface_N = mkN "preface" "prefaces";
lin preface_V2 = mkV2 (mkV "preface" "prefaces" "prefaced" "prefaced" "prefacing");
lin prefaded_A = mkA "prefaded" ;
lin prefatory_A = compoundA (mkA "prefatory");
lin prefect_N = mkN "prefect" "prefects";
lin prefectural_A = compoundA (mkA "prefectural");
lin prefecture_N = mkN "prefecture" "prefectures";
lin prefer_V2 = mkV2 (mkV "prefer" "prefers" "preferred" "preferred" "preferring");
lin prefer_V2V = mkV2V (mkV "prefer" "prefers" "preferred" "preferred" "preferring") noPrep to_Prep ;
lin prefer_VS = mkVS (mkV "prefer" "prefers" "preferred" "preferred" "preferring");
lin prefer_VV = mkVV (mkV "prefer" "prefers" "preferred" "preferred" "preferring");
lin preferable_A = compoundA (mkA "preferable");
lin preference_N = mkN "preference" "preferences";
lin preferential_A = compoundA (mkA "preferential");
lin preferment_N = mkN "preferment" ;
lin prefiguration_N = mkN "prefiguration" ;
lin prefigure_V2 = mkV2 (mkV "prefigure" "prefigures" "prefigured" "prefigured" "prefiguring");
lin prefix_N = mkN "prefix" "prefixes";
lin prefix_V2 = mkV2 (mkV "prefix" "prefixes" "prefixed" "prefixed" "prefixing");
lin prefixation_N = mkN "prefixation" ;
lin preformation_N = mkN "preformation" ;
lin prefrontal_A = mkA "prefrontal" ;
lin pregnancy_N = mkN "pregnancy" "pregnancies";
lin pregnanediol_N = mkN "pregnanediol" ;
lin pregnant_A = compoundA (mkA "pregnant");
lin preheat_V2 = mkV2 (mkV "preheat" "preheats" "preheated" "preheated" "preheating");
lin prehensile_A = compoundA (mkA "prehensile");
lin prehensor_N = mkN "prehensor" ;
lin prehistoric_A = compoundA (mkA "prehistoric");
lin prehistorical_A = compoundA (mkA "prehistorical");
lin prehistory_N = mkN "prehistory" "prehistories";
lin prejudge_V2 = mkV2 (mkV "prejudge" "prejudges" "prejudged" "prejudged" "prejudging");
lin prejudgement_N = mkN "prejudgement" "prejudgements";
lin prejudgment_N = mkN "prejudgment" ;
lin prejudice_N = mkN "prejudice" "prejudices";
lin prejudice_V2 = mkV2 (mkV "prejudice" "prejudices" "prejudiced" "prejudiced" "prejudicing");
lin prejudicial_A = compoundA (mkA "prejudicial");
lin prelacy_N = mkN "prelacy" "prelacies";
lin prelapsarian_A = mkA "prelapsarian" ;
lin prelate_N = mkN "prelate" "prelates";
lin prelim_N = mkN "prelim" "prelims";
lin preliminary_A = compoundA (mkA "preliminary");
lin preliminary_N = mkN "preliminary" "preliminaries";
lin preliterate_A = mkA "preliterate" ;
lin prelude_N = mkN "prelude" "preludes";
lin prelude_V2 = mkV2 (mkV "prelude" "preludes" "preluded" "preluded" "preluding");
lin premarital_A = compoundA (mkA "premarital");
lin premature_A = compoundA (mkA "premature");
lin prematureness_N = mkN "prematureness" ;
lin premedical_A = mkA "premedical" ;
lin premeditate_V2 = mkV2 (mkV "premeditate" "premeditates" "premeditated" "premeditated" "premeditating");
lin premeditation_N = mkN "premeditation" ;
lin premenopausal_A = mkA "premenopausal" ;
lin premenstrual_A = mkA "premenstrual" ;
lin premier_A = compoundA (mkA "premier");
lin premier_N = mkN "premier" "premiers";
lin premiere_N = mkN "première" "premières";
lin premiere_V = mkV "premiere";
lin premiere_V2 = mkV2 (mkV "premiere");
lin premiership_N = mkN "premiership" "premierships";
lin premise_N = mkN "premise" "premises";
lin premise_V2 = mkV2 (mkV "premise" "premises" "premised" "premised" "premising");
lin premises_N = mkN "premises" ;
lin premiss_N = mkN "premiss" "premisses";
lin premiss_V2 = mkV2 (mkV "premiss" "premisses" "premissed" "premissed" "premissing");
lin premium_A = mkA "premium" ;
lin premium_N = mkN "premium" "premiums";
lin premolar_N = mkN "premolar" ;
lin premonition_N = mkN "premonition" "premonitions";
lin premonitory_A = compoundA (mkA "premonitory");
lin prenatal_A = compoundA (mkA "prenatal");
lin prentice_N = mkN "prentice" "prentices";
lin prenuptial_A = mkA "prenuptial" ;
lin preoccupancy_N = mkN "preoccupancy" ;
lin preoccupation_N = mkN "preoccupation" "preoccupations";
lin preoccupy_V2 = mkV2 (mkV "preoccupy" "preoccupies" "preoccupied" "preoccupied" "preoccupying");
lin preoperative_A = mkA "preoperative" ;
lin preordain_V2 = mkV2 (mkV "preordain" "preordains" "preordained" "preordained" "preordaining");
lin prep_N = mkN "prep" "preps";
lin prepackaged_A = mkA "prepackaged" ;
lin prepacked_A = compoundA (mkA "prepacked");
lin preparation_N = mkN "preparation" "preparations";
lin preparatory_A = compoundA (mkA "preparatory");
lin prepare_V = mkV "prepare" "prepares" "prepared" "prepared" "preparing";
lin prepare_V2 = mkV2 (mkV "prepare" "prepares" "prepared" "prepared" "preparing");
lin prepare_V2V = mkV2V (mkV "prepare" "prepares" "prepared" "prepared" "preparing") noPrep to_Prep ;
lin prepare_VS = mkVS (mkV "prepare" "prepares" "prepared" "prepared" "preparing");
lin prepare_VV = mkVV (mkV "prepare" "prepares" "prepared" "prepared" "preparing");
lin preparedness_N = mkN "preparedness" ;
lin prepay_V2 = mkV2 (mkV "pre" IrregEng.pay_V);
lin prepayment_N = mkN "prepayment" ;
lin preponderance_N = mkN "preponderance" "preponderances";
lin preponderant_A = compoundA (mkA "preponderant");
lin preponderate_V = mkV "preponderate" "preponderates" "preponderated" "preponderated" "preponderating";
lin preposition_N = mkN "preposition" "prepositions";
lin prepositional_A = compoundA (mkA "prepositional");
lin prepossess_V2 = mkV2 (mkV "prepossess" "prepossesses" "prepossessed" "prepossessed" "prepossessing");
lin prepossessing_A = compoundA (mkA "prepossessing");
lin prepossession_N = mkN "prepossession" "prepossessions";
lin preposterous_A = compoundA (mkA "preposterous");
lin preprandial_A = mkA "preprandial" ;
lin prepuberty_N = mkN "prepuberty" ;
lin prepubescent_A = mkA "prepubescent" ;
lin prepuce_N = mkN "prepuce" "prepuces";
lin prepupal_A = mkA "prepupal" ;
lin prerecord_V2 = mkV2 (mkV "prerecord" "prerecords" "prerecorded" "prerecorded" "prerecording");
lin prerequisite_A = compoundA (mkA "prerequisite");
lin prerequisite_N = mkN "prerequisite" "prerequisites";
lin prerogative_N = mkN "prerogative" "prerogatives";
lin pres_N = mkN "pres" ;
lin presage_N = mkN "presage" "presages";
lin presage_V2 = mkV2 (mkV "presage" "presages" "presaged" "presaged" "presaging");
lin presbyope_N = mkN "presbyope" ;
lin presbyopia_N = mkN "presbyopia" ;
lin presbyter_N = mkN "presbyter" "presbyters";
lin presbyterian_A = compoundA (mkA "presbyterian");
lin presbyterian_N = mkN "presbyterian" "presbyterians";
lin presbyterianism_N = mkN "presbyterianism" ;
lin presbytery_N = mkN "presbytery" "presbyteries";
lin preschool_N = mkN "preschool" ;
lin preschooler_N = mkN "preschooler" ;
lin prescience_N = mkN "prescience" ;
lin prescient_A = compoundA (mkA "prescient");
lin prescot_PN = mkPN "Prescot";
lin prescribe_V = mkV "prescribe" "prescribes" "prescribed" "prescribed" "prescribing";
lin prescribe_V2 = mkV2 (mkV "prescribe" "prescribes" "prescribed" "prescribed" "prescribing");
lin prescript_N = mkN "prescript" "prescripts";
lin prescription_N = mkN "prescription" "prescriptions";
lin prescriptive_A = compoundA (mkA "prescriptive");
lin prescriptivism_N = mkN "prescriptivism" ;
lin preseason_N = mkN "preseason" ;
lin presence_N = mkN "presence" ;
lin present_A = compoundA (mkA "present");
lin present_N = mkN "present" "presents";
lin present_V2 = mkV2 (mkV "present" "presents" "presented" "presented" "presenting");
lin present_day_A = compoundA (mkA "present-day");
lin presentable_A = compoundA (mkA "presentable");
lin presentation_N = mkN "presentation" "presentations";
lin presentational_A = mkA "presentational" ;
lin presenter_N = mkN "presenter" ;
lin presentiment_N = mkN "presentiment" "presentiments";
lin presentism_N = mkN "presentism" ;
lin presentist_N = mkN "presentist" ;
lin presentment_N = mkN "presentment" ;
lin presentness_N = mkN "presentness" ;
lin preservable_A = compoundA (mkA "preservable");
lin preservation_N = mkN "preservation" ;
lin preservationist_N = mkN "preservationist" ;
lin preservative_A = compoundA (mkA "preservative");
lin preservative_N = mkN "preservative" "preservatives";
lin preserve_N = mkN "preserve" "preserves";
lin preserve_V2 = mkV2 (mkV "preserve" "preserves" "preserved" "preserved" "preserving");
lin preserver_N = mkN "preserver" "preservers";
lin preset_A = mkA "preset" ;
lin preside_V = mkV "preside" "presides" "presided" "presided" "presiding";
lin presidency_N = mkN "presidency" "presidencies";
lin presidentFem_N = mkN feminine (mkN "president" "presidents");
lin presidentMasc_N = mkN masculine (mkN "president" "presidents");
lin presidential_A = compoundA (mkA "presidential");
lin presidio_N = mkN "presidio" ;
lin presidium_N = mkN "presidium" "presidiums";
lin presocratic_A = mkA "presocratic" ;
lin press_N = mkN "press" "presses";
lin press_V = mkV "press" "presses" "pressed" "pressed" "pressing";
lin press_V2 = mkV2 (mkV "press" "presses" "pressed" "pressed" "pressing");
lin press_V2V = mkV2V (mkV "press" "presses" "pressed" "pressed" "pressing") noPrep to_Prep ;
lin press_agency_N = mkN "press-agency" "press-agencies";
lin press_agent_N = mkN "press-agent" "press-agents";
lin press_box_N = mkN "press-box" "press-boxes";
lin press_clipping_N = mkN "press-clipping" "press-clippings";
lin press_cutting_N = mkN "press-cutting" "press-cuttings";
lin press_gallery_N = mkN "press-gallery" "press-galleries";
lin press_gang_N = mkN "press-gang" "press-gangs";
lin press_lord_N = mkN "press-lord" "press-lords";
lin press_photographer_N = mkN "press-photographer" "press-photographers";
lin press_stud_N = mkN "press-stud" "press-studs";
lin press_up_N = mkN "press-up" "press-ups";
lin pressing_N = mkN "pressing" "pressings";
lin pressing_A = compoundA (mkA "pressing");
lin pressman_N = mkN masculine (mkN "pressman" "pressmen");
lin pressmark_N = mkN "pressmark" "pressmarks";
lin pressor_A = mkA "pressor" ;
lin pressure_N = mkN "pressure" "pressures";
lin pressure_V2 = mkV2 (mkV "pressure");
lin pressure_V2V = mkV2V (mkV "pressure") noPrep to_Prep ;
lin pressure_cooker_N = mkN "pressure-cooker" "pressure-cookers";
lin pressure_gauge_N = mkN "pressure-gauge" "pressure-gauges";
lin pressurized_A = compoundA (mkA "pressurized");
lin prestatyn_PN = mkPN "Prestatyn";
lin prestidigitation_N = mkN "prestidigitation" "prestidigitations";
lin prestidigitator_N = mkN "prestidigitator" "prestidigitators";
lin prestige_N = mkN "prestige" ;
lin prestigious_A = compoundA (mkA "prestigious");
lin prestissimo_A = compoundA (mkA "prestissimo");
lin prestissimo_Adv = mkAdv "prestissimo";
lin presto_A = compoundA (mkA "presto");
lin presto_Adv = mkAdv "presto";
lin preston_PN = mkPN "Preston";
lin prestonpans_PN = mkPN "Prestonpans";
lin prestressed_A = compoundA (mkA "prestressed");
lin prestwich_PN = mkPN "Prestwich";
lin prestwick_PN = mkPN "Prestwick";
lin presumable_A = compoundA (mkA "presumable");
lin presume_V = mkV "presume" "presumes" "presumed" "presumed" "presuming";
lin presume_V2 = mkV2 (mkV "presume" "presumes" "presumed" "presumed" "presuming");
lin presume_VS = mkVS (mkV "presume" "presumes" "presumed" "presumed" "presuming");
lin presume_VV = mkVV (mkV "presume" "presumes" "presumed" "presumed" "presuming");
lin presumption_N = mkN "presumption" "presumptions";
lin presumptive_A = compoundA (mkA "presumptive");
lin presumptuous_A = compoundA (mkA "presumptuous");
lin presuppose_V2 = mkV2 (mkV "presuppose" "presupposes" "presupposed" "presupposed" "presupposing");
lin presupposition_N = mkN "presupposition" "presuppositions";
lin preteen_A = mkA "preteen" ;
lin preteen_N = mkN "preteen" ;
lin pretence_N = mkN "pretence" "pretences";
lin pretend_V = mkV "pretend" "pretends" "pretended" "pretended" "pretending";
lin pretend_V2 = mkV2 (mkV "pretend" "pretends" "pretended" "pretended" "pretending");
lin pretend_VS = mkVS (mkV "pretend" "pretends" "pretended" "pretended" "pretending");
lin pretendedly_Adv = mkAdv "pretendedly";
lin pretender_N = mkN "pretender" "pretenders";
lin pretense_N = mkN "pretense" ;
lin pretension_N = mkN "pretension" "pretensions";
lin pretentious_A = compoundA (mkA "pretentious");
lin pretentiousness_N = mkN "pretentiousness" ;
lin preterist_N = mkN "preterist" ;
lin preterit_A = compoundA (mkA "preterit");
lin preterit_N = mkN "preterit" "preterits";
lin preterite_A = compoundA (mkA "preterite");
lin preterite_N = mkN "preterite" "preterites";
lin pretermission_N = mkN "pretermission" ;
lin preternatural_A = compoundA (mkA "preternatural");
lin pretext_N = mkN "pretext" "pretexts";
lin pretor_N = mkN "pretor" "pretors";
lin pretoria_PN = mkPN "Pretoria";
lin pretrial_N = mkN "pretrial" ;
lin prettify_V2 = mkV2 (mkV "prettify" "prettifies" "prettified" "prettified" "prettifying");
lin prettily_Adv = mkAdv "prettily";
lin prettiness_N = mkN "prettiness" ;
lin pretty_A = irregAdv (mkA "pretty" "prettier") "pretty";
lin pretty_AdA = mkAdA "pretty";
lin pretty_N = mkN "pretty" "pretties";
lin pretty_pretty_A = compoundA (mkA "pretty-pretty");
lin pretzel_N = mkN "pretzel" "pretzels";
lin prevail_V = mkV "prevail" "prevails" "prevailed" "prevailed" "prevailing";
lin prevail_V2 = mkV2 (mkV "prevail" "prevails" "prevailed" "prevailed" "prevailing");
lin prevalence_N = mkN "prevalence" ;
lin prevalent_A = compoundA (mkA "prevalent");
lin prevaricate_V = mkV "prevaricate" "prevaricates" "prevaricated" "prevaricated" "prevaricating";
lin prevarication_N = mkN "prevarication" "prevarications";
lin prevent_V2 = mkV2 (mkV "prevent" "prevents" "prevented" "prevented" "preventing");
lin preventable_A = compoundA (mkA "preventable");
lin preventative_N = mkN "preventative" "preventatives";
lin prevention_N = mkN "prevention" ;
lin preventive_A = compoundA (mkA "preventive");
lin preventive_N = mkN "preventive" ;
lin preview_N = mkN "preview" "previews";
lin preview_V2 = mkV2 (mkV "preview" "previews" "previewed" "previewed" "previewing");
lin previous_A = compoundA (mkA "previous");
lin prevision_N = mkN "prevision" "previsions";
lin prewar_A = mkA "prewar" ;
lin prey_N = mkN "prey" "IRREG";
lin prey_V = mkV "prey" "preys" "preyed" "preyed" "preying";
lin priapic_A = mkA "priapic" ;
lin priapism_N = mkN "priapism" ;
lin price_N = mkN "price" "prices";
lin price_V = mkV "price";
lin price_V2 = mkV2 (mkV "price" "prices" "priced" "priced" "pricing");
lin price_V2V = mkV2V (mkV "price") noPrep to_Prep ;
lin price_control_N = mkN "price-control" "price-controls";
lin price_controlled_A = compoundA (mkA "price-controlled");
lin priceless_A = compoundA (mkA "priceless");
lin pricelist_N = mkN "pricelist" "pricelists";
lin pricey_A = mkA "pricey" "priceyyer";
lin pricing_N = mkN "pricing" ;
lin prick_N = mkN "prick" "pricks";
lin prick_V = mkV "prick" "pricks" "pricked" "pricked" "pricking";
lin prick_V2 = mkV2 (mkV "prick" "pricks" "pricked" "pricked" "pricking");
lin pricker_N = mkN "pricker" "prickers";
lin pricket_N = mkN "pricket" ;
lin pricking_N = mkN "pricking" "prickings";
lin prickle_N = mkN "prickle" "prickles";
lin prickle_V = mkV "prickle" "prickles" "prickled" "prickled" "prickling";
lin prickle_V2 = mkV2 (mkV "prickle" "prickles" "prickled" "prickled" "prickling");
lin prickleback_N = mkN "prickleback" ;
lin prickliness_N = mkN "prickliness" ;
lin prickling_N = mkN "prickling" ;
lin prickly_A = mkA "prickly" "pricklier";
lin pride_N = mkN "pride" "prides";
lin pride_V2 = mkV2 (mkV "pride" "prides" "prided" "prided" "priding");
lin prie_dieu_N = mkN "prie-dieu" "prie-dieus";
lin priest_N = mkN "priest" "priests";
lin priest_ridden_A = compoundA (mkA "priest-ridden");
lin priestcraft_N = mkN "priestcraft" ;
lin priestess_N = mkN "priestess" "priestesses";
lin priesthood_N = mkN "priesthood" "priesthoods";
lin priestlike_A = compoundA (mkA "priestlike");
lin priestly_A = mkA "priestly" "priestlier";
lin prig_N = mkN "prig" "prigs";
lin priggish_A = compoundA (mkA "priggish");
lin priggishness_N = mkN "priggishness" ;
lin prim_A = mkA "prim" "primmer";
lin prim_V2 = mkV2 (mkV "prim" "prims" "primmed" "primmed" "primming");
lin prima_A = compoundA (mkA "prima");
lin prima_ballerina_N = mkN "prima ballerina" "prima ballerinas";
lin prima_donna_N = mkN "prima donna" "prima donnas";
lin prima_facie_A = compoundA (mkA "prima facie");
lin prima_facie_Adv = mkAdv "prima facie";
lin primacy_N = mkN "primacy" "primacies";
lin primaeval_A = compoundA (mkA "primaeval");
lin primal_A = compoundA (mkA "primal");
lin primality_N = mkN "primality" ;
lin primaquine_N = mkN "primaquine" ;
lin primary_A = compoundA (mkA "primary");
lin primary_N = mkN "primary" "primaries";
lin primate_N = mkN "primate" "primates";
lin primateship_N = mkN "primateship" ;
lin primatology_N = mkN "primatology" ;
lin prime_A = compoundA (mkA "prime");
lin prime_N = mkN "prime" ;
lin prime_V2 = mkV2 (mkV "prime" "primes" "primed" "primed" "priming");
lin primer_N = mkN "primer" "primers";
lin primeval_A = compoundA (mkA "primeval");
lin primidone_N = mkN "primidone" ;
lin primigravida_N = mkN "primigravida" ;
lin priming_N = mkN "priming" "primings";
lin primipara_N = mkN "primipara" ;
lin primiparous_A = mkA "primiparous" ;
lin primitive_A = compoundA (mkA "primitive");
lin primitive_N = mkN "primitive" "primitives";
lin primitiveness_N = mkN "primitiveness" ;
lin primitivism_N = mkN "primitivism" ;
lin primness_N = mkN "primness" ;
lin primo_A = mkA "primo" ;
lin primo_N = mkN "primo" ;
lin primogeniture_N = mkN "primogeniture" ;
lin primordial_A = compoundA (mkA "primordial");
lin primordium_N = mkN "primordium" ;
lin primp_V2 = mkV2 (mkV "primp" "primps" "primped" "primped" "primping");
lin primping_N = mkN "primping" ;
lin primrose_N = mkN "primrose" "primroses";
lin primula_N = mkN "primula" "primulas";
lin primus_N = mkN "primus" "primuses";
lin prince_N = mkN "prince" "princes";
lin princedom_N = mkN "princedom" "princedoms";
lin princeling_N = mkN "princeling" ;
lin princely_A = mkA "princely" "princelier";
lin princes_risborough_PN = mkPN "Princes risborough";
lin princess_N = mkN "princess" "princesses";
lin princewood_N = mkN "princewood" ;
lin principal_A = compoundA (mkA "principal");
lin principal_N = mkN "principal" "principals";
lin principality_N = mkN "principality" "principalities";
lin principalship_N = mkN "principalship" ;
lin principle_N = mkN "principle" "principles";
lin principled_A = compoundA (mkA "principled");
lin prink_V2 = mkV2 (mkV "prink" "prinks" "prinked" "prinked" "prinking");
lin print_N = mkN "print" "prints";
lin print_V = mkV "print" "prints" "printed" "printed" "printing";
lin print_V2 = mkV2 (mkV "print" "prints" "printed" "printed" "printing");
lin print_seller_N = mkN "print-seller" "print-sellers";
lin print_shop_N = mkN "print-shop" "print-shops";
lin printable_A = compoundA (mkA "printable");
lin printer_N = mkN "printer" "printers";
lin printing_N = mkN "printing" "printings";
lin printing_ink_N = mkN "printing-ink" "printing-inks";
lin printing_press_N = mkN "printing-press" "printing-presses";
lin printmaker_N = mkN "printmaker" ;
lin printmaking_N = mkN "printmaking" ;
lin printout_N = mkN "printout" "printouts";
lin prion_N = mkN "prion" ;
lin prior_A = compoundA (mkA "prior");
lin prior_N = mkN "prior" "priors";
lin prioress_N = mkN "prioress" "prioresses";
lin priority_N = mkN "priority" "priorities";
lin priorship_N = mkN "priorship" ;
lin priory_N = mkN "priory" "priories";
lin priscilla_PN = mkPN "Priscilla";
lin prise_V2 = mkV2 (mkV "prise" "prises" "prised" "prised" "prising");
lin prism_N = mkN "prism" "prisms";
lin prismatic_A = compoundA (mkA "prismatic");
lin prismatoid_N = mkN "prismatoid" ;
lin prismoid_N = mkN "prismoid" ;
lin prison_N = mkN "prison" "prisons";
lin prison_breaking_N = mkN "prison-breaking" "prison-breakings";
lin prisoner_N = mkN "prisoner" "prisoners";
lin prisonlike_A = mkA "prisonlike" ;
lin pristine_A = compoundA (mkA "pristine");
lin privacy_N = mkN "privacy" ;
lin private_A = compoundA (mkA "private");
lin private_N = mkN human (mkN "private" "privates");
lin privateer_N = mkN "privateer" "privateers";
lin privation_N = mkN "privation" "privations";
lin privatization_N = mkN (variants {"privatization"; "privatisation"});
lin privatize_V2 = mkV2 (mkV "privatize");
lin privet_N = mkN "privet" ;
lin privilege_N = mkN "privilege" "privileges";
lin privileged_A = compoundA (mkA "privileged");
lin privy_A = compoundA (mkA "privy");
lin privy_N = mkN "privy" "privies";
lin prize_N = mkN "prize" "prizes";
lin prize_V2 = mkV2 (mkV "prize" "prizes" "prized" "prized" "prizing");
lin prize_fight_N = mkN "prize-fight" "prize-fights";
lin prize_money_N = mkN "prize-money" ;
lin prize_ring_N = mkN "prize-ring" "prize-rings";
lin prizefight_N = mkN "prizefight" ;
lin prizefighter_N = mkN "prizefighter" ;
lin pro_A = mkA "pro" ;
lin pro_Adv = mkAdv "pro";
lin pro_N = mkN "pro" "pros";
lin pro_forma_A = compoundA (mkA "pro forma");
lin pro_forma_Adv = mkAdv "pro forma";
lin pro_rata_Adv = mkAdv "pro rata";
lin pro_tem_Adv = mkAdv "pro tem";
lin pro_tempore_Adv = mkAdv "pro tempore";
lin proaccelerin_N = mkN "proaccelerin" ;
lin proactive_A = mkA "proactive" ;
lin probabilism_N = mkN "probabilism" ;
lin probabilistic_A = compoundA (mkA "probabilistic");
lin probabilistically_Adv = mkAdv "probabilistically";
lin probability_N = mkN "probability" "probabilities";
lin probable_A = compoundA (mkA "probable");
lin probable_N = mkN "probable" "probables";
lin probate_N = mkN "probate" "probates";
lin probate_V2 = mkV2 (mkV "probate" "probates" "probated" "probated" "probating");
lin probation_N = mkN "probation" ;
lin probationary_A = compoundA (mkA "probationary");
lin probationer_N = mkN "probationer" "probationers";
lin probative_A = mkA "probative" ;
lin probe_N = mkN "probe" "probes";
lin probe_V = mkV "probe";
lin probe_V2 = mkV2 (mkV "probe" "probes" "probed" "probed" "probing");
lin probenecid_N = mkN "probenecid" ;
lin probiotic_N = mkN "probiotic" ;
lin probity_N = mkN "probity" ;
lin problem_N = mkN "problem" "problems";
lin problematic_A = compoundA (mkA "problematic");
lin problematically_Adv = mkAdv "problematically";
lin proboscidean_N = mkN "proboscidean" ;
lin proboscis_N = mkN "proboscis" "proboscises";
lin procaine_N = mkN "procaine" ;
lin procarbazine_N = mkN "procarbazine" ;
lin procedural_A = compoundA (mkA "procedural");
lin procedure_N = mkN "procedure" "procedures";
lin proceed_V = mkV "proceed" "proceeds" "proceeded" "proceeded" "proceeding";
lin proceed_V2 = mkV2 (mkV "proceed" "proceeds" "proceeded" "proceeded" "proceeding");
lin proceed_VV = mkVV (mkV "proceed" "proceeds" "proceeded" "proceeded" "proceeding");
lin proceeding_N = mkN "proceeding" "proceedings";
lin process_N = mkN "process" "processes";
lin process_V = mkV "process" "processes" "processed" "processed" "processing";
lin process_V2 = mkV2 (mkV "process" "processes" "processed" "processed" "processing");
lin process_server_N = mkN "process-server" "process-servers";
lin processing_N = mkN "processing" ;
lin procession_N = mkN "procession" "processions";
lin processional_A = compoundA (mkA "processional");
lin processional_N = mkN "processional" ;
lin processor_N = mkN "processor" "processors";
lin prochlorperazine_N = mkN "prochlorperazine" ;
lin proclaim_V2 = mkV2 (mkV "proclaim" "proclaims" "proclaimed" "proclaimed" "proclaiming");
lin proclaim_VS = mkVS (mkV "proclaim");
lin proclamation_N = mkN "proclamation" "proclamations";
lin proclivity_N = mkN "proclivity" "proclivities";
lin proconsul_N = mkN "proconsul" "proconsuls";
lin proconsular_A = compoundA (mkA "proconsular");
lin proconsulate_N = mkN "proconsulate" "proconsulates";
lin proconsulship_N = mkN "proconsulship" ;
lin proconvertin_N = mkN "proconvertin" ;
lin procrastinate_V = mkV "procrastinate" "procrastinates" "procrastinated" "procrastinated" "procrastinating";
lin procrastination_N = mkN "procrastination" ;
lin procrastinator_N = mkN "procrastinator" ;
lin procreate_V2 = mkV2 (mkV "procreate" "procreates" "procreated" "procreated" "procreating");
lin procreation_N = mkN "procreation" "procreations";
lin proctalgia_N = mkN "proctalgia" ;
lin proctitis_N = mkN "proctitis" ;
lin proctologist_N = mkN "proctologist" ;
lin proctology_N = mkN "proctology" ;
lin proctoplasty_N = mkN "proctoplasty" ;
lin proctor_N = mkN "proctor" "proctors";
lin proctorship_N = mkN "proctorship" ;
lin proctoscope_N = mkN "proctoscope" ;
lin proctoscopy_N = mkN "proctoscopy" ;
lin procumbent_A = mkA "procumbent" ;
lin procurable_A = compoundA (mkA "procurable");
lin procurator_N = mkN "procurator" "procurators";
lin procure_V2 = mkV2 (mkV "procure" "procures" "procured" "procured" "procuring");
lin procurement_N = mkN "procurement" "procurements";
lin procurer_N = mkN "procurer" "procurers";
lin procuress_N = mkN "procuress" "procuresses";
lin procyclidine_N = mkN "procyclidine" ;
lin procyonid_N = mkN "procyonid" ;
lin prod_N = mkN "prod" "prods";
lin prod_V = mkV "prod" "prods" "prodded" "prodded" "prodding";
lin prod_V2 = mkV2 (mkV "prod" "prods" "prodded" "prodded" "prodding");
lin prod_V2V = mkV2V (mkV "prod" "prods" "prodded" "prodded" "prodding") noPrep to_Prep ;
lin prodigal_A = compoundA (mkA "prodigal");
lin prodigal_N = mkN "prodigal" "prodigals";
lin prodigality_N = mkN "prodigality" ;
lin prodigious_A = compoundA (mkA "prodigious");
lin prodigy_N = mkN "prodigy" "prodigies";
lin prodromal_A = mkA "prodromal" ;
lin prodrome_N = mkN "prodrome" ;
lin produce_N = mkN "produce" ;
lin produce_V = mkV "produce" "produces" "produced" "produced" "producing";
lin produce_V2 = mkV2 (mkV "produce" "produces" "produced" "produced" "producing");
lin producer_N = mkN "producer" "producers";
lin product_N = mkN "product" "products";
lin production_N = mkN "production" "productions";
lin productive_A = compoundA (mkA "productive");
lin productiveness_N = mkN "productiveness" ;
lin productivity_N = mkN "productivity" ;
lin proenzyme_N = mkN "proenzyme" ;
lin prof_PN = mkPN "Prof";
lin profanation_N = mkN "profanation" "profanations";
lin profanatory_A = mkA "profanatory" ;
lin profane_A = compoundA (mkA "profane");
lin profane_V2 = mkV2 (mkV "profane" "profanes" "profaned" "profaned" "profaning");
lin profaneness_N = mkN "profaneness" ;
lin profanity_N = mkN "profanity" "profanities";
lin profess_V = mkV "profess" "professes" "professed" "professed" "professing";
lin profess_V2 = mkV2 (mkV "profess" "professes" "professed" "professed" "professing");
lin profess_V2V = mkV2V (mkV "profess" "professes" "professed" "professed" "professing") noPrep to_Prep ;
lin professedly_Adv = mkAdv "professedly" ;
lin profession_N = mkN "profession" "professions";
lin professional_A = compoundA (mkA "professional");
lin professional_N = mkN "professional" "professionals";
lin professionalism_N = mkN "professionalism" ;
lin professionalization_N = mkN "professionalization" ;
lin professor_N = mkN "professor" "professors";
lin professorial_A = compoundA (mkA "professorial");
lin professorship_N = mkN "professorship" "professorships";
lin proffer_N = mkN "proffer" "proffers";
lin proffer_V2 = mkV2 (mkV "proffer" "proffers" "proffered" "proffered" "proffering");
lin proficiency_N = mkN "proficiency" ;
lin proficient_A = compoundA (mkA "proficient");
lin profile_N = mkN "profile" "profiles";
lin profile_V2 = mkV2 (mkV "profile" "profiles" "profiled" "profiled" "profiling");
lin profiling_N = mkN "profiling" ;
lin profit_N = mkN "profit" "profits";
lin profit_V = mkV "profit" "profits" "profited" "profited" "profiting";
lin profit_V2 = mkV2 (mkV "profit" "profits" "profited" "profited" "profiting");
lin profit_margin_N = mkN "profit-margin" "profit-margins";
lin profit_sharing_N = mkN "profit-sharing" ;
lin profitable_A = compoundA (mkA "profitable");
lin profitableness_N = mkN "profitableness" ;
lin profiteer_N = mkN "profiteer" "profiteers";
lin profiteer_V = mkV "profiteer" "profiteers" "profiteered" "profiteered" "profiteering";
lin profiterole_N = mkN "profiterole" ;
lin profitless_A = compoundA (mkA "profitless");
lin profligacy_N = mkN "profligacy" ;
lin profligate_A = compoundA (mkA "profligate");
lin profligate_N = mkN "profligate" "profligates";
lin profound_A = compoundA (mkA "profound");
lin profoundness_N = mkN "profoundness" ;
lin profundity_N = mkN "profundity" "profundities";
lin profuse_A = compoundA (mkA "profuse");
lin profuseness_N = mkN "profuseness" ;
lin profusion_N = mkN "profusion" ;
lin progenitor_N = mkN "progenitor" "progenitors";
lin progeria_N = mkN "progeria" ;
lin progestational_A = mkA "progestational" ;
lin progesterone_N = mkN "progesterone" ;
lin progestin_N = mkN "progestin" ;
lin prognathism_N = mkN "prognathism" ;
lin prognathous_A = mkA "prognathous" ;
lin prognosis_N = mkN "prognosis" "prognoses";
lin prognostic_A = compoundA (mkA "prognostic");
lin prognostic_N = mkN "prognostic" "prognostics";
lin prognosticate_V2 = mkV2 (mkV "prognosticate" "prognosticates" "prognosticated" "prognosticated" "prognosticating");
lin prognostication_N = mkN "prognostication" "prognostications";
lin program_N = mkN "program" "programs";
lin program_V2 = mkV2 (mkV "program" "programs" "programmed" "programmed" "programming");
lin program_V2V = mkV2V (mkV "program") noPrep to_Prep ;
lin programma_N = mkN "programma" ;
lin programme_N = mkN "programme" "programmes";
lin programme_V2 = mkV2 (mkV "programme" "programmes" "programmed" "programmed" "programming");
lin programmerFem_N = mkN feminine (mkN "programmer" "programmers");
lin programmerMasc_N = mkN masculine (mkN "programmer" "programmers");
lin programming_N = mkN "programming" ;
lin progress_N = mkN "progress" "progresses";
lin progress_V = mkV "progress" "progresses" "progressed" "progressed" "progressing";
lin progress_V2 = mkV2 (mkV "progress" "progresses" "progressed" "progressed" "progressing");
lin progression_N = mkN "progression" ;
lin progressive_A = compoundA (mkA "progressive");
lin progressive_N = mkN "progressive" "progressives";
lin progressiveness_N = mkN "progressiveness" ;
lin progressivism_N = mkN "progressivism" ;
lin progymnosperm_N = mkN "progymnosperm" ;
lin prohibit_V = mkV "prohibit";
lin prohibit_V2 = mkV2 (mkV "prohibit" "prohibits" "prohibited" "prohibited" "prohibiting");
lin prohibition_N = mkN "prohibition" "prohibitions";
lin prohibitionist_N = mkN "prohibitionist" "prohibitionists";
lin prohibitive_A = compoundA (mkA "prohibitive");
lin prohibitory_A = compoundA (mkA "prohibitory");
lin proinflammatory_A = mkA "proinflammatory" ;
lin project_N = mkN "project" "projects";
lin project_V = mkV "project" "projects" "projected" "projected" "projecting";
lin project_V2 = mkV2 (mkV "project" "projects" "projected" "projected" "projecting");
lin project_V2V = mkV2V (mkV "project" "projects" "projected" "projected" "projecting") noPrep to_Prep ;
lin project_VS = mkVS (mkV "project" "projects" "projected" "projected" "projecting");
lin projectile_A = compoundA (mkA "projectile");
lin projectile_N = mkN "projectile" "projectiles";
lin projection_N = mkN "projection" "projections";
lin projectionist_N = mkN "projectionist" "projectionists";
lin projector_N = mkN "projector" "projectors";
lin prokaryote_N = mkN "prokaryote" ;
lin prokaryotic_A = mkA "prokaryotic" ;
lin prolactin_N = mkN "prolactin" ;
lin prolamine_N = mkN "prolamine" ;
lin prolapse_N = mkN "prolapse" "prolapses";
lin prolapse_V = mkV "prolapse" "prolapses" "prolapsed" "prolapsed" "prolapsing";
lin prolate_A = mkA "prolate" ;
lin prole_N = mkN "prole" "proles";
lin prolegomenon_N = mkN "prolegomenon" ;
lin prolepsis_N = mkN "prolepsis" ;
lin proletarian_A = compoundA (mkA "proletarian");
lin proletarian_N = mkN human (mkN "proletarian" "proletarians");
lin proletariat_N = mkN "proletariat" "proletariats";
lin proliferate_V = mkV "proliferate" "proliferates" "proliferated" "proliferated" "proliferating";
lin proliferate_V2 = mkV2 (mkV "proliferate" "proliferates" "proliferated" "proliferated" "proliferating");
lin proliferation_N = mkN "proliferation" "proliferations";
lin prolific_A = compoundA (mkA "prolific");
lin proline_N = mkN "proline" ;
lin prolix_A = compoundA (mkA "prolix");
lin prolixity_N = mkN "prolixity" ;
lin prologue_N = mkN "prologue" "prologues";
lin prolong_V2 = mkV2 (mkV "prolong" "prolongs" "prolonged" "prolonged" "prolonging");
lin prolongation_N = mkN "prolongation" "prolongations";
lin prolonge_N = mkN "prolonge" ;
lin prolusory_A = mkA "prolusory" ;
lin prom_N = mkN "prom" "proms";
lin promenade_N = mkN "promenade" "promenades";
lin promenade_V = mkV "promenade" "promenades" "promenaded" "promenaded" "promenading";
lin promenade_V2 = mkV2 (mkV "promenade" "promenades" "promenaded" "promenaded" "promenading");
lin promethazine_N = mkN "promethazine" ;
lin promethium_N = mkN "promethium" ;
lin prominence_N = mkN "prominence" "prominences";
lin prominent_A = compoundA (mkA "prominent");
lin promiscuity_N = mkN "promiscuity" ;
lin promiscuous_A = compoundA (mkA "promiscuous");
lin promise_N = mkN "promise" "promises";
lin promise_V = mkV "promise" "promises" "promised" "promised" "promising";
lin promise_V2 = mkV2 (mkV "promise" "promises" "promised" "promised" "promising");
lin promise_VS = mkVS (mkV "promise" "promises" "promised" "promised" "promising");
lin promise_VV = mkVV (mkV "promise" "promises" "promised" "promised" "promising");
lin promisee_N = mkN "promisee" ;
lin promiser_N = mkN "promiser" ;
lin promisingly_Adv = mkAdv "promisingly" ;
lin promissory_A = compoundA (mkA "promissory");
lin promontory_N = mkN "promontory" "promontories";
lin promote_V = mkV "promote";
lin promote_V2 = mkV2 (mkV "promote" "promotes" "promoted" "promoted" "promoting");
lin promoter_N = mkN "promoter" "promoters";
lin promotion_N = mkN "promotion" "promotions";
lin promotional_A = compoundA (mkA "promotional");
lin promotive_A = mkA "promotive" ;
lin prompt_A = compoundA (mkA "prompt");
lin prompt_N = mkN "prompt" "prompts";
lin prompt_V2 = mkV2 (mkV "prompt" "prompts" "prompted" "prompted" "prompting");
lin prompt_V2V = mkV2V (mkV "prompt" "prompts" "prompted" "prompted" "prompting") noPrep to_Prep;
lin prompt_box_N = mkN "prompt-box" "prompt-boxes";
lin prompt_copy_N = mkN "prompt-copy" "prompt-copies";
lin promptbook_N = mkN "promptbook" ;
lin prompter_N = mkN "prompter" "prompters";
lin prompting_N = mkN "prompting" "promptings";
lin promptitude_N = mkN "promptitude" ;
lin promptness_N = mkN "promptness" ;
lin promulgate_V2 = mkV2 (mkV "promulgate" "promulgates" "promulgated" "promulgated" "promulgating");
lin promulgation_N = mkN "promulgation" ;
lin promulgator_N = mkN "promulgator" ;
lin promycelium_N = mkN "promycelium" ;
lin pronation_N = mkN "pronation" ;
lin pronator_N = mkN "pronator" ;
lin prone_A = compoundA (mkA "prone");
lin proneness_N = mkN "proneness" ;
lin prong_N = mkN "prong" "prongs";
lin pronged_A = compoundA (mkA "pronged");
lin pronghorn_N = mkN "pronghorn" ;
lin pronominal_A = compoundA (mkA "pronominal");
lin pronoun_N = mkN "pronoun" "pronouns";
lin pronounce_V = mkV "pronounce" "pronounces" "pronounced" "pronounced" "pronouncing";
lin pronounce_V2 = mkV2 (mkV "pronounce" "pronounces" "pronounced" "pronounced" "pronouncing");
lin pronounce_VS = mkVS (mkV "pronounce" "pronounces" "pronounced" "pronounced" "pronouncing");
lin pronounced_A = compoundA (mkA "pronounced");
lin pronounceable_A = compoundA (mkA "pronounceable");
lin pronouncement_N = mkN "pronouncement" "pronouncements";
lin pronto_Adv = mkAdv "pronto";
lin pronucleus_N = mkN "pronucleus" ;
lin pronunciamento_N = mkN "pronunciamento" "pronunciamentos";
lin pronunciation_N = mkN "pronunciation" "pronunciations";
lin proof_A = compoundA (mkA "proof");
lin proof_N = mkN "proof" "proofs";
lin proof_V2 = mkV2 (mkV "proof" "proofs" "proofed" "proofed" "proofing");
lin proofread_V = mkV "proof" IrregEng.read_V;
lin proofread_V2 = mkV2 (mkV "proof" IrregEng.read_V);
lin proofreader_N = mkN "proofreader" "proofreaders";
lin prop_N = mkN "prop" "props";
lin prop_V2 = mkV2 (mkV "prop" "props" "propped" "propped" "propping");
lin propaedeutic_N = mkN "propaedeutic" ;
lin propaganda_N = mkN "propaganda" ;
lin propagandist_A = mkA "propagandist" ;
lin propagandist_N = mkN "propagandist" "propagandists";
lin propagandize_V = mkV "propagandize" "propagandizes" "propagandized" "propagandized" "propagandizing";
lin propagandize_V2 = mkV2 (mkV "propagandize" "propagandizes" "propagandized" "propagandized" "propagandizing");
lin propagate_V = mkV "propagate" "propagates" "propagated" "propagated" "propagating";
lin propagate_V2 = mkV2 (mkV "propagate" "propagates" "propagated" "propagated" "propagating");
lin propagation_N = mkN "propagation" ;
lin propagative_A = mkA "propagative" ;
lin propagator_N = mkN "propagator" "propagators";
lin propanal_N = mkN "propanal" ;
lin propane_N = mkN "propane" ;
lin propanol_N = mkN "propanol" ;
lin propanolol_N = mkN "propanolol" ;
lin proparoxytone_N = mkN "proparoxytone" ;
lin propel_V2 = mkV2 (mkV "propel" "propels" "propelled" "propelled" "propelling");
lin propellant_A = compoundA (mkA "propellant");
lin propellant_N = mkN "propellant" "propellants";
lin propellent_A = compoundA (mkA "propellent");
lin propellent_N = mkN "propellent" "propellents";
lin propeller_N = mkN "propeller" "propellers";
lin propenal_N = mkN "propenal" ;
lin propenoate_N = mkN "propenoate" ;
lin propenonitrile_N = mkN "propenonitrile" ;
lin propensity_N = mkN "propensity" "propensities";
lin proper_A = compoundA (mkA "proper");
lin propertied_A = compoundA (mkA "propertied");
lin property_N = mkN "property" "properties";
lin property_man_N = mkN masculine (mkN "property-man" "property-men");
lin property_master_N = mkN "property-master" "property-masters";
lin propertyless_A = mkA "propertyless" ;
lin prophase_N = mkN "prophase" ;
lin prophecy_N = mkN "prophecy" "prophecies";
lin prophesy_V = mkV "prophesy" "prophesies" "prophesied" "prophesied" "prophesying";
lin prophesy_V2 = mkV2 (mkV "prophesy" "prophesies" "prophesied" "prophesied" "prophesying");
lin prophet_N = mkN human (mkN "prophet" "prophets");
lin prophetess_N = mkN "prophetess" "prophetesses";
lin prophetic_A = compoundA (mkA "prophetic");
lin prophetical_A = compoundA (mkA "prophetical");
lin prophylactic_A = compoundA (mkA "prophylactic");
lin prophylactic_N = mkN "prophylactic" "prophylactics";
lin prophylaxis_N = mkN "prophylaxis" ;
lin prophyll_N = mkN "prophyll" ;
lin propinquity_N = mkN "propinquity" ;
lin propitiate_V2 = mkV2 (mkV "propitiate" "propitiates" "propitiated" "propitiated" "propitiating");
lin propitiation_N = mkN "propitiation" ;
lin propitiative_A = mkA "propitiative" ;
lin propitiatory_A = compoundA (mkA "propitiatory");
lin propitious_A = compoundA (mkA "propitious");
lin propjet_N = mkN "propjet" ;
lin proponent_N = mkN human (mkN "proponent" "proponents");
lin proportion_N = mkN "proportion" "proportions";
lin proportion_V2 = mkV2 (mkV "proportion" "proportions" "proportioned" "proportioned" "proportioning");
lin proportionable_A = compoundA (mkA "proportionable");
lin proportional_A = compoundA (mkA "proportional");
lin proportional_N = mkN "proportional" ;
lin proportionality_N = mkN "proportionality" ;
lin proportionate_A = compoundA (mkA "proportionate");
lin proposal_N = mkN "proposal" "proposals";
lin propose_V = mkV "propose" "proposes" "proposed" "proposed" "proposing";
lin propose_V2 = mkV2 (mkV "propose" "proposes" "proposed" "proposed" "proposing");
lin propose_VS = mkVS (mkV "propose" "proposes" "proposed" "proposed" "proposing");
lin propose_VV = mkVV (mkV "propose" "proposes" "proposed" "proposed" "proposing");
lin proposer_N = mkN "proposer" "proposers";
lin proposition_N = mkN "proposition" "propositions";
lin proposition_V2 = mkV2 (mkV "proposition" "propositions" "propositioned" "propositioned" "propositioning");
lin propositus_N = mkN "propositus" ;
lin propound_V2 = mkV2 (mkV "propound" "propounds" "propounded" "propounded" "propounding");
lin propoxyphene_N = mkN "propoxyphene" ;
lin proprietary_A = compoundA (mkA "proprietary");
lin proprietor_N = mkN human (mkN "proprietor" "proprietors");
lin proprietorship_N = mkN "proprietorship" ;
lin proprietress_N = mkN "proprietress" "proprietresses";
lin propriety_N = mkN "propriety" "proprieties";
lin proprioception_N = mkN "proprioception" ;
lin proprioceptive_A = mkA "proprioceptive" ;
lin proprioceptor_N = mkN "proprioceptor" ;
lin proprionamide_N = mkN "proprionamide" ;
lin props_N = mkN "props" ;
lin propulsion_N = mkN "propulsion" ;
lin propulsive_A = compoundA (mkA "propulsive");
lin propyl_N = mkN "propyl" ;
lin propylene_N = mkN "propylene" ;
lin propylthiouracil_N = mkN "propylthiouracil" ;
lin proration_N = mkN "proration" ;
lin prorogation_N = mkN "prorogation" "prorogations";
lin prorogue_V2 = mkV2 (mkV "prorogue" "prorogues" "prorogued" "prorogued" "proroguing");
lin prosaic_A = compoundA (mkA "prosaic");
lin prosaically_Adv = mkAdv "prosaically";
lin proscenium_N = mkN "proscenium" "prosceniums";
lin prosciutto_N = mkN "prosciutto" ;
lin proscribe_V2 = mkV2 (mkV "proscribe" "proscribes" "proscribed" "proscribed" "proscribing");
lin proscription_N = mkN "proscription" "proscriptions";
lin prose_N = mkN "prose" ;
lin prosecute_V2 = mkV2 (mkV "prosecute" "prosecutes" "prosecuted" "prosecuted" "prosecuting");
lin prosecution_N = mkN "prosecution" "prosecutions";
lin prosecutorMasc_N = mkN masculine (mkN "prosecutor" "prosecutors");
lin prosecutorFem_N = mkN feminine (mkN "prosecutor" "prosecutors");
lin proselyte_N = mkN "proselyte" "proselytes";
lin proselytism_N = mkN "proselytism" ;
lin proselytize_V = mkV "proselytize" "proselytizes" "proselytized" "proselytized" "proselytizing";
lin proselytize_V2 = mkV2 (mkV "proselytize" "proselytizes" "proselytized" "proselytized" "proselytizing");
lin prosimian_N = mkN "prosimian" ;
lin prosiness_N = mkN "prosiness" ;
lin prosodic_A = mkA "prosodic" ;
lin prosody_N = mkN "prosody" ;
lin prospect_N = mkN "prospect" "prospects";
lin prospect_V = mkV "prospect" "prospects" "prospected" "prospected" "prospecting";
lin prospective_A = compoundA (mkA "prospective");
lin prospector_N = mkN "prospector" "prospectors";
lin prospectus_N = mkN "prospectus" "prospectuses";
lin prosper_V = mkV "prosper" "prospers" "prospered" "prospered" "prospering";
lin prosper_V2 = mkV2 (mkV "prosper" "prospers" "prospered" "prospered" "prospering");
lin prosperity_N = mkN "prosperity" ;
lin prosperous_A = compoundA (mkA "prosperous");
lin prostaglandin_N = mkN "prostaglandin" ;
lin prostate_A = mkA "prostate" ;
lin prostate_N = mkN "prostate" "prostates";
lin prostatectomy_N = mkN "prostatectomy" ;
lin prostatitis_N = mkN "prostatitis" ;
lin prosthesis_N = mkN "prosthesis" ;
lin prosthetic_A = mkA "prosthetic" ;
lin prosthetics_N = mkN "prosthetics" ;
lin prosthetist_N = mkN "prosthetist" ;
lin prosthion_N = mkN "prosthion" ;
lin prosthodontic_A = mkA "prosthodontic" ;
lin prosthodontics_N = mkN "prosthodontics" ;
lin prosthodontist_N = mkN "prosthodontist" ;
lin prostitute_N = mkN "prostitute" "prostitutes";
lin prostitute_V2 = mkV2 (mkV "prostitute" "prostitutes" "prostituted" "prostituted" "prostituting");
lin prostitution_N = mkN "prostitution" ;
lin prostrate_A = compoundA (mkA "prostrate");
lin prostrate_V2 = mkV2 (mkV "prostrate" "prostrates" "prostrated" "prostrated" "prostrating");
lin prostration_N = mkN "prostration" "prostrations";
lin prostyle_A = mkA "prostyle" ;
lin prosy_A = mkA "prosy" "prosier";
lin protactinium_N = mkN "protactinium" ;
lin protagonist_N = mkN "protagonist" "protagonists";
lin protamine_N = mkN "protamine" ;
lin protanopia_N = mkN "protanopia" ;
lin protanopic_A = mkA "protanopic" ;
lin protea_N = mkN "protea" ;
lin protean_A = compoundA (mkA "protean");
lin protease_N = mkN "protease" ;
lin protect_V = mkV "protect";
lin protect_V2 = mkV2 (mkV "protect" "protects" "protected" "protected" "protecting");
lin protection_N = mkN "protection" "protections";
lin protectionism_N = mkN "protectionism" ;
lin protectionistMasc_N = mkN masculine (mkN "protectionist" "protectionists");
lin protectionistFem_N = mkN feminine (mkN "protectionist" "protectionists");
lin protective_A = compoundA (mkA "protective");
lin protectiveness_N = mkN "protectiveness" ;
lin protector_N = mkN "protector" "protectors";
lin protectorate_N = mkN "protectorate" "protectorates";
lin protectorship_N = mkN "protectorship" ;
lin protege_N = mkN "protégé" "protégés";
lin protegee_N = mkN "protégée" "protégées";
lin protein_N = mkN "protein" "proteins";
lin proteinaceous_A = mkA "proteinaceous" ;
lin proteolysis_N = mkN "proteolysis" ;
lin proteolytic_A = mkA "proteolytic" ;
lin proteome_N = mkN "proteome" ;
lin proteomics_N = mkN "proteomics" ;
lin proterozoic_A = mkA "proterozoic" ;
lin protest_N = mkN "protest" "protests";
lin protest_V = mkV "protest" "protests" "protested" "protested" "protesting";
lin protest_V2 = mkV2 (mkV "protest" "protests" "protested" "protested" "protesting");
lin protestant_A = compoundA (mkA "protestant");
lin protestant_N = mkN "protestant" "protestants";
lin protestantism_N = mkN "protestantism" ;
lin protestation_N = mkN "protestation" "protestations";
lin protester_N = mkN "protester" "protesters";
lin protestingly_Adv = mkAdv "protestingly";
lin prothalamion_N = mkN "prothalamion" ;
lin prothorax_N = mkN "prothorax" ;
lin prothrombin_N = mkN "prothrombin" ;
lin prothrombinase_N = mkN "prothrombinase" ;
lin protist_N = mkN "protist" ;
lin protoarcheology_N = mkN "protoarcheology" ;
lin protoavis_N = mkN "protoavis" ;
lin protoceratops_N = mkN "protoceratops" ;
lin protocol_N = mkN "protocol" "protocols";
lin protoctist_N = mkN "protoctist" ;
lin protogeometric_A = mkA "protogeometric" ;
lin protohippus_N = mkN "protohippus" ;
lin protohistory_N = mkN "protohistory" ;
lin protology_N = mkN "protology" ;
lin proton_N = mkN "proton" "protons";
lin protoplasm_N = mkN "protoplasm" ;
lin prototherian_N = mkN "prototherian" ;
lin prototype_N = mkN "prototype" "prototypes";
lin protozoal_A = mkA "protozoal" ;
lin protozoan_N = mkN "protozoan" ;
lin protozoological_A = mkA "protozoological" ;
lin protozoologist_N = mkN "protozoologist" ;
lin protozoology_N = mkN "protozoology" ;
lin protract_V2 = mkV2 (mkV "protract" "protracts" "protracted" "protracted" "protracting");
lin protractile_A = mkA "protractile" ;
lin protraction_N = mkN "protraction" "protractions";
lin protractor_N = mkN "protractor" "protractors";
lin protriptyline_N = mkN "protriptyline" ;
lin protrude_V = mkV "protrude" "protrudes" "protruded" "protruded" "protruding";
lin protrude_V2 = mkV2 (mkV "protrude" "protrudes" "protruded" "protruded" "protruding");
lin protrusile_A = mkA "protrusile" ;
lin protrusion_N = mkN "protrusion" "protrusions";
lin protrusive_A = compoundA (mkA "protrusive");
lin protuberance_N = mkN "protuberance" "protuberances";
lin protuberant_A = compoundA (mkA "protuberant");
lin proturan_N = mkN "proturan" ;
lin proud_A = mkA "proud" "prouder";
lin provable_A = compoundA (mkA "provable");
lin prove_V = mkV "prove" "proves" "proved" "proven" "proving";
lin prove_V2 = mkV2 (mkV "prove" "proves" "proved" "proven" "proving");
lin prove_V2V = mkV2V (mkV "prove" "proves" "proved" "proven" "proving") noPrep to_Prep ;
lin prove_VA = mkVA (mkV "prove" "proves" "proved" "proven" "proving");
lin prove_VS = mkVS (mkV "prove" "proves" "proved" "proven" "proving");
lin provenance_N = mkN "provenance" ;
lin provencal_A = mkA "provencal" ;
lin provender_N = mkN "provender" ;
lin proverb_N = mkN "proverb" "proverbs";
lin proverbial_A = compoundA (mkA "proverbial");
lin provide_V = mkV "provide" "provides" "provided" "provided" "providing";
lin provide_V2 = mkV2 (mkV "provide" "provides" "provided" "provided" "providing");
lin provide_VS = mkVS (mkV "provide" "provides" "provided" "provided" "providing");
lin providence_N = mkN "providence" ;
lin providence_PN = mkPN "Providence";
lin provident_A = compoundA (mkA "provident");
lin providential_A = compoundA (mkA "providential");
lin provider_N = mkN "provider" "providers";
lin province_N = mkN "province" "provinces";
lin provincial_A = compoundA (mkA "provincial");
lin provincial_N = mkN "provincial" "provincials";
lin provincialism_N = mkN "provincialism" "provincialisms";
lin provirus_N = mkN "provirus" ;
lin provision_N = mkN "provision" "provisions";
lin provision_V2 = mkV2 (mkV "provision" "provisions" "provisioned" "provisioned" "provisioning");
lin provisional_A = compoundA (mkA "provisional");
lin proviso_N = mkN "proviso" "provisos";
lin provisory_A = compoundA (mkA "provisory");
lin provitamin_N = mkN "provitamin" ;
lin provocation_N = mkN "provocation" "provocations";
lin provocative_A = compoundA (mkA "provocative");
lin provoke_V2 = mkV2 (mkV "provoke" "provokes" "provoked" "provoked" "provoking");
lin provoking_A = compoundA (mkA "provoking");
lin provost_N = mkN "provost" "provosts";
lin prow_N = mkN "prow" "prows";
lin prowess_N = mkN "prowess" ;
lin prowl_N = mkN "prowl" "prowls";
lin prowl_V = mkV "prowl" "prowls" "prowled" "prowled" "prowling";
lin prowl_V2 = mkV2 (mkV "prowl" "prowls" "prowled" "prowled" "prowling");
lin prowler_N = mkN "prowler" "prowlers";
lin prox_Adv = mkAdv "prox";
lin proxemics_N = mkN "proxemics" ;
lin proximal_A = mkA "proximal" ;
lin proximate_A = compoundA (mkA "proximate");
lin proximity_N = mkN "proximity" ;
lin proximo_A = compoundA (mkA "proximo");
lin proxy_N = mkN "proxy" "proxies";
lin pru_PN = mkPN "Pru";
lin prude_N = mkN "prude" "prudes";
lin prudence_N = mkN "prudence" ;
lin prudence_PN = mkPN "Prudence";
lin prudent_A = compoundA (mkA "prudent");
lin prudential_A = compoundA (mkA "prudential");
lin prudery_N = mkN "prudery" "pruderies";
lin prudhoe_PN = mkPN "Prudhoe";
lin prudish_A = compoundA (mkA "prudish");
lin prune_N = mkN "prune" "prunes";
lin prune_V2 = mkV2 (mkV "prune" "prunes" "pruned" "pruned" "pruning");
lin pruner_N = mkN "pruner" ;
lin pruning_N = mkN "pruning" ;
lin pruning_hook_N = mkN "pruning-hook" "pruning-hooks";
lin pruning_knife_N = mkN "pruning-knife" "pruning-knives";
lin pruning_saw_N = mkN "pruning-saw" "pruning-saws";
lin pruno_N = mkN "pruno" ;
lin prurience_N = mkN "prurience" ;
lin pruriency_N = mkN "pruriency" ;
lin prurient_A = compoundA (mkA "prurient");
lin prurigo_N = mkN "prurigo" ;
lin pruritus_N = mkN "pruritus" ;
lin prussian_A = compoundA (mkA "Prussian");
lin prussian_N = mkN "Prussian" "Prussians";
lin prussic_A = compoundA (mkA "prussic");
lin pry_V = mkV "pry" "pries" "pried" "pried" "prying";
lin pry_V2 = mkV2 (mkV "pry" "pries" "pried" "pried" "prying");
lin pryingly_Adv = mkAdv "pryingly";
lin psalm_N = mkN "psalm" "psalms";
lin psalmist_N = mkN "psalmist" "psalmists";
lin psalmody_N = mkN "psalmody" "psalmodies";
lin psalter_N = mkN "psalter" "psalters";
lin psalterium_N = mkN "psalterium" ;
lin psaltery_N = mkN "psaltery" "psalteries";
lin psammoma_N = mkN "psammoma" ;
lin psephologist_N = mkN "psephologist" "psephologists";
lin psephology_N = mkN "psephology" ;
lin pseud_N = mkN "pseud" "pseuds";
lin pseudo_A = compoundA (mkA "pseudo");
lin pseudo_N = mkN "pseudo" "pseudos";
lin pseudobulb_N = mkN "pseudobulb" ;
lin pseudoephedrine_N = mkN "pseudoephedrine" ;
lin pseudohallucination_N = mkN "pseudohallucination" ;
lin pseudohermaphrodite_N = mkN "pseudohermaphrodite" ;
lin pseudohermaphroditic_A = mkA "pseudohermaphroditic" ;
lin pseudohermaphroditism_N = mkN "pseudohermaphroditism" ;
lin pseudomonad_N = mkN "pseudomonad" ;
lin pseudonym_N = mkN "pseudonym" "pseudonyms";
lin pseudonymous_A = compoundA (mkA "pseudonymous");
lin pseudophloem_N = mkN "pseudophloem" ;
lin pseudopod_N = mkN "pseudopod" ;
lin pseudoscience_N = mkN "pseudoscience" ;
lin pseudoscientific_A = mkA "pseudoscientific" ;
lin psi_N = mkN "psi" ;
lin psilocybin_N = mkN "psilocybin" ;
lin psilomelane_N = mkN "psilomelane" ;
lin psilophyte_N = mkN "psilophyte" ;
lin psilophyton_N = mkN "psilophyton" ;
lin psilosis_N = mkN "psilosis" ;
lin psittacosaur_N = mkN "psittacosaur" ;
lin psittacosis_N = mkN "psittacosis" ;
lin psoas_N = mkN "psoas" ;
lin psocid_N = mkN "psocid" ;
lin psoriasis_N = mkN "psoriasis" ;
lin psyche_N = mkN "psyche" "psyches";
lin psychedelia_N = mkN "psychedelia" ;
lin psychedelic_A = compoundA (mkA "psychedelic");
lin psychiatric_A = compoundA (mkA "psychiatric");
lin psychiatrist_N = mkN "psychiatrist" "psychiatrists";
lin psychiatry_N = mkN "psychiatry" ;
lin psychic_A = compoundA (mkA "psychic");
lin psychic_N = mkN "psychic" "psychics";
lin psychical_A = compoundA (mkA "psychical");
lin psychoactive_A = mkA "psychoactive" ;
lin psychoanalyse_V2 = mkV2 (mkV "psychoanalyse" "psychoanalyses" "psychoanalysed" "psychoanalysed" "psychoanalysing");
lin psychoanalysis_N = mkN "psychoanalysis" ;
lin psychoanalyst_N = mkN "psychoanalyst" "psychoanalysts";
lin psychoanalytic_A = compoundA (mkA "psychoanalytic");
lin psychoanalytical_A = compoundA (mkA "psychoanalytical");
lin psychoanalyze_V2 = mkV2 (mkV "psychoanalyze" "psychoanalyzes" "psychoanalyzed" "psychoanalyzed" "psychoanalyzing");
lin psychobabble_N = mkN "psychobabble" ;
lin psychodid_N = mkN "psychodid" ;
lin psychodynamics_N = mkN "psychodynamics" ;
lin psychogenesis_N = mkN "psychogenesis" ;
lin psychogenetic_A = mkA "psychogenetic" ;
lin psychogenic_A = mkA "psychogenic" ;
lin psychokinetic_A = mkA "psychokinetic" ;
lin psycholinguist_N = mkN "psycholinguist" ;
lin psycholinguistic_A = mkA "psycholinguistic" ;
lin psycholinguistics_N = mkN "psycholinguistics" ;
lin psychological_A = compoundA (mkA "psychological");
lin psychologist_N = mkN "psychologist" "psychologists";
lin psychology_N = mkN "psychology" "psychologies";
lin psychometric_A = mkA "psychometric" ;
lin psychometry_N = mkN "psychometry" ;
lin psychomotor_A = mkA "psychomotor" ;
lin psychopath_N = mkN "psychopath" "psychopaths";
lin psychopathic_A = compoundA (mkA "psychopathic");
lin psychopharmacological_A = mkA "psychopharmacological" ;
lin psychopharmacology_N = mkN "psychopharmacology" ;
lin psychophysicist_N = mkN "psychophysicist" ;
lin psychophysics_N = mkN "psychophysics" ;
lin psychopomp_N = mkN "psychopomp" ;
lin psychosexual_A = mkA "psychosexual" ;
lin psychosexuality_N = mkN "psychosexuality" ;
lin psychosis_N = mkN "psychosis" "psychoses" {- FIXME: guessed plural form -};
lin psychosomatic_A = compoundA (mkA "psychosomatic");
lin psychosurgery_N = mkN "psychosurgery" ;
lin psychotherapeutic_A = mkA "psychotherapeutic" ;
lin psychotherapist_N = mkN "psychotherapist" ;
lin psychotherapy_N = mkN "psychotherapy" ;
lin psychotic_A = mkA "psychotic" ;
lin psychotic_N = mkN "psychotic" "psychotics";
lin psychrometer_N = mkN "psychrometer" ;
lin pt_N = mkN "pt" ;
lin pta_N = mkN "pta" ;
lin ptarmigan_N = mkN "ptarmigan" "ptarmigans";
lin pte_PN = mkPN "Pte";
lin pteridological_A = mkA "pteridological" ;
lin pteridologist_N = mkN "pteridologist" ;
lin pteridology_N = mkN "pteridology" ;
lin pteridophyte_N = mkN "pteridophyte" ;
lin pterion_N = mkN "pterion" ;
lin pterodactyl_N = mkN "pterodactyl" "pterodactyls";
lin pteropogon_N = mkN "pteropogon" ;
lin pterosaur_N = mkN "pterosaur" ;
lin pterygium_N = mkN "pterygium" ;
lin pto_PN = mkPN "Pto";
lin ptomaine_N = mkN "ptomaine" "ptomaines";
lin ptosis_N = mkN "ptosis" ;
lin pty_PN = mkPN "Pty";
lin ptyalin_N = mkN "ptyalin" ;
lin ptyalism_N = mkN "ptyalism" ;
lin ptyalith_N = mkN "ptyalith" ;
lin pub_N = mkN "pub" "pubs";
lin pub_crawl_N = mkN "pub-crawl" "pub-crawls";
lin pub_crawl_V = mkV "pub-crawl" "pub-crawls" "pub-crawled" "pub-crawled" "pub-crawling";
lin pubertal_A = mkA "pubertal" ;
lin puberty_N = mkN "puberty" ;
lin pubes_N = mkN "pubes" ;
lin pubescent_A = mkA "pubescent" ;
lin pubic_A = compoundA (mkA "pubic");
lin pubis_N = mkN "pubis" ;
lin public_A = compoundA (mkA "public");
lin public_N = mkN "public" "publics";
lin public_spirited_A = compoundA (mkA "public-spirited");
lin publican_N = mkN "publican" "publicans";
lin publication_N = mkN "publication" "publications";
lin publicist_N = mkN "publicist" "publicists";
lin publicity_N = mkN "publicity" ;
lin publicize_V2 = mkV2 (mkV "publicize" "publicizes" "publicized" "publicized" "publicizing");
lin publish_V = mkV "publish";
lin publish_V2 = mkV2 (mkV "publish" "publishes" "published" "published" "publishing");
lin publishable_A = mkA "publishable" ;
lin publisher_N = mkN "publisher" "publishers";
lin publishing_A = mkA "publishing";
lin puccoon_N = mkN "puccoon" ;
lin puce_N = mkN "puce" ;
lin puck_N = mkN "puck" "pucks";
lin pucker_N = mkN "pucker" "puckers";
lin pucker_V = mkV "pucker" "puckers" "puckered" "puckered" "puckering";
lin pucker_V2 = mkV2 (mkV "pucker" "puckers" "puckered" "puckered" "puckering");
lin puckish_A = compoundA (mkA "puckish");
lin pud_N = mkN "pud" ;
lin pudden_N = mkN "pudden" "puddens";
lin pudden_head_N = mkN "pudden-head" "pudden-heads";
lin pudding_N = mkN "pudding" "puddings";
lin pudding_face_N = mkN "pudding-face" "pudding-faces";
lin puddingwife_N = mkN "puddingwife" ;
lin puddle_N = mkN "puddle" "puddles";
lin puddle_V2 = mkV2 (mkV "puddle" "puddles" "puddled" "puddled" "puddling");
lin puddler_N = mkN "puddler" "puddlers";
lin pudendal_A = mkA "pudendal" ;
lin pudendum_N = mkN "pudendum" ;
lin pudge_N = mkN "pudge" ;
lin pudgy_A = mkA "pudgy" "pudgier";
lin pudsey_PN = mkPN "Pudsey";
lin pueblo_N = mkN "pueblo" "pueblos";
lin puerile_A = compoundA (mkA "puerile");
lin puerility_N = mkN "puerility" "puerilities";
lin puerpera_N = mkN "puerpera" ;
lin puerperal_A = compoundA (mkA "puerperal");
lin puerperium_N = mkN "puerperium" ;
lin puff_A = mkA "puff" ;
lin puff_N = mkN "puff" "puffs";
lin puff_V = mkV "puff" "puffs" "puffed" "puffed" "puffing";
lin puff_V2 = mkV2 (mkV "puff" "puffs" "puffed" "puffed" "puffing");
lin puffball_N = mkN "puffball" "puffballs";
lin puffbird_N = mkN "puffbird" ;
lin puffer_N = mkN "puffer" ;
lin puffery_N = mkN "puffery" ;
lin puffin_N = mkN "puffin" "puffins";
lin puffiness_N = mkN "puffiness" ;
lin puffing_N = mkN "puffing" ;
lin puffy_A = mkA "puffy" "puffier";
lin pug_N = mkN "pug" "pugs";
lin pug_dog_N = mkN "pug-dog" "pug-dogs";
lin pug_nose_A = compoundA (mkA "pug-nose");
lin pug_nose_N = mkN "pug-nose" "pug-noses";
lin pug_nosed_A = compoundA (mkA "pug-nosed");
lin pugilism_N = mkN "pugilism" ;
lin pugilist_N = mkN "pugilist" "pugilists";
lin pugilistic_A = compoundA (mkA "pugilistic");
lin pugnacious_A = compoundA (mkA "pugnacious");
lin pugnacity_N = mkN "pugnacity" ;
lin puissance_N = mkN "puissance" ;
lin puissant_A = compoundA (mkA "puissant");
lin puka_N = mkN "puka" ;
lin puke_N = mkN "puke" ;
lin puke_V = mkV "puke" "pukes" "puked" "puked" "puking";
lin puke_V2 = mkV2 (mkV "puke" "pukes" "puked" "puked" "puking");
lin pukka_A = compoundA (mkA "pukka");
lin puku_N = mkN "puku" ;
lin pul_N = mkN "pul" ;
lin pula_N = mkN "pula" ;
lin pulasan_N = mkN "pulasan" ;
lin pulchritude_N = mkN "pulchritude" ;
lin pulchritudinous_A = compoundA (mkA "pulchritudinous");
lin pule_V = mkV "pule" "pules" "puled" "puled" "puling";
lin pull_N = mkN "pull" "pulls";
lin pull_V = mkV "pull" "pulls" "pulled" "pulled" "pulling";
lin pull_V2 = mkV2 (mkV "pull" "pulls" "pulled" "pulled" "pulling");
lin pull_in_N = mkN "pull-in" "pull-ins";
lin pull_off_N = mkN "pull-off" "pull-offs";
lin pull_out_N = mkN "pull-out" "pull-outs";
lin pull_through_N = mkN "pull-through" "pull-throughs";
lin pull_up_N = mkN "pull-up" "pull-ups";
lin pullback_N = mkN "pullback" ;
lin puller_N = mkN "puller" ;
lin pullet_N = mkN "pullet" "pullets";
lin pulley_N = mkN "pulley" "pulleys";
lin pulley_block_N = mkN "pulley-block" "pulley-blocks";
lin pullman_N = mkN "pullman" "pullmans";
lin pullover_N = mkN "pullover" "pullovers";
lin pullulate_V = mkV "pullulate" "pullulates" "pullulated" "pullulated" "pullulating";
lin pullulation_N = mkN "pullulation" ;
lin pulmonary_A = compoundA (mkA "pulmonary");
lin pulp_N = mkN "pulp" "pulps";
lin pulp_V = mkV "pulp" "pulps" "pulped" "pulped" "pulping";
lin pulp_V2 = mkV2 (mkV "pulp" "pulps" "pulped" "pulped" "pulping");
lin pulpit_N = mkN "pulpit" "pulpits";
lin pulpwood_N = mkN "pulpwood" ;
lin pulpy_A = mkA "pulpy" "pulpier";
lin pulque_N = mkN "pulque" ;
lin pulsar_N = mkN "pulsar" "pulsars";
lin pulsate_V = mkV "pulsate" "pulsates" "pulsated" "pulsated" "pulsating";
lin pulsate_V2 = mkV2 (mkV "pulsate" "pulsates" "pulsated" "pulsated" "pulsating");
lin pulsation_N = mkN "pulsation" "pulsations";
lin pulse_N = mkN "pulse" "pulses";
lin pulse_V = mkV "pulse" "pulses" "pulsed" "pulsed" "pulsing";
lin pulverization_N = mkN "pulverization" ;
lin pulverize_V = mkV "pulverize" "pulverizes" "pulverized" "pulverized" "pulverizing";
lin pulverize_V2 = mkV2 (mkV "pulverize" "pulverizes" "pulverized" "pulverized" "pulverizing");
lin puma_N = mkN "puma" "pumas";
lin pumice_N = mkN "pumice" ;
lin pumice_stone_N = mkN "pumice-stone" "pumice-stones";
lin pummel_V2 = mkV2 (mkV "pummel" "pummels" "pummelled" "pummelled" "pummelling");
lin pump_N = mkN "pump" "pumps";
lin pump_V = mkV "pump" "pumps" "pumped" "pumped" "pumping";
lin pump_V2 = mkV2 (mkV "pump" "pumps" "pumped" "pumped" "pumping");
lin pump_room_N = mkN "pump-room" "pump-rooms";
lin pumpernickel_N = mkN "pumpernickel" ;
lin pumpkin_N = mkN "pumpkin" "pumpkins";
lin pumpkinseed_N = mkN "pumpkinseed" ;
lin pun_N = mkN "pun" "puns";
lin pun_V = mkV "pun" "puns" "punned" "punned" "punning";
lin punch_N = mkN "punch" "punches";
lin punch_V2 = mkV2 (mkV "punch" "punches" "punched" "punched" "punching");
lin punch_drunk_A = compoundA (mkA "punch-drunk");
lin punch_up_N = mkN "punch-up" "punch-ups";
lin punchball_N = mkN "punchball" "punchballs";
lin punchboard_N = mkN "punchboard" ;
lin punchbowl_N = mkN "punchbowl" "punchbowls";
lin puncher_N = mkN "puncher" ;
lin punching_ball_N = mkN "punching-ball" "punching-balls";
lin punctilio_N = mkN "punctilio" "punctilios";
lin punctilious_A = compoundA (mkA "punctilious");
lin punctiliousness_N = mkN "punctiliousness" ;
lin punctual_A = compoundA (mkA "punctual");
lin punctuality_N = mkN "punctuality" ;
lin punctuate_V2 = mkV2 (mkV "punctuate" "punctuates" "punctuated" "punctuated" "punctuating");
lin punctuation_N = mkN "punctuation" ;
lin punctum_N = mkN "punctum" ;
lin puncturable_A = mkA "puncturable" ;
lin puncture_N = mkN "puncture" "punctures";
lin puncture_V = mkV "puncture" "punctures" "punctured" "punctured" "puncturing";
lin puncture_V2 = mkV2 (mkV "puncture" "punctures" "punctured" "punctured" "puncturing");
lin punctureless_A = mkA "punctureless" ;
lin pundit_N = mkN "pundit" "pundits";
lin pung_N = mkN "pung" ;
lin pungapung_N = mkN "pungapung" ;
lin pungency_N = mkN "pungency" ;
lin pungent_A = compoundA (mkA "pungent");
lin punic_A = compoundA (mkA "punic");
lin puniness_N = mkN "puniness" ;
lin punish_V2 = mkV2 (mkV "punish" "punishes" "punished" "punished" "punishing");
lin punishable_A = compoundA (mkA "punishable");
lin punishing_A = mkA "punishing" ;
lin punishment_N = mkN "punishment" "punishments";
lin punitive_A = compoundA (mkA "punitive");
lin punk_N = mkN "punk" "punks";
lin punkah_N = mkN "punkah" "punkahs";
lin punkie_N = mkN "punkie" ;
lin punks_N = mkN "punks" ;
lin punnet_N = mkN "punnet" "punnets";
lin punster_N = mkN "punster" "punsters";
lin punt_N = mkN "punt" "punts";
lin punt_V = mkV "punt" "punts" "punted" "punted" "punting";
lin punt_V2 = mkV2 (mkV "punt" "punts" "punted" "punted" "punting");
lin punter_N = mkN "punter" "punters";
lin puny_A = mkA "puny" "punier";
lin pup_N = mkN "pup" "pups";
lin pupa_N = mkN "pupa" "pupas";
lin pupal_A = mkA "pupal" ;
lin pupil_N = mkN "pupil" "pupils";
lin pupillary_A = mkA "pupillary" ;
lin puppet_N = mkN "puppet" "puppets";
lin puppeteer_N = mkN "puppeteer" "puppeteers";
lin puppetry_N = mkN "puppetry" ;
lin puppy_N = mkN "puppy" "puppies";
lin puppyish_A = mkA "puppyish" ;
lin purblind_A = compoundA (mkA "purblind");
lin purchasable_A = compoundA (mkA "purchasable");
lin purchase_N = mkN "purchase" "purchases";
lin purchase_V2 = mkV2 (mkV "purchase" "purchases" "purchased" "purchased" "purchasing");
lin purchaser_N = mkN "purchaser" "purchasers";
lin purdah_N = mkN "purdah" ;
lin pure_A = mkA "pure" "purer";
lin purebred_A = mkA "purebred" ;
lin puree_N = mkN "purée" "purées";
lin pureness_N = mkN "pureness" ;
lin purgation_N = mkN "purgation" ;
lin purgative_A = compoundA (mkA "purgative");
lin purgative_N = mkN "purgative" "purgatives";
lin purgatorial_A = compoundA (mkA "purgatorial");
lin purgatory_N = mkN "purgatory" "purgatories";
lin purge_N = mkN "purge" "purges";
lin purge_V2 = mkV2 (mkV "purge" "purges" "purged" "purged" "purging");
lin purification_N = mkN "purification" "purifications";
lin purifier_N = mkN "purifier" "purifiers";
lin purify_V2 = mkV2 (mkV "purify" "purifies" "purified" "purified" "purifying");
lin purifying_A = mkA "purifying" ;
lin purine_N = mkN "purine" ;
lin purism_N = mkN "purism" ;
lin purist_N = mkN "purist" "purists";
lin puritan_A = compoundA (mkA "puritan");
lin puritan_N = mkN "puritan" "puritans";
lin puritanical_A = compoundA (mkA "puritanical");
lin puritanism_N = mkN "puritanism" ;
lin purity_N = mkN "purity" ;
lin purl_N = mkN "purl" "purls";
lin purl_V = mkV "purl" "purls" "purled" "purled" "purling";
lin purl_V2 = mkV2 (mkV "purl" "purls" "purled" "purled" "purling");
lin purloin_V2 = mkV2 (mkV "purloin" "purloins" "purloined" "purloined" "purloining");
lin purloo_N = mkN "purloo" ;
lin purple_A = compoundA (mkA "purple");
lin purple_N = mkN "purple" "purples";
lin purplish_A = compoundA (mkA "purplish");
lin purport_N = mkN "purport" ;
lin purport_V2 = mkV2 (mkV "purport" "purports" "purported" "purported" "purporting");
lin purport_V2V = mkV2V (mkV "purport") noPrep to_Prep ;
lin purportedly_Adv = mkAdv "purportedly" ;
lin purpose_N = mkN "purpose" "purposes";
lin purpose_V2 = mkV2 (mkV "purpose" "purposes" "purposed" "purposed" "purposing");
lin purpose_built_A = compoundA (mkA "purpose-built");
lin purposeful_A = compoundA (mkA "purposeful");
lin purposefulness_N = mkN "purposefulness" ;
lin purposeless_A = compoundA (mkA "purposeless");
lin purposelessness_N = mkN "purposelessness" ;
lin purposely_Adv = mkAdv "purposely";
lin purposive_A = compoundA (mkA "purposive");
lin purpura_N = mkN "purpura" ;
lin purr_N = mkN "purr" "purrs";
lin purr_V = mkV "purr" "purrs" "purred" "purred" "purring";
lin purr_V2 = mkV2 (mkV "purr" "purrs" "purred" "purred" "purring");
lin purr_VS = mkVS (mkV "purr" "purrs" "purred" "purred" "purring");
lin purse_N = mkN "purse" "purses";
lin purse_V2 = mkV2 (mkV "purse" "purses" "pursed" "pursed" "pursing");
lin purse_proud_A = compoundA (mkA "purse-proud");
lin purser_N = mkN "purser" "pursers";
lin purslane_N = mkN "purslane" ;
lin pursuance_N = mkN "pursuance" "pursuances";
lin pursuant_A = compoundA (mkA "pursuant");
lin pursue_V = mkV "pursue";
lin pursue_V2 = mkV2 (mkV "pursue" "pursues" "pursued" "pursued" "pursuing");
lin pursued_N = mkN "pursued" ;
lin pursuer_N = mkN "pursuer" "pursuers";
lin pursuit_N = mkN "pursuit" "pursuits";
lin pursy_A = compoundA (mkA "pursy");
lin purulence_N = mkN "purulence" ;
lin purulent_A = compoundA (mkA "purulent");
lin purvey_V = mkV "purvey" "purveys" "purveyed" "purveyed" "purveying";
lin purvey_V2 = mkV2 (mkV "purvey" "purveys" "purveyed" "purveyed" "purveying");
lin purveyance_N = mkN "purveyance" "purveyances";
lin purveyor_N = mkN "purveyor" "purveyors";
lin purview_N = mkN "purview" "purviews";
lin pus_N = mkN "pus" ;
lin pusan_PN = mkPN "Pusan";
lin push_N = mkN "push" "pushes";
lin push_V = mkV "push" "pushes" "pushed" "pushed" "pushing";
lin push_V2 = mkV2 (mkV "push" "pushes" "pushed" "pushed" "pushing");
lin push_V2V = mkV2V (mkV "push" "pushes" "pushed" "pushed" "pushing") noPrep to_Prep ;
lin push_VS = mkVS (mkV "push" "pushes" "pushed" "pushed" "pushing");
lin push_bike_N = mkN "push-bike" "push-bikes";
lin pushball_N = mkN "pushball" ;
lin pushcart_N = mkN "pushcart" "pushcarts";
lin pushchair_N = mkN "pushchair" "pushchairs";
lin pusher_N = mkN "pusher" "pushers";
lin pushful_A = compoundA (mkA "pushful");
lin pushover_N = mkN "pushover" "pushovers";
lin pushup_N = mkN "pushup" ;
lin pusillanimity_N = mkN "pusillanimity" ;
lin pusillanimous_A = compoundA (mkA "pusillanimous");
lin puss_N = mkN "puss" "IRREG";
lin pussy_N = mkN "pussy" "pussies";
lin pussycat_N = mkN "pussycat" "pussycats";
lin pussyfoot_V = mkV "pussyfoot" "pussyfoots" "pussyfooted" "pussyfooted" "pussyfooting";
lin pustule_N = mkN "pustule" "pustules";
lin put_N = mkN "put" "puts";
lin put_V = IrregEng.put_V;
lin put_V2 = mkV2 (IrregEng.put_V);
lin put_V2V = mkV2V (IrregEng.put_V) noPrep to_Prep ;
lin put_VS = mkVS (IrregEng.put_V);
lin put_down_N = mkN "put-down" "put-downs";
lin put_on_N = mkN "put-on" "put-ons";
lin putamen_N = mkN "putamen" ;
lin putative_A = compoundA (mkA "putative");
lin putdownable_A = mkA "putdownable" ;
lin putoff_N = mkN "putoff" ;
lin putout_N = mkN "putout" ;
lin putrefaction_N = mkN "putrefaction" "putrefactions";
lin putrefactive_A = mkA "putrefactive" ;
lin putrefy_V = mkV "putrefy" "putrefies" "putrefied" "putrefied" "putrefying";
lin putrefy_V2 = mkV2 (mkV "putrefy" "putrefies" "putrefied" "putrefied" "putrefying");
lin putrescence_N = mkN "putrescence" "putrescences";
lin putrescent_A = compoundA (mkA "putrescent");
lin putrescine_N = mkN "putrescine" ;
lin putrid_A = compoundA (mkA "putrid");
lin putridity_N = mkN "putridity" ;
lin putsch_N = mkN "putsch" "putsches";
lin putt_N = mkN "putt" "putts";
lin putt_V = mkV "putt" "putts" "putted" "putted" "putting";
lin putt_V2 = mkV2 (mkV "putt" "putts" "putted" "putted" "putting");
lin puttee_N = mkN "puttee" "puttees";
lin putter_N = mkN "putter" ;
lin putter_V = mkV "putter" "putters" "puttered" "puttered" "puttering";
lin putter_V2 = mkV2 (mkV "putter" "putters" "puttered" "puttered" "puttering");
lin putterer_N = mkN "putterer" ;
lin putting_green_N = mkN "putting-green" "putting-greens";
lin putting_iron_N = mkN "putting-iron" "putting-irons";
lin putty_N = mkN "putty" ;
lin putty_V2 = mkV2 (mkV "putty" "putties" "puttied" "puttied" "puttying");
lin puttyroot_N = mkN "puttyroot" ;
lin putz_N = mkN "putz" ;
lin puzzle_N = mkN "puzzle" "puzzles";
lin puzzle_V = mkV "puzzle" "puzzles" "puzzled" "puzzled" "puzzling";
lin puzzle_V2 = mkV2 (mkV "puzzle" "puzzles" "puzzled" "puzzled" "puzzling");
lin puzzlement_N = mkN "puzzlement" "puzzlements";
lin puzzler_N = mkN "puzzler" "puzzlers";
lin pwllheli_PN = mkPN "Pwllheli";
lin pya_N = mkN "pya" ;
lin pycnidium_N = mkN "pycnidium" ;
lin pycnodysostosis_N = mkN "pycnodysostosis" ;
lin pycnosis_N = mkN "pycnosis" ;
lin pyelitis_N = mkN "pyelitis" ;
lin pyelogram_N = mkN "pyelogram" ;
lin pyelography_N = mkN "pyelography" ;
lin pyelonephritis_N = mkN "pyelonephritis" ;
lin pyemia_N = mkN "pyemia" ;
lin pyemic_A = mkA "pyemic" ;
lin pygmy_N = mkN "pygmy" "pygmies";
lin pyinma_N = mkN "pyinma" ;
lin pyjama_A = compoundA (mkA "pyjama");
lin pyknotic_A = mkA "pyknotic" ;
lin pyle_PN = mkPN "Pyle";
lin pylon_N = mkN "pylon" "pylons";
lin pyloric_A = mkA "pyloric" ;
lin pylorus_N = mkN "pylorus" ;
lin pyocyanase_N = mkN "pyocyanase" ;
lin pyocyanin_N = mkN "pyocyanin" ;
lin pyogenic_A = mkA "pyogenic" ;
lin pyongyang_PN = mkPN "Pyongyang";
lin pyorrhea_N = mkN "pyorrhea" ;
lin pyorrhoea_N = mkN "pyorrhoea" ;
lin pyralid_N = mkN "pyralid" ;
lin pyramid_N = mkN "pyramid" "pyramids";
lin pyramidal_A = mkA "pyramidal" ;
lin pyramidically_Adv = mkAdv "pyramidically" ;
lin pyramiding_N = mkN "pyramiding" ;
lin pyre_N = mkN "pyre" "pyres";
lin pyrectic_A = mkA "pyrectic" ;
lin pyrene_N = mkN "pyrene" ;
lin pyrethrum_N = mkN "pyrethrum" ;
lin pyretic_A = mkA "pyretic" ;
lin pyridine_N = mkN "pyridine" ;
lin pyrilamine_N = mkN "pyrilamine" ;
lin pyrimidine_N = mkN "pyrimidine" ;
lin pyrite_N = mkN "pyrite" ;
lin pyrites_N = mkN "pyrites" ;
lin pyrocellulose_N = mkN "pyrocellulose" ;
lin pyrochemical_A = mkA "pyrochemical" ;
lin pyroelectric_A = mkA "pyroelectric" ;
lin pyroelectricity_N = mkN "pyroelectricity" ;
lin pyrogallic_A = mkA "pyrogallic" ;
lin pyrogallol_N = mkN "pyrogallol" ;
lin pyrogen_N = mkN "pyrogen" ;
lin pyrogenic_A = mkA "pyrogenic" ;
lin pyrograph_N = mkN "pyrograph" ;
lin pyrographer_N = mkN "pyrographer" ;
lin pyrographic_A = mkA "pyrographic" ;
lin pyrography_N = mkN "pyrography" ;
lin pyrolatry_N = mkN "pyrolatry" ;
lin pyroligneous_A = mkA "pyroligneous" ;
lin pyrolusite_N = mkN "pyrolusite" ;
lin pyrolysis_N = mkN "pyrolysis" ;
lin pyrolytic_A = mkA "pyrolytic" ;
lin pyromancer_N = mkN "pyromancer" ;
lin pyromancy_N = mkN "pyromancy" ;
lin pyromania_N = mkN "pyromania" ;
lin pyromaniac_N = mkN "pyromaniac" ;
lin pyrometer_N = mkN "pyrometer" ;
lin pyromorphite_N = mkN "pyromorphite" ;
lin pyrope_N = mkN "pyrope" ;
lin pyrophobia_N = mkN "pyrophobia" ;
lin pyrophosphate_N = mkN "pyrophosphate" ;
lin pyrophyllite_N = mkN "pyrophyllite" ;
lin pyrostat_N = mkN "pyrostat" ;
lin pyrotechnic_A = compoundA (mkA "pyrotechnic");
lin pyrotechnics_N = mkN "pyrotechnics" ;
lin pyroxene_N = mkN "pyroxene" ;
lin pyroxylin_N = mkN "pyroxylin" ;
lin pyrrhic_A = compoundA (mkA "pyrrhic");
lin pyrrhic_N = mkN "pyrrhic" ;
lin pyrrhotite_N = mkN "pyrrhotite" ;
lin pyrrhuloxia_N = mkN "pyrrhuloxia" ;
lin pythium_N = mkN "pythium" ;
lin python_N = mkN "python" "pythons";
lin pythoness_N = mkN "pythoness" ;
lin pyuria_N = mkN "pyuria" ;
lin pyx_N = mkN "pyx" "pyxes";
lin pyxidium_N = mkN "pyxidium" ;
lin pyxie_N = mkN "pyxie" ;
lin pyxis_N = mkN "pyxis" ;
lin qadi_N = mkN "qadi" ;
lin qatar_PN = mkPN "Qatar";
lin qatari_A = compoundA (mkA "qatari");
lin qatari_N = mkN "qatari" "qataris";
lin qc_N = mkN "qc" ;
lin qed_PN = mkPN "Qed";
lin qepiq_N = mkN "qepiq" ;
lin qi_N = mkN "qi" ;
lin qibla_N = mkN "qibla" ;
lin qindarka_N = mkN "qindarka" ;
lin qoph_N = mkN "qoph" ;
lin qt_N = mkN "qt" "qt";
lin quack_Interj = ss "quack";
lin quack_N = mkN "quack" "quacks";
lin quack_V = mkV "quack" "quacks" "quacked" "quacked" "quacking";
lin quack_quack_N = mkN "quack-quack" "quack-quacks";
lin quackery_N = mkN "quackery" ;
lin quad_N = mkN "quad" "quads";
lin quadrangle_N = mkN "quadrangle" "quadrangles";
lin quadrangular_A = compoundA (mkA "quadrangular");
lin quadrant_N = mkN "quadrant" "quadrants";
lin quadrantanopia_N = mkN "quadrantanopia" ;
lin quadraphonic_A = mkA "quadraphonic" ;
lin quadraphony_N = mkN "quadraphony" ;
lin quadrate_A = mkA "quadrate" ;
lin quadrate_N = mkN "quadrate" ;
lin quadratic_A = compoundA (mkA "quadratic");
lin quadratic_N = mkN "quadratic" ;
lin quadratics_N = mkN "quadratics" ;
lin quadrature_N = mkN "quadrature" ;
lin quadrennium_N = mkN "quadrennium" ;
lin quadric_N = mkN "quadric" ;
lin quadriceps_N = mkN "quadriceps" ;
lin quadrilateral_A = compoundA (mkA "quadrilateral");
lin quadrilateral_N = mkN "quadrilateral" "quadrilaterals";
lin quadrille_N = mkN "quadrille" "quadrilles";
lin quadrillion_N = mkN "quadrillion" "quadrillions";
lin quadrillionth_A = mkA "quadrillionth" ;
lin quadripara_N = mkN "quadripara" ;
lin quadripartite_A = mkA "quadripartite" ;
lin quadriplegia_N = mkN "quadriplegia" ;
lin quadriplegic_N = mkN "quadriplegic" ;
lin quadrivium_N = mkN "quadrivium" ;
lin quadroon_N = mkN "quadroon" ;
lin quadrophonic_A = compoundA (mkA "quadrophonic");
lin quadrophony_N = mkN "quadrophony" ;
lin quadrumvirate_N = mkN "quadrumvirate" ;
lin quadruped_N = mkN "quadruped" "quadrupeds";
lin quadrupedal_A = mkA "quadrupedal" ;
lin quadruple_A = compoundA (mkA "quadruple");
lin quadruple_N = mkN "quadruple" "quadruples";
lin quadruple_V = mkV "quadruple" "quadruples" "quadrupled" "quadrupled" "quadrupling";
lin quadruple_V2 = mkV2 (mkV "quadruple" "quadruples" "quadrupled" "quadrupled" "quadrupling");
lin quadruplet_N = mkN "quadruplet" "quadruplets";
lin quadruplicate_A = compoundA (mkA "quadruplicate");
lin quadruplicate_N = mkN "quadruplicate" "quadruplicates";
lin quadruplicate_V2 = mkV2 (mkV "quadruplicate" "quadruplicates" "quadruplicated" "quadruplicated" "quadruplicating");
lin quadrupling_N = mkN "quadrupling" ;
lin quaestor_N = mkN "quaestor" ;
lin quaff_N = mkN "quaff" ;
lin quaff_V = mkV "quaff" "quaffs" "quaffed" "quaffed" "quaffing";
lin quaff_V2 = mkV2 (mkV "quaff" "quaffs" "quaffed" "quaffed" "quaffing");
lin quaffer_N = mkN "quaffer" ;
lin quagga_N = mkN "quagga" "quaggas";
lin quagmire_N = mkN "quagmire" "quagmires";
lin quahaug_N = mkN "quahaug" ;
lin quahog_N = mkN "quahog" ;
lin quai_d'orsay_N = mkN "quai d'orsay" "IRREG";
lin quail_N = mkN "quail" "quails";
lin quail_V = mkV "quail" "quails" "quailed" "quailed" "quailing";
lin quaint_A = mkA "quaint" "quainter";
lin quaintness_N = mkN "quaintness" ;
lin quake_N = mkN "quake" "quakes";
lin quake_V = mkV "quake" "quakes" "quaked" "quaked" "quaking";
lin quaker_N = mkN "quaker" "quakers";
lin qualification_N = mkN "qualification" "qualifications";
lin qualifier_N = mkN "qualifier" "qualifiers";
lin qualify_V = mkV "qualify" "qualifies" "qualified" "qualified" "qualifying";
lin qualify_V2 = mkV2 (mkV "qualify" "qualifies" "qualified" "qualified" "qualifying");
lin qualitative_A = compoundA (mkA "qualitative");
lin quality_A = mkA "quality" ;
lin quality_N = mkN "quality" "qualities";
lin qualm_N = mkN "qualm" "qualms";
lin quandary_N = mkN "quandary" "quandaries";
lin quandong_N = mkN "quandong" ;
lin quango_N = mkN "quango" "quangos";
lin quantal_A = mkA "quantal" ;
lin quantic_N = mkN "quantic" ;
lin quantifiability_N = mkN "quantifiability" ;
lin quantifiable_A = mkA "quantifiable" ;
lin quantification_N = mkN "quantification" ;
lin quantifier_N = mkN "quantifier" ;
lin quantify_V2 = mkV2 (mkV "quantify" "quantifies" "quantified" "quantified" "quantifying");
lin quantitative_A = compoundA (mkA "quantitative");
lin quantity_N = mkN "quantity" "quantities";
lin quantization_N = mkN "quantization" ;
lin quantum_N = mkN "quantum" "quanta" {- FIXME: guessed plural form -};
lin quarantine_N = mkN "quarantine" ;
lin quarantine_V2 = mkV2 (mkV "quarantine" "quarantines" "quarantined" "quarantined" "quarantining");
lin quark_N = mkN "quark" "quarks";
lin quarrel_N = mkN "quarrel" "quarrels";
lin quarrel_V = mkV "quarrel" "quarrels" "quarrelled" "quarrelled" "quarrelling";
lin quarreler_N = mkN "quarreler" ;
lin quarrelsome_A = compoundA (mkA "quarrelsome");
lin quarrelsomeness_N = mkN "quarrelsomeness" ;
lin quarry_N = mkN "quarry" "quarries";
lin quarry_V = mkV "quarry" "quarries" "quarried" "quarried" "quarrying";
lin quarry_V2 = mkV2 (mkV "quarry" "quarries" "quarried" "quarried" "quarrying");
lin quarrying_N = mkN "quarrying" ;
lin quarryman_N = mkN masculine (mkN "quarryman" "quarrymen");
lin quart_N = mkN "quart" "quarts";
lin quartan_A = mkA "quartan" ;
lin quartan_N = mkN "quartan" ;
lin quarter_N = mkN "quarter" "quarters";
lin quarter_V2 = mkV2 (mkV "quarter" "quarters" "quartered" "quartered" "quartering");
lin quarter_day_N = mkN "quarter-day" "quarter-days";
lin quarter_deck_N = mkN "quarter-deck" "quarter-decks";
lin quarter_plate_N = mkN "quarter-plate" "quarter-plates";
lin quarterback_N = mkN "quarterback" ;
lin quarterdeck_N = mkN "quarterdeck" ;
lin quarterfinal_N = mkN "quarterfinal" "quarterfinals";
lin quartering_N = mkN "quartering" "quarterings";
lin quarterlight_N = mkN "quarterlight" "quarterlights";
lin quarterly_A = compoundA (mkA "quarterly");
lin quarterly_Adv = mkAdv "quarterly";
lin quarterly_N = mkN "quarterly" "quarterlies";
lin quartermaster_N = mkN "quartermaster" "quartermasters";
lin quartermaster_general_N = mkN "quartermaster-general" "quartermaster-generals";
lin quarterstaff_N = mkN "quarterstaff" "quarterstaffs";
lin quartet_N = mkN "quartet" "quartets";
lin quartile_N = mkN "quartile" ;
lin quarto_N = mkN "quarto" "quartos";
lin quartz_N = mkN "quartz" ;
lin quartzite_N = mkN "quartzite" ;
lin quartzose_A = mkA "quartzose" ;
lin quasar_N = mkN "quasar" "quasars";
lin quash_V2 = mkV2 (mkV "quash" "quashes" "quashed" "quashed" "quashing");
lin quasiparticle_N = mkN "quasiparticle" ;
lin quassia_N = mkN "quassia" ;
lin quatercentenary_N = mkN "quatercentenary" "quatercentenaries";
lin quatercentennial_N = mkN "quatercentennial" ;
lin quaternate_A = mkA "quaternate" ;
lin quatrain_N = mkN "quatrain" "quatrains";
lin quattrocento_N = mkN "quattrocento" "quattrocentos";
lin quaver_N = mkN "quaver" "quavers";
lin quaver_V = mkV "quaver" "quavers" "quavered" "quavered" "quavering";
lin quaver_V2 = mkV2 (mkV "quaver" "quavers" "quavered" "quavered" "quavering");
lin quaveringly_Adv = mkAdv "quaveringly" ;
lin quay_N = mkN "quay" "quays";
lin queasiness_N = mkN "queasiness" ;
lin queasy_A = mkA "queasy" "queasier";
lin quebec_PN = mkPN "Quebec";
lin queen_N = mkN feminine (mkN "queen" "queens");
lin queen_V2 = mkV2 (mkV "queen" "queens" "queened" "queened" "queening");
lin queenborough_in_sheppey_PN = mkPN "Queenborough-in-sheppey";
lin queenly_A = mkA "queenly" "queenlier";
lin queensbury_PN = mkPN "Queensbury";
lin queensferry_PN = mkPN "Queensferry";
lin queensland_PN = mkPN "Queensland";
lin queer_A = mkA "queer" "queerer";
lin queer_N = mkN "queer" "queers";
lin queer_V2 = mkV2 (mkV "queer" "queers" "queered" "queered" "queering");
lin queerness_N = mkN "queerness" ;
lin quell_V2 = mkV2 (mkV "quell" "quells" "quelled" "quelled" "quelling");
lin quellung_N = mkN "quellung" ;
lin quench_V2 = mkV2 (mkV "quench" "quenches" "quenched" "quenched" "quenching");
lin quenchless_A = compoundA (mkA "quenchless");
lin quentin_PN = mkPN "Quentin";
lin quercitron_N = mkN "quercitron" ;
lin quern_N = mkN "quern" "querns";
lin querulous_A = compoundA (mkA "querulous");
lin querulousness_N = mkN "querulousness" ;
lin query_N = mkN "query" "queries";
lin query_V = mkV "query" "queries" "queried" "queried" "querying";
lin query_V2 = mkV2 (mkV "query" "queries" "queried" "queried" "querying");
lin quesadilla_N = mkN "quesadilla" ;
lin quest_N = mkN "quest" "quests";
lin quest_V = mkV "quest" "quests" "quested" "quested" "questing";
lin question_N = mkN "question" "questions";
lin question_V2 = mkV2 (mkV "question" "questions" "questioned" "questioned" "questioning");
lin question_mark_N = mkN "question-mark" "question-marks";
lin question_master_N = mkN "question-master" "question-masters";
lin questionable_A = compoundA (mkA "questionable");
lin questioner_N = mkN "questioner" "questioners";
lin questioning_A = mkA "questioning" ;
lin questioning_N = mkN "questioning" ;
lin questionnaire_N = mkN "questionnaire" "questionnaires";
lin quetzal_N = mkN "quetzal" "quetzals";
lin queue_N = mkN "queue" "queues";
lin queue_V = mkV "queue" "queues" "queued" "queued" (variants {"queueing"; "queuing"});
lin qui_vive_N = mkN "qui vive" ;
lin quibble_N = mkN "quibble" "quibbles";
lin quibble_V = mkV "quibble" "quibbles" "quibbled" "quibbled" "quibbling";
lin quibbler_N = mkN "quibbler" "quibblers";
lin quiche_N = mkN "quiche" "quiches";
lin quick_A = mkA "quick" "quicker";
lin quick_Adv = mkAdv "quick";
lin quick_N = mkN "quick" ;
lin quick_change_A = compoundA (mkA "quick-change");
lin quick_eared_A = compoundA (mkA "quick-eared");
lin quick_eyed_A = compoundA (mkA "quick-eyed");
lin quick_freeze_V2 = mkV2 (mkV "quick-" IrregEng.freeze_V);
lin quick_sighted_A = compoundA (mkA "quick-sighted");
lin quick_tempered_A = compoundA (mkA "quick-tempered");
lin quick_witted_A = compoundA (mkA "quick-witted");
lin quicken_V = mkV "quicken" "quickens" "quickened" "quickened" "quickening";
lin quicken_V2 = mkV2 (mkV "quicken" "quickens" "quickened" "quickened" "quickening");
lin quickener_N = mkN "quickener" ;
lin quickening_N = mkN "quickening" ;
lin quicker_Adv = mkAdv "quicker";
lin quickest_Adv = mkAdv "quickest";
lin quickie_N = mkN "quickie" "quickies";
lin quicklime_N = mkN "quicklime" ;
lin quickness_N = mkN "quickness" ;
lin quicksand_N = mkN "quicksand" "quicksands";
lin quickset_A = compoundA (mkA "quickset");
lin quickset_N = mkN "quickset" ;
lin quicksilver_N = mkN "quicksilver" ;
lin quickstep_N = mkN "quickstep" "quicksteps";
lin quid_N = mkN "quid" "quid";
lin quid_pro_quo_N = mkN "quid pro quo" "quid pro qui" {- FIXME: guessed plural form -};
lin quiddity_N = mkN "quiddity" ;
lin quiescence_N = mkN "quiescence" "IRREG";
lin quiescent_A = compoundA (mkA "quiescent");
lin quiet_A = mkA "quiet" "quieter";
lin quiet_N = mkN "quiet" ;
lin quiet_V = mkV "quiet" "quiets" "quieted" "quieted" "quieting";
lin quiet_V2 = mkV2 (mkV "quiet" "quiets" "quieted" "quieted" "quieting");
lin quieten_V = mkV "quieten" "quietens" "quietened" "quietened" "quietening";
lin quieten_V2 = mkV2 (mkV "quieten" "quietens" "quietened" "quietened" "quietening");
lin quietism_N = mkN "quietism" ;
lin quietist_N = mkN "quietist" "quietists";
lin quietness_N = mkN "quietness" ;
lin quietude_N = mkN "quietude" "IRREG";
lin quietus_N = mkN "quietus" "quietuses";
lin quiff_N = mkN "quiff" "quiffs";
lin quill_N = mkN "quill" "quills";
lin quill_feather_N = mkN "quill-feather" "quill-feathers";
lin quillwort_N = mkN "quillwort" ;
lin quilt_N = mkN "quilt" "quilts";
lin quilt_V2 = mkV2 (mkV "quilt" "quilts" "quilted" "quilted" "quilting");
lin quilting_N = mkN "quilting" ;
lin quin_N = mkN "quin" "quins";
lin quinacrine_N = mkN "quinacrine" ;
lin quince_N = mkN "quince" "quinces";
lin quincentenary_A = compoundA (mkA "quincentenary");
lin quincentenary_N = mkN "quincentenary" "quincentenaries";
lin quincentennial_A = mkA "quincentennial" ;
lin quincentennial_N = mkN "quincentennial" ;
lin quinidine_N = mkN "quinidine" ;
lin quinine_N = mkN "quinine" ;
lin quinone_N = mkN "quinone" ;
lin quinquagesima_N = mkN "quinquagesima" "quinquagesimas";
lin quinquagesima_PN = mkPN "Quinquagesima";
lin quinquefoliate_A = mkA "quinquefoliate" ;
lin quinquennium_N = mkN "quinquennium" ;
lin quinsy_N = mkN "quinsy" ;
lin quintal_N = mkN "quintal" "quintals";
lin quintessence_N = mkN "quintessence" "quintessences";
lin quintessential_A = mkA "quintessential" ;
lin quintet_N = mkN "quintet" "quintets";
lin quintillion_N = mkN "quintillion" ;
lin quintillionth_A = mkA "quintillionth" ;
lin quintipara_N = mkN "quintipara" ;
lin quintuple_A = mkA "quintuple" ;
lin quintuplet_N = mkN "quintuplet" "quintuplets";
lin quintupling_N = mkN "quintupling" ;
lin quip_N = mkN "quip" "quips";
lin quip_V = mkV "quip" "quips" "quipped" "quipped" "quipping";
lin quip_VS = mkVS (mkV "quip" "quips" "quipped" "quipped" "quipping");
lin quipu_N = mkN "quipu" ;
lin quira_N = mkN "quira" ;
lin quire_N = mkN "quire" "quires";
lin quirk_N = mkN "quirk" "quirks";
lin quirt_N = mkN "quirt" ;
lin quisling_N = mkN "quisling" "quislings";
lin quit_V = variants {mkV "quit" "quits" "quit" "quit" "quitting"; mkV "quit" "quits" "quitted" "quitted" "quitting"};
lin quit_V2 = mkV2 (variants {mkV "quit" "quits" "quit" "quit" "quitting"; mkV "quit" "quits" "quitted" "quitted" "quitting"});
lin quitclaim_N = mkN "quitclaim" ;
lin quite_AdA = mkAdA "quite";
lin quite_Adv = mkAdv "quite" ;
lin quite_Predet = ss "quite";
lin quito_PN = mkPN "Quito";
lin quits_A = compoundA (mkA "quits");
lin quittance_N = mkN "quittance" "quittances";
lin quitter_N = mkN "quitter" "quitters";
lin quiver_N = mkN "quiver" "quivers";
lin quiver_V = mkV "quiver" "quivers" "quivered" "quivered" "quivering";
lin quiver_V2 = mkV2 (mkV "quiver" "quivers" "quivered" "quivered" "quivering");
lin quixotic_A = compoundA (mkA "quixotic");
lin quixotically_Adv = mkAdv "quixotically";
lin quiz_N = mkN "quiz" "quizzes";
lin quiz_V2 = mkV2 (mkV "quiz" "quizzes" "quizzed" "quizzed" "quizzing");
lin quizmaster_N = mkN "quizmaster" "quizmasters";
lin quizzical_A = compoundA (mkA "quizzical");
lin quodlibet_N = mkN "quodlibet" ;
lin quoin_N = mkN "quoin" "quoins";
lin quoit_N = mkN "quoit" "quoits";
lin quoits_N = mkN "quoits" ;
lin quonset_N = mkN "quonset" "quonsets";
lin quorum_N = mkN "quorum" "quorums";
lin quot_V = mkV "quot";
lin quota_N = mkN "quota" "quotas";
lin quotability_N = mkN "quotability" ;
lin quotable_A = compoundA (mkA "quotable");
lin quotation_N = mkN "quotation" "quotations";
lin quote_N = mkN "quote" "quotes";
lin quote_V = mkV "quote";
lin quote_V2 = mkV2 (mkV "quote" "quotes" "quoted" "quoted" "quoting");
lin quoter_N = mkN "quoter" ;
lin quotidian_A = compoundA (mkA "quotidian");
lin quotient_N = mkN "quotient" "quotients";
lin qurush_N = mkN "qurush" ;
lin qv_PN = mkPN "Qv";
lin ra_N = mkN "ra" ;
lin rabato_N = mkN "rabato" ;
lin rabbet_N = mkN "rabbet" ;
lin rabbi_N = mkN "rabbi" "rabbis";
lin rabbinate_N = mkN "rabbinate" ;
lin rabbinical_A = compoundA (mkA "rabbinical");
lin rabbit_N = mkN "rabbit" "rabbits";
lin rabbit_V = mkV "rabbit" "rabbits" "rabbited" "rabbited" "rabbiting";
lin rabbit_burrow_N = mkN "rabbit-burrow" "rabbit-burrows";
lin rabbit_hole_N = mkN "rabbit-hole" "rabbit-holes";
lin rabbit_hutch_N = mkN "rabbit-hutch" "rabbit-hutches";
lin rabbit_punch_N = mkN "rabbit-punch" "rabbit-punches";
lin rabbit_warren_N = mkN "rabbit-warren" "rabbit-warrens";
lin rabbitfish_N = mkN "rabbitfish" ;
lin rabbitweed_N = mkN "rabbitweed" ;
lin rabbitwood_N = mkN "rabbitwood" ;
lin rabble_N = mkN "rabble" "rabbles";
lin rabble_rousing_A = compoundA (mkA "rabble-rousing");
lin rabelaisian_A = compoundA (mkA "rabelaisian");
lin rabid_A = compoundA (mkA "rabid");
lin rabies_N = mkN "rabies" ;
lin raccoon_N = mkN "raccoon" "raccoons";
lin race_N = mkN "race" "races";
lin race_V = mkV "race" "races" "raced" "raced" "racing";
lin race_V2 = mkV2 (mkV "race" "races" "raced" "raced" "racing");
lin race_V2V = mkV2V (mkV "race" "races" "raced" "raced" "racing") noPrep to_Prep ;
lin race_VV = mkVV (mkV "race" "races" "raced" "raced" "racing") ;
lin race_meeting_N = mkN "race-meeting" "race-meetings";
lin raceabout_N = mkN "raceabout" ;
lin racecard_N = mkN "racecard" "racecards";
lin racecourse_N = mkN "racecourse" "racecourses";
lin racehorse_N = mkN "racehorse" "racehorses";
lin raceme_N = mkN "raceme" "racemes";
lin racemose_A = mkA "racemose" ;
lin racer_N = mkN "racer" "racers";
lin racerunner_N = mkN "racerunner" ;
lin racetrack_N = mkN "racetrack" ;
lin raceway_N = mkN "raceway" ;
lin rachel_PN = mkPN "Rachel";
lin rachis_N = mkN "rachis" ;
lin rachitis_N = mkN "rachitis" ;
lin racial_A = compoundA (mkA "racial");
lin racialism_N = mkN "racialism" ;
lin racialist_N = mkN "racialist" "racialists";
lin raciness_N = mkN "raciness" ;
lin racing_N = mkN "racing" ;
lin racism_N = mkN "racism" ;
lin racist_A = mkA "racist" ;
lin racistMasc_N = mkN masculine (mkN "racist" "racists");
lin racistFem_N = mkN feminine (mkN "racist" "racists");
lin rack_N = mkN "rack" "racks";
lin rack_V2 = mkV2 (mkV "rack" "racks" "racked" "racked" "racking");
lin rack_railway_N = mkN "rack-railway" "rack-railways";
lin rack_rent_N = mkN "rack-rent" "rack-rents";
lin racker_N = mkN "racker" ;
lin racket_N = mkN "racket" "rackets";
lin racket_V = mkV "racket" "rackets" "racketed" "racketed" "racketing";
lin racketeer_N = mkN "racketeer" "racketeers";
lin racketeering_N = mkN "racketeering" ;
lin rackety_A = mkA "rackety" ;
lin raconteur_N = mkN "raconteur" "raconteurs";
lin racoon_N = mkN "racoon" "racoons";
lin racquet_N = mkN "racquet" "racquets";
lin racquetball_N = mkN "racquetball" ;
lin racy_A = mkA "racy" "racier";
lin rad_N = mkN "rad" ;
lin rada_PN = mkPN "Rada";
lin radar_N = mkN "radar" ;
lin radcliffe_PN = mkPN "Radcliffe";
lin radcliffe_on_trent_PN = mkPN "Radcliffe on trent";
lin raddled_A = compoundA (mkA "raddled");
lin radial_A = compoundA (mkA "radial");
lin radial_N = mkN "radial" "radials";
lin radian_N = mkN "radian" ;
lin radiance_N = mkN "radiance" ;
lin radiant_A = compoundA (mkA "radiant");
lin radiate_A = mkA "radiate" ;
lin radiate_V = mkV "radiate" "radiates" "radiated" "radiated" "radiating";
lin radiate_V2 = mkV2 (mkV "radiate" "radiates" "radiated" "radiated" "radiating");
lin radiation_N = mkN "radiation" "radiations";
lin radiator_N = mkN "radiator" "radiators";
lin radical_A = compoundA (mkA "radical");
lin radical_N = mkN "radical" "radicals";
lin radicalism_N = mkN "radicalism" ;
lin radicchio_N = mkN "radicchio" ;
lin radicle_N = mkN "radicle" "radicles";
lin radiculitis_N = mkN "radiculitis" ;
lin radio_A = mkA "radio" ;
lin radio_N = mkN "radio" "radios";
lin radio_V2 = mkV2 (mkV "radio");
lin radio_gramophone_N = mkN "radio-gramophone" "radio-gramophones";
lin radio_location_N = mkN "radio-location" "radio-locations";
lin radio_set_N = mkN "radio-set" "radio-sets";
lin radio_telescope_N = mkN "radio-telescope" "radio-telescopes";
lin radioactive_A = compoundA (mkA "radioactive");
lin radioactivity_N = mkN "radioactivity" ;
lin radiobiologist_N = mkN "radiobiologist" ;
lin radiobiology_N = mkN "radiobiology" ;
lin radiocarbon_N = mkN "radiocarbon" ;
lin radiochemistry_N = mkN "radiochemistry" ;
lin radiochlorine_N = mkN "radiochlorine" ;
lin radiogram_N = mkN "radiogram" "radiograms";
lin radiograph_N = mkN "radiograph" "radiographs";
lin radiographer_N = mkN "radiographer" "radiographers";
lin radiographic_A = mkA "radiographic" ;
lin radiography_N = mkN "radiography" ;
lin radioimmunoassay_N = mkN "radioimmunoassay" ;
lin radioisotope_N = mkN "radioisotope" "radioisotopes";
lin radiolarian_N = mkN "radiolarian" ;
lin radiological_A = mkA "radiological" ;
lin radiologist_N = mkN "radiologist" "radiologists";
lin radiology_N = mkN "radiology" ;
lin radiolucent_A = mkA "radiolucent" ;
lin radiolysis_N = mkN "radiolysis" ;
lin radiometer_N = mkN "radiometer" ;
lin radiomicrometer_N = mkN "radiomicrometer" ;
lin radiopacity_N = mkN "radiopacity" ;
lin radiopaque_A = mkA "radiopaque" ;
lin radiopharmaceutical_N = mkN "radiopharmaceutical" ;
lin radiophotograph_N = mkN "radiophotograph" ;
lin radiophotography_N = mkN "radiophotography" ;
lin radioprotection_N = mkN "radioprotection" ;
lin radioscopy_N = mkN "radioscopy" ;
lin radiosensitive_A = mkA "radiosensitive" ;
lin radiotelegraph_N = mkN "radiotelegraph" ;
lin radiotelephone_N = mkN "radiotelephone" ;
lin radiotelephonic_A = mkA "radiotelephonic" ;
lin radiotherapist_N = mkN "radiotherapist" "radiotherapists";
lin radiotherapy_N = mkN "radiotherapy" ;
lin radish_N = mkN "radish" "radishes";
lin radium_N = mkN "radium" ;
lin radius_N = mkN "radius" "radii" {- FIXME: guessed plural form -};
lin radlett_PN = mkPN "Radlett";
lin radome_N = mkN "radome" ;
lin radon_N = mkN "radon" ;
lin radstock_PN = mkPN "Radstock";
lin raf_N = mkN "raf" ;
lin raffia_N = mkN "raffia" ;
lin raffinose_N = mkN "raffinose" ;
lin raffish_A = compoundA (mkA "raffish");
lin raffle_N = mkN "raffle" "raffles";
lin raffle_V2 = mkV2 (mkV "raffle" "raffles" "raffled" "raffled" "raffling");
lin raft_N = mkN "raft" "rafts";
lin raft_V = mkV "raft" "rafts" "rafted" "rafted" "rafting";
lin raft_V2 = mkV2 (mkV "raft" "rafts" "rafted" "rafted" "rafting");
lin rafter_N = mkN "rafter" "rafters";
lin raftered_A = compoundA (mkA "raftered");
lin raftsman_N = mkN masculine (mkN "raftsman" "raftsmen");
lin rag_N = mkN "rag" "rags";
lin rag_V2 = mkV2 (mkV "rag" "rags" "ragged" "ragged" "ragging");
lin rag_day_N = mkN "rag-day" "rag-days";
lin ragamuffin_N = mkN "ragamuffin" "ragamuffins";
lin ragbag_N = mkN "ragbag" "ragbags";
lin rage_N = mkN "rage" "rages";
lin rage_V = mkV "rage" "rages" "raged" "raged" "raging";
lin raggedly_Adv = mkAdv "raggedly" ;
lin raggedness_N = mkN "raggedness" ;
lin raglan_N = mkN "raglan" "raglans";
lin ragout_N = mkN "ragout" "ragouts";
lin ragpicker_N = mkN "ragpicker" ;
lin ragsorter_N = mkN "ragsorter" ;
lin ragtag_N = mkN "ragtag" "ragtags";
lin ragtime_N = mkN "ragtime" ;
lin ragweed_N = mkN "ragweed" ;
lin ragwort_N = mkN "ragwort" ;
lin raid_N = mkN "raid" "raids";
lin raid_V = mkV "raid" "raids" "raided" "raided" "raiding";
lin raid_V2 = mkV2 (mkV "raid" "raids" "raided" "raided" "raiding");
lin raider_N = mkN "raider" "raiders";
lin rail_N = mkN "rail" "rails";
lin rail_V = mkV "rail" "rails" "railed" "railed" "railing";
lin rail_V2 = mkV2 (mkV "rail" "rails" "railed" "railed" "railing");
lin railbird_N = mkN "railbird" ;
lin railcar_N = mkN "railcar" "railcars";
lin railhead_N = mkN "railhead" "railheads";
lin railing_N = mkN "railing" "railings";
lin raillery_N = mkN "raillery" "railleries";
lin railroad_N = mkN "railroad" "railroads";
lin railroad_V2 = mkV2 (mkV "railroad" "railroads" "railroaded" "railroaded" "railroading");
lin railway_N = mkN "railway" "railways";
lin railwayman_N = mkN masculine (mkN "railwayman" "railwaymen");
lin raiment_N = mkN "raiment" ;
lin rain_N = mkN "rain" "rains";
lin rain_V = mkV "rain" "rains" "rained" "rained" "raining";
lin rain_V2 = mkV2 (mkV "rain" "rains" "rained" "rained" "raining");
lin rain_gauge_N = mkN "rain-gauge" "rain-gauges";
lin rainbow_N = mkN "rainbow" "rainbows";
lin raincoat_N = mkN "raincoat" "raincoats";
lin raindrop_N = mkN "raindrop" "raindrops";
lin rainfall_N = mkN "rainfall" "rainfalls";
lin rainford_PN = mkPN "Rainford";
lin rainless_A = mkA "rainless" ;
lin rainmaker_N = mkN "rainmaker" ;
lin rainmaking_N = mkN "rainmaking" ;
lin rainproof_A = compoundA (mkA "rainproof");
lin rainstorm_N = mkN "rainstorm" ;
lin rainwater_N = mkN "rainwater" ;
lin rainy_A = mkA "rainy" "rainier";
lin raisable_A = mkA "raisable" ;
lin raise_N = mkN "raise" "raises";
lin raise_V2 = mkV2 (mkV "raise" "raises" "raised" "raised" "raising");
lin raise_V2V = mkV2V (mkV "raise" "raises" "raised" "raised" "raising") noPrep to_Prep;
lin raiser_N = mkN "raiser" "raisers";
lin raisin_N = mkN "raisin" "raisins";
lin raising_A = mkA "raising" ;
lin raising_N = mkN "raising" ;
lin raison_d'etre_N = mkN "raison d'être" "IRREG";
lin raita_N = mkN "raita" ;
lin raj_N = mkN "raj" "IRREG";
lin raja_N = mkN "raja" ;
lin rajah_N = mkN "rajah" "rajahs";
lin rajanya_N = mkN "rajanya" ;
lin rake_N = mkN "rake" "rakes";
lin rake_V = mkV "rake" "rakes" "raked" "raked" "raking";
lin rake_V2 = mkV2 (mkV "rake" "rakes" "raked" "raked" "raking");
lin rake_off_N = mkN "rake-off" "rake-offs";
lin rakish_A = compoundA (mkA "rakish");
lin rakishness_N = mkN "rakishness" ;
lin rallentando_A = compoundA (mkA "rallentando");
lin rallentando_Adv = mkAdv "rallentando";
lin rally_N = mkN "rally" "rallies";
lin rally_V = mkV "rally" "rallies" "rallied" "rallied" "rallying";
lin rally_V2 = mkV2 (mkV "rally" "rallies" "rallied" "rallied" "rallying");
lin rally_V2V = mkV2V (mkV "rally" "rallies" "rallied" "rallied" "rallying") noPrep to_Prep;
lin rallying_N = mkN "rallying" ;
lin ralph_PN = mkPN "Ralph";
lin ram_N = mkN "ram" "rams";
lin ram_V2 = mkV2 (mkV "ram" "rams" "rammed" "rammed" "ramming");
lin ramadan_N = mkN "ramadan" "ramadans";
lin ramadan_PN = mkPN "Ramadan";
lin ramble_N = mkN "ramble" "rambles";
lin ramble_V = mkV "ramble" "rambles" "rambled" "rambled" "rambling";
lin rambler_N = mkN "rambler" "ramblers";
lin rambunctious_A = compoundA (mkA "rambunctious");
lin rambutan_N = mkN "rambutan" ;
lin ramekin_N = mkN "ramekin" ;
lin ramie_N = mkN "ramie" ;
lin ramification_N = mkN "ramification" "ramifications";
lin ramify_V = mkV "ramify" "ramifies" "ramified" "ramified" "ramifying";
lin ramify_V2 = mkV2 (mkV "ramify" "ramifies" "ramified" "ramified" "ramifying");
lin ramipril_N = mkN "ramipril" ;
lin ramjet_N = mkN "ramjet" "ramjets";
lin rammer_N = mkN "rammer" ;
lin ramp_N = mkN "ramp" "ramps";
lin ramp_V2 = mkV2 (mkV "ramp" "ramps" "ramped" "ramped" "ramping");
lin rampage_N = mkN "rampage" "rampages";
lin rampage_V = mkV "rampage" "rampages" "rampaged" "rampaged" "rampaging";
lin rampageous_A = compoundA (mkA "rampageous");
lin rampant_A = compoundA (mkA "rampant");
lin rampart_N = mkN "rampart" "ramparts";
lin rampion_N = mkN "rampion" ;
lin ramrod_N = mkN "ramrod" "ramrods";
lin ramsbottom_PN = mkPN "Ramsbottom";
lin ramsgate_PN = mkPN "Ramsgate";
lin ramshackle_A = compoundA (mkA "ramshackle");
lin ramus_N = mkN "ramus" ;
lin ranch_N = mkN "ranch" "ranches";
lin rancher_N = mkN "rancher" "ranchers";
lin ranching_N = mkN "ranching" ;
lin rancid_A = compoundA (mkA "rancid");
lin rancidity_N = mkN "rancidity" ;
lin rancidness_N = mkN "rancidness" ;
lin rancorous_A = compoundA (mkA "rancorous");
lin rancour_N = mkN (variants {"rancour"; "rancor"});
lin rand_N = mkN "rand" "rands";
lin randolph_PN = mkPN "Randolph";
lin random_A = mkA "random" ;
lin random_N = mkN "random" "IRREG";
lin randomization_N = mkN "randomization" ;
lin randomized_A = mkA "randomized" ;
lin randomness_N = mkN "randomness" ;
lin randy_A = mkA "randy" "randier";
lin ranee_N = mkN "ranee" "ranees";
lin range_N = mkN "range" "ranges";
lin range_V = mkV "range" "ranges" "ranged" "ranged" "ranging";
lin range_V2 = mkV2 (mkV "range" "ranges" "ranged" "ranged" "ranging");
lin rangefinder_N = mkN "rangefinder" "rangefinders";
lin rangeland_N = mkN "rangeland" ;
lin ranger_N = mkN "ranger" "rangers";
lin rangoon_PN = mkPN "Rangoon";
lin rangpur_N = mkN "rangpur" ;
lin rangy_A = mkA "rangy" ;
lin rani_N = mkN "rani" "ranis";
lin ranitidine_N = mkN "ranitidine" ;
lin rank_A = compoundA (mkA "rank");
lin rank_N = mkN "rank" "ranks";
lin rank_V = mkV "rank" "ranks" "ranked" "ranked" "ranking";
lin rank_V2 = mkV2 (mkV "rank" "ranks" "ranked" "ranked" "ranking");
lin rank_VS = mkVS (mkV "rank" "ranks" "ranked" "ranked" "ranking");
lin ranker_N = mkN "ranker" "rankers";
lin ranking_N = mkN "ranking" "rankings";
lin rankle_V = mkV "rankle" "rankles" "rankled" "rankled" "rankling";
lin rankness_N = mkN "rankness" ;
lin ransack_V2 = mkV2 (mkV "ransack" "ransacks" "ransacked" "ransacked" "ransacking");
lin ransacking_N = mkN "ransacking" ;
lin ransom_N = mkN "ransom" "ransoms";
lin ransom_V2 = mkV2 (mkV "ransom" "ransoms" "ransomed" "ransomed" "ransoming");
lin rant_N = mkN "rant" "rants";
lin rant_V = mkV "rant" "rants" "ranted" "ranted" "ranting";
lin rant_V2 = mkV2 (mkV "rant" "rants" "ranted" "ranted" "ranting");
lin ranter_N = mkN "ranter" "ranters";
lin ranula_N = mkN "ranula" ;
lin rap_N = mkN "rap" "raps";
lin rap_V = mkV "rap" "raps" "rapped" "rapped" "rapping";
lin rap_V2 = mkV2 (mkV "rap" "raps" "rapped" "rapped" "rapping");
lin rapacious_A = compoundA (mkA "rapacious");
lin rapacity_N = mkN "rapacity" ;
lin rape_N = mkN "rape" "rapes";
lin rape_V2 = mkV2 (mkV "rape" "rapes" "raped" "raped" "raping");
lin raper_N = mkN "raper" ;
lin rapeseed_N = mkN "rapeseed" ;
lin raphe_N = mkN "raphe" ;
lin rapid_A = compoundA (mkA "rapid");
lin rapid_N = mkN "rapid" "rapids";
lin rapidity_N = mkN "rapidity" ;
lin rapier_N = mkN "rapier" "rapiers";
lin rapier_thrust_N = mkN "rapier-thrust" "rapier-thrusts";
lin rapine_N = mkN "rapine" ;
lin rapist_N = mkN "rapist" "rapists";
lin rappee_N = mkN "rappee" ;
lin rappel_N = mkN "rappel" ;
lin rapper_N = mkN "rapper" ;
lin rapport_N = mkN "rapport" "rapports";
lin rapporteur_N = mkN "rapporteur" ;
lin rapprochement_N = mkN "rapprochement" "rapprochements";
lin rapscallion_N = mkN "rapscallion" "rapscallions";
lin rapt_A = compoundA (mkA "rapt");
lin raptorial_A = mkA "raptorial" ;
lin rapture_N = mkN "rapture" "raptures";
lin rapturous_A = compoundA (mkA "rapturous");
lin rare_A = mkA "rare" "rarer";
lin rarebit_N = mkN "rarebit" "rarebits";
lin rarefaction_N = mkN "rarefaction" ;
lin rarefy_V = mkV "rarefy" "rarefies" "rarefied" "rarefied" "rarefying";
lin rarefy_V2 = mkV2 (mkV "rarefy" "rarefies" "rarefied" "rarefied" "rarefying");
lin rareness_N = mkN "rareness" ;
lin raring_A = compoundA (mkA "raring");
lin rariora_N = mkN "rariora" ;
lin rarity_N = mkN "rarity" "rarities";
lin rascal_N = mkN "rascal" "rascals";
lin rascality_N = mkN "rascality" ;
lin rascally_A = compoundA (mkA "rascally");
lin rase_V2 = mkV2 (mkV "rase" "rases" "rased" "rased" "rasing");
lin rash_A = mkA "rash" "rasher";
lin rash_N = mkN "rash" "rashes";
lin rasher_N = mkN "rasher" "rashers";
lin rashness_N = mkN "rashness" ;
lin rasp_N = mkN "rasp" "rasps";
lin rasp_V = mkV "rasp" "rasps" "rasped" "rasped" "rasping";
lin rasp_V2 = mkV2 (mkV "rasp" "rasps" "rasped" "rasped" "rasping");
lin raspberry_N = mkN "raspberry" "raspberries";
lin raspingly_Adv = mkAdv "raspingly";
lin raster_N = mkN "raster" ;
lin rat_N = mkN "rat" "rats";
lin rat_V = mkV "rat";
lin rat_V2 = mkV2 (mkV "rat" "rats" "ratted" "ratted" "ratting");
lin rat_a_tat_tat_N = mkN "rat-a-tat-tat" "rat-a-tat-tats";
lin rat_tat_N = mkN "rat-tat" "rat-tats";
lin ratability_N = mkN "ratability" ;
lin ratable_A = compoundA (mkA "ratable");
lin ratables_N = mkN "ratables" ;
lin ratafia_N = mkN "ratafia" ;
lin ratan_N = mkN "ratan" "ratans";
lin ratatouille_N = mkN "ratatouille" ;
lin ratch_N = mkN "ratch" "ratches";
lin ratchet_N = mkN "ratchet" "ratchets";
lin rate_N = mkN "rate" "rates";
lin rate_V = mkV "rate" "rates" "rated" "rated" "rating";
lin rate_V2 = mkV2 (mkV "rate" "rates" "rated" "rated" "rating");
lin rate_VA = mkVA (mkV "rate" "rates" "rated" "rated" "rating");
lin rate_VS = mkVS (mkV "rate" "rates" "rated" "rated" "rating");
lin rateability_N = mkN "rateability" ;
lin rateable_A = compoundA (mkA "rateable");
lin ratel_N = mkN "ratel" ;
lin ratepayer_N = mkN "ratepayer" "ratepayers";
lin rates_N = mkN "rates" ;
lin rather_Adv = mkAdv "rather";
lin rathole_N = mkN "rathole" ;
lin rathskeller_N = mkN "rathskeller" ;
lin ratification_N = mkN "ratification" "ratifications";
lin ratify_V2 = mkV2 (mkV "ratify" "ratifies" "ratified" "ratified" "ratifying");
lin rating_N = mkN "rating" "ratings";
lin ratio_N = mkN "ratio" "ratios";
lin ratiocination_N = mkN "ratiocination" ;
lin ratiocinative_A = mkA "ratiocinative" ;
lin ration_N = mkN "ration" "rations";
lin ration_V2 = mkV2 (mkV "ration" "rations" "rationed" "rationed" "rationing");
lin rational_A = compoundA (mkA "rational");
lin rationale_N = mkN "rationale" "rationales";
lin rationalism_N = mkN "rationalism" ;
lin rationalist_A = mkA "rationalist" ;
lin rationalistMasc_N = mkN masculine (mkN "rationalist" "rationalists");
lin rationalistFem_N = mkN feminine (mkN "rationalist" "rationalists");
lin rationalistic_A = compoundA (mkA "rationalistic");
lin rationality_N = mkN "rationality" "rationalities";
lin rationalization_N = mkN "rationalization" "rationalizations";
lin rationalize_V2 = mkV2 (mkV "rationalize" "rationalizes" "rationalized" "rationalized" "rationalizing");
lin rationing_N = mkN "rationing" ;
lin ratite_N = mkN "ratite" ;
lin ratlike_A = mkA "ratlike" ;
lin ratlin_N = mkN "ratlin" "ratlins";
lin ratline_N = mkN "ratline" "ratlines";
lin rattan_N = mkN "rattan" "rattans";
lin ratter_N = mkN "ratter" "ratters";
lin rattle_N = mkN "rattle" "rattles";
lin rattle_V = mkV "rattle" "rattles" "rattled" "rattled" "rattling";
lin rattle_V2 = mkV2 (mkV "rattle" "rattles" "rattled" "rattled" "rattling");
lin rattlebrained_A = compoundA (mkA "rattlebrained");
lin rattlepated_A = compoundA (mkA "rattlepated");
lin rattler_N = mkN "rattler" "rattlers";
lin rattlesnake_N = mkN "rattlesnake" "rattlesnakes";
lin rattling_Adv = mkAdv "rattling";
lin rattrap_N = mkN "rattrap" ;
lin ratty_A = mkA "ratty" "rattier";
lin raucous_A = compoundA (mkA "raucous");
lin raunchy_A = mkA "raunchy" ;
lin rauwolfia_N = mkN "rauwolfia" ;
lin ravage_N = mkN "ravage" "ravages";
lin ravage_V = mkV "ravage" "ravages" "ravaged" "ravaged" "ravaging";
lin ravage_V2 = mkV2 (mkV "ravage" "ravages" "ravaged" "ravaged" "ravaging");
lin ravaging_N = mkN "ravaging" ;
lin rave_N = mkN "rave" "raves";
lin rave_V = mkV "rave" "raves" "raved" "raved" "raving";
lin rave_V2 = mkV2 (mkV "rave" "raves" "raved" "raved" "raving");
lin rave_up_N = mkN "rave-up" "rave-ups";
lin ravehook_N = mkN "ravehook" ;
lin ravel_V = mkV "ravel" "ravels" "ravelled" "ravelled" "ravelling";
lin ravel_V2 = mkV2 (mkV "ravel" "ravels" "ravelled" "ravelled" "ravelling");
lin raveling_N = mkN "raveling" ;
lin raven_N = mkN "raven" "ravens";
lin ravening_A = compoundA (mkA "ravening");
lin ravenna_PN = mkPN "Ravenna";
lin ravenous_A = compoundA (mkA "ravenous");
lin raver_N = mkN "raver" "ravers";
lin ravigote_N = mkN "ravigote" ;
lin ravine_N = mkN "ravine" "ravines";
lin raving_Adv = mkAdv "raving";
lin raving_N = mkN "raving" ;
lin ravioli_N = mkN "ravioli" "raviolis";
lin ravish_V2 = mkV2 (mkV "ravish" "ravishes" "ravished" "ravished" "ravishing");
lin ravishing_A = mkA "ravishing" ;
lin ravishment_N = mkN "ravishment" "ravishments";
lin raw_A = compoundA (mkA "raw");
lin raw_N = mkN "raw" "IRREG";
lin rawboned_A = compoundA (mkA "rawboned");
lin rawhide_A = compoundA (mkA "rawhide");
lin rawhide_N = mkN "rawhide" ;
lin rawness_N = mkN "rawness" ;
lin rawtenstall_PN = mkPN "Rawtenstall";
lin ray_N = mkN "ray" "rays";
lin ray_PN = mkPN "Ray";
lin ray_V = mkV "ray" "rays" "rayed" "rayed" "raying";
lin ray_V2 = mkV2 (mkV "ray" "rays" "rayed" "rayed" "raying");
lin rayless_A = mkA "rayless" ;
lin raymond_PN = mkPN "Raymond";
lin rayon_N = mkN "rayon" ;
lin razbliuto_N = mkN "razbliuto" ;
lin raze_V2 = mkV2 (mkV "raze" "razes" "razed" "razed" "razing");
lin razing_N = mkN "razing" ;
lin razor_N = mkN "razor" "razors";
lin razor_V2 = mkV2 (mkV "razor" "razors" "razored" "razored" "razoring");
lin razor_edge_N = mkN "razor-edge" "razor-edges";
lin razorback_A = mkA "razorback" ;
lin razorback_N = mkN "razorback" "razorbacks";
lin razorbacked_A = compoundA (mkA "razorbacked");
lin razorbill_N = mkN "razorbill" ;
lin razorblade_N = mkN "razorblade" "razorblades";
lin razzle_N = mkN "razzle" "IRREG";
lin razzle_dazzle_N = mkN "razzle-dazzle" "IRREG";
lin rc_PN = mkPN "Rc";
lin rd_PN = mkPN "Rd";
lin re_N = mkN "re" "IRREG";
lin re_address_V2 = mkV2 (mkV "re-address" "re-addresses" "re-addressed" "re-addressed" "re-addressing");
lin re_afforest_V2 = mkV2 (mkV "re-afforest" "re-afforests" "re-afforested" "re-afforested" "re-afforesting");
lin re_afforestation_N = mkN "re-afforestation" "re-afforestations";
lin re_count_N = mkN "re-count" "re-counts";
lin re_count_V2 = mkV2 (mkV "re-count" "re-counts" "re-counted" "re-counted" "re-counting");
lin re_cover_V2 = mkV2 (mkV "re-cover" "re-covers" "re-covered" "re-covered" "re-covering");
lin re_create_V2 = mkV2 (mkV "re-create");
lin re_echo_N = mkN "re-echo" "re-echoes";
lin re_echo_V = mkV "re-echo" "re-echos" "re-echoed" "re-echoed" "re-echoing";
lin re_elect_V2 = mkV2 (mkV "re-elect");
lin re_emerge_V = mkV "re-emerge";
lin re_emphasize_V2 = mkV2 (mkV "re-emphasize");
lin re_enter_V = mkV "re-enter";
lin re_enter_V2 = mkV2 (mkV "re-enter");
lin re_entry_N = mkN "re-entry" "re-entries";
lin re_establish_V2 = mkV2 (mkV "re-establish");
lin re_evaluate_V2 = mkV2 (mkV "re-evaluate");
lin re_examine_V2 = mkV2 (mkV "re-examine");
lin re_form_V = mkV "re-form" "re-forms" "re-formed" "re-formed" "re-forming";
lin re_form_V2 = mkV2 (mkV "re-form" "re-forms" "re-formed" "re-formed" "re-forming");
lin re_formation_N = mkN "re-formation" "re-formations";
lin re_join_V2 = mkV2 (mkV "re-join" "re-joins" "re-joined" "re-joined" "re-joining");
lin re_supply_V2 = mkV2 (mkV "re-supply");
lin reach_N = mkN "reach" "reaches";
lin reach_V = mkV "reach" "reaches" "reached" "reached" "reaching";
lin reach_V2 = mkV2 (mkV "reach" "reaches" "reached" "reached" "reaching");
lin reach_V2V = mkV2V (mkV "reach" "reaches" "reached" "reached" "reaching") noPrep to_Prep ;
lin reach_VA = mkVA (mkV "reach" "reaches" "reached" "reached" "reaching");
lin react_V = mkV "react" "reacts" "reacted" "reacted" "reacting";
lin reactance_N = mkN "reactance" ;
lin reactant_N = mkN "reactant" ;
lin reaction_N = mkN "reaction" "reactions";
lin reactionary_A = mkA "reactionary" ;
lin reactionary_N = mkN "reactionary" "reactionaries";
lin reactionism_N = mkN "reactionism" ;
lin reactivate_V2 = mkV2 (mkV "reactivate");
lin reactive_A = mkA "reactive" ;
lin reactivity_N = mkN "reactivity" ;
lin reactor_N = mkN "reactor" "reactors";
lin read_N = mkN "read" "IRREG";
lin read_V = IrregEng.read_V;
lin read_V2 = mkV2 (IrregEng.read_V);
lin read_VA = mkVA (IrregEng.read_V);
lin read_VS = mkVS (IrregEng.read_V);
lin readability_N = mkN "readability" ;
lin readable_A = compoundA (mkA "readable");
lin reader_N = mkN "reader" "readers";
lin readership_N = mkN "readership" "readerships";
lin readiness_N = mkN "readiness" ;
lin reading_N = mkN "reading" "readings";
lin reading_PN = mkPN "Reading";
lin reading_lamp_N = mkN "reading-lamp" "reading-lamps";
lin reading_room_N = mkN "reading-room" "reading-rooms";
lin readjust_V2 = mkV2 (mkV "readjust" "readjusts" "readjusted" "readjusted" "readjusting");
lin readjustment_N = mkN "readjustment" "readjustments";
lin readmission_N = mkN "readmission" "readmissions";
lin readmit_V2 = mkV2 (mkV "readmit" "readmits" "readmitted" "readmitted" "readmitting");
lin readout_N = mkN "readout" ;
lin ready_A = mkA "ready" "readier";
lin ready_N = mkN "ready" "readies";
lin ready_V2 = mkV2 (mkV "ready");
lin ready_made_A = compoundA (mkA "ready-made");
lin reaffiliation_N = mkN "reaffiliation" "reaffiliations";
lin reaffirm_V2 = mkV2 (mkV "reaffirm" "reaffirms" "reaffirmed" "reaffirmed" "reaffirming");
lin reagent_N = mkN "reagent" "reagents";
lin reagin_N = mkN "reagin" ;
lin real_A = compoundA (mkA "real");
lin real_N = mkN "real" "reals";
lin realgar_N = mkN "realgar" ;
lin realign_V2 = mkV2 (mkV "realign");
lin realism_N = mkN "realism" ;
lin realist_N = mkN "realist" "realists";
lin realistic_A = compoundA (mkA "realistic");
lin realistically_Adv = mkAdv "realistically";
lin reality_N = mkN "reality" "realities";
lin realizable_A = compoundA (mkA "realizable");
lin realization_N = mkN "realization" ;
lin realize_V2 = mkV2 (mkV "realize" "realizes" "realized" "realized" "realizing");
lin realize_VS = mkVS (mkV "realize");
lin reallocation_N = mkN "reallocation" "reallocations";
lin reallotment_N = mkN "reallotment" ;
lin realm_N = mkN "realm" "realms";
lin realpolitik_N = mkN "realpolitik" ;
lin realtor_N = mkN "realtor" "realtors";
lin realty_N = mkN "realty" "realties";
lin ream_N = mkN "ream" "reams";
lin reamer_N = mkN "reamer" ;
lin reanimate_V2 = mkV2 (mkV "reanimate" "reanimates" "reanimated" "reanimated" "reanimating");
lin reap_V = mkV "reap" "reaps" "reaped" "reaped" "reaping";
lin reap_V2 = mkV2 (mkV "reap" "reaps" "reaped" "reaped" "reaping");
lin reaper_N = mkN "reaper" "reapers";
lin reaping_hook_N = mkN "reaping-hook" "reaping-hooks";
lin reappear_V = mkV "reappear" "reappears" "reappeared" "reappeared" "reappearing";
lin reappearance_N = mkN "reappearance" "reappearances";
lin reappoint_V = mkV "reappoint";
lin reappoint_V2 = mkV2 (mkV "reappoint");
lin reappraisal_N = mkN "reappraisal" "reappraisals";
lin reappraise_V2 = mkV2 (mkV "reappraise");
lin rear_N = mkN "rear" "rears";
lin rear_V = mkV "rear" "rears" "reared" "reared" "rearing";
lin rear_V2 = mkV2 (mkV "rear" "rears" "reared" "reared" "rearing");
lin rear_admiral_N = mkN "rear-admiral" "rear-admirals";
lin rearguard_N = mkN "rearguard" "rearguards";
lin rearm_V = mkV "rearm" "rearms" "rearmed" "rearmed" "rearming";
lin rearm_V2 = mkV2 (mkV "rearm" "rearms" "rearmed" "rearmed" "rearming");
lin rearmament_N = mkN "rearmament" "rearmaments";
lin rearmost_A = compoundA (mkA "rearmost");
lin rearrange_V2 = mkV2 (mkV "rearrange" "rearranges" "rearranged" "rearranged" "rearranging");
lin rearrangement_N = mkN "rearrangement" "rearrangements";
lin rearward_A = mkA "rearward" ;
lin rearward_N = mkN "rearward" "rearwards";
lin rearwards_Adv = mkAdv "rearwards";
lin reason_N = mkN "reason" "reasons";
lin reason_V = mkV "reason" "reasons" "reasoned" "reasoned" "reasoning";
lin reason_V2 = mkV2 (mkV "reason" "reasons" "reasoned" "reasoned" "reasoning");
lin reason_VS = mkVS (mkV "reason" "reasons" "reasoned" "reasoned" "reasoning");
lin reasonable_A = compoundA (mkA "reasonable");
lin reasonableness_N = mkN "reasonableness" ;
lin reasoner_N = mkN "reasoner" ;
lin reasoning_N = mkN "reasoning" ;
lin reasonless_A = compoundA (mkA "reasonless");
lin reassemble_V = mkV "reassemble" "reassembles" "reassembled" "reassembled" "reassembling";
lin reassemble_V2 = mkV2 (mkV "reassemble" "reassembles" "reassembled" "reassembled" "reassembling");
lin reassembly_N = mkN "reassembly" ;
lin reassert_V2 = mkV2 (mkV "reassert");
lin reassertion_N = mkN "reassertion" ;
lin reassess_V2 = mkV2 (mkV "reassess" "reassesses" "reassessed" "reassessed" "reassessing");
lin reassessment_N = mkN "reassessment" "reassessments";
lin reassign_V2 = mkV2 (mkV "reassign");
lin reassignment_N = mkN "reassignment" ;
lin reassume_V2 = mkV2 (mkV "reassume");
lin reassurance_N = mkN "reassurance" "reassurances";
lin reassure_V2 = mkV2 (mkV "reassure" "reassures" "reassured" "reassured" "reassuring");
lin reassure_V2S = mkV2S (mkV "reassure") noPrep;
lin reassuring_A = compoundA (mkA "reassuring");
lin reattribute_V2 = mkV2 (mkV "reattribute" "reattributes" "reattributed" "reattributed" "reattributing");
lin rebarbative_A = compoundA (mkA "rebarbative");
lin rebate_N = mkN "rebate" "rebates";
lin rebecca_PN = mkPN "Rebecca";
lin rebel_N = mkN human (mkN "rebel" "rebels");
lin rebel_V = mkV "rebel" "rebels" "rebelled" "rebelled" "rebelling";
lin rebellion_N = mkN "rebellion" "rebellions";
lin rebellious_A = compoundA (mkA "rebellious");
lin rebelliousness_N = mkN "rebelliousness" ;
lin rebind_V2 = mkV2 (mkV "re" IrregEng.bind_V);
lin rebirth_N = mkN "rebirth" "rebirths";
lin reborn_A = compoundA (mkA "reborn");
lin rebound_N = mkN "rebound" "rebounds";
lin rebound_V = mkV "rebound" "rebounds" "rebounded" "rebounded" "rebounding";
lin rebound_V2 = mkV2 (mkV "rebound" "rebounds" "rebounded" "rebounded" "rebounding");
lin rebound_V2V = mkV2V (mkV "rebound" "rebounds" "rebounded" "rebounded" "rebounding") noPrep to_Prep ;
lin reboxetine_N = mkN "reboxetine" ;
lin rebozo_N = mkN "rebozo" ;
lin rebroadcast_N = mkN "rebroadcast" ;
lin rebuff_N = mkN "rebuff" "rebuffs";
lin rebuff_V = mkV "rebuff";
lin rebuff_V2 = mkV2 (mkV "rebuff" "rebuffs" "rebuffed" "rebuffed" "rebuffing");
lin rebuild_V2 = mkV2 (mkV "re" IrregEng.build_V);
lin rebuilding_N = mkN "rebuilding" ;
lin rebuke_N = mkN "rebuke" "rebukes";
lin rebuke_V2 = mkV2 (mkV "rebuke" "rebukes" "rebuked" "rebuked" "rebuking");
lin rebukingly_Adv = mkAdv "rebukingly";
lin reburying_N = mkN "reburying" ;
lin rebus_N = mkN "rebus" "rebuses";
lin rebut_V2 = mkV2 (mkV "rebut" "rebuts" "rebutted" "rebutted" "rebutting");
lin rebuttal_N = mkN "rebuttal" "rebuttals";
lin rebutter_N = mkN "rebutter" ;
lin rec_PN = mkPN "Rec";
lin recalcitrance_N = mkN "recalcitrance" ;
lin recalcitrancy_N = mkN "recalcitrancy" ;
lin recalcitrant_A = compoundA (mkA "recalcitrant");
lin recalculate_V2 = mkV2 (mkV "recalculate");
lin recalculation_N = mkN "recalculation" ;
lin recall_N = mkN "recall" "recalls";
lin recall_V2 = mkV2 (mkV "recall" "recalls" "recalled" "recalled" "recalling");
lin recall_VS = mkVS (mkV "recall");
lin recant_V = mkV "recant" "recants" "recanted" "recanted" "recanting";
lin recant_V2 = mkV2 (mkV "recant" "recants" "recanted" "recanted" "recanting");
lin recantation_N = mkN "recantation" "recantations";
lin recap_N = mkN "recap" "recaps";
lin recap_V = mkV "recap" "recaps" "recapped" "recapped" "recapping";
lin recap_V2 = mkV2 (mkV "recap" "recaps" "recapped" "recapped" "recapping");
lin recapitulate_V = mkV "recapitulate" "recapitulates" "recapitulated" "recapitulated" "recapitulating";
lin recapitulate_V2 = mkV2 (mkV "recapitulate" "recapitulates" "recapitulated" "recapitulated" "recapitulating");
lin recapitulation_N = mkN "recapitulation" "recapitulations";
lin recapture_N = mkN "recapture" ;
lin recapture_V2 = mkV2 (mkV "recapture" "recaptures" "recaptured" "recaptured" "recapturing");
lin recast_V2 = mkV2 (mkV "re" IrregEng.cast_V);
lin recce_N = mkN "recce" "recces";
lin recd_PN = mkPN "Recd";
lin recede_V = mkV "recede" "recedes" "receded" "receded" "receding";
lin receding_N = mkN "receding" ;
lin receipt_N = mkN "receipt" "receipts";
lin receipt_V2 = mkV2 (mkV "receipt" "receipts" "receipted" "receipted" "receipting");
lin receivable_A = compoundA (mkA "receivable");
lin receivable_N = mkN "receivable" ;
lin receive_V = mkV "receive" "receives" "received" "received" "receiving";
lin receive_V2 = mkV2 (mkV "receive" "receives" "received" "received" "receiving");
lin receiver_N = mkN "receiver" "receivers";
lin receivership_N = mkN "receivership" "receiverships";
lin receiving_set_N = mkN "receiving-set" "receiving-sets";
lin recency_N = mkN "recency" ;
lin recent_A = compoundA (mkA "recent");
lin recentralize_V2 = mkV2 (mkV "recentralize");
lin receptacle_N = mkN "receptacle" "receptacles";
lin reception_N = mkN "reception" "receptions";
lin reception_desk_N = mkN "reception-desk" "reception-desks";
lin receptionist_N = mkN "receptionist" "receptionists";
lin receptive_A = compoundA (mkA "receptive");
lin receptiveness_N = mkN "receptiveness" ;
lin receptivity_N = mkN "receptivity" ;
lin receptor_N = mkN "receptor" ;
lin recess_N = mkN "recess" "recesses";
lin recess_V2 = mkV2 (mkV "recess" "recesses" "recessed" "recessed" "recessing");
lin recession_N = mkN "recession" "recessions";
lin recessional_A = compoundA (mkA "recessional");
lin recessional_N = mkN "recessional" "recessionals";
lin recessionary_A = mkA "recessionary" ;
lin recessive_A = compoundA (mkA "recessive");
lin rechargeable_A = mkA "rechargeable" ;
lin rechauffe_N = mkN "réchauffé" "réchauffés";
lin recherche_A = compoundA (mkA "recherché");
lin recidivism_N = mkN "recidivism" ;
lin recidivist_N = mkN "recidivist" "recidivists";
lin recife_PN = mkPN "Recife";
lin recipe_N = mkN "recipe" "recipes";
lin recipient_N = mkN "recipient" "recipients";
lin reciprocal_A = compoundA (mkA "reciprocal");
lin reciprocal_N = mkN "reciprocal" "reciprocals";
lin reciprocality_N = mkN "reciprocality" ;
lin reciprocate_V = mkV "reciprocate" "reciprocates" "reciprocated" "reciprocated" "reciprocating";
lin reciprocate_V2 = mkV2 (mkV "reciprocate" "reciprocates" "reciprocated" "reciprocated" "reciprocating");
lin reciprocation_N = mkN "reciprocation" ;
lin reciprocative_A = mkA "reciprocative" ;
lin reciprocity_N = mkN "reciprocity" ;
lin recirculation_N = mkN "recirculation" ;
lin recission_N = mkN "recission" ;
lin recital_N = mkN "recital" "recitals";
lin recitalist_N = mkN "recitalist" "recitalists";
lin recitation_N = mkN "recitation" "recitations";
lin recitative_N = mkN "recitative" "recitatives";
lin recite_V = mkV "recite" "recites" "recited" "recited" "reciting";
lin recite_V2 = mkV2 (mkV "recite" "recites" "recited" "recited" "reciting");
lin reciter_N = mkN "reciter" ;
lin reckless_A = compoundA (mkA "reckless");
lin recklessness_N = mkN "recklessness" ;
lin recklinghausen_PN = mkPN "Recklinghausen";
lin reckon_V = mkV "reckon" "reckons" "reckoned" "reckoned" "reckoning";
lin reckon_V2 = mkV2 (mkV "reckon" "reckons" "reckoned" "reckoned" "reckoning");
lin reckon_VS = mkVS (mkV "reckon" "reckons" "reckoned" "reckoned" "reckoning");
lin reckoner_N = mkN "reckoner" "reckoners";
lin reckoning_N = mkN "reckoning" "reckonings";
lin reclaim_V2 = mkV2 (mkV "reclaim" "reclaims" "reclaimed" "reclaimed" "reclaiming");
lin reclaimable_A = mkA "reclaimable" ;
lin reclamation_N = mkN "reclamation" ;
lin reclassification_N = mkN "reclassification" ;
lin reclassify_V2 = mkV2 (mkV "reclassify");
lin recline_V = mkV "recline" "reclines" "reclined" "reclined" "reclining";
lin recline_V2 = mkV2 (mkV "recline" "reclines" "reclined" "reclined" "reclining");
lin recliner_N = mkN "recliner" ;
lin reclining_N = mkN "reclining" ;
lin recluse_A = mkA "recluse" ;
lin recluse_N = mkN "recluse" "recluses";
lin reclusiveness_N = mkN "reclusiveness" ;
lin recoding_N = mkN "recoding" ;
lin recognition_N = mkN "recognition" ;
lin recognizable_A = compoundA (mkA "recognizable");
lin recognizance_N = mkN "recognizance" "recognizances";
lin recognize_1_V2 = mkV2 (mkV "recognize" "recognizes" "recognized" "recognized" "recognizing");
lin recognize_4_V2 = mkV2 (mkV "recognize" "recognizes" "recognized" "recognized" "recognizing");
lin recognize_VS = mkVS (mkV "recognize");
lin recoil_N = mkN "recoil" "recoils";
lin recoil_V = mkV "recoil" "recoils" "recoiled" "recoiled" "recoiling";
lin recoilless_A = mkA "recoilless" ;
lin recollect_V = mkV "recollect" "recollects" "recollected" "recollected" "recollecting";
lin recollect_V2 = mkV2 (mkV "recollect" "recollects" "recollected" "recollected" "recollecting");
lin recollection_N = mkN "recollection" "recollections";
lin recombinant_A = mkA "recombinant" ;
lin recombinant_N = mkN "recombinant" ;
lin recombination_N = mkN "recombination" ;
lin recommend_V2 = mkV2 (mkV "recommend");
lin recommend_V2V = mkV2V (mkV "recommend") (variants {mkPrep "that"; noPrep}) noPrep;
lin recommendation_N = mkN "recommendation" "recommendations";
lin recommit_V2 = mkV2 (mkV "recommit" "recommits" "recommitted" "recommitted" "recommitting");
lin recompense_N = mkN "recompense" "recompenses";
lin recompense_V2 = mkV2 (mkV "recompense" "recompenses" "recompensed" "recompensed" "recompensing");
lin reconcilable_A = compoundA (mkA "reconcilable");
lin reconcile_V2 = mkV2 (mkV "reconcile" "reconciles" "reconciled" "reconciled" "reconciling");
lin reconciliation_N = mkN "reconciliation" "reconciliations";
lin recondite_A = compoundA (mkA "recondite");
lin reconditeness_N = mkN "reconditeness" ;
lin recondition_V2 = mkV2 (mkV "recondition" "reconditions" "reconditioned" "reconditioned" "reconditioning");
lin reconfiguration_N = mkN "reconfiguration";
lin reconnaissance_N = mkN "reconnaissance" "reconnaissances";
lin reconnoitre_V = mkV "reconnoitre" "reconnoitres" "reconnoitred" "reconnoitred" "reconnoitring";
lin reconnoitre_V2 = mkV2 (mkV "reconnoitre" "reconnoitres" "reconnoitred" "reconnoitred" "reconnoitring");
lin reconsecrate_V2 = mkV2 (mkV "reconsecrate" "reconsecrates" "reconsecrated" "reconsecrated" "reconsecrating");
lin reconsider_V2 = mkV2 (mkV "reconsider" "reconsiders" "reconsidered" "reconsidered" "reconsidering");
lin reconsider_VS = mkVS (mkV "reconsider" "reconsiders" "reconsidered" "reconsidered" "reconsidering");
lin reconsideration_N = mkN "reconsideration" ;
lin reconstruct_V2 = mkV2 (mkV "reconstruct" "reconstructs" "reconstructed" "reconstructed" "reconstructing");
lin reconstruction_N = mkN "reconstruction" "reconstructions";
lin reconstructive_A = mkA "reconstructive" ;
lin reconvict_V2 = mkV2 (mkV "reconvict" "reconvicts" "reconvicted" "reconvicted" "reconvicting");
lin record_N = mkN "record" "records";
lin record_V2 = mkV2 (mkV "record" "records" "recorded" "recorded" "recording");
lin record_breaking_A = compoundA (mkA "record-breaking");
lin record_player_N = mkN "record-player" "record-players";
lin recorder_N = mkN "recorder" "recorders";
lin recording_N = mkN "recording" "recordings";
lin recount_N = mkN "recount" ;
lin recount_V2 = mkV2 (mkV "recount" "recounts" "recounted" "recounted" "recounting");
lin recount_VS = mkVS (mkV "recount");
lin recoup_V2 = mkV2 (mkV "recoup" "recoups" "recouped" "recouped" "recouping");
lin recourse_N = mkN "recourse" ;
lin recover_V = mkV "recover" "recovers" "recovered" "recovered" "recovering";
lin recover_V2 = mkV2 (mkV "recover" "recovers" "recovered" "recovered" "recovering");
lin recover_V2V = mkV2V (mkV "recover" "recovers" "recovered" "recovered" "recovering") noPrep to_Prep;
lin recoverable_A = compoundA (mkA "recoverable");
lin recovery_N = mkN "recovery" "recoveries";
lin recreant_A = compoundA (mkA "recreant");
lin recreant_N = mkN "recreant" "recreants";
lin recreate_V2 = mkV2 (mkV "recreate" "recreates" "recreated" "recreated" "recreating");
lin recreation_N = mkN "recreation" "recreations";
lin recreational_A = compoundA (mkA "recreational");
lin recriminate_V = mkV "recriminate" "recriminates" "recriminated" "recriminated" "recriminating";
lin recrimination_N = mkN "recrimination" "recriminations";
lin recriminative_A = mkA "recriminative" ;
lin recriminatory_A = compoundA (mkA "recriminatory");
lin recrudescence_N = mkN "recrudescence" "recrudescences";
lin recrudescent_A = mkA "recrudescent" ;
lin recruit_N = mkN "recruit" "recruits";
lin recruit_V = mkV "recruit" "recruits" "recruited" "recruited" "recruiting";
lin recruit_V2 = mkV2 (mkV "recruit" "recruits" "recruited" "recruited" "recruiting");
lin recruiter_N = mkN "recruiter" ;
lin recruitment_N = mkN "recruitment" "recruitments";
lin rectal_A = compoundA (mkA "rectal");
lin rectangle_N = mkN "rectangle" "rectangles";
lin rectangular_A = compoundA (mkA "rectangular");
lin rectangularity_N = mkN "rectangularity" ;
lin rectification_N = mkN "rectification" "rectifications";
lin rectifier_N = mkN "rectifier" "rectifiers";
lin rectify_V2 = mkV2 (mkV "rectify" "rectifies" "rectified" "rectified" "rectifying");
lin rectilinear_A = compoundA (mkA "rectilinear");
lin rectitude_N = mkN "rectitude" ;
lin recto_N = mkN "recto" "rectos";
lin rectocele_N = mkN "rectocele" ;
lin rector_N = mkN "rector" "rectors";
lin rectorship_N = mkN "rectorship" ;
lin rectory_N = mkN "rectory" "rectories";
lin rectosigmoid_A = mkA "rectosigmoid" ;
lin rectum_N = mkN "rectum" "rectums";
lin rectus_N = mkN "rectus" ;
lin recumbent_A = compoundA (mkA "recumbent");
lin recuperate_V = mkV "recuperate" "recuperates" "recuperated" "recuperated" "recuperating";
lin recuperate_V2 = mkV2 (mkV "recuperate" "recuperates" "recuperated" "recuperated" "recuperating");
lin recuperation_N = mkN "recuperation" "recuperations";
lin recuperative_A = compoundA (mkA "recuperative");
lin recur_V = mkV "recur" "recurs" "recurred" "recurred" "recurring";
lin recurrence_N = mkN "recurrence" "recurrences";
lin recurrent_A = compoundA (mkA "recurrent");
lin recursion_N = mkN "recursion" ;
lin recursive_A = mkA "recursive" ;
lin recurve_V = mkV "recurve" "recurves" "recurved" "recurved" "recurving";
lin recurve_V2 = mkV2 (mkV "recurve" "recurves" "recurved" "recurved" "recurving");
lin recusancy_N = mkN "recusancy" ;
lin recusant_A = compoundA (mkA "recusant");
lin recusant_N = mkN "recusant" "recusants";
lin recusation_N = mkN "recusation" ;
lin recycle_V2 = mkV2 (mkV "recycle" "recycles" "recycled" "recycled" "recycling");
lin recycling_N = mkN "recycling" ;
lin red_A = mkA "red" "redder";
lin red_N = mkN "red" "reds";
lin red_hot_A = compoundA (mkA "red-hot");
lin red_rimmed_A = compoundA (mkA "red-rimmed");
lin redact_N = mkN "redact" ;
lin redact_V2 = mkV2 (mkV "redact" "redacts" "redacted" "redacted" "redacting");
lin redaction_N = mkN "redaction" "redactions";
lin redberry_N = mkN "redberry" ;
lin redbone_N = mkN "redbone" ;
lin redbreast_N = mkN "redbreast" "redbreasts";
lin redbrick_A = compoundA (mkA "redbrick");
lin redbridge_PN = mkPN "Redbridge";
lin redbud_N = mkN "redbud" ;
lin redcap_N = mkN "redcap" "redcaps";
lin redcoat_N = mkN "redcoat" "redcoats";
lin redden_V = mkV "redden" "reddens" "reddened" "reddened" "reddening";
lin redden_V2 = mkV2 (mkV "redden" "reddens" "reddened" "reddened" "reddening");
lin reddish_A = compoundA (mkA "reddish");
lin redditch_PN = mkPN "Redditch";
lin redecorate_V2 = mkV2 (mkV "redecorate" "redecorates" "redecorated" "redecorated" "redecorating");
lin rededication_N = mkN "rededication" ;
lin redeem_V2 = mkV2 (mkV "redeem" "redeems" "redeemed" "redeemed" "redeeming");
lin redeemable_A = compoundA (mkA "redeemable");
lin redeemer_N = mkN "redeemer" "redeemers";
lin redefine_V2 = mkV2 (mkV "redefine" "redefines" "redefined" "redefined" "redefining");
lin redefinition_N = mkN "redefinition" ;
lin redemption_N = mkN "redemption" ;
lin redemptive_A = compoundA (mkA "redemptive");
lin redeploy_V2 = mkV2 (mkV "redeploy" "redeploys" "redeployed" "redeployed" "redeploying");
lin redeployment_N = mkN "redeployment" "redeployments";
lin redeposition_N = mkN "redeposition" ;
lin redesign_V2 = mkV2 (mkV "redesign" "redesigns" "redesigned" "redesigned" "redesigning");
lin redetermination_N = mkN "redetermination" ;
lin redevelop_V2 = mkV2 (mkV "redevelop" "redevelops" "redeveloped" "redeveloped" "redeveloping");
lin redevelopment_N = mkN "redevelopment" "redevelopments";
lin redeye_N = mkN "redeye" ;
lin redfish_N = mkN "redfish" ;
lin redhead_N = mkN "redhead" "redheads";
lin redheaded_A = mkA "redheaded" ;
lin redhorse_N = mkN "redhorse" ;
lin rediffusion_N = mkN "rediffusion" ;
lin rediscover_V2 = mkV2 (mkV "rediscover" "rediscovers" "rediscovered" "rediscovered" "rediscovering");
lin rediscovery_N = mkN "rediscovery" "rediscoveries";
lin redisposition_N = mkN "redisposition" "redispositions";
lin redistribute_V2 = mkV2 (mkV "redistribute" "redistributes" "redistributed" "redistributed" "redistributing");
lin redistribution_N = mkN "redistribution" "redistributions";
lin redline_V2 = mkV2 (mkV "redline");
lin redneck_N = mkN "redneck" ;
lin redness_N = mkN "redness" ;
lin redo_V2 = mkV2 (mkV "re" IrregEng.do_V);
lin redolence_N = mkN "redolence" ;
lin redolent_A = compoundA (mkA "redolent");
lin redouble_V = mkV "redouble" "redoubles" "redoubled" "redoubled" "redoubling";
lin redouble_V2 = mkV2 (mkV "redouble" "redoubles" "redoubled" "redoubled" "redoubling");
lin redoubt_N = mkN "redoubt" "redoubts";
lin redoubtable_A = compoundA (mkA "redoubtable");
lin redound_V = mkV "redound" "redounds" "redounded" "redounded" "redounding";
lin redpoll_N = mkN "redpoll" ;
lin redraft_N = mkN "redraft" ;
lin redraw_V2 = mkV2 (mkV "redraw");
lin redress_N = mkN "redress" ;
lin redress_V2 = mkV2 (mkV "redress" "redresses" "redressed" "redressed" "redressing");
lin redruth_PN = mkPN "Redruth";
lin redshank_N = mkN "redshank" ;
lin redskin_N = mkN "redskin" "redskins";
lin redstart_N = mkN "redstart" ;
lin redtail_N = mkN "redtail" ;
lin reduce_V = mkV "reduce" "reduces" "reduced" "reduced" "reducing";
lin reduce_V2 = mkV2 (mkV "reduce" "reduces" "reduced" "reduced" "reducing");
lin reducer_N = mkN "reducer" ;
lin reducible_A = compoundA (mkA "reducible");
lin reducing_N = mkN "reducing" ;
lin reductase_N = mkN "reductase" ;
lin reductio_ad_absurdum_N = mkN "reductio ad absurdum" "reductio ad absurda" {- FIXME: guessed plural form -};
lin reduction_N = mkN "reduction" "reductions";
lin reductionism_N = mkN "reductionism" ;
lin reductionist_A = mkA "reductionist" ;
lin reductive_A = mkA "reductive" ;
lin redundance_N = mkN "redundance" "redundances";
lin redundancy_N = mkN "redundancy" "redundancies";
lin redundant_A = compoundA (mkA "redundant");
lin reduplicate_V2 = mkV2 (mkV "reduplicate" "reduplicates" "reduplicated" "reduplicated" "reduplicating");
lin reduplication_N = mkN "reduplication" "reduplications";
lin redwing_N = mkN "redwing" "redwings";
lin redwood_N = mkN "redwood" "redwoods";
lin reed_N = mkN "reed" "reeds";
lin reedy_A = mkA "reedy" "reedier";
lin reef_N = mkN "reef" "reefs";
lin reef_V2 = mkV2 (mkV "reef" "reefs" "reefed" "reefed" "reefing");
lin reef_knot_N = mkN "reef-knot" "reef-knots";
lin reefer_N = mkN "reefer" "reefers";
lin reefy_A = mkA "reefy" ;
lin reek_N = mkN "reek" ;
lin reek_V = mkV "reek" "reeks" "reeked" "reeked" "reeking";
lin reel_N = mkN "reel" "reels";
lin reel_V = mkV "reel" "reels" "reeled" "reeled" "reeling";
lin reel_V2 = mkV2 (mkV "reel" "reels" "reeled" "reeled" "reeling");
lin reelection_N = mkN "reelection" ;
lin reeler_N = mkN "reeler" ;
lin reenactment_N = mkN "reenactment" ;
lin reenactor_N = mkN "reenactor" ;
lin reenlistment_N = mkN "reenlistment" ;
lin reentry_N = mkN "reentry" ;
lin reevaluation_N = mkN "reevaluation" ;
lin reeve_N = mkN "reeve" "reeves";
lin reexamine_V = mkV "reexamine";
lin ref_N = mkN "ref" ;
lin reface_V2 = mkV2 (mkV "reface" "refaces" "refaced" "refaced" "refacing");
lin refashion_N = mkN "refashion" "refashions";
lin refashion_V2 = mkV2 (mkV "refashion" "refashions" "refashioned" "refashioned" "refashioning");
lin refection_N = mkN "refection" "refections";
lin refectory_N = mkN "refectory" "refectories";
lin refer_V = mkV "refer" "refers" "referred" "referred" "referring";
lin refer_V2 = mkV2 (mkV "refer" "refers" "referred" "referred" "referring");
lin referable_A = compoundA (mkA "referable");
lin referee_N = mkN "referee" "referees";
lin referee_V = mkV "referee" "IRREG" "IRREG" "IRREG" "IRREG";
lin referee_V2 = mkV2 (mkV "referee" "IRREG" "IRREG" "IRREG" "IRREG");
lin reference_N = mkN "reference" "references";
lin referenced_A = mkA "referenced" ;
lin referendum_N = mkN "referendum" "referendums";
lin referent_A = mkA "referent" ;
lin referent_N = mkN "referent" ;
lin referential_A = compoundA (mkA "referential");
lin referral_N = mkN "referral" ;
lin refile_V2 = mkV2 (mkV "refile");
lin refill_N = mkN "refill" "refills";
lin refill_V2 = mkV2 (mkV "refill" "refills" "refilled" "refilled" "refilling");
lin refilling_N = mkN "refilling" ;
lin refinance_V = mkV "refinance";
lin refinance_V2 = mkV2 (mkV "refinance");
lin refine_V = mkV "refine" "refines" "refined" "refined" "refining";
lin refine_V2 = mkV2 (mkV "refine" "refines" "refined" "refined" "refining");
lin refinement_N = mkN "refinement" "refinements";
lin refiner_N = mkN "refiner" "refiners";
lin refinery_N = mkN "refinery" "refineries";
lin refining_N = mkN "refining" ;
lin refinisher_N = mkN "refinisher" ;
lin refit_N = mkN "refit" "refits";
lin refit_V = mkV "refit" "refits" "refitted" "refitted" "refitting";
lin refit_V2 = mkV2 (mkV "refit" "refits" "refitted" "refitted" "refitting");
lin reflate_V2 = mkV2 (mkV "reflate" "reflates" "reflated" "reflated" "reflating");
lin reflation_N = mkN "reflation" ;
lin reflect_V = mkV "reflect" "reflects" "reflected" "reflected" "reflecting";
lin reflect_V2 = mkV2 (mkV "reflect" "reflects" "reflected" "reflected" "reflecting");
lin reflection_N = mkN "reflection" "reflections";
lin reflective_A = compoundA (mkA "reflective");
lin reflectiveness_N = mkN "reflectiveness" ;
lin reflectometer_N = mkN "reflectometer" ;
lin reflector_N = mkN "reflector" "reflectors";
lin reflex_A = compoundA (mkA "reflex");
lin reflex_N = mkN "reflex" "reflexes";
lin reflexed_A = mkA "reflexed" ;
lin reflexion_N = mkN "reflexion" "reflexions";
lin reflexive_A = compoundA (mkA "reflexive");
lin reflexive_N = mkN "reflexive" "reflexives";
lin reflexivity_N = mkN "reflexivity" ;
lin reflexology_N = mkN "reflexology" ;
lin refloat_V = mkV "refloat" "refloats" "refloated" "refloated" "refloating";
lin refloat_V2 = mkV2 (mkV "refloat" "refloats" "refloated" "refloated" "refloating");
lin reflux_N = mkN "reflux" "refluxes";
lin refocus_V = mkV "refocus";
lin refocus_V2 = mkV2 (mkV "refocus");
lin refocus_V2V = mkV2V (mkV "refocus") noPrep to_Prep ;
lin refocusing_N = mkN "refocusing" ;
lin reforest_V2 = mkV2 (mkV "reforest" "reforests" "reforested" "reforested" "reforesting");
lin reforestation_N = mkN "reforestation" "reforestations";
lin reform_N = mkN "reform" "reforms";
lin reform_V = mkV "reform" "reforms" "reformed" "reformed" "reforming";
lin reform_V2 = mkV2 (mkV "reform" "reforms" "reformed" "reformed" "reforming");
lin reformation_N = mkN "reformation" "reformations";
lin reformative_A = mkA "reformative" ;
lin reformatory_A = compoundA (mkA "reformatory");
lin reformatory_N = mkN "reformatory" "reformatories";
lin reformer_N = mkN "reformer" "reformers";
lin reformism_N = mkN "reformism" ;
lin reformulate_V2 = mkV2 (mkV "reformulate");
lin refract_V2 = mkV2 (mkV "refract" "refracts" "refracted" "refracted" "refracting");
lin refraction_N = mkN "refraction" "refractions";
lin refractive_A = mkA "refractive" ;
lin refractivity_N = mkN "refractivity" ;
lin refractometer_N = mkN "refractometer" ;
lin refractoriness_N = mkN "refractoriness" ;
lin refractory_A = compoundA (mkA "refractory");
lin refrain_N = mkN "refrain" "refrains";
lin refrain_V = mkV "refrain" "refrains" "refrained" "refrained" "refraining";
lin refresh_V2 = mkV2 (mkV "refresh" "refreshes" "refreshed" "refreshed" "refreshing");
lin refresher_N = mkN "refresher" "refreshers";
lin refreshing_A = compoundA (mkA "refreshing");
lin refreshment_N = mkN "refreshment" "refreshments";
lin refrigerant_A = compoundA (mkA "refrigerant");
lin refrigerant_N = mkN "refrigerant" "refrigerants";
lin refrigerate_V2 = mkV2 (mkV "refrigerate" "refrigerates" "refrigerated" "refrigerated" "refrigerating");
lin refrigeration_N = mkN "refrigeration" "refrigerations";
lin refrigerator_N = mkN "refrigerator" "refrigerators";
lin refuel_V = mkV "refuel" "refuels" "refuelled" "refuelled" "refuelling";
lin refuel_V2 = mkV2 (mkV "refuel" "refuels" "refuelled" "refuelled" "refuelling");
lin refuge_N = mkN "refuge" "refuges";
lin refugee_N = mkN "refugee" "refugees";
lin refulgence_N = mkN "refulgence" ;
lin refulgent_A = compoundA (mkA "refulgent");
lin refund_N = mkN "refund" "refunds";
lin refund_V2 = mkV2 (mkV "refund" "refunds" "refunded" "refunded" "refunding");
lin refurbish_V2 = mkV2 (mkV "refurbish" "refurbishes" "refurbished" "refurbished" "refurbishing");
lin refurnish_V2 = mkV2 (mkV "refurnish" "refurnishes" "refurnished" "refurnished" "refurnishing");
lin refusal_N = mkN "refusal" "refusals";
lin refuse_N = mkN "refuse" ;
lin refuse_V = mkV "refuse" "refuses" "refused" "refused" "refusing";
lin refuse_V2 = mkV2 (mkV "refuse" "refuses" "refused" "refused" "refusing");
lin refuse_VV = mkVV (mkV "refuse" "refuses" "refused" "refused" "refusing");
lin refuse_collector_N = mkN "refuse-collector" "refuse-collectors";
lin refutable_A = compoundA (mkA "refutable");
lin refutation_N = mkN "refutation" "refutations";
lin refute_V2 = mkV2 (mkV "refute" "refutes" "refuted" "refuted" "refuting");
lin reg_PN = mkPN "Reg";
lin regain_V2 = mkV2 (mkV "regain" "regains" "regained" "regained" "regaining");
lin regal_A = compoundA (mkA "regal");
lin regale_V2 = mkV2 (mkV "regale" "regales" "regaled" "regaled" "regaling");
lin regalia_N = mkN "regalia" ;
lin regard_N = mkN "regard" "regards";
lin regard_V = mkV "regard";
lin regard_V2 = mkV2 (mkV "regard" "regards" "regarded" "regarded" "regarding");
lin regardful_A = compoundA (mkA "regardful");
lin regardless_A = compoundA (mkA "regardless");
lin regardless_Adv = mkAdv "regardless" ;
lin regatta_N = mkN "regatta" "regattas";
lin regency_N = mkN "regency" "regencies";
lin regenerate_A = compoundA (mkA "regenerate");
lin regenerate_V = mkV "regenerate" "regenerates" "regenerated" "regenerated" "regenerating";
lin regenerate_V2 = mkV2 (mkV "regenerate" "regenerates" "regenerated" "regenerated" "regenerating");
lin regeneration_N = mkN "regeneration" ;
lin regensburg_PN = mkPN "Regensburg";
lin regent_A = compoundA (mkA "regent");
lin regent_N = mkN "regent" "regents";
lin reggae_N = mkN "reggae" ;
lin regicide_N = mkN "regicide" "regicides";
lin regime_1_N = mkN "regime" "regimes";
lin regime_2_N = mkN "régime" "régimes";
lin regimen_N = mkN "regimen" "regimens";
lin regiment_N = mkN "regiment" "regiments";
lin regiment_V2 = mkV2 (mkV "regiment" "regiments" "regimented" "regimented" "regimenting");
lin regimental_A = compoundA (mkA "regimental");
lin regimentals_N = mkN "regimentals" ;
lin regimentation_N = mkN "regimentation" ;
lin regina_PN = mkPN "Regina";
lin reginald_PN = mkPN "Reginald";
lin region_N = mkN "region" "regions";
lin regional_A = compoundA (mkA "regional");
lin regionalism_N = mkN "regionalism" ;
lin register_N = mkN "register" "registers";
lin register_V = mkV "register" "registers" "registered" "registered" "registering";
lin register_V2 = mkV2 (mkV "register" "registers" "registered" "registered" "registering");
lin registrant_N = mkN "registrant" ;
lin registrar_N = mkN "registrar" "registrars";
lin registration_N = mkN "registration" "registrations";
lin registry_N = mkN "registry" "registries";
lin regnant_A = compoundA (mkA "regnant");
lin regnellidium_N = mkN "regnellidium" ;
lin regosol_N = mkN "regosol" ;
lin regress_N = mkN "regress" ;
lin regress_V = mkV "regress" "regresses" "regressed" "regressed" "regressing";
lin regression_N = mkN "regression" "regressions";
lin regressive_A = compoundA (mkA "regressive");
lin regret_N = mkN "regret" "regrets";
lin regret_V2 = mkV2 (mkV "regret" "regrets" "regretted" "regretted" "regretting");
lin regret_VS = mkVS (mkV "regret");
lin regretful_A = compoundA (mkA "regretful");
lin regrettable_A = compoundA (mkA "regrettable");
lin regroup_V = mkV "regroup" "regroups" "regrouped" "regrouped" "regrouping";
lin regroup_V2 = mkV2 (mkV "regroup" "regroups" "regrouped" "regrouped" "regrouping");
lin regular_A = compoundA (mkA "regular");
lin regular_N = mkN "regular" "regulars";
lin regularity_N = mkN "regularity" "regularities";
lin regularization_N = mkN "regularization" "regularizations";
lin regularize_V2 = mkV2 (mkV "regularize" "regularizes" "regularized" "regularized" "regularizing");
lin regulate_V2 = mkV2 (mkV "regulate" "regulates" "regulated" "regulated" "regulating");
lin regulation_A = mkA "regulation" ;
lin regulation_N = mkN "regulation" "regulations";
lin regulative_A = mkA "regulative" ;
lin regulator_N = mkN "regulator" "regulators";
lin regum_V2 = mkV2 (mkV "regum");
lin regur_N = mkN "regur" ;
lin regurgitate_V = mkV "regurgitate" "regurgitates" "regurgitated" "regurgitated" "regurgitating";
lin regurgitate_V2 = mkV2 (mkV "regurgitate" "regurgitates" "regurgitated" "regurgitated" "regurgitating");
lin regurgitation_N = mkN "regurgitation" ;
lin rehabilitate_V2 = mkV2 (mkV "rehabilitate" "rehabilitates" "rehabilitated" "rehabilitated" "rehabilitating");
lin rehabilitation_N = mkN "rehabilitation" "rehabilitations";
lin rehabilitative_A = mkA "rehabilitative" ;
lin reharmonization_N = mkN "reharmonization" ;
lin rehash_N = mkN "rehash" "rehashes";
lin rehash_V2 = mkV2 (mkV "rehash" "rehashes" "rehashed" "rehashed" "rehashing");
lin rehear_V2 = mkV2 (mkV "re" IrregEng.hear_V);
lin rehearing_N = mkN "rehearing" "rehearings";
lin rehearsal_N = mkN "rehearsal" "rehearsals";
lin rehearse_V = mkV "rehearse" "rehearses" "rehearsed" "rehearsed" "rehearsing";
lin rehearse_V2 = mkV2 (mkV "rehearse" "rehearses" "rehearsed" "rehearsed" "rehearsing");
lin rehouse_V2 = mkV2 (mkV "rehouse" "rehouses" "rehoused" "rehoused" "rehousing");
lin reich_N = mkN "reich" "reichs";
lin reigate_PN = mkPN "Reigate";
lin reign_N = mkN "reign" "reigns";
lin reign_V = mkV "reign" "reigns" "reigned" "reigned" "reigning";
lin reignite_V2 = mkV2 (mkV "reignite");
lin reimburse_V2 = mkV2 (mkV "reimburse" "reimburses" "reimbursed" "reimbursed" "reimbursing");
lin reimbursement_N = mkN "reimbursement" "reimbursements";
lin reimpose_V2 = mkV2 (mkV "reimpose");
lin reimposition_N = mkN "reimposition" "reimpositions";
lin rein_N = mkN "rein" "reins";
lin rein_V2 = mkV2 (mkV "rein" "reins" "reined" "reined" "reining");
lin reincarnate_A = compoundA (mkA "reincarnate");
lin reincarnate_V2 = mkV2 (mkV "reincarnate" "reincarnates" "reincarnated" "reincarnated" "reincarnating");
lin reincarnation_N = mkN "reincarnation" "reincarnations";
lin reincarnationism_N = mkN "reincarnationism" ;
lin reindeer_N = mkN "reindeer" "reindeer";
lin reindict_V2 = mkV2 (mkV "reindict");
lin reinforce_V2 = mkV2 (mkV "reinforce" "reinforces" "reinforced" "reinforced" "reinforcing");
lin reinforcement_N = mkN "reinforcement" "reinforcements";
lin reinstall_V2 = mkV2 (mkV "reinstall");
lin reinstate_V2 = mkV2 (mkV "reinstate" "reinstates" "reinstated" "reinstated" "reinstating");
lin reinstatement_N = mkN "reinstatement" "reinstatements";
lin reinstitute_V2 = mkV2 (mkV "reinstitute");
lin reinsurance_N = mkN "reinsurance" "reinsurances";
lin reinsure_V2 = mkV2 (mkV "reinsure" "reinsures" "reinsured" "reinsured" "reinsuring");
lin reintegrate_V2 = mkV2 (mkV "reintegrate" "reintegrates" "reintegrated" "reintegrated" "reintegrating");
lin reintegration_N = mkN "reintegration";
lin reinterpret_V2 = mkV2 (mkV "reinterpret" "reinterprets" "reinterpreted" "reinterpreted" "reinterpreting");
lin reinterpretation_N = mkN "reinterpretation" "reinterpretations";
lin reintroduce_V2 = mkV2 (mkV "reintroduce");
lin reintroduction_N = mkN "reintroduction" ;
lin reinvent_V2 = mkV2 (mkV "reinvent");
lin reinvest_V2 = mkV2 (mkV "reinvest");
lin reinvigorate_V2 = mkV2 (mkV "reinvigorate");
lin reissue_N = mkN "reissue" "reissues";
lin reissue_V2 = mkV2 (mkV "reissue" "reissues" "reissued" "reissued" "reissuing");
lin reiterate_V2 = mkV2 (mkV "reiterate" "reiterates" "reiterated" "reiterated" "reiterating");
lin reiterate_VS = mkVS (mkV "reiterate");
lin reiteration_N = mkN "reiteration" "reiterations";
lin reject_N = mkN "reject" "rejects";
lin reject_V2 = mkV2 (mkV "reject" "rejects" "rejected" "rejected" "rejecting");
lin rejection_N = mkN "rejection" "rejections";
lin rejective_A = mkA "rejective" ;
lin rejig_V2 = mkV2 (mkV "rejig" "rejigs" "rejigged" "rejigged" "rejigging");
lin rejoice_V = mkV "rejoice" "rejoices" "rejoiced" "rejoiced" "rejoicing";
lin rejoice_V2 = mkV2 (mkV "rejoice" "rejoices" "rejoiced" "rejoiced" "rejoicing");
lin rejoicing_N = mkN "rejoicing" ;
lin rejoin_V = mkV "rejoin" "rejoins" "rejoined" "rejoined" "rejoining";
lin rejoin_V2 = mkV2 (mkV "rejoin" "rejoins" "rejoined" "rejoined" "rejoining");
lin rejoinder_N = mkN "rejoinder" "rejoinders";
lin rejuvenate_V = mkV "rejuvenate" "rejuvenates" "rejuvenated" "rejuvenated" "rejuvenating";
lin rejuvenate_V2 = mkV2 (mkV "rejuvenate" "rejuvenates" "rejuvenated" "rejuvenated" "rejuvenating");
lin rejuvenation_N = mkN "rejuvenation" "rejuvenations";
lin rekindle_V = mkV "rekindle" "rekindles" "rekindled" "rekindled" "rekindling";
lin rekindle_V2 = mkV2 (mkV "rekindle" "rekindles" "rekindled" "rekindled" "rekindling");
lin relapse_N = mkN "relapse" "relapses";
lin relapse_V = mkV "relapse" "relapses" "relapsed" "relapsed" "relapsing";
lin relate_V = mkV "relate" "relates" "related" "related" "relating";
lin relate_V2 = mkV2 (mkV "relate" "relates" "related" "related" "relating");
lin relatedness_N = mkN "relatedness";
lin relation_N = mkN "relation" "relations";
lin relational_A = mkA "relational";
lin relationship_N = mkN "relationship" "relationships";
lin relative_A = compoundA (mkA "relative");
lin relative_N = mkN "relative" "relatives";
lin relativism_N = mkN "relativism" ;
lin relativistic_A = mkA "relativistic" ;
lin relativistically_Adv = mkAdv "relativistically" ;
lin relativity_N = mkN "relativity" ;
lin relatum_N = mkN "relatum" ;
lin relax_V = mkV "relax" "relaxes" "relaxed" "relaxed" "relaxing";
lin relax_V2 = mkV2 (mkV "relax" "relaxes" "relaxed" "relaxed" "relaxing");
lin relaxant_A = mkA "relaxant" ;
lin relaxant_N = mkN "relaxant" ;
lin relaxation_N = mkN "relaxation" "relaxations";
lin relaxer_N = mkN "relaxer" ;
lin relaxin_N = mkN "relaxin" ;
lin relay_N = mkN "relay" "relays";
lin relay_V2 = mkV2 (mkV "re" IrregEng.lay_V);
lin release_N = mkN "release" "releases";
lin release_V2 = mkV2 (mkV "release" "releases" "released" "released" "releasing");
lin relegate_V2 = mkV2 (mkV "relegate" "relegates" "relegated" "relegated" "relegating");
lin relegation_N = mkN "relegation" ;
lin relent_V = mkV "relent" "relents" "relented" "relented" "relenting";
lin relentless_A = compoundA (mkA "relentless");
lin relentlessness_N = mkN "relentlessness" ;
lin relevance_N = mkN "relevance" "relevances";
lin relevancy_N = mkN "relevancy" ;
lin relevant_A = compoundA (mkA "relevant");
lin reliability_N = mkN "reliability" ;
lin reliable_A = compoundA (mkA "reliable");
lin reliance_N = mkN "reliance" ;
lin reliant_A = compoundA (mkA "reliant");
lin relic_N = mkN "relic" "relics";
lin relict_N = mkN "relict" "relicts";
lin relief_N = mkN "relief" "reliefs";
lin relieve_V2 = mkV2 (mkV "relieve" "relieves" "relieved" "relieved" "relieving");
lin reliever_N = mkN "reliever" ;
lin religion_N = mkN "religion" "religions";
lin religionism_N = mkN "religionism" ;
lin religionist_N = mkN "religionist" ;
lin religiosity_N = mkN "religiosity" ;
lin religious_A = compoundA (mkA "religious");
lin religious_N = mkN "religious" "religious";
lin religiousness_N = mkN "religiousness" ;
lin reline_V2 = mkV2 (mkV "reline" "relines" "relined" "relined" "relining");
lin relinquish_V2 = mkV2 (mkV "relinquish" "relinquishes" "relinquished" "relinquished" "relinquishing");
lin relinquishment_N = mkN "relinquishment" ;
lin reliquary_N = mkN "reliquary" "reliquaries";
lin relish_N = mkN "relish" "relishes";
lin relish_V2 = mkV2 (mkV "relish" "relishes" "relished" "relished" "relishing");
lin relistening_N = mkN "relistening" ;
lin relive_V2 = mkV2 (mkV "relive" "relives" "relived" "relived" "reliving");
lin reliving_N = mkN "reliving" ;
lin relocate_V = mkV "relocate" "relocates" "relocated" "relocated" "relocating";
lin relocate_V2 = mkV2 (mkV "relocate" "relocates" "relocated" "relocated" "relocating");
lin relocation_N = mkN "relocation" ;
lin reluctance_N = mkN "reluctance" ;
lin reluctant_A = compoundA (mkA "reluctant");
lin reluctivity_N = mkN "reluctivity" ;
lin rely_V = mkV "rely" "relies" "relied" "relied" "relying";
lin rely_V2 = mkV2 (mkV "rely") on_Prep ;
lin rely_on_V2V = mkV2V (mkV "rely" "relies" "relied" "relied" "relying") (mkPrep "on") to_Prep;
lin remain_V = mkV "remain";
lin remain_V2 = mkV2 (mkV "remain");
lin remain_VA = mkVA (mkV "remain" "remains" "remained" "remained" "remaining");
lin remain_VS = mkVS (mkV "remain" "remains" "remained" "remained" "remaining");
lin remain_VV = mkVV (mkV "remain" "remains" "remained" "remained" "remaining");
lin remainder_N = mkN "remainder" "remainders";
lin remains_N = mkN "remains" ;
lin remake_N = mkN "remake" "remakes";
lin remake_V2 = mkV2 (mkV "re" IrregEng.make_V);
lin remand_N = mkN "remand" ;
lin remand_V2 = mkV2 (mkV "remand" "remands" "remanded" "remanded" "remanding");
lin remark_N = mkN "remark" "remarks";
lin remark_V = mkV "remark" "remarks" "remarked" "remarked" "remarking";
lin remark_V2 = mkV2 (mkV "remark" "remarks" "remarked" "remarked" "remarking");
lin remark_VS = mkVS (mkV "remark" "remarks" "remarked" "remarked" "remarking");
lin remarkable_A = compoundA (mkA "remarkable");
lin remarriage_N = mkN "remarriage" "remarriages";
lin remarry_V = mkV "remarry" "remarries" "remarried" "remarried" "remarrying";
lin remarry_V2 = mkV2 (mkV "remarry" "remarries" "remarried" "remarried" "remarrying");
lin remediable_A = compoundA (mkA "remediable");
lin remedial_A = compoundA (mkA "remedial");
lin remedy_N = mkN "remedy" "remedies";
lin remedy_V2 = mkV2 (mkV "remedy" "remedies" "remedied" "remedied" "remedying");
lin remember_V = mkV "remember" "remembers" "remembered" "remembered" "remembering";
lin remember_V2 = mkV2 (mkV "remember" "remembers" "remembered" "remembered" "remembering");
lin remember_VS = mkVS (mkV "remember" "remembers" "remembered" "remembered" "remembering");
lin remembrance_N = mkN "remembrance" "remembrances";
lin remilitarization_N = mkN "remilitarization" "remilitarizations";
lin remilitarize_V2 = mkV2 (mkV "remilitarize" "remilitarizes" "remilitarized" "remilitarized" "remilitarizing");
lin remind_V2 = mkV2 (mkV "remind" "reminds" "reminded" "reminded" "reminding");
lin reminder_N = mkN "reminder" "reminders";
lin reminisce_V = mkV "reminisce" "reminisces" "reminisced" "reminisced" "reminiscing";
lin reminiscence_N = mkN "reminiscence" "reminiscences";
lin reminiscent_A = compoundA (mkA "reminiscent");
lin remise_N = mkN "remise" ;
lin remiss_A = compoundA (mkA "remiss");
lin remission_N = mkN "remission" "remissions";
lin remissness_N = mkN "remissness" ;
lin remit_N = mkN "remit" ;
lin remit_V = mkV "remit" "remits" "remitted" "remitted" "remitting";
lin remit_V2 = mkV2 (mkV "remit" "remits" "remitted" "remitted" "remitting");
lin remittance_N = mkN "remittance" "remittances";
lin remittent_A = compoundA (mkA "remittent");
lin remnant_N = mkN "remnant" "remnants";
lin remodel_V = variants {mkV "remodel" "remodels" "remodeled"  "remodeled"  "remodeling";
                          mkV "remodel" "remodels" "remodelled" "remodelled" "remodelling"};
lin remodel_V2 = mkV2 (variants {mkV "remodel" "remodels" "remodeled"  "remodeled"  "remodeling";
                                 mkV "remodel" "remodels" "remodelled" "remodelled" "remodelling"});
lin remonstrance_N = mkN "remonstrance" "remonstrances";
lin remonstrate_V = mkV "remonstrate" "remonstrates" "remonstrated" "remonstrated" "remonstrating";
lin remora_N = mkN "remora" ;
lin remorse_N = mkN "remorse" ;
lin remorseful_A = compoundA (mkA "remorseful");
lin remorseless_A = compoundA (mkA "remorseless");
lin remote_A = mkA "remote" "remoter";
lin remoteness_N = mkN "remoteness" ;
lin remould_V2 = mkV2 (mkV "remould" "remoulds" "remoulded" "remoulded" "remoulding");
lin remount_N = mkN "remount" "remounts";
lin remount_V = mkV "remount" "remounts" "remounted" "remounted" "remounting";
lin remount_V2 = mkV2 (mkV "remount" "remounts" "remounted" "remounted" "remounting");
lin removable_A = compoundA (mkA "removable");
lin removal_N = mkN "removal" "removals";
lin remove_N = mkN "remove" "removes";
lin remove_V = mkV "remove" "removes" "removed" "removed" "removing";
lin remove_V2 = mkV2 (mkV "remove" "removes" "removed" "removed" "removing");
lin remover_N = mkN "remover" "removers";
lin remscheid_PN = mkPN "Remscheid";
lin remuda_N = mkN "remuda" ;
lin remunerate_V2 = mkV2 (mkV "remunerate" "remunerates" "remunerated" "remunerated" "remunerating");
lin remuneration_N = mkN "remuneration" ;
lin remunerative_A = compoundA (mkA "remunerative");
lin renaissance_N = mkN "renaissance" "renaissances";
lin renal_A = compoundA (mkA "renal");
lin rename_V2 = mkV2 (mkV "rename" "renames" "renamed" "renamed" "renaming");
lin rename_V3 = mkV3 (mkV "rename");
lin renascence_N = mkN "renascence" "renascences";
lin renascent_A = compoundA (mkA "renascent");
lin rend_V2 = mkV2 (mkV "rend" "IRREG" "IRREG" "IRREG" "IRREG");
lin render_N = mkN "render" ;
lin render_V2 = mkV2 (mkV "render" "renders" "rendered" "rendered" "rendering");
lin rendering_N = mkN "rendering" "renderings";
lin rendezvous_N = mkN "rendezvous" "rendezvous";
lin rendezvous_V = mkV "rendezvous" "IRREG" "IRREG" "IRREG" "IRREG";
lin rendezvouse_V = mkV "rendezvouse";
lin rending_A = mkA "rending" ;
lin rendition_N = mkN "rendition" "renditions";
lin renegadeMasc_N = mkN masculine (mkN "renegade" "renegades");
lin renegadeFem_N = mkN feminine (mkN "renegade" "renegades");
lin renegade_V = mkV "renegade" "renegades" "renegaded" "renegaded" "renegading";
lin renege_V = mkV "renege" "reneges" "reneged" "reneged" "reneging";
lin renegotiate_V2 = mkV2 (mkV "renegotiate");
lin renegue_V = mkV "renegue" "renegues" "renegued" "renegued" "reneguing";
lin renew_V2 = mkV2 (mkV "renew" "renews" "renewed" "renewed" "renewing");
lin renewable_A = compoundA (mkA "renewable");
lin renewal_N = mkN "renewal" "renewals";
lin renewing_A = mkA "renewing" ;
lin renfrew_PN = mkPN "Renfrew";
lin reniform_A = mkA "reniform" ;
lin renin_N = mkN "renin" ;
lin rennes_PN = mkPN "Rennes";
lin rennet_N = mkN "rennet" ;
lin rennin_N = mkN "rennin" ;
lin renounce_V2 = mkV2 (mkV "renounce" "renounces" "renounced" "renounced" "renouncing");
lin renovate_V2 = mkV2 (mkV "renovate" "renovates" "renovated" "renovated" "renovating");
lin renovation_N = mkN "renovation" "renovations";
lin renovator_N = mkN "renovator" "renovators";
lin renown_N = mkN "renown" ;
lin renowned_A = compoundA (mkA "renowned");
lin rensselaerite_N = mkN "rensselaerite" ;
lin rent_N = mkN "rent" "rents";
lin rent_V = mkV "rent" "rents" "rented" "rented" "renting";
lin rent_V2 = mkV2 (mkV "rent" "rents" "rented" "rented" "renting");
lin rent_collector_N = mkN "rent-collector" "rent-collectors";
lin rent_free_A = compoundA (mkA "rent-free");
lin rent_free_Adv = mkAdv "rent-free";
lin rent_rebate_N = mkN "rent-rebate" "rent-rebates";
lin rent_roll_N = mkN "rent-roll" "rent-rolls";
lin rentable_A = compoundA (mkA "rentable");
lin rental_A = mkA "rental" ;
lin rental_N = mkN "rental" "rentals";
lin renter_N = mkN "renter" ;
lin rentier_N = mkN "rentier" "rentiers";
lin renunciant_A = mkA "renunciant" ;
lin renunciation_N = mkN "renunciation" ;
lin reoffer_V2 = mkV2 (mkV "reoffer");
lin reopen_V = mkV "reopen" "reopens" "reopened" "reopened" "reopening";
lin reopen_V2 = mkV2 (mkV "reopen" "reopens" "reopened" "reopened" "reopening");
lin reorder_N = mkN "reorder" ;
lin reordering_N = mkN "reordering" ;
lin reorganization_N = mkN (variants {"reorganization"; "reorganisation"});
lin reorganize_V = mkV "reorganize" "reorganizes" "reorganized" "reorganized" "reorganizing";
lin reorganize_V2 = mkV2 (mkV "reorganize" "reorganizes" "reorganized" "reorganized" "reorganizing");
lin reorient_V = mkV "reorient" "reorients" "reoriented" "reoriented" "reorienting";
lin reorient_V2 = mkV2 (mkV "reorient" "reorients" "reoriented" "reoriented" "reorienting");
lin reorientate_V = mkV "reorientate" "reorientates" "reorientated" "reorientated" "reorientating";
lin reorientate_V2 = mkV2 (mkV "reorientate" "reorientates" "reorientated" "reorientated" "reorientating");
lin reorientation_N = mkN "reorientation" ;
lin reovirus_N = mkN "reovirus" ;
lin rep_N = mkN "rep" "reps";
lin repackage_V2 = mkV2 (mkV "repackage");
lin repaint_V2 = mkV2 (mkV "repaint" "repaints" "repainted" "repainted" "repainting");
lin repair_N = mkN "repair" "repairs";
lin repair_V = mkV "repair" "repairs" "repaired" "repaired" "repairing";
lin repair_V2 = mkV2 (mkV "repair" "repairs" "repaired" "repaired" "repairing");
lin repairable_A = compoundA (mkA "repairable");
lin repairer_N = mkN "repairer" "repairers";
lin repairman_N = mkN masculine (mkN "repairman" "repairman");
lin repand_A = mkA "repand" ;
lin reparable_A = compoundA (mkA "reparable");
lin reparation_N = mkN "reparation" "reparations";
lin repartee_N = mkN "repartee" "repartees";
lin repass_V2 = mkV2 (mkV "repass");
lin repast_N = mkN "repast" "repasts";
lin repatriate_N = mkN "repatriate" "repatriates";
lin repatriate_V2 = mkV2 (mkV "repatriate" "repatriates" "repatriated" "repatriated" "repatriating");
lin repatriation_N = mkN "repatriation" "repatriations";
lin repay_V = mkV "re" IrregEng.pay_V;
lin repay_V2 = mkV2 (mkV "re" IrregEng.pay_V);
lin repayable_A = compoundA (mkA "repayable");
lin repayment_N = mkN "repayment" "repayments";
lin repeal_N = mkN "repeal" "repeals";
lin repeal_V2 = mkV2 (mkV "repeal" "repeals" "repealed" "repealed" "repealing");
lin repeat_N = mkN "repeat" "repeats";
lin repeat_V = mkV "repeat" "repeats" "repeated" "repeated" "repeating";
lin repeat_V2 = mkV2 (mkV "repeat" "repeats" "repeated" "repeated" "repeating");
lin repeat_VS = mkVS (mkV "repeat" "repeats" "repeated" "repeated" "repeating");
lin repeatable_A = compoundA (mkA "repeatable");
lin repeatedly_Adv = mkAdv "repeatedly" ;
lin repeater_N = mkN "repeater" "repeaters";
lin repechage_N = mkN "repechage" ;
lin repel_V2 = mkV2 (mkV "repel" "repels" "repelled" "repelled" "repelling");
lin repellent_A = compoundA (mkA "repellent");
lin repellent_N = mkN "repellent" ;
lin repent_V = mkV "repent" "repents" "repented" "repented" "repenting";
lin repent_V2 = mkV2 (mkV "repent" "repents" "repented" "repented" "repenting");
lin repentance_N = mkN "repentance" ;
lin repentant_A = compoundA (mkA "repentant");
lin repercussion_N = mkN "repercussion" "repercussions";
lin repertoire_N = mkN "repertoire" "repertoires";
lin repertory_N = mkN "repertory" "repertories";
lin repetition_N = mkN "repetition" "repetitions";
lin repetitious_A = compoundA (mkA "repetitious");
lin repetitive_A = compoundA (mkA "repetitive");
lin repetitiveness_N = mkN "repetitiveness" ;
lin repine_V = mkV "repine" "repines" "repined" "repined" "repining";
lin replace_V2 = mkV2 (mkV "replace" "replaces" "replaced" "replaced" "replacing");
lin replace_VV = ingVV (mkV "replace");
lin replaceability_N = mkN "replaceability" ;
lin replaceable_A = compoundA (mkA "replaceable");
lin replacement_N = mkN human (mkN "replacement" "replacements");
lin replant_V2 = mkV2 (mkV "replant" "replants" "replanted" "replanted" "replanting");
lin replaster_V2 = mkV2 (mkV "replaster");
lin replay_N = mkN "replay" "replays";
lin replay_V2 = mkV2 (mkV "replay" "replays" "replayed" "replayed" "replaying");
lin replenish_V2 = mkV2 (mkV "replenish" "replenishes" "replenished" "replenished" "replenishing");
lin replenishment_N = mkN "replenishment" "replenishments";
lin replete_A = compoundA (mkA "replete");
lin repletion_N = mkN "repletion" ;
lin replica_N = mkN "replica" "replicas";
lin replicate_V2 = mkV2 (mkV "replicate");
lin replication_N = mkN "replication" ;
lin reply_N = mkN "reply" "replies";
lin reply_V = mkV "reply" "replies" "replied" "replied" "replying";
lin reply_V2 = mkV2 (mkV "reply" "replies" "replied" "replied" "replying");
lin reply_VS = mkVS (mkV "reply" "replies" "replied" "replied" "replying");
lin reply_paid_A = compoundA (mkA "reply-paid");
lin repoint_V2 = mkV2 (mkV "repoint" "repoints" "repointed" "repointed" "repointing");
lin repond_V = mkV "repond";
lin report_N = mkN "report" "reports";
lin report_V = mkV "report" "reports" "reported" "reported" "reporting";
lin report_V2 = mkV2 (mkV "report" "reports" "reported" "reported" "reporting");
lin report_V2V = mkV2V (mkV "report" "reports" "reported" "reported" "reporting") noPrep to_Prep ;
lin report_VS = mkVS (mkV "report" "reports" "reported" "reported" "reporting");
lin reportable_A = compoundA (mkA "reportable");
lin reportage_N = mkN "reportage" ;
lin reportedly_Adv = mkAdv "reportedly";
lin reporterMasc_N = mkN masculine (mkN "reporter" "reporters");
lin reporterFem_N = mkN feminine (mkN "reporter" "reporters");
lin repose_N = mkN "repose" ;
lin repose_V = mkV "repose" "reposes" "reposed" "reposed" "reposing";
lin repose_V2 = mkV2 (mkV "repose" "reposes" "reposed" "reposed" "reposing");
lin reposeful_A = compoundA (mkA "reposeful");
lin repositing_N = mkN "repositing" ;
lin reposition_V2 = mkV2 (mkV "reposition");
lin repositioning_N = mkN "repositioning" ;
lin repository_N = mkN "repository" "repositories";
lin repossess_V2 = mkV2 (mkV "repossess");
lin repossession_N = mkN "repossession" ;
lin repot_V2 = mkV2 (mkV "repot" "repots" "repotted" "repotted" "repotting");
lin repp_N = mkN "repp" ;
lin reprehend_V2 = mkV2 (mkV "reprehend" "reprehends" "reprehended" "reprehended" "reprehending");
lin reprehensibility_N = mkN "reprehensibility" ;
lin reprehensible_A = compoundA (mkA "reprehensible");
lin represent_V = mkV "represent";
lin represent_V2 = mkV2 (mkV "represent" "represents" "represented" "represented" "representing");
lin representable_A = mkA "representable" ;
lin representation_N = mkN "representation" "representations";
lin representational_A = mkA "representational" ;
lin representativeFem_N = mkN feminine (mkN "representative" "representatives");
lin representativeMasc_N = mkN masculine (mkN "representative" "representatives");
lin representative_A = compoundA (mkA "representative");
lin repress_V2 = mkV2 (mkV "repress" "represses" "repressed" "repressed" "repressing");
lin repression_N = mkN "repression" "repressions";
lin repressive_A = compoundA (mkA "repressive");
lin repressor_N = mkN "repressor" ;
lin reprieve_N = mkN "reprieve" "reprieves";
lin reprieve_V2 = mkV2 (mkV "reprieve" "reprieves" "reprieved" "reprieved" "reprieving");
lin reprimand_N = mkN "reprimand" "reprimands";
lin reprimand_V2 = mkV2 (mkV "reprimand" "reprimands" "reprimanded" "reprimanded" "reprimanding");
lin reprint_N = mkN "reprint" "reprints";
lin reprint_V2 = mkV2 (mkV "reprint" "reprints" "reprinted" "reprinted" "reprinting");
lin reprisal_N = mkN "reprisal" "reprisals";
lin reproach_N = mkN "reproach" "reproaches";
lin reproach_V2 = mkV2 (mkV "reproach" "reproaches" "reproached" "reproached" "reproaching");
lin reproachful_A = compoundA (mkA "reproachful");
lin reprobate_N = mkN "reprobate" "reprobates";
lin reprobate_V2 = mkV2 (mkV "reprobate" "reprobates" "reprobated" "reprobated" "reprobating");
lin reprobation_N = mkN "reprobation" ;
lin reproduce_V = mkV "reproduce" "reproduces" "reproduced" "reproduced" "reproducing";
lin reproduce_V2 = mkV2 (mkV "reproduce" "reproduces" "reproduced" "reproduced" "reproducing");
lin reproducer_N = mkN "reproducer" "reproducers";
lin reproducibility_N = mkN "reproducibility" ;
lin reproducible_A = compoundA (mkA "reproducible");
lin reproduction_N = mkN "reproduction" "reproductions";
lin reproductive_A = compoundA (mkA "reproductive");
lin reproof_N = mkN "reproof" "reproofs";
lin reproof_V2 = mkV2 (mkV "reproof" "reproofs" "reproofed" "reproofed" "reproofing");
lin reprove_V2 = mkV2 (mkV "reprove" "reproves" "reproved" "reproved" "reproving");
lin reprovingly_Adv = mkAdv "reprovingly";
lin reps_N = mkN "reps" ;
lin reptile_N = mkN "reptile" "reptiles";
lin reptilian_A = compoundA (mkA "reptilian");
lin reptilian_N = mkN "reptilian" "reptilians";
lin republic_N = mkN "republic" "republics";
lin republican_A = compoundA (mkA "republican");
lin republican_N = mkN "republican" "republicans";
lin republicanism_N = mkN "republicanism" ;
lin republication_N = mkN "republication" ;
lin repudiate_V2 = mkV2 (mkV "repudiate" "repudiates" "repudiated" "repudiated" "repudiating");
lin repudiation_N = mkN "repudiation" "repudiations";
lin repudiative_A = mkA "repudiative" ;
lin repugnance_N = mkN "repugnance" ;
lin repugnant_A = compoundA (mkA "repugnant");
lin repulse_N = mkN "repulse" "repulses";
lin repulse_V2 = mkV2 (mkV "repulse" "repulses" "repulsed" "repulsed" "repulsing");
lin repulsion_N = mkN "repulsion" ;
lin repulsive_A = compoundA (mkA "repulsive");
lin repurchase_V2 = mkV2 (mkV "repurchase");
lin reputable_A = compoundA (mkA "reputable");
lin reputation_N = mkN "reputation" "reputations";
lin repute_N = mkN "repute" ;
lin repute_V2 = mkV2 (mkV "repute" "reputes" "reputed" "reputed" "reputing");
lin repute_V2V = mkV2V (mkV "repute" "reputes" "reputed" "reputed" "reputing") noPrep to_Prep;
lin reputedly_Adv = mkAdv "reputedly" ;
lin request_N = mkN "request" "requests";
lin request_V2 = mkV2 (mkV "request" "requests" "requested" "requested" "requesting");
lin request_VS = mkVS (mkV "request");
lin requiem_N = mkN "requiem" "requiems";
lin requiescat_N = mkN "requiescat" ;
lin require_V = mkV "require";
lin require_V2 = mkV2 (mkV "require");
lin require_V2V = mkV2V (mkV "require") noPrep to_Prep;
lin require_VS = mkVS (mkV "require");
lin require_VV = mkVV (mkV "require");
lin requirement_N = mkN "requirement" "requirements";
lin requisite_A = compoundA (mkA "requisite");
lin requisite_N = mkN "requisite" "requisites";
lin requisiteness_N = mkN "requisiteness" ;
lin requisition_N = mkN "requisition" "requisitions";
lin requisition_V2 = mkV2 (mkV "requisition" "requisitions" "requisitioned" "requisitioned" "requisitioning");
lin requital_N = mkN "requital" ;
lin requite_V2 = mkV2 (mkV "requite" "requites" "requited" "requited" "requiting");
lin reread_V2 = mkV2 (mkV "re" IrregEng.read_V);
lin rerebrace_N = mkN "rerebrace" ;
lin reredos_N = mkN "reredos" "reredoses";
lin reroute_V2 = mkV2 (mkV "reroute");
lin rerun_N = mkN "rerun" "reruns";
lin rerun_V2 = mkV2 (mkV "re" IrregEng.run_V);
lin res_N = mkN "res" ;
lin resale_N = mkN "resale" ;
lin reschedule_V2 = mkV2 (mkV "reschedule");
lin rescind_V2 = mkV2 (mkV "rescind" "rescinds" "rescinded" "rescinded" "rescinding");
lin rescindable_A = mkA "rescindable" ;
lin rescript_N = mkN "rescript" "rescripts";
lin rescue_N = mkN "rescue" "rescues";
lin rescue_V2 = mkV2 (mkV "rescue" "rescues" "rescued" "rescued" "rescuing");
lin rescuerMasc_N = mkN masculine (mkN "rescuer" "rescuers");
lin rescuerFem_N = mkN feminine (mkN "rescuer" "rescuers");
lin research_N = mkN "research" "researches";
lin research_V = mkV "research" "researches" "researched" "researched" "researching";
lin research_V2 = mkV2 (mkV "research" "researches" "researched" "researched" "researching");
lin researcherFem_N = mkN feminine (mkN "researcher" "researchers");
lin researcherMasc_N = mkN masculine (mkN "researcher" "researchers");
lin reseat_V2 = mkV2 (mkV "reseat" "reseats" "reseated" "reseated" "reseating");
lin reseau_N = mkN "reseau" ;
lin resection_N = mkN "resection" ;
lin reseda_N = mkN "reseda" ;
lin reseed_V2 = mkV2 (mkV "reseed" "reseeds" "reseeded" "reseeded" "reseeding");
lin resell_V2 = mkV2 (mkV "re" IrregEng.sell_V);
lin resemblance_N = mkN "resemblance" "resemblances";
lin resemble_V2 = mkV2 (mkV "resemble" "resembles" "resembled" "resembled" "resembling");
lin resent_V2 = mkV2 (mkV "resent" "resents" "resented" "resented" "resenting");
lin resent_VS = mkVS (mkV "resent" "resents" "resented" "resented" "resenting");
lin resentful_A = compoundA (mkA "resentful");
lin resentment_N = mkN "resentment" ;
lin reserpine_N = mkN "reserpine" ;
lin reservation_N = mkN "reservation" "reservations";
lin reserve_N = mkN "reserve" "reserves";
lin reserve_V = mkV "reserve";
lin reserve_V2 = mkV2 (mkV "reserve" "reserves" "reserved" "reserved" "reserving");
lin reservedly_Adv = mkAdv "reservedly" ;
lin reservist_N = mkN "reservist" "reservists";
lin reservoir_N = mkN "reservoir" "reservoirs";
lin reset_N = mkN "reset" ;
lin reset_V = mkV "reset";
lin reset_V2 = mkV2 (mkV "re" IrregEng.set_V);
lin resettle_V = mkV "resettle" "resettles" "resettled" "resettled" "resettling";
lin resettle_V2 = mkV2 (mkV "resettle" "resettles" "resettled" "resettled" "resettling");
lin resettlement_N = mkN "resettlement" "resettlements";
lin resh_N = mkN "resh" ;
lin reshape_V2 = mkV2 (mkV "reshape" "reshapes" "reshaped" "reshaped" "reshaping");
lin reshipment_N = mkN "reshipment" ;
lin reshuffle_N = mkN "reshuffle" "reshuffles";
lin reshuffle_V2 = mkV2 (mkV "reshuffle" "reshuffles" "reshuffled" "reshuffled" "reshuffling");
lin reside_V = mkV "reside" "resides" "resided" "resided" "residing";
lin residence_N = mkN "residence" "residences";
lin residency_N = mkN "residency" "residencies";
lin resident_A = compoundA (mkA "resident");
lin resident_N = mkN "resident" "residents";
lin residential_A = compoundA (mkA "residential");
lin residual_A = compoundA (mkA "residual");
lin residual_N = mkN "residual" ;
lin residuary_A = compoundA (mkA "residuary");
lin residue_N = mkN "residue" "residues";
lin resign_V = mkV "resign" "resigns" "resigned" "resigned" "resigning";
lin resign_V2 = mkV2 (mkV "resign" "resigns" "resigned" "resigned" "resigning");
lin resign_V2V = mkV2V (mkV "resign" "resigns" "resigned" "resigned" "resigning") noPrep to_Prep ;
lin resign_VS = mkVS (mkV "resign" "resigns" "resigned" "resigned" "resigning");
lin resign_VV = mkVV (mkV "resign" "resigns" "resigned" "resigned" "resigning") ;
lin resignation_N = mkN "resignation" "resignations";
lin resignedly_Adv = mkAdv "resignedly" ;
lin resilience_N = mkN "resilience" ;
lin resiliency_N = mkN "resiliency" ;
lin resilient_A = compoundA (mkA "resilient");
lin resin_N = mkN "resin" "resins";
lin resinated_A = compoundA (mkA "resinated");
lin resinlike_A = mkA "resinlike" ;
lin resinoid_N = mkN "resinoid" ;
lin resinous_A = compoundA (mkA "resinous");
lin resist_V = mkV "resist" "resists" "resisted" "resisted" "resisting";
lin resist_V2 = mkV2 (mkV "resist" "resists" "resisted" "resisted" "resisting");
lin resist_VV = ingVV (mkV "resist" "resists" "resisted" "resisted" "resisting");
lin resistance_N = mkN "resistance" "resistances";
lin resistant_A = compoundA (mkA "resistant");
lin resister_N = mkN "resister" "resisters";
lin resistible_A = mkA "resistible" ;
lin resistive_A = compoundA (mkA "resistive");
lin resistivity_N = mkN "resistivity" ;
lin resistless_A = compoundA (mkA "resistless");
lin resistor_N = mkN "resistor" "resistors";
lin resold_V2 = mkV2 (mkV "resold");
lin resole_V2 = mkV2 (mkV "resole" "resoles" "resoled" "resoled" "resoling");
lin resolute_A = compoundA (mkA "resolute");
lin resoluteness_N = mkN "resoluteness" ;
lin resolution_N = mkN "resolution" "resolutions";
lin resolvable_A = compoundA (mkA "resolvable");
lin resolve_N = mkN "resolve" "resolves";
lin resolve_V = mkV "resolve" "resolves" "resolved" "resolved" "resolving";
lin resolve_V2 = mkV2 (mkV "resolve" "resolves" "resolved" "resolved" "resolving");
lin resolve_VV = mkVV (mkV "resolve" "resolves" "resolved" "resolved" "resolving");
lin resonance_N = mkN "resonance" ;
lin resonant_A = compoundA (mkA "resonant");
lin resonate_V = mkV "resonate" "resonates" "resonated" "resonated" "resonating";
lin resonate_V2 = mkV2 (mkV "resonate" "resonates" "resonated" "resonated" "resonating");
lin resonator_N = mkN "resonator" "resonators";
lin resorcinol_N = mkN "resorcinol" ;
lin resorption_N = mkN "resorption" ;
lin resort_N = mkN "resort" "resorts";
lin resort_V = mkV "resort" "resorts" "resorted" "resorted" "resorting";
lin resound_V = mkV "resound" "resounds" "resounded" "resounded" "resounding";
lin resound_V2 = mkV2 (mkV "resound" "resounds" "resounded" "resounded" "resounding");
lin resoundingly_Adv = mkAdv "resoundingly";
lin resource_N = mkN "resource" "resources";
lin resourceful_A = compoundA (mkA "resourceful");
lin resourcefulness_N = mkN "resourcefulness" ;
lin resourceless_A = compoundA (mkA "resourceless");
lin respect_N = mkN "respect" "respects";
lin respect_V2 = mkV2 (mkV "respect" "respects" "respected" "respected" "respecting");
lin respectability_N = mkN "respectability" "respectabilities";
lin respectable_A = compoundA (mkA "respectable");
lin respecter_N = mkN "respecter" "respecters";
lin respectful_A = compoundA (mkA "respectful");
lin respective_A = compoundA (mkA "respective");
lin respects_N = mkN "respects" ;
lin respiration_N = mkN "respiration" "respirations";
lin respirator_N = mkN "respirator" "respirators";
lin respiratory_A = compoundA (mkA "respiratory");
lin respire_V = mkV "respire" "respires" "respired" "respired" "respiring";
lin respite_N = mkN "respite" "respites";
lin respite_V2 = mkV2 (mkV "respite" "respites" "respited" "respited" "respiting");
lin resplendence_N = mkN "resplendence" ;
lin resplendency_N = mkN "resplendency" ;
lin resplendent_A = compoundA (mkA "resplendent");
lin respond_V = mkV "respond" "responds" "responded" "responded" "responding";
lin respond_V2 = mkV2 (mkV "respond" "responds" "responded" "responded" "responding");
lin respond_VS = mkVS (mkV "respond" "responds" "responded" "responded" "responding");
lin respondent_N = mkN "respondent" "respondents";
lin response_N = mkN "response" "responses";
lin responsibility_N = mkN "responsibility" "responsibilities";
lin responsible_A = compoundA (mkA "responsible");
lin responsive_A = compoundA (mkA "responsive");
lin responsiveness_N = mkN "responsiveness" ;
lin rest_N = mkN "rest" "rests";
lin rest_V = mkV "rest" "rests" "rested" "rested" "resting";
lin rest_V2 = mkV2 (mkV "rest" "rests" "rested" "rested" "resting");
lin rest_VA = mkVA (mkV "rest" "rests" "rested" "rested" "resting");
lin rest_cure_N = mkN "rest-cure" "rest-cures";
lin rest_day_N = mkN "rest-day" "rest-days";
lin rest_home_N = mkN "rest-home" "rest-homes";
lin rest_house_N = mkN "rest-house" "rest-houses";
lin restart_V = mkV "restart" "restarts" "restarted" "restarted" "restarting";
lin restart_V2 = mkV2 (mkV "restart" "restarts" "restarted" "restarted" "restarting");
lin restate_V2 = mkV2 (mkV "restate" "restates" "restated" "restated" "restating");
lin restate_V2V = mkV2V (mkV "restate") noPrep to_Prep ;
lin restatement_N = mkN "restatement" "restatements";
lin restaurant_N = mkN "restaurant" "restaurants";
lin restauranteur_N = mkN "restauranteur" "restauranteurs";
lin restaurateur_N = mkN "restaurateur" "restaurateurs";
lin rester_N = mkN "rester" ;
lin restful_A = compoundA (mkA "restful");
lin restfulness_N = mkN "restfulness" ;
lin restharrow_N = mkN "restharrow" ;
lin restitution_N = mkN "restitution" ;
lin restive_A = compoundA (mkA "restive");
lin restiveness_N = mkN "restiveness" ;
lin restless_A = compoundA (mkA "restless");
lin restlessness_N = mkN "restlessness" ;
lin restock_V2 = mkV2 (mkV "restock" "restocks" "restocked" "restocked" "restocking");
lin restoration_N = mkN "restoration" "restorations";
lin restorative_A = compoundA (mkA "restorative");
lin restorative_N = mkN "restorative" "restoratives";
lin restore_V2 = mkV2 (mkV "restore" "restores" "restored" "restored" "restoring");
lin restorer_N = mkN "restorer" "restorers";
lin restrain_V2 = mkV2 (mkV "restrain" "restrains" "restrained" "restrained" "restraining");
lin restrainer_N = mkN "restrainer" ;
lin restraint_N = mkN "restraint" "restraints";
lin restrict_V = mkV "restrict";
lin restrict_V2 = mkV2 (mkV "restrict" "restricts" "restricted" "restricted" "restricting");
lin restriction_N = mkN "restriction" "restrictions";
lin restrictive_A = compoundA (mkA "restrictive");
lin restrictiveness_N = mkN "restrictiveness" ;
lin restructure_V = mkV "restructure";
lin restructure_V2 = mkV2 (mkV "restructure" "restructures" "restructured" "restructured" "restructuring");
lin restructure_V2V = mkV2V (mkV "restructure") noPrep to_Prep ;
lin result_N = mkN "result" "results";
lin result_V = mkV "result" "results" "resulted" "resulted" "resulting";
lin resultant_A = compoundA (mkA "resultant");
lin resultant_N = mkN "resultant" ;
lin resume_N = mkN "résumé" "résumés";
lin resume_V = mkV "resume";
lin resume_V2 = mkV2 (mkV "resume" "resumes" "resumed" "resumed" "resuming");
lin resume_VS = mkVS (mkV "resume");
lin resumption_N = mkN "resumption" "resumptions";
lin resurface_V = mkV "resurface" "resurfaces" "resurfaced" "resurfaced" "resurfacing";
lin resurface_V2 = mkV2 (mkV "resurface" "resurfaces" "resurfaced" "resurfaced" "resurfacing");
lin resurgence_N = mkN "resurgence" "resurgences";
lin resurgent_A = compoundA (mkA "resurgent");
lin resurrect_V = mkV "resurrect" "resurrects" "resurrected" "resurrected" "resurrecting";
lin resurrect_V2 = mkV2 (mkV "resurrect" "resurrects" "resurrected" "resurrected" "resurrecting");
lin resurrection_N = mkN "resurrection" ;
lin resurvey_N = mkN "resurvey" ;
lin resuscitate_V = mkV "resuscitate" "resuscitates" "resuscitated" "resuscitated" "resuscitating";
lin resuscitate_V2 = mkV2 (mkV "resuscitate" "resuscitates" "resuscitated" "resuscitated" "resuscitating");
lin resuscitation_N = mkN "resuscitation" "resuscitations";
lin resuscitator_N = mkN "resuscitator" ;
lin resuspension_N = mkN "resuspension" ;
lin ret_PN = mkPN "Ret";
lin ret_V2 = mkV2 (mkV "ret" "rets" "retted" "retted" "retting");
lin retail_Adv = mkAdv "retail";
lin retail_N = mkN "retail" "retails";
lin retail_V = mkV "retail" "retails" "retailed" "retailed" "retailing";
lin retail_V2 = mkV2 (mkV "retail" "retails" "retailed" "retailed" "retailing");
lin retailer_N = mkN "retailer" "retailers";
lin retailing_N = mkN "retailing" ;
lin retain_V2 = mkV2 (mkV "retain" "retains" "retained" "retained" "retaining");
lin retain_V2V = mkV2V (mkV "retain") noPrep to_Prep ;
lin retainer_N = mkN "retainer" "retainers";
lin retake_N = mkN "retake" "retakes";
lin retake_V2 = mkV2 (mkV "re" IrregEng.take_V);
lin retaliate_V = mkV "retaliate" "retaliates" "retaliated" "retaliated" "retaliating";
lin retaliation_N = mkN "retaliation" ;
lin retaliative_A = compoundA (mkA "retaliative");
lin retaliatory_A = compoundA (mkA "retaliatory");
lin retard_V2 = mkV2 (mkV "retard" "retards" "retarded" "retarded" "retarding");
lin retardant_N = mkN "retardant" ;
lin retardation_N = mkN "retardation" "retardations";
lin retch_V = mkV "retch" "retches" "retched" "retched" "retching";
lin retd_PN = mkPN "Retd";
lin retell_V2 = mkV2 (mkV "re" IrregEng.tell_V);
lin retem_N = mkN "retem" ;
lin retention_N = mkN "retention" ;
lin retentive_A = compoundA (mkA "retentive");
lin retentiveness_N = mkN "retentiveness" ;
lin retford_PN = mkPN "Retford";
lin rethink_N = mkN "rethink" "rethinks";
lin rethink_V = mkV "re" IrregEng.think_V;
lin rethink_V2 = mkV2 (mkV "re" IrregEng.think_V);
lin reticence_N = mkN "reticence" "reticences";
lin reticent_A = compoundA (mkA "reticent");
lin reticle_N = mkN "reticle" ;
lin reticulate_A = compoundA (mkA "reticulate");
lin reticulate_V = mkV "reticulate" "reticulates" "reticulated" "reticulated" "reticulating";
lin reticulate_V2 = mkV2 (mkV "reticulate" "reticulates" "reticulated" "reticulated" "reticulating");
lin reticulation_N = mkN "reticulation" "reticulations";
lin reticule_N = mkN "reticule" "reticules";
lin reticulocyte_N = mkN "reticulocyte" ;
lin reticulum_N = mkN "reticulum" ;
lin retina_N = mkN "retina" "retinas";
lin retinal_A = compoundA (mkA "retinal");
lin retinene_N = mkN "retinene" ;
lin retinitis_N = mkN "retinitis" ;
lin retinoblastoma_N = mkN "retinoblastoma" ;
lin retinopathy_N = mkN "retinopathy" ;
lin retinue_N = mkN "retinue" "retinues";
lin retire_N = mkN "retire" "IRREG";
lin retire_V = mkV "retire" "retires" "retired" "retired" "retiring";
lin retire_V2 = mkV2 (mkV "retire" "retires" "retired" "retired" "retiring");
lin retiree_N = mkN "retiree" ;
lin retirement_N = mkN "retirement" "retirements";
lin retool_V2 = mkV2 (mkV "retool" "retools" "retooled" "retooled" "retooling");
lin retort_N = mkN "retort" "retorts";
lin retort_V2 = mkV2 (mkV "retort" "retorts" "retorted" "retorted" "retorting");
lin retort_VS = mkVS (mkV "retort" "retorts" "retorted" "retorted" "retorting");
lin retouch_V2 = mkV2 (mkV "retouch" "retouches" "retouched" "retouched" "retouching");
lin retrace_V2 = mkV2 (mkV "retrace" "retraces" "retraced" "retraced" "retracing");
lin retract_V = mkV "retract" "retracts" "retracted" "retracted" "retracting";
lin retract_V2 = mkV2 (mkV "retract" "retracts" "retracted" "retracted" "retracting");
lin retractable_A = compoundA (mkA "retractable");
lin retractile_A = compoundA (mkA "retractile");
lin retraction_N = mkN "retraction" "retractions";
lin retractor_N = mkN "retractor" ;
lin retraining_N = mkN "retraining" ;
lin retral_A = mkA "retral" ;
lin retransmit_V2 = mkV2 (mkV "retransmit" "retransmits" "retransmitted" "retransmitted" "retransmitting");
lin retread_N = mkN "retread" "retreads";
lin retread_V2 = mkV2 (mkV "retread" "retreads" "retreaded" "retreaded" "retreading");
lin retreat_N = mkN "retreat" "retreats";
lin retreat_V = mkV "retreat" "retreats" "retreated" "retreated" "retreating";
lin retreat_V2 = mkV2 (mkV "retreat" "retreats" "retreated" "retreated" "retreating");
lin retreatant_N = mkN "retreatant" ;
lin retreated_N = mkN "retreated" ;
lin retrench_V = mkV "retrench" "retrenches" "retrenched" "retrenched" "retrenching";
lin retrench_V2 = mkV2 (mkV "retrench" "retrenches" "retrenched" "retrenched" "retrenching");
lin retrenchment_N = mkN "retrenchment" "retrenchments";
lin retrial_N = mkN "retrial" "retrials";
lin retribution_N = mkN "retribution" ;
lin retributive_A = compoundA (mkA "retributive");
lin retrievable_A = compoundA (mkA "retrievable");
lin retrieval_N = mkN "retrieval" ;
lin retrieve_V = mkV "retrieve" "retrieves" "retrieved" "retrieved" "retrieving";
lin retrieve_V2 = mkV2 (mkV "retrieve" "retrieves" "retrieved" "retrieved" "retrieving");
lin retriever_N = mkN "retriever" "retrievers";
lin retro_N = mkN "retro" ;
lin retroactive_A = compoundA (mkA "retroactive");
lin retrofit_N = mkN "retrofit" ;
lin retrofit_V2 = mkV2 (mkV "retrofit");
lin retroflection_N = mkN "retroflection" ;
lin retroflex_A = mkA "retroflex" ;
lin retrograde_A = compoundA (mkA "retrograde");
lin retrograde_V = mkV "retrograde" "retrogrades" "retrograded" "retrograded" "retrograding";
lin retrogress_V = mkV "retrogress" "retrogresses" "retrogressed" "retrogressed" "retrogressing";
lin retrogression_N = mkN "retrogression" "retrogressions";
lin retrogressive_A = compoundA (mkA "retrogressive");
lin retronym_N = mkN "retronym" ;
lin retrorocket_N = mkN "retrorocket" "retrorockets";
lin retrorse_A = mkA "retrorse" ;
lin retrospect_N = mkN "retrospect" ;
lin retrospection_N = mkN "retrospection" "retrospections";
lin retrospective_A = compoundA (mkA "retrospective");
lin retrospective_N = mkN "retrospective" ;
lin retrousse_A = compoundA (mkA "retroussé");
lin retroversion_N = mkN "retroversion" "retroversions";
lin retrovirus_N = mkN "retrovirus" ;
lin retrovision_N = mkN "retrovision" ;
lin retsina_N = mkN "retsina" ;
lin return_N = mkN "return" "returns";
lin return_V = mkV "return" "returns" "returned" "returned" "returning";
lin return_V2 = mkV2 (mkV "return" "returns" "returned" "returned" "returning");
lin return_V2V = mkV2V (mkV "return" "returns" "returned" "returned" "returning") noPrep to_Prep ;
lin returnable_A = compoundA (mkA "returnable");
lin reunification_N = mkN "reunification" ;
lin reunion_N = mkN "reunion" "reunions";
lin reunite_V = mkV "reunite" "reunites" "reunited" "reunited" "reuniting";
lin reunite_V2 = mkV2 (mkV "reunite" "reunites" "reunited" "reunited" "reuniting");
lin reuptake_N = mkN "reuptake" ;
lin rev_N = mkN "rev" "revs";
lin rev_PN = mkPN "Rev";
lin rev_V = mkV "rev" "revs" "revved" "revved" "revving";
lin rev_V2 = mkV2 (mkV "rev" "revs" "revved" "revved" "revving");
lin revaluation_N = mkN "revaluation" "revaluations";
lin revalue_V2 = mkV2 (mkV "revalue" "revalues" "revalued" "revalued" "revaluing");
lin revamp_V2 = mkV2 (mkV "revamp" "revamps" "revamped" "revamped" "revamping");
lin revd_PN = mkPN "Revd";
lin reveal_V2 = mkV2 (mkV "reveal" "reveals" "revealed" "revealed" "revealing");
lin reveal_VS = mkVS (mkV "reveal");
lin revealing_A = mkA "revealing" ;
lin reveille_N = mkN "reveille" "reveilles";
lin revel_N = mkN "revel" "revels";
lin revel_V = mkV "revel" "revels" "reveled" "reveled" "reveling";
lin revelation_N = mkN "revelation" "revelations";
lin reveler_N = mkN "reveler" ;
lin reveller_N = mkN "reveller" "revellers";
lin revelry_N = mkN "revelry" "revelries";
lin revenant_A = mkA "revenant" ;
lin revenant_N = mkN "revenant" ;
lin revenge_N = mkN "revenge" ;
lin revenge_V2 = mkV2 (mkV "revenge" "revenges" "revenged" "revenged" "revenging");
lin revengeful_A = compoundA (mkA "revengeful");
lin revenue_N = mkN "revenue" "revenues";
lin revenuer_N = mkN "revenuer" ;
lin reverberant_A = compoundA (mkA "reverberant");
lin reverberate_V = mkV "reverberate" "reverberates" "reverberated" "reverberated" "reverberating";
lin reverberate_V2 = mkV2 (mkV "reverberate" "reverberates" "reverberated" "reverberated" "reverberating");
lin reverberation_N = mkN "reverberation" "reverberations";
lin revere_V2 = mkV2 (mkV "revere" "reveres" "revered" "revered" "revering");
lin reverence_N = mkN "reverence" ;
lin reverence_V2 = mkV2 (mkV "reverence" "reverences" "reverenced" "reverenced" "reverencing");
lin reverend_A = compoundA (mkA "reverend");
lin reverend_N = mkN "reverend" "reverends";
lin reverent_A = compoundA (mkA "reverent");
lin reverential_A = compoundA (mkA "reverential");
lin reverie_N = mkN "reverie" "reveries";
lin revers_N = mkN "revers" "IRREG";
lin reversal_N = mkN "reversal" "reversals";
lin reverse_A = compoundA (mkA "reverse");
lin reverse_N = mkN "reverse" "reverses";
lin reverse_V = mkV "reverse" "reverses" "reversed" "reversed" "reversing";
lin reverse_V2 = mkV2 (mkV "reverse" "reverses" "reversed" "reversed" "reversing");
lin reversibility_N = mkN "reversibility" ;
lin reversible_A = compoundA (mkA "reversible");
lin reversible_N = mkN "reversible" ;
lin reversion_N = mkN "reversion" "reversions";
lin reversionary_A = compoundA (mkA "reversionary");
lin reversioner_N = mkN "reversioner" ;
lin revert_V = mkV "revert" "reverts" "reverted" "reverted" "reverting";
lin revertible_A = compoundA (mkA "revertible");
lin revetment_N = mkN "revetment" "revetments";
lin review_N = mkN "review" "reviews";
lin review_V = mkV "review" "reviews" "reviewed" "reviewed" "reviewing";
lin review_V2 = mkV2 (mkV "review" "reviews" "reviewed" "reviewed" "reviewing");
lin reviewer_N = mkN "reviewer" "reviewers";
lin revile_V = mkV "revile" "reviles" "reviled" "reviled" "reviling";
lin revile_V2 = mkV2 (mkV "revile" "reviles" "reviled" "reviled" "reviling");
lin revise_N = mkN "revise" "revises";
lin revise_V = mkV "revise";
lin revise_V2 = mkV2 (mkV "revise" "revises" "revised" "revised" "revising");
lin reviser_N = mkN "reviser" "revisers";
lin revision_N = mkN "revision" "revisions";
lin revisionism_N = mkN "revisionism" ;
lin revisionistMasc_N = mkN masculine (mkN "revisionist" "revisionists");
lin revisionistFem_N = mkN feminine (mkN "revisionist" "revisionists");
lin revisit_V2 = mkV2 (mkV "revisit" "revisits" "revisited" "revisited" "revisiting");
lin revitalization_N = mkN "revitalization" "revitalizations";
lin revitalize_V2 = mkV2 (mkV "revitalize" "revitalizes" "revitalized" "revitalized" "revitalizing");
lin revival_N = mkN "revival" "revivals";
lin revivalism_N = mkN "revivalism" ;
lin revivalist_N = mkN "revivalist" "revivalists";
lin revivalistic_A = mkA "revivalistic" ;
lin revive_V = mkV "revive" "revives" "revived" "revived" "reviving";
lin revive_V2 = mkV2 (mkV "revive" "revives" "revived" "revived" "reviving");
lin revivify_V2 = mkV2 (mkV "revivify" "revivifies" "revivified" "revivified" "revivifying");
lin revocable_A = compoundA (mkA "revocable");
lin revocation_N = mkN "revocation" "revocations";
lin revoke_N = mkN "revoke" "revokes";
lin revoke_V = mkV "revoke" "revokes" "revoked" "revoked" "revoking";
lin revoke_V2 = mkV2 (mkV "revoke" "revokes" "revoked" "revoked" "revoking");
lin revolt_N = mkN "revolt" "revolts";
lin revolt_V = mkV "revolt" "revolts" "revolted" "revolted" "revolting";
lin revolt_V2 = mkV2 (mkV "revolt" "revolts" "revolted" "revolted" "revolting");
lin revolution_N = mkN "revolution" "revolutions";
lin revolutionary_A = compoundA (mkA "revolutionary");
lin revolutionary_N = mkN "revolutionary" "revolutionarys";
lin revolutionism_N = mkN "revolutionism" ;
lin revolutionist_N = mkN "revolutionist" ;
lin revolutionize_V2 = mkV2 (mkV "revolutionize" "revolutionizes" "revolutionized" "revolutionized" "revolutionizing");
lin revolve_V = mkV "revolve" "revolves" "revolved" "revolved" "revolving";
lin revolve_V2 = mkV2 (mkV "revolve" "revolves" "revolved" "revolved" "revolving");
lin revolver_N = mkN "revolver" "revolvers";
lin revue_N = mkN "revue" "revues";
lin revulsion_N = mkN "revulsion" ;
lin reward_N = mkN "reward" "rewards";
lin reward_V2 = mkV2 (mkV "reward" "rewards" "rewarded" "rewarded" "rewarding");
lin rewardful_A = mkA "rewardful" ;
lin rewarding_A = mkA "rewarding" ;
lin rewire_V2 = mkV2 (mkV "rewire" "rewires" "rewired" "rewired" "rewiring");
lin reword_V2 = mkV2 (mkV "reword" "rewords" "reworded" "reworded" "rewording");
lin rewording_N = mkN "rewording" ;
lin rework_V2 = mkV2 (mkV "rework");
lin rewrite_N = mkN "rewrite" "rewrites";
lin rewrite_V2 = mkV2 (mkV "re" IrregEng.write_V);
lin rewriting_N = mkN "rewriting" ;
lin rex_PN = mkPN "Rex";
lin reykjavik_PN = mkPN "Reykjavik";
lin rhabdomyoma_N = mkN "rhabdomyoma" ;
lin rhabdomyosarcoma_N = mkN "rhabdomyosarcoma" ;
lin rhabdovirus_N = mkN "rhabdovirus" ;
lin rhagades_N = mkN "rhagades" ;
lin rhapsodize_V = mkV "rhapsodize" "rhapsodizes" "rhapsodized" "rhapsodized" "rhapsodizing";
lin rhapsody_N = mkN "rhapsody" "rhapsodies";
lin rhea_N = mkN "rhea" "rheas";
lin rheims_PN = mkPN "Rheims";
lin rhenish_A = compoundA (mkA "rhenish");
lin rhenium_N = mkN "rhenium" ;
lin rheologic_A = mkA "rheologic" ;
lin rheology_N = mkN "rheology" ;
lin rheometer_N = mkN "rheometer" ;
lin rheostat_N = mkN "rheostat" "rheostats";
lin rhesus_N = mkN "rhesus" "rhesuses";
lin rhetoric_N = mkN "rhetoric" ;
lin rhetorical_A = compoundA (mkA "rhetorical");
lin rhetorician_N = mkN "rhetorician" "rhetoricians";
lin rheum_N = mkN "rheum" ;
lin rheumatic_A = compoundA (mkA "rheumatic");
lin rheumatic_N = mkN "rheumatic" "rheumatics";
lin rheumatism_N = mkN "rheumatism" ;
lin rheumatoid_A = compoundA (mkA "rheumatoid");
lin rheumatologist_N = mkN "rheumatologist" ;
lin rheumatology_N = mkN "rheumatology" ;
lin rheumy_A = mkA "rheumy" ;
lin rheydt_PN = mkPN "Rheydt";
lin rhinal_A = compoundA (mkA "rhinal");
lin rhine_PN = mkPN "Rhine";
lin rhinencephalon_N = mkN "rhinencephalon" ;
lin rhinestone_N = mkN "rhinestone" "rhinestones";
lin rhinion_N = mkN "rhinion" ;
lin rhinitis_N = mkN "rhinitis" ;
lin rhino_N = mkN "rhino" "rhinos";
lin rhinoceros_N = mkN "rhinoceros" "rhinoceros";
lin rhinolaryngology_N = mkN "rhinolaryngology" ;
lin rhinopathy_N = mkN "rhinopathy" ;
lin rhinophyma_N = mkN "rhinophyma" ;
lin rhinorrhea_N = mkN "rhinorrhea" ;
lin rhinoscope_N = mkN "rhinoscope" ;
lin rhinoscopy_N = mkN "rhinoscopy" ;
lin rhinosporidiosis_N = mkN "rhinosporidiosis" ;
lin rhinostenosis_N = mkN "rhinostenosis" ;
lin rhinotomy_N = mkN "rhinotomy" ;
lin rhinotracheitis_N = mkN "rhinotracheitis" ;
lin rhinovirus_N = mkN "rhinovirus" ;
lin rhizoctinia_N = mkN "rhizoctinia" ;
lin rhizoid_N = mkN "rhizoid" ;
lin rhizoidal_A = mkA "rhizoidal" ;
lin rhizomatous_A = mkA "rhizomatous" ;
lin rhizome_N = mkN "rhizome" "rhizomes";
lin rhizomorph_N = mkN "rhizomorph" ;
lin rhizopod_N = mkN "rhizopod" ;
lin rhizopus_N = mkN "rhizopus" ;
lin rhizotomy_N = mkN "rhizotomy" ;
lin rho_N = mkN "rho" ;
lin rhode_PN = mkPN "Rhode";
lin rhodium_N = mkN "rhodium" ;
lin rhodochrosite_N = mkN "rhodochrosite" ;
lin rhododendron_N = mkN "rhododendron" "rhododendrons";
lin rhodolite_N = mkN "rhodolite" ;
lin rhodonite_N = mkN "rhodonite" ;
lin rhomb_N = mkN "rhomb" "rhombs";
lin rhombic_A = mkA "rhombic" ;
lin rhombohedral_A = mkA "rhombohedral" ;
lin rhombohedron_N = mkN "rhombohedron" ;
lin rhomboid_A = compoundA (mkA "rhomboid");
lin rhomboid_N = mkN "rhomboid" "rhomboids";
lin rhombus_N = mkN "rhombus" "rhombuses";
lin rhonchus_N = mkN "rhonchus" ;
lin rhondda_PN = mkPN "Rhondda";
lin rhosllanerchrugog_PN = mkPN "Rhosllanerchrugog";
lin rhubarb_N = mkN "rhubarb" ;
lin rhyl_PN = mkPN "Rhyl";
lin rhyme_N = mkN "rhyme" "rhymes";
lin rhyme_V = mkV "rhyme" "rhymes" "rhymed" "rhymed" "rhyming";
lin rhyme_V2 = mkV2 (mkV "rhyme" "rhymes" "rhymed" "rhymed" "rhyming");
lin rhymer_N = mkN "rhymer" ;
lin rhymester_N = mkN "rhymester" "rhymesters";
lin rhymney_PN = mkPN "Rhymney";
lin rhyolite_N = mkN "rhyolite" ;
lin rhythm_N = mkN "rhythm" "rhythms";
lin rhythmic_A = compoundA (mkA "rhythmic");
lin rhythmical_A = compoundA (mkA "rhythmical");
lin rhythmicity_N = mkN "rhythmicity" ;
lin rib_N = mkN "rib" "ribs";
lin rib_V2 = mkV2 (mkV "rib" "ribs" "ribbed" "ribbed" "ribbing");
lin ribald_A = compoundA (mkA "ribald");
lin ribald_N = mkN "ribald" "ribalds";
lin ribaldry_N = mkN "ribaldry" ;
lin riband_N = mkN "riband" "ribands";
lin ribavirin_N = mkN "ribavirin" ;
lin ribbing_N = mkN "ribbing" ;
lin ribbon_N = mkN "ribbon" "ribbons";
lin ribbonfish_N = mkN "ribbonfish" ;
lin ribbonlike_A = mkA "ribbonlike" ;
lin ribier_N = mkN "ribier" ;
lin ribless_A = mkA "ribless" ;
lin riblike_A = mkA "riblike" ;
lin riboflavin_N = mkN "riboflavin" ;
lin ribonuclease_N = mkN "ribonuclease" ;
lin ribose_N = mkN "ribose" ;
lin ribosome_N = mkN "ribosome" ;
lin rice_N = mkN "rice" ;
lin rice_paper_N = mkN "rice-paper" ;
lin ricegrass_N = mkN "ricegrass" ;
lin ricer_N = mkN "ricer" ;
lin rich_A = mkA "rich" "richer";
lin richard_PN = mkPN "Richard";
lin richmond_PN = mkPN "Richmond";
lin richmond_upon_thames_PN = mkPN "Richmond upon thames";
lin richness_N = mkN "richness" ;
lin richweed_N = mkN "richweed" ;
lin ricin_N = mkN "ricin" ;
lin rick_N = mkN "rick" "ricks";
lin rick_PN = mkPN "Rick";
lin rick_V2 = mkV2 (mkV "rick" "ricks" "ricked" "ricked" "ricking");
lin rickets_N = mkN "rickets" "rickets";
lin rickettsia_N = mkN "rickettsia" ;
lin rickettsial_A = mkA "rickettsial" ;
lin rickettsialpox_N = mkN "rickettsialpox" ;
lin rickety_A = compoundA (mkA "rickety");
lin rickey_N = mkN "rickey" ;
lin rickmansworth_PN = mkPN "Rickmansworth";
lin rickrack_N = mkN "rickrack" ;
lin rickshaw_N = mkN "rickshaw" "rickshaws";
lin ricky_PN = mkPN "Ricky";
lin ricochet_N = mkN "ricochet" "ricochets";
lin ricochet_V = mkV "ricochet" "ricochets" "ricocheted" "ricocheted" "ricocheting";
lin ricochet_V2 = mkV2 (mkV "ricochet" "ricochets" "ricocheted" "ricocheted" "ricocheting");
lin ricotta_N = mkN "ricotta" ;
lin rictus_N = mkN "rictus" ;
lin rid_V = mkV "rid";
lin rid_V2 = mkV2 (IrregEng.rid_V);
lin riddance_N = mkN "riddance" ;
lin riddle_N = mkN "riddle" "riddles";
lin riddle_V2 = mkV2 (mkV "riddle" "riddles" "riddled" "riddled" "riddling");
lin ride_N = mkN "ride" "rides";
lin ride_V = IrregEng.ride_V;
lin ride_V2 = mkV2 (IrregEng.ride_V);
lin riderMasc_N = mkN masculine (mkN "rider" "riders");
lin riderFem_N = mkN feminine (mkN "rider" "riders");
lin riderless_A = compoundA (mkA "riderless");
lin ridge_N = mkN "ridge" "ridges";
lin ridge_V2 = mkV2 (mkV "ridge" "ridges" "ridged" "ridged" "ridging");
lin ridge_tile_N = mkN "ridge-tile" "ridge-tiles";
lin ridgeling_N = mkN "ridgeling" ;
lin ridgepole_N = mkN "ridgepole" "ridgepoles";
lin ridicule_N = mkN "ridicule" "ridicules";
lin ridicule_V2 = mkV2 (mkV "ridicule" "ridicules" "ridiculed" "ridiculed" "ridiculing");
lin ridiculous_A = compoundA (mkA "ridiculous");
lin riding_N = mkN "riding" "ridings";
lin riding_habit_N = mkN "riding-habit" "riding-habits";
lin riding_lamp_N = mkN "riding-lamp" "riding-lamps";
lin riding_light_N = mkN "riding-light" "riding-lights";
lin riding_master_N = mkN "riding-master" "riding-masters";
lin riding_school_N = mkN "riding-school" "riding-schools";
lin ridley_N = mkN "ridley" ;
lin riel_N = mkN "riel" ;
lin riesling_N = mkN "riesling" "rieslings";
lin rifampin_N = mkN "rifampin" ;
lin rife_A = compoundA (mkA "rife");
lin riff_N = mkN "riff" "riffs";
lin riff_raff_N = mkN "riff-raff" "riff-rafves" {- FIXME: guessed plural form -};
lin riffle_N = mkN "riffle" ;
lin riffle_V = mkV "riffle" "riffles" "riffled" "riffled" "riffling";
lin riffle_V2 = mkV2 (mkV "riffle" "riffles" "riffled" "riffled" "riffling");
lin rifle_N = mkN "rifle" "rifles";
lin rifle_V2 = mkV2 (mkV "rifle" "rifles" "rifled" "rifled" "rifling");
lin rifle_range_N = mkN "rifle-range" "rifle-ranges";
lin rifle_shot_N = mkN "rifle-shot" "rifle-shots";
lin riflebird_N = mkN "riflebird" ;
lin rifleman_N = mkN masculine (mkN "rifleman" "riflemen");
lin rift_N = mkN "rift" "rifts";
lin rift_valley_N = mkN "rift-valley" "rift-valleys";
lin rig_N = mkN "rig" "rigs";
lin rig_V = mkV "rig" "rigs" "rigged" "rigged" "rigging";
lin rig_V2 = mkV2 (mkV "rig" "rigs" "rigged" "rigged" "rigging");
lin riga_PN = mkPN "Riga";
lin rigatoni_N = mkN "rigatoni" ;
lin rigger_N = mkN "rigger" "riggers";
lin rigging_N = mkN "rigging" ;
lin right_A = compoundA (mkA "right");
lin right_Adv = mkAdv "right";
lin right_N = mkN "right" "rights";
lin right_V2 = mkV2 (mkV "right" "rights" "righted" "righted" "righting");
lin right_angled_A = compoundA (mkA "right-angled");
lin right_down_A = compoundA (mkA "right-down");
lin right_down_Adv = mkAdv "right-down";
lin right_hand_A = compoundA (mkA "right-hand");
lin right_handed_A = compoundA (mkA "right-handed");
lin right_hander_N = mkN "right-hander" "right-handers";
lin right_minded_A = compoundA (mkA "right-minded");
lin right_turn_N = mkN "right-turn" "right-turns";
lin right_wing_N = mkN "right-wing" "right-wings";
lin right_winger_N = mkN "right-winger" "right-wingers";
lin righteous_A = compoundA (mkA "righteous");
lin righteousness_N = mkN "righteousness" ;
lin rightful_A = compoundA (mkA "rightful");
lin rightfulness_N = mkN "rightfulness" ;
lin rightish_A = mkA "rightish" ;
lin rightism_N = mkN "rightism" ;
lin rightist_A = compoundA (mkA "rightist");
lin rightist_N = mkN "rightist" "rightists";
lin rightmost_A = mkA "rightmost" ;
lin rightness_N = mkN "rightness" ;
lin rigid_A = compoundA (mkA "rigid");
lin rigidity_N = mkN "rigidity" "rigidities";
lin rigmarole_N = mkN "rigmarole" "rigmaroles";
lin rigor_mortis_N = mkN "rigor mortis" ;
lin rigorous_A = compoundA (mkA "rigorous");
lin rigour_N = mkN "rigour" "rigours";
lin rigout_N = mkN "rigout" "rigouts";
lin rijeka_PN = mkPN "Rijeka";
lin rijsttaffel_N = mkN "rijsttaffel" ;
lin rile_V2 = mkV2 (mkV "rile" "riles" "riled" "riled" "riling");
lin rill_N = mkN "rill" "rills";
lin rim_N = mkN "rim" "rims";
lin rim_V2 = mkV2 (mkV "rim" "rims" "rimmed" "rimmed" "rimming");
lin rima_N = mkN "rima" ;
lin rime_N = mkN "rime" ;
lin rime_V2 = mkV2 (mkV "rime" "rimes" "rimed" "rimed" "riming");
lin rimini_PN = mkPN "Rimini";
lin rimless_A = mkA "rimless" ;
lin rimose_A = mkA "rimose" ;
lin rimu_N = mkN "rimu" ;
lin rind_N = mkN "rind" "rinds";
lin rinderpest_N = mkN "rinderpest" ;
lin ring_N = mkN "ring" "rings";
lin ring_V = IrregEng.ring_V;
lin ring_4_V2 = mkV2 (IrregEng.ring_V);
lin ring_6_V2 = mkV2 (mkV "ring");  -- regular
lin ring_armour_N = mkN "ring-armour" ;
lin ring_finger_N = mkN "ring-finger" "ring-fingers";
lin ring_mail_N = mkN "ring-mail" ;
lin ring_road_N = mkN "ring-road" "ring-roads";
lin ringdove_N = mkN "ringdove" ;
lin ringer_N = mkN "ringer" "ringers";
lin ringgit_N = mkN "ringgit" ;
lin ringhals_N = mkN "ringhals" ;
lin ringing_N = mkN "ringing" ;
lin ringleader_N = mkN "ringleader" "ringleaders";
lin ringlet_N = mkN "ringlet" "ringlets";
lin ringleted_A = mkA "ringleted" ;
lin ringlike_A = mkA "ringlike" ;
lin ringmaster_N = mkN "ringmaster" "ringmasters";
lin rings_N = mkN "rings" ;
lin ringside_N = mkN "ringside" "ringsides";
lin ringtail_N = mkN "ringtail" ;
lin ringwood_PN = mkPN "Ringwood";
lin ringworm_N = mkN "ringworm" ;
lin rink_N = mkN "rink" "rinks";
lin rinse_N = mkN "rinse" "rinses";
lin rinse_V2 = mkV2 (mkV "rinse" "rinses" "rinsed" "rinsed" "rinsing");
lin rio_de_janeiro_PN = mkPN "Rio de janeiro";
lin riot_N = mkN "riot" "riots";
lin riot_V = mkV "riot" "riots" "rioted" "rioted" "rioting";
lin rioter_N = mkN "rioter" "rioters";
lin rioting_N = mkN "rioting" ;
lin riotous_A = compoundA (mkA "riotous");
lin rip_N = mkN "rip" "rips";
lin rip_PN = mkPN "Rip";
lin rip_V = mkV "rip" "rips" "ripped" "ripped" "ripping";
lin rip_V2 = mkV2 (mkV "rip" "rips" "ripped" "ripped" "ripping");
lin rip_off_N = mkN "rip-off" "rip-offs";
lin rip_roaring_A = compoundA (mkA "rip-roaring");
lin riparian_A = compoundA (mkA "riparian");
lin ripcord_N = mkN "ripcord" "ripcords";
lin ripe_A = mkA "ripe" "riper";
lin ripen_V = mkV "ripen" "ripens" "ripened" "ripened" "ripening";
lin ripen_V2 = mkV2 (mkV "ripen" "ripens" "ripened" "ripened" "ripening");
lin ripeness_N = mkN "ripeness" ;
lin ripening_N = mkN "ripening" ;
lin ripley_PN = mkPN "Ripley";
lin ripon_PN = mkPN "Ripon";
lin riposte_N = mkN "riposte" "ripostes";
lin riposte_V = mkV "riposte" "ripostes" "riposted" "riposted" "riposting";
lin ripper_N = mkN "ripper" ;
lin ripple_N = mkN "ripple" "ripples";
lin ripple_V = mkV "ripple" "ripples" "rippled" "rippled" "rippling";
lin ripple_V2 = mkV2 (mkV "ripple" "ripples" "rippled" "rippled" "rippling");
lin ripsaw_N = mkN "ripsaw" "ripsaws";
lin riptide_N = mkN "riptide" "riptides";
lin risborough_PN = mkPN "Risborough";
lin risca_PN = mkPN "Risca";
lin rise_N = mkN "rise" "rises";
lin rise_V = IrregEng.rise_V;
lin rise_V2 = mkV2 (IrregEng.rise_V);
lin rise_VA = mkVA (IrregEng.rise_V);
lin riser_N = mkN "riser" "risers";
lin rishton_PN = mkPN "Rishton";
lin risibility_N = mkN "risibility" ;
lin risible_A = compoundA (mkA "risible");
lin rising_N = mkN "rising" "risings";
lin risk_N = mkN "risk" "risks";
lin risk_V2 = mkV2 (mkV "risk" "risks" "risked" "risked" "risking");
lin risk_VV = ingVV (mkV "risk");
lin riskiness_N = mkN "riskiness" ;
lin risklessness_N = mkN "risklessness" ;
lin risky_A = mkA "risky" "riskier";
lin risotto_N = mkN "risotto" "risottos";
lin risque_A = compoundA (mkA "risqué");
lin rissole_N = mkN "rissole" "rissoles";
lin rita_PN = mkPN "Rita";
lin rite_N = mkN "rite" "rites";
lin ritonavir_N = mkN "ritonavir" ;
lin ritual_A = compoundA (mkA "ritual");
lin ritual_N = mkN "ritual" "rituals";
lin ritualism_N = mkN "ritualism" ;
lin ritualist_N = mkN "ritualist" "ritualists";
lin ritualistic_A = compoundA (mkA "ritualistic");
lin ritz_N = mkN "ritz" ;
lin ritzy_A = compoundA (mkA "ritzy");
lin rival_N = mkN human (mkN "rival" "rivals");
lin rival_V2 = mkV2 (mkV "rival" "rivals" "rivalled" "rivalled" "rivalling");
lin rivalry_N = mkN "rivalry" "rivalries";
lin rive_V = mkV "rive" "rives" "rived" "rived" "riving";
lin rive_V2 = mkV2 (mkV "rive" "rives" "rived" "rived" "riving");
lin river_N = mkN "river" "rivers";
lin river_basin_N = mkN "river-basin" "river-basins";
lin river_bed_N = mkN "river-bed" "river-beds";
lin riverbank_N = mkN "riverbank" ;
lin riverbed_N = mkN "riverbed" ;
lin riverside_N = mkN "riverside" "riversides";
lin rivet_N = mkN "rivet" "rivets";
lin rivet_V = mkV "rivet";
lin rivet_V2 = mkV2 (mkV "rivet" "rivets" "riveted" "riveted" "riveting");
lin riveter_N = mkN "riveter" "riveters";
lin riviera_PN = mkPN "Riviera";
lin rivulet_N = mkN "rivulet" "rivulets";
lin rivulus_N = mkN "rivulus" ;
lin rly_N = mkN "rly" ;
lin rm_N = mkN "rm" ;
lin rn_N = mkN "rn" ;
lin roach_N = mkN "roach" "roach";
lin road_N = mkN "road" "roads";
lin road_book_N = mkN "road-book" "road-books";
lin road_hog_N = mkN "road-hog" "road-hogs";
lin road_metal_N = mkN "road-metal" ;
lin road_sense_N = mkN "road-sense" ;
lin roadbed_N = mkN "roadbed" "roadbeds";
lin roadblock_N = mkN "roadblock" "roadblocks";
lin roadbook_N = mkN "roadbook" ;
lin roadhouse_N = mkN "roadhouse" "roadhouses";
lin roadkill_N = mkN "roadkill" ;
lin roadless_A = compoundA (mkA "roadless");
lin roadman_N = mkN masculine (mkN "roadman" "roadmen");
lin roadmender_N = mkN "roadmender" "roadmenders";
lin roadrunner_N = mkN "roadrunner" ;
lin roads_N = mkN "roads" ;
lin roadside_N = mkN "roadside" "roadsides";
lin roadstead_N = mkN "roadstead" "roadsteads";
lin roadster_N = mkN "roadster" "roadsters";
lin roadway_N = mkN "roadway" "roadways";
lin roadworthiness_N = mkN "roadworthiness" ;
lin roadworthy_A = compoundA (mkA "roadworthy");
lin roam_V = mkV "roam" "roams" "roamed" "roamed" "roaming";
lin roam_V2 = mkV2 (mkV "roam" "roams" "roamed" "roamed" "roaming");
lin roan_A = compoundA (mkA "roan");
lin roan_N = mkN "roan" "roans";
lin roar_N = mkN "roar" "roars";
lin roar_V = mkV "roar" "roars" "roared" "roared" "roaring";
lin roar_V2 = mkV2 (mkV "roar" "roars" "roared" "roared" "roaring");
lin roarer_N = mkN "roarer" ;
lin roaring_Adv = mkAdv "roaring";
lin roast_A = compoundA (mkA "roast");
lin roast_N = mkN "roast" "roasts";
lin roast_V = mkV "roast" "roasts" "roasted" "roasted" "roasting";
lin roast_V2 = mkV2 (mkV "roast" "roasts" "roasted" "roasted" "roasting");
lin roaster_N = mkN "roaster" "roasters";
lin roasting_N = mkN "roasting" "roastings";
lin rob_PN = mkPN "Rob";
lin rob_V2 = mkV2 (mkV "rob" "robs" "robbed" "robbed" "robbing");
lin robalo_N = mkN "robalo" ;
lin robber_N = mkN human (mkN "robber" "robbers");
lin robbery_N = mkN "robbery" "robberies";
lin robe_N = mkN "robe" "robes";
lin robe_V = mkV "robe" "robes" "robed" "robed" "robing";
lin robe_V2 = mkV2 (mkV "robe" "robes" "robed" "robed" "robing");
lin robert_PN = mkPN "Robert";
lin robin_N = mkN "robin" "robins";
lin robin_PN = mkPN "Robin";
lin roble_N = mkN "roble" ;
lin robot_N = mkN "robot" "robots";
lin robotic_A = mkA "robotic" ;
lin robotics_N = mkN "robotics" ;
lin robust_A = compoundA (mkA "robust");
lin robustness_N = mkN "robustness" ;
lin roc_N = mkN "roc" "rocs";
lin roccella_N = mkN "roccella" ;
lin rochdale_PN = mkPN "Rochdale";
lin rochester_PN = mkPN "Rochester";
lin rock_'n_roll_N = mkN "rock-'n-roll" ;
lin rock_N = mkN "rock" "rocks";
lin rock_V = mkV "rock" "rocks" "rocked" "rocked" "rocking";
lin rock_V2 = mkV2 (mkV "rock" "rocks" "rocked" "rocked" "rocking");
lin rock_bottom_N = mkN "rock-bottom" ;
lin rock_cake_N = mkN "rock-cake" "rock-cakes";
lin rock_climbing_N = mkN "rock-climbing" ;
lin rock_crystal_N = mkN "rock-crystal" "rock-crystals";
lin rock_garden_N = mkN "rock-garden" "rock-gardens";
lin rock_plant_N = mkN "rock-plant" "rock-plants";
lin rock_salmon_N = mkN "rock-salmon" "rock-salmon";
lin rock_salt_N = mkN "rock-salt" ;
lin rockabilly_N = mkN "rockabilly" ;
lin rocker_N = mkN "rocker" "rockers";
lin rockers_N = mkN "rockers" ;
lin rockery_N = mkN "rockery" "rockeries";
lin rocket_N = mkN "rocket" "rockets";
lin rocket_V = mkV "rocket" "rockets" "rocketed" "rocketed" "rocketing";
lin rocket_base_N = mkN "rocket-base" "rocket-bases";
lin rocket_range_N = mkN "rocket-range" "rocket-ranges";
lin rocketry_N = mkN "rocketry" ;
lin rockfish_N = mkN "rockfish" ;
lin rockiness_N = mkN "rockiness" ;
lin rocking_chair_N = mkN "rocking-chair" "rocking-chairs";
lin rocking_horse_N = mkN "rocking-horse" "rocking-horses";
lin rockrose_N = mkN "rockrose" ;
lin rockslide_N = mkN "rockslide" ;
lin rockweed_N = mkN "rockweed" ;
lin rocky_A = mkA "rocky" "rockier";
lin rococo_A = compoundA (mkA "rococo");
lin rococo_N = mkN "rococo" ;
lin rod_N = mkN "rod" "rods";
lin rod_PN = mkPN "Rod";
lin rodent_N = mkN "rodent" "rodents";
lin rodeo_N = mkN "rodeo" "rodeos";
lin rodney_PN = mkPN "Rodney";
lin rodomontade_N = mkN "rodomontade" ;
lin roe_N = mkN "roe" "roe";
lin roebuck_N = mkN "roebuck" "roebucks";
lin roentgen_N = mkN "roentgen" "roentgens";
lin roentgenium_N = mkN "roentgenium" ;
lin roentgenogram_N = mkN "roentgenogram" ;
lin roentgenographic_A = mkA "roentgenographic" ;
lin roentgenography_N = mkN "roentgenography" ;
lin rofecoxib_N = mkN "rofecoxib" ;
lin rogation_N = mkN "rogation" "rogations";
lin roger_PN = mkPN "Roger";
lin rogue_N = mkN "rogue" "rogues";
lin rogue_elephant_N = mkN "rogue-elephant" "rogue-elephants";
lin roguery_N = mkN "roguery" "rogueries";
lin roguish_A = compoundA (mkA "roguish");
lin roguishness_N = mkN "roguishness" ;
lin roil_V2 = mkV2 (mkV "roil");
lin roisterer_N = mkN "roisterer" "roisterers";
lin role_1_N = mkN "role" "roles";
lin role_2_N = mkN "rôle" "rôles";
lin role_N = mkN "role" ;
lin roleplaying_N = mkN "roleplaying" ;
lin roll_N = mkN "roll" "rolls";
lin roll_V = mkV "roll" "rolls" "rolled" "rolled" "rolling";
lin roll_V2 = mkV2 (mkV "roll" "rolls" "rolled" "rolled" "rolling");
lin roll_call_N = mkN "roll-call" "roll-calls";
lin roll_on_N = mkN "roll-on" "roll-ons";
lin rollback_N = mkN "rollback" ;
lin roller_N = mkN "roller" "rollers";
lin roller_skate_N = mkN "roller-skate" "roller-skates";
lin rollerblader_N = mkN "rollerblader" ;
lin rollerblading_N = mkN "rollerblading" ;
lin rollicking_A = compoundA (mkA "rollicking");
lin rolling_N = mkN "rolling" ;
lin rolling_mill_N = mkN "rolling-mill" "rolling-mills";
lin rolling_pin_N = mkN "rolling-pin" "rolling-pins";
lin rolling_stock_N = mkN "rolling-stock" ;
lin rollmops_N = mkN "rollmops" ;
lin rollover_N = mkN "rollover" ;
lin roly_poly_N = mkN "roly-poly" "roly-polies";
lin romaic_A = compoundA (mkA "romaic");
lin romaic_N = mkN "romaic" ;
lin roman_A = compoundA (mkA "roman");
lin roman_N = mkN "roman" "romans";
lin romance_A = compoundA (mkA "romance");
lin romance_N = mkN "romance" "romances";
lin romance_V = mkV "romance" "romances" "romanced" "romanced" "romancing";
lin romance_V2 = mkV2 (mkV "romance" "romances" "romanced" "romanced" "romancing");
lin romanesque_N = mkN "romanesque" ;
lin romania_PN = mkPN "Romania";
lin romanian_A = compoundA (mkA "Romanian");
lin romanian_N = mkN "Romanian" "Romanians";
lin romantic_A = compoundA (mkA "romantic");
lin romantic_N = mkN "romantic" "romantics";
lin romantically_Adv = mkAdv "romantically";
lin romanticism_N = mkN "romanticism" ;
lin romanticist_N = mkN "romanticist" "romanticists";
lin romanticize_V = mkV "romanticize" "romanticizes" "romanticized" "romanticized" "romanticizing";
lin romanticize_V2 = mkV2 (mkV "romanticize" "romanticizes" "romanticized" "romanticized" "romanticizing");
lin romany_A = compoundA (mkA "romany");
lin romany_N = mkN "romany" "romanies";
lin rome_PN = mkPN "Rome";
lin romish_A = compoundA (mkA "romish");
lin romp_N = mkN "romp" "romps";
lin romp_V = mkV "romp" "romps" "romped" "romped" "romping";
lin romper_N = mkN "romper" "rompers";
lin romsey_PN = mkPN "Romsey";
lin ron_PN = mkPN "Ron";
lin ronald_PN = mkPN "Ronald";
lin rondeau_N = mkN "rondeau" "rondeaus";
lin rondel_N = mkN "rondel" "rondels";
lin rondelet_N = mkN "rondelet" ;
lin rondo_N = mkN "rondo" "rondos";
lin roneo_N = mkN "roneo" "roneos";
lin roneo_V2 = mkV2 (mkV "roneo" "roneos" "roneoed" "roneoed" "roneoing");
lin ronnie_PN = mkPN "Ronnie";
lin rontgen_N = mkN "röntgen" "röntgens";
lin rood_N = mkN "rood" "roods";
lin rood_tree_N = mkN "rood-tree" "rood-trees";
lin roof_N = mkN "roof" "roofs";
lin roof_V2 = mkV2 (mkV "roof" "roofs" "roofed" "roofed" "roofing");
lin roof_garden_N = mkN "roof-garden" "roof-gardens";
lin roof_tree_N = mkN "roof-tree" "roof-trees";
lin roofer_N = mkN "roofer" ;
lin roofing_N = mkN "roofing" ;
lin roofless_A = compoundA (mkA "roofless");
lin rooftop_N = mkN "rooftop" ;
lin rooibos_N = mkN "rooibos" ;
lin rook_N = mkN "rook" "rooks";
lin rook_V2 = mkV2 (mkV "rook" "rooks" "rooked" "rooked" "rooking");
lin rookery_N = mkN "rookery" "rookeries";
lin rookie_N = mkN "rookie" "rookies";
lin room_N = mkN "room" "rooms";
lin room_V = mkV "room" "rooms" "roomed" "roomed" "rooming";
lin room_mate_N = mkN "room-mate" "room-mates";
lin roomer_N = mkN "roomer" "roomers";
lin roomette_N = mkN "roomette" ;
lin roomful_N = mkN "roomful" "roomfuls";
lin roommate_N = mkN "roommate" ;
lin roomy_A = mkA "roomy" "roomier";
lin roost_N = mkN "roost" "roosts";
lin roost_V = mkV "roost" "roosts" "roosted" "roosted" "roosting";
lin rooster_N = mkN "rooster" "roosters";
lin root_N = mkN "root" "roots";
lin root_V = mkV "root" "roots" "rooted" "rooted" "rooting";
lin root_V2 = mkV2 (mkV "root" "roots" "rooted" "rooted" "rooting");
lin rootage_N = mkN "rootage" ;
lin rootbound_A = mkA "rootbound" ;
lin rooting_N = mkN "rooting" ;
lin rootle_V = mkV "rootle" "rootles" "rootled" "rootled" "rootling";
lin rootless_A = compoundA (mkA "rootless");
lin rootlet_N = mkN "rootlet" ;
lin roots_N = mkN "roots" ;
lin rootstock_N = mkN "rootstock" ;
lin rope_N = mkN "rope" "ropes";
lin rope_V2 = mkV2 (mkV "rope" "ropes" "roped" "roped" "roping");
lin rope_dancer_N = mkN "rope-dancer" "rope-dancers";
lin rope_ladder_N = mkN "rope-ladder" "rope-ladders";
lin rope_yard_N = mkN "rope-yard" "rope-yards";
lin rope_yarn_N = mkN "rope-yarn" ;
lin ropemaker_N = mkN "ropemaker" ;
lin roper_N = mkN "roper" ;
lin ropewalk_N = mkN "ropewalk" "ropewalks";
lin ropewalker_N = mkN "ropewalker" "ropewalkers";
lin ropeway_N = mkN "ropeway" "ropeways";
lin ropey_A = mkA "ropey" "ropeyyer";
lin roping_N = mkN "roping" ;
lin ropy_A = mkA "ropy" ;
lin roquefort_N = mkN "roquefort" ;
lin roridula_N = mkN "roridula" ;
lin rorqual_N = mkN "rorqual" ;
lin rosaceous_A = mkA "rosaceous" ;
lin rosalie_PN = mkPN "Rosalie";
lin rosalind_PN = mkPN "Rosalind";
lin rosamund_PN = mkPN "Rosamund";
lin rosario_PN = mkPN "Rosario";
lin rosary_N = mkN "rosary" "rosaries";
lin roscommon_PN = mkPN "Roscommon";
lin rose_A = mkA "rose" ;
lin rose_N = mkN "rose" "roses";
lin rose_PN = mkPN "Rose";
lin rose_V = mkV "rose";
lin rose_V2 = mkV2 (mkV "rose");
lin rose_bed_N = mkN "rose-bed" "rose-beds";
lin rose_leaf_N = mkN "rose-leaf" "rose-leaves";
lin rose_red_A = compoundA (mkA "rose-red");
lin rose_water_N = mkN "rose-water" ;
lin roseate_A = compoundA (mkA "roseate");
lin rosebay_N = mkN "rosebay" ;
lin rosebud_N = mkN "rosebud" "rosebuds";
lin rosefish_N = mkN "rosefish" ;
lin roselle_N = mkN "roselle" ;
lin rosemaling_N = mkN "rosemaling" ;
lin rosemary_N = mkN "rosemary" ;
lin rosemary_PN = mkPN "Rosemary";
lin rosette_N = mkN "rosette" "rosettes";
lin rosewood_N = mkN "rosewood" ;
lin rosie_PN = mkPN "Rosie";
lin rosilla_N = mkN "rosilla" ;
lin rosin_N = mkN "rosin" ;
lin rosin_V2 = mkV2 (mkV "rosin" "rosins" "rosinned" "rosinned" "rosinning");
lin rosinweed_N = mkN "rosinweed" ;
lin rosita_N = mkN "rosita" ;
lin roslyn_PN = mkPN "Roslyn";
lin ross_on_wye_PN = mkPN "Ross-on-wye";
lin rossington_PN = mkPN "Rossington";
lin rosslare_PN = mkPN "Rosslare";
lin roster_N = mkN "roster" "rosters";
lin rostock_PN = mkPN "Rostock";
lin rostov_na_donu_PN = mkPN "Rostov-na-donu";
lin rostrate_A = mkA "rostrate" ;
lin rostrum_N = mkN "rostrum" "rostrums";
lin rosy_A = mkA "rosy" "rosier";
lin rot_N = mkN "rot" ;
lin rot_V = mkV "rot" "rots" "rotted" "rotted" "rotting";
lin rot_V2 = mkV2 (mkV "rot" "rots" "rotted" "rotted" "rotting");
lin rota_N = mkN "rota" "rotas";
lin rotarian_N = mkN "rotarian" "rotarians";
lin rotary_A = compoundA (mkA "rotary");
lin rotary_N = mkN "rotary" "rotaries";
lin rotatable_A = mkA "rotatable" ;
lin rotate_V = mkV "rotate" "rotates" "rotated" "rotated" "rotating";
lin rotate_V2 = mkV2 (mkV "rotate" "rotates" "rotated" "rotated" "rotating");
lin rotation_N = mkN "rotation" "rotations";
lin rotational_A = compoundA (mkA "rotational");
lin rotatory_A = compoundA (mkA "rotatory");
lin rotavirus_N = mkN "rotavirus" ;
lin rote_N = mkN "rote" "IRREG";
lin rotenone_N = mkN "rotenone" ;
lin rotgut_N = mkN "rotgut" ;
lin rotherham_PN = mkPN "Rotherham";
lin rothesay_PN = mkPN "Rothesay";
lin rothwell_PN = mkPN "Rothwell";
lin rotifer_N = mkN "rotifer" ;
lin rotisserie_N = mkN "rotisserie" "rotisseries";
lin rotl_N = mkN "rotl" ;
lin rotogravure_N = mkN "rotogravure" "rotogravures";
lin rotor_N = mkN "rotor" "rotors";
lin rotten_A = compoundA (mkA "rotten");
lin rottenness_N = mkN "rottenness" ;
lin rottenstone_N = mkN "rottenstone" ;
lin rotter_N = mkN "rotter" "rotters";
lin rotterdam_PN = mkPN "Rotterdam";
lin rotund_A = compoundA (mkA "rotund");
lin rotunda_N = mkN "rotunda" "rotundas";
lin rotundity_N = mkN "rotundity" ;
lin roubaix_PN = mkPN "Roubaix";
lin rouble_N = mkN "rouble" "roubles";
lin roue_N = mkN "roué" "roués";
lin rouen_PN = mkPN "Rouen";
lin rouge_N = mkN "rouge" ;
lin rouge_V = mkV "rouge" "rouges" "rouged" "rouged" "rouging";
lin rouge_V2 = mkV2 (mkV "rouge" "rouges" "rouged" "rouged" "rouging");
lin rough_A = mkA "rough" "rougher";
lin rough_Adv = mkAdv "rough";
lin rough_N = mkN "rough" "roughs";
lin rough_V2 = mkV2 (mkV "rough" "roughs" "roughed" "roughed" "roughing");
lin rough_and_tumble_A = compoundA (mkA "rough-and-tumble");
lin rough_and_tumble_N = mkN "rough-and-tumble" "rough-and-tumbles";
lin rough_dry_V2 = mkV2 (mkV "rough-dry" "rough-dries" "rough-dried" "rough-dried" "rough-drying");
lin rough_hewn_A = compoundA (mkA "rough-hewn");
lin rough_house_V = mkV "rough-house" "rough-houses" "rough-housed" "rough-housed" "rough-housing";
lin rough_house_V2 = mkV2 (mkV "rough-house" "rough-houses" "rough-housed" "rough-housed" "rough-housing");
lin rough_spoken_A = compoundA (mkA "rough-spoken");
lin roughage_N = mkN "roughage" ;
lin roughcast_N = mkN "roughcast" ;
lin roughcast_V2 = mkV2 (mkV "rough" IrregEng.cast_V);
lin roughdried_A = mkA "roughdried" ;
lin roughen_V = mkV "roughen" "roughens" "roughened" "roughened" "roughening";
lin roughen_V2 = mkV2 (mkV "roughen" "roughens" "roughened" "roughened" "roughening");
lin roughhewn_A = mkA "roughhewn" ;
lin roughish_A = compoundA (mkA "roughish");
lin roughneck_N = mkN "roughneck" "roughnecks";
lin roughness_N = mkN "roughness" ;
lin roughrider_N = mkN "roughrider" "roughriders";
lin roughshod_A = compoundA (mkA "roughshod");
lin roulade_N = mkN "roulade" ;
lin rouleau_N = mkN "rouleau" ;
lin roulette_N = mkN "roulette" ;
lin round_A = mkA "round" "rounder";
lin round_Adv = mkAdv "round";
lin round_N = mkN "round" "rounds";
lin round_V = mkV "round" "rounds" "rounded" "rounded" "rounding";
lin round_V2 = mkV2 (mkV "round" "rounds" "rounded" "rounded" "rounding");
lin round_arm_A = compoundA (mkA "round-arm");
lin round_arm_Adv = mkAdv "round-arm";
lin round_backed_A = compoundA (mkA "round-backed");
lin round_eyed_A = compoundA (mkA "round-eyed");
lin round_hand_N = mkN "round-hand" ;
lin round_shot_N = mkN "round-shot" "round-shots";
lin round_shouldered_A = compoundA (mkA "round-shouldered");
lin round_the_clock_A = compoundA (mkA "round-the-clock");
lin round_the_clock_Adv = mkAdv "round-the-clock";
lin roundabout_A = compoundA (mkA "roundabout");
lin roundabout_N = mkN "roundabout" "roundabouts";
lin roundedness_N = mkN "roundedness" ;
lin roundel_N = mkN "roundel" "roundels";
lin roundelay_N = mkN "roundelay" "roundelays";
lin rounder_N = mkN "rounder" ;
lin rounders_N = mkN "rounders" ;
lin roundhead_N = mkN "roundhead" "roundheads";
lin roundhouse_N = mkN "roundhouse" "roundhouses";
lin rounding_N = mkN "rounding" ;
lin roundish_A = compoundA (mkA "roundish");
lin roundness_N = mkN "roundness" ;
lin roundsman_N = mkN masculine (mkN "roundsman" "roundsmen");
lin roundup_N = mkN "roundup" "roundups";
lin rouse_V = mkV "rouse" "rouses" "roused" "roused" "rousing";
lin rouse_V2 = mkV2 (mkV "rouse" "rouses" "roused" "roused" "rousing");
lin rout_N = mkN "rout" "routs";
lin rout_V2 = mkV2 (mkV "rout" "routs" "routed" "routed" "routing");
lin route_N = mkN "route" "routes";
lin route_V2 = mkV2 (mkV "route" "routes" "routed" "routed" "routing");
lin routemarch_N = mkN "routemarch" "routemarches";
lin router_N = mkN "router" ;
lin routine_A = compoundA (mkA "routine");
lin routine_N = mkN "routine" "routines";
lin roux_N = mkN "roux" ;
lin rove_V = mkV "rove" "roves" "roved" "roved" "roving";
lin rove_V2 = mkV2 (mkV "rove" "roves" "roved" "roved" "roving");
lin rover_N = mkN "rover" "rovers";
lin row_N = mkN "row" "rows";
lin row_V = mkV "row" "rows" "rowed" "rowed" "rowing";
lin row_V2 = mkV2 (mkV "row" "rows" "rowed" "rowed" "rowing");
lin rowan_N = mkN "rowan" "rowans";
lin rowan_berry_N = mkN "rowan-berry" "rowan-berries";
lin rowan_tree_N = mkN "rowan-tree" "rowan-trees";
lin rowanberry_N = mkN "rowanberry" ;
lin rowboat_N = mkN "rowboat" "rowboats";
lin rowdiness_N = mkN "rowdiness" ;
lin rowdy_A = mkA "rowdy" "rowdier";
lin rowdy_N = mkN "rowdy" "rowdies";
lin rowdyism_N = mkN "rowdyism" ;
lin rowel_N = mkN "rowel" "rowels";
lin rower_N = mkN "rower" "rowers";
lin rowing_N = mkN "rowing" ;
lin rowing_boat_N = mkN "rowing-boat" "rowing-boats";
lin rowing_club_N = mkN "rowing-club" "rowing-clubs";
lin rowlands_gill_PN = mkPN "Rowlands gill";
lin rowlock_N = mkN "rowlock" "rowlocks";
lin roy_PN = mkPN "Roy";
lin royal_A = compoundA (mkA "royal");
lin royal_N = mkN "royal" ;
lin royalism_N = mkN "royalism" ;
lin royalist_N = mkN "royalist" "royalists";
lin royalty_N = mkN "royalty" "royalties";
lin royston_PN = mkPN "Royston";
lin rpm_N = mkN "rpm" "rpm";
lin rspca_N = mkN "rspca" ;
lin rsvp_PN = mkPN "Rsvp";
lin rt_hon_PN = mkPN "Rt hon";
lin rub_N = mkN "rub" "rubs";
lin rub_V = mkV "rub" "rubs" "rubbed" "rubbed" "rubbing";
lin rub_V2 = mkV2 (mkV "rub" "rubs" "rubbed" "rubbed" "rubbing");
lin rub_a_dub_N = mkN "rub-a-dub" ;
lin rub_down_N = mkN "rub-down" "rub-downs";
lin rub_up_N = mkN "rub-up" "rub-ups";
lin rubato_N = mkN "rubato" ;
lin rubber_A = mkA "rubber" ;
lin rubber_N = mkN "rubber" "rubbers";
lin rubber_V2 = mkV2 (mkV "rubber" "rubbers" "rubbered" "rubbered" "rubbering");
lin rubber_necking_V = mkV "rubber-necking";
lin rubber_stamp_V2 = mkV2 (mkV "rubber-stamp" "rubber-stamps" "rubber-stamped" "rubber-stamped" "rubber-stamping");
lin rubberize_V2 = mkV2 (mkV "rubberize" "rubberizes" "rubberized" "rubberized" "rubberizing");
lin rubberneck_N = mkN "rubberneck" "rubbernecks";
lin rubberneck_V = mkV "rubberneck" "rubbernecks" "rubbernecked" "rubbernecked" "rubbernecking";
lin rubbery_A = compoundA (mkA "rubbery");
lin rubbing_N = mkN "rubbing" "rubbings";
lin rubbish_N = mkN "rubbish" ;
lin rubbish_V2 = mkV2 (mkV "rubbish" "rubbishes" "rubbished" "rubbished" "rubbishing");
lin rubbishing_N = mkN "rubbishing" "rubbishings";
lin rubbishy_A = compoundA (mkA "rubbishy");
lin rubble_N = mkN "rubble" ;
lin rubdown_N = mkN "rubdown" ;
lin rubefacient_N = mkN "rubefacient" ;
lin rubel_N = mkN "rubel" ;
lin rubicelle_N = mkN "rubicelle" ;
lin rubicon_N = mkN "rubicon" "rubicons";
lin rubicund_A = compoundA (mkA "rubicund");
lin rubidium_N = mkN "rubidium" ;
lin ruble_N = mkN "ruble" ;
lin rubric_N = mkN "rubric" "rubrics";
lin ruby_A = compoundA (mkA "ruby");
lin ruby_N = mkN "ruby" "rubies";
lin ruck_N = mkN "ruck" "rucks";
lin ruck_V = mkV "ruck" "rucks" "rucked" "rucked" "rucking";
lin ruck_V2 = mkV2 (mkV "ruck" "rucks" "rucked" "rucked" "rucking");
lin rucksack_N = mkN "rucksack" "rucksacks";
lin ruckus_N = mkN "ruckus" "ruckuss";
lin rudapithecus_N = mkN "rudapithecus" ;
lin rudd_N = mkN "rudd" ;
lin rudder_N = mkN "rudder" "rudders";
lin rudderfish_N = mkN "rudderfish" ;
lin rudderless_A = compoundA (mkA "rudderless");
lin rudderpost_N = mkN "rudderpost" ;
lin ruddiness_N = mkN "ruddiness" ;
lin ruddington_PN = mkPN "Ruddington";
lin ruddle_N = mkN "ruddle" ;
lin ruddle_V2 = mkV2 (mkV "ruddle" "ruddles" "ruddled" "ruddled" "ruddling");
lin ruddy_A = mkA "ruddy" "ruddier";
lin rude_A = mkA "rude" "ruder";
lin rudeness_N = mkN "rudeness" "rudenesses";
lin rudiment_N = mkN "rudiment" "rudiments";
lin rudimentary_A = compoundA (mkA "rudimentary");
lin rudolf_PN = mkPN "Rudolf";
lin rudy_PN = mkPN "Rudy";
lin rue_N = mkN "rue" ;
lin rue_V2 = mkV2 (mkV "rue" "rues" "rued" "rued" "ruing");
lin rueful_A = compoundA (mkA "rueful");
lin ruff_N = mkN "ruff" "ruffs";
lin ruff_V = mkV "ruff" "ruffs" "ruffed" "ruffed" "ruffing";
lin ruff_V2 = mkV2 (mkV "ruff" "ruffs" "ruffed" "ruffed" "ruffing");
lin ruffian_N = mkN "ruffian" "ruffians";
lin ruffianism_N = mkN "ruffianism" ;
lin ruffianly_A = compoundA (mkA "ruffianly");
lin ruffle_N = mkN "ruffle" "ruffles";
lin ruffle_V = mkV "ruffle" "ruffles" "ruffled" "ruffled" "ruffling";
lin ruffle_V2 = mkV2 (mkV "ruffle" "ruffles" "ruffled" "ruffled" "ruffling");
lin rug_N = mkN "rug" "rugs";
lin ruga_N = mkN "ruga" ;
lin rugby_N = mkN "rugby" ;
lin rugby_PN = mkPN "Rugby";
lin rugeley_PN = mkPN "Rugeley";
lin rugged_A = compoundA (mkA "rugged");
lin ruggedization_N = mkN "ruggedization" ;
lin ruggedness_N = mkN "ruggedness" ;
lin rugger_N = mkN "rugger" ;
lin rugose_A = mkA "rugose" ;
lin rugulah_N = mkN "rugulah" ;
lin ruin_N = mkN "ruin" "ruins";
lin ruin_V2 = mkV2 (mkV "ruin" "ruins" "ruined" "ruined" "ruining");
lin ruination_N = mkN "ruination" ;
lin ruinous_A = compoundA (mkA "ruinous");
lin rule_N = mkN "rule" "rules";
lin rule_V = mkV "rule" "rules" "ruled" "ruled" "ruling";
lin rule_V2 = mkV2 (mkV "rule" "rules" "ruled" "ruled" "ruling");
lin rule_VS = mkVS (mkV "rule" "rules" "ruled" "ruled" "ruling");
lin ruler_N = mkN "ruler" "rulers";
lin rulership_N = mkN "rulership" ;
lin ruling_N = mkN "ruling" "rulings";
lin ruly_A = mkA "ruly" ;
lin rum_N = mkN "rum" ;
lin rum_runner_N = mkN "rum-runner" "rum-runners";
lin rumba_N = mkN "rumba" "rumbas";
lin rumble_N = mkN "rumble" "rumbles";
lin rumble_V = mkV "rumble" "rumbles" "rumbled" "rumbled" "rumbling";
lin rumble_V2 = mkV2 (mkV "rumble" "rumbles" "rumbled" "rumbled" "rumbling");
lin rumbling_N = mkN "rumbling" "rumblings";
lin rumbustious_A = compoundA (mkA "rumbustious");
lin rumen_N = mkN "rumen" ;
lin ruminant_A = compoundA (mkA "ruminant");
lin ruminant_N = mkN "ruminant" "ruminants";
lin ruminate_V = mkV "ruminate" "ruminates" "ruminated" "ruminated" "ruminating";
lin rumination_N = mkN "rumination" ;
lin ruminative_A = compoundA (mkA "ruminative");
lin rummage_N = mkN "rummage" ;
lin rummage_V = mkV "rummage" "rummages" "rummaged" "rummaged" "rummaging";
lin rummage_V2 = mkV2 (mkV "rummage" "rummages" "rummaged" "rummaged" "rummaging");
lin rummer_N = mkN "rummer" ;
lin rummy_A = mkA "rummy" "rummyyer";
lin rummy_N = mkN "rummy" ;
lin rumour_N = variants {mkN "rumour" "rumours"; mkN "rumor" "rumors"};
lin rumour_V2 = mkV2 (mkV (variants {"rumour"; "rumor"}));
lin rumour_V3 = mkV3 (mkV (variants {"rumour"; "rumor"})) noPrep noPrep;
lin rumour_monger_N = mkN "rumour-monger" "rumour-mongers";
lin rump_N = mkN "rump" "rumps";
lin rump_steak_N = mkN "rump-steak" "rump-steaks";
lin rumple_V2 = mkV2 (mkV "rumple" "rumples" "rumpled" "rumpled" "rumpling");
lin rumpus_N = mkN "rumpus" "rumpi" {- FIXME: guessed plural form -};
lin rumrunner_N = mkN "rumrunner" ;
lin run_N = mkN "run" "runs";
lin run_V = IrregEng.run_V;
lin run_V2 = mkV2 (IrregEng.run_V);
lin run_VS = mkVS (IrregEng.run_V);
lin run_of_the_mill_A = compoundA (mkA "run-of-the-mill");
lin run_off_N = mkN "run-off" "run-offs";
lin run_through_N = mkN "run-through" "run-throughs";
lin run_up_N = mkN "run-up" "run-ups";
lin runaway_A = compoundA (mkA "runaway");
lin runaway_N = mkN "runaway" "runaways";
lin runcinate_A = mkA "runcinate" ;
lin runcorn_PN = mkPN "Runcorn";
lin rundle_N = mkN "rundle" ;
lin rundown_A = compoundA (mkA "rundown");
lin rundown_N = mkN "rundown" "rundowns";
lin rune_N = mkN "rune" "runes";
lin rung_N = mkN "rung" "rungs";
lin rung_V2V = mkV2V (mkV "rung") noPrep to_Prep ;
lin runic_A = compoundA (mkA "runic");
lin runnel_N = mkN "runnel" "runnels";
lin runner_N = mkN "runner" "runners";
lin runner_up_N = mkN "runner-up" "IRREG";
lin running_N = mkN "running" ;
lin running_board_N = mkN "running-board" "running-boards";
lin runny_A = mkA "runny" "runnier";
lin runoff_N = mkN "runoff" ;
lin runproof_A = mkA "runproof" ;
lin runt_N = mkN "runt" "runts";
lin runup_N = mkN "runup" ;
lin runway_N = mkN "runway" "runways";
lin rupee_N = mkN "rupee" "rupees";
lin rupert_PN = mkPN "Rupert";
lin rupestral_A = mkA "rupestral" ;
lin rupiah_N = mkN "rupiah" "rupiahs";
lin rupture_N = mkN "rupture" "ruptures";
lin rupture_V = mkV "rupture" "ruptures" "ruptured" "ruptured" "rupturing";
lin rupture_V2 = mkV2 (mkV "rupture" "ruptures" "ruptured" "ruptured" "rupturing");
lin rupturewort_N = mkN "rupturewort" ;
lin rural_A = compoundA (mkA "rural");
lin ruralism_N = mkN "ruralism" ;
lin ruralist_N = mkN "ruralist" ;
lin rurality_N = mkN "rurality" ;
lin ruritanian_A = compoundA (mkA "ruritanian");
lin ruse_N = mkN "ruse" "ruses";
lin rush_N = mkN "rush" "rushes";
lin rush_V = mkV "rush" "rushes" "rushed" "rushed" "rushing";
lin rush_V2 = mkV2 (mkV "rush" "rushes" "rushed" "rushed" "rushing");
lin rush_V2V = mkV2V (mkV "rush" "rushes" "rushed" "rushed" "rushing") noPrep to_Prep ;
lin rush_VV = mkVV (mkV "rush" "rushes" "rushed" "rushed" "rushing");
lin rusher_N = mkN "rusher" ;
lin rushlight_N = mkN "rushlight" "rushlights";
lin rushlike_A = mkA "rushlike" ;
lin rushy_A = mkA "rushy" "rushier";
lin rusk_N = mkN "rusk" "rusks";
lin russet_A = compoundA (mkA "russet");
lin russet_N = mkN "russet" "russets";
lin russia_PN = mkPN "Russia";
lin russian_A = compoundA (mkA "Russian");
lin russian_N = mkN "Russian" "Russians";
lin rust_A = mkA "rust" ;
lin rust_N = mkN "rust" ;
lin rust_V = mkV "rust" "rusts" "rusted" "rusted" "rusting";
lin rust_V2 = mkV2 (mkV "rust" "rusts" "rusted" "rusted" "rusting");
lin rustic_A = compoundA (mkA "rustic");
lin rustic_N = mkN "rustic" "rustics";
lin rusticate_V = mkV "rusticate" "rusticates" "rusticated" "rusticated" "rusticating";
lin rusticate_V2 = mkV2 (mkV "rusticate" "rusticates" "rusticated" "rusticated" "rusticating");
lin rustication_N = mkN "rustication" ;
lin rusticity_N = mkN "rusticity" ;
lin rustiness_N = mkN "rustiness" ;
lin rustle_N = mkN "rustle" ;
lin rustle_V = mkV "rustle" "rustles" "rustled" "rustled" "rustling";
lin rustle_V2 = mkV2 (mkV "rustle" "rustles" "rustled" "rustled" "rustling");
lin rustler_N = mkN "rustler" "rustlers";
lin rustless_A = compoundA (mkA "rustless");
lin rustling_N = mkN "rustling" "rustlings";
lin rustproof_A = mkA "rustproof" ;
lin rusty_A = mkA "rusty" "rustier";
lin rut_N = mkN "rut" "ruts";
lin rut_V2 = mkV2 (mkV "rut" "ruts" "rutted" "rutted" "rutting");
lin rutabaga_N = mkN "rutabaga" ;
lin ruth_PN = mkPN "Ruth";
lin ruthenium_N = mkN "ruthenium" ;
lin rutherford_N = mkN "rutherford" ;
lin rutherfordium_N = mkN "rutherfordium" ;
lin rutherglen_PN = mkPN "Rutherglen";
lin ruthless_A = compoundA (mkA "ruthless");
lin ruthlessness_N = mkN "ruthlessness" ;
lin rutile_N = mkN "rutile" ;
lin rutland_PN = mkPN "Rutland";
lin rwanda_PN = mkPN "Rwanda";
lin rwandan_A = compoundA (mkA "rwandan");
lin rwandan_N = mkN "rwandan" "rwandans";
lin rya_N = mkN "rya" ;
lin rydberg_N = mkN "rydberg" ;
lin ryde_PN = mkPN "Ryde";
lin rye_N = mkN "rye" ;
lin rye_bread_N = mkN "rye-bread" ;
lin ryehill_PN = mkPN "Ryehill";
lin saarbrucken_PN = mkPN "Saarbrucken";
lin sabadeli_PN = mkPN "Sabadeli";
lin sabah_PN = mkPN "Sabah";
lin sabahan_A = compoundA (mkA "sabahan");
lin sabahan_N = mkN "sabahan" "sabahans";
lin sabbat_N = mkN "sabbat" ;
lin sabbatarian_A = compoundA (mkA "sabbatarian");
lin sabbatarian_N = mkN "sabbatarian" "sabbatarians";
lin sabbath_N = mkN "sabbath" "sabbaths";
lin sabbatia_N = mkN "sabbatia" ;
lin sabbatical_A = compoundA (mkA "sabbatical");
lin sabbatical_N = mkN "sabbatical" "sabbaticals";
lin saber_N = mkN "saber" ;
lin sabicu_N = mkN "sabicu" ;
lin sabin_N = mkN "sabin" ;
lin sable_A = compoundA (mkA "sable");
lin sable_N = mkN "sable" "sables";
lin sabot_N = mkN "sabot" "sabots";
lin sabotage_N = mkN "sabotage" ;
lin sabotage_V2 = mkV2 (mkV "sabotage" "sabotages" "sabotaged" "sabotaged" "sabotaging");
lin saboteurMasc_N = mkN masculine (mkN "saboteur" "saboteurs");
lin saboteurFem_N = mkN feminine (mkN "saboteur" "saboteurs");
lin sabra_N = mkN "sabra" ;
lin sabre_N = mkN "sabre" "sabres";
lin sabre_V2 = mkV2 (mkV "sabre" "sabres" "sabred" "sabred" "sabring");
lin sabre_rattling_N = mkN "sabre-rattling" ;
lin sabre_toothed_A = compoundA (mkA "sabre-toothed");
lin sac_N = mkN "sac" "sacs";
lin saccade_N = mkN "saccade" ;
lin saccadic_A = mkA "saccadic" ;
lin saccharin_N = mkN "saccharin" ;
lin saccharine_A = compoundA (mkA "saccharine");
lin saccharinity_N = mkN "saccharinity" ;
lin sacculated_A = mkA "sacculated" ;
lin saccule_N = mkN "saccule" ;
lin sacerdotal_A = compoundA (mkA "sacerdotal");
lin sacerdotalism_N = mkN "sacerdotalism" ;
lin sachem_N = mkN "sachem" ;
lin sachet_N = mkN "sachet" "sachets";
lin sack_N = mkN "sack" "sacks";
lin sack_V2 = mkV2 (mkV "sack" "sacks" "sacked" "sacked" "sacking");
lin sack_race_N = mkN "sack-race" "sack-races";
lin sackbut_N = mkN "sackbut" "sackbuts";
lin sackcloth_N = mkN "sackcloth" ;
lin sacking_N = mkN "sacking" ;
lin sacral_A = mkA "sacral" ;
lin sacrament_N = mkN "sacrament" "sacraments";
lin sacramental_A = compoundA (mkA "sacramental");
lin sacramento_PN = mkPN "Sacramento";
lin sacred_A = compoundA (mkA "sacred");
lin sacredness_N = mkN "sacredness" ;
lin sacrifice_N = mkN "sacrifice" "sacrifices";
lin sacrifice_V = mkV "sacrifice" "sacrifices" "sacrificed" "sacrificed" "sacrificing";
lin sacrifice_V2 = mkV2 (mkV "sacrifice" "sacrifices" "sacrificed" "sacrificed" "sacrificing");
lin sacrificeable_A = mkA "sacrificeable" ;
lin sacrificer_N = mkN "sacrificer" ;
lin sacrificial_A = compoundA (mkA "sacrificial");
lin sacrilege_N = mkN "sacrilege" ;
lin sacrilegious_A = compoundA (mkA "sacrilegious");
lin sacrilegiousness_N = mkN "sacrilegiousness" ;
lin sacristan_N = mkN "sacristan" "sacristans";
lin sacristy_N = mkN "sacristy" "sacristies";
lin sacrosanct_A = compoundA (mkA "sacrosanct");
lin sacrum_N = mkN "sacrum" ;
lin sad_A = mkA "sad" "sadder";
lin sadden_V = mkV "sadden" "saddens" "saddened" "saddened" "saddening";
lin sadden_V2 = mkV2 (mkV "sadden" "saddens" "saddened" "saddened" "saddening");
lin saddle_N = mkN "saddle" "saddles";
lin saddle_V = mkV "saddle";
lin saddle_V2 = mkV2 (mkV "saddle" "saddles" "saddled" "saddled" "saddling");
lin saddle_sore_A = compoundA (mkA "saddle-sore");
lin saddleback_N = mkN "saddleback" ;
lin saddlebag_N = mkN "saddlebag" "saddlebags";
lin saddlebill_N = mkN "saddlebill" ;
lin saddler_N = mkN "saddler" "saddlers";
lin saddlery_N = mkN "saddlery" "saddleries";
lin sadhe_N = mkN "sadhe" ;
lin sadhu_N = mkN "sadhu" "sadhus";
lin sadism_N = mkN "sadism" ;
lin sadist_N = mkN "sadist" "sadists";
lin sadistic_A = compoundA (mkA "sadistic");
lin sadness_N = mkN "sadness" ;
lin sadomasochism_N = mkN "sadomasochism" ;
lin sadomasochistMasc_N = mkN masculine (mkN (variants {"sadomasochist"; "sado-masochist"}));
lin sadomasochistFem_N = mkN feminine (mkN (variants {"sadomasochist"; "sado-masochist"}));
lin sadomasochistic_A = mkA "sadomasochistic" ;
lin sae_N = mkN "sae" ;
lin safari_N = mkN "safari" "safaris";
lin safe_A = mkA "safe" "safer";
lin safe_N = mkN "safe" "safes";
lin safe_conduct_N = mkN "safe-conduct" ;
lin safe_deposit_A = compoundA (mkA "safe-deposit");
lin safe_deposit_N = mkN "safe-deposit" "safe-deposits";
lin safebreaker_N = mkN "safebreaker" ;
lin safecracker_N = mkN "safecracker" "safecrackers";
lin safeguard_N = mkN "safeguard" "safeguards";
lin safeguard_V2 = mkV2 (mkV "safeguard" "safeguards" "safeguarded" "safeguarded" "safeguarding");
lin safehold_N = mkN "safehold" ;
lin safekeeping_N = mkN "safekeeping" ;
lin safeness_N = mkN "safeness" ;
lin safety_N = mkN "safety" ;
lin safety_belt_N = mkN "safety-belt" "safety-belts";
lin safety_bolt_N = mkN "safety-bolt" "safety-bolts";
lin safety_catch_N = mkN "safety-catch" "safety-catches";
lin safety_curtain_N = mkN "safety-curtain" "safety-curtains";
lin safety_factor_N = mkN "safety-factor" "safety-factors";
lin safety_lamp_N = mkN "safety-lamp" "safety-lamps";
lin safety_lock_N = mkN "safety-lock" "safety-locks";
lin safety_match_N = mkN "safety-match" "safety-matches";
lin safety_pin_N = mkN "safety-pin" "safety-pins";
lin safety_razor_N = mkN "safety-razor" "safety-razors";
lin safety_valve_N = mkN "safety-valve" "safety-valves";
lin safflower_N = mkN "safflower" ;
lin saffron_N = mkN "saffron" "saffrons";
lin saffron_walden_PN = mkPN "Saffron walden";
lin safranine_N = mkN "safranine" ;
lin sag_N = mkN "sag" "sags";
lin sag_V = mkV "sag" "sags" "sagged" "sagged" "sagging";
lin saga_N = mkN "saga" "sagas";
lin sagacious_A = compoundA (mkA "sagacious");
lin sagacity_N = mkN "sagacity" ;
lin sage_A = compoundA (mkA "sage");
lin sage_N = mkN "sage" "sages";
lin sage_green_A = compoundA (mkA "sage-green");
lin sage_green_N = mkN "sage-green" ;
lin sagebrush_N = mkN "sagebrush" ;
lin sagitta_N = mkN "sagitta" ;
lin sagittal_A = mkA "sagittal" ;
lin sagittarius_PN = mkPN "Sagittarius";
lin sagittate_A = mkA "sagittate" ;
lin sago_N = mkN "sago" ;
lin saguaro_N = mkN "saguaro" ;
lin sahib_N = mkN "sahib" "sahibs";
lin said_Quant = mkQuant "said" "said";
lin saiga_N = mkN "saiga" ;
lin saigon_PN = mkPN "Saigon";
lin sail_N = mkN "sail" "sails";
lin sail_V = mkV "sail" "sails" "sailed" "sailed" "sailing";
lin sail_V2 = mkV2 (mkV "sail" "sails" "sailed" "sailed" "sailing");
lin sailboat_N = mkN "sailboat" ;
lin sailcloth_N = mkN "sailcloth" ;
lin sailfish_N = mkN "sailfish" ;
lin sailing_N = mkN "sailing" "sailings";
lin sailing_boat_N = mkN "sailing-boat" "sailing-boats";
lin sailing_master_N = mkN "sailing-master" "sailing-masters";
lin sailing_ship_N = mkN "sailing-ship" "sailing-ships";
lin sailing_vessel_N = mkN "sailing-vessel" "sailing-vessels";
lin sailmaker_N = mkN "sailmaker" ;
lin sailor_N = mkN "sailor" "sailors";
lin sainfoin_N = mkN "sainfoin" ;
lin saint's_day_N = mkN "saint's-day" "saint's-days";
lin saint_N = mkN "saint" "saints";
lin sainted_A = compoundA (mkA "sainted");
lin sainthood_N = mkN "sainthood" ;
lin saintlike_A = compoundA (mkA "saintlike");
lin saintliness_N = mkN "saintliness" ;
lin saintly_A = mkA "saintly" "saintlier";
lin sake_1_N = mkN "sake" "sakes";
lin sake_2_N = mkN "saké" "sakés" ;
lin sake_N = mkN "sake" ;
lin saki_N = mkN "saki" ;
lin sal_volatile_N = mkN "sal volatile" "sal volatiles" ;
lin salaam_N = mkN "salaam" "salaams";
lin salaam_V = mkV "salaam" "salaams" "salaamed" "salaamed" "salaaming";
lin salability_N = mkN "salability" ;
lin salable_A = compoundA (mkA "salable");
lin salacious_A = compoundA (mkA "salacious");
lin salaciousness_N = mkN "salaciousness" ;
lin salacity_N = mkN "salacity" ;
lin salad_N = mkN "salad" "salads";
lin salad_dressing_N = mkN "salad-dressing" "salad-dressings";
lin salad_oil_N = mkN "salad-oil" "salad-oils";
lin salai_N = mkN "salai" ;
lin salal_N = mkN "salal" ;
lin salamanca_PN = mkPN "Salamanca";
lin salamander_N = mkN "salamander" "salamanders";
lin salamandriform_A = mkA "salamandriform" ;
lin salami_N = mkN "salami" ;
lin salaried_A = compoundA (mkA "salaried");
lin salary_N = mkN "salary" "salaries";
lin salat_N = mkN "salat" ;
lin sale_N = mkN "sale" "sales";
lin sale_PN = mkPN "Sale";
lin saleable_A = compoundA (mkA "saleable");
lin salerno_PN = mkPN "Salerno";
lin saleroom_N = mkN "saleroom" "salerooms";
lin salesclerk_N = mkN "salesclerk" ;
lin salesgirl_N = mkN "salesgirl" ;
lin salesman_N = mkN masculine (mkN "salesman" "salesmen");
lin salesmanship_N = mkN "salesmanship" ;
lin salesperson_N = mkN "salesperson" ;
lin saleswoman_N = mkN feminine (mkN "saleswoman" "saleswomen");
lin salford_PN = mkPN "Salford";
lin salicylate_N = mkN "salicylate" ;
lin salience_N = mkN "salience" ;
lin salient_A = compoundA (mkA "salient");
lin salient_N = mkN "salient" "salients";
lin saliferous_A = mkA "saliferous" ;
lin saline_A = compoundA (mkA "saline");
lin saline_N = mkN "saline" "salines";
lin salinity_N = mkN "salinity" ;
lin salinometer_N = mkN "salinometer" ;
lin salisbury_PN = mkPN "Salisbury";
lin saliva_N = mkN "saliva" ;
lin salivary_A = compoundA (mkA "salivary");
lin salivate_V = mkV "salivate" "salivates" "salivated" "salivated" "salivating";
lin salivation_N = mkN "salivation" ;
lin sallet_N = mkN "sallet" ;
lin sallow_A = mkA "sallow" "sallower";
lin sallow_N = mkN "sallow" ;
lin sallow_V = mkV "sallow" "sallows" "sallowed" "sallowed" "sallowing";
lin sallow_V2 = mkV2 (mkV "sallow" "sallows" "sallowed" "sallowed" "sallowing");
lin sallowness_N = mkN "sallowness" ;
lin sally_N = mkN "sally" "sallies";
lin sally_PN = mkPN "Sally";
lin sally_V = mkV "sally" "sallies" "sallied" "sallied" "sallying";
lin salmagundi_N = mkN "salmagundi" ;
lin salmi_N = mkN "salmi" ;
lin salmon_N = mkN "salmon" "salmon";
lin salmonberry_N = mkN "salmonberry" ;
lin salmonella_N = mkN "salmonella" ;
lin salmonellosis_N = mkN "salmonellosis" ;
lin salmonid_N = mkN "salmonid" ;
lin salol_N = mkN "salol" ;
lin salon_N = mkN "salon" "salons";
lin saloon_N = mkN "saloon" "saloons";
lin salp_N = mkN "salp" ;
lin salpiglossis_N = mkN "salpiglossis" ;
lin salpingectomy_N = mkN "salpingectomy" ;
lin salpingitis_N = mkN "salpingitis" ;
lin salpinx_N = mkN "salpinx" ;
lin salsa_N = mkN "salsa" ;
lin salsify_N = mkN "salsify" ;
lin salsilla_N = mkN "salsilla" ;
lin salt_A = compoundA (mkA "salt");
lin salt_N = mkN "salt" "salts";
lin salt_PN = mkPN "Salt";
lin salt_V2 = mkV2 (mkV "salt" "salts" "salted" "salted" "salting");
lin salt_cellar_N = mkN "salt-cellar" "salt-cellars";
lin salt_lick_N = mkN "salt-lick" "salt-licks";
lin saltash_PN = mkPN "Saltash";
lin saltation_N = mkN "saltation" ;
lin saltbox_N = mkN "saltbox" ;
lin saltburn_PN = mkPN "Saltburn";
lin saltbush_N = mkN "saltbush" ;
lin saltcellar_N = mkN "saltcellar" ;
lin saltcoats_PN = mkPN "Saltcoats";
lin salter_N = mkN "salter" ;
lin saltine_N = mkN "saltine" ;
lin saltiness_N = mkN "saltiness" ;
lin salting_N = mkN "salting" ;
lin saltish_A = mkA "saltish" ;
lin saltlike_A = mkA "saltlike" ;
lin saltpan_N = mkN "saltpan" "saltpans";
lin saltpetre_N = mkN "saltpetre" ;
lin saltshaker_N = mkN "saltshaker" ;
lin saltwater_N = mkN "saltwater" ;
lin saltworks_N = mkN "saltworks" "saltworks";
lin saltwort_N = mkN "saltwort" ;
lin salty_A = mkA "salty" "saltier";
lin salubrious_A = compoundA (mkA "salubrious");
lin salubrity_N = mkN "salubrity" ;
lin salutary_A = compoundA (mkA "salutary");
lin salutation_N = mkN "salutation" "salutations";
lin salutatorian_N = mkN "salutatorian" ;
lin salute_N = mkN "salute" "salutes";
lin salute_V = mkV "salute" "salutes" "saluted" "saluted" "saluting";
lin salute_V2 = mkV2 (mkV "salute" "salutes" "saluted" "saluted" "saluting");
lin salvador_PN = mkPN "Salvador";
lin salvadorean_A = compoundA (mkA "salvadorean");
lin salvadorean_N = mkN "salvadorean" "salvadoreans";
lin salvage_N = mkN "salvage" ;
lin salvage_V2 = mkV2 (mkV "salvage" "salvages" "salvaged" "salvaged" "salvaging");
lin salvageable_A = mkA "salvageable" ;
lin salvager_N = mkN "salvager" ;
lin salvation_N = mkN "salvation" ;
lin salve_N = mkN "salve" "salves";
lin salve_V2 = mkV2 (mkV "salve" "salves" "salved" "salved" "salving");
lin salver_N = mkN "salver" "salvers";
lin salverform_A = mkA "salverform" ;
lin salvia_N = mkN "salvia" "salvias";
lin salvific_A = mkA "salvific" ;
lin salvinorin_N = mkN "salvinorin" ;
lin salvo_N = mkN "salvo" "salvos";
lin salwar_N = mkN "salwar" ;
lin salzburg_PN = mkPN "Salzburg";
lin sam_PN = mkPN "Sam";
lin samantha_PN = mkPN "Samantha";
lin samara_N = mkN "samara" ;
lin samaritan_N = mkN "samaritan" "samaritans";
lin samarium_N = mkN "samarium" ;
lin samarskite_N = mkN "samarskite" ;
lin samba_N = mkN "samba" "sambas";
lin sambar_N = mkN "sambar" ;
lin sambuca_N = mkN "sambuca" ;
lin same_A = compoundA (mkA "same");
lin same_Adv = mkAdv "same";
lin samekh_N = mkN "samekh" ;
lin sameness_N = mkN "sameness" ;
lin samisen_N = mkN "samisen" ;
lin samite_N = mkN "samite" ;
lin samizdat_N = mkN "samizdat" ;
lin sammy_PN = mkPN "Sammy";
lin samoa_PN = mkPN "Samoa";
lin samoan_A = compoundA (mkA "samoan");
lin samoan_N = mkN "samoan" "samoans";
lin samosa_N = mkN "samosa" ;
lin samovar_N = mkN "samovar" "samovars";
lin sampan_N = mkN "sampan" "sampans";
lin sample_N = mkN "sample" "samples";
lin sample_V2 = mkV2 (mkV "sample" "samples" "sampled" "sampled" "sampling");
lin sampler_N = mkN "sampler" "samplers";
lin sampling_N = mkN "sampling" ;
lin samsara_N = mkN "samsara" ;
lin samuel_PN = mkPN "Samuel";
lin samurai_N = mkN "samurai" "samurai";
lin san_antonio_PN = mkPN "San Antonio";
lin san_bernardino_PN = mkPN "San Bernardino";
lin san_diego_PN = mkPN "San Diego";
lin san_francisco_PN = mkPN "San Francisco";
lin san_jose_PN = mkPN "San Jose";
lin san_juan_PN = mkPN "San Juan";
lin san_marinese_A = compoundA (mkA "san marinese");
lin san_marinese_N = mkN "san marinese" "san marinese";
lin san_marino_PN = mkPN "San Marino";
lin san_sebastian_PN = mkPN "San Sebastian";
lin sanatorium_N = mkN "sanatorium" "sanatoriums";
lin sanctification_N = mkN "sanctification" "sanctifications";
lin sanctify_V2 = mkV2 (mkV "sanctify" "sanctifies" "sanctified" "sanctified" "sanctifying");
lin sanctimonious_A = compoundA (mkA "sanctimonious");
lin sanctimoniousness_N = mkN "sanctimoniousness" ;
lin sanction_N = mkN "sanction" "sanctions";
lin sanction_V2 = mkV2 (mkV "sanction" "sanctions" "sanctioned" "sanctioned" "sanctioning");
lin sanctionative_A = mkA "sanctionative" ;
lin sanctity_N = mkN "sanctity" "sanctities";
lin sanctuary_N = mkN "sanctuary" "sanctuaries";
lin sanctum_N = mkN "sanctum" "sanctums";
lin sand_N = mkN "sand" "sands";
lin sand_V2 = mkV2 (mkV "sand" "sands" "sanded" "sanded" "sanding");
lin sand_bar_N = mkN "sand-bar" "sand-bars";
lin sandal_N = mkN "sandal" "sandals";
lin sandaled_A = mkA "sandaled" ;
lin sandalled_A = compoundA (mkA "sandalled");
lin sandalwood_N = mkN "sandalwood" ;
lin sandarac_N = mkN "sandarac" ;
lin sandbach_PN = mkPN "Sandbach";
lin sandbag_N = mkN "sandbag" "sandbags";
lin sandbagger_N = mkN "sandbagger" ;
lin sandbank_N = mkN "sandbank" "sandbanks";
lin sandbar_N = mkN "sandbar" ;
lin sandblast_N = mkN "sandblast" ;
lin sandblast_V2 = mkV2 (mkV "sandblast" "sandblasts" "sandblasted" "sandblasted" "sandblasting");
lin sandblaster_N = mkN "sandblaster" ;
lin sandbox_N = mkN "sandbox" ;
lin sandboy_N = mkN "sandboy" "sandboys";
lin sandbur_N = mkN "sandbur" ;
lin sanderling_N = mkN "sanderling" ;
lin sandfish_N = mkN "sandfish" ;
lin sandfly_N = mkN "sandfly" "sandflies";
lin sandglass_N = mkN "sandglass" "sandglasses";
lin sandgrouse_N = mkN "sandgrouse" ;
lin sandhi_N = mkN "sandhi" ;
lin sandiness_N = mkN "sandiness" ;
lin sandlot_N = mkN "sandlot" ;
lin sandman_N = mkN masculine (mkN "sandman" "sandmen");
lin sandown_PN = mkPN "Sandown";
lin sandpaper_N = mkN "sandpaper" "sandpapers";
lin sandpaper_V2 = mkV2 (mkV "sandpaper" "sandpapers" "sandpapered" "sandpapered" "sandpapering");
lin sandpapery_A = mkA "sandpapery" ;
lin sandpiper_N = mkN "sandpiper" "sandpipers";
lin sandpit_N = mkN "sandpit" "sandpits";
lin sandra_PN = mkPN "Sandra";
lin sandstone_N = mkN "sandstone" ;
lin sandstorm_N = mkN "sandstorm" "sandstorms";
lin sandwich_N = mkN "sandwich" "sandwiches";
lin sandwich_V = mkV "sandwich";
lin sandwich_V2 = mkV2 (mkV "sandwich" "sandwiches" "sandwiched" "sandwiched" "sandwiching");
lin sandwich_board_N = mkN "sandwich-board" "sandwich-boards";
lin sandwichman_N = mkN masculine (mkN "sandwichman" "sandwichmen");
lin sandwort_N = mkN "sandwort" ;
lin sandy_A = mkA "sandy" "sandier";
lin sandy_PN = mkPN "Sandy";
lin sane_A = mkA "sane" "saner";
lin sang_froid_N = mkN "sang froid" ;
lin sangapenum_N = mkN "sangapenum" ;
lin sangaree_N = mkN "sangaree" ;
lin sango_N = mkN "sango" ;
lin sangoma_N = mkN "sangoma" ;
lin sanguinary_A = compoundA (mkA "sanguinary");
lin sanguine_A = compoundA (mkA "sanguine");
lin sanguine_N = mkN "sanguine" ;
lin sanguinity_N = mkN "sanguinity" ;
lin sanicle_N = mkN "sanicle" ;
lin sanitariness_N = mkN "sanitariness" ;
lin sanitary_A = compoundA (mkA "sanitary");
lin sanitation_N = mkN "sanitation" ;
lin sanitize_V2 = mkV2 (mkV "sanitize");
lin sanity_N = mkN "sanity" ;
lin sannup_N = mkN "sannup" ;
lin sannyasi_N = mkN "sannyasi" ;
lin sansevieria_N = mkN "sansevieria" ;
lin sanskrit_N = mkN "sanskrit" ;
lin santa_claus_N = mkN "santa claus" "santa clauses";
lin santa_claus_PN = mkPN "Santa claus";
lin santander_PN = mkPN "Santander";
lin santiago_PN = mkPN "Santiago";
lin santims_N = mkN "santims" ;
lin santo_domingo_PN = mkPN "Santo domingo";
lin santos_PN = mkPN "Santos";
lin sao_paolo_PN = mkPN "Sao paolo";
lin sap_N = mkN "sap" "saps";
lin sap_V = mkV "sap" "saps" "sapped" "sapped" "sapping";
lin sap_V2 = mkV2 (mkV "sap" "saps" "sapped" "sapped" "sapping");
lin saphead_N = mkN "saphead" "sapheads";
lin sapidity_N = mkN "sapidity" ;
lin sapience_N = mkN "sapience" ;
lin sapiens_A = mkA "sapiens" ;
lin sapient_A = compoundA (mkA "sapient");
lin sapiential_A = mkA "sapiential" ;
lin sapless_A = compoundA (mkA "sapless");
lin sapling_N = mkN "sapling" "saplings";
lin sapodilla_N = mkN "sapodilla" ;
lin saponaceous_A = mkA "saponaceous" ;
lin saponification_N = mkN "saponification" ;
lin saponified_A = mkA "saponified" ;
lin saponin_N = mkN "saponin" ;
lin sapote_N = mkN "sapote" ;
lin sapper_N = mkN "sapper" "sappers";
lin sapphic_A = compoundA (mkA "sapphic");
lin sapphire_A = mkA "sapphire" ;
lin sapphire_N = mkN "sapphire" "sapphires";
lin sapphirine_A = mkA "sapphirine" ;
lin sapphirine_N = mkN "sapphirine" ;
lin sapporo_PN = mkPN "Sapporo";
lin sappy_A = mkA "sappy" "sappier";
lin sapremia_N = mkN "sapremia" ;
lin saprobe_N = mkN "saprobe" ;
lin saprobic_A = mkA "saprobic" ;
lin saprolite_N = mkN "saprolite" ;
lin sapropel_N = mkN "sapropel" ;
lin saprophagous_A = mkA "saprophagous" ;
lin saprophyte_N = mkN "saprophyte" ;
lin saprophytic_A = mkA "saprophytic" ;
lin sapsago_N = mkN "sapsago" ;
lin sapsucker_N = mkN "sapsucker" ;
lin sapwood_N = mkN "sapwood" ;
lin saquinavir_N = mkN "saquinavir" ;
lin sara_PN = mkPN "Sara";
lin saraband_N = mkN "saraband" "sarabands";
lin saracen_N = mkN human (mkN "saracen" "saracens");
lin sarah_PN = mkPN "Sarah";
lin sarajevo_PN = mkPN "Sarajevo";
lin saran_N = mkN "saran" ;
lin saratov_PN = mkPN "Saratov";
lin sarawak_PN = mkPN "Sarawak";
lin sarawakian_A = compoundA (mkA "sarawakian");
lin sarawakian_N = mkN "sarawakian" "sarawakians";
lin sarcasm_N = mkN "sarcasm" "sarcasms";
lin sarcastic_A = compoundA (mkA "sarcastic");
lin sarcastically_Adv = mkAdv "sarcastically";
lin sarcenet_N = mkN "sarcenet" ;
lin sarcodinian_N = mkN "sarcodinian" ;
lin sarcoidosis_N = mkN "sarcoidosis" ;
lin sarcolemma_N = mkN "sarcolemma" ;
lin sarcolemmal_A = mkA "sarcolemmal" ;
lin sarcolemmic_A = mkA "sarcolemmic" ;
lin sarcoma_N = mkN "sarcoma" ;
lin sarcomere_N = mkN "sarcomere" ;
lin sarcophagus_N = mkN "sarcophagus" "sarcophagi" {- FIXME: guessed plural form -};
lin sarcoplasm_N = mkN "sarcoplasm" ;
lin sarcosine_N = mkN "sarcosine" ;
lin sarcosomal_A = mkA "sarcosomal" ;
lin sarcosome_N = mkN "sarcosome" ;
lin sarcosporidian_N = mkN "sarcosporidian" ;
lin sard_N = mkN "sard" ;
lin sardine_N = mkN "sardine" "sardines";
lin sardonic_A = compoundA (mkA "sardonic");
lin sardonically_Adv = mkAdv "sardonically";
lin sardonyx_N = mkN "sardonyx" ;
lin sari_N = mkN "sari" "saris";
lin sarin_N = mkN "sarin" ;
lin sarisbury_PN = mkPN "Sarisbury";
lin sarong_N = mkN "sarong" "sarongs";
lin sarsaparilla_N = mkN "sarsaparilla" ;
lin sartorial_A = compoundA (mkA "sartorial");
lin sartorius_N = mkN "sartorius" ;
lin sash_N = mkN "sash" "sashes";
lin sash_cord_N = mkN "sash-cord" "sash-cords";
lin sash_line_N = mkN "sash-line" "sash-lines";
lin sashay_N = mkN "sashay" ;
lin sashimi_N = mkN "sashimi" ;
lin saskatchewan_PN = mkPN "Saskatchewan";
lin saskatoon_N = mkN "saskatoon" ;
lin sass_N = mkN "sass" ;
lin sassaby_N = mkN "sassaby" ;
lin sassafras_N = mkN "sassafras" ;
lin sassari_PN = mkPN "Sassari";
lin sassenach_N = mkN "sassenach" "sassenachs";
lin sat_PN = mkPN "Sat";
lin satan_N = mkN "satan" "satans";
lin satang_N = mkN "satang" ;
lin satanic_A = compoundA (mkA "satanic");
lin satanophobia_N = mkN "satanophobia" ;
lin satchel_N = mkN "satchel" "satchels";
lin sate_V2 = mkV2 (mkV "sate" "sates" "sated" "sated" "sating");
lin sateen_N = mkN "sateen" ;
lin satellite_A = mkA "satellite" ;
lin satellite_N = mkN "satellite" "satellites";
lin satiable_A = compoundA (mkA "satiable");
lin satiate_A = mkA "satiate" ;
lin satiate_V2 = mkV2 (mkV "satiate" "satiates" "satiated" "satiated" "satiating");
lin satiation_N = mkN "satiation" ;
lin satiety_N = mkN "satiety" ;
lin satin_A = compoundA (mkA "satin");
lin satin_N = mkN "satin" ;
lin satinet_N = mkN "satinet" ;
lin satinleaf_N = mkN "satinleaf" ;
lin satinwood_N = mkN "satinwood" ;
lin satiny_A = mkA "satiny" ;
lin satire_N = mkN "satire" "satires";
lin satirical_A = compoundA (mkA "satirical");
lin satirist_N = mkN human (mkN "satirist" "satirists");
lin satirize_V2 = mkV2 (mkV "satirize" "satirizes" "satirized" "satirized" "satirizing");
lin satisfaction_N = mkN "satisfaction" "satisfactions";
lin satisfactoriness_N = mkN "satisfactoriness" ;
lin satisfactory_A = compoundA (mkA "satisfactory");
lin satisfier_N = mkN "satisfier" ;
lin satisfy_V = mkV "satisfy" "satisfies" "satisfied" "satisfied" "satisfying";
lin satisfy_V2 = mkV2 (mkV "satisfy" "satisfies" "satisfied" "satisfied" "satisfying");
lin satisfied_A = compoundA (mkA "satisfied");
lin satori_N = mkN "satori" ;
lin satrap_N = mkN "satrap" "satraps";
lin satsuma_N = mkN "satsuma" "satsumas";
lin saturate_V2 = mkV2 (mkV "saturate" "saturates" "saturated" "saturated" "saturating");
lin saturation_N = mkN "saturation" ;
lin saturday_N = mkN "Saturday" "Saturdays";
lin saturday_PN = mkPN "Saturday";
lin saturn_PN = mkPN "Saturn";
lin saturnalia_N = mkN "saturnalia" "saturnalias";
lin saturniid_N = mkN "saturniid" ;
lin saturnine_A = compoundA (mkA "saturnine");
lin satyr_N = mkN "satyr" "satyrs";
lin satyriasis_N = mkN "satyriasis" ;
lin satyric_A = compoundA (mkA "satyric");
lin sauce_N = mkN "sauce" "sauces";
lin sauce_V2 = mkV2 (mkV "sauce" "sauces" "sauced" "sauced" "saucing");
lin sauce_boat_N = mkN "sauce-boat" "sauce-boats";
lin saucepan_N = mkN "saucepan" "saucepans";
lin saucepot_N = mkN "saucepot" ;
lin saucer_N = mkN "saucer" "saucers";
lin saucer_eyed_A = compoundA (mkA "saucer-eyed");
lin sauchie_PN = mkPN "Sauchie";
lin sauciness_N = mkN "sauciness" ;
lin saucy_A = mkA "saucy" "saucier";
lin saudi_arabia_PN = mkPN "Saudi arabia";
lin saudi_arabian_A = compoundA (mkA "saudi arabian");
lin saudi_arabian_N = mkN "saudi arabian" "saudi arabians";
lin sauerbraten_N = mkN "sauerbraten" ;
lin sauerkraut_N = mkN "sauerkraut" ;
lin sauna_N = mkN "sauna" "saunas";
lin saunter_N = mkN "saunter" "saunters";
lin saunter_V = mkV "saunter" "saunters" "sauntered" "sauntered" "sauntering";
lin saunterer_N = mkN "saunterer" "saunterers";
lin saurian_A = compoundA (mkA "saurian");
lin saurian_N = mkN "saurian" "saurians";
lin saurischian_N = mkN "saurischian" ;
lin sauropod_N = mkN "sauropod" ;
lin saury_N = mkN "saury" ;
lin sausage_N = mkN "sausage" "sausages";
lin sausage_dog_N = mkN "sausage-dog" "sausage-dogs";
lin sausage_meat_N = mkN "sausage-meat" ;
lin sausage_roll_N = mkN "sausage-roll" "sausage-rolls";
lin saute_A = compoundA (mkA "sauté");
lin saute_N = mkN "saute" ;
lin saute_V2 = mkV2 (mkV "sauté" "sautés" "sautéed" "sautéed" "sautéing");
lin savage_A = compoundA (mkA "savage");
lin savage_N = mkN "savage" "savages";
lin savage_V2 = mkV2 (mkV "savage" "savages" "savaged" "savaged" "savaging");
lin savageness_N = mkN "savageness" ;
lin savagery_N = mkN "savagery" ;
lin savanna_N = mkN "savanna" "savannas";
lin savannah_N = mkN "savannah" "savannahs";
lin savant_N = mkN "savant" "savants";
lin savarin_N = mkN "savarin" ;
lin save_N = mkN "save" "saves";
lin save_V = mkV "save" "saves" "saved" "saved" "saving";
lin save_V2 = mkV2 (mkV "save" "saves" "saved" "saved" "saving");
lin saveloy_N = mkN "saveloy" "saveloys";
lin saver_N = mkN "saver" "savers";
lin saving_N = mkN "saving" "savings";
lin savings_N = mkN "savings" ;
lin savings_bank_N = mkN "savings-bank" "savings-banks";
lin savior_N = mkN "savior" ;
lin saviour_N = mkN "saviour" "saviours";
lin savoir_faire_N = mkN "savoir-faire" ;
lin savore_V2 = mkV2 (mkV "savore");
lin savory_A = mkA "savory" ;
lin savory_N = mkN "savory" ;
lin savour_N = mkN "savour" "savours";
lin savour_V = mkV "savour" "savours" "savoured" "savoured" "savouring";
lin savour_V2 = mkV2 (mkV "savour" "savours" "savoured" "savoured" "savouring");
lin savoury_A = compoundA (mkA "savoury");
lin savoury_N = mkN "savoury" "savouries";
lin savoy_N = mkN "savoy" "savoys";
lin savvy_N = mkN "savvy" ;
lin savvy_V = mkV "savvy" "IRREG" "IRREG" "IRREG" "IRREG";
lin saw_N = mkN "saw" "saws";
lin saw_V = mkV "saw" "saws" "sawed" "sawed" "sawing";
lin saw_V2 = mkV2 (mkV "saw" "saws" "sawed" "sawed" "sawing");
lin saw_pit_N = mkN "saw-pit" "saw-pits";
lin sawbridgeworth_PN = mkPN "Sawbridgeworth";
lin sawdust_N = mkN "sawdust" ;
lin sawfish_N = mkN "sawfish" ;
lin sawfly_N = mkN "sawfly" ;
lin sawhorse_N = mkN "sawhorse" "sawhorses";
lin sawm_N = mkN "sawm" ;
lin sawmill_N = mkN "sawmill" "sawmills";
lin sawpit_N = mkN "sawpit" ;
lin sawtooth_N = mkN "sawtooth" ;
lin sawwort_N = mkN "sawwort" ;
lin sawyer_N = mkN "sawyer" "sawyers";
lin sax_N = mkN "sax" "saxes";
lin saxhorn_N = mkN "saxhorn" "saxhorns";
lin saxicolous_A = mkA "saxicolous" ;
lin saxifrage_N = mkN "saxifrage" ;
lin saxitoxin_N = mkN "saxitoxin" ;
lin saxon_A = compoundA (mkA "saxon");
lin saxon_N = mkN "saxon" "saxons";
lin saxophone_N = mkN "saxophone" "saxophones";
lin saxophonist_N = mkN "saxophonist" "saxophonists";
lin say_N = mkN "say" "IRREG";
lin say_V = IrregEng.say_V;
lin say_V2 = mkV2 (IrregEng.say_V);
lin say_VA = mkVA (IrregEng.say_V);
lin say_VS = mkVS (IrregEng.say_V);
lin say_VV = mkVV (IrregEng.say_V);
lin saying_N = mkN "saying" "sayings";
lin scab_N = mkN "scab" "scabs";
lin scabbard_N = mkN "scabbard" "scabbards";
lin scabby_A = mkA "scabby" "scabbier";
lin scabicide_N = mkN "scabicide" ;
lin scabies_N = mkN "scabies" ;
lin scabious_N = mkN "scabious" ;
lin scablands_N = mkN "scablands" ;
lin scabrous_A = compoundA (mkA "scabrous");
lin scad_N = mkN "scad" ;
lin scaffold_N = mkN "scaffold" "scaffolds";
lin scaffolding_N = mkN "scaffolding" ;
lin scalability_N = mkN "scalability" ;
lin scalable_A = mkA "scalable" ;
lin scalage_N = mkN "scalage" ;
lin scalar_A = mkA "scalar" ;
lin scalar_N = mkN "scalar" ;
lin scalawag_N = mkN "scalawag" "scalawags";
lin scald_N = mkN "scald" "scalds";
lin scald_V2 = mkV2 (mkV "scald" "scalds" "scalded" "scalded" "scalding");
lin scale_N = mkN "scale" "scales";
lin scale_V = mkV "scale" "scales" "scaled" "scaled" "scaling";
lin scale_V2 = mkV2 (mkV "scale" "scales" "scaled" "scaled" "scaling");
lin scaleless_A = mkA "scaleless" ;
lin scalelike_A = mkA "scalelike" ;
lin scalene_A = mkA "scalene" ;
lin scalenus_N = mkN "scalenus" ;
lin scaler_N = mkN "scaler" ;
lin scalic_A = mkA "scalic" ;
lin scaliness_N = mkN "scaliness" ;
lin scaling_N = mkN "scaling" ;
lin scaling_ladder_N = mkN "scaling-ladder" "scaling-ladders";
lin scallop_N = mkN "scallop" "scallops";
lin scallop_V2 = mkV2 (mkV "scallop" "scallops" "scalloped" "scalloped" "scalloping");
lin scallop_shell_N = mkN "scallop-shell" "scallop-shells";
lin scallopine_N = mkN "scallopine" ;
lin scallywag_N = mkN "scallywag" "scallywags";
lin scalp_N = mkN "scalp" "scalps";
lin scalp_V2 = mkV2 (mkV "scalp" "scalps" "scalped" "scalped" "scalping");
lin scalpel_N = mkN "scalpel" "scalpels";
lin scalper_N = mkN "scalper" ;
lin scaly_A = mkA "scaly" "scalier";
lin scam_N = mkN "scam" ;
lin scam_V2 = mkV2 (mkV "scam");
lin scammony_N = mkN "scammony" ;
lin scamp_N = mkN "scamp" "scamps";
lin scamp_V2 = mkV2 (mkV "scamp" "scamps" "scamped" "scamped" "scamping");
lin scamper_N = mkN "scamper" "scampers";
lin scamper_V = mkV "scamper" "scampers" "scampered" "scampered" "scampering";
lin scampi_N = mkN "scampi" ;
lin scan_N = mkN "scan" ;
lin scan_V = mkV "scan" "scans" "scanned" "scanned" "scanning";
lin scan_V2 = mkV2 (mkV "scan" "scans" "scanned" "scanned" "scanning");
lin scandal_N = mkN "scandal" "scandals";
lin scandalization_N = mkN "scandalization" ;
lin scandalize_V2 = mkV2 (mkV "scandalize" "scandalizes" "scandalized" "scandalized" "scandalizing");
lin scandalmonger_N = mkN "scandalmonger" "scandalmongers";
lin scandalmongering_A = mkA "scandalmongering" ;
lin scandalmongering_N = mkN "scandalmongering" ;
lin scandalous_A = compoundA (mkA "scandalous");
lin scandalousness_N = mkN "scandalousness" ;
lin scandent_A = mkA "scandent" ;
lin scandinavian_A = compoundA (mkA "Scandinavian");
lin scandinavian_N = mkN "Scandinavian" "Scandinavians";
lin scandium_N = mkN "scandium" ;
lin scanner_N = mkN "scanner" "scanners";
lin scanning_N = mkN "scanning" ;
lin scansion_N = mkN "scansion" ;
lin scant_A = compoundA (mkA "scant");
lin scant_V2 = mkV2 (mkV "scant" "scants" "scanted" "scanted" "scanting");
lin scantiness_N = mkN "scantiness" ;
lin scantling_N = mkN "scantling" "scantlings";
lin scanty_A = mkA "scanty" "scantier";
lin scape_N = mkN "scape" ;
lin scapegoat_N = mkN "scapegoat" "scapegoats";
lin scapegrace_N = mkN "scapegrace" "scapegraces";
lin scaphocephaly_N = mkN "scaphocephaly" ;
lin scaphopod_N = mkN "scaphopod" ;
lin scapose_A = mkA "scapose" ;
lin scapula_N = mkN "scapula" "scapulas";
lin scapular_A = mkA "scapular" ;
lin scapular_N = mkN "scapular" ;
lin scapulohumeral_A = mkA "scapulohumeral" ;
lin scar_N = mkN "scar" "scars";
lin scar_V = mkV "scar" "scars" "scarred" "scarred" "scarring";
lin scar_V2 = mkV2 (mkV "scar" "scars" "scarred" "scarred" "scarring");
lin scarab_N = mkN "scarab" "scarabs";
lin scarborough_PN = mkPN "Scarborough";
lin scarce_A = mkA "scarce" "scarcer";
lin scarcity_N = mkN "scarcity" "scarcities";
lin scare_N = mkN "scare" "scares";
lin scare_V = mkV "scare" "scares" "scared" "scared" "scaring";
lin scare_V2 = mkV2 (mkV "scare" "scares" "scared" "scared" "scaring");
lin scarecrow_N = mkN "scarecrow" "scarecrows";
lin scarecrowish_A = mkA "scarecrowish" ;
lin scaremonger_N = mkN "scaremonger" "scaremongers";
lin scarf_N = mkN "scarf" "scarfs";
lin scarf_pin_N = mkN "scarf-pin" "scarf-pins";
lin scarify_V2 = mkV2 (mkV "scarify" "scarifies" "scarified" "scarified" "scarifying");
lin scarlet_A = compoundA (mkA "scarlet");
lin scarlet_N = mkN "scarlet" "scarlets";
lin scarp_N = mkN "scarp" "scarps";
lin scarper_V = mkV "scarper" "scarpers" "scarpered" "scarpered" "scarpering";
lin scary_A = mkA "scary" "scarier";
lin scat_N = mkN "scat" ;
lin scathing_A = compoundA (mkA "scathing");
lin scatological_A = mkA "scatological" ;
lin scatology_N = mkN "scatology" ;
lin scatophagy_N = mkN "scatophagy" ;
lin scatter_N = mkN "scatter" "scatters";
lin scatter_V = mkV "scatter" "scatters" "scattered" "scattered" "scattering";
lin scatter_V2 = mkV2 (mkV "scatter" "scatters" "scattered" "scattered" "scattering");
lin scatterbrain_N = mkN "scatterbrain" "scatterbrains";
lin scatterbrained_A = compoundA (mkA "scatterbrained");
lin scattering_N = mkN "scattering" ;
lin scattershot_A = mkA "scattershot" ;
lin scatty_A = mkA "scatty" "scattier";
lin scaup_N = mkN "scaup" ;
lin scauper_N = mkN "scauper" ;
lin scavenge_V = mkV "scavenge" "scavenges" "scavenged" "scavenged" "scavenging";
lin scavenger_N = mkN "scavenger" "scavengers";
lin scenario_N = mkN "scenario" "scenarios";
lin scenarist_N = mkN "scenarist" "scenarists";
lin scene_N = mkN "scene" "scenes";
lin scene_painter_N = mkN "scene-painter" "scene-painters";
lin scene_shifter_N = mkN "scene-shifter" "scene-shifters";
lin scenery_N = mkN "scenery" ;
lin sceneshifter_N = mkN "sceneshifter" ;
lin scenic_A = compoundA (mkA "scenic");
lin scenically_Adv = mkAdv "scenically";
lin scent_N = mkN "scent" "scents";
lin scent_V2 = mkV2 (mkV "scent" "scents" "scented" "scented" "scenting");
lin scentless_A = compoundA (mkA "scentless");
lin scepter_N = mkN "scepter" ;
lin sceptered_A = compoundA (mkA "sceptered");
lin sceptic_N = mkN "sceptic" "sceptics";
lin sceptical_A = compoundA (mkA "sceptical");
lin scepticism_N = mkN "scepticism" ;
lin sceptre_N = mkN "sceptre" "sceptres";
lin sceptred_A = compoundA (mkA "sceptred");
lin schedule_N = mkN "schedule" "schedules";
lin schedule_V = mkV "schedule";
lin schedule_V2 = mkV2 (mkV "schedule" "schedules" "scheduled" "scheduled" "scheduling");
lin schedule_V2V = mkV2V (mkV "schedule") noPrep to_Prep;
lin scheduler_N = mkN "scheduler" ;
lin scheduling_N = mkN "scheduling" ;
lin scheelite_N = mkN "scheelite" ;
lin schema_N = mkN "schema" "schemas";
lin schematic_A = compoundA (mkA "schematic");
lin schematic_N = mkN "schematic" ;
lin schematically_Adv = mkAdv "schematically";
lin schematization_N = mkN "schematization" ;
lin scheme_N = mkN "scheme" "schemes";
lin scheme_V = mkV "scheme" "schemes" "schemed" "schemed" "scheming";
lin scheme_V2 = mkV2 (mkV "scheme" "schemes" "schemed" "schemed" "scheming");
lin schemer_N = mkN "schemer" "schemers";
lin schemozzle_N = mkN "schemozzle" ;
lin scherzo_N = mkN "scherzo" "scherzos";
lin schilling_N = mkN "schilling" ;
lin schipperke_N = mkN "schipperke" ;
lin schism_N = mkN "schism" "schisms";
lin schismatic_A = compoundA (mkA "schismatic");
lin schismatically_Adv = mkAdv "schismatically" ;
lin schist_N = mkN "schist" "schists";
lin schistosome_N = mkN "schistosome" ;
lin schistosomiasis_N = mkN "schistosomiasis" ;
lin schizocarp_N = mkN "schizocarp" ;
lin schizogony_N = mkN "schizogony" ;
lin schizoid_A = compoundA (mkA "schizoid");
lin schizopetalon_N = mkN "schizopetalon" ;
lin schizophrenia_N = mkN "schizophrenia" ;
lin schizophrenic_A = compoundA (mkA "schizophrenic");
lin schizophrenic_N = mkN "schizophrenic" "schizophrenics";
lin schizothymia_N = mkN "schizothymia" ;
lin schlemiel_N = mkN "schlemiel" ;
lin schlep_N = mkN "schlep" ;
lin schlepper_N = mkN "schlepper" ;
lin schlimazel_N = mkN "schlimazel" ;
lin schlock_N = mkN "schlock" ;
lin schlockmeister_N = mkN "schlockmeister" ;
lin schmaltz_N = mkN "schmaltz" ;
lin schmaltzy_A = mkA "schmaltzy" "schmaltzier";
lin schmalz_N = mkN "schmalz" ;
lin schmalzy_A = mkA "schmalzy" "schmalzier";
lin schmeer_N = mkN "schmeer" ;
lin schmuck_N = mkN "schmuck" ;
lin schnapps_N = mkN "schnapps" ;
lin schnauzer_N = mkN "schnauzer" ;
lin schnitzel_N = mkN "schnitzel" "schnitzels";
lin schnook_N = mkN "schnook" ;
lin schnorkel_N = mkN "schnorkel" "schnorkels";
lin schnorrer_N = mkN "schnorrer" ;
lin scholar_N = mkN "scholar" "scholars";
lin scholarly_A = compoundA (mkA "scholarly");
lin scholarship_N = mkN "scholarship" "scholarships";
lin scholastic_A = compoundA (mkA "scholastic");
lin scholastically_Adv = mkAdv "scholastically" ;
lin scholasticism_N = mkN "scholasticism" ;
lin scholiast_N = mkN "scholiast" ;
lin scholium_N = mkN "scholium" ;
lin school_N = mkN "school" "schools";
lin school_V2 = mkV2 (mkV "school" "schools" "schooled" "schooled" "schooling");
lin school_board_N = mkN "school-board" "school-boards";
lin schoolbag_N = mkN "schoolbag" ;
lin schoolbook_N = mkN "schoolbook" "schoolbooks";
lin schoolboy_N = mkN "schoolboy" "schoolboys";
lin schoolchild_N = mkN human (mkN "schoolchild" "schoolchildren");
lin schooldays_N = mkN "schooldays" ;
lin schoolfellow_N = mkN human (mkN "schoolfellow" "schoolfellows");
lin schoolfriend_N = mkN human (mkN "schoolfriend" "schoolfriends");
lin schoolgirl_N = mkN "schoolgirl" "schoolgirls";
lin schoolhouse_N = mkN "schoolhouse" "schoolhouses";
lin schooling_N = mkN "schooling" ;
lin schoolman_N = mkN masculine (mkN "schoolman" "schoolmen");
lin schoolmarm_N = mkN "schoolmarm" ;
lin schoolmaster_N = mkN "schoolmaster" "schoolmasters";
lin schoolmate_N = mkN human (mkN "schoolmate" "schoolmates");
lin schoolmistress_N = mkN "schoolmistress" "schoolmistresses";
lin schoolroom_N = mkN "schoolroom" "schoolrooms";
lin schoolteacher_N = mkN "schoolteacher" "schoolteachers";
lin schooltime_N = mkN "schooltime" "schooltimes";
lin schoolwide_A = mkA "schoolwide" ;
lin schoolyard_N = mkN "schoolyard" ;
lin schooner_N = mkN "schooner" "schooners";
lin schorl_N = mkN "schorl" ;
lin schottische_N = mkN "schottische" "schottisches";
lin schrod_N = mkN "schrod" ;
lin schwa_N = mkN "schwa" "schwas";
lin schwerin_PN = mkPN "Schwerin";
lin sci_fi_N = mkN "sci fi" ;
lin sciatic_A = compoundA (mkA "sciatic");
lin sciatica_N = mkN "sciatica" ;
lin science_N = mkN "science" "sciences";
lin scienter_Adv = mkAdv "scienter" ;
lin scientific_A = compoundA (mkA "scientific");
lin scientifically_Adv = mkAdv "scientifically";
lin scientist_N = mkN "scientist" "scientists";
lin scilla_N = mkN "scilla" ;
lin scimitar_N = mkN "scimitar" "scimitars";
lin scintilla_N = mkN "scintilla" "scintillas";
lin scintillate_V = mkV "scintillate" "scintillates" "scintillated" "scintillated" "scintillating";
lin scintillation_N = mkN "scintillation" "scintillations";
lin sciolism_N = mkN "sciolism" ;
lin scion_N = mkN "scion" "scions";
lin scission_N = mkN "scission" ;
lin scissors_N = mkN "scissors" ;
lin scissortail_N = mkN "scissortail" ;
lin sclaff_N = mkN "sclaff" ;
lin sclera_N = mkN "sclera" ;
lin scleredema_N = mkN "scleredema" ;
lin sclerite_N = mkN "sclerite" ;
lin scleritis_N = mkN "scleritis" ;
lin scleroderma_N = mkN "scleroderma" ;
lin sclerometer_N = mkN "sclerometer" ;
lin scleroprotein_N = mkN "scleroprotein" ;
lin sclerosis_N = mkN "sclerosis" ;
lin sclerotic_A = mkA "sclerotic" ;
lin sclerotinia_N = mkN "sclerotinia" ;
lin sclerotium_N = mkN "sclerotium" ;
lin sclerotomy_N = mkN "sclerotomy" ;
lin scoff_N = mkN "scoff" "scoffs";
lin scoff_V = mkV "scoff" "scoffs" "scoffed" "scoffed" "scoffing";
lin scoff_V2 = mkV2 (mkV "scoff" "scoffs" "scoffed" "scoffed" "scoffing");
lin scoffer_N = mkN "scoffer" "scoffers";
lin scoffingly_Adv = mkAdv "scoffingly";
lin scofflaw_N = mkN "scofflaw" ;
lin scold_N = mkN "scold" "scolds";
lin scold_V = mkV "scold" "scolds" "scolded" "scolded" "scolding";
lin scold_V2 = mkV2 (mkV "scold" "scolds" "scolded" "scolded" "scolding");
lin scolding_N = mkN "scolding" "scoldings";
lin scolion_N = mkN "scolion" ;
lin scoliosis_N = mkN "scoliosis" ;
lin scollop_N = mkN "scollop" "scollops";
lin scollop_V2 = mkV2 (mkV "scollop" "scollops" "scolloped" "scolloped" "scolloping");
lin scolopendrium_N = mkN "scolopendrium" ;
lin scombroid_N = mkN "scombroid" ;
lin sconce_N = mkN "sconce" "sconces";
lin scone_N = mkN "scone" "scones";
lin scoop_N = mkN "scoop" "scoops";
lin scoop_V = mkV "scoop";
lin scoop_V2 = mkV2 (mkV "scoop" "scoops" "scooped" "scooped" "scooping");
lin scoopful_N = mkN "scoopful" "scoopfuls";
lin scoot_V = mkV "scoot" "scoots" "scooted" "scooted" "scooting";
lin scoot_V2 = mkV2 (mkV "scoot" "scoots" "scooted" "scooted" "scooting");
lin scooter_N = mkN "scooter" "scooters";
lin scopal_A = mkA "scopal" ;
lin scope_N = mkN "scope" ;
lin scopolamine_N = mkN "scopolamine" ;
lin scorbutic_A = compoundA (mkA "scorbutic");
lin scorch_N = mkN "scorch" "scorches";
lin scorch_V = mkV "scorch" "scorches" "scorched" "scorched" "scorching";
lin scorch_V2 = mkV2 (mkV "scorch" "scorches" "scorched" "scorched" "scorching");
lin scorcher_N = mkN "scorcher" "scorchers";
lin scorching_Adv = mkAdv "scorching";
lin score_N = mkN "score" "scores";
lin score_V = mkV "score" "scores" "scored" "scored" "scoring";
lin score_V2 = mkV2 (mkV "score" "scores" "scored" "scored" "scoring");
lin scoreboard_N = mkN "scoreboard" "scoreboards";
lin scorebook_N = mkN "scorebook" "scorebooks";
lin scorecard_N = mkN "scorecard" "scorecards";
lin scorekeeper_N = mkN "scorekeeper" ;
lin scoreless_A = mkA "scoreless" ;
lin scorer_N = mkN "scorer" "scorers";
lin scorn_N = mkN "scorn" ;
lin scorn_V2 = mkV2 (mkV "scorn" "scorns" "scorned" "scorned" "scorning");
lin scornful_A = compoundA (mkA "scornful");
lin scorpaenid_N = mkN "scorpaenid" ;
lin scorpaenoid_N = mkN "scorpaenoid" ;
lin scorpio_PN = mkPN "Scorpio";
lin scorpion_N = mkN "scorpion" "scorpions";
lin scorpionfish_N = mkN "scorpionfish" ;
lin scorpionweed_N = mkN "scorpionweed" ;
lin scorzonera_N = mkN "scorzonera" ;
lin scot_N = mkN "scot" "scots";
lin scot_free_Adv = mkAdv "scot-free";
lin scotch_A = compoundA (mkA "scotch");
lin scotch_N = mkN "scotch" "scotches";
lin scotch_V2 = mkV2 (mkV "scotch" "scotches" "scotched" "scotched" "scotching");
lin scotchman_N = mkN masculine (mkN "scotchman" "scotchmen");
lin scotchwoman_N = mkN feminine (mkN "scotchwoman" "scotchwomen");
lin scoter_N = mkN "scoter" ;
lin scotland_PN = mkPN "Scotland";
lin scotland_yard_PN = mkPN "Scotland yard";
lin scotoma_N = mkN "scotoma" ;
lin scotomatous_A = mkA "scotomatous" ;
lin scots_A = compoundA (mkA "scots");
lin scotsman_N = mkN masculine (mkN "scotsman" "scotsmen");
lin scotswoman_N = mkN feminine (mkN "scotswoman" "scotswomen");
lin scottish_A = compoundA (mkA "scottish");
lin scoundrel_N = mkN "scoundrel" "scoundrels";
lin scoundrelly_A = compoundA (mkA "scoundrelly");
lin scour_N = mkN "scour" "scours";
lin scour_V = mkV "scour" "scours" "scoured" "scoured" "scouring";
lin scour_V2 = mkV2 (mkV "scour" "scours" "scoured" "scoured" "scouring");
lin scourer_N = mkN "scourer" "scourers";
lin scourge_N = mkN "scourge" "scourges";
lin scourge_V2 = mkV2 (mkV "scourge" "scourges" "scourged" "scourged" "scourging");
lin scouring_N = mkN "scouring" ;
lin scours_N = mkN "scours" ;
lin scout_N = mkN "scout" "scouts";
lin scout_V = mkV "scout" "scouts" "scouted" "scouted" "scouting";
lin scout_V2 = mkV2 (mkV "scout" "scouts" "scouted" "scouted" "scouting");
lin scouting_N = mkN "scouting" ;
lin scoutmaster_N = mkN "scoutmaster" "scoutmasters";
lin scow_N = mkN "scow" "scows";
lin scowl_N = mkN "scowl" "scowls";
lin scowl_V = mkV "scowl" "scowls" "scowled" "scowled" "scowling";
lin scrabble_N = mkN "scrabble" "scrabbles";
lin scrabble_V = mkV "scrabble" "scrabbles" "scrabbled" "scrabbled" "scrabbling";
lin scrabbly_A = mkA "scrabbly" ;
lin scrag_N = mkN "scrag" "scrags";
lin scrag_V2 = mkV2 (mkV "scrag" "scrags" "scragged" "scragged" "scragging");
lin scrag_end_N = mkN "scrag-end" "scrag-ends";
lin scraggly_A = mkA "scraggly" ;
lin scraggy_A = mkA "scraggy" "scraggier";
lin scram_V = mkV "scram" "scrams" "scrammed" "scrammed" "scramming";
lin scramble_N = mkN "scramble" "scrambles";
lin scramble_V = mkV "scramble" "scrambles" "scrambled" "scrambled" "scrambling";
lin scramble_V2 = mkV2 (mkV "scramble" "scrambles" "scrambled" "scrambled" "scrambling");
lin scramble_V2V = mkV2V (mkV "scramble" "scrambles" "scrambled" "scrambled" "scrambling") noPrep to_Prep ;
lin scramble_VV = mkVV (mkV "scramble" "scrambles" "scrambled" "scrambled" "scrambling");
lin scrambler_N = mkN "scrambler" "scramblers";
lin scrap_N = mkN "scrap" "scraps";
lin scrap_V = mkV "scrap";
lin scrap_V2 = mkV2 (mkV "scrap" "scraps" "scrapped" "scrapped" "scrapping");
lin scrap_iron_N = mkN "scrap-iron" ;
lin scrapbook_N = mkN "scrapbook" "scrapbooks";
lin scrape_N = mkN "scrape" "scrapes";
lin scrape_V = mkV "scrape" "scrapes" "scraped" "scraped" "scraping";
lin scrape_V2 = mkV2 (mkV "scrape" "scrapes" "scraped" "scraped" "scraping");
lin scraper_N = mkN "scraper" "scrapers";
lin scrapheap_N = mkN "scrapheap" "scrapheaps";
lin scrapie_N = mkN "scrapie" ;
lin scraping_N = mkN "scraping" "scrapings";
lin scrappiness_N = mkN "scrappiness" ;
lin scrapple_N = mkN "scrapple" ;
lin scrappy_A = mkA "scrappy" "scrappier";
lin scratch_N = mkN "scratch" "scratches";
lin scratch_V = mkV "scratch" "scratches" "scratched" "scratched" "scratching";
lin scratch_V2 = mkV2 (mkV "scratch" "scratches" "scratched" "scratched" "scratching");
lin scratch_pad_N = mkN "scratch-pad" "scratch-pads";
lin scratch_race_N = mkN "scratch-race" "scratch-races";
lin scratcher_N = mkN "scratcher" ;
lin scratchpad_N = mkN "scratchpad" ;
lin scratchy_A = mkA "scratchy" "scratchier";
lin scrawl_N = mkN "scrawl" "scrawls";
lin scrawl_V = mkV "scrawl" "scrawls" "scrawled" "scrawled" "scrawling";
lin scrawl_V2 = mkV2 (mkV "scrawl" "scrawls" "scrawled" "scrawled" "scrawling");
lin scrawler_N = mkN "scrawler" ;
lin scrawniness_N = mkN "scrawniness" ;
lin scrawny_A = mkA "scrawny" "scrawnier";
lin screaky_A = mkA "screaky" ;
lin scream_N = mkN "scream" "screams";
lin scream_V = mkV "scream" "screams" "screamed" "screamed" "screaming";
lin scream_V2 = mkV2 (mkV "scream" "screams" "screamed" "screamed" "screaming");
lin scream_VS = mkVS (mkV "scream" "screams" "screamed" "screamed" "screaming");
lin screamer_N = mkN "screamer" ;
lin screamingly_Adv = mkAdv "screamingly";
lin scree_N = mkN "scree" "screes";
lin screech_N = mkN "screech" "screeches";
lin screech_V = mkV "screech" "screeches" "screeched" "screeched" "screeching";
lin screech_V2 = mkV2 (mkV "screech" "screeches" "screeched" "screeched" "screeching");
lin screech_owl_N = mkN "screech-owl" "screech-owls";
lin screed_N = mkN "screed" "screeds";
lin screen_N = mkN "screen" "screens";
lin screen_V = mkV "screen" "screens" "screened" "screened" "screening";
lin screen_V2 = mkV2 (mkV "screen" "screens" "screened" "screened" "screening");
lin screener_N = mkN "screener" ;
lin screening_N = mkN "screening" ;
lin screenplay_N = mkN "screenplay" ;
lin screenwriter_N = mkN "screenwriter" ;
lin screw_N = mkN "screw" "screws";
lin screw_V = mkV "screw" "screws" "screwed" "screwed" "screwing";
lin screw_V2 = mkV2 (mkV "screw" "screws" "screwed" "screwed" "screwing");
lin screw_topped_A = compoundA (mkA "screw-topped");
lin screwball_A = compoundA (mkA "screwball");
lin screwball_N = mkN "screwball" "screwballs";
lin screwballer_N = mkN "screwballer" ;
lin screwdriver_N = mkN "screwdriver" "screwdrivers";
lin screwtop_N = mkN "screwtop" ;
lin screwup_N = mkN "screwup" ;
lin screwy_A = mkA "screwy" "screwier";
lin scribble_N = mkN "scribble" "scribbles";
lin scribble_V = mkV "scribble" "scribbles" "scribbled" "scribbled" "scribbling";
lin scribble_V2 = mkV2 (mkV "scribble" "scribbles" "scribbled" "scribbled" "scribbling");
lin scribbler_N = mkN "scribbler" "scribblers";
lin scribbling_block_N = mkN "scribbling-block" "scribbling-blocks";
lin scribe_N = mkN "scribe" "scribes";
lin scriber_N = mkN "scriber" ;
lin scrim_N = mkN "scrim" ;
lin scrimmage_N = mkN "scrimmage" "scrimmages";
lin scrimmage_V = mkV "scrimmage" "scrimmages" "scrimmaged" "scrimmaged" "scrimmaging";
lin scrimmage_V2 = mkV2 (mkV "scrimmage" "scrimmages" "scrimmaged" "scrimmaged" "scrimmaging");
lin scrimp_V = mkV "scrimp" "scrimps" "scrimped" "scrimped" "scrimping";
lin scrimp_V2 = mkV2 (mkV "scrimp" "scrimps" "scrimped" "scrimped" "scrimping");
lin scrimshank_V = mkV "scrimshank" "scrimshanks" "scrimshanked" "scrimshanked" "scrimshanking";
lin scrimshanker_N = mkN "scrimshanker" "scrimshankers";
lin scrimshaw_N = mkN "scrimshaw" ;
lin scrimy_A = mkA "scrimy" ;
lin scrip_N = mkN "scrip" "scrips";
lin script_N = mkN "script" "scripts";
lin scripted_A = compoundA (mkA "scripted");
lin scriptorium_N = mkN "scriptorium" ;
lin scriptural_A = compoundA (mkA "scriptural");
lin scripture_N = mkN "scripture" "scriptures";
lin scriptwriter_N = mkN "scriptwriter" "scriptwriters";
lin scrivened_A = mkA "scrivened" ;
lin scrivener_N = mkN "scrivener" "scriveners";
lin scrod_N = mkN "scrod" ;
lin scrofula_N = mkN "scrofula" ;
lin scrofulous_A = compoundA (mkA "scrofulous");
lin scroll_N = mkN "scroll" "scrolls";
lin scrooge_N = mkN "scrooge" "scrooges";
lin scrotal_A = mkA "scrotal" ;
lin scrotum_N = mkN "scrotum" "scrotums";
lin scrounge_V = mkV "scrounge" "scrounges" "scrounged" "scrounged" "scrounging";
lin scrounge_V2 = mkV2 (mkV "scrounge" "scrounges" "scrounged" "scrounged" "scrounging");
lin scrounger_N = mkN "scrounger" "scroungers";
lin scrub_A = mkA "scrub" ;
lin scrub_N = mkN "scrub" "scrubs";
lin scrub_V = mkV "scrub" "scrubs" "scrubbed" "scrubbed" "scrubbing";
lin scrub_V2 = mkV2 (mkV "scrub" "scrubs" "scrubbed" "scrubbed" "scrubbing");
lin scrubber_N = mkN "scrubber" ;
lin scrubbing_brush_N = mkN "scrubbing-brush" "scrubbing-brushes";
lin scrubbird_N = mkN "scrubbird" ;
lin scrubby_A = mkA "scrubby" "scrubbier";
lin scrubland_N = mkN "scrubland" ;
lin scruff_N = mkN "scruff" "scruffs";
lin scruffy_A = mkA "scruffy" "scruffier";
lin scrum_N = mkN "scrum" "scrums";
lin scrummage_N = mkN "scrummage" "scrummages";
lin scrumptious_A = compoundA (mkA "scrumptious");
lin scrumpy_N = mkN "scrumpy" ;
lin scrunch_N = mkN "scrunch" "scrunches";
lin scrunch_V2 = mkV2 (mkV "scrunch" "scrunches" "scrunched" "scrunched" "scrunching");
lin scruple_N = mkN "scruple" "scruples";
lin scruple_V = mkV "scruple" "scruples" "scrupled" "scrupled" "scrupling";
lin scrupulous_A = compoundA (mkA "scrupulous");
lin scrupulousness_N = mkN "scrupulousness" ;
lin scrutineer_N = mkN "scrutineer" "scrutineers";
lin scrutinize_V2 = mkV2 (mkV "scrutinize" "scrutinizes" "scrutinized" "scrutinized" "scrutinizing");
lin scrutinizer_N = mkN "scrutinizer" ;
lin scrutiny_N = mkN "scrutiny" "scrutinies";
lin scud_N = mkN "scud" "scuds";
lin scud_V = mkV "scud" "scuds" "scudded" "scudded" "scudding";
lin scuff_N = mkN "scuff" ;
lin scuff_V = mkV "scuff" "scuffs" "scuffed" "scuffed" "scuffing";
lin scuff_V2 = mkV2 (mkV "scuff" "scuffs" "scuffed" "scuffed" "scuffing");
lin scuffer_N = mkN "scuffer" ;
lin scuffle_N = mkN "scuffle" ;
lin scuffle_V = mkV "scuffle" "scuffles" "scuffled" "scuffled" "scuffling";
lin scull_N = mkN "scull" "sculls";
lin scull_V = mkV "scull" "sculls" "sculled" "sculled" "sculling";
lin scull_V2 = mkV2 (mkV "scull" "sculls" "sculled" "sculled" "sculling");
lin sculler_N = mkN "sculler" "scullers";
lin scullery_N = mkN "scullery" "sculleries";
lin sculling_N = mkN "sculling" ;
lin scullion_N = mkN "scullion" "scullions";
lin sculpin_N = mkN "sculpin" ;
lin sculpt_V = mkV "sculpt" "sculpts" "sculpted" "sculpted" "sculpting";
lin sculpt_V2 = mkV2 (mkV "sculpt" "sculpts" "sculpted" "sculpted" "sculpting");
lin sculptor_N = mkN "sculptor" "sculptors";
lin sculptress_N = mkN "sculptress" "sculptresses";
lin sculptural_A = compoundA (mkA "sculptural");
lin sculpture_N = mkN "sculpture" "sculptures";
lin sculpture_V = mkV "sculpture" "sculptures" "sculptured" "sculptured" "sculpturing";
lin sculpture_V2 = mkV2 (mkV "sculpture" "sculptures" "sculptured" "sculptured" "sculpturing");
lin scum_N = mkN "scum" ;
lin scumble_N = mkN "scumble" ;
lin scummy_A = mkA "scummy" "scummier";
lin scunner_N = mkN "scunner" ;
lin scunthorpe_PN = mkPN "Scunthorpe";
lin scup_N = mkN "scup" ;
lin scupper_N = mkN "scupper" "scuppers";
lin scupper_V2 = mkV2 (mkV "scupper" "scuppers" "scuppered" "scuppered" "scuppering");
lin scuppernong_N = mkN "scuppernong" ;
lin scurf_N = mkN "scurf" ;
lin scurfy_A = mkA "scurfy" "scurfier";
lin scurrility_N = mkN "scurrility" ;
lin scurrilous_A = compoundA (mkA "scurrilous");
lin scurry_N = mkN "scurry" "scurries";
lin scurry_V = mkV "scurry" "scurries" "scurried" "scurried" "scurrying";
lin scurvy_A = compoundA (mkA "scurvy");
lin scurvy_N = mkN "scurvy" ;
lin scut_N = mkN "scut" "scuts";
lin scutcheon_N = mkN "scutcheon" "scutcheons";
lin scute_N = mkN "scute" ;
lin scuttle_N = mkN "scuttle" "scuttles";
lin scuttle_V = mkV "scuttle" "scuttles" "scuttled" "scuttled" "scuttling";
lin scuttle_V2 = mkV2 (mkV "scuttle" "scuttles" "scuttled" "scuttled" "scuttling");
lin scylla_N = mkN "scylla" "scyllas";
lin scyphozoan_N = mkN "scyphozoan" ;
lin scyphus_N = mkN "scyphus" ;
lin scythe_N = mkN "scythe" "scythes";
lin scythe_V2 = mkV2 (mkV "scythe" "scythes" "scythed" "scythed" "scything");
lin sea_N = mkN "sea" "seas";
lin sea_anemone_N = mkN "sea-anemone" "sea-anemones";
lin sea_animal_N = mkN "sea-animal" "sea-animals";
lin sea_bathing_N = mkN "sea-bathing" ;
lin sea_boat_N = mkN "sea-boat" "sea-boats";
lin sea_bream_N = mkN "sea-bream" "sea-bream";
lin sea_breeze_N = mkN "sea-breeze" "sea-breezes";
lin sea_coal_N = mkN "sea-coal" ;
lin sea_cow_N = mkN "sea-cow" "sea-cows";
lin sea_dog_N = mkN "sea-dog" "sea-dogs";
lin sea_fish_N = mkN "sea-fish" "sea-fish";
lin sea_girt_A = compoundA (mkA "sea-girt");
lin sea_god_N = mkN "sea-god" "sea-gods";
lin sea_green_A = compoundA (mkA "sea-green");
lin sea_green_N = mkN "sea-green" ;
lin sea_horse_N = mkN "sea-horse" "sea-horses";
lin sea_level_N = mkN "sea-level" "IRREG";
lin sea_lion_N = mkN "sea-lion" "sea-lions";
lin sea_power_N = mkN "sea-power" ;
lin sea_rover_N = mkN "sea-rover" "sea-rovers";
lin sea_snake_N = mkN "sea-snake" "sea-snakes";
lin sea_urchin_N = mkN "sea-urchin" "sea-urchins";
lin sea_wall_N = mkN "sea-wall" "sea-walls";
lin sea_water_N = mkN "sea-water" ;
lin seabag_N = mkN "seabag" ;
lin seabed_N = mkN "seabed" "seabeds";
lin seabird_N = mkN "seabird" "seabirds";
lin seaboard_N = mkN "seaboard" "seaboards";
lin seaborgium_N = mkN "seaborgium" ;
lin seaborne_A = compoundA (mkA "seaborne");
lin seafarer_N = mkN "seafarer" "seafarers";
lin seafaring_A = compoundA (mkA "seafaring");
lin seafaring_N = mkN "seafaring" ;
lin seafood_N = mkN "seafood" "seafoods";
lin seaford_PN = mkPN "Seaford";
lin seafront_N = mkN "seafront" "seafronts";
lin seagirt_A = mkA "seagirt" ;
lin seagoing_A = compoundA (mkA "seagoing");
lin seagrass_N = mkN "seagrass" ;
lin seagull_N = mkN "seagull" "seagulls";
lin seaham_PN = mkPN "Seaham";
lin seahorse_N = mkN "seahorse" ;
lin seakale_N = mkN "seakale" ;
lin seal_N = mkN "seal" "seals";
lin seal_V = mkV "seal" "seals" "sealed" "sealed" "sealing";
lin seal_V2 = mkV2 (mkV "seal" "seals" "sealed" "sealed" "sealing");
lin seal_V2A = mkV2A (mkV "seal" "seals" "sealed" "sealed" "sealing") noPrep;
lin seal_ring_N = mkN "seal-ring" "seal-rings";
lin sealant_N = mkN "sealant" ;
lin sealer_N = mkN "sealer" "sealers";
lin sealing_wax_N = mkN "sealing-wax" ;
lin sealskin_N = mkN "sealskin" "sealskins";
lin sealyham_N = mkN "sealyham" "sealyhams";
lin seam_N = mkN "seam" "seams";
lin seam_V2 = mkV2 (mkV "seam" "seams" "seamed" "seamed" "seaming");
lin seaman_N = mkN masculine (mkN "seaman" "seamen");
lin seamanlike_A = compoundA (mkA "seamanlike");
lin seamanship_N = mkN "seamanship" ;
lin seamless_A = compoundA (mkA "seamless");
lin seamount_N = mkN "seamount" ;
lin seamstress_N = mkN "seamstress" "seamstresses";
lin seamus_PN = mkPN "Seamus";
lin seamy_A = mkA "seamy" "seamier";
lin sean_PN = mkPN "Sean";
lin seance_N = mkN "séance" "séances";
lin seaplane_N = mkN "seaplane" "seaplanes";
lin seaport_N = mkN "seaport" "seaports";
lin seaquake_N = mkN "seaquake" ;
lin sear_A = compoundA (mkA "sear");
lin sear_V2 = mkV2 (mkV "sear" "sears" "seared" "seared" "searing");
lin search_N = mkN "search" "searches";
lin search_V = mkV "search" "searches" "searched" "searched" "searching";
lin search_V2 = mkV2 (mkV "search" "searches" "searched" "searched" "searching");
lin search_party_N = mkN "search-party" "search-parties";
lin search_warrant_N = mkN "search-warrant" "search-warrants";
lin searcher_N = mkN "searcher" "searchers";
lin searchingly_Adv = mkAdv "searchingly" ;
lin searchlight_N = mkN "searchlight" "searchlights";
lin searing_A = mkA "searing" ;
lin searing_iron_N = mkN "searing-iron" "searing-irons";
lin seascape_N = mkN "seascape" "seascapes";
lin seashell_N = mkN "seashell" "seashells";
lin seashore_N = mkN "seashore" "seashores";
lin seasick_A = compoundA (mkA "seasick");
lin seasickness_N = mkN "seasickness" ;
lin seaside_N = mkN "seaside" "seasides";
lin seasnail_N = mkN "seasnail" ;
lin season_N = mkN "season" "seasons";
lin season_V = mkV "season" "seasons" "seasoned" "seasoned" "seasoning";
lin season_V2 = mkV2 (mkV "season" "seasons" "seasoned" "seasoned" "seasoning");
lin season_ticket_N = mkN "season-ticket" "season-tickets";
lin seasonable_A = compoundA (mkA "seasonable");
lin seasonableness_N = mkN "seasonableness" ;
lin seasonal_A = compoundA (mkA "seasonal");
lin seasoner_N = mkN "seasoner" ;
lin seasoning_N = mkN "seasoning" "seasonings";
lin seat_N = mkN "seat" "seats";
lin seat_V2 = mkV2 (mkV "seat" "seats" "seated" "seated" "seating");
lin seat_belt_N = mkN "seat-belt" "seat-belts";
lin seating_N = mkN "seating" ;
lin seating_room_N = mkN "seating-room" ;
lin seaton_burn_PN = mkPN "Seaton burn";
lin seaton_delaval_PN = mkPN "Seaton delaval";
lin seattle_PN = mkPN "Seattle";
lin seaward_A = compoundA (mkA "seaward");
lin seaward_Adv = mkAdv "seaward" ;
lin seaward_N = mkN "seaward" ;
lin seawards_Adv = mkAdv "seawards";
lin seawater_N = mkN "seawater" ;
lin seaway_N = mkN "seaway" "seaways";
lin seaweed_N = mkN "seaweed" "seaweeds";
lin seaworthiness_N = mkN "seaworthiness" ;
lin seaworthy_A = compoundA (mkA "seaworthy");
lin seborrhea_N = mkN "seborrhea" ;
lin sebum_N = mkN "sebum" ;
lin sec_A = mkA "sec" ;
lin sec_N = mkN "sec" "secs";
lin secant_N = mkN "secant" ;
lin secateurs_N = mkN "secateurs" ;
lin secede_V = mkV "secede" "secedes" "seceded" "seceded" "seceding";
lin secession_N = mkN "secession" "secessions";
lin secessionism_N = mkN "secessionism" ;
lin secessionist_N = mkN "secessionist" "secessionists";
lin seckel_N = mkN "seckel" ;
lin seclude_V2 = mkV2 (mkV "seclude" "secludes" "secluded" "secluded" "secluding");
lin seclusion_N = mkN "seclusion" ;
lin second_N = mkN "second" "seconds";
lin second_V2 = mkV2 (mkV "second" "seconds" "seconded" "seconded" "seconding");
lin second_best_A = compoundA (mkA "second-best");
lin second_best_Adv = mkAdv "second-best";
lin second_best_N = mkN "second-best" "second-bests";
lin second_class_A = compoundA (mkA "second-class");
lin second_class_Adv = mkAdv "second-class";
lin second_class_N = mkN "second-class" ;
lin second_guess_V2 = mkV2 (mkV "second-guess");
lin second_hand_A = compoundA (mkA "second-hand");
lin second_hand_N = mkN "second-hand" "second-hands";
lin second_rate_A = compoundA (mkA "second-rate");
lin second_rater_N = mkN "second-rater" "second-raters";
lin second_sighted_A = compoundA (mkA "second-sighted");
lin secondary_A = compoundA (mkA "secondary");
lin secondary_N = mkN "secondary" ;
lin seconder_N = mkN "seconder" "seconders";
lin secondhand_A = mkA "secondhand" ;
lin secondhand_Adv = mkAdv "secondhand" ;
lin secondment_N = mkN "secondment" "secondments";
lin secondo_N = mkN "secondo" ;
lin secrecy_N = mkN "secrecy" ;
lin secret_A = compoundA (mkA "secret");
lin secret_N = mkN "secret" "secrets";
lin secretarial_A = compoundA (mkA "secretarial");
lin secretariat_N = mkN "secretariat" "secretariats";
lin secretary_N = mkN "secretary" "secretaries";
lin secretary_general_N = mkN "secretary-general" "secretary-generals";
lin secretaryship_N = mkN "secretaryship" ;
lin secretase_N = mkN "secretase" ;
lin secrete_V2 = mkV2 (mkV "secrete" "secretes" "secreted" "secreted" "secreting");
lin secretin_N = mkN "secretin" ;
lin secretion_N = mkN "secretion" "secretions";
lin secretive_A = compoundA (mkA "secretive");
lin secretiveness_N = mkN "secretiveness" ;
lin secretory_A = mkA "secretory" ;
lin sect_N = mkN "sect" "sects";
lin sectarian_A = compoundA (mkA "sectarian");
lin sectarian_N = mkN "sectarian" "sectarians";
lin sectarianism_N = mkN "sectarianism" ;
lin section_N = mkN "section" "sections";
lin sectional_A = compoundA (mkA "sectional");
lin sectional_N = mkN "sectional" ;
lin sectionalism_N = mkN "sectionalism" ;
lin sector_N = mkN "sector" "sectors";
lin sectorial_A = mkA "sectorial" ;
lin secular_A = compoundA (mkA "secular");
lin secularism_N = mkN "secularism" ;
lin secularist_N = mkN "secularist" "secularists";
lin secularization_N = mkN "secularization" ;
lin secularize_V2 = mkV2 (mkV "secularize" "secularizes" "secularized" "secularized" "secularizing");
lin secundigravida_N = mkN "secundigravida" ;
lin secure_A = compoundA (mkA "secure");
lin secure_V2 = mkV2 (mkV "secure" "secures" "secured" "secured" "securing");
lin secureness_N = mkN "secureness" ;
lin securicor_PN = mkPN "Securicor";
lin security_N = mkN "security" "securities";
lin sedan_N = mkN "sedan" "sedans";
lin sedan_chair_N = mkN "sedan-chair" "sedan-chairs";
lin sedate_A = compoundA (mkA "sedate");
lin sedate_V2 = mkV2 (mkV "sedate" "sedates" "sedated" "sedated" "sedating");
lin sedateness_N = mkN "sedateness" ;
lin sedation_N = mkN "sedation" ;
lin sedative_A = compoundA (mkA "sedative");
lin sedative_N = mkN "sedative" "sedatives";
lin sedentary_A = compoundA (mkA "sedentary");
lin sedge_N = mkN "sedge" "sedges";
lin sedgy_A = mkA "sedgy" "sedgier";
lin sediment_N = mkN "sediment" ;
lin sedimentary_A = compoundA (mkA "sedimentary");
lin sedition_N = mkN "sedition" ;
lin seditious_A = compoundA (mkA "seditious");
lin seduce_V2 = mkV2 (mkV "seduce" "seduces" "seduced" "seduced" "seducing");
lin seducer_N = mkN "seducer" "seducers";
lin seduction_N = mkN "seduction" "seductions";
lin seductive_A = compoundA (mkA "seductive");
lin seductress_N = mkN "seductress" ;
lin sedulity_N = mkN "sedulity" ;
lin sedulous_A = compoundA (mkA "sedulous");
lin sedum_N = mkN "sedum" ;
lin see_N = mkN "see" "sees";
lin see_V = IrregEng.see_V;
lin see_V2 = mkV2 (IrregEng.see_V);
lin see_V2V = mkV2V (IrregEng.see_V) noPrep to_Prep ;
lin see_VA = mkVA (IrregEng.see_V);
lin see_VQ = mkVQ (IrregEng.see_V);
lin see_VS = mkVS (IrregEng.see_V);
lin see_through_A = compoundA (mkA "see-through");
lin seed_N = mkN "seed" "seeds";
lin seed_V = mkV "seed" "seeds" "seeded" "seeded" "seeding";
lin seed_V2 = mkV2 (mkV "seed" "seeds" "seeded" "seeded" "seeding");
lin seed_corn_N = mkN "seed-corn" ;
lin seedbed_N = mkN "seedbed" "seedbeds";
lin seedcake_N = mkN "seedcake" "seedcakes";
lin seeder_N = mkN "seeder" ;
lin seediness_N = mkN "seediness" ;
lin seedless_A = compoundA (mkA "seedless");
lin seedling_N = mkN "seedling" "seedlings";
lin seedsman_N = mkN masculine (mkN "seedsman" "seedsmen");
lin seedtime_N = mkN "seedtime" "seedtimes";
lin seedy_A = mkA "seedy" "seedier";
lin seek_N = mkN "seek" ;
lin seek_V2 = mkV2 (IrregEng.seek_V);
lin seek_VV = mkVV (IrregEng.seek_V);
lin seeker_N = mkN "seeker" "seekers";
lin seeking_N = mkN "seeking" ;
lin seem_V = mkV "seem" "seems" "seemed" "seemed" "seeming";
lin seem_V2 = mkV2 (mkV "seem" "seems" "seemed" "seemed" "seeming");
lin seem_VA = mkVA (mkV "seem" "seems" "seemed" "seemed" "seeming");
lin seem_VS = mkVS (mkV "seem" "seems" "seemed" "seemed" "seeming");
lin seem_VV = mkVV (mkV "seem" "seems" "seemed" "seemed" "seeming");
lin seeming_A = mkA "seeming";
lin seemliness_N = mkN "seemliness" ;
lin seemly_A = mkA "seemly" "seemlier";
lin seep_V = mkV "seep" "seeps" "seeped" "seeped" "seeping";
lin seepage_N = mkN "seepage" ;
lin seer_N = mkN "seer" "seers";
lin seersucker_N = mkN "seersucker" ;
lin seesaw_N = mkN "seesaw" "seesaws";
lin seesaw_V = mkV "seesaw" "seesaws" "seesawed" "seesawed" "seesawing";
lin seethe_V = mkV "seethe" "seethes" "seethed" "seethed" "seething";
lin seethe_V2 = mkV2 (mkV "seethe" "seethes" "seethed" "seethed" "seething");
lin segment_N = mkN "segment" "segments";
lin segment_V = mkV "segment" "segments" "segmented" "segmented" "segmenting";
lin segment_V2 = mkV2 (mkV "segment" "segments" "segmented" "segmented" "segmenting");
lin segmental_A = mkA "segmental" ;
lin segmentation_N = mkN "segmentation" "segmentations";
lin segno_N = mkN "segno" ;
lin segregate_N = mkN "segregate" ;
lin segregate_V2 = mkV2 (mkV "segregate" "segregates" "segregated" "segregated" "segregating");
lin segregation_N = mkN "segregation" "segregations";
lin segregationism_N = mkN "segregationism" ;
lin segregator_N = mkN "segregator" ;
lin segue_N = mkN "segue" ;
lin seiche_N = mkN "seiche" ;
lin seidel_N = mkN "seidel" ;
lin seigneury_N = mkN "seigneury" ;
lin seignior_N = mkN "seignior" "seigniors";
lin seigniorage_N = mkN "seigniorage" ;
lin seigniory_N = mkN "seigniory" ;
lin seine_N = mkN "seine" "seines";
lin seine_V = mkV "seine" "seines" "seined" "seined" "seining";
lin seine_V2 = mkV2 (mkV "seine" "seines" "seined" "seined" "seining");
lin seismic_A = compoundA (mkA "seismic");
lin seismogram_N = mkN "seismogram" ;
lin seismograph_N = mkN "seismograph" "seismographs";
lin seismography_N = mkN "seismography" ;
lin seismological_A = mkA "seismological" ;
lin seismologist_N = mkN "seismologist" "seismologists";
lin seismology_N = mkN "seismology" ;
lin seize_V = mkV "seize" "seizes" "seized" "seized" "seizing";
lin seize_V2 = mkV2 (mkV "seize" "seizes" "seized" "seized" "seizing");
lin seizing_N = mkN "seizing" ;
lin seizure_N = mkN "seizure" "seizures";
lin selby_PN = mkPN "Selby";
lin seldom_Adv = mkAdv "seldom";
lin select_A = compoundA (mkA "select");
lin select_V = mkV "select";
lin select_V2 = mkV2 (mkV "select" "selects" "selected" "selected" "selecting");
lin select_V2V = mkV2V (mkV "select") noPrep to_Prep ;
lin select_VV = mkVV (mkV "select");
lin selection_N = mkN "selection" "selections";
lin selective_A = compoundA (mkA "selective");
lin selectivity_N = mkN "selectivity" ;
lin selectman_N = mkN masculine (mkN "selectman" "selectmen");
lin selector_N = mkN "selector" "selectors";
lin selectwoman_N = mkN feminine (mkN "selectwoman" "selectwomen");
lin selenium_N = mkN "selenium" ;
lin selenology_N = mkN "selenology" ;
lin self_A = mkA "self" ;
lin self_N = mkN "self" "selves" {- FIXME: guessed plural form -};
lin self_abasement_N = mkN "self-abasement" ;
lin self_abnegation_N = mkN "self-abnegation" ;
lin self_absorbed_A = compoundA (mkA "self-absorbed");
lin self_acting_A = compoundA (mkA "self-acting");
lin self_activating_A = compoundA (mkA "self-activating");
lin self_addressed_A = compoundA (mkA "self-addressed");
lin self_appointed_A = compoundA (mkA "self-appointed");
lin self_assertion_N = mkN "self-assertion" ;
lin self_assertive_A = compoundA (mkA "self-assertive");
lin self_assurance_N = mkN "self-assurance" ;
lin self_assured_A = compoundA (mkA "self-assured");
lin self_centred_A = compoundA (mkA "self-centred");
lin self_collected_A = compoundA (mkA "self-collected");
lin self_coloured_A = compoundA (mkA "self-coloured");
lin self_command_N = mkN "self-command" ;
lin self_communion_N = mkN "self-communion" ;
lin self_complacency_N = mkN "self-complacency" ;
lin self_confessed_A = compoundA (mkA "self-confessed");
lin self_confidence_N = mkN "self-confidence" ;
lin self_confident_A = compoundA (mkA "self-confident");
lin self_conscious_A = compoundA (mkA "self-conscious");
lin self_consciousness_N = mkN "self-consciousness" ;
lin self_contained_A = compoundA (mkA "self-contained");
lin self_control_N = mkN "self-control" ;
lin self_defence_N = mkN "self-defence" ;
lin self_denial_N = mkN "self-denial" ;
lin self_denying_A = compoundA (mkA "self-denying");
lin self_destruct_V = mkV "self-destruct";
lin self_determination_N = mkN "self-determination" ;
lin self_educated_A = compoundA (mkA "self-educated");
lin self_effacing_A = compoundA (mkA "self-effacing");
lin self_employed_A = compoundA (mkA "self-employed");
lin self_esteem_N = mkN "self-esteem" ;
lin self_evident_A = compoundA (mkA "self-evident");
lin self_examination_N = mkN "self-examination" "self-examinations";
lin self_explanatory_A = compoundA (mkA "self-explanatory");
lin self_help_N = mkN "self-help" ;
lin self_importance_N = mkN "self-importance" ;
lin self_important_A = compoundA (mkA "self-important");
lin self_imposed_A = compoundA (mkA "self-imposed");
lin self_indulgence_N = mkN "self-indulgence" ;
lin self_indulgent_A = compoundA (mkA "self-indulgent");
lin self_insure_V = mkV "self-insure";
lin self_interest_N = mkN "self-interest" ;
lin self_locking_A = compoundA (mkA "self-locking");
lin self_made_A = compoundA (mkA "self-made");
lin self_opinionated_A = compoundA (mkA "self-opinionated");
lin self_pity_N = mkN "self-pity" ;
lin self_possessed_A = compoundA (mkA "self-possessed");
lin self_possession_N = mkN "self-possession" ;
lin self_preservation_N = mkN "self-preservation" ;
lin self_raising_A = compoundA (mkA "self-raising");
lin self_reliance_N = mkN "self-reliance" ;
lin self_reliant_A = compoundA (mkA "self-reliant");
lin self_respect_N = mkN "self-respect" ;
lin self_respecting_A = compoundA (mkA "self-respecting");
lin self_righteous_A = compoundA (mkA "self-righteous");
lin self_rule_N = mkN "self-rule" ;
lin self_sacrifice_N = mkN "self-sacrifice" "self-sacrifices";
lin self_sacrificing_A = compoundA (mkA "self-sacrificing");
lin self_same_A = compoundA (mkA "self-same");
lin self_sealing_A = compoundA (mkA "self-sealing");
lin self_seeker_N = mkN "self-seeker" "self-seekers";
lin self_seeking_A = compoundA (mkA "self-seeking");
lin self_seeking_N = mkN "self-seeking" ;
lin self_service_N = mkN "self-service" ;
lin self_sown_A = compoundA (mkA "self-sown");
lin self_starter_N = mkN "self-starter" "self-starters";
lin self_styled_A = compoundA (mkA "self-styled");
lin self_sufficiency_N = mkN "self-sufficiency" ;
lin self_sufficient_A = compoundA (mkA "self-sufficient");
lin self_sufficing_A = compoundA (mkA "self-sufficing");
lin self_supporting_A = compoundA (mkA "self-supporting");
lin self_will_N = mkN "self-will" ;
lin self_willed_A = compoundA (mkA "self-willed");
lin self_winding_A = compoundA (mkA "self-winding");
lin selfconsciously_Adv = mkAdv "selfconsciously";
lin selfish_A = compoundA (mkA "selfish");
lin selfishness_N = mkN "selfishness" ;
lin selflessness_N = mkN "selflessness" ;
lin selfsameness_N = mkN "selfsameness" ;
lin selkirk_PN = mkPN "Selkirk";
lin sell_N = mkN "sell" "IRREG";
lin sell_V = IrregEng.sell_V;
lin sell_V2 = mkV2 (IrregEng.sell_V);
lin sell_VA = mkVA (IrregEng.sell_V);
lin sell_VS = mkVS (IrregEng.sell_V);
lin sellerMasc_N = mkN masculine (mkN "seller" "sellers");
lin sellerFem_N = mkN feminine (mkN "seller" "sellers");
lin selling_N = mkN "selling" ;
lin selloff_N = mkN "selloff" ;
lin sellout_N = mkN "sellout" "sellouts";
lin selsey_PN = mkPN "Selsey";
lin selston_PN = mkPN "Selston";
lin selsyn_N = mkN "selsyn" ;
lin seltzer_N = mkN "seltzer" ;
lin selvage_N = mkN "selvage" "selvages";
lin selvedge_N = mkN "selvedge" "selvedges";
lin semantic_A = compoundA (mkA "semantic");
lin semantically_Adv = mkAdv "semantically" ;
lin semanticist_N = mkN "semanticist" ;
lin semantics_N = mkN "semantics" "semantics";
lin semaphore_N = mkN "semaphore" ;
lin semaphore_V = mkV "semaphore" "semaphores" "semaphored" "semaphored" "semaphoring";
lin semaphore_V2 = mkV2 (mkV "semaphore" "semaphores" "semaphored" "semaphored" "semaphoring");
lin semarang_PN = mkPN "Semarang";
lin semblance_N = mkN "semblance" "semblances";
lin semen_N = mkN "semen" ;
lin semester_N = mkN "semester" "semesters";
lin semestral_A = mkA "semestral" ;
lin semiabstract_A = mkA "semiabstract" ;
lin semiannual_A = mkA "semiannual" ;
lin semiaquatic_A = mkA "semiaquatic" ;
lin semiarid_A = mkA "semiarid" ;
lin semiautobiographical_A = mkA "semiautobiographical" ;
lin semiautomatic_A = mkA "semiautomatic" ;
lin semibreve_N = mkN "semibreve" "semibreves";
lin semicentennial_A = mkA "semicentennial" ;
lin semicentennial_N = mkN "semicentennial" ;
lin semicircle_N = mkN "semicircle" "semicircles";
lin semicircular_A = compoundA (mkA "semicircular");
lin semicolon_N = mkN "semicolon" "semicolons";
lin semicoma_N = mkN "semicoma" ;
lin semicomatose_A = mkA "semicomatose" ;
lin semiconducting_A = compoundA (mkA "semiconducting");
lin semiconductor_N = mkN "semiconductor" "semiconductors";
lin semiconscious_A = compoundA (mkA "semiconscious");
lin semidark_A = mkA "semidark" ;
lin semidarkness_N = mkN "semidarkness" ;
lin semidesert_N = mkN "semidesert" ;
lin semidetached_A = compoundA (mkA "semidetached");
lin semidiameter_N = mkN "semidiameter" ;
lin semiempirical_A = mkA "semiempirical" ;
lin semifinal_N = mkN "semifinal" "semifinals";
lin semifinalist_N = mkN "semifinalist" "semifinalists";
lin semifluidity_N = mkN "semifluidity" ;
lin semiformal_A = mkA "semiformal" ;
lin semigloss_N = mkN "semigloss" ;
lin semihard_A = mkA "semihard" ;
lin semiliquid_A = mkA "semiliquid" ;
lin semiliterate_A = mkA "semiliterate" ;
lin semimonthly_A = mkA "semimonthly" ;
lin semimonthly_Adv = mkAdv "semimonthly" ;
lin semimonthly_N = mkN "semimonthly" ;
lin seminal_A = compoundA (mkA "seminal");
lin seminar_N = mkN "seminar" "seminars";
lin seminarian_N = mkN "seminarian" ;
lin seminarist_N = mkN "seminarist" "seminarists";
lin seminary_N = mkN "seminary" "seminaries";
lin seminiferous_A = mkA "seminiferous" ;
lin seminoma_N = mkN "seminoma" ;
lin seminude_A = mkA "seminude" ;
lin semiofficial_A = compoundA (mkA "semiofficial");
lin semiopaque_A = mkA "semiopaque" ;
lin semiotic_A = mkA "semiotic" ;
lin semiotics_N = mkN "semiotics" ;
lin semiparasitic_A = mkA "semiparasitic" ;
lin semipermeable_A = mkA "semipermeable" ;
lin semipolitical_A = mkA "semipolitical" ;
lin semiprecious_A = mkA "semiprecious" ;
lin semiprivate_A = mkA "semiprivate" ;
lin semiprofessional_N = mkN "semiprofessional" ;
lin semipublic_A = mkA "semipublic" ;
lin semiquaver_N = mkN "semiquaver" "semiquavers";
lin semirigid_A = compoundA (mkA "semirigid");
lin semisolid_A = mkA "semisolid" ;
lin semite_A = compoundA (mkA "semite");
lin semite_N = mkN "semite" "semites";
lin semiterrestrial_A = mkA "semiterrestrial" ;
lin semitic_A = compoundA (mkA "semitic");
lin semitone_N = mkN "semitone" "semitones";
lin semitrailer_N = mkN "semitrailer" ;
lin semitrance_N = mkN "semitrance" ;
lin semitropical_A = compoundA (mkA "semitropical");
lin semivowel_N = mkN "semivowel" "semivowels";
lin semiweekly_A = mkA "semiweekly" ;
lin semiweekly_Adv = mkAdv "semiweekly" ;
lin semiweekly_N = mkN "semiweekly" ;
lin semolina_N = mkN "semolina" ;
lin sempstress_N = mkN "sempstress" "sempstresses";
lin sen_N = mkN "sen" ;
lin senate_N = mkN "senate" "senates";
lin senator_N = mkN "senator" "senators";
lin senatorial_A = compoundA (mkA "senatorial");
lin senatorship_N = mkN "senatorship" ;
lin send_V = IrregEng.send_V;
lin send_V2 = mkV2 (IrregEng.send_V);
lin send_V2V = mkV2V (IrregEng.send_V) noPrep to_Prep ;
lin send_VS = mkVS (IrregEng.send_V);
lin send_up_N = mkN "send-up" "send-ups";
lin sendee_N = mkN "sendee" ;
lin sender_N = mkN "sender" "senders";
lin sending_N = mkN "sending" ;
lin sendoff_N = mkN "sendoff" "sendoffs";
lin sene_N = mkN "sene" ;
lin senega_N = mkN "senega" ;
lin senegal_PN = mkPN "Senegal";
lin senegalese_A = compoundA (mkA "senegalese");
lin senegalese_N = mkN "senegalese" "senegalese";
lin senescence_N = mkN "senescence" ;
lin senescent_A = compoundA (mkA "senescent");
lin seneschal_N = mkN "seneschal" "seneschals";
lin senile_A = compoundA (mkA "senile");
lin senility_N = mkN "senility" ;
lin senior_A = compoundA (mkA "senior");
lin senior_N = mkN "senior" "seniors";
lin seniority_N = mkN "seniority" ;
lin seniti_N = mkN "seniti" ;
lin senna_N = mkN "senna" ;
lin sennit_N = mkN "sennit" ;
lin senor_N = mkN "señor" "IRREG";
lin senora_N = mkN "senora" "senoras";
lin senorita_N = mkN "senorita" "senoritas";
lin sensate_A = mkA "sensate" ;
lin sensation_N = mkN "sensation" "sensations";
lin sensational_A = compoundA (mkA "sensational");
lin sensationalism_N = mkN "sensationalism" ;
lin sensationalist_N = mkN "sensationalist" "sensationalists";
lin sense_N = mkN "sense" "senses";
lin sense_V2 = mkV2 (mkV "sense" "senses" "sensed" "sensed" "sensing");
lin sense_VS = mkVS (mkV "sense");
lin sense_organ_N = mkN "sense-organ" "sense-organs";
lin senseless_A = compoundA (mkA "senseless");
lin senselessness_N = mkN "senselessness" ;
lin sensibility_N = mkN "sensibility" "sensibilities";
lin sensible_A = compoundA (mkA "sensible");
lin sensibleness_N = mkN "sensibleness" ;
lin sensing_N = mkN "sensing" ;
lin sensitive_A = compoundA (mkA "sensitive");
lin sensitivity_N = mkN "sensitivity" "sensitivities";
lin sensitization_N = mkN "sensitization" ;
lin sensitize_V2 = mkV2 (mkV "sensitize" "sensitizes" "sensitized" "sensitized" "sensitizing");
lin sensitizer_N = mkN "sensitizer" ;
lin sensitizing_A = mkA "sensitizing" ;
lin sensitizing_N = mkN "sensitizing" ;
lin sensitometer_N = mkN "sensitometer" ;
lin sensorimotor_A = mkA "sensorimotor" ;
lin sensorineural_A = mkA "sensorineural" ;
lin sensorium_N = mkN "sensorium" ;
lin sensory_A = compoundA (mkA "sensory");
lin sensual_A = compoundA (mkA "sensual");
lin sensualism_N = mkN "sensualism" ;
lin sensualist_N = mkN "sensualist" "sensualists";
lin sensuality_N = mkN "sensuality" ;
lin sensuous_A = compoundA (mkA "sensuous");
lin sensuousness_N = mkN "sensuousness" ;
lin sent_N = mkN "sent" ;
lin sente_N = mkN "sente" ;
lin sentence_N = mkN "sentence" "sentences";
lin sentence_V = mkV "sentence";
lin sentence_V2 = mkV2 (mkV "sentence" "sentences" "sentenced" "sentenced" "sentencing");
lin sentential_A = mkA "sentential" ;
lin sententious_A = compoundA (mkA "sententious");
lin sentience_N = mkN "sentience" ;
lin sentient_A = compoundA (mkA "sentient");
lin sentiment_N = mkN "sentiment" "sentiments";
lin sentimental_A = compoundA (mkA "sentimental");
lin sentimentalism_N = mkN "sentimentalism" ;
lin sentimentalist_N = mkN "sentimentalist" "sentimentalists";
lin sentimentality_N = mkN "sentimentality" ;
lin sentimentalization_N = mkN "sentimentalization" ;
lin sentimentalize_V = mkV "sentimentalize" "sentimentalizes" "sentimentalized" "sentimentalized" "sentimentalizing";
lin sentimentalize_V2 = mkV2 (mkV "sentimentalize" "sentimentalizes" "sentimentalized" "sentimentalized" "sentimentalizing");
lin sentinel_N = mkN "sentinel" "sentinels";
lin sentry_N = mkN "sentry" "sentries";
lin sentry_box_N = mkN "sentry-box" "sentry-boxes";
lin sentry_go_N = mkN "sentry-go" "sentry-gi" {- FIXME: guessed plural form -};
lin seoul_PN = mkPN "Seoul";
lin sepal_N = mkN "sepal" "sepals";
lin sepaloid_A = mkA "sepaloid" ;
lin separability_N = mkN "separability" ;
lin separable_A = compoundA (mkA "separable");
lin separate_A = compoundA (mkA "separate");
lin separate_N = mkN "separate" "separates";
lin separate_V = mkV "separate" "separates" "separated" "separated" "separating";
lin separate_V2 = mkV2 (mkV "separate" "separates" "separated" "separated" "separating");
lin separateness_N = mkN "separateness" ;
lin separation_N = mkN "separation" "separations";
lin separationism_N = mkN "separationism" ;
lin separatism_N = mkN "separatism" ;
lin separatist_N = mkN "separatist" "separatists";
lin separative_A = mkA "separative" ;
lin separator_N = mkN "separator" "separators";
lin sepia_N = mkN "sepia" ;
lin sepsis_N = mkN "sepsis" ;
lin sept_PN = mkPN "Sept";
lin septal_A = mkA "septal" ;
lin septation_N = mkN "septation" ;
lin septectomy_N = mkN "septectomy" ;
lin september_N = mkN "September" "Septembers";
lin september_PN = mkPN "September";
lin septet_N = mkN "septet" "septets";
lin septic_A = compoundA (mkA "septic");
lin septicaemia_N = mkN "septicaemia" ;
lin septicemia_N = mkN "septicemia" ;
lin septicemic_A = mkA "septicemic" ;
lin septillion_N = mkN "septillion" ;
lin septrional_A = mkA "septrional" ;
lin septuagenarian_N = mkN "septuagenarian" "septuagenarians";
lin septuagint_N = mkN "septuagint" "septuagints";
lin septum_N = mkN "septum" ;
lin septuple_A = mkA "septuple" ;
lin sepulchral_A = compoundA (mkA "sepulchral");
lin sepulchre_N = mkN "sepulchre" "sepulchres";
lin sepulture_N = mkN "sepulture" ;
lin sequel_N = mkN "sequel" "sequels";
lin sequela_N = mkN "sequela" ;
lin sequella_N = mkN "sequella" ;
lin sequence_N = mkN "sequence" "sequences";
lin sequencer_N = mkN "sequencer" ;
lin sequent_A = compoundA (mkA "sequent");
lin sequential_A = compoundA (mkA "sequential");
lin sequester_V2 = mkV2 (mkV "sequester" "sequesters" "sequestered" "sequestered" "sequestering");
lin sequestrate_V2 = mkV2 (mkV "sequestrate" "sequestrates" "sequestrated" "sequestrated" "sequestrating");
lin sequestration_N = mkN "sequestration" "sequestrations";
lin sequin_N = mkN "sequin" "sequins";
lin sequoia_N = mkN "sequoia" "sequoias";
lin seraglio_N = mkN "seraglio" "seraglios";
lin serape_N = mkN "serape" ;
lin seraph_N = mkN "seraph" "seraphs";
lin seraphic_A = compoundA (mkA "seraphic");
lin serbo_croat_N = mkN "serbo-croat" ;
lin sere_A = compoundA (mkA "sere");
lin serenade_N = mkN "serenade" "serenades";
lin serenade_V2 = mkV2 (mkV "serenade" "serenades" "serenaded" "serenaded" "serenading");
lin serendipitous_A = mkA "serendipitous" ;
lin serendipity_N = mkN "serendipity" ;
lin serene_A = compoundA (mkA "serene");
lin sereness_N = mkN "sereness" ;
lin serenity_N = mkN "serenity" ;
lin serf_N = mkN "serf" "serfs";
lin serfdom_N = mkN "serfdom" ;
lin serflike_A = mkA "serflike" ;
lin serge_N = mkN "serge" ;
lin sergeant_N = mkN "sergeant" "sergeants";
lin sergeant_major_N = mkN "sergeant-major" "sergeant-majors";
lin serger_N = mkN "serger" ;
lin serial_A = compoundA (mkA "serial");
lin serial_N = mkN "serial" "serials";
lin serialism_N = mkN "serialism" ;
lin serialization_N = mkN "serialization" ;
lin serialize_V2 = mkV2 (mkV "serialize" "serializes" "serialized" "serialized" "serializing");
lin seriatim_Adv = mkAdv "seriatim";
lin sericultural_A = compoundA (mkA "sericultural");
lin sericulture_N = mkN "sericulture" "sericultures";
lin sericulturist_N = mkN "sericulturist" "sericulturists";
lin series_N = mkN "series" "series";
lin serif_N = mkN "serif" ;
lin serigraphy_N = mkN "serigraphy" ;
lin serin_N = mkN "serin" ;
lin serine_N = mkN "serine" ;
lin seriocomedy_N = mkN "seriocomedy" ;
lin seriocomic_A = compoundA (mkA "seriocomic");
lin serious_A = compoundA (mkA "serious");
lin seriousness_N = mkN "seriousness" ;
lin serjeant_N = mkN "serjeant" "serjeants";
lin serjeant_at_arms_N = mkN "serjeant-at-arms" "serjeants-at-arms";
lin sermon_N = mkN "sermon" "sermons";
lin sermonize_V = mkV "sermonize" "sermonizes" "sermonized" "sermonized" "sermonizing";
lin sermonize_V2 = mkV2 (mkV "sermonize" "sermonizes" "sermonized" "sermonized" "sermonizing");
lin serologic_A = mkA "serologic" ;
lin serologist_N = mkN "serologist" ;
lin serology_N = mkN "serology" ;
lin serotine_N = mkN "serotine" ;
lin serotonin_N = mkN "serotonin" ;
lin serous_A = compoundA (mkA "serous");
lin serow_N = mkN "serow" ;
lin serpent_N = mkN "serpent" "serpents";
lin serpentine_A = compoundA (mkA "serpentine");
lin serrate_A = mkA "serrate" ;
lin serrated_A = compoundA (mkA "serrated");
lin serration_N = mkN "serration" ;
lin serratus_N = mkN "serratus" ;
lin serried_A = compoundA (mkA "serried");
lin serrulate_A = mkA "serrulate" ;
lin sertraline_N = mkN "sertraline" ;
lin sertularian_N = mkN "sertularian" ;
lin serum_N = mkN "serum" ;
lin serval_N = mkN "serval" ;
lin servantMasc_N = mkN masculine (mkN "servant" "servants");
lin servantFem_N = mkN feminine (mkN "servant" "servants");
lin serve_N = mkN "serve" "serves";
lin serve_V = mkV "serve" "serves" "served" "served" "serving";
lin serve_V2 = mkV2 (mkV "serve" "serves" "served" "served" "serving");
lin serve_VS = mkVS (mkV "serve" "serves" "served" "served" "serving");
lin serve_VV = mkVV (mkV "serve" "serves" "served" "served" "serving");
lin server_N = mkN "server" "servers";
lin service_N = mkN "service" "services";
lin service_V2 = mkV2 (mkV "service" "services" "serviced" "serviced" "servicing");
lin serviceability_N = mkN "serviceability" ;
lin serviceable_A = compoundA (mkA "serviceable");
lin serviceman_N = mkN masculine (mkN "serviceman" "servicemen");
lin servicing_N = mkN "servicing" ;
lin serviette_N = mkN "serviette" "serviettes";
lin servile_A = compoundA (mkA "servile");
lin servility_N = mkN "servility" ;
lin serving_N = mkN "serving" "servings";
lin servitor_N = mkN "servitor" "servitors";
lin servitude_N = mkN "servitude" ;
lin servo_N = mkN "servo" ;
lin servomechanical_A = mkA "servomechanical" ;
lin sesame_N = mkN "sesame" ;
lin sesbania_N = mkN "sesbania" ;
lin sesotho_N = mkN "sesotho" ;
lin sesquicentennial_N = mkN "sesquicentennial" ;
lin sesquipedalian_A = compoundA (mkA "sesquipedalian");
lin sesquipedalian_N = mkN "sesquipedalian" ;
lin sesquipedality_N = mkN "sesquipedality" ;
lin sessile_A = mkA "sessile" ;
lin session_N = mkN "session" "sessions";
lin sestet_N = mkN "sestet" ;
lin set_N = mkN "set" "sets";
lin set_V = IrregEng.set_V;
lin set_V2 = mkV2 (IrregEng.set_V);
lin set_VS = mkVS (IrregEng.set_V);
lin set_VV = mkVV (IrregEng.set_V);
lin set_square_N = mkN "set-square" "set-squares";
lin set_to_N = mkN "set-to" "set-tos";
lin set_up_N = mkN "set-up" "set-ups";
lin seta_N = mkN "seta" ;
lin setback_N = mkN "setback" "setbacks";
lin setscrew_N = mkN "setscrew" ;
lin setswana_N = mkN "setswana" ;
lin sett_N = mkN "sett" "setts";
lin settee_N = mkN "settee" "settees";
lin setter_N = mkN "setter" "setters";
lin setting_N = mkN "setting" "settings";
lin settle_N = mkN "settle" "settles";
lin settle_V = mkV "settle" "settles" "settled" "settled" "settling";
lin settle_V2 = mkV2 (mkV "settle" "settles" "settled" "settled" "settling");
lin settle_VA = mkVA (mkV "settle" "settles" "settled" "settled" "settling");
lin settlement_N = mkN "settlement" "settlements";
lin settler_N = mkN "settler" "settlers";
lin settling_N = mkN "settling" ;
lin settlor_N = mkN "settlor" ;
lin setup_N = mkN "setup" ;
lin seven_sisters_PN = mkPN "Seven sisters";
lin sevenfold_A = compoundA (mkA "sevenfold");
lin sevenfold_Adv = mkAdv "sevenfold";
lin sevenoaks_PN = mkPN "Sevenoaks";
lin sever_V = mkV "sever" "severs" "severed" "severed" "severing";
lin sever_V2 = mkV2 (mkV "sever" "severs" "severed" "severed" "severing");
lin several_Num = {s,sp = \\_ => table {Nom => "several"; Gen => "several's"}; n = Pl; hasCard = True} ;
lin severally_Adv = mkAdv "severally";
lin severalty_N = mkN "severalty" ;
lin severance_N = mkN "severance" ;
lin severe_A = variants {compoundA (mkA "severe"); mkA "severe" "severer"};
lin severity_N = mkN "severity" "severities";
lin sevilla_PN = mkPN "Sevilla";
lin seville_PN = mkPN "Seville";
lin sew_V = IrregEng.sew_V;
lin sew_V2 = mkV2 (IrregEng.sew_V);
lin sewage_N = mkN "sewage" ;
lin sewage_farm_N = mkN "sewage-farm" "sewage-farms";
lin sewage_works_N = mkN "sewage-works" "sewage-works";
lin sewer_N = mkN "sewer" "sewers";
lin sewer_gas_N = mkN "sewer-gas" ;
lin sewer_rat_N = mkN "sewer-rat" "sewer-rats";
lin sewerage_N = mkN "sewerage" "sewerages";
lin sewing_N = mkN "sewing" ;
lin sewing_machine_N = mkN "sewing-machine" "sewing-machines";
lin sex_N = mkN "sex" "sexes";
lin sex_V2 = mkV2 (mkV "sex" "sexes" "sexed" "sexed" "sexing");
lin sex_starved_A = compoundA (mkA "sex-starved");
lin sexagenarian_A = compoundA (mkA "sexagenarian");
lin sexagenarian_N = mkN "sexagenarian" "sexagenarians";
lin sexagesimal_A = mkA "sexagesimal" ;
lin sexcapade_N = mkN "sexcapade" ;
lin sexism_N = mkN "sexism" ;
lin sexist_A = compoundA (mkA "sexist");
lin sexist_N = mkN "sexist" "sexists";
lin sexless_A = compoundA (mkA "sexless");
lin sexploitation_N = mkN "sexploitation" ;
lin sext_N = mkN "sext" ;
lin sextant_N = mkN "sextant" "sextants";
lin sextet_N = mkN "sextet" "sextets";
lin sextette_N = mkN "sextette" "sextettes";
lin sextillion_N = mkN "sextillion" ;
lin sexton_N = mkN "sexton" "sextons";
lin sextuple_A = mkA "sextuple" ;
lin sexual_A = compoundA (mkA "sexual");
lin sexuality_N = mkN "sexuality" ;
lin sexy_A = mkA "sexy" "sexier";
lin seychelles_PN = mkPN "Seychelles";
lin seychellois_A = compoundA (mkA "seychellois");
lin seychellois_N = mkN "seychellois" "seychellois";
lin sforzando_N = mkN "sforzando" ;
lin sgd_PN = mkPN "Sgd";
lin sgraffito_N = mkN "sgraffito" ;
lin sgt_PN = mkPN "Sgt";
lin shabbiness_N = mkN "shabbiness" ;
lin shabby_A = mkA "shabby" "shabbier";
lin shabby_genteel_A = compoundA (mkA "shabby-genteel");
lin shack_N = mkN "shack" "shacks";
lin shack_V = mkV "shack" "shacks" "shacked" "shacked" "shacking";
lin shackle_N = mkN "shackle" "shackles";
lin shackle_V2 = mkV2 (mkV "shackle" "shackles" "shackled" "shackled" "shackling");
lin shad_N = mkN "shad" "shad";
lin shaddock_N = mkN "shaddock" "shaddocks";
lin shade_N = mkN "shade" "shades";
lin shade_V = mkV "shade" "shades" "shaded" "shaded" "shading";
lin shade_V2 = mkV2 (mkV "shade" "shades" "shaded" "shaded" "shading");
lin shade_tree_N = mkN "shade-tree" "shade-trees";
lin shadiness_N = mkN "shadiness" ;
lin shading_N = mkN "shading" "shadings";
lin shadow_N = mkN "shadow" "shadows";
lin shadow_V2 = mkV2 (mkV "shadow" "shadows" "shadowed" "shadowed" "shadowing");
lin shadow_boxing_N = mkN "shadow-boxing" ;
lin shadowboxing_N = mkN "shadowboxing" ;
lin shadowing_N = mkN "shadowing" ;
lin shadowy_A = mkA "shadowy" "shadowier";
lin shady_A = mkA "shady" "shadier";
lin shaft_N = mkN "shaft" "shafts";
lin shag_N = mkN "shag" ;
lin shag_V = mkV "shag" "shags" "shagged" "shagged" "shagging";
lin shag_V2 = mkV2 (mkV "shag" "shags" "shagged" "shagged" "shagging");
lin shagbark_N = mkN "shagbark" ;
lin shagginess_N = mkN "shagginess" ;
lin shagging_N = mkN "shagging" ;
lin shaggy_A = mkA "shaggy" "shaggier";
lin shaggymane_N = mkN "shaggymane" ;
lin shah_N = mkN "shah" "shahs";
lin shahadah_N = mkN "shahadah" ;
lin shaheed_N = mkN "shaheed" ;
lin shaitan_N = mkN "shaitan" ;
lin shakable_A = mkA "shakable" ;
lin shake_N = mkN "shake" "shakes";
lin shake_V = IrregEng.shake_V;
lin shake_V2 = mkV2 (IrregEng.shake_V);
lin shake_up_N = mkN "shake-up" "shake-ups";
lin shakedown_A = mkA "shakedown" ;
lin shakedown_N = mkN "shakedown" "shakedowns";
lin shakeout_N = mkN "shakeout" "shakeouts";
lin shaker_N = mkN "shaker" "shakers";
lin shakespearian_A = compoundA (mkA "shakespearian");
lin shakiness_N = mkN "shakiness" ;
lin shaking_N = mkN "shaking" "shakings";
lin shaky_A = mkA "shaky" "shakier";
lin shale_N = mkN "shale" ;
lin shale_oil_N = mkN "shale-oil" ;
lin shallot_N = mkN "shallot" "shallots";
lin shallow_A = mkA "shallow" "shallower";
lin shallow_N = mkN "shallow" "shallows";
lin shallow_V = mkV "shallow" "shallows" "shallowed" "shallowed" "shallowing";
lin shallowness_N = mkN "shallowness" ;
lin shallu_N = mkN "shallu" ;
lin sham_A = compoundA (mkA "sham");
lin sham_N = mkN "sham" "IRREG";
lin sham_V = mkV "sham" "shams" "shammed" "shammed" "shamming";
lin sham_V2 = mkV2 (mkV "sham" "shams" "shammed" "shammed" "shamming");
lin shaman_N = mkN masculine (mkN "shaman");
lin shamanism_N = mkN "shamanism" ;
lin shamanist_A = mkA "shamanist" ;
lin shamble_N = mkN "shamble" "shambles";
lin shamble_V = mkV "shamble" "shambles" "shambled" "shambled" "shambling";
lin shambles_N = mkN "shambles" "IRREG";
lin shambolic_A = mkA "shambolic" ;
lin shambolically_Adv = mkAdv "shambolically" ;
lin shame_N = mkN "shame" ;
lin shame_V2 = mkV2 (mkV "shame" "shames" "shamed" "shamed" "shaming");
lin shame_making_A = compoundA (mkA "shame-making");
lin shamefaced_A = compoundA (mkA "shamefaced");
lin shamefacedness_N = mkN "shamefacedness" ;
lin shameful_A = compoundA (mkA "shameful");
lin shamefulness_N = mkN "shamefulness" ;
lin shameless_A = compoundA (mkA "shameless");
lin shamelessness_N = mkN "shamelessness" ;
lin shammy_N = mkN "shammy" "shammies";
lin shampoo_N = mkN "shampoo" "shampoos";
lin shampoo_V2 = mkV2 (mkV "shampoo" "shampoos" "shampooed" "shampooed" "shampooing");
lin shamrock_N = mkN "shamrock" "shamrocks";
lin shandy_N = mkN "shandy" "shandies";
lin shandygaff_N = mkN "shandygaff" ;
lin shanghai_PN = mkPN "Shanghai";
lin shanghai_V2 = mkV2 (mkV "shanghai" "shanghais" "shanghaied" "shanghaied" "shanghaiing");
lin shanghaier_N = mkN "shanghaier" ;
lin shank_N = mkN "shank" "shanks";
lin shanklin_PN = mkPN "Shanklin";
lin shanny_N = mkN "shanny" ;
lin shantung_N = mkN "shantung" ;
lin shanty_N = mkN "shanty" "shanties";
lin shantytown_N = mkN "shantytown" "shantytowns";
lin shape_N = mkN "shape" "shapes";
lin shape_V = mkV "shape" "shapes" "shaped" "shaped" "shaping";
lin shape_V2 = mkV2 (mkV "shape" "shapes" "shaped" "shaped" "shaping");
lin shape_VV = mkVV (mkV "shape" "shapes" "shaped" "shaped" "shaping");
lin shapeless_A = compoundA (mkA "shapeless");
lin shapelessness_N = mkN "shapelessness" ;
lin shapely_A = mkA "shapely" "shapelier";
lin shaper_N = mkN "shaper" ;
lin shaping_N = mkN "shaping" ;
lin shard_N = mkN "shard" "shards";
lin share_N = mkN "share" "shares";
lin share_V = mkV "share" "shares" "shared" "shared" "sharing";
lin share_V2 = mkV2 (mkV "share" "shares" "shared" "shared" "sharing");
lin share_out_N = mkN "share-out" "share-outs";
lin sharecropper_N = mkN "sharecropper" "sharecroppers";
lin shareholder_N = mkN "shareholder" "shareholders";
lin shareholding_N = mkN "shareholding" "shareholdings";
lin shareware_N = mkN "shareware" ;
lin shariah_N = mkN "shariah" ;
lin sharing_N = mkN "sharing" ;
lin shark_N = mkN "shark" "sharks";
lin sharkskin_N = mkN "sharkskin" "sharkskins";
lin sharksucker_N = mkN "sharksucker" ;
lin sharon_PN = mkPN "Sharon";
lin sharp_A = mkA "sharp" "sharper";
lin sharp_Adv = mkAdv "sharp";
lin sharp_N = mkN "sharp" "sharps";
lin sharp_eyed_A = compoundA (mkA "sharp-eyed");
lin sharp_set_A = compoundA (mkA "sharp-set");
lin sharp_sighted_A = compoundA (mkA "sharp-sighted");
lin sharp_witted_A = compoundA (mkA "sharp-witted");
lin sharpen_V = mkV "sharpen" "sharpens" "sharpened" "sharpened" "sharpening";
lin sharpen_V2 = mkV2 (mkV "sharpen" "sharpens" "sharpened" "sharpened" "sharpening");
lin sharpener_N = mkN "sharpener" "sharpeners";
lin sharper_N = mkN "sharper" "sharpers";
lin sharpie_N = mkN "sharpie" ;
lin sharpness_N = mkN "sharpness" ;
lin sharpshooter_N = mkN "sharpshooter" "sharpshooters";
lin shatter_V = mkV "shatter" "shatters" "shattered" "shattered" "shattering";
lin shatter_V2 = mkV2 (mkV "shatter" "shatters" "shattered" "shattered" "shattering");
lin shatterproof_A = compoundA (mkA "shatterproof");
lin shave_N = mkN "shave" "shaves";
lin shave_V = mkV "shave" "shaves" "shaved" "shaved" "shaving";
lin shave_V2 = mkV2 (mkV "shave" "shaves" "shaved" "shaved" "shaving");
lin shaven_A = mkA "shaven" ;
lin shaver_N = mkN "shaver" "shavers";
lin shavian_A = compoundA (mkA "shavian");
lin shavian_N = mkN "shavian" "shavians";
lin shaving_brush_N = mkN "shaving-brush" "shaving-brushes";
lin shawl_N = mkN "shawl" "shawls";
lin shawm_N = mkN "shawm" ;
lin she_Pron = mkPron "she" "her" "her" "hers" singular P3 feminine ;
lin she_goat_N = mkN "she-goat" "she-goats";
lin sheaf_N = mkN "sheaf" "sheaves";
lin shear_N = mkN "shear" ;
lin shear_V2 = mkV2 (mkV "shear" "shears" "sheared" "sheared" "shearing");
lin shearer_N = mkN "shearer" ;
lin shearing_N = mkN "shearing" ;
lin shears_N = mkN "shears" ;
lin shearwater_N = mkN "shearwater" ;
lin sheath_N = mkN "sheath" "sheaths";
lin sheath_knife_N = mkN "sheath-knife" "sheath-knives";
lin sheathe_V2 = mkV2 (mkV "sheathe" "sheathes" "sheathed" "sheathed" "sheathing");
lin sheathing_N = mkN "sheathing" "sheathings";
lin shebang_N = mkN "shebang" "IRREG";
lin shebeen_N = mkN "shebeen" "shebeens";
lin shed_N = mkN "shed" "sheds";
lin shed_V2 = mkV2 (IrregEng.shed_V);
lin shedder_N = mkN "shedder" ;
lin shedding_N = mkN "shedding" ;
lin sheen_N = mkN "sheen" ;
lin sheep_N = mkN "sheep" "sheep";
lin sheepdog_N = mkN "sheepdog" "sheepdogs";
lin sheepfold_N = mkN "sheepfold" "sheepfolds";
lin sheepherder_N = mkN "sheepherder" ;
lin sheepish_A = compoundA (mkA "sheepish");
lin sheepishness_N = mkN "sheepishness" ;
lin sheeplike_A = mkA "sheeplike" ;
lin sheepman_N = mkN masculine (mkN "sheepman" "sheepmen");
lin sheeprun_N = mkN "sheeprun" "sheepruns";
lin sheepshank_N = mkN "sheepshank" ;
lin sheepshead_N = mkN "sheepshead" ;
lin sheepshearing_N = mkN "sheepshearing" ;
lin sheepskin_N = mkN "sheepskin" "sheepskins";
lin sheepwalk_N = mkN "sheepwalk" ;
lin sheer_A = mkA "sheer" "sheerer";
lin sheer_Adv = mkAdv "sheer";
lin sheer_V = mkV "sheer" "sheers" "sheered" "sheered" "sheering";
lin sheerness_PN = mkPN "Sheerness";
lin sheet_N = mkN "sheet" "sheets";
lin sheet_anchor_N = mkN "sheet-anchor" "sheet-anchors";
lin sheet_lightning_N = mkN "sheet-lightning" ;
lin sheeting_N = mkN "sheeting" ;
lin sheetlike_A = mkA "sheetlike" ;
lin sheffield_PN = mkPN "Sheffield";
lin shegetz_N = mkN "shegetz" ;
lin sheik_N = mkN "sheik" "sheiks";
lin sheika_N = mkN "sheika" ;
lin sheikdom_N = mkN "sheikdom" "sheikdoms";
lin sheikh_N = mkN "sheikh" "sheikhs";
lin sheikhdom_N = mkN "sheikhdom" "sheikhdoms";
lin sheila_PN = mkPN "Sheila";
lin shekel_N = mkN "shekel" "shekels";
lin sheldrake_N = mkN "sheldrake" "sheldrakes";
lin shelduck_N = mkN "shelduck" ;
lin shelf_N = mkN "shelf" "shelves" {- FIXME: guessed plural form -};
lin shelfful_N = mkN "shelfful" ;
lin shelflike_A = mkA "shelflike" ;
lin shelford_PN = mkPN "Shelford";
lin shell_N = mkN "shell" "shells";
lin shell_V = mkV "shell" "shells" "shelled" "shelled" "shelling";
lin shell_V2 = mkV2 (mkV "shell" "shells" "shelled" "shelled" "shelling");
lin shell_shock_N = mkN "shell-shock" ;
lin shellac_N = mkN "shellac" ;
lin shellac_V2 = mkV2 (mkV "shellac" "IRREG" "IRREG" "IRREG" "IRREG");
lin sheller_N = mkN "sheller" ;
lin shellfire_N = mkN "shellfire" ;
lin shellfish_N = mkN "shellfish" "shellfish";
lin shellflower_N = mkN "shellflower" ;
lin shellproof_A = compoundA (mkA "shellproof");
lin shelter_N = mkN "shelter" "shelters";
lin shelter_V = mkV "shelter" "shelters" "sheltered" "sheltered" "sheltering";
lin shelter_V2 = mkV2 (mkV "shelter" "shelters" "sheltered" "sheltered" "sheltering");
lin shelve_V = mkV "shelve" "shelves" "shelved" "shelved" "shelving";
lin shelve_V2 = mkV2 (mkV "shelve" "shelves" "shelved" "shelved" "shelving");
lin shelver_N = mkN "shelver" ;
lin shepherd_N = mkN masculine (mkN "shepherd" "shepherds");
lin shepherd_V2 = mkV2 (mkV "shepherd" "shepherds" "shepherded" "shepherded" "shepherding");
lin shepherdess_N = mkN feminine (mkN "shepherdess" "shepherdesses");
lin shepshed_PN = mkPN "Shepshed";
lin shepton_mallet_PN = mkPN "Shepton mallet";
lin sheraton_N = mkN "sheraton" ;
lin sherbert_N = mkN "sherbert" ;
lin sherbet_N = mkN "sherbet" "sherbets";
lin sherbourne_PN = mkPN "Sherbourne";
lin sheriff_N = mkN "sheriff" "sheriffs";
lin sheringham_PN = mkPN "Sheringham";
lin sherry_N = mkN "sherry" "sherries";
lin shetland_PN = mkPN "Shetland";
lin shevington_PN = mkPN "Shevington";
lin shew_V = mkV "shew" "shews" "shewed" "shewed" "shewing";
lin shew_V2 = mkV2 (mkV "shew" "shews" "shewed" "shewed" "shewing");
lin shibboleth_N = mkN "shibboleth" "shibboleths";
lin shield_N = mkN "shield" "shields";
lin shield_V2 = mkV2 (mkV "shield" "shields" "shielded" "shielded" "shielding");
lin shielding_N = mkN "shielding" ;
lin shift_N = mkN "shift" "shifts";
lin shift_V = mkV "shift" "shifts" "shifted" "shifted" "shifting";
lin shift_V2 = mkV2 (mkV "shift" "shifts" "shifted" "shifted" "shifting");
lin shiftiness_N = mkN "shiftiness" ;
lin shiftless_A = compoundA (mkA "shiftless");
lin shiftlessness_N = mkN "shiftlessness" ;
lin shifty_A = mkA "shifty" "shiftier";
lin shigella_N = mkN "shigella" ;
lin shigellosis_N = mkN "shigellosis" ;
lin shihkiachwang_PN = mkPN "Shihkiachwang";
lin shiitake_N = mkN "shiitake" ;
lin shiksa_N = mkN "shiksa" ;
lin shildon_PN = mkPN "Shildon";
lin shill_N = mkN "shill" ;
lin shillelagh_N = mkN "shillelagh" "shillelaghs";
lin shilling_N = mkN "shilling" "shillings";
lin shillyshally_N = mkN "shillyshally" ;
lin shillyshally_V = mkV "shillyshally" "shillyshallies" "shillyshallied" "shillyshallied" "shillyshallying";
lin shim_N = mkN "shim" ;
lin shimmer_N = mkN "shimmer" ;
lin shimmer_V = mkV "shimmer" "shimmers" "shimmered" "shimmered" "shimmering";
lin shimmery_A = mkA "shimmery" ;
lin shimmy_N = mkN "shimmy" ;
lin shin_N = mkN "shin" "shins";
lin shin_V = mkV "shin" "shins" "shinned" "shinned" "shinning";
lin shinbone_N = mkN "shinbone" "shinbones";
lin shindig_N = mkN "shindig" "shindigs";
lin shindy_N = mkN "shindy" "shindies";
lin shine_N = mkN "shine" ;
lin shine_V = IrregEng.shine_V;
lin shine_V2 = mkV2 (IrregEng.shine_V);
lin shiner_N = mkN "shiner" ;
lin shingle_N = mkN "shingle" "shingles";
lin shingle_V2 = mkV2 (mkV "shingle" "shingles" "shingled" "shingled" "shingling");
lin shingler_N = mkN "shingler" ;
lin shingles_N = mkN "shingles" "shingles";
lin shingling_N = mkN "shingling" ;
lin shingly_A = mkA "shingly" "shinglier";
lin shinguard_N = mkN "shinguard" "shinguards";
lin shininess_N = mkN "shininess" ;
lin shining_N = mkN "shining" ;
lin shinny_N = mkN "shinny" ;
lin shinplaster_N = mkN "shinplaster" ;
lin shiny_A = mkA "shiny" "shinier";
lin ship's_chandler_N = mkN "ship's-chandler" "ship's-chandlers";
lin ship_N = mkN "ship" "ships";
lin ship_V = mkV "ship" "ships" "shipped" "shipped" "shipping";
lin ship_V2 = mkV2 (mkV "ship" "ships" "shipped" "shipped" "shipping");
lin ship_breaker_N = mkN "ship-breaker" "ship-breakers";
lin ship_canal_N = mkN "ship-canal" "ship-canals";
lin shipboard_A = compoundA (mkA "shipboard");
lin shipbroker_N = mkN "shipbroker" "shipbrokers";
lin shipbuilder_N = mkN "shipbuilder" "shipbuilders";
lin shipbuilding_N = mkN "shipbuilding" ;
lin shipload_N = mkN "shipload" "shiploads";
lin shipmate_N = mkN "shipmate" "shipmates";
lin shipment_N = mkN "shipment" "shipments";
lin shipowner_N = mkN "shipowner" "shipowners";
lin shipper_N = mkN "shipper" "shippers";
lin shipping_N = mkN "shipping" ;
lin shipping_agent_N = mkN "shipping-agent" "shipping-agents";
lin shipping_office_N = mkN "shipping-office" "shipping-offices";
lin shipshape_A = compoundA (mkA "shipshape");
lin shipshape_Adv = mkAdv "shipshape";
lin shipside_N = mkN "shipside" ;
lin shipway_N = mkN "shipway" "shipways";
lin shipworm_N = mkN "shipworm" ;
lin shipwreck_N = mkN "shipwreck" "shipwrecks";
lin shipwreck_V = mkV "shipwreck" "shipwrecks" "shipwrecked" "shipwrecked" "shipwrecking";
lin shipwright_N = mkN "shipwright" "shipwrights";
lin shipyard_N = mkN "shipyard" "shipyards";
lin shire_N = mkN "shire" "shires";
lin shirebrook_PN = mkPN "Shirebrook";
lin shiremoor_PN = mkPN "Shiremoor";
lin shirk_V = mkV "shirk" "shirks" "shirked" "shirked" "shirking";
lin shirk_V2 = mkV2 (mkV "shirk" "shirks" "shirked" "shirked" "shirking");
lin shirker_N = mkN "shirker" "shirkers";
lin shirking_N = mkN "shirking" ;
lin shirley_PN = mkPN "Shirley";
lin shirring_N = mkN "shirring" ;
lin shirt_N = mkN "shirt" "shirts";
lin shirt_front_N = mkN "shirt-front" "shirt-fronts";
lin shirtdress_N = mkN "shirtdress" ;
lin shirtfront_N = mkN "shirtfront" ;
lin shirting_N = mkN "shirting" ;
lin shirtmaker_N = mkN "shirtmaker" ;
lin shirtsleeve_N = mkN "shirtsleeve" ;
lin shirtsleeves_N = mkN "shirtsleeves" ;
lin shirttail_N = mkN "shirttail" ;
lin shirtwaist_N = mkN "shirtwaist" "shirtwaists";
lin shirtwaister_N = mkN "shirtwaister" "shirtwaisters";
lin shirty_A = mkA "shirty" "shirtier";
lin shish_kebab_N = mkN "shish kebab" "shish kebabs";
lin shit_N = mkN "shit" ;
lin shit_V = mkV "shit" "shits" "shitted" "shitted" "shitting";
lin shitless_A = mkA "shitless" ;
lin shittah_N = mkN "shittah" ;
lin shittimwood_N = mkN "shittimwood" ;
lin shiv_N = mkN "shiv" ;
lin shiva_N = mkN "shiva" ;
lin shivaree_N = mkN "shivaree" ;
lin shiver_N = mkN "shiver" "shivers";
lin shiver_V = mkV "shiver" "shivers" "shivered" "shivered" "shivering";
lin shiver_V2 = mkV2 (mkV "shiver" "shivers" "shivered" "shivered" "shivering");
lin shivery_A = compoundA (mkA "shivery");
lin shmegegge_N = mkN "shmegegge" ;
lin shmooze_N = mkN "shmooze" ;
lin shoal_N = mkN "shoal" "shoals";
lin shoal_V = mkV "shoal" "shoals" "shoaled" "shoaled" "shoaling";
lin shock_Adv = mkAdv "shock";
lin shock_N = mkN "shock" "shocks";
lin shock_V2 = mkV2 (mkV "shock" "shocks" "shocked" "shocked" "shocking");
lin shock_brigade_N = mkN "shock-brigade" "shock-brigades";
lin shock_headed_A = compoundA (mkA "shock-headed");
lin shock_worker_N = mkN "shock-worker" "shock-workers";
lin shockable_A = compoundA (mkA "shockable");
lin shocker_N = mkN "shocker" "shockers";
lin shocking_A = compoundA (mkA "shocking");
lin shod_A = mkA "shod" ;
lin shoddiness_N = mkN "shoddiness" ;
lin shoddy_A = mkA "shoddy" "shoddier";
lin shoddy_N = mkN "shoddy" ;
lin shoe_N = mkN "shoe" "shoes";
lin shoe_V2 = mkV2 (IrregEng.shoe_V);
lin shoe_leather_N = mkN "shoe-leather" "shoe-leathers";
lin shoebill_N = mkN "shoebill" ;
lin shoeblack_N = mkN "shoeblack" ;
lin shoebox_N = mkN "shoebox" ;
lin shoeful_N = mkN "shoeful" ;
lin shoehorn_N = mkN "shoehorn" "shoehorns";
lin shoehorn_V2 = mkV2 (mkV "shoehorn");
lin shoelace_N = mkN "shoelace" "shoelaces";
lin shoemaker_N = mkN "shoemaker" "shoemakers";
lin shoemaking_N = mkN "shoemaking" ;
lin shoeshine_N = mkN "shoeshine" ;
lin shoestring_N = mkN "shoestring" "shoestrings";
lin shoetree_N = mkN "shoetree" "shoetrees";
lin shofar_N = mkN "shofar" ;
lin shogi_N = mkN "shogi" ;
lin shogun_N = mkN "shogun" "shoguns";
lin shoji_N = mkN "shoji" ;
lin shoo_V = mkV "shoo" "shoos" "shooed" "shooed" "shooing";
lin shoo_V2 = mkV2 (mkV "shoo" "shoos" "shooed" "shooed" "shooing");
lin shoofly_N = mkN "shoofly" ;
lin shook_N = mkN "shook" ;
lin shoot_N = mkN "shoot" "shoots";
lin shoot_V = IrregEng.shoot_V;
lin shoot_V2 = mkV2 (IrregEng.shoot_V);
lin shooter_N = mkN "shooter" "shooters";
lin shooting_N = mkN "shooting" ;
lin shooting_box_N = mkN "shooting-box" "shooting-boxes";
lin shooting_brake_N = mkN "shooting-brake" "shooting-brakes";
lin shooting_gallery_N = mkN "shooting-gallery" "shooting-galleries";
lin shooting_range_N = mkN "shooting-range" "shooting-ranges";
lin shooting_stick_N = mkN "shooting-stick" "shooting-sticks";
lin shop_N = mkN "shop" "shops";
lin shop_V = mkV "shop" "shops" "shopped" "shopped" "shopping";
lin shop_assistant_N = mkN "shop-assistant" "shop-assistants";
lin shop_bell_N = mkN "shop-bell" "shop-bells";
lin shop_boy_N = mkN "shop-boy" "shop-boys";
lin shop_front_N = mkN "shop-front" "shop-fronts";
lin shop_girl_N = mkN "shop-girl" "shop-girls";
lin shop_steward_N = mkN "shop-steward" "shop-stewards";
lin shopaholic_N = mkN "shopaholic" ;
lin shopfront_N = mkN "shopfront" ;
lin shopkeeper_N = mkN "shopkeeper" "shopkeepers";
lin shoplift_V = mkV "shoplift" "shoplifts" "shoplifted" "shoplifted" "shoplifting";
lin shoplift_V2 = mkV2 (mkV "shoplift" "shoplifts" "shoplifted" "shoplifted" "shoplifting");
lin shoplifter_N = mkN "shoplifter" "shoplifters";
lin shoplifting_N = mkN "shoplifting" ;
lin shopperMasc_N = mkN masculine (mkN "shopper" "shoppers");
lin shopperFem_N = mkN feminine (mkN "shopper" "shoppers");
lin shopping_N = mkN "shopping" ;
lin shopsoiled_A = compoundA (mkA "shopsoiled");
lin shopwalker_N = mkN "shopwalker" "shopwalkers";
lin shopwindow_N = mkN "shopwindow" "shopwindows";
lin shopworn_A = compoundA (mkA "shopworn");
lin shore_N = mkN "shore" "shores";
lin shore_V2 = mkV2 (mkV "shore" "shores" "shored" "shored" "shoring");
lin shorebird_N = mkN "shorebird" ;
lin shoreline_N = mkN "shoreline" ;
lin shoring_N = mkN "shoring" ;
lin shorn_V2 = mkV2 (mkV "shorn");
lin short_A = mkA "short" "shorter";
lin short_Adv = mkAdv "short";
lin short_N = mkN "short" "shorts";
lin short_V = mkV "short" "shorts" "shorted" "shorted" "shorting";
lin short_V2 = mkV2 (mkV "short" "shorts" "shorted" "shorted" "shorting");
lin short_change_V2 = mkV2 (mkV "short-change" "short-changes" "short-changed" "short-changed" "short-changing");
lin short_circuit_N = mkN "short-circuit" "short-circuits";
lin short_circuit_V = mkV "short-circuit" "short-circuits" "short-circuited" "short-circuited" "short-circuiting";
lin short_circuit_V2 = mkV2 (mkV "short-circuit" "short-circuits" "short-circuited" "short-circuited" "short-circuiting");
lin short_dated_A = compoundA (mkA "short-dated");
lin short_handed_A = compoundA (mkA "short-handed");
lin short_lived_A = compoundA (mkA "short-lived");
lin short_range_A = compoundA (mkA "short-range");
lin short_sighted_A = compoundA (mkA "short-sighted");
lin short_tempered_A = compoundA (mkA "short-tempered");
lin short_term_A = compoundA (mkA "short-term");
lin short_winded_A = compoundA (mkA "short-winded");
lin shortage_N = mkN "shortage" "shortages";
lin shortbread_N = mkN "shortbread" ;
lin shortcake_N = mkN "shortcake" ;
lin shortcoming_N = mkN "shortcoming" "shortcomings";
lin shortcut_N = mkN "shortcut" ;
lin shorten_V = mkV "shorten" "shortens" "shortened" "shortened" "shortening";
lin shorten_V2 = mkV2 (mkV "shorten" "shortens" "shortened" "shortened" "shortening");
lin shortener_N = mkN "shortener" ;
lin shortening_N = mkN "shortening" ;
lin shortfall_N = mkN "shortfall" "shortfalls";
lin shortgrass_N = mkN "shortgrass" ;
lin shorthand_A = mkA "shorthand" ;
lin shorthand_N = mkN "shorthand" ;
lin shorthorn_N = mkN "shorthorn" "shorthorns";
lin shortia_N = mkN "shortia" ;
lin shortish_A = compoundA (mkA "shortish");
lin shortlist_N = mkN "shortlist" "shortlists";
lin shortlist_V2 = mkV2 (mkV "shortlist" "shortlists" "shortlisted" "shortlisted" "shortlisting");
lin shortness_N = mkN "shortness" ;
lin shortstop_N = mkN "shortstop" ;
lin shot_N = mkN "shot" "shots";
lin shot_put_N = mkN "shot-put" "shot-puts";
lin shot_tower_N = mkN "shot-tower" "shot-towers";
lin shotgun_N = mkN "shotgun" "shotguns";
lin shotton_PN = mkPN "Shotton";
lin shotts_PN = mkPN "Shotts";
lin should_VV = {
    s = table {
      VVF VInf => ["be obliged to"] ;
      VVF VPres => "should" ;
      VVF VPPart => ["been obliged to"] ;
      VVF VPresPart => ["being obliged to"] ;
      VVF VPast => "shall" ;
      VVPastNeg => "shall not" ;
      VVPresNeg => "shouldn't"
      } ;
    p = [] ;
    typ = VVAux
    } ;
lin shoulder_N = mkN "shoulder" "shoulders";
lin shoulder_V2 = mkV2 (mkV "shoulder" "shoulders" "shouldered" "shouldered" "shouldering");
lin shoulder_blade_N = mkN "shoulder-blade" "shoulder-blades";
lin shoulder_flash_N = mkN "shoulder-flash" "shoulder-flashes";
lin shoulder_strap_N = mkN "shoulder-strap" "shoulder-straps";
lin shout_N = mkN "shout" "shouts";
lin shout_V = mkV "shout" "shouts" "shouted" "shouted" "shouting";
lin shout_V2 = mkV2 (mkV "shout" "shouts" "shouted" "shouted" "shouting");
lin shouting_N = mkN "shouting" ;
lin shove_N = mkN "shove" "shoves";
lin shove_V = mkV "shove" "shoves" "shoved" "shoved" "shoving";
lin shove_V2 = mkV2 (mkV "shove" "shoves" "shoved" "shoved" "shoving");
lin shove_ha'penny_N = mkN "shove-ha'penny" ;
lin shovel_N = mkN "shovel" "shovels";
lin shovel_V2 = mkV2 (mkV "shovel" "shovels" "shovelled" "shovelled" "shovelling");
lin shovel_board_N = mkN "shovel-board" ;
lin shoveler_N = mkN "shoveler" ;
lin shovelful_N = mkN "shovelful" "shovelfuls";
lin shovelhead_N = mkN "shovelhead" ;
lin show_N = mkN "show" "shows";
lin show_V = IrregEng.show_V;
lin show_V2 = mkV2 IrregEng.show_V;
lin show_V2V = mkV2V IrregEng.show_V noPrep to_Prep ;
lin show_VQ = mkVQ IrregEng.show_V;
lin show_VS = mkVS IrregEng.show_V;
lin show_business_N = mkN "show-business" ;
lin show_off_N = mkN "show-off" "show-offs";
lin show_window_N = mkN "show-window" "show-windows";
lin showbiz_N = mkN "showbiz" ;
lin showboat_N = mkN "showboat" "showboats";
lin showcase_N = mkN "showcase" "showcases";
lin showdown_N = mkN "showdown" "showdowns";
lin shower_N = mkN "shower" "showers";
lin shower_V = mkV "shower" "showers" "showered" "showered" "showering";
lin shower_V2 = mkV2 (mkV "shower" "showers" "showered" "showered" "showering");
lin shower_bath_N = mkN "shower-bath" "shower-baths";
lin showerhead_N = mkN "showerhead" ;
lin showery_A = mkA "showery" "showerier";
lin showgirl_N = mkN "showgirl" "showgirls";
lin showiness_N = mkN "showiness" ;
lin showing_N = mkN "showing" "showings";
lin showjumping_N = mkN "showjumping" ;
lin showman_N = mkN masculine (mkN "showman" "showmen");
lin showmanship_N = mkN "showmanship" ;
lin showplace_N = mkN "showplace" "showplaces";
lin showroom_N = mkN "showroom" "showrooms";
lin showy_A = mkA "showy" "showier";
lin shrapnel_N = mkN "shrapnel" ;
lin shred_N = mkN "shred" "shreds";
lin shred_V2 = mkV2 (mkV "shred" "shreds" "shredded" "shredded" "shredding");
lin shredder_N = mkN "shredder" ;
lin shrew_N = mkN "shrew" "shrews";
lin shrew_mouse_N = mkN "shrew-mouse" "shrew-mice";
lin shrewd_A = mkA "shrewd" "shrewder";
lin shrewdness_N = mkN "shrewdness" ;
lin shrewish_A = compoundA (mkA "shrewish");
lin shrewishness_N = mkN "shrewishness" ;
lin shrewsbury_PN = mkPN "Shrewsbury";
lin shriek_N = mkN "shriek" "shrieks";
lin shriek_V = mkV "shriek" "shrieks" "shrieked" "shrieked" "shrieking";
lin shriek_V2 = mkV2 (mkV "shriek" "shrieks" "shrieked" "shrieked" "shrieking");
lin shrift_N = mkN "shrift" ;
lin shrike_N = mkN "shrike" "shrikes";
lin shrill_A = mkA "shrill" "shriller";
lin shrill_V = mkV "shrill" "shrills" "shrilled" "shrilled" "shrilling";
lin shrill_V2 = mkV2 (mkV "shrill" "shrills" "shrilled" "shrilled" "shrilling");
lin shrilling_N = mkN "shrilling" ;
lin shrillness_N = mkN "shrillness" ;
lin shrimp_N = mkN "shrimp" "shrimps";
lin shrimp_V = mkV "shrimp" "shrimps" "shrimped" "shrimped" "shrimping";
lin shrimper_N = mkN "shrimper" ;
lin shrimpfish_N = mkN "shrimpfish" ;
lin shrine_N = mkN "shrine" "shrines";
lin shrine_V2 = mkV2 (mkV "shrine" "shrines" "shrined" "shrined" "shrining");
lin shrink_N = mkN "shrink" "shrinks";
lin shrink_V = IrregEng.shrink_V;
lin shrink_V2 = mkV2 (IrregEng.shrink_V);
lin shrinkable_A = compoundA (mkA "shrinkable");
lin shrinkage_N = mkN "shrinkage" ;
lin shrinking_N = mkN "shrinking" ;
lin shrive_V2 = mkV2 (mkV "shrive" "shrives" "shrived" "shrived" "shriving");
lin shrivel_V = mkV "shrivel" "shrivels" "shrivelled" "shrivelled" "shrivelling";
lin shrivel_V2 = mkV2 (mkV "shrivel" "shrivels" "shrivelled" "shrivelled" "shrivelling");
lin shriveled_A = mkA "shriveled" ;
lin shropshire_PN = mkPN "Shropshire";
lin shroud_N = mkN "shroud" "shrouds";
lin shroud_V2 = mkV2 (mkV "shroud" "shrouds" "shrouded" "shrouded" "shrouding");
lin shrove_tuesday_N = mkN "shrove tuesday" "shrove tuesdays";
lin shrove_tuesday_PN = mkPN "Shrove tuesday";
lin shrub_N = mkN "shrub" "shrubs";
lin shrubbery_N = mkN "shrubbery" "shrubberies";
lin shrubby_A = mkA "shrubby" ;
lin shrublet_N = mkN "shrublet" ;
lin shrug_N = mkN "shrug" "shrugs";
lin shrug_V2 = mkV2 (mkV "shrug" "shrugs" "shrugged" "shrugged" "shrugging");
lin shrug_VS = mkVS (mkV "shrug");
lin shtik_N = mkN "shtik" ;
lin shtikl_N = mkN "shtikl" ;
lin shuck_N = mkN "shuck" "shucks";
lin shuck_V2 = mkV2 (mkV "shuck" "shucks" "shucked" "shucked" "shucking");
lin shucks_N = mkN "shucks" ;
lin shudder_N = mkN "shudder" "shudders";
lin shudder_V = mkV "shudder" "shudders" "shuddered" "shuddered" "shuddering";
lin shudderingly_Adv = mkAdv "shudderingly";
lin shuffle_N = mkN "shuffle" "shuffles";
lin shuffle_V = mkV "shuffle" "shuffles" "shuffled" "shuffled" "shuffling";
lin shuffle_V2 = mkV2 (mkV "shuffle" "shuffles" "shuffled" "shuffled" "shuffling");
lin shuffleboard_N = mkN "shuffleboard" ;
lin shuffler_N = mkN "shuffler" "shufflers";
lin shufti_N = mkN "shufti" ;
lin shun_V2 = mkV2 (mkV "shun" "shuns" "shunned" "shunned" "shunning");
lin shunt_N = mkN "shunt" ;
lin shunt_V = mkV "shunt" "shunts" "shunted" "shunted" "shunting";
lin shunt_V2 = mkV2 (mkV "shunt" "shunts" "shunted" "shunted" "shunting");
lin shunter_N = mkN "shunter" "shunters";
lin shush_V = mkV "shush" "shushes" "shushed" "shushed" "shushing";
lin shush_V2 = mkV2 (mkV "shush" "shushes" "shushed" "shushed" "shushing");
lin shut_V = IrregEng.shut_V;
lin shut_V2 = mkV2 (IrregEng.shut_V);
lin shutdown_N = mkN "shutdown" "shutdowns";
lin shuteye_N = mkN "shuteye" ;
lin shutout_N = mkN "shutout" ;
lin shutter_N = mkN "shutter" "shutters";
lin shutter_V2 = mkV2 (mkV "shutter" "shutters" "shuttered" "shuttered" "shuttering");
lin shutterbug_N = mkN "shutterbug" ;
lin shutting_N = mkN "shutting" ;
lin shuttle_N = mkN "shuttle" "shuttles";
lin shuttle_V = mkV "shuttle" "shuttles" "shuttled" "shuttled" "shuttling";
lin shuttle_V2 = mkV2 (mkV "shuttle" "shuttles" "shuttled" "shuttled" "shuttling");
lin shuttlecock_N = mkN "shuttlecock" "shuttlecocks";
lin shy_A = mkA "shy" "shyer";
lin shy_N = mkN "shy" "shies";
lin shy_V = mkV "shy" "shies" "shied" "shied" "shying";
lin shy_V2 = mkV2 (mkV "shy" "shies" "shied" "shied" "shying");
lin shyly_Adv = mkAdv "shyly" ;
lin shyness_N = mkN "shyness" ;
lin shyster_N = mkN "shyster" "shysters";
lin sial_N = mkN "sial" ;
lin sialadenitis_N = mkN "sialadenitis" ;
lin sialolith_N = mkN "sialolith" ;
lin siam_PN = mkPN "Siam";
lin siamang_N = mkN "siamang" ;
lin siamese_A = compoundA (mkA "siamese");
lin siamese_N = mkN "siamese" "siamese";
lin sian_PN = mkPN "Sian";
lin siberian_A = compoundA (mkA "siberian");
lin sibilant_A = compoundA (mkA "sibilant");
lin sibilant_N = mkN "sibilant" "sibilants";
lin sibilation_N = mkN "sibilation" ;
lin sibling_N = mkN "sibling" "siblings";
lin sibyl_N = mkN "sibyl" "sibyls";
lin sibylline_A = compoundA (mkA "sibylline");
lin sic_Adv = mkAdv "sic";
lin sicilian_A = compoundA (mkA "sicilian");
lin sicilian_N = mkN "sicilian" "sicilians";
lin sick_A = compoundA (mkA "sick");
lin sick_N = mkN "sick" ;
lin sick_V2 = mkV2 (mkV "sick" "sicks" "sicked" "sicked" "sicking");
lin sick_benefit_N = mkN "sick-benefit" "sick-benefits";
lin sick_berth_N = mkN "sick-berth" "sick-berths";
lin sick_headache_N = mkN "sick-headache" "sick-headaches";
lin sick_leave_N = mkN "sick-leave" ;
lin sick_list_N = mkN "sick-list" "sick-lists";
lin sick_parade_N = mkN "sick-parade" "sick-parades";
lin sick_pay_N = mkN "sick-pay" ;
lin sick_room_N = mkN "sick-room" "sick-rooms";
lin sickbay_N = mkN "sickbay" "sickbays";
lin sickbed_N = mkN "sickbed" "sickbeds";
lin sicken_V = mkV "sicken" "sickens" "sickened" "sickened" "sickening";
lin sicken_V2 = mkV2 (mkV "sicken" "sickens" "sickened" "sickened" "sickening");
lin sickish_A = compoundA (mkA "sickish");
lin sickle_N = mkN "sickle" "sickles";
lin sicklepod_N = mkN "sicklepod" ;
lin sickly_A = mkA "sickly" "sicklier";
lin sickness_N = mkN "sickness" "sicknesses";
lin sickroom_N = mkN "sickroom" ;
lin sid_PN = mkPN "Sid";
lin side_N = mkN "side" "sides";
lin side_V = mkV "side" "sides" "sided" "sided" "siding";
lin side_chapel_N = mkN "side-chapel" "side-chapels";
lin side_dish_N = mkN "side-dish" "side-dishes";
lin side_drum_N = mkN "side-drum" "side-drums";
lin side_face_Adv = mkAdv "side-face";
lin side_glance_N = mkN "side-glance" "side-glances";
lin side_road_N = mkN "side-road" "side-roads";
lin side_saddle_Adv = mkAdv "side-saddle";
lin side_saddle_N = mkN "side-saddle" "side-saddles";
lin side_slip_N = mkN "side-slip" "side-slips";
lin side_slip_V = mkV "side-slip" "side-slips" "side-slipped" "side-slipped" "side-slipping";
lin side_splitting_A = compoundA (mkA "side-splitting");
lin side_stroke_N = mkN "side-stroke" ;
lin side_view_N = mkN "side-view" "side-views";
lin sidearm_A = mkA "sidearm" ;
lin sidearm_Adv = mkAdv "sidearm" ;
lin sidebar_N = mkN "sidebar" ;
lin sideboard_N = mkN "sideboard" "sideboards";
lin sideburn_N = mkN "sideburn" ;
lin sidecar_N = mkN "sidecar" "sidecars";
lin sidelight_N = mkN "sidelight" "sidelights";
lin sideline_N = mkN "sideline" "sidelines";
lin sideline_V = mkV "sideline";
lin sideline_V2 = mkV2 (mkV "sideline");
lin sidelong_A = compoundA (mkA "sidelong");
lin sidelong_Adv = mkAdv "sidelong";
lin sidereal_A = compoundA (mkA "sidereal");
lin siderite_N = mkN "siderite" ;
lin sideroblast_N = mkN "sideroblast" ;
lin siderocyte_N = mkN "siderocyte" ;
lin sideropenia_N = mkN "sideropenia" ;
lin siderosis_N = mkN "siderosis" ;
lin sidesaddle_Adv = mkAdv "sidesaddle" ;
lin sidesaddle_N = mkN "sidesaddle" ;
lin sideshow_N = mkN "sideshow" "sideshows";
lin sidesman_N = mkN masculine (mkN "sidesman" "sidesmen");
lin sidestep_N = mkN "sidestep" "sidesteps";
lin sidestep_V = mkV "sidestep" "sidesteps" "sidestepped" "sidestepped" "sidestepping";
lin sidestep_V2 = mkV2 (mkV "sidestep" "sidesteps" "sidestepped" "sidestepped" "sidestepping");
lin sidestroke_N = mkN "sidestroke" ;
lin sideswipe_N = mkN "sideswipe" ;
lin sidetrack_N = mkN "sidetrack" "sidetracks";
lin sidetrack_V2 = mkV2 (mkV "sidetrack" "sidetracks" "sidetracked" "sidetracked" "sidetracking");
lin sidewalk_N = mkN "sidewalk" "sidewalks";
lin sidewall_N = mkN "sidewall" ;
lin sideward_Adv = mkAdv "sideward" ;
lin sidewards_Adv = mkAdv "sidewards";
lin sideway_Adv = mkAdv "sideway" ;
lin sideways_Adv = mkAdv "sideways";
lin sidewinder_N = mkN "sidewinder" ;
lin siding_N = mkN "siding" "sidings";
lin sidle_V = mkV "sidle" "sidles" "sidled" "sidled" "sidling";
lin sidmouth_PN = mkPN "Sidmouth";
lin sidney_PN = mkPN "Sidney";
lin siege_N = mkN "siege" "sieges";
lin sienna_N = mkN "sienna" ;
lin sierra_N = mkN "sierra" "sierras";
lin sierra_leone_PN = mkPN "Sierra leone";
lin sierra_leonian_A = compoundA (mkA "sierra leonian");
lin sierra_leonian_N = mkN "sierra leonian" "sierra leonians";
lin siesta_N = mkN "siesta" "siestas";
lin sieve_N = mkN "sieve" "sieves";
lin sieve_V2 = mkV2 (mkV "sieve" "sieves" "sieved" "sieved" "sieving");
lin sift_V = mkV "sift" "sifts" "sifted" "sifted" "sifting";
lin sift_V2 = mkV2 (mkV "sift" "sifts" "sifted" "sifted" "sifting");
lin sifter_N = mkN "sifter" "sifters";
lin sigeh_N = mkN "sigeh" ;
lin sigh_N = mkN "sigh" "sighs";
lin sigh_V = mkV "sigh" "sighs" "sighed" "sighed" "sighing";
lin sigh_V2 = mkV2 (mkV "sigh" "sighs" "sighed" "sighed" "sighing");
lin sigh_VS = mkVS (mkV "sigh" "sighs" "sighed" "sighed" "sighing");
lin sight_N = mkN "sight" "sights";
lin sight_V2 = mkV2 (mkV "sight" "sights" "sighted" "sighted" "sighting");
lin sighting_N = mkN "sighting" "sightings";
lin sightless_A = compoundA (mkA "sightless");
lin sightreader_N = mkN "sightreader" ;
lin sights_N = mkN "sights" ;
lin sightseeing_N = mkN "sightseeing" ;
lin sightseer_N = mkN "sightseer" "sightseers";
lin sigma_N = mkN "sigma" ;
lin sigmoid_A = mkA "sigmoid" ;
lin sigmoidectomy_N = mkN "sigmoidectomy" ;
lin sigmoidoscope_N = mkN "sigmoidoscope" ;
lin sigmoidoscopy_N = mkN "sigmoidoscopy" ;
lin sign_N = mkN "sign" "signs";
lin sign_V = mkV "sign" "signs" "signed" "signed" "signing";
lin sign_V2 = mkV2 (mkV "sign" "signs" "signed" "signed" "signing");
lin sign_V2V = mkV2V (mkV "sign" "signs" "signed" "signed" "signing") noPrep to_Prep ;
lin sign_painter_N = mkN "sign-painter" "sign-painters";
lin signage_N = mkN "signage" ;
lin signal_A = compoundA (mkA "signal");
lin signal_N = mkN "signal" "signals";
lin signal_V = mkV "signal" "signals" "signalled" "signalled" "signalling";
lin signal_V2 = mkV2 (mkV "signal" "signals" "signalled" "signalled" "signalling");
lin signal_VS = mkVS (mkV "signal" "signals" "signalled" "signalled" "signalling");
lin signal_box_N = mkN "signal-box" "signal-boxes";
lin signale_V2 = mkV2 (mkV "signale");
lin signale_VS = mkVS (mkV "signale");
lin signaler_N = mkN "signaler" ;
lin signalization_N = mkN "signalization" ;
lin signalize_V2 = mkV2 (mkV "signalize" "signalizes" "signalized" "signalized" "signalizing");
lin signaller_N = mkN "signaller" "signallers";
lin signalman_N = mkN masculine (mkN "signalman" "signalmen");
lin signatory_N = mkN "signatory" "signatories";
lin signature_N = mkN "signature" "signatures";
lin signboard_N = mkN "signboard" ;
lin signer_N = mkN "signer" ;
lin signet_N = mkN "signet" "signets";
lin signet_ring_N = mkN "signet-ring" "signet-rings";
lin significance_N = mkN "significance" ;
lin significant_A = compoundA (mkA "significant");
lin signification_N = mkN "signification" "significations";
lin significative_A = compoundA (mkA "significative");
lin signify_V = mkV "signify" "signifies" "signified" "signified" "signifying";
lin signify_V2 = mkV2 (mkV "signify" "signifies" "signified" "signified" "signifying");
lin signor_N = mkN "signor" "signors";
lin signora_N = mkN "signora" "signoras";
lin signore_N = mkN "signore" ;
lin signorina_N = mkN "signorina" "signorinas";
lin signpost_N = mkN "signpost" "signposts";
lin signpost_V2 = mkV2 (mkV "signpost" "signposts" "signposted" "signposted" "signposting");
lin sikh_N = mkN "sikh" "sikhs";
lin silage_N = mkN "silage" ;
lin sild_N = mkN "sild" ;
lin sildenafil_N = mkN "sildenafil" ;
lin sileby_PN = mkPN "Sileby";
lin silence_N = mkN "silence" "silences";
lin silence_V2 = mkV2 (mkV "silence" "silences" "silenced" "silenced" "silencing");
lin silencer_N = mkN "silencer" "silencers";
lin silene_N = mkN "silene" ;
lin silent_A = compoundA (mkA "silent");
lin silenus_N = mkN "silenus" ;
lin silesia_N = mkN "silesia" ;
lin silex_N = mkN "silex" ;
lin silhouette_N = mkN "silhouette" "silhouettes";
lin silhouette_V2 = mkV2 (mkV "silhouette" "silhouettes" "silhouetted" "silhouetted" "silhouetting");
lin silica_N = mkN "silica" ;
lin silicate_N = mkN "silicate" ;
lin siliceous_A = mkA "siliceous" ;
lin silicide_N = mkN "silicide" ;
lin silicle_N = mkN "silicle" ;
lin silicon_N = mkN "silicon" ;
lin silicone_N = mkN "silicone" ;
lin silicosis_N = mkN "silicosis" ;
lin silique_N = mkN "silique" ;
lin silk_N = mkN "silk" "silks";
lin silken_A = compoundA (mkA "silken");
lin silkiness_N = mkN "silkiness" ;
lin silks_N = mkN "silks" ;
lin silkscreen_N = mkN "silkscreen" ;
lin silkworm_N = mkN "silkworm" "silkworms";
lin silky_A = mkA "silky" "silkier";
lin sill_N = mkN "sill" "sills";
lin sillabub_N = mkN "sillabub" "sillabubs";
lin silliness_N = mkN "silliness" ;
lin silly_A = mkA "silly" "sillier";
lin silly_N = mkN "silly" "sillies";
lin silo_N = mkN "silo" "silos";
lin siloxane_N = mkN "siloxane" ;
lin silsden_PN = mkPN "Silsden";
lin silt_N = mkN "silt" ;
lin silt_V = mkV "silt" "silts" "silted" "silted" "silting";
lin silt_V2 = mkV2 (mkV "silt" "silts" "silted" "silted" "silting");
lin siltstone_N = mkN "siltstone" ;
lin silty_A = mkA "silty" ;
lin silurid_N = mkN "silurid" ;
lin silva_N = mkN "silva" ;
lin silvan_A = compoundA (mkA "silvan");
lin silver_A = mkA "silver" ;
lin silver_N = mkN "silver" ;
lin silver_V = mkV "silver" "silvers" "silvered" "silvered" "silvering";
lin silver_V2 = mkV2 (mkV "silver" "silvers" "silvered" "silvered" "silvering");
lin silver_fish_N = mkN "silver-fish" "silver-fish";
lin silverback_N = mkN "silverback" ;
lin silverberry_N = mkN "silverberry" ;
lin silverfish_N = mkN "silverfish" ;
lin silvern_A = compoundA (mkA "silvern");
lin silverpoint_N = mkN "silverpoint" ;
lin silverrod_N = mkN "silverrod" ;
lin silverside_N = mkN "silverside" ;
lin silversides_N = mkN "silversides" ;
lin silversmith_N = mkN "silversmith" "silversmiths";
lin silverspot_N = mkN "silverspot" ;
lin silversword_N = mkN "silversword" ;
lin silvervine_N = mkN "silvervine" ;
lin silverware_N = mkN "silverware" ;
lin silverweed_N = mkN "silverweed" ;
lin silverwork_N = mkN "silverwork" ;
lin silvery_A = mkA "silvery" "silverier";
lin silvex_N = mkN "silvex" ;
lin silvia_PN = mkPN "Silvia";
lin silviculture_N = mkN "silviculture" ;
lin sima_N = mkN "sima" ;
lin simazine_N = mkN "simazine" ;
lin simian_A = compoundA (mkA "simian");
lin simian_N = mkN "simian" "simians";
lin similar_A = compoundA (mkA "similar");
lin similarity_N = mkN "similarity" "similarities";
lin simile_N = mkN "simile" "similes";
lin similitude_N = mkN "similitude" "similitudes";
lin simmer_N = mkN "simmer" "IRREG";
lin simmer_V = mkV "simmer" "simmers" "simmered" "simmered" "simmering";
lin simmer_V2 = mkV2 (mkV "simmer" "simmers" "simmered" "simmered" "simmering");
lin simnel_N = mkN "simnel" ;
lin simon_PN = mkPN "Simon";
lin simony_N = mkN "simony" ;
lin simoom_N = mkN "simoom" "simooms";
lin simoon_N = mkN "simoon" "simoons";
lin simper_N = mkN "simper" ;
lin simper_V = mkV "simper" "simpers" "simpered" "simpered" "simpering";
lin simperer_N = mkN "simperer" ;
lin simperingly_Adv = mkAdv "simperingly";
lin simple_A = irregAdv (mkA "simple" "simpler") "simply";
lin simple_N = mkN "simple" "simples";
lin simple_hearted_A = compoundA (mkA "simple-hearted");
lin simple_minded_A = compoundA (mkA "simple-minded");
lin simpleton_N = mkN "simpleton" "simpletons";
lin simplex_A = mkA "simplex" ;
lin simplicity_N = mkN "simplicity" ;
lin simplification_N = mkN "simplification" "simplifications";
lin simplify_V = mkV "simplify";
lin simplify_V2 = mkV2 (mkV "simplify" "simplifies" "simplified" "simplified" "simplifying");
lin simplistic_A = mkA "simplistic" ;
lin simulacrum_N = mkN "simulacrum" "simulacra" {- FIXME: guessed plural form -};
lin simulate_V2 = mkV2 (mkV "simulate" "simulates" "simulated" "simulated" "simulating");
lin simulation_N = mkN "simulation" ;
lin simulator_N = mkN "simulator" "simulators";
lin simulcast_N = mkN "simulcast" ;
lin simultaneity_N = mkN "simultaneity" ;
lin simultaneous_A = compoundA (mkA "simultaneous");
lin simultaneousness_N = mkN "simultaneousness" ;
lin simvastatin_N = mkN "simvastatin" ;
lin sin_N = mkN "sin" "sins";
lin sin_V = mkV "sin" "sins" "sinned" "sinned" "sinning";
lin since_Adv = mkAdv "since";
lin since_Prep = mkPrep "since";
lin since_Subj = mkSubj "since";
lin since_then_Adv = mkAdv "since then";
lin sincere_A = compoundA (mkA "sincere");
lin sincerity_N = mkN "sincerity" ;
lin sinciput_N = mkN "sinciput" ;
lin sine_N = mkN "sine" "sines";
lin sine_die_Adv = mkAdv "sine die";
lin sine_qua_non_N = mkN "sine qua non" "sine qua na" {- FIXME: guessed plural form -};
lin sinecure_N = mkN "sinecure" "sinecures";
lin sinew_N = mkN "sinew" "sinews";
lin sinewy_A = compoundA (mkA "sinewy");
lin sinful_A = compoundA (mkA "sinful");
lin sinfulness_N = mkN "sinfulness" ;
lin sing_V = IrregEng.sing_V;
lin sing_V2 = mkV2 (IrregEng.sing_V);
lin singable_A = compoundA (mkA "singable");
lin singalong_N = mkN "singalong" ;
lin singapore_PN = mkPN "Singapore";
lin singaporean_A = compoundA (mkA "Singaporean");
lin singaporeanMasc_N = mkN masculine (mkN "Singaporean" "Singaporeans");
lin singaporeanFem_N = mkN feminine (mkN "Singaporean" "Singaporeans");
lin singe_N = mkN "singe" "singes";
lin singe_V = mkV "singe" "IRREG" "IRREG" "IRREG" "IRREG";
lin singe_V2 = mkV2 (mkV "singe" "IRREG" "IRREG" "IRREG" "IRREG");
lin singer_N = mkN "singer" "singers";
lin singhalese_A = compoundA (mkA "singhalese");
lin singing_N = mkN "singing" ;
lin single_A = compoundA (mkA "single");
lin single_N = mkN "single" "singles";
lin single_V2 = mkV2 (mkV "single" "singles" "singled" "singled" "singling");
lin single_breasted_A = compoundA (mkA "single-breasted");
lin single_handed_A = compoundA (mkA "single-handed");
lin single_handed_Adv = mkAdv "single-handed";
lin single_minded_A = compoundA (mkA "single-minded");
lin single_spacing_N = mkN "single-spacing" ;
lin singleness_N = mkN "singleness" ;
lin singles_N = mkN "singles" ;
lin singlestick_N = mkN "singlestick" "singlesticks";
lin singlet_N = mkN "singlet" "singlets";
lin singleton_N = mkN "singleton" "singletons";
lin singly_Adv = mkAdv "singly";
lin singsong_N = mkN "singsong" "singsongs";
lin singular_A = compoundA (mkA "singular");
lin singular_N = mkN "singular" "singulars";
lin singularity_N = mkN "singularity" "singularities";
lin singularize_V2 = mkV2 (mkV "singularize" "singularizes" "singularized" "singularized" "singularizing");
lin sinhala_N = mkN "sinhala" ;
lin sinhalese_A = compoundA (mkA "sinhalese");
lin sinhalese_N = mkN "sinhalese" "sinhalese";
lin sining_PN = mkPN "Sining";
lin sinister_A = compoundA (mkA "sinister");
lin sinistral_A = mkA "sinistral" ;
lin sinistrorse_A = mkA "sinistrorse" ;
lin sink_N = mkN "sink" "sinks";
lin sink_V = IrregEng.sink_V;
lin sink_V2 = mkV2 (IrregEng.sink_V);
lin sinkable_A = compoundA (mkA "sinkable");
lin sinker_N = mkN "sinker" "sinkers";
lin sinkhole_N = mkN "sinkhole" ;
lin sinking_N = mkN "sinking" "sinkings";
lin sinking_fund_N = mkN "sinking-fund" "sinking-funds";
lin sinless_A = compoundA (mkA "sinless");
lin sinlessness_N = mkN "sinlessness" ;
lin sinn_fein_PN = mkPN "Sinn fein";
lin sinner_N = mkN "sinner" "sinners";
lin sinologist_N = mkN "sinologist" "sinologists";
lin sinology_N = mkN "sinology" ;
lin sinopis_N = mkN "sinopis" ;
lin sintered_A = mkA "sintered" ;
lin sinuate_A = mkA "sinuate" ;
lin sinuosity_N = mkN "sinuosity" "sinuosities";
lin sinuous_A = compoundA (mkA "sinuous");
lin sinus_N = mkN "sinus" "sinuses";
lin sinusitis_N = mkN "sinusitis" ;
lin sinusoid_N = mkN "sinusoid" ;
lin sinusoidal_A = mkA "sinusoidal" ;
lin sioux_N = mkN "sioux" "sioux";
lin sip_N = mkN "sip" "sips";
lin sip_V = mkV "sip" "sips" "sipped" "sipped" "sipping";
lin sip_V2 = mkV2 (mkV "sip" "sips" "sipped" "sipped" "sipping");
lin siphon_N = mkN "siphon" "siphons";
lin siphon_V = mkV "siphon" "siphons" "siphoned" "siphoned" "siphoning";
lin siphon_V2 = mkV2 (mkV "siphon" "siphons" "siphoned" "siphoned" "siphoning");
lin siphonophore_N = mkN "siphonophore" ;
lin sipper_N = mkN "sipper" ;
lin sir_N = mkN "sir" "sirs";
lin sir_roger_de_coverley_N = mkN "sir roger de coverley" "IRREG";
lin siracusa_PN = mkPN "Siracusa";
lin sirdar_N = mkN "sirdar" "sirdars";
lin sire_N = mkN "sire" "sires";
lin sire_V2 = mkV2 (mkV "sire" "sires" "sired" "sired" "siring");
lin siren_N = mkN "siren" "sirens";
lin siris_N = mkN "siris" ;
lin sirloin_N = mkN "sirloin" "sirloins";
lin sirocco_N = mkN "sirocco" "siroccos";
lin sirrah_N = mkN "sirrah" "sirrahs";
lin sirup_N = mkN "sirup" "sirups";
lin sisal_N = mkN "sisal" ;
lin siskin_N = mkN "siskin" ;
lin sissified_A = compoundA (mkA "sissified");
lin sissoo_N = mkN "sissoo" ;
lin sissy_N = mkN "sissy" "sissies";
lin sister_N = mkN "sister" "sisters";
lin sister_in_law_N = mkN "sister-in-law" "sisters-in-law";
lin sisterhood_N = mkN "sisterhood" ;
lin sisterly_A = compoundA (mkA "sisterly");
lin siswati_N = mkN "siswati" ;
lin sit_V = IrregEng.sit_V;
lin sit_V2 = mkV2 (IrregEng.sit_V);
lin sit_VA = mkVA (IrregEng.sit_V);
lin sit_in_N = mkN "sit-in" "sit-ins";
lin sitar_N = mkN "sitar" "sitars";
lin site_N = mkN "site" "sites";
lin site_V = mkV "site" "sites" "sited" "sited" "siting";
lin sitter_N = mkN "sitter" "sitters";
lin sitting_N = mkN "sitting" "sittings";
lin sitting_room_N = mkN "sitting-room" "sitting-rooms";
lin sittingbourne_PN = mkPN "Sittingbourne";
lin situate_V2 = mkV2 (mkV "situate");
lin situation_N = mkN "situation" "situations";
lin six_footer_N = mkN "six-footer" "six-footers";
lin six_shooter_N = mkN "six-shooter" "six-shooters";
lin sixfold_A = compoundA (mkA "sixfold");
lin sixfold_Adv = mkAdv "sixfold";
lin sixpence_N = mkN "sixpence" "sixpences";
lin sixpenny_A = compoundA (mkA "sixpenny");
lin sixth_former_N = mkN "sixth-former" "sixth-formers";
lin sizable_A = compoundA (mkA "sizable");
lin size_A = mkA "size" ;
lin size_N = mkN "size" "sizes";
lin size_V2 = mkV2 (mkV "size" "sizes" "sized" "sized" "sizing");
lin sizeable_A = compoundA (mkA "sizeable");
lin sizzle_N = mkN "sizzle" ;
lin sizzle_V = mkV "sizzle" "sizzles" "sizzled" "sizzled" "sizzling";
lin skank_N = mkN "skank" ;
lin skate_N = mkN "skate" "skates";
lin skate_V = mkV "skate" "skates" "skated" "skated" "skating";
lin skateboard_N = mkN "skateboard" "skateboards";
lin skateboarder_N = mkN "skateboarder" "skateboarders";
lin skateboarding_N = mkN "skateboarding" ;
lin skater_N = mkN "skater" "skaters";
lin skating_N = mkN "skating" ;
lin skating_rink_N = mkN "skating-rink" "skating-rinks";
lin skedaddle_N = mkN "skedaddle" ;
lin skedaddle_V = mkV "skedaddle" "skedaddles" "skedaddled" "skedaddled" "skedaddling";
lin skeet_N = mkN "skeet" "skeets";
lin skeg_N = mkN "skeg" ;
lin skegness_PN = mkPN "Skegness";
lin skein_N = mkN "skein" "skeins";
lin skeletal_A = mkA "skeletal" ;
lin skeleton_N = mkN "skeleton" "skeletons";
lin skelmanthorpe_PN = mkPN "Skelmanthorpe";
lin skelmersdale_PN = mkPN "Skelmersdale";
lin skep_N = mkN "skep" "skeps";
lin skepful_N = mkN "skepful" ;
lin skeptic_N = mkN human (mkN "skeptic");
lin skeptical_A = compoundA (mkA "skeptical");
lin skepticism_N = mkN "skepticism" ;
lin sketch_N = mkN "sketch" "sketches";
lin sketch_V = mkV "sketch" "sketches" "sketched" "sketched" "sketching";
lin sketch_V2 = mkV2 (mkV "sketch" "sketches" "sketched" "sketched" "sketching");
lin sketch_block_N = mkN "sketch-block" "sketch-blocks";
lin sketch_book_N = mkN "sketch-book" "sketch-books";
lin sketch_map_N = mkN "sketch-map" "sketch-maps";
lin sketchbook_N = mkN "sketchbook" ;
lin sketcher_N = mkN "sketcher" "sketchers";
lin sketchiness_N = mkN "sketchiness" ;
lin sketchy_A = mkA "sketchy" "sketchier";
lin skew_A = compoundA (mkA "skew");
lin skew_V2 = mkV2 (mkV "skew");
lin skew_eyed_A = compoundA (mkA "skew-eyed");
lin skewen_PN = mkPN "Skewen";
lin skewer_N = mkN "skewer" "skewers";
lin skewer_V2 = mkV2 (mkV "skewer" "skewers" "skewered" "skewered" "skewering");
lin ski_N = mkN "ski" "skis";
lin ski_V = mkV "ski" "IRREG" "IRREG" "IRREG" "IRREG";
lin ski_bob_N = mkN "ski-bob" "ski-bobs";
lin ski_jump_N = mkN "ski-jump" "ski-jumps";
lin ski_lift_N = mkN "ski-lift" "ski-lifts";
lin ski_plane_N = mkN "ski-plane" "ski-planes";
lin skibob_N = mkN "skibob" ;
lin skid_N = mkN "skid" "skids";
lin skid_V = mkV "skid" "skids" "skidded" "skidded" "skidding";
lin skid_V2 = mkV2 (mkV "skid" "skids" "skidded" "skidded" "skidding");
lin skidder_N = mkN "skidder" ;
lin skidpan_N = mkN "skidpan" "skidpans";
lin skier_N = mkN "skier" "skiers";
lin skiff_N = mkN "skiff" "skiffs";
lin skiffle_N = mkN "skiffle" ;
lin skiffle_group_N = mkN "skiffle-group" "skiffle-groups";
lin skiing_N = mkN "skiing" ;
lin skilful_A = compoundA (mkA "skilful");
lin skill_N = mkN "skill" "skills";
lin skilled_A = compoundA (mkA "skilled");
lin skillet_N = mkN "skillet" "skillets";
lin skillfully_Adv = mkAdv "skillfully" ;
lin skillfulness_N = mkN "skillfulness" ;
lin skilly_N = mkN "skilly" ;
lin skim_A = mkA "skim" ;
lin skim_N = mkN "skim" ;
lin skim_V = mkV "skim" "skims" "skimmed" "skimmed" "skimming";
lin skim_V2 = mkV2 (mkV "skim" "skims" "skimmed" "skimmed" "skimming");
lin skimmed_milk_N = mkN "skimmed-milk" ;
lin skimmer_N = mkN "skimmer" "skimmers";
lin skimming_N = mkN "skimming" ;
lin skimp_V = mkV "skimp" "skimps" "skimped" "skimped" "skimping";
lin skimp_V2 = mkV2 (mkV "skimp" "skimps" "skimped" "skimped" "skimping");
lin skimpy_A = mkA "skimpy" "skimpier";
lin skin_N = mkN "skin" "skins";
lin skin_V = mkV "skin" "skins" "skinned" "skinned" "skinning";
lin skin_V2 = mkV2 (mkV "skin" "skins" "skinned" "skinned" "skinning");
lin skin_deep_A = compoundA (mkA "skin-deep");
lin skin_diving_N = mkN "skin-diving" ;
lin skin_graft_N = mkN "skin-graft" "skin-grafts";
lin skin_tight_A = compoundA (mkA "skin-tight");
lin skinflint_N = mkN "skinflint" "skinflints";
lin skinful_N = mkN "skinful" ;
lin skinhead_N = mkN "skinhead" "skinheads";
lin skinheads_N = mkN "skinheads" ;
lin skink_N = mkN "skink" ;
lin skinless_A = mkA "skinless" ;
lin skinner_N = mkN "skinner" ;
lin skinniness_N = mkN "skinniness" ;
lin skinny_A = mkA "skinny" "skinnier";
lin skinny_N = mkN "skinny" ;
lin skint_A = compoundA (mkA "skint");
lin skintight_A = mkA "skintight" ;
lin skip_N = mkN "skip" "skips";
lin skip_V = mkV "skip" "skips" "skipped" "skipped" "skipping";
lin skip_V2 = mkV2 (mkV "skip" "skips" "skipped" "skipped" "skipping");
lin skipjack_N = mkN "skipjack" ;
lin skipper_N = mkN "skipper" "skippers";
lin skipper_V2 = mkV2 (mkV "skipper" "skippers" "skippered" "skippered" "skippering");
lin skipping_rope_N = mkN "skipping-rope" "skipping-ropes";
lin skipton_PN = mkPN "Skipton";
lin skirl_N = mkN "skirl" "skirls";
lin skirmish_N = mkN "skirmish" "skirmishes";
lin skirmish_V = mkV "skirmish" "skirmishes" "skirmished" "skirmished" "skirmishing";
lin skirmisher_N = mkN "skirmisher" "skirmishers";
lin skirret_N = mkN "skirret" ;
lin skirt_N = mkN "skirt" "skirts";
lin skirt_V = mkV "skirt" "skirts" "skirted" "skirted" "skirting";
lin skirt_V2 = mkV2 (mkV "skirt" "skirts" "skirted" "skirted" "skirting");
lin skirting_board_N = mkN "skirting-board" "skirting-boards";
lin skit_N = mkN "skit" "skits";
lin skitter_V = mkV "skitter" "skitters" "skittered" "skittered" "skittering";
lin skittish_A = compoundA (mkA "skittish");
lin skittishness_N = mkN "skittishness" ;
lin skittle_N = mkN "skittle" "skittles";
lin skittle_V2 = mkV2 (mkV "skittle" "skittles" "skittled" "skittled" "skittling");
lin skittle_pin_N = mkN "skittle-pin" "skittle-pins";
lin skittles_N = mkN "skittles" "skittles";
lin skivvy_N = mkN "skivvy" "skivvies";
lin skopje_PN = mkPN "Skopje";
lin skua_N = mkN "skua" "skuas";
lin skulk_V = mkV "skulk" "skulks" "skulked" "skulked" "skulking";
lin skulker_N = mkN "skulker" "skulkers";
lin skull_N = mkN "skull" "skulls";
lin skullcap_N = mkN "skullcap" "skullcaps";
lin skullduggery_N = mkN "skullduggery" "IRREG";
lin skulled_A = compoundA (mkA "skulled");
lin skunk_N = mkN "skunk" "skunks";
lin skunkweed_N = mkN "skunkweed" ;
lin sky_N = mkN "sky" "skies";
lin sky_V2 = mkV2 (mkV "sky" "skies" "skied" "skied" "skying");
lin sky_blue_A = compoundA (mkA "sky-blue");
lin sky_blue_N = mkN "sky-blue" ;
lin sky_high_Adv = mkAdv "sky-high";
lin skybox_N = mkN "skybox" ;
lin skycap_N = mkN "skycap" ;
lin skydiver_N = mkN "skydiver" ;
lin skydiving_N = mkN "skydiving" ;
lin skyhook_N = mkN "skyhook" ;
lin skylark_N = mkN "skylark" "skylarks";
lin skylark_V = mkV "skylark" "skylarks" "skylarked" "skylarked" "skylarking";
lin skylight_N = mkN "skylight" "skylights";
lin skyline_N = mkN "skyline" "skylines";
lin skyrocket_N = mkN "skyrocket" ;
lin skyrocket_V = mkV "skyrocket" "skyrockets" "skyrocketed" "skyrocketed" "skyrocketing";
lin skyrocket_V2 = mkV2 (mkV "skyrocket" "skyrockets" "skyrocketed" "skyrocketed" "skyrocketing");
lin skysail_N = mkN "skysail" ;
lin skyscraper_N = mkN "skyscraper" "skyscrapers";
lin skywalk_N = mkN "skywalk" ;
lin skyward_A = compoundA (mkA "skyward");
lin skyward_Adv = mkAdv "skyward";
lin skywards_A = compoundA (mkA "skywards");
lin skywards_Adv = mkAdv "skywards";
lin skywriting_N = mkN "skywriting" ;
lin slab_N = mkN "slab" "slabs";
lin slack_A = mkA "slack" "slacker";
lin slack_N = mkN "slack" "slacks";
lin slack_V = mkV "slack" "slacks" "slacked" "slacked" "slacking";
lin slacken_V = mkV "slacken" "slackens" "slackened" "slackened" "slackening";
lin slacken_V2 = mkV2 (mkV "slacken" "slackens" "slackened" "slackened" "slackening");
lin slacker_N = mkN "slacker" "slackers";
lin slackness_N = mkN "slackness" ;
lin slacks_N = mkN "slacks" ;
lin slag_N = mkN "slag" ;
lin slag_heap_N = mkN "slag-heap" "slag-heaps";
lin slagheap_N = mkN "slagheap" ;
lin slain_N = mkN "slain" ;
lin slake_V2 = mkV2 (mkV "slake" "slakes" "slaked" "slaked" "slaking");
lin slalom_N = mkN "slalom" "slaloms";
lin slam_N = mkN "slam" "slams";
lin slam_V = mkV "slam" "slams" "slammed" "slammed" "slamming";
lin slam_V2 = mkV2 (mkV "slam" "slams" "slammed" "slammed" "slamming");
lin slam_dunk_V2 = mkV2 (mkV "slam-dunk");
lin slammer_N = mkN "slammer" ;
lin slander_N = mkN "slander" "slanders";
lin slander_V2 = mkV2 (mkV "slander" "slanders" "slandered" "slandered" "slandering");
lin slanderer_N = mkN "slanderer" "slanderers";
lin slanderous_A = compoundA (mkA "slanderous");
lin slang_N = mkN "slang" ;
lin slang_V2 = mkV2 (mkV "slang" "slangs" "slanged" "slanged" "slanging");
lin slanginess_N = mkN "slanginess" ;
lin slanguage_N = mkN "slanguage" ;
lin slangy_A = mkA "slangy" "slangier";
lin slant_N = mkN "slant" "slants";
lin slant_V = mkV "slant" "slants" "slanted" "slanted" "slanting";
lin slant_V2 = mkV2 (mkV "slant" "slants" "slanted" "slanted" "slanting");
lin slantingly_Adv = mkAdv "slantingly";
lin slantwise_Adv = mkAdv "slantwise";
lin slap_Adv = mkAdv "slap";
lin slap_N = mkN "slap" "slaps";
lin slap_V2 = mkV2 (mkV "slap" "slaps" "slapped" "slapped" "slapping");
lin slap_bang_Adv = mkAdv "slap-bang";
lin slap_happy_A = compoundA (mkA "slap-happy");
lin slap_up_A = compoundA (mkA "slap-up");
lin slapdash_A = compoundA (mkA "slapdash");
lin slapdash_Adv = mkAdv "slapdash";
lin slapper_N = mkN "slapper" ;
lin slapshot_N = mkN "slapshot" ;
lin slapstick_A = mkA "slapstick" ;
lin slapstick_N = mkN "slapstick" ;
lin slash_N = mkN "slash" "slashes";
lin slash_V = mkV "slash" "slashes" "slashed" "slashed" "slashing";
lin slash_V2 = mkV2 (mkV "slash" "slashes" "slashed" "slashed" "slashing");
lin slasher_N = mkN "slasher" ;
lin slat_N = mkN "slat" "slats";
lin slate_N = mkN "slate" "slates";
lin slate_V2 = mkV2 (mkV "slate" "slates" "slated" "slated" "slating");
lin slate_V2V = mkV2V (mkV "slate") noPrep to_Prep ;
lin slate_club_N = mkN "slate-club" "slate-clubs";
lin slate_pencil_N = mkN "slate-pencil" "slate-pencils";
lin slating_N = mkN "slating" "slatings";
lin slatted_A = compoundA (mkA "slatted");
lin slattern_N = mkN "slattern" "slatterns";
lin slatternliness_N = mkN "slatternliness" ;
lin slatternly_A = compoundA (mkA "slatternly");
lin slaty_A = mkA "slaty" "slatier";
lin slaughter_N = mkN "slaughter" ;
lin slaughter_V2 = mkV2 (mkV "slaughter" "slaughters" "slaughtered" "slaughtered" "slaughtering");
lin slaughterer_N = mkN "slaughterer" "slaughterers";
lin slaughterhouse_N = mkN "slaughterhouse" "slaughterhouses";
lin slav_A = compoundA (mkA "slav");
lin slav_N = mkN "slav" "slavs";
lin slave_N = mkN "slave" "slaves";
lin slave_V = mkV "slave" "slaves" "slaved" "slaved" "slaving";
lin slave_driver_N = mkN "slave-driver" "slave-drivers";
lin slave_trade_N = mkN "slave-trade" ;
lin slave_traffic_N = mkN "slave-traffic" ;
lin slaveholder_N = mkN "slaveholder" ;
lin slaveholding_A = mkA "slaveholding" ;
lin slavelike_A = mkA "slavelike" ;
lin slaver_N = mkN "slaver" ;
lin slaver_V = mkV "slaver" "slavers" "slavered" "slavered" "slavering";
lin slavery_N = mkN "slavery" ;
lin slavey_N = mkN "slavey" "slaveys";
lin slavish_A = compoundA (mkA "slavish");
lin slavonic_A = compoundA (mkA "slavonic");
lin slaw_N = mkN "slaw" ;
lin slay_V2 = mkV2 (IrregEng.slay_V);
lin slayer_N = mkN "slayer" "slayers";
lin sleaford_PN = mkPN "Sleaford";
lin sleaziness_N = mkN "sleaziness" ;
lin sleazy_A = mkA "sleazy" "sleazier";
lin sled_N = mkN "sled" "sleds";
lin sledder_N = mkN "sledder" ;
lin sledding_N = mkN "sledding" ;
lin sledge_N = mkN "sledge" "sledges";
lin sledge_V = mkV "sledge" "sledges" "sledged" "sledged" "sledging";
lin sledge_V2 = mkV2 (mkV "sledge" "sledges" "sledged" "sledged" "sledging");
lin sledgehammer_N = mkN "sledgehammer" "sledgehammers";
lin sleek_A = mkA "sleek" "sleeker";
lin sleek_V2 = mkV2 (mkV "sleek" "sleeks" "sleeked" "sleeked" "sleeking");
lin sleekness_N = mkN "sleekness" ;
lin sleep_N = mkN "sleep" ;
lin sleep_V = IrregEng.sleep_V;
lin sleep_V2 = mkV2 (IrregEng.sleep_V);
lin sleeper_N = mkN "sleeper" "sleepers";
lin sleepiness_N = mkN "sleepiness" ;
lin sleeping_N = mkN "sleeping" ;
lin sleeping_bag_N = mkN "sleeping-bag" "sleeping-bags";
lin sleeping_car_N = mkN "sleeping-car" "sleeping-cars";
lin sleeping_draught_N = mkN "sleeping-draught" "sleeping-draughts";
lin sleeping_pill_N = mkN "sleeping-pill" "sleeping-pills";
lin sleeping_sickness_N = mkN "sleeping-sickness" ;
lin sleepless_A = compoundA (mkA "sleepless");
lin sleeplessness_N = mkN "sleeplessness" ;
lin sleepover_N = mkN "sleepover" ;
lin sleepwalker_N = mkN "sleepwalker" "sleepwalkers";
lin sleepwalking_N = mkN "sleepwalking" ;
lin sleepy_A = mkA "sleepy" "sleepier";
lin sleepy_head_N = mkN "sleepy-head" "sleepy-heads";
lin sleepyhead_N = mkN "sleepyhead" ;
lin sleet_N = mkN "sleet" ;
lin sleet_V = mkV "sleet" "sleets" "sleeted" "sleeted" "sleeting";
lin sleety_A = mkA "sleety" "sleetier";
lin sleeve_N = mkN "sleeve" "sleeves";
lin sleeved_A = compoundA (mkA "sleeved");
lin sleeveless_A = compoundA (mkA "sleeveless");
lin sleigh_N = mkN "sleigh" "sleighs";
lin sleigh_V = mkV "sleigh" "sleighs" "sleighed" "sleighed" "sleighing";
lin sleigh_V2 = mkV2 (mkV "sleigh" "sleighs" "sleighed" "sleighed" "sleighing");
lin sleigh_bell_N = mkN "sleigh-bell" "sleigh-bells";
lin sleight_N = mkN "sleight" "sleights";
lin slender_A = compoundA (mkA "slender");
lin slenderize_V = mkV "slenderize" "slenderizes" "slenderized" "slenderized" "slenderizing";
lin slenderize_V2 = mkV2 (mkV "slenderize" "slenderizes" "slenderized" "slenderized" "slenderizing");
lin slenderness_N = mkN "slenderness" ;
lin sleuth_N = mkN "sleuth" "sleuths";
lin sleuth_hound_N = mkN "sleuth-hound" "sleuth-hounds";
lin slew_V = mkV "slew" "slews" "slewed" "slewed" "slewing";
lin slew_V2 = mkV2 (mkV "slew" "slews" "slewed" "slewed" "slewing");
lin slice_N = mkN "slice" "slices";
lin slice_V = mkV "slice" "slices" "sliced" "sliced" "slicing";
lin slice_V2 = mkV2 (mkV "slice" "slices" "sliced" "sliced" "slicing");
lin slicer_N = mkN "slicer" ;
lin slicing_N = mkN "slicing" ;
lin slick_A = mkA "slick" "slicker";
lin slick_Adv = mkAdv "slick";
lin slick_N = mkN "slick" "slicks";
lin slicker_N = mkN "slicker" "slickers";
lin slickness_N = mkN "slickness" ;
lin slide_N = mkN "slide" "slides";
lin slide_V = IrregEng.slide_V;
lin slide_V2 = mkV2 (IrregEng.slide_V);
lin slide_rule_N = mkN "slide-rule" "slide-rules";
lin slider_N = mkN "slider" ;
lin slight_A = mkA "slight" "slighter";
lin slight_N = mkN "slight" "slights";
lin slight_V2 = mkV2 (mkV "slight" "slights" "slighted" "slighted" "slighting");
lin slightingly_Adv = mkAdv "slightingly";
lin slightness_N = mkN "slightness" ;
lin sligo_PN = mkPN "Sligo";
lin slim_A = mkA "slim" "slimmer";
lin slim_V = mkV "slim" "slims" "slimmed" "slimmed" "slimming";
lin slim_V2 = mkV2 (mkV "slim" "slims" "slimmed" "slimmed" "slimming");
lin slime_N = mkN "slime" ;
lin slimed_A = mkA "slimed" ;
lin sliminess_N = mkN "sliminess" ;
lin slimness_N = mkN "slimness" ;
lin slimy_A = mkA "slimy" "slimier";
lin sling_N = mkN "sling" "slings";
lin sling_V = IrregEng.sling_V;
lin sling_V2 = mkV2 (IrregEng.sling_V);
lin slingback_N = mkN "slingback" ;
lin slinger_N = mkN "slinger" "slingers";
lin slinging_N = mkN "slinging" ;
lin slingshot_N = mkN "slingshot" ;
lin slink_V = mkV "slink" "IRREG" "IRREG" "IRREG" "IRREG";
lin slip_N = mkN "slip" "slips";
lin slip_V = mkV "slip" "slips" "slipped" "slipped" "slipping";
lin slip_V2 = mkV2 (mkV "slip" "slips" "slipped" "slipped" "slipping");
lin slip_carriage_N = mkN "slip-carriage" "slip-carriages";
lin slip_coach_N = mkN "slip-coach" "slip-coaches";
lin slip_road_N = mkN "slip-road" "slip-roads";
lin slip_up_N = mkN "slip-up" "slip-ups";
lin slipcover_N = mkN "slipcover" "slipcovers";
lin slipknot_N = mkN "slipknot" "slipknots";
lin slipon_N = mkN "slipon" "slipons";
lin slipover_N = mkN "slipover" "slipovers";
lin slippage_N = mkN "slippage" ;
lin slipper_N = mkN "slipper" "slippers";
lin slippered_A = compoundA (mkA "slippered");
lin slipperiness_N = mkN "slipperiness" ;
lin slippery_A = mkA "slippery" "slipperier";
lin slippy_A = compoundA (mkA "slippy");
lin slipshod_A = compoundA (mkA "slipshod");
lin slipstream_N = mkN "slipstream" "slipstreams";
lin slipway_N = mkN "slipway" "slipways";
lin slit_N = mkN "slit" "slits";
lin slit_V2 = mkV2 (IrregEng.slit_V);
lin slither_V = mkV "slither" "slithers" "slithered" "slithered" "slithering";
lin slithery_A = compoundA (mkA "slithery");
lin sliver_N = mkN "sliver" "slivers";
lin sliver_V = mkV "sliver" "slivers" "slivered" "slivered" "slivering";
lin sliver_V2 = mkV2 (mkV "sliver" "slivers" "slivered" "slivered" "slivering");
lin slivovitz_N = mkN "slivovitz" ;
lin slob_N = mkN "slob" "slobs";
lin slobber_N = mkN "slobber" ;
lin slobber_V = mkV "slobber" "slobbers" "slobbered" "slobbered" "slobbering";
lin slobber_V2 = mkV2 (mkV "slobber" "slobbers" "slobbered" "slobbered" "slobbering");
lin sloe_N = mkN "sloe" "sloes";
lin sloe_gin_N = mkN "sloe-gin" ;
lin slog_V = mkV "slog" "slogs" "slogged" "slogged" "slogging";
lin slog_V2 = mkV2 (mkV "slog" "slogs" "slogged" "slogged" "slogging");
lin slogan_N = mkN "slogan" "slogans";
lin sloganeer_N = mkN "sloganeer" ;
lin sloganeering_N = mkN "sloganeering" ;
lin slogger_N = mkN "slogger" "sloggers";
lin sloop_N = mkN "sloop" "sloops";
lin slop_N = mkN "slop" "slops";
lin slop_V = mkV "slop" "slops" "slopped" "slopped" "slopping";
lin slop_V2 = mkV2 (mkV "slop" "slops" "slopped" "slopped" "slopping");
lin slop_basin_N = mkN "slop-basin" "slop-basins";
lin slop_pail_N = mkN "slop-pail" "slop-pails";
lin slop_shop_N = mkN "slop-shop" "slop-shops";
lin slope_N = mkN "slope" "slopes";
lin slope_V = mkV "slope" "slopes" "sloped" "sloped" "sloping";
lin slope_V2 = mkV2 (mkV "slope" "slopes" "sloped" "sloped" "sloping");
lin slopingly_Adv = mkAdv "slopingly";
lin sloppiness_N = mkN "sloppiness" ;
lin sloppy_A = mkA "sloppy" "sloppier";
lin slops_N = mkN "slops" ;
lin slopseller_N = mkN "slopseller" ;
lin slopshop_N = mkN "slopshop" ;
lin slosh_V = mkV "slosh" "sloshes" "sloshed" "sloshed" "sloshing";
lin slosh_V2 = mkV2 (mkV "slosh" "sloshes" "sloshed" "sloshed" "sloshing");
lin slot_N = mkN "slot" "slots";
lin slot_V2 = mkV2 (mkV "slot" "slots" "slotted" "slotted" "slotting");
lin slot_machine_N = mkN "slot-machine" "slot-machines";
lin sloth_N = mkN "sloth" "sloths";
lin slothful_A = compoundA (mkA "slothful");
lin slouch_N = mkN "slouch" "slouches";
lin slouch_V = mkV "slouch" "slouches" "slouched" "slouched" "slouching";
lin slouch_hat_N = mkN "slouch-hat" "slouch-hats";
lin sloucher_N = mkN "sloucher" ;
lin slouchingly_Adv = mkAdv "slouchingly";
lin slouchy_A = mkA "slouchy" ;
lin slough_N = mkN "slough" "sloughs";
lin slough_PN = mkPN "Slough";
lin slough_V = mkV "slough" "sloughs" "sloughed" "sloughed" "sloughing";
lin slough_V2 = mkV2 (mkV "slough" "sloughs" "sloughed" "sloughed" "sloughing");
lin slovak_N = mkN "slovak" ;
lin sloven_N = mkN "sloven" "slovens";
lin slovenian_A = compoundA (mkA "slovenian");
lin slovenian_N = mkN "slovenian" "slovenians";
lin slovenliness_N = mkN "slovenliness" ;
lin slovenly_A = mkA "slovenly" "slovenlier";
lin slow_A = mkA "slow" "slower";
lin slow_Adv = mkAdv "slow";
lin slow_V = mkV "slow" "slows" "slowed" "slowed" "slowing";
lin slow_V2 = mkV2 (mkV "slow" "slows" "slowed" "slowed" "slowing");
lin slow_worm_N = mkN "slow-worm" "slow-worms";
lin slowcoach_N = mkN "slowcoach" "slowcoaches";
lin slowdown_N = mkN "slowdown" "slowdowns";
lin slower_Adv = mkAdv "slower";
lin slowest_Adv = mkAdv "slowest";
lin slowgoing_A = mkA "slowgoing" ;
lin slowness_N = mkN "slowness" ;
lin slub_N = mkN "slub" ;
lin sludge_N = mkN "sludge" ;
lin slug_N = mkN "slug" "slugs";
lin slug_V = mkV "slug" "slugs" "slugged" "slugged" "slugging";
lin slug_V2 = mkV2 (mkV "slug" "slugs" "slugged" "slugged" "slugging");
lin sluggard_N = mkN "sluggard" "sluggards";
lin slugger_N = mkN "slugger" ;
lin sluggish_A = compoundA (mkA "sluggish");
lin sluggishness_N = mkN "sluggishness" ;
lin sluice_N = mkN "sluice" "sluices";
lin sluice_V = mkV "sluice" "sluices" "sluiced" "sluiced" "sluicing";
lin sluice_V2 = mkV2 (mkV "sluice" "sluices" "sluiced" "sluiced" "sluicing");
lin sluice_valve_N = mkN "sluice-valve" "sluice-valves";
lin sluicegate_N = mkN "sluicegate" "sluicegates";
lin slum_N = mkN "slum" "slums";
lin slum_V = mkV "slum" "slums" "slummed" "slummed" "slumming";
lin slumber_N = mkN "slumber" "slumbers";
lin slumber_V = mkV "slumber" "slumbers" "slumbered" "slumbered" "slumbering";
lin slumber_V2 = mkV2 (mkV "slumber" "slumbers" "slumbered" "slumbered" "slumbering");
lin slumberer_N = mkN "slumberer" "slumberers";
lin slumberous_A = compoundA (mkA "slumberous");
lin slumgullion_N = mkN "slumgullion" ;
lin slummy_A = mkA "slummy" "slummier";
lin slump_N = mkN "slump" "slumps";
lin slump_V = mkV "slump" "slumps" "slumped" "slumped" "slumping";
lin slump_V2 = mkV2 (mkV "slump" "slumps" "slumped" "slumped" "slumping");
lin slur_N = mkN "slur" "slurs";
lin slur_V = mkV "slur" "slurs" "slurred" "slurred" "slurring";
lin slur_V2 = mkV2 (mkV "slur" "slurs" "slurred" "slurred" "slurring");
lin slurry_N = mkN "slurry" ;
lin slush_N = mkN "slush" ;
lin slushy_A = mkA "slushy" "slushier";
lin slut_N = mkN "slut" "sluts";
lin sluttish_A = compoundA (mkA "sluttish");
lin sly_A = mkA "sly" "slyer";
lin slyness_N = mkN "slyness" ;
lin smack_Adv = mkAdv "smack";
lin smack_N = mkN "smack" "smacks";
lin smack_V = mkV "smack" "smacks" "smacked" "smacked" "smacking";
lin smack_V2 = mkV2 (mkV "smack" "smacks" "smacked" "smacked" "smacking");
lin smacker_N = mkN "smacker" "smackers";
lin smacking_N = mkN "smacking" "smackings";
lin small_A = mkA "small" "smaller";
lin small_Adv = mkAdv "small";
lin small_N = mkN "small" "smalls";
lin small_minded_A = compoundA (mkA "small-minded");
lin smaller_A = mkA "smaller" ;
lin smallholder_N = mkN "smallholder" "smallholders";
lin smallholding_N = mkN "smallholding" "smallholdings";
lin smallish_A = mkA "smallish" ;
lin smallmouth_N = mkN "smallmouth" ;
lin smallness_N = mkN "smallness" ;
lin smallpox_N = mkN "smallpox" ;
lin smalltime_A = compoundA (mkA "smalltime");
lin smaltite_N = mkN "smaltite" ;
lin smarmy_A = compoundA (mkA "smarmy");
lin smart_A = mkA "smart" "smarter";
lin smart_N = mkN "smart" ;
lin smart_V = mkV "smart" "smarts" "smarted" "smarted" "smarting";
lin smarta_N = mkN "smarta" ;
lin smarten_V = mkV "smarten" "smartens" "smartened" "smartened" "smartening";
lin smarten_V2 = mkV2 (mkV "smarten" "smartens" "smartened" "smartened" "smartening");
lin smartness_N = mkN "smartness" ;
lin smash_Adv = mkAdv "smash";
lin smash_N = mkN "smash" "smashes";
lin smash_V = mkV "smash" "smashes" "smashed" "smashed" "smashing";
lin smash_V2 = mkV2 (mkV "smash" "smashes" "smashed" "smashed" "smashing");
lin smash_up_N = mkN "smash-up" "smash-ups";
lin smasher_N = mkN "smasher" "smashers";
lin smashing_N = mkN "smashing" ;
lin smattering_N = mkN "smattering" "smatterings";
lin smear_N = mkN "smear" "smears";
lin smear_V = mkV "smear" "smears" "smeared" "smeared" "smearing";
lin smear_V2 = mkV2 (mkV "smear" "smears" "smeared" "smeared" "smearing");
lin smear_word_N = mkN "smear-word" "smear-words";
lin smegma_N = mkN "smegma" ;
lin smell_N = mkN "smell" "smells";
lin smell_V = mkV "smell" "smells" "smelled" "smelled" "smelling";
lin smell_V2 = mkV2 (mkV "smell" "smells" "smelled" "smelled" "smelling");
lin smell_VA = mkVA (mkV "smell" "smells" "smelled" "smelled" "smelling");
lin smelling_bottle_N = mkN "smelling-bottle" "smelling-bottles";
lin smelly_A = mkA "smelly" "smellier";
lin smelt_N = mkN "smelt" "smelts";
lin smelt_V2 = mkV2 (mkV "smelt" "smelts" "smelted" "smelted" "smelting");
lin smelter_N = mkN "smelter" ;
lin smew_N = mkN "smew" ;
lin smilax_N = mkN "smilax" ;
lin smile_N = mkN "smile" "smiles";
lin smile_V = mkV "smile" "smiles" "smiled" "smiled" "smiling";
lin smile_V2 = mkV2 (mkV "smile" "smiles" "smiled" "smiled" "smiling");
lin smiler_N = mkN "smiler" ;
lin smiley_N = mkN "smiley" ;
lin smilingly_Adv = mkAdv "smilingly";
lin smilo_N = mkN "smilo" ;
lin smirch_N = mkN "smirch" "smirches";
lin smirch_V2 = mkV2 (mkV "smirch" "smirches" "smirched" "smirched" "smirching");
lin smirk_N = mkN "smirk" "smirks";
lin smirk_V = mkV "smirk" "smirks" "smirked" "smirked" "smirking";
lin smirker_N = mkN "smirker" ;
lin smite_V = IrregEng.smite_V;
lin smite_V2 = mkV2 (IrregEng.smite_V);
lin smith_N = mkN "smith" "smiths";
lin smithereens_N = mkN "smithereens" ;
lin smithy_N = mkN "smithy" "smithies";
lin smock_N = mkN "smock" "smocks";
lin smocking_N = mkN "smocking";
lin smog_N = mkN "smog" "smogs";
lin smoggy_A = mkA "smoggy";
lin smoke_N = mkN "smoke" "smokes";
lin smoke_V = mkV "smoke" "smokes" "smoked" "smoked" "smoking";
lin smoke_V2 = mkV2 (mkV "smoke" "smokes" "smoked" "smoked" "smoking");
lin smoke_bomb_N = mkN "smoke-bomb" "smoke-bombs";
lin smoke_cured_A = compoundA (mkA "smoke-cured");
lin smoke_dried_A = compoundA (mkA "smoke-dried");
lin smoke_screen_N = mkN "smoke-screen" "smoke-screens";
lin smokehouse_N = mkN "smokehouse" ;
lin smokeless_A = compoundA (mkA "smokeless");
lin smoker_N = mkN "smoker" "smokers";
lin smokestack_N = mkN "smokestack" "smokestacks";
lin smoking_N = mkN "smoking" ;
lin smoking_N = mkN "smoking";
lin smoking_car_N = mkN "smoking-car" "smoking-cars";
lin smoking_carriage_N = mkN "smoking-carriage" "smoking-carriages";
lin smoking_compartment_N = mkN "smoking-compartment" "smoking-compartments";
lin smoking_mixture_N = mkN "smoking-mixture";
lin smoking_room_N = mkN "smoking-room" "smoking-rooms";
lin smoky_A = mkA "smoky" "smokier";
lin smoldering_A = mkA "smoldering";
lin smooth_A = mkA "smooth" "smoother";
lin smooth_N = mkN "smooth" "smooths";
lin smooth_V = mkV "smooth" "smooths" "smoothed" "smoothed" "smoothing";
lin smooth_V2 = mkV2 (mkV "smooth" "smooths" "smoothed" "smoothed" "smoothing");
lin smooth_bore_A = compoundA (mkA "smooth-bore");
lin smooth_faced_A = compoundA (mkA "smooth-faced");
lin smooth_spoken_A = compoundA (mkA "smooth-spoken");
lin smooth_tongued_A = compoundA (mkA "smooth-tongued");
lin smoothbark_N = mkN "smoothbark" ;
lin smoothbore_N = mkN "smoothbore" ;
lin smoothhound_N = mkN "smoothhound" ;
lin smoothie_N = mkN "smoothie" ;
lin smoothing_iron_N = mkN "smoothing-iron" "smoothing-irons";
lin smoothing_plane_N = mkN "smoothing-plane" "smoothing-planes";
lin smoothness_N = mkN "smoothness" ;
lin smorgasbord_N = mkN "smorgasbord" ;
lin smother_N = mkN "smother" "IRREG";
lin smother_V2 = mkV2 (mkV "smother" "smothers" "smothered" "smothered" "smothering");
lin smothering_A = mkA "smothering" ;
lin smoulder_N = mkN "smoulder" ;
lin smoulder_V = mkV "smoulder" "smoulders" "smouldered" "smouldered" "smouldering";
lin smudge_N = mkN "smudge" "smudges";
lin smudge_V = mkV "smudge" "smudges" "smudged" "smudged" "smudging";
lin smudge_V2 = mkV2 (mkV "smudge" "smudges" "smudged" "smudged" "smudging");
lin smudgy_A = compoundA (mkA "smudgy");
lin smug_A = mkA "smug" "smugger";
lin smuggle_V2 = mkV2 (mkV "smuggle" "smuggles" "smuggled" "smuggled" "smuggling");
lin smuggler_N = mkN "smuggler" "smugglers";
lin smuggling_N = mkN "smuggling" ;
lin smugness_N = mkN "smugness" ;
lin smut_N = mkN "smut" "smuts";
lin smut_V2 = mkV2 (mkV "smut" "smuts" "smutted" "smutted" "smutting");
lin smuttiness_N = mkN "smuttiness" ;
lin smutty_A = mkA "smutty" "smuttier";
lin snack_N = mkN "snack" "snacks";
lin snack_bar_N = mkN "snack-bar" "snack-bars";
lin snack_counter_N = mkN "snack-counter" "snack-counters";
lin snaffle_N = mkN "snaffle" "snaffles";
lin snaffle_V2 = mkV2 (mkV "snaffle" "snaffles" "snaffled" "snaffled" "snaffling");
lin snaffle_bit_N = mkN "snaffle-bit" "snaffle-bits";
lin snafu_N = mkN "snafu" ;
lin snag_N = mkN "snag" "snags";
lin snag_V = mkV "snag";
lin snag_V2 = mkV2 (mkV "snag" "snags" "snagged" "snagged" "snagging");
lin snail_N = mkN "snail" "snails";
lin snailfish_N = mkN "snailfish" ;
lin snailflower_N = mkN "snailflower" ;
lin snake_N = mkN "snake" "snakes";
lin snake_V = mkV "snake" "snakes" "snaked" "snaked" "snaking";
lin snake_charmer_N = mkN "snake-charmer" "snake-charmers";
lin snakebird_N = mkN "snakebird" ;
lin snakebite_N = mkN "snakebite" ;
lin snakeblenny_N = mkN "snakeblenny" ;
lin snakefly_N = mkN "snakefly" ;
lin snakewood_N = mkN "snakewood" ;
lin snaky_A = mkA "snaky" "snakier";
lin snap_N = mkN "snap" "snaps";
lin snap_V = mkV "snap" "snaps" "snapped" "snapped" "snapping";
lin snap_V2 = mkV2 (mkV "snap" "snaps" "snapped" "snapped" "snapping");
lin snap_VS = mkVS (mkV "snap" "snaps" "snapped" "snapped" "snapping");
lin snap_fastener_N = mkN "snap-fastener" "snap-fasteners";
lin snapdragon_N = mkN "snapdragon" "snapdragons";
lin snapper_N = mkN "snapper" ;
lin snappish_A = compoundA (mkA "snappish");
lin snappishness_N = mkN "snappishness" ;
lin snappy_A = mkA "snappy" "snappier";
lin snapshot_N = mkN "snapshot" "snapshots";
lin snare_N = mkN "snare" "snares";
lin snare_V2 = mkV2 (mkV "snare" "snares" "snared" "snared" "snaring");
lin snare_drum_N = mkN "snare-drum" "snare-drums";
lin snarer_N = mkN "snarer" ;
lin snarl_N = mkN "snarl" "snarls";
lin snarl_V = mkV "snarl" "snarls" "snarled" "snarled" "snarling";
lin snarl_V2 = mkV2 (mkV "snarl" "snarls" "snarled" "snarled" "snarling");
lin snarl_up_N = mkN "snarl-up" "snarl-ups";
lin snatch_N = mkN "snatch" "snatches";
lin snatch_V = mkV "snatch" "snatches" "snatched" "snatched" "snatching";
lin snatch_V2 = mkV2 (mkV "snatch" "snatches" "snatched" "snatched" "snatching");
lin snatcher_N = mkN "snatcher" "snatchers";
lin snazzy_A = compoundA (mkA "snazzy");
lin sneak_N = mkN "sneak" "sneaks";
lin sneak_V = mkV "sneak" "sneaks" "sneaked" "sneaked" "sneaking";
lin sneak_V2 = mkV2 (mkV "sneak" "sneaks" "sneaked" "sneaked" "sneaking");
lin sneak_thief_N = mkN "sneak-thief" "sneak-thieves";
lin sneakingly_Adv = mkAdv "sneakingly" ;
lin sneaky_A = mkA "sneaky" "sneakier";
lin sneer_N = mkN "sneer" "sneers";
lin sneer_V = mkV "sneer" "sneers" "sneered" "sneered" "sneering";
lin sneerer_N = mkN "sneerer" ;
lin sneeringly_Adv = mkAdv "sneeringly";
lin sneeze_N = mkN "sneeze" "sneezes";
lin sneeze_V = mkV "sneeze" "sneezes" "sneezed" "sneezed" "sneezing";
lin sneezer_N = mkN "sneezer" ;
lin sneezeweed_N = mkN "sneezeweed" ;
lin sneezy_A = mkA "sneezy" ;
lin snick_N = mkN "snick" "snicks";
lin snick_V = mkV "snick" "snicks" "snicked" "snicked" "snicking";
lin snick_V2 = mkV2 (mkV "snick" "snicks" "snicked" "snicked" "snicking");
lin snicker_N = mkN "snicker" "snickers";
lin snicker_V = mkV "snicker" "snickers" "snickered" "snickered" "snickering";
lin snide_A = compoundA (mkA "snide");
lin sniff_N = mkN "sniff" "sniffs";
lin sniff_V = mkV "sniff" "sniffs" "sniffed" "sniffed" "sniffing";
lin sniff_V2 = mkV2 (mkV "sniff" "sniffs" "sniffed" "sniffed" "sniffing");
lin sniff_VS = mkVS (mkV "sniff" "sniffs" "sniffed" "sniffed" "sniffing");
lin sniffer_N = mkN "sniffer" ;
lin sniffle_V = mkV "sniffle" "sniffles" "sniffled" "sniffled" "sniffling";
lin sniffler_N = mkN "sniffler" ;
lin sniffly_A = mkA "sniffly" ;
lin sniffy_A = mkA "sniffy" "sniffier";
lin snifter_N = mkN "snifter" "snifters";
lin snigger_N = mkN "snigger" "sniggers";
lin snigger_V = mkV "snigger" "sniggers" "sniggered" "sniggered" "sniggering";
lin snip_N = mkN "snip" "snips";
lin snip_V = mkV "snip" "snips" "snipped" "snipped" "snipping";
lin snip_V2 = mkV2 (mkV "snip" "snips" "snipped" "snipped" "snipping");
lin snipe_N = mkN "snipe" "snipe";
lin snipe_V = mkV "snipe" "snipes" "sniped" "sniped" "sniping";
lin snipe_V2 = mkV2 (mkV "snipe" "snipes" "sniped" "sniped" "sniping");
lin snipefish_N = mkN "snipefish" ;
lin sniper_N = mkN "sniper" "snipers";
lin snippet_N = mkN "snippet" "snippets";
lin snipping_N = mkN "snipping" "snippings";
lin snips_N = mkN "snips" ;
lin snit_N = mkN "snit" ;
lin snitch_V = mkV "snitch" "snitches" "snitched" "snitched" "snitching";
lin snitch_V2 = mkV2 (mkV "snitch" "snitches" "snitched" "snitched" "snitching");
lin snivel_N = mkN "snivel" ;
lin snivel_V = mkV "snivel" "snivels" "snivelled" "snivelled" "snivelling";
lin sniveller_N = mkN "sniveller" "snivellers";
lin snob_N = mkN "snob" "snobs";
lin snobbery_N = mkN "snobbery" ;
lin snobbish_A = compoundA (mkA "snobbish");
lin snobbishness_N = mkN "snobbishness" ;
lin snog_V = mkV "snog" "snogs" "snogged" "snogged" "snogging";
lin snogging_N = mkN "snogging" ;
lin snood_N = mkN "snood" "snoods";
lin snook_N = mkN "snook" "snooks";
lin snooker_N = mkN "snooker" "snookers";
lin snoop_N = mkN "snoop" ;
lin snoop_V = mkV "snoop" "snoops" "snooped" "snooped" "snooping";
lin snooper_N = mkN "snooper" "snoopers";
lin snootiness_N = mkN "snootiness" ;
lin snooty_A = mkA "snooty" "snootier";
lin snooze_N = mkN "snooze" "snoozes";
lin snooze_V = mkV "snooze" "snoozes" "snoozed" "snoozed" "snoozing";
lin snore_N = mkN "snore" "snores";
lin snore_V = mkV "snore" "snores" "snored" "snored" "snoring";
lin snorer_N = mkN "snorer" "snorers";
lin snorkel_N = mkN "snorkel" "snorkels";
lin snorkeling_N = mkN "snorkeling" ;
lin snort_N = mkN "snort" "snorts";
lin snort_V = mkV "snort" "snorts" "snorted" "snorted" "snorting";
lin snort_V2 = mkV2 (mkV "snort" "snorts" "snorted" "snorted" "snorting");
lin snort_VS = mkVS (mkV "snort" "snorts" "snorted" "snorted" "snorting");
lin snorter_N = mkN "snorter" "snorters";
lin snorty_A = mkA "snorty" "snortier";
lin snot_N = mkN "snot" ;
lin snot_nosed_A = compoundA (mkA "snot-nosed");
lin snotty_A = mkA "snotty" "snottier";
lin snout_N = mkN "snout" "snouts";
lin snow_N = mkN "snow" "snows";
lin snow_V = mkV "snow" "snows" "snowed" "snowed" "snowing";
lin snow_V2 = mkV2 (mkV "snow" "snows" "snowed" "snowed" "snowing");
lin snow_clad_A = compoundA (mkA "snow-clad");
lin snow_covered_A = compoundA (mkA "snow-covered");
lin snow_line_N = mkN "snow-line" "snow-lines";
lin snow_white_A = compoundA (mkA "snow-white");
lin snowball_N = mkN "snowball" "snowballs";
lin snowball_V = mkV "snowball" "snowballs" "snowballed" "snowballed" "snowballing";
lin snowball_V2 = mkV2 (mkV "snowball" "snowballs" "snowballed" "snowballed" "snowballing");
lin snowbank_N = mkN "snowbank" ;
lin snowbell_N = mkN "snowbell" ;
lin snowberry_N = mkN "snowberry" "snowberries";
lin snowblind_A = compoundA (mkA "snowblind");
lin snowblindness_N = mkN "snowblindness" ;
lin snowboard_N = mkN "snowboard" ;
lin snowboarder_N = mkN "snowboarder" ;
lin snowboarding_N = mkN "snowboarding" ;
lin snowbound_A = compoundA (mkA "snowbound");
lin snowcap_N = mkN "snowcap" ;
lin snowcapped_A = compoundA (mkA "snowcapped");
lin snowdrift_N = mkN "snowdrift" "snowdrifts";
lin snowdrop_N = mkN "snowdrop" "snowdrops";
lin snowfall_N = mkN "snowfall" "snowfalls";
lin snowfield_N = mkN "snowfield" "snowfields";
lin snowflake_N = mkN "snowflake" "snowflakes";
lin snowman_N = mkN masculine (mkN "snowman" "snowmen");
lin snowmobile_N = mkN "snowmobile" ;
lin snowplough_N = mkN "snowplough" "snowploughs";
lin snowplow_N = mkN "snowplow" ;
lin snowshoe_N = mkN "snowshoe" ;
lin snowstorm_N = mkN "snowstorm" "snowstorms";
lin snowsuit_N = mkN "snowsuit" ;
lin snowy_A = mkA "snowy" "snowier";
lin snr_PN = mkPN "Snr";
lin snub_A = compoundA (mkA "snub");
lin snub_N = mkN "snub" "snubs";
lin snub_V2 = mkV2 (mkV "snub" "snubs" "snubbed" "snubbed" "snubbing");
lin snub_nosed_A = compoundA (mkA "snub-nosed");
lin snuff_A = mkA "snuff" ;
lin snuff_N = mkN "snuff" "snuffs";
lin snuff_V = mkV "snuff" "snuffs" "snuffed" "snuffed" "snuffing";
lin snuff_V2 = mkV2 (mkV "snuff" "snuffs" "snuffed" "snuffed" "snuffing");
lin snuff_colour_A = compoundA (mkA "snuff-colour");
lin snuff_colour_N = mkN "snuff-colour" ;
lin snuff_coloured_A = compoundA (mkA "snuff-coloured");
lin snuffbox_N = mkN "snuffbox" "snuffboxes";
lin snuffer_N = mkN "snuffer" ;
lin snuffers_N = mkN "snuffers" ;
lin snuffle_N = mkN "snuffle" "snuffles";
lin snuffle_V = mkV "snuffle" "snuffles" "snuffled" "snuffled" "snuffling";
lin snuffler_N = mkN "snuffler" ;
lin snug_A = mkA "snug" "snugger";
lin snug_N = mkN "snug" "snugs";
lin snuggery_N = mkN "snuggery" "snuggeries";
lin snuggle_V = mkV "snuggle" "snuggles" "snuggled" "snuggled" "snuggling";
lin snuggle_V2 = mkV2 (mkV "snuggle" "snuggles" "snuggled" "snuggled" "snuggling");
lin snugness_N = mkN "snugness" ;
lin so_AdA = mkAdA "so";
lin so_Adv = mkAdv "so" ;
lin so_N = mkN "so" "si" {- FIXME: guessed plural form -};
lin so_PConj = {s="so"};
lin so_Subj = mkSubj "so";
lin so_and_so_N = mkN "so-and-so" "so-and-sos";
lin so_called_A = compoundA (mkA "so-called");
lin so_so_A = compoundA (mkA "so-so");
lin so_so_Adv = mkAdv "so-so";
lin soak_N = mkN "soak" "soaks";
lin soak_V = mkV "soak" "soaks" "soaked" "soaked" "soaking";
lin soak_V2 = mkV2 (mkV "soak" "soaks" "soaked" "soaked" "soaking");
lin soaker_N = mkN "soaker" "soakers";
lin soaking_Adv = mkAdv "soaking" ;
lin soap_N = mkN "soap" "soaps";
lin soap_V2 = mkV2 (mkV "soap" "soaps" "soaped" "soaped" "soaping");
lin soap_bubble_N = mkN "soap-bubble" "soap-bubbles";
lin soap_opera_N = mkN "soap-opera" "soap-operas";
lin soapberry_N = mkN "soapberry" ;
lin soapbox_N = mkN "soapbox" "soapboxes";
lin soapfish_N = mkN "soapfish" ;
lin soapiness_N = mkN "soapiness" ;
lin soapstone_N = mkN "soapstone" ;
lin soapsuds_N = mkN "soapsuds" ;
lin soapweed_N = mkN "soapweed" ;
lin soapwort_N = mkN "soapwort" ;
lin soapy_A = mkA "soapy" "soapier";
lin soar_N = mkN "soar" ;
lin soar_V = mkV "soar" "soars" "soared" "soared" "soaring";
lin soar_V2 = mkV2 (mkV "soar" "soars" "soared" "soared" "soaring");
lin sob_N = mkN "sob" "sobs";
lin sob_V = mkV "sob" "sobs" "sobbed" "sobbed" "sobbing";
lin sob_V2 = mkV2 (mkV "sob" "sobs" "sobbed" "sobbed" "sobbing");
lin sob_stuff_N = mkN "sob-stuff" ;
lin sobbingly_Adv = mkAdv "sobbingly";
lin sober_A = compoundA (mkA "sober");
lin sober_V = mkV "sober" "sobers" "sobered" "sobered" "sobering";
lin sober_V2 = mkV2 (mkV "sober" "sobers" "sobered" "sobered" "sobering");
lin sober_sides_N = mkN "sober-sides" "IRREG";
lin soberness_N = mkN "soberness" ;
lin sobersided_A = mkA "sobersided" ;
lin sobersides_N = mkN "sobersides" ;
lin sobralia_N = mkN "sobralia" ;
lin sobriety_N = mkN "sobriety" ;
lin sobriquet_N = mkN "sobriquet" "sobriquets";
lin soc_N = mkN "soc" ;
lin socage_N = mkN "socage" ;
lin soccer_N = mkN "soccer" ;
lin sociability_N = mkN "sociability" ;
lin sociable_A = compoundA (mkA "sociable");
lin sociable_N = mkN "sociable" ;
lin social_A = compoundA (mkA "social");
lin social_N = mkN "social" "socials";
lin social_work_N = mkN "social-work" ;
lin socialism_N = mkN "socialism" ;
lin socialist_A = compoundA (mkA "socialist");
lin socialist_N = mkN "socialist" "socialists";
lin socialistic_A = mkA "socialistic" ;
lin socialite_N = mkN "socialite" "socialites";
lin sociality_N = mkN "sociality" ;
lin socialization_N = mkN "socialization" "socializations";
lin socialize_V2 = mkV2 (mkV "socialize" "socializes" "socialized" "socialized" "socializing");
lin socializer_N = mkN "socializer" ;
lin society_N = mkN "society" "societies";
lin sociobiologic_A = mkA "sociobiologic" ;
lin sociobiologically_Adv = mkAdv "sociobiologically" ;
lin sociobiologist_N = mkN "sociobiologist" ;
lin sociobiology_N = mkN "sociobiology" ;
lin sociocultural_A = mkA "sociocultural" ;
lin socioeconomic_A = mkA "socioeconomic" ;
lin socioeconomically_Adv = mkAdv "socioeconomically" ;
lin sociolinguist_N = mkN "sociolinguist" ;
lin sociolinguistic_A = mkA "sociolinguistic" ;
lin sociolinguistically_Adv = mkAdv "sociolinguistically" ;
lin sociolinguistics_N = mkN "sociolinguistics" ;
lin sociological_A = compoundA (mkA "sociological");
lin sociologist_N = mkN "sociologist" "sociologists";
lin sociology_N = mkN "sociology" ;
lin sociometry_N = mkN "sociometry" ;
lin sociopath_N = mkN "sociopath" ;
lin sociopathic_A = mkA "sociopathic" ;
lin sock_Adv = mkAdv "sock";
lin sock_N = mkN "sock" "socks";
lin sock_V2 = mkV2 (mkV "sock" "socks" "socked" "socked" "socking");
lin socket_N = mkN "socket" "sockets";
lin sockeye_N = mkN "sockeye" ;
lin socle_N = mkN "socle" ;
lin socratic_A = compoundA (mkA "socratic");
lin sod_N = mkN "sod" "sods";
lin sod_V = mkV "sod" "sods" "sodded" "sodded" "sodding";
lin soda_N = mkN "soda" ;
lin soda_biscuit_N = mkN "soda-biscuit" "soda-biscuits";
lin soda_cracker_N = mkN "soda-cracker" "soda-crackers";
lin soda_fountain_N = mkN "soda-fountain" "soda-fountains";
lin soda_water_N = mkN "soda-water" "soda-waters";
lin sodalist_N = mkN "sodalist" ;
lin sodalite_N = mkN "sodalite" ;
lin sodden_A = compoundA (mkA "sodden");
lin sodium_N = mkN "sodium" ;
lin sodoku_N = mkN "sodoku" ;
lin sodom_N = mkN "sodom" ;
lin sodomite_N = mkN "sodomite" "sodomites";
lin sodomy_N = mkN "sodomy" ;
lin sofa_N = mkN "sofa" "sofas";
lin soffit_N = mkN "soffit" ;
lin sofia_PN = mkPN "Sofia";
lin soft_A = mkA "soft" "softer";
lin soft_boiled_A = compoundA (mkA "soft-boiled");
lin soft_footed_A = compoundA (mkA "soft-footed");
lin soft_headed_A = compoundA (mkA "soft-headed");
lin soft_hearted_A = compoundA (mkA "soft-hearted");
lin soft_pedal_V = mkV "soft-pedal" "soft-pedals" "soft-pedalled" "soft-pedalled" "soft-pedalling";
lin soft_pedal_V2 = mkV2 (mkV "soft-pedal" "soft-pedals" "soft-pedalled" "soft-pedalled" "soft-pedalling");
lin soft_soap_V2 = mkV2 (mkV "soft-soap" "soft-soaps" "soft-soaped" "soft-soaped" "soft-soaping");
lin soft_solder_N = mkN "soft-solder" ;
lin soft_solder_V2 = mkV2 (mkV "soft-solder" "soft-solders" "soft-soldered" "soft-soldered" "soft-soldering");
lin soft_spoken_A = compoundA (mkA "soft-spoken");
lin soft_witted_A = compoundA (mkA "soft-witted");
lin softball_N = mkN "softball" ;
lin soften_V = mkV "soften" "softens" "softened" "softened" "softening";
lin soften_V2 = mkV2 (mkV "soften" "softens" "softened" "softened" "softening");
lin softener_N = mkN "softener" "softeners";
lin softening_N = mkN "softening" ;
lin softhearted_A = mkA "softhearted" ;
lin softheartedness_N = mkN "softheartedness" ;
lin softie_N = mkN "softie" "softies";
lin softish_A = compoundA (mkA "softish");
lin softland_V = mkV "softland" "softlands" "softlanded" "softlanded" "softlanding";
lin softness_N = mkN "softness" ;
lin software_N = mkN "software" ;
lin softwood_N = mkN "softwood" "softwoods";
lin softy_N = mkN "softy" "softies";
lin sogginess_N = mkN "sogginess" ;
lin soggy_A = mkA "soggy" "soggier";
lin soh_N = mkN "soh" "IRREG";
lin soho_PN = mkPN "Soho";
lin soigne_A = compoundA (mkA "soigné");
lin soignee_A = compoundA (mkA "soignee");
lin soil_N = mkN "soil" "soils";
lin soil_V = mkV "soil" "soils" "soiled" "soiled" "soiling";
lin soil_V2 = mkV2 (mkV "soil" "soils" "soiled" "soiled" "soiling");
lin soil_pipe_N = mkN "soil-pipe" "soil-pipes";
lin soiling_N = mkN "soiling" ;
lin soiree_N = mkN "soirée" "soirées";
lin sojourn_N = mkN "sojourn" "sojourns";
lin sojourn_V = mkV "sojourn" "sojourns" "sojourned" "sojourned" "sojourning";
lin sojourner_N = mkN "sojourner" "sojourners";
lin sol_N = mkN "sol" ;
lin sol_PN = mkPN "Sol";
lin sol_fa_N = mkN "sol-fa" "sol-fae" {- FIXME: guessed plural form -};
lin solace_N = mkN "solace" "solaces";
lin solace_V2 = mkV2 (mkV "solace" "solaces" "solaced" "solaced" "solacing");
lin solan_N = mkN "solan" ;
lin solanaceous_A = mkA "solanaceous" ;
lin solar_A = compoundA (mkA "solar");
lin solar_plexus_N = mkN "solar plexus" "solar plexi" {- FIXME: guessed plural form -};
lin solarium_N = mkN "solarium" "solaria" {- FIXME: guessed plural form -};
lin solarization_N = mkN "solarization" ;
lin solder_N = mkN "solder" ;
lin solder_V2 = mkV2 (mkV "solder" "solders" "soldered" "soldered" "soldering");
lin solderer_N = mkN "solderer" ;
lin soldering_iron_N = mkN "soldering-iron" "soldering-irons";
lin soldier_N = mkN human (mkN "soldier" "soldiers");
lin soldier_V = mkV "soldier" "soldiers" "soldiered" "soldiered" "soldiering";
lin soldierfish_N = mkN "soldierfish" ;
lin soldiering_N = mkN "soldiering" ;
lin soldierly_A = mkA "soldierly" ;
lin soldiery_N = mkN "soldiery" "IRREG";
lin sole_A = compoundA (mkA "sole");
lin sole_N = mkN "sole" "soles";
lin sole_V2 = mkV2 (mkV "sole" "soles" "soled" "soled" "soling");
lin solecism_N = mkN "solecism" "solecisms";
lin soleless_A = mkA "soleless" ;
lin solemn_A = compoundA (mkA "solemn");
lin solemnity_N = mkN "solemnity" "solemnities";
lin solemnization_N = mkN "solemnization" ;
lin solemnize_V2 = mkV2 (mkV "solemnize" "solemnizes" "solemnized" "solemnized" "solemnizing");
lin solemnness_N = mkN "solemnness" ;
lin solenogaster_N = mkN "solenogaster" ;
lin solenoid_N = mkN "solenoid" ;
lin soleus_N = mkN "soleus" ;
lin solfege_N = mkN "solfege" ;
lin solferino_N = mkN "solferino" ;
lin solicit_V = mkV "solicit" "solicits" "solicited" "solicited" "soliciting";
lin solicit_V2 = mkV2 (mkV "solicit" "solicits" "solicited" "solicited" "soliciting");
lin solicitation_N = mkN "solicitation" "solicitations";
lin solicitorMasc_N = mkN masculine (mkN "solicitor" "solicitors");
lin solicitorFem_N = mkN feminine (mkN "solicitor" "solicitors");
lin solicitor_general_N = mkN "solicitor-general" "solicitor-generals";
lin solicitorship_N = mkN "solicitorship" ;
lin solicitous_A = compoundA (mkA "solicitous");
lin solicitude_N = mkN "solicitude" ;
lin solid_A = compoundA (mkA "solid");
lin solid_N = mkN "solid" "solids";
lin solid_state_A = compoundA (mkA "solid-state");
lin solidarity_N = mkN "solidarity" ;
lin solidification_N = mkN "solidification" "solidifications";
lin solidify_V = mkV "solidify" "solidifies" "solidified" "solidified" "solidifying";
lin solidify_V2 = mkV2 (mkV "solidify" "solidifies" "solidified" "solidified" "solidifying");
lin solidity_N = mkN "solidity" ;
lin solidness_N = mkN "solidness" ;
lin solidus_N = mkN "solidus" ;
lin solihull_PN = mkPN "Solihull";
lin soliloquize_V = mkV "soliloquize" "soliloquizes" "soliloquized" "soliloquized" "soliloquizing";
lin soliloquy_N = mkN "soliloquy" "soliloquies";
lin solingen_PN = mkPN "Solingen";
lin solipsism_N = mkN "solipsism" ;
lin solitaire_N = mkN "solitaire" "solitaires";
lin solitary_A = compoundA (mkA "solitary");
lin soliton_N = mkN "soliton" ;
lin solitude_N = mkN "solitude" "solitudes";
lin solleret_N = mkN "solleret" ;
lin solmization_N = mkN "solmization" ;
lin solo_A = compoundA (mkA "solo");
lin solo_N = mkN "solo" "solos";
lin soloist_N = mkN "soloist" "soloists";
lin solon_PN = mkPN "Solon";
lin solstice_N = mkN "solstice" "solstices";
lin solubility_N = mkN "solubility" ;
lin soluble_A = compoundA (mkA "soluble");
lin solute_N = mkN "solute" ;
lin solution_N = mkN "solution" "solutions";
lin solvability_N = mkN "solvability" ;
lin solvable_A = compoundA (mkA "solvable");
lin solvate_N = mkN "solvate" ;
lin solvation_N = mkN "solvation" ;
lin solve_V2 = mkV2 (mkV "solve" "solves" "solved" "solved" "solving");
lin solvency_N = mkN "solvency" ;
lin solvent_A = compoundA (mkA "solvent");
lin solvent_N = mkN "solvent" "solvents";
lin som_N = mkN "som" ;
lin soma_N = mkN "soma" ;
lin somali_A = compoundA (mkA "Somali");
lin somaliMasc_N = mkN masculine (mkN "Somali" "Somalis");
lin somaliFem_N = mkN feminine (mkN "Somali" "Somalis");
lin somalia_PN = mkPN "Somalia";
lin somalian_A = compoundA (mkA "Somalian");
lin somalianMasc_N = mkN masculine (mkN "Somalian" "Somalians");
lin somalianFem_N = mkN feminine (mkN "Somalian" "Somalians");
lin soman_N = mkN "soman" ;
lin somatic_A = compoundA (mkA "somatic");
lin somatogenic_A = mkA "somatogenic" ;
lin somatosense_N = mkN "somatosense" ;
lin somatosensory_A = mkA "somatosensory" ;
lin somatotropin_N = mkN "somatotropin" ;
lin somber_A = mkA "somber" ;
lin sombre_A = compoundA (mkA "sombre");
lin sombreness_N = mkN "sombreness" ;
lin sombrero_N = mkN "sombrero" "sombreros";
lin some_A = mkA "some" ;
lin some_Quant = mkQuant "some" "some";
lin somebody_NP = mkNP "somebody" "somebody" "somebody's" Sg P3 human;
lin someday_Adv = mkAdv "someday";
lin somehow_AdV = mkAdV "somehow";
lin somehow_Adv = mkAdv "somehow";
lin someone_NP = mkNP "someone" "someone" "someone's" Sg P3 human;
lin someplace_Adv = mkAdv "someplace";
lin somercotes_PN = mkPN "Somercotes";
lin somersault_N = mkN "somersault" "somersaults";
lin somersault_V = mkV "somersault" "somersaults" "somersaulted" "somersaulted" "somersaulting";
lin somerset_PN = mkPN "Somerset";
lin somesthesia_N = mkN "somesthesia" ;
lin something_NP = regNP "something" singular ;
lin sometime_Adv = mkAdv "sometime";
lin sometimes_Adv = mkAdv "sometimes";
lin someway_Adv = mkAdv "someway";
lin somewhat_Adv = mkAdv "somewhat";
lin somewhere_Adv = mkAdv "somewhere";
lin somewhere_N = mkN "somewhere" ;
lin sommelier_N = mkN "sommelier" ;
lin somnambulism_N = mkN "somnambulism" ;
lin somnambulist_N = mkN "somnambulist" "somnambulists";
lin somniloquist_N = mkN "somniloquist" ;
lin somnolence_N = mkN "somnolence" ;
lin somnolent_A = compoundA (mkA "somnolent");
lin son_N = mkN "son" "sons";
lin son_in_law_N = mkN "son-in-law" "sons-in-law";
lin sonant_N = mkN "sonant" ;
lin sonar_N = mkN "sonar" "sonars";
lin sonata_N = mkN "sonata" "sonatas";
lin sonatina_N = mkN "sonatina" ;
lin sone_N = mkN "sone" ;
lin song_N = mkN "song" "songs";
lin songbird_N = mkN "songbird" "songbirds";
lin songbook_N = mkN "songbook" "songbooks";
lin songster_N = mkN "songster" "songsters";
lin songstress_N = mkN "songstress" "songstresses";
lin songwriter_N = mkN "songwriter" ;
lin sonia_PN = mkPN "Sonia";
lin sonic_A = compoundA (mkA "sonic");
lin sonnet_N = mkN "sonnet" "sonnets";
lin sonneteer_N = mkN "sonneteer" "sonneteers";
lin sonny_N = mkN "sonny" "sonnies";
lin sonogram_N = mkN "sonogram" ;
lin sonograph_N = mkN "sonograph" ;
lin sonography_N = mkN "sonography" ;
lin sonority_N = mkN "sonority" "sonorities";
lin sonorous_A = compoundA (mkA "sonorous");
lin sonsy_A = compoundA (mkA "sonsy");
lin soochow_PN = mkPN "Soochow";
lin soon_AdV = mkAdV "soon";
lin soon_Adv = mkAdv "soon";
lin sooner_Adv = mkAdv "sooner";
lin soonest_Adv = mkAdv "soonest";
lin soot_N = mkN "soot" ;
lin soot_V2 = mkV2 (mkV "soot" "soots" "sooted" "sooted" "sooting");
lin sooth_N = mkN "sooth" "sooths";
lin soothe_V2 = mkV2 (mkV "soothe" "soothes" "soothed" "soothed" "soothing");
lin soothing_A = mkA "soothing" ;
lin soothsayer_N = mkN "soothsayer" "soothsayers";
lin sooty_A = mkA "sooty" "sootier";
lin sop_N = mkN "sop" "sops";
lin sop_V2 = mkV2 (mkV "sop" "sops" "sopped" "sopped" "sopping");
lin sophia_PN = mkPN "Sophia";
lin sophie_PN = mkPN "Sophie";
lin sophism_N = mkN "sophism" "sophisms";
lin sophistMasc_N = mkN masculine (mkN "sophist" "sophists");
lin sophistFem_N = mkN feminine (mkN "sophist" "sophists");
lin sophistic_A = mkA "sophistic" ;
lin sophisticate_N = mkN "sophisticate" ;
lin sophisticated_A = compoundA (mkA "sophisticated");
lin sophistication_N = mkN "sophistication" ;
lin sophistry_N = mkN "sophistry" "sophistries";
lin sophomore_N = mkN "sophomore" "sophomores";
lin soporific_A = compoundA (mkA "soporific");
lin soporific_N = mkN "soporific" "soporifics";
lin sopping_A = compoundA (mkA "sopping");
lin sopping_Adv = mkAdv "sopping";
lin soppy_A = mkA "soppy" "soppier";
lin sopranino_A = mkA "sopranino" ;
lin soprano_A = mkA "soprano" ;
lin soprano_N = mkN "soprano" "sopranos";
lin sorb_N = mkN "sorb" ;
lin sorbate_N = mkN "sorbate" ;
lin sorbent_N = mkN "sorbent" ;
lin sorbet_N = mkN "sorbet" "sorbets";
lin sorcerer_N = mkN masculine (mkN "sorcerer" "sorcerers");
lin sorceress_N = mkN feminine (mkN "sorceress" "sorceresses");
lin sorcery_N = mkN "sorcery" "sorceries";
lin sordid_A = compoundA (mkA "sordid");
lin sordidness_N = mkN "sordidness" ;
lin sore_A = compoundA (mkA "sore");
lin sore_N = mkN "sore" "sores";
lin sorehead_N = mkN "sorehead" ;
lin soreness_N = mkN "soreness" ;
lin sorghum_N = mkN "sorghum" ;
lin sorgo_N = mkN "sorgo" ;
lin sorority_N = mkN "sorority" "sororities";
lin sorption_N = mkN "sorption" ;
lin sorrel_A = compoundA (mkA "sorrel");
lin sorrel_N = mkN "sorrel" "sorrels";
lin sorrow_N = mkN "sorrow" "sorrows";
lin sorrow_V = mkV "sorrow" "sorrows" "sorrowed" "sorrowed" "sorrowing";
lin sorrowful_A = compoundA (mkA "sorrowful");
lin sorry_A = mkA "sorry" "sorrier";
lin sorry_Interj = ss "sorry";
lin sort_N = mkN "sort" "sorts";
lin sort_V = mkV "sort" "sorts" "sorted" "sorted" "sorting";
lin sort_V2 = mkV2 (mkV "sort" "sorts" "sorted" "sorted" "sorting");
lin sorter_N = mkN "sorter" "sorters";
lin sortie_N = mkN "sortie" "sorties";
lin sorting_N = mkN "sorting" ;
lin sorus_N = mkN "sorus" ;
lin sos_N = mkN "sos" "soss" ;
lin sot_N = mkN "sot" "sots";
lin soteriological_A = mkA "soteriological" ;
lin soteriology_N = mkN "soteriology" ;
lin sotho_A = compoundA (mkA "sotho");
lin sotho_N = mkN "sotho" "sothos";
lin sottish_A = compoundA (mkA "sottish");
lin sottishness_N = mkN "sottishness" ;
lin sotto_voce_Adv = mkAdv "sotto voce";
lin sou'_east_Adv = mkAdv "sou'-east";
lin sou'_east_N = mkN "sou'-east" ;
lin sou'_sou'_east_Adv = mkAdv "sou'-sou'-east";
lin sou'_sou'_east_N = mkN "sou'-sou'-east" ;
lin sou'_sou'_west_Adv = mkAdv "sou'-sou'-west";
lin sou'_sou'_west_N = mkN "sou'-sou'-west" ;
lin sou'_west_Adv = mkAdv "sou'-west";
lin sou'_west_N = mkN "sou'-west" ;
lin sou'_wester_N = mkN "sou'-wester" "sou'-westers";
lin sou_N = mkN "sou" "sous";
lin souari_N = mkN "souari" ;
lin soubrette_N = mkN "soubrette" "soubrettes";
lin soubriquet_N = mkN "soubriquet" "soubriquets";
lin souchong_N = mkN "souchong" ;
lin souffle_N = mkN "soufflé" "soufflés";
lin sough_V = mkV "sough" "soughs" "soughed" "soughed" "soughing";
lin soughingly_Adv = mkAdv "soughingly" ;
lin souk_N = mkN "souk" ;
lin soul_N = mkN "soul" "souls";
lin soul_destroying_A = compoundA (mkA "soul-destroying");
lin soul_stirring_A = compoundA (mkA "soul-stirring");
lin soulful_A = compoundA (mkA "soulful");
lin soulless_A = compoundA (mkA "soulless");
lin sound_A = compoundA (mkA "sound");
lin sound_Adv = mkAdv "sound";
lin sound_N = mkN "sound" "sounds";
lin sound_V = mkV "sound" "sounds" "sounded" "sounded" "sounding";
lin sound_V2 = mkV2 (mkV "sound" "sounds" "sounded" "sounded" "sounding");
lin sound_VA = mkVA (mkV "sound" "sounds" "sounded" "sounded" "sounding");
lin sound_VS = mkVS (mkV "sound" "sounds" "sounded" "sounded" "sounding");
lin sound_film_N = mkN "sound-film" "sound-films";
lin sound_recording_N = mkN "sound-recording" "sound-recordings";
lin sound_wave_N = mkN "sound-wave" "sound-waves";
lin soundbox_N = mkN "soundbox" "soundboxes";
lin sounder_N = mkN "sounder" ;
lin sounding_N = mkN "sounding" ;
lin sounding_board_N = mkN "sounding-board" "sounding-boards";
lin soundless_A = compoundA (mkA "soundless");
lin soundman_N = mkN masculine (mkN "soundman" "soundmen");
lin soundness_N = mkN "soundness" ;
lin soundproof_A = compoundA (mkA "soundproof");
lin soundproof_V2 = mkV2 (mkV "soundproof" "soundproofs" "soundproofed" "soundproofed" "soundproofing");
lin soundtrack_N = mkN "soundtrack" "soundtracks";
lin soup_N = mkN "soup" "soups";
lin soup_V2 = mkV2 (mkV "soup" "soups" "souped" "souped" "souping");
lin soup_kitchen_N = mkN "soup-kitchen" "soup-kitchens";
lin soupcon_N = mkN "soupçon" "soupçons";
lin soupspoon_N = mkN "soupspoon" ;
lin soupy_A = mkA "soupy" ;
lin sour_A = compoundA (mkA "sour");
lin sour_N = mkN "sour" ;
lin sour_V = mkV "sour" "sours" "soured" "soured" "souring";
lin sour_V2 = mkV2 (mkV "sour" "sours" "soured" "soured" "souring");
lin sourball_N = mkN "sourball" ;
lin source_N = mkN "source" "sources";
lin sourdine_N = mkN "sourdine" ;
lin sourdough_N = mkN "sourdough" ;
lin souring_N = mkN "souring" ;
lin sourness_N = mkN "sourness" ;
lin sourpuss_N = mkN "sourpuss" ;
lin soursop_N = mkN "soursop" ;
lin souse_N = mkN "souse" ;
lin souse_V2 = mkV2 (mkV "souse" "souses" "soused" "soused" "sousing");
lin soutache_N = mkN "soutache" ;
lin soutane_N = mkN "soutane" "soutanes";
lin south_A = mkA "South";
lin south_Adv = mkAdv "South";
lin south_N = mkN "South" ;
lin south_kirkby_PN = mkPN "South Kirkby";
lin south_normantown_PN = mkPN "South Normantown";
lin south_ockendon_PN = mkPN "South Ockendon";
lin south_shields_PN = mkPN "South Shields";
lin south_southeast_Adv = mkAdv "south-southeast";
lin south_southeast_N = mkN "south-southeast" ;
lin south_southwest_Adv = mkAdv "south-southwest";
lin south_southwest_N = mkN "south-southwest" ;
lin southampton_PN = mkPN "Southampton";
lin southbound_A = mkA "southbound" ;
lin southeast_A = mkA "southeast" ;
lin southeast_Adv = mkAdv "southeast";
lin southeast_N = mkN "southeast" ;
lin southeaster_N = mkN "southeaster" "southeasters";
lin southeasterly_A = compoundA (mkA "southeasterly");
lin southeastern_A = compoundA (mkA "southeastern");
lin southeastward_A = mkA "southeastward" ;
lin southeastward_Adv = mkAdv "southeastward" ;
lin southend_on_sea_PN = mkPN "Southend-on-sea";
lin southerly_A = compoundA (mkA "southerly");
lin southerly_Adv = mkAdv "southerly";
lin southern_A = compoundA (mkA "Southern");
lin southerner_N = mkN "southerner" "southerners";
lin southernism_N = mkN "southernism" ;
lin southernmost_A = compoundA (mkA "southernmost");
lin southernness_N = mkN "southernness" ;
lin southernwood_N = mkN "southernwood" ;
lin southland_N = mkN "southland" ;
lin southpaw_N = mkN "southpaw" "southpaws";
lin southport_PN = mkPN "Southport";
lin southward_Adv = mkAdv "southward";
lin southwards_Adv = mkAdv "southwards";
lin southwark_PN = mkPN "Southwark";
lin southwest_A = mkA "southwest" ;
lin southwest_Adv = mkAdv "southwest";
lin southwest_N = mkN "southwest" ;
lin southwester_N = mkN "southwester" "southwesters";
lin southwesterly_A = compoundA (mkA "southwesterly");
lin southwestern_A = compoundA (mkA "southwestern");
lin southwestward_A = mkA "southwestward" ;
lin southwestward_Adv = mkAdv "southwestward" ;
lin souvenir_N = mkN "souvenir" "souvenirs";
lin souvlaki_N = mkN "souvlaki" ;
lin souwester_N = mkN "sou'wester" ;
lin sovereign_A = compoundA (mkA "sovereign");
lin sovereign_N = mkN "sovereign" "sovereigns";
lin sovereignty_N = mkN "sovereignty" ;
lin soviet_A = compoundA (mkA "Soviet");
lin soviet_N = mkN "Soviet" "Soviets";
lin sovietize_V2 = mkV2 (mkV "sovietize" "sovietizes" "sovietized" "sovietized" "sovietizing");
lin sow_N = mkN "sow" "sows";
lin sow_V = mkV "sow" "sows" "sowed" "sowed" "sowing";
lin sow_V2 = mkV2 (mkV "sow" "sows" "sowed" "sowed" "sowing");
lin sowbane_N = mkN "sowbane" ;
lin sowbelly_N = mkN "sowbelly" ;
lin sowbread_N = mkN "sowbread" ;
lin sower_N = mkN "sower" "sowers";
lin soy_N = mkN "soy" ;
lin soya_N = mkN "soya" ;
lin sozzled_A = compoundA (mkA "sozzled");
lin spa_N = mkN "spa" "spas";
lin space_N = mkN "space" "spaces";
lin space_V2 = mkV2 (mkV "space" "spaces" "spaced" "spaced" "spacing");
lin space_bar_N = mkN "space-bar" "space-bars";
lin space_capsule_N = mkN "space-capsule" "space-capsules";
lin space_heater_N = mkN "space-heater" "space-heaters";
lin space_helmet_N = mkN "space-helmet" "space-helmets";
lin space_rocket_N = mkN "space-rocket" "space-rockets";
lin space_time_N = mkN "space-time" ;
lin space_vehicle_N = mkN "space-vehicle" "space-vehicles";
lin spacecraft_N = mkN "spacecraft" "spacecraft";
lin spaceflight_N = mkN "spaceflight" ;
lin spaceship_N = mkN "spaceship" "spaceships";
lin spacesuit_N = mkN "spacesuit" "spacesuits";
lin spacewalker_N = mkN "spacewalker" ;
lin spaceward_Adv = mkAdv "spaceward" ;
lin spacing_N = mkN "spacing" "spacings";
lin spacious_A = compoundA (mkA "spacious");
lin spaciousness_N = mkN "spaciousness" ;
lin spackle_N = mkN "spackle" ;
lin spade_N = mkN "spade" "spades";
lin spade_V2 = mkV2 (mkV "spade" "spades" "spaded" "spaded" "spading");
lin spadefish_N = mkN "spadefish" ;
lin spadefoot_N = mkN "spadefoot" ;
lin spadeful_N = mkN "spadeful" "spadefuls";
lin spadework_N = mkN "spadework" ;
lin spadix_N = mkN "spadix" ;
lin spaghetti_N = mkN "spaghetti" ;
lin spaghettini_N = mkN "spaghettini" ;
lin spain_PN = mkPN "Spain";
lin spalding_PN = mkPN "Spalding";
lin spall_N = mkN "spall" ;
lin spallation_N = mkN "spallation" ;
lin spam_N = mkN "spam" ;
lin spammer_N = mkN "spammer" ;
lin span_N = mkN "span" "spans";
lin span_V2 = mkV2 (mkV "span" "spans" "spanned" "spanned" "spanning");
lin spandex_N = mkN "spandex" ;
lin spandrel_N = mkN "spandrel" ;
lin spangle_N = mkN "spangle" "spangles";
lin spangle_V2 = mkV2 (mkV "spangle" "spangles" "spangled" "spangled" "spangling");
lin spaniard_N = mkN "spaniard" "spaniards";
lin spaniel_N = mkN "spaniel" "spaniels";
lin spanish_A = compoundA (mkA "Spanish");
lin spanishMasc_N = mkN masculine (mkN "Spanish");
lin spanishFem_N = mkN feminine (mkN "Spanish");
lin spank_N = mkN "spank" ;
lin spank_V = mkV "spank" "spanks" "spanked" "spanked" "spanking";
lin spank_V2 = mkV2 (mkV "spank" "spanks" "spanked" "spanked" "spanking");
lin spanker_N = mkN "spanker" ;
lin spanking_A = compoundA (mkA "spanking");
lin spanking_N = mkN "spanking" "spankings";
lin spanner_N = mkN "spanner" "spanners";
lin spar_N = mkN "spar" "spars";
lin spar_V = mkV "spar" "spars" "sparred" "sparred" "sparring";
lin spare_A = compoundA (mkA "spare");
lin spare_N = mkN "spare" "spares";
lin spare_V = mkV "spare" "spares" "spared" "spared" "sparing";
lin spare_V2 = mkV2 (mkV "spare" "spares" "spared" "spared" "sparing");
lin spare_rib_N = mkN "spare-rib" "spare-ribs";
lin spareness_N = mkN "spareness" ;
lin sparer_N = mkN "sparer" ;
lin sparerib_N = mkN "sparerib" ;
lin spareribs_N = mkN "spareribs" ;
lin sparid_N = mkN "sparid" ;
lin sparing_A = mkA "sparing" ;
lin spark_N = mkN "spark" "sparks";
lin spark_V = mkV "spark" "sparks" "sparked" "sparked" "sparking";
lin spark_V2 = mkV2 (mkV "spark" "sparks" "sparked" "sparked" "sparking");
lin spark_plug_N = mkN "spark-plug" "spark-plugs";
lin sparking_plug_N = mkN "sparking-plug" "sparking-plugs";
lin sparkle_N = mkN "sparkle" "sparkles";
lin sparkle_V = mkV "sparkle" "sparkles" "sparkled" "sparkled" "sparkling";
lin sparkler_N = mkN "sparkler" "sparklers";
lin sparling_N = mkN "sparling" ;
lin sparring_N = mkN "sparring" ;
lin sparring_match_N = mkN "sparring-match" "sparring-matches";
lin sparring_partner_N = mkN "sparring-partner" "sparring-partners";
lin sparrow_N = mkN "sparrow" "sparrows";
lin sparse_A = mkA "sparse" "sparser";
lin sparseness_N = mkN "sparseness" ;
lin sparsity_N = mkN "sparsity" ;
lin spartan_A = compoundA (mkA "spartan");
lin spartanMasc_N = mkN masculine (mkN "spartan" "spartans");
lin spartanFem_N = mkN feminine (mkN "spartan" "spartans");
lin spasm_N = mkN "spasm" "spasms";
lin spasmodic_A = compoundA (mkA "spasmodic");
lin spasmodically_Adv = mkAdv "spasmodically";
lin spasmolysis_N = mkN "spasmolysis" ;
lin spastic_A = compoundA (mkA "spastic");
lin spastic_N = mkN "spastic" "spastics";
lin spasticity_N = mkN "spasticity" ;
lin spat_N = mkN "spat" "spats";
lin spat_V = mkV "spat" "spats" "spatted" "spatted" "spatting";
lin spat_V2 = mkV2 (mkV "spat" "spats" "spatted" "spatted" "spatting");
lin spatchcock_N = mkN "spatchcock" "spatchcocks";
lin spatchcock_V2 = mkV2 (mkV "spatchcock" "spatchcocks" "spatchcocked" "spatchcocked" "spatchcocking");
lin spate_N = mkN "spate" "spates";
lin spathe_N = mkN "spathe" ;
lin spathiphyllum_N = mkN "spathiphyllum" ;
lin spatial_A = compoundA (mkA "spatial");
lin spatiotemporal_A = mkA "spatiotemporal" ;
lin spatter_N = mkN "spatter" "spatters";
lin spatter_V = mkV "spatter" "spatters" "spattered" "spattered" "spattering";
lin spatter_V2 = mkV2 (mkV "spatter" "spatters" "spattered" "spattered" "spattering");
lin spatterdock_N = mkN "spatterdock" ;
lin spatula_N = mkN "spatula" "spatulas";
lin spatulate_A = mkA "spatulate" ;
lin spavin_N = mkN "spavin" ;
lin spavined_A = compoundA (mkA "spavined");
lin spawn_N = mkN "spawn" ;
lin spawn_V = mkV "spawn" "spawns" "spawned" "spawned" "spawning";
lin spawn_V2 = mkV2 (mkV "spawn" "spawns" "spawned" "spawned" "spawning");
lin spawner_N = mkN "spawner" ;
lin spay_V2 = mkV2 (mkV "spay" "spays" "spayed" "spayed" "spaying");
lin spaying_N = mkN "spaying" ;
lin speak_V = IrregEng.speak_V;
lin speak_V2 = mkV2 (IrregEng.speak_V);
lin speakable_A = mkA "speakable" ;
lin speakeasy_N = mkN "speakeasy" ;
lin speaker_N = mkN "speaker" "speakers";
lin speakerphone_N = mkN "speakerphone" ;
lin speakership_N = mkN "speakership" "speakerships";
lin speaking_N = mkN "speaking" ;
lin speaking_trumpet_N = mkN "speaking-trumpet" "speaking-trumpets";
lin speaking_tube_N = mkN "speaking-tube" "speaking-tubes";
lin spear_N = mkN "spear" "spears";
lin spear_V2 = mkV2 (mkV "spear" "spears" "speared" "speared" "spearing");
lin spearfish_N = mkN "spearfish" ;
lin spearhead_N = mkN "spearhead" "spearheads";
lin spearhead_V2 = mkV2 (mkV "spearhead");
lin spearmint_N = mkN "spearmint" ;
lin spec_N = mkN "spec" "specs";
lin special_A = compoundA (mkA "special");
lin special_N = mkN "special" "specials";
lin specialism_N = mkN "specialism" "specialisms";
lin specialist_N = mkN "specialist" "specialists";
lin specialistic_A = mkA "specialistic" ;
lin speciality_N = mkN "speciality" "specialities";
lin specialization_N = mkN "specialization" "specializations";
lin specialize_V = mkV "specialize" "specializes" "specialized" "specialized" "specializing";
lin specialize_V2 = mkV2 (mkV "specialize" "specializes" "specialized" "specialized" "specializing");
lin specialty_N = mkN "specialty" "specialties";
lin speciation_N = mkN "speciation" ;
lin specie_N = mkN "specie" ;
lin species_N = mkN "species" "species";
lin specifiable_A = compoundA (mkA "specifiable");
lin specific_A = irregAdv (compoundA (mkA "specific")) "specifically";
lin specific_N = mkN "specific" "specifics";
lin specification_N = mkN "specification" "specifications";
lin specificity_N = mkN "specificity" ;
lin specifier_N = mkN "specifier" ;
lin specify_V = mkV "specify";
lin specify_V2 = mkV2 (mkV "specify" "specifies" "specified" "specified" "specifying");
lin specify_VS = mkVS (mkV "specify");
lin specimen_N = mkN "specimen" "specimens";
lin specious_A = compoundA (mkA "specious");
lin speciousness_N = mkN "speciousness" ;
lin speck_N = mkN "speck" "specks";
lin specked_A = compoundA (mkA "specked");
lin speckle_N = mkN "speckle" "speckles";
lin speckled_A = compoundA (mkA "speckled");
lin speckless_A = compoundA (mkA "speckless");
lin spectacle_N = mkN "spectacle" "spectacles";
lin spectacled_A = compoundA (mkA "spectacled");
lin spectacles_N = mkN "spectacles" ;
lin spectacular_A = compoundA (mkA "spectacular");
lin spectacular_N = mkN "spectacular" "spectaculars";
lin spectatorMasc_N = mkN masculine (mkN "spectator" "spectators");
lin spectatorFem_N = mkN feminine (mkN "spectator" "spectators");
lin spectinomycin_N = mkN "spectinomycin" ;
lin spectral_A = compoundA (mkA "spectral");
lin spectre_N = mkN "spectre" "spectres";
lin spectrogram_N = mkN "spectrogram" ;
lin spectrograph_N = mkN "spectrograph" ;
lin spectrographic_A = mkA "spectrographic" ;
lin spectrographically_Adv = mkAdv "spectrographically" ;
lin spectrometric_A = mkA "spectrometric" ;
lin spectrophotometer_N = mkN "spectrophotometer" ;
lin spectroscope_N = mkN "spectroscope" "spectroscopes";
lin spectroscopic_A = compoundA (mkA "spectroscopic");
lin spectroscopy_N = mkN "spectroscopy" ;
lin spectrum_N = mkN "spectrum" "spectra" {- FIXME: guessed plural form -};
lin speculate_V = mkV "speculate" "speculates" "speculated" "speculated" "speculating";
lin speculate_VS = mkVS (mkV "speculate" "speculates" "speculated" "speculated" "speculating");
lin speculation_N = mkN "speculation" "speculations";
lin speculative_A = compoundA (mkA "speculative");
lin speculativeness_N = mkN "speculativeness" ;
lin speculatorMasc_N = mkN masculine (mkN "speculator" "speculators");
lin speculatorFem_N = mkN feminine (mkN "speculator" "speculators");
lin speculum_N = mkN "speculum" ;
lin speech_N = mkN "speech" "speeches";
lin speech_day_N = mkN "speech-day" "speech-days";
lin speechify_V = mkV "speechify" "speechifies" "speechified" "speechified" "speechifying";
lin speechless_A = compoundA (mkA "speechless");
lin speechlessness_N = mkN "speechlessness" ;
lin speechwriter_N = mkN "speechwriter" ;
lin speed_N = mkN "speed" "speeds";
lin speed_V = mkV "speed" "speeds" "speeded" "speeded" "speeding";
lin speed_V2 = mkV2 (mkV "speed" "speeds" "speeded" "speeded" "speeding");
lin speed_cop_N = mkN "speed-cop" "speed-cops";
lin speed_indicator_N = mkN "speed-indicator" "speed-indicators";
lin speed_limit_N = mkN "speed-limit" "speed-limits";
lin speed_up_N = mkN "speed-up" "speed-ups";
lin speedboat_N = mkN "speedboat" "speedboats";
lin speeder_N = mkN "speeder" ;
lin speeding_N = mkN "speeding" ;
lin speedometer_N = mkN "speedometer" "speedometers";
lin speedskater_N = mkN "speedskater" ;
lin speedway_N = mkN "speedway" "speedways";
lin speedwell_N = mkN "speedwell" "speedwells";
lin speedy_A = mkA "speedy" "speedier";
lin spelaeologist_N = mkN human (mkN "spelaeologist" "spelaeologists");
lin spelaeology_N = mkN "spelaeology" ;
lin speleologist_N = mkN human (mkN "speleologist" "speleologists");
lin speleology_N = mkN "speleology" ;
lin spell_N = mkN "spell" "spells";
lin spell_V = mkV "spell" "spells" "spelled" "spelled" "spelling";
lin spell_V2 = mkV2 (mkV "spell" "spells" "spelled" "spelled" "spelling");
lin spellbinder_N = mkN "spellbinder" "spellbinders";
lin spellbound_A = compoundA (mkA "spellbound");
lin speller_N = mkN "speller" "spellers";
lin spelling_N = mkN "spelling" "spellings";
lin spelt_N = mkN "spelt" ;
lin spelter_N = mkN "spelter" ;
lin spenborough_PN = mkPN "Spenborough";
lin spend_V = IrregEng.spend_V;
lin spend_V2 = mkV2 (IrregEng.spend_V);
lin spend_ing_V2V = ingV2V (IrregEng.spend_V) noPrep noPrep ;
lin spend_to_V2V = mkV2V (IrregEng.spend_V) noPrep to_Prep ;
lin spender_N = mkN "spender" "spenders";
lin spending_N = mkN "spending" ;
lin spendthrift_N = mkN "spendthrift" "spendthrifts";
lin spennymoor_PN = mkPN "Spennymoor";
lin sperm_N = mkN "sperm" "sperms";
lin sperm_whale_N = mkN "sperm-whale" "sperm-whales";
lin spermaceti_N = mkN "spermaceti" ;
lin spermatid_N = mkN "spermatid" ;
lin spermatocele_N = mkN "spermatocele" ;
lin spermatocyte_N = mkN "spermatocyte" ;
lin spermatogenesis_N = mkN "spermatogenesis" ;
lin spermatophyte_N = mkN "spermatophyte" ;
lin spermatozoon_N = mkN "spermatozoon" "spermatozoa" {- FIXME: guessed plural form -};
lin spermicidal_A = mkA "spermicidal" ;
lin spermicide_N = mkN "spermicide" "spermicides";
lin spermous_A = mkA "spermous" ;
lin spew_V = mkV "spew" "spews" "spewed" "spewed" "spewing";
lin spew_V2 = mkV2 (mkV "spew" "spews" "spewed" "spewed" "spewing");
lin sphagnum_N = mkN "sphagnum" "sphagnums";
lin sphenion_N = mkN "sphenion" ;
lin sphere_N = mkN "sphere" "spheres";
lin spherical_A = compoundA (mkA "spherical");
lin sphericity_N = mkN "sphericity" ;
lin spherocyte_N = mkN "spherocyte" ;
lin spheroid_N = mkN "spheroid" "spheroids";
lin spherometer_N = mkN "spherometer" ;
lin spherule_N = mkN "spherule" ;
lin sphincter_N = mkN "sphincter" ;
lin sphingine_A = mkA "sphingine" ;
lin sphinx_N = mkN "sphinx" "sphinxes";
lin sphygmomanometer_N = mkN "sphygmomanometer" ;
lin spic_N = mkN "spic" ;
lin spicate_A = mkA "spicate" ;
lin spiccato_N = mkN "spiccato" ;
lin spice_N = mkN "spice" "spices";
lin spice_V2 = mkV2 (mkV "spice" "spices" "spiced" "spiced" "spicing");
lin spicebush_N = mkN "spicebush" ;
lin spicemill_N = mkN "spicemill" ;
lin spiciness_N = mkN "spiciness" ;
lin spick_A = compoundA (mkA "spick");
lin spicule_N = mkN "spicule" ;
lin spicy_A = mkA "spicy" "spicier";
lin spider_N = mkN "spider" "spiders";
lin spiderflower_N = mkN "spiderflower" ;
lin spiderwort_N = mkN "spiderwort" ;
lin spidery_A = compoundA (mkA "spidery");
lin spiegeleisen_N = mkN "spiegeleisen" ;
lin spiel_N = mkN "spiel" "spiels";
lin spiel_V = mkV "spiel" "spiels" "spieled" "spieled" "spieling";
lin spiel_V2 = mkV2 (mkV "spiel" "spiels" "spieled" "spieled" "spieling");
lin spiff_N = mkN "spiff" ;
lin spiffing_A = mkA "spiffing" ;
lin spigot_N = mkN "spigot" "spigots";
lin spike_N = mkN "spike" "spikes";
lin spike_V2 = mkV2 (mkV "spike" "spikes" "spiked" "spiked" "spiking");
lin spikelike_A = mkA "spikelike" ;
lin spikemoss_N = mkN "spikemoss" ;
lin spikenard_N = mkN "spikenard" ;
lin spiky_A = mkA "spiky" "spikier";
lin spill_N = mkN "spill" "spills";
lin spill_V = mkV "spill" "spills" "spilled" "spilled" "spilling";
lin spill_V2 = mkV2 (mkV "spill" "spills" "spilled" "spilled" "spilling");
lin spillage_N = mkN "spillage" "spillages";
lin spillover_N = mkN "spillover" "spillovers";
lin spillway_N = mkN "spillway" "spillways";
lin spin_N = mkN "spin" "spins";
lin spin_V = IrregEng.spin_V;
lin spin_V2 = mkV2 (IrregEng.spin_V);
lin spin_drier_N = mkN "spin-drier" "spin-driers";
lin spin_dry_V2 = mkV2 (mkV "spin-dry" "spin-dries" "spin-dried" "spin-dried" "spin-drying");
lin spin_off_N = mkN (variants {"spin-off"; "spinoff"});
lin spinach_N = mkN "spinach" ;
lin spinal_A = compoundA (mkA "spinal");
lin spindle_N = mkN "spindle" "spindles";
lin spindle_berry_N = mkN "spindle-berry" "spindle-berries";
lin spindle_legged_A = compoundA (mkA "spindle-legged");
lin spindle_shanked_A = compoundA (mkA "spindle-shanked");
lin spindle_shanks_N = mkN "spindle-shanks" "IRREG";
lin spindle_tree_N = mkN "spindle-tree" "spindle-trees";
lin spindlelegs_N = mkN "spindlelegs" ;
lin spindly_A = mkA "spindly" "spindlier";
lin spindrift_N = mkN "spindrift" ;
lin spine_N = mkN "spine" "spines";
lin spinel_N = mkN "spinel" ;
lin spineless_A = compoundA (mkA "spineless");
lin spinelessness_N = mkN "spinelessness" ;
lin spinet_N = mkN "spinet" "spinets";
lin spinnability_N = mkN "spinnability" ;
lin spinnable_A = mkA "spinnable" ;
lin spinnaker_N = mkN "spinnaker" "spinnakers";
lin spinnbarkeit_N = mkN "spinnbarkeit" ;
lin spinner_N = mkN "spinner" ;
lin spinney_N = mkN "spinney" "spinneys";
lin spinning_N = mkN "spinning" ;
lin spinning_wheel_N = mkN "spinning-wheel" "spinning-wheels";
lin spinose_A = mkA "spinose" ;
lin spinous_A = mkA "spinous" ;
lin spinster_N = mkN "spinster" "spinsters";
lin spinsterhood_N = mkN "spinsterhood" ;
lin spiny_A = mkA "spiny" "spinier";
lin spiracle_N = mkN "spiracle" ;
lin spiral_A = compoundA (mkA "spiral");
lin spiral_N = mkN "spiral" "spirals";
lin spiral_V = mkV "spiral" "spirals" "spiralled" "spiralled" "spiralling";
lin spire_N = mkN "spire" "spires";
lin spirea_N = mkN "spirea" ;
lin spirillum_N = mkN "spirillum" ;
lin spirit_N = mkN "spirit" "spirits";
lin spirit_V2 = mkV2 (mkV "spirit" "spirits" "spirited" "spirited" "spiriting");
lin spirit_lamp_N = mkN "spirit-lamp" "spirit-lamps";
lin spirit_level_N = mkN "spirit-level" "spirit-levels";
lin spirit_rapper_N = mkN "spirit-rapper" "spirit-rappers";
lin spirit_stove_N = mkN "spirit-stove" "spirit-stoves";
lin spiritedly_Adv = mkAdv "spiritedly" ;
lin spiritless_A = compoundA (mkA "spiritless");
lin spiritual_A = compoundA (mkA "spiritual");
lin spiritual_N = mkN "spiritual" "spirituals";
lin spiritualism_N = mkN "spiritualism" ;
lin spiritualistMasc_N = mkN masculine (mkN "spiritualist" "spiritualists");
lin spiritualistFem_N = mkN feminine (mkN "spiritualist" "spiritualists");
lin spiritualistic_A = compoundA (mkA "spiritualistic");
lin spirituality_N = mkN "spirituality" ;
lin spiritualization_N = mkN "spiritualization" ;
lin spiritualize_V2 = mkV2 (mkV "spiritualize" "spiritualizes" "spiritualized" "spiritualized" "spiritualizing");
lin spiritualty_N = mkN "spiritualty" ;
lin spirituous_A = compoundA (mkA "spirituous");
lin spirochete_N = mkN "spirochete" ;
lin spirogram_N = mkN "spirogram" ;
lin spirograph_N = mkN "spirograph" ;
lin spirogyra_N = mkN "spirogyra" ;
lin spirometer_N = mkN "spirometer" ;
lin spirometry_N = mkN "spirometry" ;
lin spironolactone_N = mkN "spironolactone" ;
lin spirt_N = mkN "spirt" "spirts";
lin spirt_V = mkV "spirt" "spirts" "spirted" "spirted" "spirting";
lin spirula_N = mkN "spirula" ;
lin spit_N = mkN "spit" "spits";
lin spit_V = IrregEng.spit_V;
lin spit_V2 = mkV2 (IrregEng.spit_V);
lin spitball_N = mkN "spitball" ;
lin spite_N = mkN "spite" ;
lin spite_V2 = mkV2 (mkV "spite" "spites" "spited" "spited" "spiting");
lin spiteful_A = compoundA (mkA "spiteful");
lin spitefulness_N = mkN "spitefulness" ;
lin spitfire_N = mkN "spitfire" "spitfires";
lin spitter_N = mkN "spitter" ;
lin spitting_N = mkN "spitting" ;
lin spittle_N = mkN "spittle" ;
lin spittoon_N = mkN "spittoon" "spittoons";
lin spitz_N = mkN "spitz" ;
lin spiv_N = mkN "spiv" "spivs";
lin splash_N = mkN "splash" "splashes";
lin splash_V = mkV "splash" "splashes" "splashed" "splashed" "splashing";
lin splash_V2 = mkV2 (mkV "splash" "splashes" "splashed" "splashed" "splashing");
lin splashboard_N = mkN "splashboard" ;
lin splashdown_N = mkN "splashdown" "splashdowns";
lin splasher_N = mkN "splasher" ;
lin splashy_A = mkA "splashy" ;
lin splat_N = mkN "splat" ;
lin splay_A = compoundA (mkA "splay");
lin splay_N = mkN "splay" "splays";
lin splay_V = mkV "splay" "splays" "splayed" "splayed" "splaying";
lin splay_V2 = mkV2 (mkV "splay" "splays" "splayed" "splayed" "splaying");
lin splayfoot_N = mkN "splayfoot" "splayfeet" {- FIXME: guessed plural form -};
lin splayfooted_A = compoundA (mkA "splayfooted");
lin spleen_N = mkN "spleen" "spleens";
lin spleenwort_N = mkN "spleenwort" ;
lin splendid_A = compoundA (mkA "splendid");
lin splendiferous_A = compoundA (mkA "splendiferous");
lin splendour_N = mkN "splendour" "splendours";
lin splenectomy_N = mkN "splenectomy" ;
lin splenetic_A = compoundA (mkA "splenetic");
lin splenic_A = mkA "splenic" ;
lin splenitis_N = mkN "splenitis" ;
lin splenius_N = mkN "splenius" ;
lin splenomegaly_N = mkN "splenomegaly" ;
lin splice_N = mkN "splice" "splices";
lin splice_V2 = mkV2 (mkV "splice" "splices" "spliced" "spliced" "splicing");
lin splicer_N = mkN "splicer" "splicers";
lin spline_N = mkN "spline" ;
lin splint_N = mkN "splint" "splints";
lin splinter_N = mkN "splinter" "splinters";
lin splinter_V = mkV "splinter" "splinters" "splintered" "splintered" "splintering";
lin splinter_V2 = mkV2 (mkV "splinter" "splinters" "splintered" "splintered" "splintering");
lin splinter_proof_A = compoundA (mkA "splinter-proof");
lin splintery_A = compoundA (mkA "splintery");
lin split_N = mkN "split" "splits";
lin split_PN = mkPN "Split";
lin split_V = IrregEng.split_V;
lin split_V2 = mkV2 (IrregEng.split_V);
lin splitsville_N = mkN "splitsville" ;
lin splitter_N = mkN "splitter" ;
lin splodge_N = mkN "splodge" "splodges";
lin splosh_V2 = mkV2 (mkV "splosh" "sploshes" "sploshed" "sploshed" "sploshing");
lin splotch_N = mkN "splotch" "splotches";
lin splurge_N = mkN "splurge" "splurges";
lin splurge_V = mkV "splurge" "splurges" "splurged" "splurged" "splurging";
lin splutter_N = mkN "splutter" ;
lin splutter_V = mkV "splutter" "splutters" "spluttered" "spluttered" "spluttering";
lin splutter_V2 = mkV2 (mkV "splutter" "splutters" "spluttered" "spluttered" "spluttering");
lin spode_N = mkN "spode" ;
lin spodumene_N = mkN "spodumene" ;
lin spoil_N = mkN "spoil" "spoils";
lin spoil_V = mkV "spoil" "spoils" "spoiled" "spoiled" "spoiling";
lin spoil_V2 = mkV2 (mkV "spoil" "spoils" "spoiled" "spoiled" "spoiling");
lin spoilage_N = mkN "spoilage" ;
lin spoiler_N = mkN "spoiler" ;
lin spoilsport_N = mkN "spoilsport" "spoilsports";
lin spoke_N = mkN "spoke" "spokes";
lin spokeshave_N = mkN "spokeshave" ;
lin spokesman_N = mkN masculine (mkN "spokesman" "spokesmen");
lin spokesperson_N = mkN human (mkN "spokesperson");
lin spokeswoman_N = mkN feminine (mkN "spokeswoman");
lin spoliation_N = mkN "spoliation" ;
lin spondaic_A = compoundA (mkA "spondaic");
lin spondee_N = mkN "spondee" "spondees";
lin spondylarthritis_N = mkN "spondylarthritis" ;
lin spondylitis_N = mkN "spondylitis" ;
lin spondylolisthesis_N = mkN "spondylolisthesis" ;
lin sponge_N = mkN "sponge" "sponges";
lin sponge_V = mkV "sponge" "sponges" "sponged" "sponged" "sponging";
lin sponge_V2 = mkV2 (mkV "sponge" "sponges" "sponged" "sponged" "sponging");
lin sponge_cake_N = mkN "sponge-cake" "sponge-cakes";
lin spongefly_N = mkN "spongefly" ;
lin sponger_N = mkN "sponger" "spongers";
lin sponginess_N = mkN "sponginess" ;
lin spongioblast_N = mkN "spongioblast" ;
lin spongy_A = mkA "spongy" "spongier";
lin sponsor_N = mkN "sponsor" "sponsors";
lin sponsor_V2 = mkV2 (mkV "sponsor" "sponsors" "sponsored" "sponsored" "sponsoring");
lin sponsorship_N = mkN "sponsorship" "sponsorships";
lin spontaneity_N = mkN "spontaneity" ;
lin spontaneous_A = compoundA (mkA "spontaneous");
lin spontaneousness_N = mkN "spontaneousness" ;
lin spoof_N = mkN "spoof" "spoofs";
lin spoof_V2 = mkV2 (mkV "spoof" "spoofs" "spoofed" "spoofed" "spoofing");
lin spook_N = mkN "spook" "spooks";
lin spook_V2 = mkV2 (mkV "spook");
lin spooky_A = mkA "spooky" "spookier";
lin spool_N = mkN "spool" "spools";
lin spoon_N = mkN "spoon" "spoons";
lin spoon_V = mkV "spoon" "spoons" "spooned" "spooned" "spooning";
lin spoon_V2 = mkV2 (mkV "spoon" "spoons" "spooned" "spooned" "spooning");
lin spoonbill_N = mkN "spoonbill" ;
lin spoonerism_N = mkN "spoonerism" "spoonerisms";
lin spoonfeed_V2 = mkV2 (mkV "spoon" IrregEng.feed_V);
lin spoonfeeding_N = mkN "spoonfeeding" ;
lin spoonful_N = mkN "spoonful" "spoonfuls";
lin spoor_N = mkN "spoor" "spoors";
lin sporadic_A = compoundA (mkA "sporadic");
lin sporadically_Adv = mkAdv "sporadically";
lin sporangiophore_N = mkN "sporangiophore" ;
lin sporangium_N = mkN "sporangium" ;
lin spore_N = mkN "spore" "spores";
lin sporocarp_N = mkN "sporocarp" ;
lin sporogenous_A = mkA "sporogenous" ;
lin sporophore_N = mkN "sporophore" ;
lin sporophyll_N = mkN "sporophyll" ;
lin sporophyte_N = mkN "sporophyte" ;
lin sporotrichosis_N = mkN "sporotrichosis" ;
lin sporozoan_N = mkN "sporozoan" ;
lin sporozoite_N = mkN "sporozoite" ;
lin sporran_N = mkN "sporran" "sporrans";
lin sport_N = mkN "sport" "sports";
lin sport_V = mkV "sport" "sports" "sported" "sported" "sporting";
lin sport_V2 = mkV2 (mkV "sport" "sports" "sported" "sported" "sporting");
lin sportingly_Adv = mkAdv "sportingly" ;
lin sportive_A = compoundA (mkA "sportive");
lin sportiveness_N = mkN "sportiveness" ;
lin sports_car_N = mkN "sports-car" "sports-cars";
lin sports_coat_N = mkN "sports-coat" "sports-coats";
lin sports_editor_N = mkN "sports-editor" "sports-editors";
lin sports_jacket_N = mkN "sports-jacket" "sports-jackets";
lin sportscast_N = mkN "sportscast" ;
lin sportsman_N = mkN masculine (mkN "sportsman" "sportsmen");
lin sportsmanlike_A = compoundA (mkA "sportsmanlike");
lin sportsmanship_N = mkN "sportsmanship" ;
lin sportswear_N = mkN "sportswear" ;
lin sporty_A = mkA "sporty" ;
lin spot_N = mkN "spot" "spots";
lin spot_V = mkV "spot" "spots" "spotted" "spotted" "spotting";
lin spot_V2 = mkV2 (mkV "spot" "spots" "spotted" "spotted" "spotting");
lin spot_VS = mkVS (mkV "spot" "spots" "spotted" "spotted" "spotting");
lin spotless_A = compoundA (mkA "spotless");
lin spotlessness_N = mkN "spotlessness" ;
lin spotlight_N = mkN "spotlight" "spotlights";
lin spotlight_V2 = mkV2 (mkV "spotlight" "spotlights" "spotlighted" "spotlighted" "spotlighting");
lin spotter_N = mkN "spotter" "spotters";
lin spotty_A = mkA "spotty" "spottier";
lin spousal_A = mkA "spousal" ;
lin spouseMasc_N = mkN masculine (mkN "spouse" "spouses");
lin spouseFem_N = mkN feminine (mkN "spouse" "spouses");
lin spout_N = mkN "spout" "spouts";
lin spout_V = mkV "spout" "spouts" "spouted" "spouted" "spouting";
lin spout_V2 = mkV2 (mkV "spout" "spouts" "spouted" "spouted" "spouting");
lin spouter_N = mkN "spouter" ;
lin sprachgefuhl_N = mkN "sprachgefuhl" ;
lin sprag_N = mkN "sprag" ;
lin sprain_N = mkN "sprain" "sprains";
lin sprain_V2 = mkV2 (mkV "sprain" "sprains" "sprained" "sprained" "spraining");
lin sprat_N = mkN "sprat" "sprats";
lin sprawl_N = mkN "sprawl" "sprawls";
lin sprawl_V = mkV "sprawl" "sprawls" "sprawled" "sprawled" "sprawling";
lin sprawl_V2 = mkV2 (mkV "sprawl" "sprawls" "sprawled" "sprawled" "sprawling");
lin sprawler_N = mkN "sprawler" ;
lin sprawly_A = mkA "sprawly" ;
lin spray_N = mkN "spray" "sprays";
lin spray_V2 = mkV2 (mkV "spray" "sprays" "sprayed" "sprayed" "spraying");
lin spray_gun_N = mkN "spray-gun" "spray-guns";
lin sprayer_N = mkN "sprayer" "sprayers";
lin spraying_N = mkN "spraying" ;
lin spread_N = mkN "spread" "spreads";
lin spread_V = IrregEng.spread_V;
lin spread_V2 = mkV2 (IrregEng.spread_V);
lin spread_V2V = mkV2V (IrregEng.spread_V) noPrep to_Prep ;
lin spread_VS = mkVS (IrregEng.spread_V);
lin spread_over_N = mkN "spread-over" ;
lin spreadeagle_N = mkN "spreadeagle" "spreadeagles";
lin spreadeagle_V2 = mkV2 (mkV "spreadeagle" "spreadeagles" "spreadeagled" "spreadeagled" "spreadeagling");
lin spreader_N = mkN "spreader" "spreaders";
lin spreadsheet_N = mkN "spreadsheet" ;
lin sprechgesang_N = mkN "sprechgesang" ;
lin spree_N = mkN "spree" "sprees";
lin sprig_N = mkN "sprig" "sprigs";
lin sprigged_A = compoundA (mkA "sprigged");
lin sprightliness_N = mkN "sprightliness" ;
lin sprightly_A = mkA "sprightly" "sprightlier";
lin spring_N = mkN "spring" "springs";
lin spring_V = IrregEng.spring_V;
lin spring_V2 = mkV2 (IrregEng.spring_V);
lin spring_balance_N = mkN "spring-balance" "spring-balances";
lin spring_clean_N = mkN "spring-clean" "spring-cleans";
lin spring_clean_V2 = mkV2 (mkV "spring-clean" "spring-cleans" "spring-cleaned" "spring-cleaned" "spring-cleaning");
lin spring_cleaning_N = mkN "spring-cleaning" ;
lin spring_gun_N = mkN "spring-gun" "spring-guns";
lin spring_mattress_N = mkN "spring-mattress" "spring-mattresses";
lin springboard_N = mkN "springboard" "springboards";
lin springbok_N = mkN "springbok" "springboks";
lin springer_N = mkN "springer" ;
lin springfield_PN = mkPN "Springfield";
lin springless_A = compoundA (mkA "springless");
lin springlike_A = compoundA (mkA "springlike");
lin springtide_N = mkN "springtide" "springtides";
lin springtime_N = mkN "springtime" "springtimes";
lin springy_A = mkA "springy" "springier";
lin sprinkle_N = mkN "sprinkle" ;
lin sprinkle_V2 = mkV2 (mkV "sprinkle" "sprinkles" "sprinkled" "sprinkled" "sprinkling");
lin sprinkler_N = mkN "sprinkler" "sprinklers";
lin sprinkling_N = mkN "sprinkling" "sprinklings";
lin sprint_N = mkN "sprint" "sprints";
lin sprint_V = mkV "sprint" "sprints" "sprinted" "sprinted" "sprinting";
lin sprinter_N = mkN "sprinter" "sprinters";
lin sprit_N = mkN "sprit" "sprits";
lin sprite_N = mkN "sprite" "sprites";
lin sprites_N = mkN "sprites" ;
lin spritsail_N = mkN "spritsail" "spritsails";
lin spritz_N = mkN "spritz" ;
lin spritzer_N = mkN "spritzer" ;
lin sprocket_N = mkN "sprocket" "sprockets";
lin sprocket_wheel_N = mkN "sprocket-wheel" "sprocket-wheels";
lin sprog_N = mkN "sprog" ;
lin sprout_N = mkN "sprout" "sprouts";
lin sprout_V = mkV "sprout" "sprouts" "sprouted" "sprouted" "sprouting";
lin sprout_V2 = mkV2 (mkV "sprout" "sprouts" "sprouted" "sprouted" "sprouting");
lin spruce_A = compoundA (mkA "spruce");
lin spruce_N = mkN "spruce" "spruces";
lin spruce_V = mkV "spruce" "spruces" "spruced" "spruced" "sprucing";
lin spruce_V2 = mkV2 (mkV "spruce" "spruces" "spruced" "spruced" "sprucing");
lin spruceness_N = mkN "spruceness" ;
lin sprue_N = mkN "sprue" ;
lin spry_A = mkA "spry" "spryer";
lin spud_N = mkN "spud" "spuds";
lin spue_V = mkV "spue" "spues" "spued" "spued" "spuing";
lin spue_V2 = mkV2 (mkV "spue" "spues" "spued" "spued" "spuing");
lin spume_N = mkN "spume" ;
lin spunk_N = mkN "spunk" ;
lin spunky_A = mkA "spunky" "spunkier";
lin spur_N = mkN "spur" "spurs";
lin spur_V = mkV "spur" "spurs" "spurred" "spurred" "spurring";
lin spur_V2 = mkV2 (mkV "spur" "spurs" "spurred" "spurred" "spurring");
lin spurge_N = mkN "spurge" ;
lin spurious_A = compoundA (mkA "spurious");
lin spuriousness_N = mkN "spuriousness" ;
lin spurn_V2 = mkV2 (mkV "spurn" "spurns" "spurned" "spurned" "spurning");
lin spurner_N = mkN "spurner" ;
lin spurre_V2V = mkV2V (mkV "spurre") noPrep to_Prep ;
lin spurt_N = mkN "spurt" "spurts";
lin spurt_V = mkV "spurt" "spurts" "spurted" "spurted" "spurting";
lin sputnik_N = mkN "sputnik" "sputniks";
lin sputter_N = mkN "sputter" ;
lin sputter_V = mkV "sputter" "sputters" "sputtered" "sputtered" "sputtering";
lin sputter_V2 = mkV2 (mkV "sputter" "sputters" "sputtered" "sputtered" "sputtering");
lin sputum_N = mkN "sputum" ;
lin spy_N = mkN "spy" "spies";
lin spy_V = mkV "spy" "spies" "spied" "spied" "spying";
lin spy_V2 = mkV2 (mkV "spy" "spies" "spied" "spied" "spying");
lin spy_hole_N = mkN "spy-hole" "spy-holes";
lin spyglass_N = mkN "spyglass" "spyglasses";
lin spying_N = mkN "spying" ;
lin spymaster_N = mkN "spymaster" ;
lin spyware_N = mkN "spyware" ;
lin sq_PN = mkPN "Sq";
lin squab_A = mkA "squab" ;
lin squab_N = mkN "squab" "squabs";
lin squabble_N = mkN "squabble" "squabbles";
lin squabble_V = mkV "squabble" "squabbles" "squabbled" "squabbled" "squabbling";
lin squabbler_N = mkN "squabbler" ;
lin squad_N = mkN "squad" "squads";
lin squadron_N = mkN "squadron" "squadrons";
lin squalid_A = compoundA (mkA "squalid");
lin squall_N = mkN "squall" "squalls";
lin squall_V = mkV "squall" "squalls" "squalled" "squalled" "squalling";
lin squally_A = compoundA (mkA "squally");
lin squalor_N = mkN "squalor" ;
lin squama_N = mkN "squama" ;
lin squamule_N = mkN "squamule" ;
lin squamulose_A = mkA "squamulose" ;
lin squander_V2 = mkV2 (mkV "squander" "squanders" "squandered" "squandered" "squandering");
lin squandering_N = mkN "squandering" ;
lin squandermania_N = mkN "squandermania" ;
lin square_A = compoundA (mkA "square");
lin square_Adv = mkAdv "square";
lin square_N = mkN "square" "squares";
lin square_V = mkV "square" "squares" "squared" "squared" "squaring";
lin square_V2 = mkV2 (mkV "square" "squares" "squared" "squared" "squaring");
lin square_bashing_N = mkN "square-bashing" ;
lin square_built_A = compoundA (mkA "square-built");
lin square_rigged_A = compoundA (mkA "square-rigged");
lin square_shouldered_A = compoundA (mkA "square-shouldered");
lin square_toed_A = compoundA (mkA "square-toed");
lin square_toes_N = mkN "square-toes" "IRREG";
lin squareness_N = mkN "squareness" ;
lin squaretail_N = mkN "squaretail" ;
lin squarish_A = mkA "squarish" ;
lin squash_N = mkN "squash" "squash";
lin squash_V = mkV "squash" "squashes" "squashed" "squashed" "squashing";
lin squash_V2 = mkV2 (mkV "squash" "squashes" "squashed" "squashed" "squashing");
lin squashy_A = mkA "squashy" "squashier";
lin squat_A = compoundA (mkA "squat");
lin squat_N = mkN "squat" ;
lin squat_V = mkV "squat" "squats" "squatted" "squatted" "squatting";
lin squatness_N = mkN "squatness" ;
lin squatter_N = mkN "squatter" "squatters";
lin squaw_N = mkN "squaw" "squaws";
lin squawbush_N = mkN "squawbush" ;
lin squawk_N = mkN "squawk" "squawks";
lin squawk_V = mkV "squawk" "squawks" "squawked" "squawked" "squawking";
lin squawker_N = mkN "squawker" "squawkers";
lin squeak_N = mkN "squeak" "squeaks";
lin squeak_V = mkV "squeak" "squeaks" "squeaked" "squeaked" "squeaking";
lin squeak_V2 = mkV2 (mkV "squeak" "squeaks" "squeaked" "squeaked" "squeaking");
lin squeaker_N = mkN "squeaker" "squeakers";
lin squeaky_A = mkA "squeaky" "squeakier";
lin squeal_N = mkN "squeal" "squeals";
lin squeal_V = mkV "squeal" "squeals" "squealed" "squealed" "squealing";
lin squeal_V2 = mkV2 (mkV "squeal" "squeals" "squealed" "squealed" "squealing");
lin squealer_N = mkN "squealer" "squealers";
lin squeamish_A = compoundA (mkA "squeamish");
lin squeamishness_N = mkN "squeamishness" ;
lin squeegee_N = mkN "squeegee" "squeegees";
lin squeegee_V2 = mkV2 (mkV "squeegee" "IRREG" "IRREG" "IRREG" "IRREG");
lin squeeze_N = mkN "squeeze" "squeezes";
lin squeeze_V = mkV "squeeze" "squeezes" "squeezed" "squeezed" "squeezing";
lin squeeze_V2 = mkV2 (mkV "squeeze" "squeezes" "squeezed" "squeezed" "squeezing");
lin squeezer_N = mkN "squeezer" "squeezers";
lin squelch_N = mkN "squelch" "squelches";
lin squelch_V = mkV "squelch" "squelches" "squelched" "squelched" "squelching";
lin squelch_V2 = mkV2 (mkV "squelch" "squelches" "squelched" "squelched" "squelching");
lin squib_N = mkN "squib" "squibs";
lin squid_N = mkN "squid" "squids";
lin squiffy_A = compoundA (mkA "squiffy");
lin squiggle_N = mkN "squiggle" "squiggles";
lin squiggly_A = mkA "squiggly" "squigglier";
lin squill_N = mkN "squill" ;
lin squilla_N = mkN "squilla" ;
lin squinch_N = mkN "squinch" ;
lin squinched_A = mkA "squinched" ;
lin squint_N = mkN "squint" "squints";
lin squint_V = mkV "squint" "squints" "squinted" "squinted" "squinting";
lin squint_eyed_A = compoundA (mkA "squint-eyed");
lin squinter_N = mkN "squinter" ;
lin squinty_A = mkA "squinty" ;
lin squire_N = mkN "squire" "squires";
lin squire_V2 = mkV2 (mkV "squire" "squires" "squired" "squired" "squiring");
lin squirearchy_N = mkN "squirearchy" "squirearchies";
lin squirm_N = mkN "squirm" "squirms";
lin squirm_V = mkV "squirm" "squirms" "squirmed" "squirmed" "squirming";
lin squirrel_N = mkN "squirrel" "squirrels";
lin squirrelfish_N = mkN "squirrelfish" ;
lin squirt_N = mkN "squirt" "squirts";
lin squirt_V = mkV "squirt" "squirts" "squirted" "squirted" "squirting";
lin squirt_V2 = mkV2 (mkV "squirt" "squirts" "squirted" "squirted" "squirting");
lin squish_N = mkN "squish" ;
lin sr_PN = mkPN "Sr";
lin sri_lanka_PN = mkPN "Sri lanka";
lin sri_lankan_A = compoundA (mkA "sri lankan");
lin sri_lankan_N = mkN "sri lankan" "sri lankans";
lin srn_N = mkN "srn" ;
lin ss_N = mkN "ss" ;
lin st_PN = mkPN "St";
lin st_albans_PN = mkPN "St albans";
lin st_andrews_PN = mkPN "St andrews";
lin st_andrews_major_PN = mkPN "St andrews major";
lin st_austell_PN = mkPN "St austell";
lin st_blazey_PN = mkPN "St blazey";
lin st_helens_PN = mkPN "St helens";
lin st_ives_PN = mkPN "St ives";
lin st_louis_PN = mkPN "St louis";
lin st_neots_PN = mkPN "St neots";
lin st_paul_PN = mkPN "St paul";
lin st_petersburg_PN = mkPN "St petersburg";
lin st_stephen_PN = mkPN "St stephen";
lin sta_PN = mkPN "Sta";
lin stab_N = mkN "stab" "stabs";
lin stab_V = mkV "stab" "stabs" "stabbed" "stabbed" "stabbing";
lin stab_V2 = mkV2 (mkV "stab" "stabs" "stabbed" "stabbed" "stabbing");
lin stabber_N = mkN "stabber" "stabbers";
lin stabile_A = mkA "stabile" ;
lin stabile_N = mkN "stabile" ;
lin stability_N = mkN "stability" ;
lin stabilization_N = mkN "stabilization" "stabilizations";
lin stabilize_V = mkV "stabilize";
lin stabilize_V2 = mkV2 (mkV "stabilize" "stabilizes" "stabilized" "stabilized" "stabilizing");
lin stabilizer_N = mkN "stabilizer" "stabilizers";
lin stable_A = compoundA (mkA "stable");
lin stable_N = mkN "stable" "stables";
lin stable_V2 = mkV2 (mkV "stable" "stables" "stabled" "stabled" "stabling");
lin stable_companion_N = mkN "stable-companion" "stable-companions";
lin stableboy_N = mkN "stableboy" "stableboys";
lin stableman_N = mkN masculine (mkN "stableman" "stablemen");
lin stablemate_N = mkN "stablemate" "stablemates";
lin stabling_N = mkN "stabling" ;
lin staccato_A = compoundA (mkA "staccato");
lin staccato_Adv = mkAdv "staccato";
lin stachyose_N = mkN "stachyose" ;
lin stack_N = mkN "stack" "stacks";
lin stack_V2 = mkV2 (mkV "stack" "stacks" "stacked" "stacked" "stacking");
lin stacker_N = mkN "stacker" ;
lin stacks_N = mkN "stacks" ;
lin stackup_N = mkN "stackup";
lin stacte_N = mkN "stacte" ;
lin staddle_N = mkN "staddle" ;
lin stadium_N = mkN "stadium" "stadiums";
lin staff_N = mkN "staff" "staffs";
lin staff_V2 = mkV2 (mkV "staff" "staffs" "staffed" "staffed" "staffing");
lin staff_office_N = mkN "staff-office" "staff-offices";
lin stafford_PN = mkPN "Stafford";
lin staffordshire_PN = mkPN "Staffordshire";
lin stag_N = mkN "stag" "stags";
lin stag_party_N = mkN "stag-party" "stag-parties";
lin stage_N = mkN "stage" "stages";
lin stage_V = mkV "stage" "stages" "staged" "staged" "staging";
lin stage_V2 = mkV2 (mkV "stage" "stages" "staged" "staged" "staging");
lin stage_struck_A = compoundA (mkA "stage-struck");
lin stage_whisper_N = mkN "stage-whisper" "stage-whispers";
lin stagecoach_N = mkN "stagecoach" "stagecoaches";
lin stagecraft_N = mkN "stagecraft" "stagecrafts";
lin stagehand_N = mkN "stagehand" ;
lin stager_N = mkN "stager" "stagers";
lin stagflation_N = mkN "stagflation" ;
lin stagflationary_A = mkA "stagflationary" ;
lin stagger_N = mkN "stagger" "staggers";
lin stagger_V = mkV "stagger" "staggers" "staggered" "staggered" "staggering";
lin stagger_V2 = mkV2 (mkV "stagger" "staggers" "staggered" "staggered" "staggering");
lin staggerbush_N = mkN "staggerbush" ;
lin staggerer_N = mkN "staggerer" "staggerers";
lin staggeringly_Adv = mkAdv "staggeringly";
lin staggers_N = mkN "staggers" ;
lin staghound_N = mkN "staghound" ;
lin staginess_N = mkN "staginess" ;
lin staging_N = mkN "staging" "stagings";
lin stagnancy_N = mkN "stagnancy" ;
lin stagnant_A = compoundA (mkA "stagnant");
lin stagnate_V = mkV "stagnate" "stagnates" "stagnated" "stagnated" "stagnating";
lin stagnation_N = mkN "stagnation" ;
lin stagy_A = compoundA (mkA "stagy");
lin staid_A = compoundA (mkA "staid");
lin staidness_N = mkN "staidness" ;
lin stain_N = mkN "stain" "stains";
lin stain_V = mkV "stain" "stains" "stained" "stained" "staining";
lin stain_V2 = mkV2 (mkV "stain" "stains" "stained" "stained" "staining");
lin stainability_N = mkN "stainability" ;
lin stainable_A = mkA "stainable" ;
lin stainer_N = mkN "stainer" ;
lin staining_N = mkN "staining" ;
lin stainless_A = compoundA (mkA "stainless");
lin stair_N = mkN "stair" "stairs";
lin stair_carpet_N = mkN "stair-carpet" "stair-carpets";
lin stair_rod_N = mkN "stair-rod" "stair-rods";
lin staircase_N = mkN "staircase" "staircases";
lin stairhead_N = mkN "stairhead";
lin stairway_N = mkN "stairway" "stairways";
lin stairwell_N = mkN "stairwell" ;
lin stake_N = mkN "stake" "stakes";
lin stake_V2 = mkV2 (mkV "stake" "stakes" "staked" "staked" "staking");
lin stake_holder_N = mkN "stake-holder" "stake-holders";
lin stakeford_PN = mkPN "Stakeford";
lin stakeholder_N = mkN "stakeholder" ;
lin stakeout_N = mkN "stakeout" ;
lin stalactite_N = mkN "stalactite" "stalactites";
lin stalagmite_N = mkN "stalagmite" "stalagmites";
lin stale_A = mkA "stale" "staler";
lin stale_V = mkV "stale" "stales" "staled" "staled" "staling";
lin stalemate_N = mkN "stalemate" "stalemates";
lin stalemate_V2 = mkV2 (mkV "stalemate" "stalemates" "stalemated" "stalemated" "stalemating");
lin staleness_N = mkN "staleness" ;
lin stalk_N = mkN "stalk" "stalks";
lin stalk_V = mkV "stalk" "stalks" "stalked" "stalked" "stalking";
lin stalk_V2 = mkV2 (mkV "stalk" "stalks" "stalked" "stalked" "stalking");
lin stalker_N = mkN "stalker" "stalkers";
lin stalking_horse_N = mkN "stalking-horse" "stalking-horses";
lin stall_N = mkN "stall" "stalls";
lin stall_V = mkV "stall" "stalls" "stalled" "stalled" "stalling";
lin stall_V2 = mkV2 (mkV "stall" "stalls" "stalled" "stalled" "stalling");
lin stall_fed_A = compoundA (mkA "stall-fed");
lin stallion_N = mkN "stallion" "stallions";
lin stalwart_A = compoundA (mkA "stalwart");
lin stalwart_N = mkN "stalwart" "stalwarts";
lin stalybridge_PN = mkPN "Stalybridge";
lin stamen_N = mkN "stamen" "stamens";
lin stamford_PN = mkPN "Stamford";
lin stamina_N = mkN "stamina" ;
lin stammel_N = mkN "stammel" ;
lin stammer_N = mkN "stammer" "stammers";
lin stammer_V = mkV "stammer" "stammers" "stammered" "stammered" "stammering";
lin stammer_V2 = mkV2 (mkV "stammer" "stammers" "stammered" "stammered" "stammering");
lin stammerer_N = mkN "stammerer" "stammerers";
lin stammeringly_Adv = mkAdv "stammeringly";
lin stamp_N = mkN "stamp" "stamps";
lin stamp_V = mkV "stamp" "stamps" "stamped" "stamped" "stamping";
lin stamp_V2 = mkV2 (mkV "stamp" "stamps" "stamped" "stamped" "stamping");
lin stamp_album_N = mkN "stamp-album" "stamp-albums";
lin stamp_collector_N = mkN "stamp-collector" "stamp-collectors";
lin stamp_dealer_N = mkN "stamp-dealer" "stamp-dealers";
lin stamp_duty_N = mkN "stamp-duty" "stamp-duties";
lin stampede_N = mkN "stampede" "stampedes";
lin stampede_V = mkV "stampede" "stampedes" "stampeded" "stampeded" "stampeding";
lin stampede_V2 = mkV2 (mkV "stampede" "stampedes" "stampeded" "stampeded" "stampeding");
lin stamper_N = mkN "stamper" ;
lin stamping_ground_N = mkN "stamping-ground" "stamping-grounds";
lin stan_PN = mkPN "Stan";
lin stance_N = mkN "stance" "stances";
lin stanch_V2 = mkV2 (mkV "stanch");
lin stanchion_N = mkN "stanchion" "stanchions";
lin stand_N = mkN "stand" "stands";
lin stand_V = IrregEng.stand_V;
lin stand_V2 = mkV2 (IrregEng.stand_V);
lin stand_VS = mkVS (IrregEng.stand_V);
lin stand_VV = mkVV (IrregEng.stand_V);
lin stand_in_N = mkN "stand-in" "stand-ins";
lin stand_to_N = mkN "stand-to" "stand-ti" {- FIXME: guessed plural form -};
lin stand_up_A = compoundA (mkA "stand-up");
lin standard_A = compoundA (mkA "standard");
lin standard_N = mkN "standard" "standards";
lin standard_bearer_N = mkN "standard-bearer" "standard-bearers";
lin standardization_N = mkN "standardization" "standardizations";
lin standardize_V2 = mkV2 (mkV "standardize" "standardizes" "standardized" "standardized" "standardizing");
lin standardizer_N = mkN "standardizer" ;
lin standby_A = mkA "standby" ;
lin standby_N = mkN "standby" "standbys";
lin standdown_N = mkN "standdown" ;
lin standee_N = mkN "standee" ;
lin stander_N = mkN "stander" ;
lin standing_N = mkN "standing" ;
lin standing_N = mkN "standing";
lin standoffish_A = compoundA (mkA "standoffish");
lin standoffishness_N = mkN "standoffishness" ;
lin standpipe_N = mkN "standpipe" "standpipes";
lin standpoint_N = mkN "standpoint" "standpoints";
lin standstill_N = mkN "standstill" "standstills";
lin stanford_PN = mkPN "Stanford";
lin stanhope_N = mkN "stanhope" ;
lin stanhopea_N = mkN "stanhopea" ;
lin stanley_PN = mkPN "Stanley";
lin stannic_A = mkA "stannic" ;
lin stannite_N = mkN "stannite" ;
lin stanza_N = mkN "stanza" "stanzas";
lin stapedectomy_N = mkN "stapedectomy" ;
lin stapelia_N = mkN "stapelia" ;
lin stapes_N = mkN "stapes" ;
lin staphylococcal_A = mkA "staphylococcal" ;
lin staphylococcus_N = mkN "staphylococcus" ;
lin staple_A = mkA "staple" ;
lin staple_N = mkN "staple" "staples";
lin staple_V2 = mkV2 (mkV "staple" "staples" "stapled" "stapled" "stapling");
lin stapler_N = mkN "stapler" "staplers";
lin stapling_machine_N = mkN "stapling-machine" "stapling-machines";
lin star_N = mkN "star" "stars";
lin star_V = mkV "star" "stars" "starred" "starred" "starring";
lin star_V2 = mkV2 (mkV "star" "stars" "starred" "starred" "starring");
lin starboard_A = mkA "starboard" ;
lin starboard_N = mkN "starboard" "starboards";
lin starboard_V2 = mkV2 (mkV "starboard" "starboards" "starboarded" "starboarded" "starboarding");
lin starch_N = mkN "starch" ;
lin starch_V2 = mkV2 (mkV "starch" "starches" "starched" "starched" "starching");
lin starches_N = mkN "starches" ;
lin starchless_A = mkA "starchless" ;
lin starchlike_A = mkA "starchlike" ;
lin starchy_A = mkA "starchy" "starchier";
lin stardom_N = mkN "stardom" ;
lin stardust_N = mkN "stardust" ;
lin stare_N = mkN "stare" "stares";
lin stare_V = mkV "stare" "stares" "stared" "stared" "staring";
lin stare_V2 = mkV2 (mkV "stare" "stares" "stared" "stared" "staring");
lin starer_N = mkN "starer" ;
lin starets_N = mkN "starets" ;
lin starfish_N = mkN "starfish" "starfish";
lin starflower_N = mkN "starflower" ;
lin stargazer_N = mkN "stargazer" "stargazers";
lin stargazing_N = mkN "stargazing" ;
lin staring_Adv = mkAdv "staring";
lin stark_A = compoundA (mkA "stark");
lin stark_Adv = mkAdv "stark";
lin starkers_A = compoundA (mkA "starkers");
lin starkness_N = mkN "starkness" ;
lin starless_A = compoundA (mkA "starless");
lin starlet_N = mkN "starlet" "starlets";
lin starlight_N = mkN "starlight" ;
lin starlike_A = mkA "starlike" ;
lin starling_N = mkN "starling" "starlings";
lin starlit_A = compoundA (mkA "starlit");
lin starry_A = mkA "starry" "starrier";
lin starry_eyed_A = compoundA (mkA "starry-eyed");
lin starship_N = mkN "starship" ;
lin start_N = mkN "start" "starts";
lin start_V = mkV "start" "starts" "started" "started" "starting";
lin start_V2 = mkV2 (mkV "start" "starts" "started" "started" "starting");
lin start_ing_VV = ingVV (mkV "start" "starts" "started" "started" "starting");
lin start_to_VV = mkVV (mkV "start" "starts" "started" "started" "starting");
lin starter_1_N = mkN "starter" "starters";
lin starter_2_N = mkN human (mkN "starter" "starters");
lin starter_3_N = mkN human (mkN "starter" "starters");
lin starter_4_N = mkN human (mkN "starter" "starters");
lin starter_5_N = mkN "starter" "starters";
lin starter_6_N = mkN "starter" "starters";
lin starter_7_N = mkN "starter" "starters";
lin starting_gate_N = mkN "starting-gate" "starting-gates";
lin starting_point_N = mkN "starting-point" "starting-points";
lin starting_post_N = mkN "starting-post" "starting-posts";
lin startle_N = mkN "startle" ;
lin startle_V2 = mkV2 (mkV "startle" "startles" "startled" "startled" "startling");
lin startling_A = mkA "startling" ;
lin startup_N = mkN "startup" ;
lin starvation_N = mkN "starvation" ;
lin starve_V = mkV "starve" "starves" "starved" "starved" "starving";
lin starve_V2 = mkV2 (mkV "starve" "starves" "starved" "starved" "starving");
lin starveling_N = mkN "starveling" "starvelings";
lin stash_V2 = mkV2 (mkV "stash" "stashes" "stashed" "stashed" "stashing");
lin stasis_N = mkN "stasis" ;
lin state_N = mkN "state" "states";
lin state_V2 = mkV2 (mkV "state" "states" "stated" "stated" "stating");
lin state_VS = mkVS (mkV "state");
lin statecraft_N = mkN "statecraft" ;
lin statehood_N = mkN "statehood" ;
lin statehouse_N = mkN "statehouse" "statehouses";
lin stateless_A = compoundA (mkA "stateless");
lin stateliness_N = mkN "stateliness" ;
lin stately_A = mkA "stately" "statelier";
lin statement_N = mkN "statement" "statements";
lin stater_N = mkN "stater" ;
lin stateroom_N = mkN "stateroom" ;
lin statesman_N = mkN masculine (mkN "statesman" "statesmen");
lin statesmanlike_A = compoundA (mkA "statesmanlike");
lin statesmanship_N = mkN "statesmanship" ;
lin stateswoman_N = mkN feminine (mkN "stateswoman" "stateswomen");
lin statewide_A = mkA "statewide" ;
lin static_A = compoundA (mkA "static");
lin static_N = mkN "static" ;
lin statically_Adv = mkAdv "statically";
lin statics_N = mkN "statics" "statics";
lin station_N = mkN "station" "stations";
lin station_V2 = mkV2 (mkV "station" "stations" "stationed" "stationed" "stationing");
lin station_waggon_N = mkN "station-waggon" "station-waggons";
lin stationariness_N = mkN "stationariness" ;
lin stationary_A = compoundA (mkA "stationary");
lin stationer_N = mkN "stationer" "stationers";
lin stationery_N = mkN "stationery" ;
lin stationmaster_N = mkN "stationmaster" "stationmasters";
lin statistic_N = mkN "statistic" "statistics";
lin statistical_A = compoundA (mkA "statistical");
lin statisticianMasc_N = mkN masculine (mkN "statistician" "statisticians");
lin statisticianFem_N = mkN feminine (mkN "statistician" "statisticians");
lin statistics_N = mkN "statistics" "statistics";
lin stative_A = mkA "stative" ;
lin stator_N = mkN "stator" ;
lin statuary_A = compoundA (mkA "statuary");
lin statuary_N = mkN "statuary" ;
lin statue_N = mkN "statue" "statues";
lin statuesque_A = compoundA (mkA "statuesque");
lin statuette_N = mkN "statuette" "statuettes";
lin stature_N = mkN "stature" ;
lin status_N = mkN "status" ;
lin status_quo_N = mkN "status quo" "status qui" {- FIXME: guessed plural form -};
lin statute_N = mkN "statute" "statutes";
lin statute_book_N = mkN "statute-book" "statute-books";
lin statutory_A = compoundA (mkA "statutory");
lin staunch_A = compoundA (mkA "staunch");
lin staunch_V2 = mkV2 (mkV "staunch" "staunches" "staunched" "staunched" "staunching");
lin staunchness_N = mkN "staunchness" ;
lin staurikosaur_N = mkN "staurikosaur" ;
lin stave_N = mkN "stave" "staves";
lin stave_V = mkV "stave" "staves" "staved" "staved" "staving";
lin stave_V2 = mkV2 (mkV "stave" "staves" "staved" "staved" "staving");
lin stay_N = mkN "stay" "stays";
lin stay_V = mkV "stay" "stays" "stayed" "stayed" "staying";
lin stay_V2 = mkV2 (mkV "stay" "stays" "stayed" "stayed" "staying");
lin stay_VA = mkVA (mkV "stay" "stays" "stayed" "stayed" "staying");
lin stay_VS = mkVS (mkV "stay" "stays" "stayed" "stayed" "staying");
lin stay_at_home_N = mkN "stay-at-home" "stay-at-homes";
lin stayer_N = mkN "stayer" "stayers";
lin staysail_N = mkN "staysail" ;
lin std_PN = mkPN "Std";
lin stead_N = mkN "stead" ;
lin steadfast_A = compoundA (mkA "steadfast");
lin steadfastness_N = mkN "steadfastness" ;
lin steadiness_N = mkN "steadiness" ;
lin steady_A = mkA "steady" "steadier";
lin steady_Adv = mkAdv "steady";
lin steady_N = mkN "steady" "steadies";
lin steady_V = mkV "steady" "steadies" "steadied" "steadied" "steadying";
lin steady_V2 = mkV2 (mkV "steady" "steadies" "steadied" "steadied" "steadying");
lin steak_N = mkN "steak" "steaks";
lin steakhouse_N = mkN "steakhouse" ;
lin steal_N = mkN "steal" ;
lin steal_V = IrregEng.steal_V;
lin steal_V2 = mkV2 (IrregEng.steal_V);
lin stealth_N = mkN "stealth" ;
lin stealthy_A = mkA "stealthy" "stealthier";
lin steam_N = mkN "steam" ;
lin steam_V = mkV "steam" "steams" "steamed" "steamed" "steaming";
lin steam_V2 = mkV2 (mkV "steam" "steams" "steamed" "steamed" "steaming");
lin steam_boiler_N = mkN "steam-boiler" "steam-boilers";
lin steam_coal_N = mkN "steam-coal" ;
lin steam_engine_N = mkN "steam-engine" "steam-engines";
lin steam_heat_N = mkN "steam-heat" ;
lin steam_heat_V2 = mkV2 (mkV "steam-heat" "steam-heats" "steam-heated" "steam-heated" "steam-heating");
lin steamboat_N = mkN "steamboat" "steamboats";
lin steamer_N = mkN "steamer" "steamers";
lin steamfitter_N = mkN "steamfitter" ;
lin steamroller_N = mkN "steamroller" "steamrollers";
lin steamroller_V2 = mkV2 (mkV "steamroller" "steamrollers" "steamrollered" "steamrollered" "steamrollering");
lin steamship_N = mkN "steamship" "steamships";
lin steamy_A = mkA "steamy" "steamier";
lin stearic_A = mkA "stearic" ;
lin stearin_N = mkN "stearin" ;
lin steatopygia_N = mkN "steatopygia" ;
lin steatorrhea_N = mkN "steatorrhea" ;
lin steed_N = mkN "steed" "steeds";
lin steel_N = mkN "steel" ;
lin steel_V2 = mkV2 (mkV "steel" "steels" "steeled" "steeled" "steeling");
lin steel_clad_A = compoundA (mkA "steel-clad");
lin steel_plated_A = compoundA (mkA "steel-plated");
lin steelmaker_N = mkN "steelmaker" ;
lin steelworks_N = mkN "steelworks" "steelworks";
lin steely_A = mkA "steely" "steelier";
lin steelyard_N = mkN "steelyard" "steelyards";
lin steenbok_N = mkN "steenbok" "steenboks";
lin steep_A = mkA "steep" "steeper";
lin steep_N = mkN "steep" ;
lin steep_V = mkV "steep" "steeps" "steeped" "steeped" "steeping";
lin steep_V2 = mkV2 (mkV "steep" "steeps" "steeped" "steeped" "steeping");
lin steepen_V = mkV "steepen" "steepens" "steepened" "steepened" "steepening";
lin steepen_V2 = mkV2 (mkV "steepen" "steepens" "steepened" "steepened" "steepening");
lin steeper_N = mkN "steeper" ;
lin steepish_A = compoundA (mkA "steepish");
lin steeple_N = mkN "steeple" "steeples";
lin steeplechase_N = mkN "steeplechase" "steeplechases";
lin steeplechaser_N = mkN "steeplechaser" "steeplechasers";
lin steeplejack_N = mkN "steeplejack" "steeplejacks";
lin steepness_N = mkN "steepness" ;
lin steer_N = mkN "steer" "steers";
lin steer_V = mkV "steer" "steers" "steered" "steered" "steering";
lin steer_V2 = mkV2 (mkV "steer" "steers" "steered" "steered" "steering");
lin steerable_A = mkA "steerable" ;
lin steerage_N = mkN "steerage" "steerages";
lin steerageway_N = mkN "steerageway" ;
lin steering_N = mkN "steering" ;
lin steering_gear_N = mkN "steering-gear" ;
lin steering_wheel_N = mkN "steering-wheel" "steering-wheels";
lin steersman_N = mkN masculine (mkN "steersman" "steersmen");
lin stegosaur_N = mkN "stegosaur" ;
lin stele_N = mkN "stele" "IRREG";
lin stelis_N = mkN "stelis" ;
lin stella_PN = mkPN "Stella";
lin stellar_A = compoundA (mkA "stellar");
lin stem_N = mkN "stem" "stems";
lin stem_V = mkV "stem" "stems" "stemmed" "stemmed" "stemming";
lin stem_V2 = mkV2 (mkV "stem" "stems" "stemmed" "stemmed" "stemming");
lin stemless_A = mkA "stemless" ;
lin stemma_N = mkN "stemma" ;
lin stemmatic_A = mkA "stemmatic" ;
lin stemmatology_N = mkN "stemmatology" ;
lin stemmer_N = mkN "stemmer" ;
lin sten_PN = mkPN "Sten";
lin stench_N = mkN "stench" "stenches";
lin stencil_N = mkN "stencil" "stencils";
lin stencil_V2 = mkV2 (mkV "stencil" "stencils" "stencilled" "stencilled" "stencilling");
lin stenograph_N = mkN "stenograph" ;
lin stenographer_N = mkN "stenographer" "stenographers";
lin stenographic_A = mkA "stenographic" ;
lin stenography_N = mkN "stenography" ;
lin stenopterygius_N = mkN "stenopterygius" ;
lin stenosed_A = mkA "stenosed" ;
lin stenosis_N = mkN "stenosis" ;
lin stent_N = mkN "stent" ;
lin stentor_N = mkN "stentor" ;
lin stentorian_A = compoundA (mkA "stentorian");
lin step_N = mkN "step" "steps";
lin step_V = mkV "step" "steps" "stepped" "stepped" "stepping";
lin step_V2 = mkV2 (mkV "step" "steps" "stepped" "stepped" "stepping");
lin stepbrother_N = mkN "stepbrother" "stepbrothers";
lin stepchild_N = mkN "stepchild" "stepchildren" {- FIXME: guessed plural form -};
lin stepdaughter_N = mkN "stepdaughter" "stepdaughters";
lin stepfather_N = mkN "stepfather" "stepfathers";
lin stephanie_PN = mkPN "Stephanie";
lin stephanion_N = mkN "stephanion" ;
lin stephanotis_N = mkN "stephanotis" ;
lin stephen_PN = mkPN "Stephen";
lin stepladder_N = mkN "stepladder" "stepladders";
lin stepmother_N = mkN "stepmother" "stepmothers";
lin stepparent_N = mkN "stepparent" "stepparents";
lin steppe_N = mkN "steppe" "steppes";
lin stepper_N = mkN "stepper" ;
lin stepping_stone_N = mkN "stepping-stone" "stepping-stones";
lin steprelationship_N = mkN "steprelationship" ;
lin steps_N = mkN "steps" ;
lin stepsister_N = mkN "stepsister" "stepsisters";
lin stepson_N = mkN "stepson" "stepsons";
lin stepwise_Adv = mkAdv "stepwise" ;
lin steradian_N = mkN "steradian" ;
lin sterculia_N = mkN "sterculia" ;
lin stereo_N = mkN "stereo" "stereos";
lin stereophonic_A = compoundA (mkA "stereophonic");
lin stereoscope_N = mkN "stereoscope" "stereoscopes";
lin stereoscopic_A = compoundA (mkA "stereoscopic");
lin stereotype_N = mkN "stereotype" "stereotypes";
lin stereotype_V2 = mkV2 (mkV "stereotype" "stereotypes" "stereotyped" "stereotyped" "stereotyping");
lin stereotypically_Adv = mkAdv "stereotypically" ;
lin sterile_A = compoundA (mkA "sterile");
lin sterility_N = mkN "sterility" ;
lin sterilization_N = mkN "sterilization" ;
lin sterilize_V = mkV "sterilize";
lin sterilize_V2 = mkV2 (mkV "sterilize" "sterilizes" "sterilized" "sterilized" "sterilizing");
lin sterling_A = compoundA (mkA "sterling");
lin sterling_N = mkN "sterling" ;
lin stern_A = mkA "stern" "sterner";
lin stern_N = mkN "stern" "sterns";
lin sternal_A = mkA "sternal" ;
lin sternness_N = mkN "sternness" ;
lin sternocleidomastoid_N = mkN "sternocleidomastoid" ;
lin sternpost_N = mkN "sternpost" ;
lin sternum_N = mkN "sternum" "sternums";
lin sternutator_N = mkN "sternutator" ;
lin sternutatory_A = mkA "sternutatory" ;
lin sternwheeler_N = mkN "sternwheeler" "sternwheelers";
lin steroid_N = mkN "steroid" ;
lin steroidal_A = mkA "steroidal" ;
lin sterol_N = mkN "sterol" ;
lin stertorous_A = compoundA (mkA "stertorous");
lin stethoscope_N = mkN "stethoscope" "stethoscopes";
lin stetson_N = mkN "stetson" "stetsons";
lin steve_PN = mkPN "Steve";
lin stevedore_N = mkN "stevedore" "stevedores";
lin steven_PN = mkPN "Steven";
lin stevenage_PN = mkPN "Stevenage";
lin stevenston_PN = mkPN "Stevenston";
lin stevia_N = mkN "stevia" ;
lin stew_N = mkN "stew" "stews";
lin stew_V = mkV "stew" "stews" "stewed" "stewed" "stewing";
lin stew_V2 = mkV2 (mkV "stew" "stews" "stewed" "stewed" "stewing");
lin steward_N = mkN "steward" "stewards";
lin stewardess_N = mkN "stewardess" "stewardesses";
lin stewardship_N = mkN "stewardship" ;
lin stewart_PN = mkPN "Stewart";
lin stewing_N = mkN "stewing" ;
lin steyning_PN = mkPN "Steyning";
lin sthene_N = mkN "sthene" ;
lin stibnite_N = mkN "stibnite" ;
lin stick_N = mkN "stick" "sticks";
lin stick_V = IrregEng.stick_V;
lin stick_V2 = mkV2 (mkV "stick" "sticks" "sticked" "sticked" "sticking");
lin stick_in_the_mud_A = compoundA (mkA "stick-in-the-mud");
lin stick_in_the_mud_N = mkN "stick-in-the-mud" "IRREG";
lin stick_on_A = compoundA (mkA "stick-on");
lin stick_up_N = mkN "stick-up" "stick-ups";
lin stickball_N = mkN "stickball" ;
lin sticker_N = mkN "sticker" "stickers";
lin stickiness_N = mkN "stickiness" ;
lin sticking_plaster_N = mkN "sticking-plaster" "sticking-plasters";
lin stickleback_N = mkN "stickleback" ;
lin stickler_N = mkN "stickler" "sticklers";
lin stickpin_N = mkN "stickpin" ;
lin sticktight_N = mkN "sticktight" ;
lin stickweed_N = mkN "stickweed" ;
lin sticky_A = mkA "sticky" "stickier";
lin stiff_A = mkA "stiff" "stiffer";
lin stiff_Adv = mkAdv "stiff";
lin stiff_N = mkN "stiff" "stiffs";
lin stiff_necked_A = compoundA (mkA "stiff-necked");
lin stiffen_V = mkV "stiffen" "stiffens" "stiffened" "stiffened" "stiffening";
lin stiffen_V2 = mkV2 (mkV "stiffen" "stiffens" "stiffened" "stiffened" "stiffening");
lin stiffener_N = mkN "stiffener" "stiffeners";
lin stiffening_N = mkN "stiffening" "stiffenings";
lin stiffness_N = mkN "stiffness" ;
lin stifle_N = mkN "stifle" ;
lin stifle_V = mkV "stifle" "stifles" "stifled" "stifled" "stifling";
lin stifle_V2 = mkV2 (mkV "stifle" "stifles" "stifled" "stifled" "stifling");
lin stifler_N = mkN "stifler" ;
lin stigma_N = mkN "stigma" "stigmas";
lin stigmata_N = mkN "stigmata" ;
lin stigmatic_A = mkA "stigmatic" ;
lin stigmatic_N = mkN "stigmatic" ;
lin stigmatism_N = mkN "stigmatism" ;
lin stigmatization_N = mkN "stigmatization" ;
lin stigmatize_V2 = mkV2 (mkV "stigmatize" "stigmatizes" "stigmatized" "stigmatized" "stigmatizing");
lin stile_N = mkN "stile" "stiles";
lin stiletto_N = mkN "stiletto" "stilettos";
lin still_A = mkA "still" "stiller";
lin still_AdA = mkAdA "still";
lin still_AdV = mkAdV "still";
lin still_Adv = mkAdv "still";
lin still_N = mkN "still" "stills";
lin still_V2 = mkV2 (mkV "still" "stills" "stilled" "stilled" "stilling");
lin still_life_N = mkN "still-life" "still-lifes";
lin still_room_N = mkN "still-room" "still-rooms";
lin stillbirth_N = mkN "stillbirth" "stillbirths";
lin stillborn_A = compoundA (mkA "stillborn");
lin stillness_N = mkN "stillness" ;
lin stillroom_N = mkN "stillroom" ;
lin stilly_A = compoundA (mkA "stilly");
lin stilt_N = mkN "stilt" "stilts";
lin stilted_A = compoundA (mkA "stilted");
lin stilton_N = mkN "stilton" "stiltons";
lin stimulant_A = mkA "stimulant" ;
lin stimulant_N = mkN "stimulant" "stimulants";
lin stimulate_V2 = mkV2 (mkV "stimulate" "stimulates" "stimulated" "stimulated" "stimulating");
lin stimulating_A = mkA "stimulating" ;
lin stimulation_N = mkN "stimulation" "stimulations";
lin stimulative_A = mkA "stimulative" ;
lin stimulus_N = mkN "stimulus" "stimuli" {- FIXME: guessed plural form -};
lin sting_N = mkN "sting" "stings";
lin sting_V = IrregEng.sting_V;
lin sting_V2 = mkV2 (IrregEng.sting_V);
lin stinger_N = mkN "stinger" "stingers";
lin stinginess_N = mkN "stinginess" ;
lin stingless_A = compoundA (mkA "stingless");
lin stingray_N = mkN "stingray" "stingrays";
lin stingy_A = mkA "stingy" "stingier";
lin stink_N = mkN "stink" "stinks";
lin stink_V = IrregEng.stink_V;
lin stink_V2 = mkV2 (IrregEng.stink_V);
lin stinker_N = mkN "stinker" "stinkers";
lin stinkhorn_N = mkN "stinkhorn" ;
lin stint_N = mkN "stint" "stints";
lin stint_V = mkV "stint" "stints" "stinted" "stinted" "stinting";
lin stint_V2 = mkV2 (mkV "stint" "stints" "stinted" "stinted" "stinting");
lin stinter_N = mkN "stinter" ;
lin stipe_N = mkN "stipe" ;
lin stipend_N = mkN "stipend" "stipends";
lin stipendiary_A = compoundA (mkA "stipendiary");
lin stipendiary_N = mkN "stipendiary" "stipendiaries";
lin stipple_V2 = mkV2 (mkV "stipple" "stipples" "stippled" "stippled" "stippling");
lin stippler_N = mkN "stippler" ;
lin stipulate_V = mkV "stipulate" "stipulates" "stipulated" "stipulated" "stipulating";
lin stipulate_V2 = mkV2 (mkV "stipulate" "stipulates" "stipulated" "stipulated" "stipulating");
lin stipulate_VS = mkVS (mkV "stipulate" "stipulates" "stipulated" "stipulated" "stipulating");
lin stipulation_N = mkN "stipulation" "stipulations";
lin stipule_N = mkN "stipule" ;
lin stir_N = mkN "stir" "stirs";
lin stir_V = mkV "stir" "stirs" "stirred" "stirred" "stirring";
lin stir_V2 = mkV2 (mkV "stir" "stirs" "stirred" "stirred" "stirring");
lin stirk_N = mkN "stirk" ;
lin stirling_PN = mkPN "Stirling";
lin stirrer_N = mkN "stirrer" ;
lin stirring_N = mkN "stirring" ;
lin stirringly_Adv = mkAdv "stirringly" ;
lin stirrup_N = mkN "stirrup" "stirrups";
lin stirrup_cup_N = mkN "stirrup-cup" "stirrup-cups";
lin stitch_N = mkN "stitch" "stitches";
lin stitch_V = mkV "stitch" "stitches" "stitched" "stitched" "stitching";
lin stitch_V2 = mkV2 (mkV "stitch" "stitches" "stitched" "stitched" "stitching");
lin stitcher_N = mkN "stitcher" ;
lin stitchwort_N = mkN "stitchwort" ;
lin stoat_N = mkN "stoat" "stoats";
lin stob_N = mkN "stob" ;
lin stochastic_A = compoundA (mkA "stochastic");
lin stochastically_Adv = mkAdv "stochastically";
lin stock_A = mkA "stock" ;
lin stock_N = mkN "stock" "stocks";
lin stock_V2 = mkV2 (mkV "stock" "stocks" "stocked" "stocked" "stocking");
lin stock_cube_N = mkN "stock-cube" "stock-cubes";
lin stock_farmer_N = mkN "stock-farmer" "stock-farmers";
lin stock_in_trade_N = mkN "stock-in-trade" "stock-in-trades";
lin stock_list_N = mkN "stock-list" "stock-lists";
lin stock_still_Adv = mkAdv "stock-still";
lin stockade_N = mkN "stockade" "stockades";
lin stockade_V2 = mkV2 (mkV "stockade" "stockades" "stockaded" "stockaded" "stockading");
lin stockbreeder_N = mkN "stockbreeder" "stockbreeders";
lin stockbroker_N = mkN "stockbroker" "stockbrokers";
lin stockcar_N = mkN "stockcar" "stockcars";
lin stocker_N = mkN "stocker" ;
lin stockfish_N = mkN "stockfish" "stockfish";
lin stockholder_N = mkN "stockholder" "stockholders";
lin stockholding_N = mkN "stockholding" "stockholdings";
lin stockholm_PN = mkPN "Stockholm";
lin stockinet_N = mkN "stockinet" ;
lin stockinette_N = mkN "stockinette" ;
lin stocking_N = mkN "stocking" "stockings";
lin stockinged_A = compoundA (mkA "stockinged");
lin stockist_N = mkN "stockist" "stockists";
lin stockjobber_N = mkN "stockjobber" "stockjobbers";
lin stockman_N = mkN masculine (mkN "stockman");
lin stockpile_N = mkN "stockpile" "stockpiles";
lin stockpile_V2 = mkV2 (mkV "stockpile");
lin stockpiling_N = mkN "stockpiling" ;
lin stockport_PN = mkPN "Stockport";
lin stockpot_N = mkN "stockpot" "stockpots";
lin stockroom_N = mkN "stockroom" "stockrooms";
lin stocks_N = mkN "stocks" ;
lin stocksbridge_PN = mkPN "Stocksbridge";
lin stocktake_N = mkN "stocktake" ;
lin stocktaker_N = mkN "stocktaker" ;
lin stocktaking_N = mkN "stocktaking" "stocktakings";
lin stocky_A = mkA "stocky" "stockier";
lin stockyard_N = mkN "stockyard" "stockyards";
lin stodge_N = mkN "stodge" ;
lin stodginess_N = mkN "stodginess" ;
lin stodgy_A = mkA "stodgy" "stodgier";
lin stoep_N = mkN "stoep" "stoeps";
lin stogy_N = mkN "stogy" ;
lin stoic_A = mkA "stoic" ;
lin stoic_N = mkN "stoic" "stoics";
lin stoical_A = compoundA (mkA "stoical");
lin stoichiometric_A = mkA "stoichiometric" ;
lin stoichiometry_N = mkN "stoichiometry" ;
lin stoicism_N = mkN "stoicism" ;
lin stoke_V = mkV "stoke" "stokes" "stoked" "stoked" "stoking";
lin stoke_V2 = mkV2 (mkV "stoke" "stokes" "stoked" "stoked" "stoking");
lin stoke_on_trent_PN = mkPN "Stoke-on-trent";
lin stokehold_N = mkN "stokehold" "stokeholds";
lin stokehole_N = mkN "stokehole" "stokeholes";
lin stoker_N = mkN "stoker" "stokers";
lin stole_N = mkN "stole" "stoles";
lin stolid_A = compoundA (mkA "stolid");
lin stolidity_N = mkN "stolidity" ;
lin stolidness_N = mkN "stolidness" ;
lin stolon_N = mkN "stolon" ;
lin stoloniferous_A = mkA "stoloniferous" ;
lin stoma_N = mkN "stoma" ;
lin stomach_N = mkN "stomach" "stomachs";
lin stomach_V2 = mkV2 (mkV "stomach" "stomachs" "stomached" "stomached" "stomaching");
lin stomach_ache_N = mkN "stomach-ache" "stomach-aches";
lin stomach_pump_N = mkN "stomach-pump" "stomach-pumps";
lin stomachache_N = mkN "stomachache" ;
lin stomacher_N = mkN "stomacher" ;
lin stomatal_A = mkA "stomatal" ;
lin stomatitis_N = mkN "stomatitis" ;
lin stomatopod_N = mkN "stomatopod" ;
lin stomatous_A = mkA "stomatous" ;
lin stomp_N = mkN "stomp" "stomps";
lin stomp_V = mkV "stomp" "stomps" "stomped" "stomped" "stomping";
lin stomp_V2 = mkV2 (mkV "stomp" "stomps" "stomped" "stomped" "stomping");
lin stone_A = mkA "stone" ;
lin stone_N = mkN "stone" "stones";
lin stone_PN = mkPN "Stone";
lin stone_V2 = mkV2 (mkV "stone" "stones" "stoned" "stoned" "stoning");
lin stone_blind_A = compoundA (mkA "stone-blind");
lin stone_cold_A = compoundA (mkA "stone-cold");
lin stone_dead_A = compoundA (mkA "stone-dead");
lin stone_deaf_A = compoundA (mkA "stone-deaf");
lin stone_fruit_N = mkN "stone-fruit" "stone-fruits";
lin stone_pit_N = mkN "stone-pit" "stone-pits";
lin stone_sober_A = compoundA (mkA "stone-sober");
lin stonebreaker_N = mkN "stonebreaker" "stonebreakers";
lin stonechat_N = mkN "stonechat" ;
lin stonecress_N = mkN "stonecress" ;
lin stonecrop_N = mkN "stonecrop" ;
lin stonecutter_N = mkN "stonecutter" ;
lin stonefish_N = mkN "stonefish" ;
lin stonefly_N = mkN "stonefly" ;
lin stonehouse_PN = mkPN "Stonehouse";
lin stoneless_A = compoundA (mkA "stoneless");
lin stonemason_N = mkN "stonemason" "stonemasons";
lin stoner_N = mkN "stoner" ;
lin stonewall_V2 = mkV2 (mkV "stonewall" "stonewalls" "stonewalled" "stonewalled" "stonewalling");
lin stonewaller_N = mkN "stonewaller" "stonewallers";
lin stonewalling_N = mkN "stonewalling" ;
lin stoneware_N = mkN "stoneware" ;
lin stonework_N = mkN "stonework" ;
lin stonewort_N = mkN "stonewort" ;
lin stoning_N = mkN "stoning" ;
lin stony_A = mkA "stony" "stonier";
lin stony_broke_A = compoundA (mkA "stony-broke");
lin stood_V2V = mkV2V (mkV "stood") noPrep to_Prep ;
lin stooge_N = mkN "stooge" "stooges";
lin stooge_V = mkV "stooge" "stooges" "stooged" "stooged" "stooging";
lin stool_N = mkN "stool" "stools";
lin stoop_N = mkN "stoop" "stoops";
lin stoop_V = mkV "stoop" "stoops" "stooped" "stooped" "stooping";
lin stoop_V2 = mkV2 (mkV "stoop" "stoops" "stooped" "stooped" "stooping");
lin stooper_N = mkN "stooper" ;
lin stop_N = mkN "stop" "stops";
lin stop_V = mkV "stop" "stops" "stopped" "stopped" "stopping";
lin stop_V2 = mkV2 (mkV "stop" "stops" "stopped" "stopped" "stopping");
lin stop_VV = ingVV (mkV "stop" "stops" "stopped" "stopped" "stopping");
lin stopcock_N = mkN "stopcock" "stopcocks";
lin stopgap_N = mkN "stopgap" "stopgaps";
lin stoplight_N = mkN "stoplight" ;
lin stopover_N = mkN "stopover" "stopovers";
lin stoppable_A = mkA "stoppable" ;
lin stoppage_N = mkN "stoppage" "stoppages";
lin stopper_N = mkN "stopper" "stoppers";
lin stoppered_A = mkA "stoppered" ;
lin stopping_N = mkN "stopping" "stoppings";
lin stopwatch_N = mkN "stopwatch" "stopwatches";
lin storage_N = mkN "storage" ;
lin storax_N = mkN "storax" ;
lin store_N = mkN "store" "stores";
lin store_V2 = mkV2 (mkV "store" "stores" "stored" "stored" "storing");
lin storehouse_N = mkN "storehouse" "storehouses";
lin storeroom_N = mkN "storeroom" "storerooms";
lin storey_N = mkN "storey" "storeys";
lin storeyed_A = compoundA (mkA "storeyed");
lin storied_A = compoundA (mkA "storied");
lin stork_N = mkN "stork" "storks";
lin storksbill_N = mkN "storksbill" ;
lin storm_N = mkN "storm" "storms";
lin storm_V = mkV "storm" "storms" "stormed" "stormed" "storming";
lin storm_V2 = mkV2 (mkV "storm" "storms" "stormed" "stormed" "storming");
lin storm_beaten_A = compoundA (mkA "storm-beaten");
lin storm_bound_A = compoundA (mkA "storm-bound");
lin storm_centre_N = mkN "storm-centre" "storm-centres";
lin storm_cloud_N = mkN "storm-cloud" "storm-clouds";
lin storm_cone_N = mkN "storm-cone" "storm-cones";
lin storm_lantern_N = mkN "storm-lantern" "storm-lanterns";
lin storm_signal_N = mkN "storm-signal" "storm-signals";
lin storm_tossed_A = compoundA (mkA "storm-tossed");
lin storm_trooper_N = mkN "storm-trooper" "storm-troopers";
lin stormbound_A = mkA "stormbound" ;
lin storminess_N = mkN "storminess" ;
lin stormproof_A = compoundA (mkA "stormproof");
lin stormy_A = mkA "stormy" "stormier";
lin stornoway_PN = mkPN "Stornoway";
lin story_N = mkN "story" "stories";
lin storybook_N = mkN "storybook" ;
lin storyline_N = mkN "storyline" ;
lin storyteller_N = mkN "storyteller" "storytellers";
lin stotfold_PN = mkPN "Stotfold";
lin stotinka_N = mkN "stotinka" ;
lin stoup_N = mkN "stoup" "stoups";
lin stourbridge_PN = mkPN "Stourbridge";
lin stourport_on_severn_PN = mkPN "Stourport-on-severn";
lin stout_A = mkA "stout" "stouter";
lin stout_N = mkN "stout" ;
lin stouthearted_A = compoundA (mkA "stouthearted");
lin stoutheartedness_N = mkN "stoutheartedness" ;
lin stoutness_N = mkN "stoutness" ;
lin stove_N = mkN "stove" "stoves";
lin stovepipe_N = mkN "stovepipe" "stovepipes";
lin stovepiped_A = mkA "stovepiped" ;
lin stovepiping_N = mkN "stovepiping" ;
lin stover_N = mkN "stover" ;
lin stow_V2 = mkV2 (mkV "stow" "stows" "stowed" "stowed" "stowing");
lin stowage_N = mkN "stowage" ;
lin stowaway_N = mkN "stowaway" "stowaways";
lin stowmarket_PN = mkPN "Stowmarket";
lin strabismus_N = mkN "strabismus" ;
lin strabotomy_N = mkN "strabotomy" ;
lin straddle_N = mkN "straddle" ;
lin straddle_V = mkV "straddle" "straddles" "straddled" "straddled" "straddling";
lin straddle_V2 = mkV2 (mkV "straddle" "straddles" "straddled" "straddled" "straddling");
lin strafe_N = mkN "strafe" ;
lin strafe_V2 = mkV2 (mkV "strafe" "strafes" "strafed" "strafed" "strafing");
lin strafer_N = mkN "strafer" ;
lin straggle_N = mkN "straggle" ;
lin straggle_V = mkV "straggle" "straggles" "straggled" "straggled" "straggling";
lin straggler_N = mkN "straggler" "stragglers";
lin straggly_A = mkA "straggly" "stragglier";
lin straight_A = compoundA (mkA "straight");
lin straight_Adv = mkAdv "straight";
lin straight_N = mkN "straight" "straights";
lin straightaway_N = mkN "straightaway" ;
lin straightedge_N = mkN "straightedge" ;
lin straighten_V = mkV "straighten" "straightens" "straightened" "straightened" "straightening";
lin straighten_V2 = mkV2 (mkV "straighten" "straightens" "straightened" "straightened" "straightening");
lin straightener_N = mkN "straightener" ;
lin straightforward_A = compoundA (mkA "straightforward");
lin straightness_N = mkN "straightness" ;
lin straightway_Adv = mkAdv "straightway";
lin strain_N = mkN "strain" "strains";
lin strain_V = mkV "strain" "strains" "strained" "strained" "straining";
lin strain_V2 = mkV2 (mkV "strain" "strains" "strained" "strained" "straining");
lin strainer_N = mkN "strainer" "strainers";
lin strait_A = compoundA (mkA "strait");
lin strait_N = mkN "strait" "straits";
lin strait_laced_A = compoundA (mkA "strait-laced");
lin straiten_V2 = mkV2 (mkV "straiten" "straitens" "straitened" "straitened" "straitening");
lin straitjacket_N = mkN "straitjacket" "straitjackets";
lin strand_N = mkN "strand" "strands";
lin strand_V = mkV "strand" "strands" "stranded" "stranded" "stranding";
lin strand_V2 = mkV2 (mkV "strand" "strands" "stranded" "stranded" "stranding");
lin strange_A = mkA "strange" "stranger";
lin strangeness_N = mkN "strangeness" ;
lin stranger_N = mkN "stranger" "strangers";
lin strangle_V2 = mkV2 (mkV "strangle" "strangles" "strangled" "strangled" "strangling");
lin stranglehold_N = mkN "stranglehold" "strangleholds";
lin strangler_N = mkN "strangler" ;
lin strangulation_N = mkN "strangulation" ;
lin stranraer_PN = mkPN "Stranraer";
lin strap_N = mkN "strap" "straps";
lin strap_V2 = mkV2 (mkV "strap" "straps" "strapped" "strapped" "strapping");
lin straphanger_N = mkN "straphanger" "straphangers";
lin strapless_A = mkA "strapless" ;
lin strapless_N = mkN "strapless" ;
lin straplike_A = mkA "straplike" ;
lin strappado_N = mkN "strappado" ;
lin strapping_A = compoundA (mkA "strapping");
lin strapping_N = mkN "strapping" "IRREG";
lin strasbourg_PN = mkPN "Strasbourg";
lin stratagem_N = mkN "stratagem" "stratagems";
lin strategic_A = compoundA (mkA "strategic");
lin strategical_A = compoundA (mkA "strategical");
lin strategics_N = mkN "strategics" "strategics";
lin strategist_N = mkN "strategist" "strategists";
lin strategy_N = mkN "strategy" "strategies";
lin stratford_on_avon_PN = mkPN "Stratford-on-avon";
lin strathaven_PN = mkPN "Strathaven";
lin strathclyde_PN = mkPN "Strathclyde";
lin stratification_N = mkN "stratification" "stratifications";
lin stratify_V = mkV "stratify" "stratifies" "stratified" "stratified" "stratifying";
lin stratify_V2 = mkV2 (mkV "stratify" "stratifies" "stratified" "stratified" "stratifying");
lin stratigraphy_N = mkN "stratigraphy" ;
lin stratosphere_N = mkN "stratosphere" "stratospheres";
lin stratum_N = mkN "stratum" "strata" {- FIXME: guessed plural form -};
lin stratus_N = mkN "stratus" ;
lin straw_A = mkA "straw" ;
lin straw_N = mkN "straw" "straws";
lin straw_V2 = mkV2 (mkV "straw" "straws" "strawed" "strawed" "strawing");
lin straw_coloured_A = compoundA (mkA "straw-coloured");
lin strawberry_N = mkN "strawberry" "strawberries";
lin strawboard_N = mkN "strawboard" ;
lin strawflower_N = mkN "strawflower" ;
lin strawworm_N = mkN "strawworm" ;
lin stray_A = mkA "stray" ;
lin stray_N = mkN "stray" "strays";
lin stray_V = mkV "stray" "strays" "strayed" "strayed" "straying";
lin streak_N = mkN "streak" "streaks";
lin streak_V = mkV "streak" "streaks" "streaked" "streaked" "streaking";
lin streak_V2 = mkV2 (mkV "streak" "streaks" "streaked" "streaked" "streaking");
lin streaker_N = mkN "streaker" ;
lin streaky_A = mkA "streaky" "streakier";
lin stream_N = mkN "stream" "streams";
lin stream_V = mkV "stream" "streams" "streamed" "streamed" "streaming";
lin streambed_N = mkN "streambed" ;
lin streamer_N = mkN "streamer" "streamers";
lin streamlet_N = mkN "streamlet" "streamlets";
lin streamline_V = mkV "streamline";
lin streamline_V2 = mkV2 (mkV "streamline" "streamlines" "streamlined" "streamlined" "streamlining");
lin streamliner_N = mkN "streamliner" ;
lin street_N = mkN "street" "streets";
lin street_PN = mkPN "Street";
lin street_girl_N = mkN "street-girl" "street-girls";
lin street_urchin_N = mkN "street-urchin" "street-urchins";
lin streetcar_N = mkN "streetcar" "streetcars";
lin streetlight_N = mkN "streetlight" ;
lin streetwalker_N = mkN "streetwalker" "streetwalkers";
lin streetwise_A = mkA "streetwise" ;
lin strength_N = mkN "strength" "strengths";
lin strengthen_V = mkV "strengthen" "strengthens" "strengthened" "strengthened" "strengthening";
lin strengthen_V2 = mkV2 (mkV "strengthen" "strengthens" "strengthened" "strengthened" "strengthening");
lin strengthener_N = mkN "strengthener" ;
lin strengthening_N = mkN "strengthening" ;
lin strenuous_A = compoundA (mkA "strenuous");
lin strenuousness_N = mkN "strenuousness" ;
lin streptobacillus_N = mkN "streptobacillus" ;
lin streptocarpus_N = mkN "streptocarpus" ;
lin streptococcal_A = mkA "streptococcal" ;
lin streptococcus_N = mkN "streptococcus" "streptococci" {- FIXME: guessed plural form -};
lin streptodornase_N = mkN "streptodornase" ;
lin streptokinase_N = mkN "streptokinase" ;
lin streptolysin_N = mkN "streptolysin" ;
lin streptomyces_N = mkN "streptomyces" ;
lin streptomycin_N = mkN "streptomycin" ;
lin streptothricin_N = mkN "streptothricin" ;
lin stress_N = mkN "stress" "stresses";
lin stress_V2 = mkV2 (mkV "stress" "stresses" "stressed" "stressed" "stressing");
lin stress_VS = mkVS (mkV "stress");
lin stress_mark_N = mkN "stress-mark" "stress-marks";
lin stressor_N = mkN "stressor" ;
lin stretch_A = mkA "stretch" ;
lin stretch_N = mkN "stretch" "stretches";
lin stretch_V = mkV "stretch" "stretches" "stretched" "stretched" "stretching";
lin stretch_V2 = mkV2 (mkV "stretch" "stretches" "stretched" "stretched" "stretching");
lin stretchable_A = mkA "stretchable" ;
lin stretcher_N = mkN "stretcher" "stretchers";
lin stretcher_bearer_N = mkN "stretcher-bearer" "stretcher-bearers";
lin stretcher_party_N = mkN "stretcher-party" "stretcher-parties";
lin stretching_N = mkN "stretching" ;
lin stretford_PN = mkPN "Stretford";
lin streusel_N = mkN "streusel" ;
lin strew_V2 = mkV2 (mkV "strew" "strews" "strewed" "strewed" "strewing");
lin stria_N = mkN "stria" ;
lin striate_A = mkA "striate" ;
lin striated_A = compoundA (mkA "striated");
lin stricken_A = compoundA (mkA "stricken");
lin strickle_N = mkN "strickle" ;
lin strict_A = mkA "strict" "stricter";
lin strictness_N = mkN "strictness" ;
lin stricture_N = mkN "stricture" "strictures";
lin stride_N = mkN "stride" "strides";
lin stride_V = IrregEng.stride_V;
lin stride_V2 = mkV2 (IrregEng.stride_V);
lin strident_A = compoundA (mkA "strident");
lin strider_N = mkN "strider" ;
lin stridor_N = mkN "stridor" ;
lin stridulate_V = mkV "stridulate" "stridulates" "stridulated" "stridulated" "stridulating";
lin stridulation_N = mkN "stridulation" "stridulations";
lin strife_N = mkN "strife" ;
lin strike_1_N = mkN "strike" "strikes";
lin strike_2_N = mkN "strike" "strikes";
lin strike_V = IrregEng.strike_V;
lin strike_V2 = mkV2 (IrregEng.strike_V);
lin strike_leader_N = mkN "strike-leader" "strike-leaders";
lin strike_pay_N = mkN "strike-pay" ;
lin strikebound_A = compoundA (mkA "strikebound");
lin strikebreaker_N = mkN "strikebreaker" "strikebreakers";
lin strikebreaking_N = mkN "strikebreaking" ;
lin strikeout_N = mkN "strikeout" ;
lin striker_N = mkN "striker" "strikers";
lin striking_A = mkA "striking" ;
lin string_N = mkN "string" "strings";
lin string_V = IrregEng.string_V;
lin string_V2 = mkV2 (IrregEng.string_V);
lin stringency_N = mkN "stringency" "stringencies";
lin stringent_A = compoundA (mkA "stringent");
lin stringer_N = mkN "stringer" ;
lin stringy_A = mkA "stringy" "stringier";
lin stringybark_N = mkN "stringybark" ;
lin strip_N = mkN "strip" "strips";
lin strip_V = mkV "strip" "strips" "stripped" "stripped" "stripping";
lin strip_V2 = mkV2 (mkV "strip" "strips" "stripped" "stripped" "stripping");
lin strip_lighting_N = mkN "strip-lighting" ;
lin strip_poker_N = mkN "strip-poker" ;
lin strip_show_N = mkN "strip-show" "strip-shows";
lin stripe_N = mkN "stripe" "stripes";
lin striped_A = compoundA (mkA "striped");
lin striper_N = mkN "striper" ;
lin striping_N = mkN "striping" ;
lin stripling_N = mkN "stripling" "striplings";
lin stripper_N = mkN "stripper" "strippers";
lin striptease_N = mkN "striptease" ;
lin stripy_A = mkA "stripy" "stripier";
lin strive_V = IrregEng.strive_V;
lin strive_VV = mkVV (IrregEng.strive_V);
lin striver_N = mkN "striver" "strivers";
lin striving_N = mkN "striving" ;
lin stroboscope_N = mkN "stroboscope" "stroboscopes";
lin stroke_N = mkN "stroke" "strokes";
lin stroke_V2 = mkV2 (mkV "stroke" "strokes" "stroked" "stroked" "stroking");
lin stroll_N = mkN "stroll" "strolls";
lin stroll_V = mkV "stroll" "strolls" "strolled" "strolled" "strolling";
lin stroller_N = mkN "stroller" "strollers";
lin stroma_N = mkN "stroma" ;
lin strong_A = mkA "strong" "stronger";
lin strong_arm_A = compoundA (mkA "strong-arm");
lin strong_boned_A = compoundA (mkA "strong-boned");
lin strong_minded_A = compoundA (mkA "strong-minded");
lin strongbox_N = mkN "strongbox" "strongboxes";
lin stronghold_N = mkN "stronghold" "strongholds";
lin strongman_N = mkN masculine (mkN "strongman" "strongmen");
lin strongroom_N = mkN "strongroom" "strongrooms";
lin strontianite_N = mkN "strontianite" ;
lin strontium_N = mkN "strontium" ;
lin strop_N = mkN "strop" "strops";
lin strop_V2 = mkV2 (mkV "strop" "strops" "stropped" "stropped" "stropping");
lin strophanthin_N = mkN "strophanthin" ;
lin strophanthus_N = mkN "strophanthus" ;
lin strophe_N = mkN "strophe" "strophes";
lin stroppy_A = compoundA (mkA "stroppy");
lin stroud_PN = mkPN "Stroud";
lin structural_A = compoundA (mkA "structural");
lin structuralism_N = mkN "structuralism" ;
lin structure_N = mkN "structure" "structures";
lin structure_V2 = mkV2 (mkV "structure");
lin strudel_N = mkN "strudel" "strudels";
lin struggle_N = mkN "struggle" "struggles";
lin struggle_V = mkV "struggle" "struggles" "struggled" "struggled" "struggling";
lin struggle_VS = mkVS (mkV "struggle" "struggles" "struggled" "struggled" "struggling");
lin struggle_VV = mkVV (mkV "struggle" "struggles" "struggled" "struggled" "struggling");
lin struggler_N = mkN "struggler" ;
lin strum_N = mkN "strum" "strums";
lin strum_V = mkV "strum" "strums" "strummed" "strummed" "strumming";
lin strum_V2 = mkV2 (mkV "strum" "strums" "strummed" "strummed" "strumming");
lin strumpet_N = mkN "strumpet" "strumpets";
lin strut_N = mkN "strut" "struts";
lin strut_V = mkV "strut" "struts" "strutted" "strutted" "strutting";
lin struthiomimus_N = mkN "struthiomimus" ;
lin strychnine_N = mkN "strychnine" ;
lin stuart_PN = mkPN "Stuart";
lin stub_N = mkN "stub" "stubs";
lin stub_V2 = mkV2 (mkV "stub" "stubs" "stubbed" "stubbed" "stubbing");
lin stubble_N = mkN "stubble" ;
lin stubbly_A = mkA "stubbly" "stubblier";
lin stubborn_A = compoundA (mkA "stubborn");
lin stubbornness_N = mkN "stubbornness" ;
lin stubby_A = mkA "stubby" "stubbier";
lin stucco_N = mkN "stucco" "stuccos";
lin stucco_V2 = mkV2 (mkV "stucco" "stuccos" "stuccoed" "stuccoed" "stuccoing");
lin stuck_V2 = mkV2 (IrregEng.stick_V);
lin stuck_up_A = compoundA (mkA "stuck-up");
lin stud_N = mkN "stud" "studs";
lin stud_V2 = mkV2 (mkV "stud" "studs" "studded" "studded" "studding");
lin stud_farm_N = mkN "stud-farm" "stud-farms";
lin stud_mare_N = mkN "stud-mare" "stud-mares";
lin studbook_N = mkN "studbook" "studbooks";
lin studentMasc_N = mkN masculine (mkN "student" "students");
lin studentFem_N = mkN feminine (mkN "student" "students");
lin studentship_N = mkN "studentship" ;
lin studio_N = mkN "studio" "studios";
lin studious_A = compoundA (mkA "studious");
lin studiousness_N = mkN "studiousness" ;
lin studley_PN = mkPN "Studley";
lin study_N = mkN "study" "studies";
lin study_V = mkV "study" "studies" "studied" "studied" "studying";
lin study_V2 = mkV2 (mkV "study" "studies" "studied" "studied" "studying");
lin stuff_N = mkN "stuff" "stuffs";
lin stuff_V2 = mkV2 (mkV "stuff" "stuffs" "stuffed" "stuffed" "stuffing");
lin stuffer_N = mkN "stuffer" ;
lin stuffiness_N = mkN "stuffiness" ;
lin stuffing_N = mkN "stuffing" ;
lin stuffy_A = mkA "stuffy" "stuffier";
lin stultification_N = mkN "stultification" "stultifications";
lin stultify_V2 = mkV2 (mkV "stultify" "stultifies" "stultified" "stultified" "stultifying");
lin stumble_N = mkN "stumble" "stumbles";
lin stumble_V = mkV "stumble" "stumbles" "stumbled" "stumbled" "stumbling";
lin stumblebum_N = mkN "stumblebum" ;
lin stumbler_N = mkN "stumbler" ;
lin stumbling_block_N = mkN "stumbling-block" "stumbling-blocks";
lin stump_N = mkN "stump" "stumps";
lin stump_V = mkV "stump" "stumps" "stumped" "stumped" "stumping";
lin stump_V2 = mkV2 (mkV "stump" "stumps" "stumped" "stumped" "stumping");
lin stumper_N = mkN "stumper" "stumpers";
lin stumping_N = mkN "stumping" ;
lin stumpy_A = mkA "stumpy" "stumpier";
lin stun_V2 = mkV2 (mkV "stun" "stuns" "stunned" "stunned" "stunning");
lin stun_V2S = mkV2S (mkV "stun" "stuns" "stunned" "stunned" "stunning") noPrep;
lin stunne_V2V = mkV2V (mkV "stunne") noPrep to_Prep ;
lin stunner_N = mkN "stunner" "stunners";
lin stunning_A = compoundA (mkA "stunning");
lin stunt_N = mkN "stunt" "stunts";
lin stunt_V2 = mkV2 (mkV "stunt" "stunts" "stunted" "stunted" "stunting");
lin stupa_N = mkN "stupa" ;
lin stupefaction_N = mkN "stupefaction" ;
lin stupefy_V2 = mkV2 (mkV "stupefy" "stupefies" "stupefied" "stupefied" "stupefying");
lin stupefying_A = mkA "stupefying" ;
lin stupendous_A = compoundA (mkA "stupendous");
lin stupid_A = compoundA (mkA "stupid");
lin stupid_N = mkN human (mkN "stupid" "IRREG");
lin stupidity_N = mkN "stupidity" "stupidities";
lin stupify_V2 = mkV2 (mkV "stupify" "stupifies" "stupified" "stupified" "stupifying");
lin stupifying_A = compoundA (mkA "stupifying");
lin stupor_N = mkN "stupor" "stupors";
lin sturdiness_N = mkN "sturdiness" ;
lin sturdy_A = mkA "sturdy" "sturdier";
lin sturgeon_N = mkN "sturgeon" "sturgeons";
lin stutter_N = mkN "stutter" "stutters";
lin stutter_V = mkV "stutter" "stutters" "stuttered" "stuttered" "stuttering";
lin stutter_V2 = mkV2 (mkV "stutter" "stutters" "stuttered" "stuttered" "stuttering");
lin stutterer_N = mkN "stutterer" "stutterers";
lin stutteringly_Adv = mkAdv "stutteringly";
lin stuttgart_PN = mkPN "Stuttgart";
lin sty_N = mkN "sty" "sties";
lin stye_N = mkN "stye" "styes";
lin stygian_A = compoundA (mkA "stygian");
lin style_N = mkN "style" "styles";
lin style_V2 = mkV2 (mkV "style" "styles" "styled" "styled" "styling");
lin styleless_A = mkA "styleless" ;
lin stylet_N = mkN "stylet" ;
lin stylish_A = compoundA (mkA "stylish");
lin stylishness_N = mkN "stylishness" ;
lin stylist_N = mkN "stylist" "stylists";
lin stylistic_A = compoundA (mkA "stylistic");
lin stylistically_Adv = mkAdv "stylistically";
lin stylite_N = mkN "stylite" ;
lin stylization_N = mkN "stylization" "stylizations";
lin stylize_V2 = mkV2 (mkV "stylize" "stylizes" "stylized" "stylized" "stylizing");
lin stylopodium_N = mkN "stylopodium" ;
lin stylus_N = mkN "stylus" "styluses";
lin stymie_N = mkN "stymie" "stymies";
lin stymie_V2 = mkV2 (mkV "stymie" "IRREG" "IRREG" "IRREG" "IRREG");
lin stymy_V2 = mkV2 (mkV "stymy");
lin styptic_A = compoundA (mkA "styptic");
lin styptic_N = mkN "styptic" "styptics";
lin styracosaur_N = mkN "styracosaur" ;
lin styrax_N = mkN "styrax" ;
lin styrene_N = mkN "styrene" ;
lin styx_PN = mkPN "Styx";
lin suasion_N = mkN "suasion" ;
lin suave_A = compoundA (mkA "suave");
lin suavity_N = mkN "suavity" ;
lin sub_N = mkN "sub" "subs";
lin sub_V = mkV "sub" "subs" "subbed" "subbed" "subbing";
lin sub_V2 = mkV2 (mkV "sub" "subs" "subbed" "subbed" "subbing");
lin sub_judice_A = compoundA (mkA "sub judice");
lin sub_rosa_Adv = mkAdv "sub rosa";
lin sub_underwrite_V2 = mkV2 (mkV "sub-underwrite");
lin subacid_A = mkA "subacid" ;
lin subacute_A = mkA "subacute" ;
lin subaltern_N = mkN "subaltern" "subalterns";
lin subaqueous_A = mkA "subaqueous" ;
lin subarctic_A = mkA "subarctic" ;
lin subartesian_A = mkA "subartesian" ;
lin subatomic_A = compoundA (mkA "subatomic");
lin subbase_N = mkN "subbase" ;
lin subbing_N = mkN "subbing" ;
lin subclass_N = mkN "subclass" ;
lin subclavian_A = mkA "subclavian" ;
lin subclinical_A = mkA "subclinical" ;
lin subcommittee_N = mkN "subcommittee" "subcommittees";
lin subcompact_N = mkN "subcompact" ;
lin subconscious_A = compoundA (mkA "subconscious");
lin subconscious_N = mkN "subconscious" "subconscioi" {- FIXME: guessed plural form -};
lin subconsciousness_N = mkN "subconsciousness" ;
lin subcontinent_N = mkN "subcontinent" "subcontinents";
lin subcontract_N = mkN "subcontract" "subcontracts";
lin subcontract_V = mkV "subcontract" "subcontracts" "subcontracted" "subcontracted" "subcontracting";
lin subcontract_V2 = mkV2 (mkV "subcontract" "subcontracts" "subcontracted" "subcontracted" "subcontracting");
lin subcontractor_N = mkN "subcontractor" "subcontractors";
lin subcortical_A = mkA "subcortical" ;
lin subculture_N = mkN "subculture" ;
lin subcutaneous_A = compoundA (mkA "subcutaneous");
lin subdeacon_N = mkN "subdeacon" ;
lin subdirectory_N = mkN "subdirectory" ;
lin subdivide_V = mkV "subdivide" "subdivides" "subdivided" "subdivided" "subdividing";
lin subdivide_V2 = mkV2 (mkV "subdivide" "subdivides" "subdivided" "subdivided" "subdividing");
lin subdivider_N = mkN "subdivider" ;
lin subdivision_N = mkN "subdivision" "subdivisions";
lin subdominant_N = mkN "subdominant" ;
lin subduable_A = mkA "subduable" ;
lin subduction_N = mkN "subduction" ;
lin subdue_V2 = mkV2 (mkV "subdue" "subdues" "subdued" "subdued" "subduing");
lin subduer_N = mkN "subduer" ;
lin subdural_A = mkA "subdural" ;
lin subedit_V2 = mkV2 (mkV "subedit" "subedits" "subedited" "subedited" "subediting");
lin subeditor_N = mkN "subeditor" "subeditors";
lin subfamily_N = mkN "subfamily" ;
lin subfigure_N = mkN "subfigure" ;
lin subfusc_A = compoundA (mkA "subfusc");
lin subgenus_N = mkN "subgenus" ;
lin subgross_A = mkA "subgross" ;
lin subgroup_N = mkN "subgroup" "subgroups";
lin subheading_N = mkN "subheading" "subheadings";
lin subhuman_A = compoundA (mkA "subhuman");
lin subjacent_A = mkA "subjacent" ;
lin subject_A = mkA "subject" ;
lin subject_A2 = mkA2 (compoundA (mkA "subject")) to_Prep;
lin subject_N = mkN "subject" "subjects";
lin subject_V2 = mkV2 (mkV "subject" "subjects" "subjected" "subjected" "subjecting");
lin subject_to_Prep = mkPrep "subject to";
lin subjection_N = mkN "subjection" ;
lin subjective_A = compoundA (mkA "subjective");
lin subjectivism_N = mkN "subjectivism" ;
lin subjectivist_N = mkN "subjectivist" ;
lin subjectivity_N = mkN "subjectivity" ;
lin subjoin_V2 = mkV2 (mkV "subjoin" "subjoins" "subjoined" "subjoined" "subjoining");
lin subjugate_V2 = mkV2 (mkV "subjugate" "subjugates" "subjugated" "subjugated" "subjugating");
lin subjugation_N = mkN "subjugation" "subjugations";
lin subjugator_N = mkN "subjugator" ;
lin subjunctive_A = compoundA (mkA "subjunctive");
lin subjunctive_N = mkN "subjunctive" "subjunctives";
lin subkingdom_N = mkN "subkingdom" ;
lin sublease_N = mkN "sublease" "subleases";
lin sublease_V = mkV "sublease" "subleases" "subleased" "subleased" "subleasing";
lin sublease_V2 = mkV2 (mkV "sublease" "subleases" "subleased" "subleased" "subleasing");
lin sublet_V = mkV "sub" IrregEng.let_V;
lin sublet_V2 = mkV2 (mkV "sub" IrregEng.let_V);
lin sublieutenant_N = mkN "sublieutenant" "sublieutenants";
lin sublimate_A = compoundA (mkA "sublimate");
lin sublimate_N = mkN "sublimate" "sublimates";
lin sublimate_V2 = mkV2 (mkV "sublimate" "sublimates" "sublimated" "sublimated" "sublimating");
lin sublimation_N = mkN "sublimation" "sublimations";
lin sublime_A = compoundA (mkA "sublime");
lin sublime_N = mkN "sublime" "IRREG";
lin sublimed_A = mkA "sublimed" ;
lin subliminal_A = compoundA (mkA "subliminal");
lin sublimity_N = mkN "sublimity" ;
lin sublingual_A = mkA "sublingual" ;
lin subliterary_A = mkA "subliterary" ;
lin sublittoral_A = mkA "sublittoral" ;
lin sublunar_A = mkA "sublunar" ;
lin subluxation_N = mkN "subluxation" ;
lin submarine_A = compoundA (mkA "submarine");
lin submarine_N = mkN "submarine" "submarines";
lin submariner_N = mkN "submariner" "submariners";
lin submediant_N = mkN "submediant" ;
lin submerge_V = mkV "submerge" "submerges" "submerged" "submerged" "submerging";
lin submerge_V2 = mkV2 (mkV "submerge" "submerges" "submerged" "submerged" "submerging");
lin submergence_N = mkN "submergence" ;
lin submersible_A = compoundA (mkA "submersible");
lin submersible_N = mkN "submersible" ;
lin submersion_N = mkN "submersion" ;
lin submission_N = mkN "submission" "submissions";
lin submissive_A = compoundA (mkA "submissive");
lin submissiveness_N = mkN "submissiveness" ;
lin submit_V = mkV "submit" "submits" "submitted" "submitted" "submitting";
lin submit_V2 = mkV2 (mkV "submit" "submits" "submitted" "submitted" "submitting");
lin submitter_N = mkN "submitter" ;
lin submucosa_N = mkN "submucosa" ;
lin subnormal_A = compoundA (mkA "subnormal");
lin subnormal_N = mkN "subnormal" "subnormals";
lin subnormality_N = mkN "subnormality" ;
lin suboceanic_A = mkA "suboceanic" ;
lin suborbital_A = compoundA (mkA "suborbital");
lin suborder_N = mkN "suborder" ;
lin subordinate_A = compoundA (mkA "subordinate");
lin subordinate_N = mkN "subordinate" "subordinates";
lin subordinate_V2 = mkV2 (mkV "subordinate" "subordinates" "subordinated" "subordinated" "subordinating");
lin subordinateness_N = mkN "subordinateness" ;
lin subordination_N = mkN "subordination" "subordinations";
lin subordinative_A = compoundA (mkA "subordinative");
lin suborn_V2 = mkV2 (mkV "suborn" "suborns" "suborned" "suborned" "suborning");
lin subornation_N = mkN "subornation" ;
lin subpart_N = mkN "subpart" ;
lin subphylum_N = mkN "subphylum" ;
lin subpoena_N = mkN "subpoena" "subpoenas";
lin subpoena_V2 = mkV2 (mkV "subpoena" "subpoenas" "subpoenaed" "subpoenaed" "subpoenaing");
lin subpopulation_N = mkN "subpopulation" ;
lin subrogation_N = mkN "subrogation" ;
lin subscribe_V = mkV "subscribe" "subscribes" "subscribed" "subscribed" "subscribing";
lin subscribe_V2 = mkV2 (mkV "subscribe" "subscribes" "subscribed" "subscribed" "subscribing");
lin subscriber_N = mkN "subscriber" "subscribers";
lin subscript_A = mkA "subscript" ;
lin subscript_N = mkN "subscript" "subscripts";
lin subscription_N = mkN "subscription" "subscriptions";
lin subsection_N = mkN "subsection" "subsections";
lin subsequent_A = compoundA (mkA "subsequent");
lin subserve_V2 = mkV2 (mkV "subserve" "subserves" "subserved" "subserved" "subserving");
lin subservience_N = mkN "subservience" ;
lin subservient_A = compoundA (mkA "subservient");
lin subset_N = mkN "subset" ;
lin subshrub_N = mkN "subshrub" ;
lin subside_V = mkV "subside" "subsides" "subsided" "subsided" "subsiding";
lin subsidence_N = mkN "subsidence" "subsidences";
lin subsidiary_A = compoundA (mkA "subsidiary");
lin subsidiary_N = mkN "subsidiary" "subsidiaries";
lin subsidization_N = mkN "subsidization" ;
lin subsidize_V2 = mkV2 (mkV "subsidize" "subsidizes" "subsidized" "subsidized" "subsidizing");
lin subsidizer_N = mkN "subsidizer" ;
lin subsidy_N = mkN "subsidy" "subsidies";
lin subsist_V = mkV "subsist" "subsists" "subsisted" "subsisted" "subsisting";
lin subsistence_N = mkN "subsistence" ;
lin subsoil_N = mkN "subsoil" ;
lin subsonic_A = compoundA (mkA "subsonic");
lin subspace_N = mkN "subspace" ;
lin subspecies_N = mkN "subspecies" ;
lin substance_N = mkN "substance" "substances";
lin substandard_A = compoundA (mkA "substandard");
lin substantial_A = compoundA (mkA "substantial");
lin substantiality_N = mkN "substantiality" ;
lin substantiate_V2 = mkV2 (mkV "substantiate" "substantiates" "substantiated" "substantiated" "substantiating");
lin substantiation_N = mkN "substantiation" "substantiations";
lin substantival_A = compoundA (mkA "substantival");
lin substantive_A = compoundA (mkA "substantive");
lin substantive_N = mkN "substantive" "substantives";
lin substation_N = mkN "substation" "substations";
lin substitutable_A = mkA "substitutable" ;
lin substitute_N = mkN human (mkN "substitute" "substitutes");
lin substitute_V = mkV "substitute" "substitutes" "substituted" "substituted" "substituting";
lin substitute_V2 = mkV2 (mkV "substitute" "substitutes" "substituted" "substituted" "substituting");
lin substitution_N = mkN "substitution" "substitutions";
lin substrate_N = mkN "substrate" "substrates";
lin substratum_N = mkN "substratum" "substrata" {- FIXME: guessed plural form -};
lin substring_N = mkN "substring" ;
lin substructure_N = mkN "substructure" "substructures";
lin subsume_V2 = mkV2 (mkV "subsume" "subsumes" "subsumed" "subsumed" "subsuming");
lin subsumption_N = mkN "subsumption" ;
lin subsurface_A = mkA "subsurface" ;
lin subsystem_N = mkN "subsystem" ;
lin subtend_V2 = mkV2 (mkV "subtend" "subtends" "subtended" "subtended" "subtending");
lin subterfuge_N = mkN "subterfuge" "subterfuges";
lin subterminal_A = mkA "subterminal" ;
lin subterranean_A = compoundA (mkA "subterranean");
lin subthalamus_N = mkN "subthalamus" ;
lin subtilin_N = mkN "subtilin" ;
lin subtitle_N = mkN "subtitle" "subtitles";
lin subtitle_V3 = mkV3 (mkV "subtitle");
lin subtle_A = mkA "subtle" "subtler";
lin subtlety_N = mkN "subtlety" "subtleties";
lin subtly_Adv = mkAdv "subtly";
lin subtonic_N = mkN "subtonic" ;
lin subtopia_N = mkN "subtopia" ;
lin subtotal_N = mkN "subtotal" ;
lin subtract_V2 = mkV2 (mkV "subtract" "subtracts" "subtracted" "subtracted" "subtracting");
lin subtracter_N = mkN "subtracter" ;
lin subtraction_N = mkN "subtraction" "subtractions";
lin subtractive_A = mkA "subtractive" ;
lin subtrahend_N = mkN "subtrahend" ;
lin subtreasury_N = mkN "subtreasury" ;
lin subtropical_A = compoundA (mkA "subtropical");
lin subtropics_N = mkN "subtropics" ;
lin suburb_N = mkN "suburb" "suburbs";
lin suburban_A = compoundA (mkA "suburban");
lin suburbanite_N = mkN "suburbanite" ;
lin suburbanized_A = mkA "suburbanized" ;
lin suburbia_N = mkN "suburbia" ;
lin subvention_N = mkN "subvention" "subventions";
lin subversion_N = mkN "subversion" ;
lin subversive_A = compoundA (mkA "subversive");
lin subversive_N = mkN "subversive" "subversives";
lin subvert_V2 = mkV2 (mkV "subvert" "subverts" "subverted" "subverted" "subverting");
lin subvocalizer_N = mkN "subvocalizer" ;
lin subway_N = mkN "subway" "subways";
lin subwoofer_N = mkN "subwoofer" ;
lin succedaneum_N = mkN "succedaneum" ;
lin succeed_V = mkV "succeed" "succeeds" "succeeded" "succeeded" "succeeding";
lin succeed_V2 = mkV2 (mkV "succeed" "succeeds" "succeeded" "succeeded" "succeeding");
lin success_N = mkN "success" "successes";
lin successful_A = compoundA (mkA "successful");
lin succession_N = mkN "succession" "successions";
lin successive_A = compoundA (mkA "successive");
lin successor_N = mkN human (mkN "successor" "successors");
lin succinct_A = compoundA (mkA "succinct");
lin succinctness_N = mkN "succinctness" ;
lin succinic_A = mkA "succinic" ;
lin succinylcholine_N = mkN "succinylcholine" ;
lin succorer_N = mkN "succorer" ;
lin succotash_N = mkN "succotash" ;
lin succour_N = mkN "succour" ;
lin succour_V2 = mkV2 (mkV "succour" "succours" "succoured" "succoured" "succouring");
lin succubus_N = mkN "succubus" "succubuses";
lin succulence_N = mkN "succulence" ;
lin succulent_A = compoundA (mkA "succulent");
lin succulent_N = mkN "succulent" "succulents";
lin succumb_V = mkV "succumb" "succumbs" "succumbed" "succumbed" "succumbing";
lin succussion_N = mkN "succussion" ;
lin such_Adv = mkAdv "such" ;
lin such_Predet = ss "such";
lin such_as_Prep = mkPrep "such as";
lin suchlike_A = compoundA (mkA "suchlike");
lin suchow_PN = mkPN "Suchow";
lin suck_N = mkN "suck" "sucks";
lin suck_V = mkV "suck" "sucks" "sucked" "sucked" "sucking";
lin suck_V2 = mkV2 (mkV "suck" "sucks" "sucked" "sucked" "sucking");
lin suckerMasc_N = mkN masculine (mkN "sucker" "suckers");
lin suckerFem_N = mkN feminine (mkN "sucker" "suckers");
lin sucking_N = mkN "sucking" ;
lin sucking_pig_N = mkN "sucking-pig" "sucking-pigs";
lin suckle_V2 = mkV2 (mkV "suckle" "suckles" "suckled" "suckled" "suckling");
lin suckling_N = mkN "suckling" "sucklings";
lin sucralfate_N = mkN "sucralfate" ;
lin sucre_N = mkN "sucre" ;
lin sucrose_N = mkN "sucrose" ;
lin suction_N = mkN "suction" ;
lin suctorial_A = mkA "suctorial" ;
lin sudan_PN = mkPN "Sudan";
lin sudanese_A = compoundA (mkA "sudanese");
lin sudanese_N = mkN "sudanese" "sudanese";
lin sudatorium_N = mkN "sudatorium" ;
lin sudbury_PN = mkPN "Sudbury";
lin sudden_A = compoundA (mkA "sudden");
lin sudden_N = mkN "sudden" "IRREG";
lin suddenness_N = mkN "suddenness" ;
lin sudoku_N = mkN "sudoku" ;
lin sudorific_N = mkN "sudorific" ;
lin sudra_N = mkN "sudra" ;
lin suds_N = mkN "suds" ;
lin sue_PN = mkPN "Sue";
lin sue_V = mkV "sue" "sues" "sued" "sued" "suing";
lin sue_V2 = mkV2 (mkV "sue" "sues" "sued" "sued" "suing");
lin sue_V2V = mkV2V (mkV "sue" "sues" "sued" "sued" "suing") noPrep to_Prep ;
lin suede_N = mkN "suede" ;
lin suer_N = mkN "suer" ;
lin suet_N = mkN "suet" ;
lin suety_A = compoundA (mkA "suety");
lin suffer_V = mkV "suffer" "suffers" "suffered" "suffered" "suffering";
lin suffer_V2 = mkV2 (mkV "suffer" "suffers" "suffered" "suffered" "suffering");
lin sufferable_A = compoundA (mkA "sufferable");
lin sufferance_N = mkN "sufferance" ;
lin sufferer_N = mkN "sufferer" "sufferers";
lin suffering_N = mkN "suffering" "sufferings";
lin suffice_V = mkV "suffice" "suffices" "sufficed" "sufficed" "sufficing";
lin suffice_V2 = mkV2 (mkV "suffice" "suffices" "sufficed" "sufficed" "sufficing");
lin suffice_V2V = mkV2V (mkV "suffice" "suffices" "sufficed" "sufficed" "sufficing") noPrep to_Prep ;
lin sufficiency_N = mkN "sufficiency" ;
lin sufficient_A = compoundA (mkA "sufficient");
lin suffix_N = mkN "suffix" "suffixes";
lin suffixation_N = mkN "suffixation" ;
lin suffocate_V = mkV "suffocate" "suffocates" "suffocated" "suffocated" "suffocating";
lin suffocate_V2 = mkV2 (mkV "suffocate" "suffocates" "suffocated" "suffocated" "suffocating");
lin suffocation_N = mkN "suffocation" ;
lin suffolk_PN = mkPN "Suffolk";
lin suffragan_N = mkN "suffragan" "suffragans";
lin suffrage_N = mkN "suffrage" "suffrages";
lin suffragette_N = mkN "suffragette" "suffragettes";
lin suffragism_N = mkN "suffragism" ;
lin suffragist_N = mkN "suffragist" ;
lin suffrutescent_A = mkA "suffrutescent" ;
lin suffuse_V2 = mkV2 (mkV "suffuse" "suffuses" "suffused" "suffused" "suffusing");
lin suffusion_N = mkN "suffusion" ;
lin suffusive_A = mkA "suffusive" ;
lin sugar_N = mkN "sugar" "sugars";
lin sugar_V2 = mkV2 (mkV "sugar" "sugars" "sugared" "sugared" "sugaring");
lin sugar_beet_N = mkN "sugar-beet" "sugar-beet";
lin sugar_candy_N = mkN "sugar-candy" "sugar-candies";
lin sugar_cane_N = mkN "sugar-cane" ;
lin sugar_coated_A = compoundA (mkA "sugar-coated");
lin sugar_daddy_N = mkN "sugar-daddy" "sugar-daddies";
lin sugar_loaf_N = mkN "sugar-loaf" ;
lin sugar_refinery_N = mkN "sugar-refinery" "sugar-refineries";
lin sugarberry_N = mkN "sugarberry" ;
lin sugarcane_N = mkN "sugarcane" ;
lin sugariness_N = mkN "sugariness" ;
lin sugarless_A = mkA "sugarless" ;
lin sugarloaf_N = mkN "sugarloaf" ;
lin sugarlump_N = mkN "sugarlump" "sugarlumps";
lin sugarplum_N = mkN "sugarplum" ;
lin sugary_A = mkA "sugary" "sugarier";
lin suggest_V = mkV "suggest";
lin suggest_V2 = mkV2 (mkV "suggest" "suggests" "suggested" "suggested" "suggesting");
lin suggest_VS = mkVS (mkV "suggest");
lin suggester_N = mkN "suggester" ;
lin suggestibility_N = mkN "suggestibility" ;
lin suggestible_A = compoundA (mkA "suggestible");
lin suggestion_N = mkN "suggestion" "suggestions";
lin suggestive_A = compoundA (mkA "suggestive");
lin suicidal_A = compoundA (mkA "suicidal");
lin suicide_N = mkN "suicide" "suicides";
lin suit_N = mkN "suit" "suits";
lin suit_V = mkV "suit" "suits" "suited" "suited" "suiting";
lin suit_V2 = mkV2 (mkV "suit" "suits" "suited" "suited" "suiting");
lin suitability_N = mkN "suitability" ;
lin suitable_A = compoundA (mkA "suitable");
lin suitableness_N = mkN "suitableness" ;
lin suitcase_N = mkN "suitcase" "suitcases";
lin suite_N = mkN "suite" "suites";
lin suiting_N = mkN "suiting" ;
lin suitor_N = mkN "suitor" "suitors";
lin sukiyaki_N = mkN "sukiyaki" ;
lin suksdorfia_N = mkN "suksdorfia" ;
lin sulcate_A = mkA "sulcate" ;
lin sulcus_N = mkN "sulcus" ;
lin sulfacetamide_N = mkN "sulfacetamide" ;
lin sulfadiazine_N = mkN "sulfadiazine" ;
lin sulfamethazine_N = mkN "sulfamethazine" ;
lin sulfamethoxazole_N = mkN "sulfamethoxazole" ;
lin sulfanilamide_N = mkN "sulfanilamide" ;
lin sulfapyridine_N = mkN "sulfapyridine" ;
lin sulfate_N = mkN "sulfate" ;
lin sulfide_N = mkN "sulfide" ;
lin sulfisoxazole_N = mkN "sulfisoxazole" ;
lin sulfonate_N = mkN "sulfonate" ;
lin sulfonylurea_N = mkN "sulfonylurea" ;
lin sulfur_N = mkN "sulfur" ;
lin sulfurous_A = mkA "sulfurous" ;
lin sulindac_N = mkN "sulindac" ;
lin sulk_N = mkN "sulk" "sulks";
lin sulk_V = mkV "sulk" "sulks" "sulked" "sulked" "sulking";
lin sulkiness_N = mkN "sulkiness" ;
lin sulky_A = mkA "sulky" "sulkier";
lin sulky_N = mkN "sulky" "sulkies";
lin sullen_A = compoundA (mkA "sullen");
lin sullenness_N = mkN "sullenness" ;
lin sully_V2 = mkV2 (mkV "sully" "sullies" "sullied" "sullied" "sullying");
lin sulpha_N = mkN "sulpha" ;
lin sulphate_N = mkN "sulphate" "sulphates";
lin sulphide_N = mkN "sulphide" "sulphides";
lin sulphur_N = mkN "sulphur" ;
lin sulphuretted_A = compoundA (mkA "sulphuretted");
lin sulphuric_A = compoundA (mkA "sulphuric");
lin sulphurous_A = compoundA (mkA "sulphurous");
lin sultan_N = mkN "sultan" "sultans";
lin sultana_N = mkN "sultana" "sultanas";
lin sultanate_N = mkN "sultanate" "sultanates";
lin sultriness_N = mkN "sultriness" ;
lin sultry_A = mkA "sultry" "sultrier";
lin sum_N = mkN "sum" "sums";
lin sum_V = mkV "sum" "sums" "summed" "summed" "summing";
lin sum_V2 = mkV2 (mkV "sum" "sums" "summed" "summed" "summing");
lin sumac_N = mkN "sumac" ;
lin sumach_N = mkN "sumach" ;
lin sumatra_PN = mkPN "Sumatra";
lin sumatran_A = compoundA (mkA "sumatran");
lin sumatran_N = mkN "sumatran" "sumatrans";
lin summarization_N = mkN "summarization" ;
lin summarize_V2 = mkV2 (mkV "summarize" "summarizes" "summarized" "summarized" "summarizing");
lin summary_A = compoundA (mkA "summary");
lin summary_N = mkN "summary" "summaries";
lin summation_N = mkN "summation" "summations";
lin summational_A = mkA "summational" ;
lin summer_N = mkN "summer" "summers";
lin summer_V = mkV "summer" "summers" "summered" "summered" "summering";
lin summercaters_N = mkN "summercaters" ;
lin summerhouse_N = mkN "summerhouse" "summerhouses";
lin summertime_N = mkN "summertime" "summertimes";
lin summery_A = mkA "summery" "summerier";
lin summing_up_N = mkN "summing-up" "summing-ups";
lin summit_N = mkN "summit" "summits";
lin summon_V2 = mkV2 (mkV "summon" "summons" "summoned" "summoned" "summoning");
lin summons_N = mkN "summons" "summonses";
lin summons_V2 = mkV2 (mkV "summons" "summonses" "summonsed" "summonsed" "summonsing");
lin sumo_N = mkN "sumo" ;
lin sump_N = mkN "sump" "sumps";
lin sumpsimus_N = mkN "sumpsimus" ;
lin sumpter_N = mkN "sumpter" "sumpters";
lin sumptuary_A = compoundA (mkA "sumptuary");
lin sumptuous_A = compoundA (mkA "sumptuous");
lin sumptuousness_N = mkN "sumptuousness" ;
lin sun_N = mkN "sun" "suns";
lin sun_PN = mkPN "Sun";
lin sun_V2 = mkV2 (mkV "sun" "suns" "sunned" "sunned" "sunning");
lin sun_drenched_A = compoundA (mkA "sun-drenched");
lin sun_dried_A = compoundA (mkA "sun-dried");
lin sun_god_N = mkN "sun-god" "sun-gods";
lin sun_helmet_N = mkN "sun-helmet" "sun-helmets";
lin sun_lounge_N = mkN "sun-lounge" "sun-lounges";
lin sun_parlour_N = mkN "sun-parlour" "sun-parlours";
lin sun_porch_N = mkN "sun-porch" "sun-porches";
lin sun_up_N = mkN "sun-up" ;
lin sun_visor_N = mkN "sun-visor" "sun-visors";
lin sun_worship_N = mkN "sun-worship" ;
lin sunbaked_A = compoundA (mkA "sunbaked");
lin sunbathe_N = mkN "sunbathe" "IRREG";
lin sunbathe_V = mkV "sunbathe" "sunbathes" "sunbathed" "sunbathed" "sunbathing";
lin sunbather_N = mkN "sunbather" ;
lin sunbeam_N = mkN "sunbeam" "sunbeams";
lin sunblind_N = mkN "sunblind" "sunblinds";
lin sunbonnet_N = mkN "sunbonnet" "sunbonnets";
lin sunburn_N = mkN "sunburn" "sunburns";
lin sunburned_A = compoundA (mkA "sunburned");
lin sunburnt_A = compoundA (mkA "sunburnt");
lin sunburst_N = mkN "sunburst" "sunbursts";
lin sundae_N = mkN "sundae" "sundaes";
lin sunday_N = mkN "Sunday" "Sundays";
lin sunday_PN = mkPN "Sunday";
lin sunder_N = mkN "sunder" ;
lin sunder_V2 = mkV2 (mkV "sunder" "sunders" "sundered" "sundered" "sundering");
lin sunderland_PN = mkPN "Sunderland";
lin sundew_N = mkN "sundew" ;
lin sundial_N = mkN "sundial" "sundials";
lin sundown_N = mkN "sundown" ;
lin sundowner_N = mkN "sundowner" "sundowners";
lin sundress_N = mkN "sundress" ;
lin sundries_N = mkN "sundries" ;
lin sundrops_N = mkN "sundrops" ;
lin sundry_A = compoundA (mkA "sundry");
lin sunfish_N = mkN "sunfish" "sunfish";
lin sunflower_N = mkN "sunflower" "sunflowers";
lin sunglass_N = mkN "sunglass" ;
lin sunglasses_N = mkN "sunglasses" ;
lin sunhat_N = mkN "sunhat" "sunhats";
lin sunlamp_N = mkN "sunlamp" "sunlamps";
lin sunless_A = compoundA (mkA "sunless");
lin sunlight_N = mkN "sunlight" ;
lin sunlit_A = compoundA (mkA "sunlit");
lin sunniness_N = mkN "sunniness" ;
lin sunny_A = mkA "sunny" "sunnier";
lin sunray_A = compoundA (mkA "sunray");
lin sunray_N = mkN "sunray" ;
lin sunrise_N = mkN "sunrise" "sunrises";
lin sunroof_N = mkN "sunroof" "sunroofs";
lin sunscreen_N = mkN "sunscreen" ;
lin sunset_A = mkA "sunset" ;
lin sunset_N = mkN "sunset" "sunsets";
lin sunshade_N = mkN "sunshade" "sunshades";
lin sunshine_N = mkN "sunshine" ;
lin sunshine_roof_N = mkN "sunshine-roof" "sunshine-roofs";
lin sunspot_N = mkN "sunspot" "sunspots";
lin sunstone_N = mkN "sunstone" ;
lin sunstroke_N = mkN "sunstroke" ;
lin sunsuit_N = mkN "sunsuit" ;
lin suntan_N = mkN "suntan" "suntans";
lin suntrap_N = mkN "suntrap" "suntraps";
lin sup_N = mkN "sup" "sups";
lin sup_V = mkV "sup" "sups" "supped" "supped" "supping";
lin sup_V2 = mkV2 (mkV "sup" "sups" "supped" "supped" "supping");
lin super_A = compoundA (mkA "super");
lin super_N = mkN "super" "supers";
lin superabundance_N = mkN "superabundance" "IRREG";
lin superabundant_A = compoundA (mkA "superabundant");
lin superannuate_V2 = mkV2 (mkV "superannuate" "superannuates" "superannuated" "superannuated" "superannuating");
lin superannuation_N = mkN "superannuation" "superannuations";
lin superb_A = compoundA (mkA "superb");
lin superbug_N = mkN "superbug" ;
lin supercargo_N = mkN "supercargo" "supercargoes";
lin supercede_V2 = mkV2 (mkV "supercede");
lin supercharged_A = compoundA (mkA "supercharged");
lin supercharger_N = mkN "supercharger" "superchargers";
lin supercilious_A = compoundA (mkA "supercilious");
lin superciliousness_N = mkN "superciliousness" ;
lin superclass_N = mkN "superclass" ;
lin supercomputer_N = mkN "supercomputer" ;
lin superconductivity_N = mkN "superconductivity" ;
lin supercritical_A = mkA "supercritical" ;
lin superego_N = mkN "superego" ;
lin supererogation_N = mkN "supererogation" ;
lin superfamily_N = mkN "superfamily" ;
lin superfatted_A = compoundA (mkA "superfatted");
lin superfecta_N = mkN "superfecta" ;
lin superfecundation_N = mkN "superfecundation" ;
lin superfetation_N = mkN "superfetation" ;
lin superficial_A = compoundA (mkA "superficial");
lin superficiality_N = mkN "superficiality" "superficialities";
lin superficies_N = mkN "superficies" "superficies";
lin superfine_A = compoundA (mkA "superfine");
lin superfluity_N = mkN "superfluity" "superfluities";
lin superfluous_A = compoundA (mkA "superfluous");
lin supergiant_N = mkN "supergiant" ;
lin supergrass_N = mkN "supergrass" ;
lin superhighway_N = mkN "superhighway" ;
lin superhuman_A = compoundA (mkA "superhuman");
lin superimpose_V2 = mkV2 (mkV "superimpose" "superimposes" "superimposed" "superimposed" "superimposing");
lin superincumbent_A = mkA "superincumbent" ;
lin superinfection_N = mkN "superinfection" ;
lin superintend_V = mkV "superintend" "superintends" "superintended" "superintended" "superintending";
lin superintend_V2 = mkV2 (mkV "superintend" "superintends" "superintended" "superintended" "superintending");
lin superintendence_N = mkN "superintendence" ;
lin superintendent_N = mkN "superintendent" "superintendents";
lin superior_A = compoundA (mkA "superior");
lin superior_N = mkN "superior" "superiors";
lin superiority_N = mkN "superiority" ;
lin superjacent_A = mkA "superjacent" ;
lin superlative_A = compoundA (mkA "superlative");
lin superlative_N = mkN "superlative" "superlatives";
lin superman_N = mkN masculine (mkN "superman" "supermen");
lin supermarket_N = mkN "supermarket" "supermarkets";
lin supermarketer_N = mkN "supermarketer" ;
lin supermodel_N = mkN "supermodel" ;
lin supermom_N = mkN "supermom" ;
lin supernal_A = compoundA (mkA "supernal");
lin supernatant_A = mkA "supernatant" ;
lin supernatant_N = mkN "supernatant" ;
lin supernatural_A = compoundA (mkA "supernatural");
lin supernatural_N = mkN "supernatural" ;
lin supernaturalism_N = mkN "supernaturalism" ;
lin supernaturalist_A = mkA "supernaturalist" ;
lin supernormal_A = compoundA (mkA "supernormal");
lin supernova_N = mkN "supernova" ;
lin supernumerary_N = mkN "supernumerary" "supernumeraries";
lin superorder_N = mkN "superorder" ;
lin superordinate_A = mkA "superordinate" ;
lin superoxide_N = mkN "superoxide" ;
lin superphylum_N = mkN "superphylum" ;
lin superposition_N = mkN "superposition" ;
lin supersaturated_A = mkA "supersaturated" ;
lin superscript_A = mkA "superscript" ;
lin superscript_N = mkN "superscript" ;
lin superscription_N = mkN "superscription" "superscriptions";
lin supersede_V2 = mkV2 (mkV "supersede" "supersedes" "superseded" "superseded" "superseding");
lin supersedure_N = mkN "supersedure" ;
lin supersession_N = mkN "supersession" ;
lin supersonic_A = compoundA (mkA "supersonic");
lin superstition_N = mkN "superstition" "superstitions";
lin superstitious_A = compoundA (mkA "superstitious");
lin superstrate_N = mkN "superstrate" ;
lin superstring_N = mkN "superstring" ;
lin superstructure_N = mkN "superstructure" "superstructures";
lin supersymmetry_N = mkN "supersymmetry" ;
lin supertanker_N = mkN "supertanker" ;
lin supertax_N = mkN "supertax" "supertaxes";
lin supertitle_N = mkN "supertitle" ;
lin supertonic_N = mkN "supertonic" ;
lin supertwister_N = mkN "supertwister" ;
lin supervene_V = mkV "supervene" "supervenes" "supervened" "supervened" "supervening";
lin supervention_N = mkN "supervention" ;
lin supervise_V = mkV "supervise" "supervises" "supervised" "supervised" "supervising";
lin supervise_V2 = mkV2 (mkV "supervise" "supervises" "supervised" "supervised" "supervising");
lin supervision_N = mkN "supervision" "supervisions";
lin supervisor_N = mkN "supervisor" "supervisors";
lin supervisory_A = compoundA (mkA "supervisory");
lin supination_N = mkN "supination" ;
lin supinator_N = mkN "supinator" ;
lin supine_A = compoundA (mkA "supine");
lin supper_N = mkN "supper" "suppers";
lin supperless_A = compoundA (mkA "supperless");
lin supping_N = mkN "supping" ;
lin supplant_V2 = mkV2 (mkV "supplant" "supplants" "supplanted" "supplanted" "supplanting");
lin supplanter_N = mkN "supplanter" "supplanters";
lin supplanting_N = mkN "supplanting" ;
lin supple_A = mkA "supple" "suppler";
lin supplejack_N = mkN "supplejack" ;
lin supplement_N = mkN "supplement" "supplements";
lin supplement_V2 = mkV2 (mkV "supplement" "supplements" "supplemented" "supplemented" "supplementing");
lin supplementary_A = compoundA (mkA "supplementary");
lin supplementation_N = mkN "supplementation" ;
lin suppleness_N = mkN "suppleness" ;
lin suppliant_A = compoundA (mkA "suppliant");
lin suppliant_N = mkN "suppliant" "suppliants";
lin supplicant_N = mkN "supplicant" "supplicants";
lin supplicate_V = mkV "supplicate" "supplicates" "supplicated" "supplicated" "supplicating";
lin supplicate_V2 = mkV2 (mkV "supplicate" "supplicates" "supplicated" "supplicated" "supplicating");
lin supplication_N = mkN "supplication" "supplications";
lin supplier_N = mkN "supplier" "suppliers";
lin supply_N = mkN "supply" "supplies";
lin supply_V2 = mkV2 (mkV "supply" "supplies" "supplied" "supplied" "supplying");
lin support_N = mkN "support" "supports";
lin support_V2 = mkV2 (mkV "support" "supports" "supported" "supported" "supporting");
lin support_VV = ingVV (mkV "support" "supports" "supported" "supported" "supporting");
lin supportable_A = compoundA (mkA "supportable");
lin supporter_N = mkN human (mkN "supporter" "supporters");
lin supportive_A = mkA "supportive" ;
lin suppose_V2 = mkV2 (mkV "suppose" "supposes" "supposed" "supposed" "supposing");
lin suppose_V2V = mkV2V (mkV "suppose" "supposes" "supposed" "supposed" "supposing") noPrep to_Prep;
lin suppose_VS = mkVS (mkV "suppose" "supposes" "supposed" "supposed" "supposing");
lin supposed_A = mkA "supposed";
lin supposition_N = mkN "supposition" "suppositions";
lin suppository_N = mkN "suppository" "suppositories";
lin suppress_V2 = mkV2 (mkV "suppress" "suppresses" "suppressed" "suppressed" "suppressing");
lin suppressant_N = mkN "suppressant" ;
lin suppression_N = mkN "suppression" "suppressions";
lin suppressive_A = compoundA (mkA "suppressive");
lin suppressor_N = mkN "suppressor" "suppressors";
lin suppurate_V = mkV "suppurate" "suppurates" "suppurated" "suppurated" "suppurating";
lin suppuration_N = mkN "suppuration" "suppurations";
lin suppurative_A = mkA "suppurative" ;
lin supra_Adv = mkAdv "supra";
lin suprainfection_N = mkN "suprainfection" ;
lin supranational_A = compoundA (mkA "supranational");
lin supraorbital_A = mkA "supraorbital" ;
lin suprasegmental_A = mkA "suprasegmental" ;
lin supremacism_N = mkN "supremacism" ;
lin supremacist_N = mkN "supremacist" ;
lin supremacy_N = mkN "supremacy" ;
lin suprematism_N = mkN "suprematism" ;
lin suprematist_N = mkN "suprematist" ;
lin supreme_A = compoundA (mkA "supreme");
lin supremo_N = mkN "supremo" ;
lin supt_PN = mkPN "Supt";
lin sura_N = mkN "sura" ;
lin surabaja_PN = mkPN "Surabaja";
lin surbase_N = mkN "surbase" ;
lin surcharge_N = mkN "surcharge" "surcharges";
lin surcharge_V2 = mkV2 (mkV "surcharge" "surcharges" "surcharged" "surcharged" "surcharging");
lin surcoat_N = mkN "surcoat" ;
lin surd_N = mkN "surd" "surds";
lin sure_A = mkA "sure" "surer";
lin sure_Adv = mkAdv "sure";
lin sure_footed_A = compoundA (mkA "sure-footed");
lin surefooted_A = mkA "surefooted" ;
lin sureness_N = mkN "sureness" ;
lin surety_N = mkN "surety" "sureties";
lin surf_N = mkN "surf" ;
lin surface_A = mkA "surface" ;
lin surface_N = mkN "surface" "surfaces";
lin surface_V = mkV "surface" "surfaces" "surfaced" "surfaced" "surfacing";
lin surface_V2 = mkV2 (mkV "surface" "surfaces" "surfaced" "surfaced" "surfacing");
lin surface_V2V = mkV2V (mkV "surface" "surfaces" "surfaced" "surfaced" "surfacing") noPrep to_Prep ;
lin surface_VS = mkVS (mkV "surface" "surfaces" "surfaced" "surfaced" "surfacing");
lin surface_to_air_A = compoundA (mkA "surface-to-air");
lin surfacing_N = mkN "surfacing" ;
lin surfbird_N = mkN "surfbird" ;
lin surfboard_N = mkN "surfboard" "surfboards";
lin surfboat_N = mkN "surfboat" "surfboats";
lin surfeit_N = mkN "surfeit" "surfeits";
lin surfeit_V2 = mkV2 (mkV "surfeit" "surfeits" "surfeited" "surfeited" "surfeiting");
lin surfer_N = mkN "surfer" ;
lin surficial_A = mkA "surficial" ;
lin surfing_N = mkN "surfing" ;
lin surfperch_N = mkN "surfperch" ;
lin surfriding_N = mkN "surfriding" ;
lin surge_N = mkN "surge" "surges";
lin surge_V = mkV "surge" "surges" "surged" "surged" "surging";
lin surge_V2 = mkV2 (mkV "surge" "surges" "surged" "surged" "surging");
lin surgeon_N = mkN "surgeon" "surgeons";
lin surgeonfish_N = mkN "surgeonfish" ;
lin surgery_N = mkN "surgery" "surgeries";
lin surgical_A = compoundA (mkA "surgical");
lin suricate_N = mkN "suricate" ;
lin surliness_N = mkN "surliness" ;
lin surly_A = mkA "surly" "surlier";
lin surmise_N = mkN "surmise" "surmises";
lin surmise_V = mkV "surmise" "surmises" "surmised" "surmised" "surmising";
lin surmise_V2 = mkV2 (mkV "surmise" "surmises" "surmised" "surmised" "surmising");
lin surmount_V2 = mkV2 (mkV "surmount" "surmounts" "surmounted" "surmounted" "surmounting");
lin surmountable_A = compoundA (mkA "surmountable");
lin surname_N = mkN "surname" "surnames";
lin surpass_V2 = mkV2 (mkV "surpass" "surpasses" "surpassed" "surpassed" "surpassing");
lin surpassing_A = compoundA (mkA "surpassing");
lin surplice_N = mkN "surplice" "surplices";
lin surpliced_A = compoundA (mkA "surpliced");
lin surplus_N = mkN "surplus" "surpluses";
lin surprise_N = mkN "surprise" "surprises";
lin surprise_V2 = mkV2 (mkV "surprise" "surprises" "surprised" "surprised" "surprising");
lin surprise_V2V = mkV2V (mkV "surprise") noPrep to_Prep ;
lin surprisedly_Adv = mkAdv "surprisedly" ;
lin surpriser_N = mkN "surpriser" ;
lin surprising_A = compoundA (mkA "surprising");
lin surrealism_N = mkN "surrealism" ;
lin surrealist_N = mkN "surrealist" "surrealists";
lin surrealistic_A = compoundA (mkA "surrealistic");
lin surrebutter_N = mkN "surrebutter" ;
lin surrejoinder_N = mkN "surrejoinder" ;
lin surrender_N = mkN "surrender" "surrenders";
lin surrender_V = mkV "surrender" "surrenders" "surrendered" "surrendered" "surrendering";
lin surrender_V2 = mkV2 (mkV "surrender" "surrenders" "surrendered" "surrendered" "surrendering");
lin surrenderer_N = mkN "surrenderer" ;
lin surreptitious_A = compoundA (mkA "surreptitious");
lin surrey_N = mkN "surrey" ;
lin surrey_PN = mkPN "Surrey";
lin surrogate_A = compoundA (mkA "surrogate");
lin surrogate_N = mkN "surrogate" "surrogates";
lin surround_N = mkN "surround" "surrounds";
lin surround_V2 = mkV2 (mkV "surround" "surrounds" "surrounded" "surrounded" "surrounding");
lin surrounding_A = compoundA (mkA "surrounding");
lin surtax_N = mkN "surtax" "surtaxes";
lin surtax_V2 = mkV2 (mkV "surtax" "surtaxes" "surtaxed" "surtaxed" "surtaxing");
lin surtout_N = mkN "surtout" ;
lin surveillance_N = mkN "surveillance" ;
lin survey_N = mkN "survey" "surveys";
lin survey_V2 = mkV2 (mkV "survey" "surveys" "surveyed" "surveyed" "surveying");
lin surveying_N = mkN "surveying" ;
lin surveyor_N = mkN "surveyor" "surveyors";
lin survival_N = mkN "survival" "survivals";
lin survivalist_N = mkN "survivalist" ;
lin survive_V = mkV "survive" "survives" "survived" "survived" "surviving";
lin survive_V2 = mkV2 (mkV "survive" "survives" "survived" "survived" "surviving");
lin survivor_N = mkN "survivor" "survivors";
lin susan_PN = mkPN "Susan";
lin susanna_PN = mkPN "Susanna";
lin susceptibility_N = mkN "susceptibility" "susceptibilities";
lin susceptible_A = compoundA (mkA "susceptible");
lin sushi_N = mkN "sushi" ;
lin susie_PN = mkPN "Susie";
lin suslik_N = mkN "suslik" ;
lin suspect_A = compoundA (mkA "suspect");
lin suspect_N = mkN "suspect" "suspects";
lin suspect_V2 = mkV2 (mkV "suspect" "suspects" "suspected" "suspected" "suspecting");
lin suspect_VS = mkVS (mkV "suspect");
lin suspend_V = mkV "suspend";
lin suspend_V2 = mkV2 (mkV "suspend" "suspends" "suspended" "suspended" "suspending");
lin suspender_N = mkN "suspender" "suspenders";
lin suspense_N = mkN "suspense" ;
lin suspension_N = mkN "suspension" ;
lin suspensive_A = mkA "suspensive" ;
lin suspensory_N = mkN "suspensory" ;
lin suspicion_N = mkN "suspicion" "suspicions";
lin suspicious_A = compoundA (mkA "suspicious");
lin suss_V2 = mkV2 (mkV "suss" "susses" "sussed" "sussed" "sussing");
lin sussex_PN = mkPN "Sussex";
lin sustain_V2 = mkV2 (mkV "sustain" "sustains" "sustained" "sustained" "sustaining");
lin sustainability_N = mkN "sustainability" ;
lin sustainable_A = mkA "sustainable" ;
lin sustenance_N = mkN "sustenance" ;
lin sustentacular_A = mkA "sustentacular" ;
lin susurration_N = mkN "susurration" ;
lin sutler_N = mkN "sutler" ;
lin sutra_N = mkN "sutra" ;
lin suttee_N = mkN "suttee" "suttees";
lin sutton_PN = mkPN "Sutton";
lin sutton_at_hone_PN = mkPN "Sutton-at-hone";
lin sutton_coldfield_PN = mkPN "Sutton coldfield";
lin sutton_in_ashfield_PN = mkPN "Sutton in ashfield";
lin suture_N = mkN "suture" "sutures";
lin suturing_N = mkN "suturing" ;
lin suzanne_PN = mkPN "Suzanne";
lin suzerain_N = mkN "suzerain" "suzerains";
lin suzerainty_N = mkN "suzerainty" "suzerainties";
lin svelte_A = compoundA (mkA "svelte");
lin sverdlovsk_PN = mkPN "Sverdlovsk";
lin svoboda_N = mkN "svoboda" ;
lin swab_N = mkN "swab" "swabs";
lin swab_V2 = mkV2 (mkV "swab" "swabs" "swabbed" "swabbed" "swabbing");
lin swabbing_N = mkN "swabbing" ;
lin swad_N = mkN "swad" ;
lin swaddle_V2 = mkV2 (mkV "swaddle" "swaddles" "swaddled" "swaddled" "swaddling");
lin swadlincote_PN = mkPN "Swadlincote";
lin swag_N = mkN "swag" ;
lin swagger_A = compoundA (mkA "swagger");
lin swagger_N = mkN "swagger" "swaggers";
lin swagger_V = mkV "swagger" "swaggers" "swaggered" "swaggered" "swaggering";
lin swaggerer_N = mkN "swaggerer" "swaggerers";
lin swagman_N = mkN "swagman" ;
lin swahili_N = mkN "swahili" ;
lin swain_N = mkN "swain" "swains";
lin swale_N = mkN "swale" ;
lin swallow_N = mkN "swallow" "swallows";
lin swallow_V = mkV "swallow" "swallows" "swallowed" "swallowed" "swallowing";
lin swallow_V2 = mkV2 (mkV "swallow" "swallows" "swallowed" "swallowed" "swallowing");
lin swallow_tailed_A = compoundA (mkA "swallow-tailed");
lin swami_N = mkN "swami" "swamis";
lin swamp_N = mkN "swamp" "swamps";
lin swamp_V2 = mkV2 (mkV "swamp" "swamps" "swamped" "swamped" "swamping");
lin swampy_A = mkA "swampy" "swampier";
lin swan's_down_N = mkN "swan's-down" ;
lin swan_N = mkN "swan" "swans";
lin swan_V = mkV "swan" "swans" "swanned" "swanned" "swanning";
lin swan_song_N = mkN "swan-song" "swan-songs";
lin swanage_PN = mkPN "Swanage";
lin swank_A = mkA "swank" ;
lin swank_N = mkN "swank" "swanks";
lin swank_V = mkV "swank" "swanks" "swanked" "swanked" "swanking";
lin swanky_A = mkA "swanky" "swankier";
lin swanley_PN = mkPN "Swanley";
lin swansea_PN = mkPN "Swansea";
lin swap_N = mkN "swap" "swaps";
lin swap_V = mkV "swap" "swaps" "swapped" "swapped" "swapping";
lin swap_V2 = mkV2 (mkV "swap" "swaps" "swapped" "swapped" "swapping");
lin sward_N = mkN "sward" ;
lin swarm_N = mkN "swarm" "swarms";
lin swarm_V = mkV "swarm" "swarms" "swarmed" "swarmed" "swarming";
lin swarm_V2 = mkV2 (mkV "swarm" "swarms" "swarmed" "swarmed" "swarming");
lin swarthy_A = compoundA (mkA "swarthy");
lin swash_N = mkN "swash" ;
lin swashbuckler_N = mkN "swashbuckler" "swashbucklers";
lin swashbuckling_A = compoundA (mkA "swashbuckling");
lin swashbuckling_N = mkN "swashbuckling" ;
lin swastika_N = mkN "swastika" "swastikas";
lin swat_N = mkN "swat" "swats";
lin swat_V2 = mkV2 (mkV "swat" "swats" "swatted" "swatted" "swatting");
lin swatch_N = mkN "swatch" ;
lin swath_N = mkN "swath" "swaths";
lin swathe_N = mkN "swathe" "swathes";
lin swathe_V2 = mkV2 (mkV "swathe" "swathes" "swathed" "swathed" "swathing");
lin swathing_N = mkN "swathing" ;
lin swatter_N = mkN "swatter" ;
lin sway_N = mkN "sway" ;
lin sway_V = mkV "sway" "sways" "swayed" "swayed" "swaying";
lin sway_V2 = mkV2 (mkV "sway" "sways" "swayed" "swayed" "swaying");
lin swazi_A = compoundA (mkA "swazi");
lin swazi_N = mkN "swazi" "swazis";
lin swaziland_PN = mkPN "Swaziland";
lin swear_V = IrregEng.swear_V;
lin swear_V2 = mkV2 (IrregEng.swear_V);
lin swear_V2V = mkV2V (IrregEng.swear_V) noPrep to_Prep ;
lin swear_VV = mkVV (IrregEng.swear_V) ;
lin swearer_N = mkN "swearer" "swearers";
lin swearing_N = mkN "swearing" ;
lin swearword_N = mkN "swearword" "swearwords";
lin sweat_N = mkN "sweat" "sweats";
lin sweat_V = mkV "sweat" "sweats" "sweated" "sweated" "sweating";
lin sweat_V2 = mkV2 (mkV "sweat" "sweats" "sweated" "sweated" "sweating");
lin sweatband_N = mkN "sweatband" "sweatbands";
lin sweatbox_N = mkN "sweatbox" ;
lin sweater_N = mkN "sweater" "sweaters";
lin sweatshirt_N = mkN "sweatshirt" ;
lin sweatshop_N = mkN "sweatshop" "sweatshops";
lin sweaty_A = mkA "sweaty" "sweatier";
lin swedeFem_N = mkN feminine (mkN "Swede" "Swedes");
lin swedeMasc_N = mkN masculine (mkN "Swede" "Swedes");
lin swede_A = compoundA (mkA "Swede");
lin sweden_PN = mkPN "Sweden";
lin swedish_A = compoundA (mkA "Swedish");
lin swedish_N = mkN "Swedish" "Swedes";
lin sweep_N = mkN "sweep" "sweeps";
lin sweep_V = IrregEng.sweep_V;
lin sweep_V2 = mkV2 (IrregEng.sweep_V);
lin sweeper_N = mkN "sweeper" "sweepers";
lin sweeping_N = mkN "sweeping" "sweepings";
lin sweeping_A = compoundA (mkA "sweeping");
lin sweepstakes_N = mkN "sweepstakes" ;
lin sweet_A = mkA "sweet" "sweeter";
lin sweet_N = mkN "sweet" "sweets";
lin sweet_scented_A = compoundA (mkA "sweet-scented");
lin sweetbread_N = mkN "sweetbread" "sweetbreads";
lin sweetbriar_N = mkN "sweetbriar" ;
lin sweetbrier_N = mkN "sweetbrier" ;
lin sweeten_V = mkV "sweeten" "sweetens" "sweetened" "sweetened" "sweetening";
lin sweeten_V2 = mkV2 (mkV "sweeten" "sweetens" "sweetened" "sweetened" "sweetening");
lin sweetening_N = mkN "sweetening" "sweetenings";
lin sweetheart_A = mkA "sweetheart" ;
lin sweetheart_N = mkN "sweetheart" "sweethearts";
lin sweetie_N = mkN "sweetie" "sweeties";
lin sweetish_A = compoundA (mkA "sweetish");
lin sweetleaf_N = mkN "sweetleaf" ;
lin sweetmeat_N = mkN "sweetmeat" "sweetmeats";
lin sweetness_N = mkN "sweetness" ;
lin sweetsop_N = mkN "sweetsop" ;
lin swell_A = compoundA (mkA "swell");
lin swell_N = mkN "swell" "swells";
lin swell_V = mkV "swell" "swells" "swelled" "swelled" "swelling";
lin swell_V2 = mkV2 (mkV "swell" "swells" "swelled" "swelled" "swelling");
lin swelling_N = mkN "swelling" "swellings";
lin swelter_V = mkV "swelter" "swelters" "sweltered" "sweltered" "sweltering";
lin sweptback_A = compoundA (mkA "sweptback");
lin sweptwing_A = mkA "sweptwing" ;
lin swerve_N = mkN "swerve" "swerves";
lin swerve_V = mkV "swerve" "swerves" "swerved" "swerved" "swerving";
lin swerve_V2 = mkV2 (mkV "swerve" "swerves" "swerved" "swerved" "swerving");
lin swift_A = mkA "swift" "swifter";
lin swift_N = mkN "swift" "swifts";
lin swiftlet_N = mkN "swiftlet" ;
lin swiftness_N = mkN "swiftness" ;
lin swig_N = mkN "swig" "swigs";
lin swig_V = mkV "swig" "swigs" "swigged" "swigged" "swigging";
lin swig_V2 = mkV2 (mkV "swig" "swigs" "swigged" "swigged" "swigging");
lin swill_N = mkN "swill" "swills";
lin swill_V = mkV "swill" "swills" "swilled" "swilled" "swilling";
lin swill_V2 = mkV2 (mkV "swill" "swills" "swilled" "swilled" "swilling");
lin swim_N = mkN "swim" "swims";
lin swim_V = IrregEng.swim_V;
lin swim_V2 = mkV2 (IrregEng.swim_V);
lin swimmer_N = mkN "swimmer" "swimmers";
lin swimmeret_N = mkN "swimmeret" ;
lin swimming_N = mkN "swimming" ;
lin swimming_bath_N = mkN "swimming-bath" "swimming-baths";
lin swimming_costume_N = mkN "swimming-costume" "swimming-costumes";
lin swimming_pool_N = mkN "swimming-pool" "swimming-pools";
lin swimmingly_Adv = mkAdv "swimmingly";
lin swimsuit_N = mkN "swimsuit" "swimsuits";
lin swindle_N = mkN "swindle" "swindles";
lin swindle_V = mkV "swindle" "swindles" "swindled" "swindled" "swindling";
lin swindle_V2 = mkV2 (mkV "swindle" "swindles" "swindled" "swindled" "swindling");
lin swindler_N = mkN "swindler" "swindlers";
lin swindon_PN = mkPN "Swindon";
lin swine_N = mkN "swine" "swine";
lin swineherd_N = mkN "swineherd" "swineherds";
lin swing_N = mkN "swing" "swings";
lin swing_V = IrregEng.swing_V;
lin swing_V2 = mkV2 (IrregEng.swing_V);
lin swinge_V2 = mkV2 (mkV "swinge" "swinges" "swinged" "swinged" "swinging");
lin swingeing_A = compoundA (mkA "swingeing");
lin swinger_N = mkN "swinger" ;
lin swinish_A = compoundA (mkA "swinish");
lin swinton_PN = mkPN "Swinton";
lin swipe_N = mkN "swipe" "swipes";
lin swipe_V2 = mkV2 (mkV "swipe" "swipes" "swiped" "swiped" "swiping");
lin swirl_N = mkN "swirl" "swirls";
lin swirl_V = mkV "swirl" "swirls" "swirled" "swirled" "swirling";
lin swirl_V2 = mkV2 (mkV "swirl" "swirls" "swirled" "swirled" "swirling");
lin swish_A = compoundA (mkA "swish");
lin swish_N = mkN "swish" "swishes";
lin swish_V = mkV "swish" "swishes" "swished" "swished" "swishing";
lin swish_V2 = mkV2 (mkV "swish" "swishes" "swished" "swished" "swishing");
lin swishy_A = mkA "swishy" ;
lin swiss_A = compoundA (mkA "Swiss");
lin swiss_N = mkN "swiss" "swiss";
lin switch_N = mkN "switch" "switches";
lin switch_V = mkV "switch" "switches" "switched" "switched" "switching";
lin switch_V2 = mkV2 (mkV "switch" "switches" "switched" "switched" "switching");
lin switchblade_N = mkN "switchblade" ;
lin switchboard_N = mkN "switchboard" "switchboards";
lin switcher_N = mkN "switcher" ;
lin switcheroo_N = mkN "switcheroo" ;
lin switchman_N = mkN masculine (mkN "switchman" "switchmen");
lin switzerland_PN = mkPN "Switzerland";
lin swivel_N = mkN "swivel" "swivels";
lin swivel_V = mkV "swivel" "swivels" "swivelled" "swivelled" "swivelling";
lin swivel_V2 = mkV2 (mkV "swivel" "swivels" "swivelled" "swivelled" "swivelling");
lin swivet_N = mkN "swivet" ;
lin swiz_N = mkN "swiz" "IRREG";
lin swizzle_N = mkN "swizzle" "swizzles";
lin swizzle_stick_N = mkN "swizzle-stick" "swizzle-sticks";
lin swob_N = mkN "swob" "swobs";
lin swob_V2 = mkV2 (mkV "swob" "swobs" "swobbed" "swobbed" "swobbing");
lin swollen_headed_A = compoundA (mkA "swollen-headed");
lin swoon_N = mkN "swoon" "swoons";
lin swoon_V = mkV "swoon" "swoons" "swooned" "swooned" "swooning";
lin swoop_N = mkN "swoop" "swoops";
lin swoop_V = mkV "swoop" "swoops" "swooped" "swooped" "swooping";
lin swoop_V2 = mkV2 (mkV "swoop" "swoops" "swooped" "swooped" "swooping");
lin swoosh_N = mkN "swoosh" ;
lin swop_N = mkN "swop" "swops";
lin swop_V = mkV "swop" "swops" "swopped" "swopped" "swopping";
lin swop_V2 = mkV2 (mkV "swop" "swops" "swopped" "swopped" "swopping");
lin sword_N = mkN "sword" "swords";
lin sword_cane_N = mkN "sword-cane" "sword-canes";
lin sword_cut_N = mkN "sword-cut" "sword-cuts";
lin sword_dance_N = mkN "sword-dance" "sword-dances";
lin swordfish_N = mkN "swordfish" "swordfish";
lin swordplay_N = mkN "swordplay" ;
lin swordsman_N = mkN masculine (mkN "swordsman" "swordsmen");
lin swordsmanship_N = mkN "swordsmanship" ;
lin swordstick_N = mkN "swordstick" "swordsticks";
lin swordtail_N = mkN "swordtail" ;
lin swot_N = mkN "swot" "swots";
lin swot_V = mkV "swot" "swots" "swotted" "swotted" "swotting";
lin swot_V2 = mkV2 (mkV "swot" "swots" "swotted" "swotted" "swotting");
lin sybarite_N = mkN "sybarite" "sybarites";
lin sybaritic_A = compoundA (mkA "sybaritic");
lin sycamore_N = mkN "sycamore" "sycamores";
lin syconium_N = mkN "syconium" ;
lin sycophancy_N = mkN "sycophancy" ;
lin sycophant_N = mkN "sycophant" "sycophants";
lin sycophantic_A = compoundA (mkA "sycophantic");
lin sydney_PN = mkPN "Sydney";
lin syllabary_N = mkN "syllabary" "syllabaries";
lin syllabic_A = compoundA (mkA "syllabic");
lin syllabically_Adv = mkAdv "syllabically" ;
lin syllabicate_V2 = mkV2 (mkV "syllabicate" "syllabicates" "syllabicated" "syllabicated" "syllabicating");
lin syllabication_N = mkN "syllabication" ;
lin syllabicity_N = mkN "syllabicity" ;
lin syllabification_N = mkN "syllabification" ;
lin syllabify_V2 = mkV2 (mkV "syllabify" "syllabifies" "syllabified" "syllabified" "syllabifying");
lin syllabize_V2 = mkV2 (mkV "syllabize" "syllabizes" "syllabized" "syllabized" "syllabizing");
lin syllable_N = mkN "syllable" "syllables";
lin syllabled_A = compoundA (mkA "syllabled");
lin syllabub_N = mkN "syllabub" ;
lin syllabus_N = mkN "syllabus" "syllabuses";
lin syllepsis_N = mkN "syllepsis" ;
lin syllogism_N = mkN "syllogism" "syllogisms";
lin syllogist_N = mkN "syllogist" ;
lin syllogistic_A = compoundA (mkA "syllogistic");
lin sylph_N = mkN "sylph" "sylphs";
lin sylph_like_A = compoundA (mkA "sylph-like");
lin sylvan_A = compoundA (mkA "sylvan");
lin sylvan_N = mkN "sylvan" ;
lin sylvanite_N = mkN "sylvanite" ;
lin sylvia_PN = mkPN "Sylvia";
lin sylvite_N = mkN "sylvite" ;
lin symbiosis_N = mkN "symbiosis" ;
lin symbiotic_A = mkA "symbiotic" ;
lin symbiotically_Adv = mkAdv "symbiotically" ;
lin symbol_N = mkN "symbol" "symbols";
lin symbolatry_N = mkN "symbolatry" ;
lin symbolic_A = compoundA (mkA "symbolic");
lin symbolical_A = compoundA (mkA "symbolical");
lin symbolism_N = mkN "symbolism" "symbolisms";
lin symbolist_N = mkN "symbolist" ;
lin symbolization_N = mkN "symbolization" "symbolizations";
lin symbolize_V2 = mkV2 (mkV "symbolize" "symbolizes" "symbolized" "symbolized" "symbolizing");
lin symbolizing_N = mkN "symbolizing" ;
lin symbology_N = mkN "symbology" ;
lin symmetric_A = compoundA (mkA "symmetric");
lin symmetrical_A = compoundA (mkA "symmetrical");
lin symmetry_N = mkN "symmetry" ;
lin sympathectomy_N = mkN "sympathectomy" ;
lin sympathetic_A = compoundA (mkA "sympathetic");
lin sympathetically_Adv = mkAdv "sympathetically";
lin sympathize_V = mkV "sympathize" "sympathizes" "sympathized" "sympathized" "sympathizing";
lin sympathizer_N = mkN "sympathizer" "sympathizers";
lin sympathy_N = mkN "sympathy" "sympathies";
lin sympatric_A = mkA "sympatric" ;
lin sympatry_N = mkN "sympatry" ;
lin symphonic_A = compoundA (mkA "symphonic");
lin symphonist_N = mkN "symphonist" ;
lin symphony_N = mkN "symphony" "symphonies";
lin symphysion_N = mkN "symphysion" ;
lin symphysis_N = mkN "symphysis" ;
lin symploce_N = mkN "symploce" ;
lin symposiast_N = mkN "symposiast" ;
lin symposium_N = mkN "symposium" "symposiums";
lin symptom_N = mkN "symptom" "symptoms";
lin symptomatic_A = compoundA (mkA "symptomatic");
lin symptomatically_Adv = mkAdv "symptomatically";
lin symptomless_A = compoundA (mkA "symptomless");
lin synagogue_N = mkN "synagogue" "synagogues";
lin synapse_N = mkN "synapse" ;
lin synapsid_N = mkN "synapsid" ;
lin synapsis_N = mkN "synapsis" ;
lin synaptic_A = mkA "synaptic" ;
lin syncarpous_A = mkA "syncarpous" ;
lin syncategorem_N = mkN "syncategorem" ;
lin syncategorematic_A = mkA "syncategorematic" ;
lin synchrocyclotron_N = mkN "synchrocyclotron" ;
lin synchroflash_N = mkN "synchroflash" "IRREG";
lin synchromesh_N = mkN "synchromesh" ;
lin synchronic_A = mkA "synchronic" ;
lin synchronism_N = mkN "synchronism" ;
lin synchronization_N = mkN "synchronization" "synchronizations";
lin synchronize_V = mkV "synchronize" "synchronizes" "synchronized" "synchronized" "synchronizing";
lin synchronize_V2 = mkV2 (mkV "synchronize" "synchronizes" "synchronized" "synchronized" "synchronizing");
lin synchronous_A = compoundA (mkA "synchronous");
lin synchrony_N = mkN "synchrony" ;
lin synchroscope_N = mkN "synchroscope" ;
lin synchrotron_N = mkN "synchrotron" "synchrotrons";
lin synclinal_A = mkA "synclinal" ;
lin syncopate_V2 = mkV2 (mkV "syncopate" "syncopates" "syncopated" "syncopated" "syncopating");
lin syncopation_N = mkN "syncopation" "syncopations";
lin syncopator_N = mkN "syncopator" ;
lin syncope_N = mkN "syncope" ;
lin syncretic_A = mkA "syncretic" ;
lin syncretism_N = mkN "syncretism" ;
lin syncytium_N = mkN "syncytium" ;
lin syndactyly_N = mkN "syndactyly" ;
lin syndciate_V2 = mkV2 (mkV "syndciate");
lin syndetic_A = mkA "syndetic" ;
lin syndic_N = mkN "syndic" "syndics";
lin syndicalism_N = mkN "syndicalism" ;
lin syndicalistMasc_N = mkN masculine (mkN "syndicalist" "syndicalists");
lin syndicalistFem_N = mkN feminine (mkN "syndicalist" "syndicalists");
lin syndicate_N = mkN "syndicate" "syndicates";
lin syndicate_V2 = mkV2 (mkV "syndicate" "syndicates" "syndicated" "syndicated" "syndicating");
lin syndication_N = mkN "syndication" "syndications";
lin syndicator_N = mkN "syndicator" ;
lin syndrome_N = mkN "syndrome" "syndromes";
lin synecdoche_N = mkN "synecdoche" ;
lin synecdochic_A = mkA "synecdochic" ;
lin synechia_N = mkN "synechia" ;
lin syneresis_N = mkN "syneresis" ;
lin synergetic_A = mkA "synergetic" ;
lin synergism_N = mkN "synergism" ;
lin synergist_N = mkN "synergist" ;
lin synergistic_A = mkA "synergistic" ;
lin synergistically_Adv = mkAdv "synergistically" ;
lin synergy_N = mkN "synergy" ;
lin synesthesia_N = mkN "synesthesia" ;
lin synesthetic_A = mkA "synesthetic" ;
lin synizesis_N = mkN "synizesis" ;
lin synod_N = mkN "synod" "synods";
lin synoicous_A = mkA "synoicous" ;
lin synonym_N = mkN "synonym" "synonyms";
lin synonymist_N = mkN "synonymist" ;
lin synonymous_A = compoundA (mkA "synonymous");
lin synonymy_N = mkN "synonymy" ;
lin synopsis_N = mkN "synopsis" "synopses" {- FIXME: guessed plural form -};
lin synoptic_A = compoundA (mkA "synoptic");
lin synoptically_Adv = mkAdv "synoptically";
lin synovia_N = mkN "synovia" ;
lin synovial_A = mkA "synovial" ;
lin synovitis_N = mkN "synovitis" ;
lin synsemantic_A = mkA "synsemantic" ;
lin synset_N = mkN "synset" ;
lin syntactic_A = compoundA (mkA "syntactic");
lin syntactically_Adv = mkAdv "syntactically";
lin syntagma_N = mkN "syntagma" ;
lin syntagmatic_A = mkA "syntagmatic" ;
lin syntax_N = mkN "syntax" ;
lin synthesis_N = mkN "synthesis" "syntheses" {- FIXME: guessed plural form -};
lin synthesist_N = mkN "synthesist" ;
lin synthesize_V2 = mkV2 (mkV "synthesize" "synthesizes" "synthesized" "synthesized" "synthesizing");
lin synthesizer_N = mkN "synthesizer" ;
lin synthetic_A = compoundA (mkA "synthetic");
lin synthetic_N = mkN "synthetic" "synthetics";
lin synthetically_Adv = mkAdv "synthetically";
lin synthetism_N = mkN "synthetism" ;
lin syphilis_N = mkN "syphilis" ;
lin syphilitic_A = compoundA (mkA "syphilitic");
lin syphilitic_N = mkN "syphilitic" "syphilitics";
lin syphon_N = mkN "syphon" "syphons";
lin syphon_V = mkV "syphon" "syphons" "syphoned" "syphoned" "syphoning";
lin syphon_V2 = mkV2 (mkV "syphon" "syphons" "syphoned" "syphoned" "syphoning");
lin syracuse_PN = mkPN "Syracuse";
lin syria_PN = mkPN "Syria";
lin syrian_A = compoundA (mkA "Syrian");
lin syrian_N = mkN "Syrian" "Syrians";
lin syringa_N = mkN "syringa" "syringas";
lin syringe_N = mkN "syringe" "syringes";
lin syringe_V2 = mkV2 (mkV "syringe" "syringes" "syringed" "syringed" "syringing");
lin syrinx_N = mkN "syrinx" ;
lin syrup_N = mkN "syrup" "syrups";
lin syrupy_A = compoundA (mkA "syrupy");
lin system_N = mkN "system" "systems";
lin systematic_A = compoundA (mkA "systematic");
lin systematically_Adv = mkAdv "systematically";
lin systematics_N = mkN "systematics" ;
lin systematism_N = mkN "systematism" ;
lin systematization_N = mkN "systematization" ;
lin systematize_V2 = mkV2 (mkV "systematize" "systematizes" "systematized" "systematized" "systematizing");
lin systemic_A = mkA "systemic" ;
lin systole_N = mkN "systole" ;
lin systolic_A = mkA "systolic" ;
lin syston_PN = mkPN "Syston";
lin syzygy_N = mkN "syzygy" ;
lin t_junction_N = mkN "t-junction" "t-junctions";
lin t_shirt_N = mkN "t-shirt" "t-shirts";
lin t_square_N = mkN "t-square" "t-squares";
lin tab_N = mkN "tab" "tabs";
lin tabard_N = mkN "tabard" "tabards";
lin tabasco_N = mkN "tabasco" ;
lin tabbouleh_N = mkN "tabbouleh" ;
lin tabby_A = compoundA (mkA "tabby");
lin tabby_N = mkN "tabby" "tabbies";
lin tabby_cat_N = mkN "tabby-cat" "tabby-cats";
lin tabernacle_N = mkN "tabernacle" "tabernacles";
lin tabes_N = mkN "tabes" ;
lin tabi_N = mkN "tabi" ;
lin tablature_N = mkN "tablature" ;
lin table_N = mkN "table" "tables";
lin table_V2 = mkV2 (mkV "table" "tables" "tabled" "tabled" "tabling");
lin table_d'hote_A = compoundA (mkA "table d'hôte");
lin table_d'hote_Adv = mkAdv "table d'hôte";
lin table_knife_N = mkN "table-knife" "table-knives";
lin table_lifting_N = mkN "table-lifting" ;
lin table_linen_N = mkN "table-linen" ;
lin table_rapping_N = mkN "table-rapping" ;
lin table_talk_N = mkN "table-talk" ;
lin table_turning_N = mkN "table-turning" ;
lin tableau_N = mkN "tableau" "tableaux";
lin tableau_vivant_N = mkN "tableau vivant" "tableaux vivants";
lin tablecloth_N = mkN "tablecloth" "tablecloths";
lin tablefork_N = mkN "tablefork" ;
lin tableland_N = mkN "tableland" ;
lin tablemat_N = mkN "tablemat" "tablemats";
lin tablemate_N = mkN "tablemate" ;
lin tablespoon_N = mkN "tablespoon" "tablespoons";
lin tablespoonful_N = mkN "tablespoonful" "tablespoonfuls";
lin tablet_N = mkN "tablet" "tablets";
lin tabletop_N = mkN "tabletop" ;
lin tableware_N = mkN "tableware" ;
lin tabloid_N = mkN "tabloid" "tabloids";
lin taboo_A = compoundA (mkA "taboo");
lin taboo_N = mkN "taboo" "taboos";
lin taboo_V2 = mkV2 (mkV "taboo" "taboos" "tabooed" "tabooed" "tabooing");
lin tabor_N = mkN "tabor" "tabors";
lin taboret_N = mkN "taboret" ;
lin tabular_A = compoundA (mkA "tabular");
lin tabulate_V2 = mkV2 (mkV "tabulate" "tabulates" "tabulated" "tabulated" "tabulating");
lin tabulation_N = mkN "tabulation" "tabulations";
lin tabulator_N = mkN "tabulator" "tabulators";
lin tabun_N = mkN "tabun" ;
lin tachistoscope_N = mkN "tachistoscope" ;
lin tachogram_N = mkN "tachogram" ;
lin tachograph_N = mkN "tachograph" "tachographs";
lin tachometer_N = mkN "tachometer" ;
lin tachycardia_N = mkN "tachycardia" ;
lin tachylite_N = mkN "tachylite" ;
lin tachymeter_N = mkN "tachymeter" ;
lin tacit_A = compoundA (mkA "tacit");
lin taciturn_A = compoundA (mkA "taciturn");
lin taciturnity_N = mkN "taciturnity" ;
lin tack_N = mkN "tack" "tacks";
lin tack_V = mkV "tack" "tacks" "tacked" "tacked" "tacking";
lin tack_V2 = mkV2 (mkV "tack" "tacks" "tacked" "tacked" "tacking");
lin tacker_N = mkN "tacker" ;
lin tackle_N = mkN "tackle" "tackles";
lin tackle_V = mkV "tackle" "tackles" "tackled" "tackled" "tackling";
lin tackle_V2 = mkV2 (mkV "tackle" "tackles" "tackled" "tackled" "tackling");
lin tackler_N = mkN "tackler" ;
lin tacky_A = mkA "tacky" "tackier";
lin taco_N = mkN "taco" ;
lin taconite_N = mkN "taconite" ;
lin tact_N = mkN "tact" ;
lin tactful_A = compoundA (mkA "tactful");
lin tactic_N = mkN "tactic" "tactics";
lin tactical_A = compoundA (mkA "tactical");
lin tactician_N = mkN "tactician" "tacticians";
lin tactics_N = mkN "tactics" ;
lin tactile_A = compoundA (mkA "tactile");
lin tactless_A = compoundA (mkA "tactless");
lin tactlessness_N = mkN "tactlessness" ;
lin tactual_A = compoundA (mkA "tactual");
lin tad_N = mkN "tad" ;
lin tadalafil_N = mkN "tadalafil" ;
lin tadley_PN = mkPN "Tadley";
lin tadpole_N = mkN "tadpole" "tadpoles";
lin taegu_PN = mkPN "Taegu";
lin tael_N = mkN "tael" ;
lin taenia_N = mkN "taenia" ;
lin taffeta_N = mkN "taffeta" ;
lin taffrail_N = mkN "taffrail" "taffrails";
lin taffy_N = mkN "taffy" "taffies";
lin tag_N = mkN "tag" "tags";
lin tag_V = mkV "tag" "tags" "tagged" "tagged" "tagging";
lin tag_V2 = mkV2 (mkV "tag" "tags" "tagged" "tagged" "tagging");
lin tag_V3 = mkV3 (mkV "tag" "tags" "tagged" "tagged" "tagging");
lin tagalong_N = mkN "tagalong" ;
lin tagasaste_N = mkN "tagasaste" ;
lin tagger_N = mkN "tagger" ;
lin tagliatelle_N = mkN "tagliatelle" ;
lin taguan_N = mkN "taguan" ;
lin tahini_N = mkN "tahini" ;
lin tahiti_PN = mkPN "Tahiti";
lin tahitian_A = compoundA (mkA "tahitian");
lin tahitian_N = mkN "tahitian" "tahitians";
lin tail_N = mkN "tail" "tails";
lin tail_V = mkV "tail" "tails" "tailed" "tailed" "tailing";
lin tail_V2 = mkV2 (mkV "tail" "tails" "tailed" "tailed" "tailing");
lin tail_coat_N = mkN "tail-coat" "tail-coats";
lin tail_end_N = mkN "tail-end" "tail-ends";
lin tail_light_N = mkN "tail-light" "tail-lights";
lin tailback_N = mkN "tailback" ;
lin tailboard_N = mkN "tailboard" "tailboards";
lin tailgate_N = mkN "tailgate" "tailgates";
lin tailgater_N = mkN "tailgater" ;
lin tailless_A = compoundA (mkA "tailless");
lin taillight_N = mkN "taillight" ;
lin tailor_N = mkN "tailor" "tailors";
lin tailor_V2 = mkV2 (mkV "tailor" "tailors" "tailored" "tailored" "tailoring");
lin tailor_made_A = compoundA (mkA "tailor-made");
lin tailorbird_N = mkN "tailorbird" ;
lin tailoring_N = mkN "tailoring" ;
lin tailpiece_N = mkN "tailpiece" "tailpieces";
lin tailpipe_N = mkN "tailpipe" ;
lin tailplane_N = mkN "tailplane" "tailplanes";
lin tailrace_N = mkN "tailrace" ;
lin tailspin_N = mkN "tailspin" "tailspins";
lin tailstock_N = mkN "tailstock" ;
lin tailwind_N = mkN "tailwind" ;
lin taint_N = mkN "taint" "taints";
lin taint_V = mkV "taint" "taints" "tainted" "tainted" "tainting";
lin taint_V2 = mkV2 (mkV "taint" "taints" "tainted" "tainted" "tainting");
lin taintless_A = compoundA (mkA "taintless");
lin taipan_N = mkN "taipan" ;
lin taipei_PN = mkPN "Taipei";
lin taiwan_PN = mkPN "Taiwan";
lin taiwanese_A = compoundA (mkA "Taiwanese");
lin taiwaneseMasc_N = mkN masculine (mkN "Taiwanese" "Taiwanese");
lin taiwaneseFem_N = mkN feminine (mkN "Taiwanese" "Taiwanese");
lin taiyuan_PN = mkPN "Taiyuan";
lin taka_N = mkN "taka" ;
lin take_N = mkN "take" "takes";
lin take_V = IrregEng.take_V;
lin take_V2 = mkV2 (IrregEng.take_V);
lin take_V2A = mkV2A (IrregEng.take_V) noPrep;
lin take_V2V = mkV2V (IrregEng.take_V) noPrep to_Prep;
lin take_VA = mkVA (IrregEng.take_V);
lin take_home_A = compoundA (mkA "take-home");
lin take_off_N = mkN "take-off" "take-offs";
lin take_up_N = mkN "take-up" ;
lin takeaway_A = compoundA (mkA "takeaway");
lin takeaway_N = mkN "takeaway" ;
lin takedown_N = mkN "takedown" ;
lin takeoff_N = mkN "takeoff" ;
lin takeout_A = mkA "takeout" ;
lin takeout_N = mkN "takeout" ;
lin takeover_N = mkN "takeover" "takeovers";
lin taker_N = mkN "taker" "takers";
lin takin_N = mkN "takin" ;
lin tala_N = mkN "tala" ;
lin talapoin_N = mkN "talapoin" ;
lin talaria_N = mkN "talaria" ;
lin talc_N = mkN "talc" ;
lin talcum_N = mkN "talcum" ;
lin tale_N = mkN "tale" "tales";
lin tale_bearer_N = mkN "tale-bearer" "tale-bearers";
lin tale_teller_N = mkN "tale-teller" "tale-tellers";
lin talent_N = mkN "talent" "talents";
lin talented_A = compoundA (mkA "talented");
lin talentlessness_N = mkN "talentlessness" ;
lin talipot_N = mkN "talipot" ;
lin talisman_N = mkN "talisman" "talismans";
lin talismanic_A = mkA "talismanic" ;
lin talk_N = mkN "talk" "talks";
lin talk_V = mkV "talk" "talks" "talked" "talked" "talking";
lin talk_V2 = mkV2 (mkV "talk" "talks" "talked" "talked" "talking");
lin talkative_A = compoundA (mkA "talkative");
lin talker_N = mkN "talker" "talkers";
lin talkie_N = mkN "talkie" "talkies";
lin talking_point_N = mkN "talking-point" "talking-points";
lin talking_to_N = mkN "talking-to" "talking-tos";
lin tall_A = mkA "tall" "taller";
lin tall_N = mkN "tall" ;
lin tallboy_N = mkN "tallboy" "tallboys";
lin tallgrass_N = mkN "tallgrass" ;
lin tallish_A = compoundA (mkA "tallish");
lin tallness_N = mkN "tallness" ;
lin tallow_N = mkN "tallow" ;
lin tally_N = mkN "tally" "tallies";
lin tally_V = mkV "tally" "tallies" "tallied" "tallied" "tallying";
lin tally_V2 = mkV2 (mkV "tally" "tallies" "tallied" "tallied" "tallying");
lin tally_clerk_N = mkN "tally-clerk" "tally-clerks";
lin tallyman_N = mkN masculine (mkN "tallyman" "tallymen");
lin talmud_N = mkN "talmud" "talmuds";
lin talon_N = mkN "talon" "talons";
lin talus_N = mkN "talus" "taluses";
lin tam_N = mkN "tam" ;
lin tam_o'_shanter_N = mkN "tam-o'-shanter" "tam-o'-shanters";
lin tamable_A = compoundA (mkA "tamable");
lin tamale_N = mkN "tamale" "tamales";
lin tamandua_N = mkN "tamandua" ;
lin tamarau_N = mkN "tamarau" ;
lin tamarin_N = mkN "tamarin" ;
lin tamarind_N = mkN "tamarind" "tamarinds";
lin tamarisk_N = mkN "tamarisk" "tamarisks";
lin tambala_N = mkN "tambala" ;
lin tambour_N = mkN "tambour" "tambours";
lin tambourine_N = mkN "tambourine" "tambourines";
lin tame_A = mkA "tame" "tamer";
lin tame_V2 = mkV2 (mkV "tame" "tames" "tamed" "tamed" "taming");
lin tameness_N = mkN "tameness" ;
lin tamer_N = mkN "tamer" "tamers";
lin tamil_A = compoundA (mkA "tamil");
lin tamil_N = mkN "tamil" "tamils";
lin tammany_N = mkN "tammany" "IRREG";
lin tammy_N = mkN "tammy" "tammies";
lin tamp_N = mkN "tamp" ;
lin tamp_V2 = mkV2 (mkV "tamp" "tamps" "tamped" "tamped" "tamping");
lin tamper_V = mkV "tamper" "tampers" "tampered" "tampered" "tampering";
lin tampere_PN = mkPN "Tampere";
lin tampion_N = mkN "tampion" ;
lin tampon_N = mkN "tampon" ;
lin tamponade_N = mkN "tamponade" ;
lin tamworth_PN = mkPN "Tamworth";
lin tan_A = compoundA (mkA "tan");
lin tan_N = mkN "tan" "tans";
lin tan_V = mkV "tan" "tans" "tanned" "tanned" "tanning";
lin tan_V2 = mkV2 (mkV "tan" "tans" "tanned" "tanned" "tanning");
lin tanager_N = mkN "tanager" ;
lin tanbark_N = mkN "tanbark" ;
lin tandem_Adv = mkAdv "tandem";
lin tandem_N = mkN "tandem" "tandems";
lin tandoor_N = mkN "tandoor" ;
lin tanekaha_N = mkN "tanekaha" ;
lin tang_N = mkN "tang" "tangs";
lin tanga_N = mkN "tanga" ;
lin tangelo_N = mkN "tangelo" ;
lin tangency_N = mkN "tangency" ;
lin tangent_N = mkN "tangent" "tangents";
lin tangential_A = mkA "tangential" ;
lin tangerine_A = compoundA (mkA "tangerine");
lin tangerine_N = mkN "tangerine" "tangerines";
lin tangibility_N = mkN "tangibility" ;
lin tangible_A = compoundA (mkA "tangible");
lin tangle_N = mkN "tangle" "tangles";
lin tangle_V = mkV "tangle" "tangles" "tangled" "tangled" "tangling";
lin tangle_V2 = mkV2 (mkV "tangle" "tangles" "tangled" "tangled" "tangling");
lin tanglebush_N = mkN "tanglebush" ;
lin tango_N = mkN "tango" "tangos";
lin tango_V = mkV "tango";
lin tangram_N = mkN "tangram" ;
lin tangshan_PN = mkPN "Tangshan";
lin tangy_A = mkA "tangy" "tangier";
lin tank_N = mkN "tank" "tanks";
lin tank_V = mkV "tank" "tanks" "tanked" "tanked" "tanking";
lin tank_car_N = mkN "tank-car" "tank-cars";
lin tanka_N = mkN "tanka" ;
lin tankage_N = mkN "tankage" ;
lin tankard_N = mkN "tankard" "tankards";
lin tanker_N = mkN "tanker" "tankers";
lin tanner_N = mkN "tanner" "tanners";
lin tannery_N = mkN "tannery" "tanneries";
lin tannic_A = compoundA (mkA "tannic");
lin tannin_N = mkN "tannin" ;
lin tanning_N = mkN "tanning" ;
lin tannish_A = mkA "tannish" ;
lin tannoy_N = mkN "tannoy" "tannoys";
lin tansy_N = mkN "tansy" "tansies";
lin tantalite_N = mkN "tantalite" ;
lin tantalize_V2 = mkV2 (mkV "tantalize" "tantalizes" "tantalized" "tantalized" "tantalizing");
lin tantalizer_N = mkN "tantalizer" ;
lin tantalizing_A = mkA "tantalizing" ;
lin tantalum_N = mkN "tantalum" ;
lin tantamount_A = compoundA (mkA "tantamount");
lin tantra_N = mkN "tantra" ;
lin tantrum_N = mkN "tantrum" "tantrums";
lin tanzania_PN = mkPN "Tanzania";
lin tanzanian_A = compoundA (mkA "tanzanian");
lin tanzanian_N = mkN "tanzanian" "tanzanians";
lin taoiseach_N = mkN "taoiseach" ;
lin tap_N = mkN "tap" "taps";
lin tap_V = mkV "tap" "taps" "tapped" "tapped" "tapping";
lin tap_V2 = mkV2 (mkV "tap" "taps" "tapped" "tapped" "tapping");
lin tap_dancing_N = mkN "tap-dancing" ;
lin tapa_N = mkN "tapa" ;
lin tape_N = mkN "tape" "tapes";
lin tape_V = mkV "tape";
lin tape_V2 = mkV2 (mkV "tape" "tapes" "taped" "taped" "taping");
lin tape_measure_N = mkN "tape-measure" "tape-measures";
lin tape_recorder_N = mkN "tape-recorder" "tape-recorders";
lin tapenade_N = mkN "tapenade" ;
lin taper_N = mkN "taper" "tapers";
lin taper_V = mkV "taper" "tapers" "tapered" "tapered" "tapering";
lin taper_V2 = mkV2 (mkV "taper" "tapers" "tapered" "tapered" "tapering");
lin tapering_N = mkN "tapering" ;
lin tapestried_A = compoundA (mkA "tapestried");
lin tapestry_N = mkN "tapestry" "tapestries";
lin tapeworm_N = mkN "tapeworm" "tapeworms";
lin taphephobia_N = mkN "taphephobia" ;
lin tapioca_N = mkN "tapioca" ;
lin tapir_N = mkN "tapir" "tapirs";
lin tapotement_N = mkN "tapotement" ;
lin tapper_N = mkN "tapper" ;
lin tappet_N = mkN "tappet" ;
lin tapping_N = mkN "tapping" ;
lin taproom_N = mkN "taproom" "taprooms";
lin taproot_N = mkN "taproot" "taproots";
lin taps_N = mkN "taps" ;
lin tapster_N = mkN "tapster" "tapsters";
lin tar_N = mkN "tar" "tars";
lin tar_V2 = mkV2 (mkV "tar" "tars" "tarred" "tarred" "tarring");
lin tar_macadam_N = mkN "tar-macadam" ;
lin taradiddle_N = mkN "taradiddle" "taradiddles";
lin taranaki_PN = mkPN "Taranaki";
lin tarantella_N = mkN "tarantella" "tarantellas";
lin tarantelle_N = mkN "tarantelle" "tarantelles";
lin tarantism_N = mkN "tarantism" ;
lin taranto_PN = mkPN "Taranto";
lin tarantula_N = mkN "tarantula" "tarantulas";
lin tarboosh_N = mkN "tarboosh" "tarbooshes";
lin tardigrade_N = mkN "tardigrade" ;
lin tardiness_N = mkN "tardiness" ;
lin tardive_A = mkA "tardive" ;
lin tardy_A = mkA "tardy" "tardier";
lin tare_N = mkN "tare" "tares";
lin target_N = mkN "target" "targets";
lin target_V2 = mkV2 (variants {mkV "target" "targets" "targeted"  "targeted"  "targeting" ;
                                mkV "target" "targets" "targetted" "targetted" "targetting"});
lin target_V2V = mkV2V (mkV "target") noPrep to_Prep ;
lin tariff_N = mkN "tariff" "tariffs";
lin tarmac_N = mkN "tarmac" ;
lin tarmac_V2 = mkV2 (mkV "tarmac" "IRREG" "IRREG" "IRREG" "IRREG");
lin tarmacadam_N = mkN "tarmacadam" ;
lin tarn_N = mkN "tarn" "tarns";
lin tarnish_N = mkN "tarnish" ;
lin tarnish_V = mkV "tarnish" "tarnishes" "tarnished" "tarnished" "tarnishing";
lin tarnish_V2 = mkV2 (mkV "tarnish" "tarnishes" "tarnished" "tarnished" "tarnishing");
lin taro_N = mkN "taro" "taros";
lin tarpan_N = mkN "tarpan" ;
lin tarpaulin_N = mkN "tarpaulin" "tarpaulins";
lin tarpon_N = mkN "tarpon" "tarpons";
lin tarradiddle_N = mkN "tarradiddle" "tarradiddles";
lin tarragon_N = mkN "tarragon" ;
lin tarrasa_PN = mkPN "Tarrasa";
lin tarriance_N = mkN "tarriance" ;
lin tarry_A = compoundA (mkA "tarry");
lin tarry_V = mkV "tarry" "tarries" "tarried" "tarried" "tarrying";
lin tarsal_A = compoundA (mkA "tarsal");
lin tarsal_N = mkN "tarsal" "tarsals";
lin tarsier_N = mkN "tarsier" ;
lin tarsitis_N = mkN "tarsitis" ;
lin tarsus_N = mkN "tarsus" "tarsi" {- FIXME: guessed plural form -};
lin tart_A = compoundA (mkA "tart");
lin tart_N = mkN "tart" "tarts";
lin tart_V2 = mkV2 (mkV "tart" "tarts" "tarted" "tarted" "tarting");
lin tartan_N = mkN "tartan" "tartans";
lin tartar_N = mkN "tartar" "tartars";
lin tartaric_A = compoundA (mkA "tartaric");
lin tartlet_N = mkN "tartlet" ;
lin tartness_N = mkN "tartness" ;
lin tartrate_N = mkN "tartrate" ;
lin tarweed_N = mkN "tarweed" ;
lin tarwood_N = mkN "tarwood" ;
lin tashkent_PN = mkPN "Tashkent";
lin task_N = mkN "task" "tasks";
lin task_V2 = mkV2 (mkV "task" "tasks" "tasked" "tasked" "tasking");
lin task_force_N = mkN "task-force" "task-forces";
lin taskmaster_N = mkN "taskmaster" "taskmasters";
lin taskmistress_N = mkN "taskmistress" ;
lin tasmania_PN = mkPN "Tasmania";
lin tassel_N = mkN "tassel" "tassels";
lin tasseled_A = compoundA (mkA "tasseled");
lin tasselled_A = compoundA (mkA "tasselled");
lin tasset_N = mkN "tasset" ;
lin taste_N = mkN "taste" "tastes";
lin taste_V = mkV "taste" "tastes" "tasted" "tasted" "tasting";
lin taste_V2 = mkV2 (mkV "taste" "tastes" "tasted" "tasted" "tasting");
lin tastebud_N = mkN "tastebud" ;
lin tasteful_A = compoundA (mkA "tasteful");
lin tastefulness_N = mkN "tastefulness" ;
lin tasteless_A = compoundA (mkA "tasteless");
lin tastelessness_N = mkN "tastelessness" ;
lin taster_N = mkN "taster" "tasters";
lin tasting_N = mkN "tasting" ;
lin tasty_A = mkA "tasty" "tastier";
lin tat_N = mkN "tat" ;
lin tat_V = mkV "tat" "tats" "tatted" "tatted" "tatting";
lin tat_V2 = mkV2 (mkV "tat" "tats" "tatted" "tatted" "tatting");
lin tatouay_N = mkN "tatouay" ;
lin tatter_N = mkN "tatter" "tatters";
lin tatterdemalion_N = mkN "tatterdemalion" "tatterdemalions";
lin tattered_A = compoundA (mkA "tattered");
lin tatting_N = mkN "tatting" ;
lin tattle_N = mkN "tattle" ;
lin tattle_V = mkV "tattle" "tattles" "tattled" "tattled" "tattling";
lin tattle_V2 = mkV2 (mkV "tattle" "tattles" "tattled" "tattled" "tattling");
lin tattler_N = mkN "tattler" "tattlers";
lin tattletale_N = mkN "tattletale" ;
lin tattoo_N = mkN "tattoo" "tattoos";
lin tattoo_V2 = mkV2 (mkV "tattoo" "tattoos" "tattooed" "tattooed" "tattooing");
lin tatty_A = mkA "tatty" "tattier";
lin tau_N = mkN "tau" ;
lin taunt_N = mkN "taunt" "taunts";
lin taunt_V2 = mkV2 (mkV "taunt" "taunts" "taunted" "taunted" "taunting");
lin tauntingly_Adv = mkAdv "tauntingly";
lin taunton_PN = mkPN "Taunton";
lin tauon_N = mkN "tauon" ;
lin taupe_N = mkN "taupe" ;
lin taurine_A = mkA "taurine" ;
lin taurine_N = mkN "taurine" ;
lin taurus_PN = mkPN "Taurus";
lin taut_A = mkA "taut" "tauter";
lin tautness_N = mkN "tautness" ;
lin tautog_N = mkN "tautog" ;
lin tautological_A = compoundA (mkA "tautological");
lin tautology_N = mkN "tautology" "tautologies";
lin taverham_PN = mkPN "Taverham";
lin tavern_N = mkN "tavern" "taverns";
lin tavistock_PN = mkPN "Tavistock";
lin taw_N = mkN "taw" ;
lin tawdriness_N = mkN "tawdriness" ;
lin tawdry_A = mkA "tawdry" "tawdrier";
lin tawniness_N = mkN "tawniness" ;
lin tawny_A = compoundA (mkA "tawny");
lin tawse_N = mkN "tawse" "tawses";
lin tax_N = mkN "tax" "taxes";
lin tax_V2 = mkV2 (mkV "tax" "taxes" "taxed" "taxed" "taxing");
lin tax_collector_N = mkN "tax-collector" "tax-collectors";
lin tax_free_A = compoundA (mkA "tax-free");
lin taxability_N = mkN "taxability" ;
lin taxable_A = compoundA (mkA "taxable");
lin taxation_N = mkN "taxation" ;
lin taxer_N = mkN "taxer" ;
lin taxi_N = mkN "taxi" "taxis";
lin taxi_V = mkV "taxi" "taxis" "taxied" "taxied" "taxiing";
lin taxi_V2 = mkV2 (mkV "taxi" "taxis" "taxied" "taxied" "taxiing");
lin taxicab_N = mkN "taxicab" "taxicabs";
lin taxidermist_N = mkN "taxidermist" "taxidermists";
lin taxidermy_N = mkN "taxidermy" ;
lin taxidriver_N = mkN "taxidriver" ;
lin taximeter_N = mkN "taximeter" "taximeters";
lin taxis_N = mkN "taxis" ;
lin taxiway_N = mkN "taxiway" ;
lin taxonomic_A = mkA "taxonomic" ;
lin taxonomically_Adv = mkAdv "taxonomically" ;
lin taxonomist_N = mkN "taxonomist" ;
lin taxonomy_N = mkN "taxonomy" "taxonomies";
lin taxpayer_N = mkN "taxpayer" "taxpayers";
lin taxpaying_A = mkA "taxpaying" ;
lin tayra_N = mkN "tayra" ;
lin tayside_PN = mkPN "Tayside";
lin tb_N = mkN "tb" ;
lin tbilisi_PN = mkPN "Tbilisi";
lin te_deum_N = mkN "te deum" "te deums";
lin tea_N = mkN "tea" "teas";
lin tea_bag_N = mkN "tea-bag" "tea-bags";
lin tea_break_N = mkN "tea-break" "tea-breaks";
lin tea_caddy_N = mkN "tea-caddy" "tea-caddies";
lin tea_chest_N = mkN "tea-chest" "tea-chests";
lin tea_cloth_N = mkN "tea-cloth" "tea-cloths";
lin tea_cosy_N = mkN "tea-cosy" "tea-cosies";
lin tea_garden_N = mkN "tea-garden" "tea-gardens";
lin tea_kettle_N = mkN "tea-kettle" "tea-kettles";
lin tea_leaf_N = mkN "tea-leaf" "tea-leaves";
lin tea_party_N = mkN "tea-party" "tea-parties";
lin tea_service_N = mkN "tea-service" "tea-services";
lin tea_set_N = mkN "tea-set" "tea-sets";
lin tea_strainer_N = mkN "tea-strainer" "tea-strainers";
lin tea_table_N = mkN "tea-table" "tea-tables";
lin tea_time_N = mkN "tea-time" ;
lin tea_towel_N = mkN "tea-towel" "tea-towels";
lin tea_tray_N = mkN "tea-tray" "tea-trays";
lin tea_trolley_N = mkN "tea-trolley" "tea-trolleys";
lin tea_urn_N = mkN "tea-urn" "tea-urns";
lin tea_wagon_N = mkN "tea-wagon" "tea-wagons";
lin teaberry_N = mkN "teaberry" ;
lin teacake_N = mkN "teacake" "teacakes";
lin teach_V = IrregEng.teach_V;
lin teach_V2 = mkV2 (IrregEng.teach_V);
lin teach_V2V = mkV2V (IrregEng.teach_V) noPrep to_Prep ;
lin teach_in_N = mkN "teach-in" "teach-ins";
lin teachable_A = compoundA (mkA "teachable");
lin teacherMasc_N = mkN masculine (mkN "teacher" "teachers");
lin teacherFem_N = mkN feminine (mkN "teacher" "teachers");
lin teachership_N = mkN "teachership" ;
lin teaching_N = mkN "teaching" "teachings";
lin teacup_N = mkN "teacup" "teacups";
lin teahouse_N = mkN "teahouse" "teahouses";
lin teak_N = mkN "teak" ;
lin teakettle_N = mkN "teakettle" ;
lin teal_N = mkN "teal" "teal";
lin team_N = mkN "team" "teams";
lin team_V = mkV "team" "teams" "teamed" "teamed" "teaming";
lin teammate_N = mkN "teammate" ;
lin teamster_N = mkN "teamster" "teamsters";
lin teamwork_N = mkN "teamwork" ;
lin teapot_N = mkN "teapot" "teapots";
lin tear_N = mkN "tear" "tears";
lin tear_V = IrregEng.tear_V;
lin tear_V2 = mkV2 (IrregEng.tear_V);
lin tear_drop_N = mkN "tear-drop" "tear-drops";
lin tear_gas_N = mkN "tear-gas" ;
lin tearaway_A = compoundA (mkA "tearaway");
lin tearaway_N = mkN "tearaway" "tearaways";
lin teardrop_N = mkN "teardrop" ;
lin tearful_A = compoundA (mkA "tearful");
lin tearing_N = mkN "tearing" ;
lin tearjerker_N = mkN "tearjerker" ;
lin tearless_A = compoundA (mkA "tearless");
lin tearoom_N = mkN "tearoom" "tearooms";
lin teary_A = mkA "teary" ;
lin tease_N = mkN "tease" "teases";
lin tease_V2 = mkV2 (mkV "tease" "teases" "teased" "teased" "teasing");
lin teasel_N = mkN "teasel" "teasels";
lin teaser_N = mkN "teaser" "teasers";
lin teashop_N = mkN "teashop" "teashops";
lin teasing_A = mkA "teasing" ;
lin teasing_N = mkN "teasing" ;
lin teaspoon_N = mkN "teaspoon" "teaspoons";
lin teaspoonful_N = mkN "teaspoonful" "teaspoonfuls";
lin teat_N = mkN "teat" "teats";
lin teazel_N = mkN "teazel" "teazels";
lin teazle_N = mkN "teazle" "teazles";
lin tebibit_N = mkN "tebibit" ;
lin tec_N = mkN "tec" "tecs";
lin tech_N = mkN "tech" ;
lin techie_N = mkN "techie" ;
lin technetium_N = mkN "technetium" ;
lin technical_A = compoundA (mkA "technical");
lin technical_N = mkN "technical" ;
lin technicality_N = mkN "technicality" "technicalities";
lin technician_N = mkN human (mkN "technician" "technicians");
lin technicolor_N = mkN "technicolor" ;
lin technique_N = mkN "technique" "techniques";
lin techno_N = mkN "techno" ;
lin technobabble_N = mkN "technobabble" ;
lin technocracy_N = mkN "technocracy" "technocracies";
lin technocrat_N = mkN "technocrat" "technocrats";
lin technological_A = compoundA (mkA "technological");
lin technologist_N = mkN "technologist" "technologists";
lin technology_N = mkN "technology" "technologies";
lin technophile_N = mkN "technophile" ;
lin technophilia_N = mkN "technophilia" ;
lin technophilic_A = mkA "technophilic" ;
lin technophobe_N = mkN "technophobe" ;
lin technophobia_N = mkN "technophobia" ;
lin technophobic_A = mkA "technophobic" ;
lin techy_A = compoundA (mkA "techy");
lin tectonic_A = mkA "tectonic" ;
lin tectonics_N = mkN "tectonics" ;
lin ted_N = mkN "ted" "teds";
lin ted_PN = mkPN "Ted";
lin teddy_N = mkN "teddy" "teddies";
lin teddy_PN = mkPN "Teddy";
lin teddy_boy_N = mkN "teddy boy" "teddy boys";
lin tedious_A = compoundA (mkA "tedious");
lin tediousness_N = mkN "tediousness" ;
lin tedium_N = mkN "tedium" ;
lin tee_N = mkN "tee" "tees";
lin tee_V = mkV "tee" "IRREG" "IRREG" "IRREG" "IRREG";
lin tee_V2 = mkV2 (mkV "tee" "IRREG" "IRREG" "IRREG" "IRREG");
lin tee_shirt_N = mkN "tee-shirt" "tee-shirts";
lin teem_V = mkV "teem" "teems" "teemed" "teemed" "teeming";
lin teenage_A = compoundA (mkA "teenage");
lin teenager_N = mkN "teenager" "teenagers";
lin teens_N = mkN "teens" ;
lin teeny_A = mkA "teeny" "teenier";
lin teeoff_N = mkN "teeoff" ;
lin teesside_PN = mkPN "Teesside";
lin teeter_V = mkV "teeter" "teeters" "teetered" "teetered" "teetering";
lin teethe_V = mkV "teethe" "teethes" "teethed" "teethed" "teething";
lin teething_N = mkN "teething" ;
lin teetotal_A = compoundA (mkA "teetotal");
lin teetotaler_N = mkN "teetotaler" ;
lin teetotaling_N = mkN "teetotaling" ;
lin teetotaller_N = mkN "teetotaller" "teetotallers";
lin teetotum_N = mkN "teetotum" "teetotums";
lin teff_N = mkN "teff" ;
lin teg_N = mkN "teg" "tegs";
lin tegular_A = mkA "tegular" ;
lin tegument_N = mkN "tegument" "teguments";
lin teheran_PN = mkPN "Teheran";
lin teignmouth_PN = mkPN "Teignmouth";
lin teju_N = mkN "teju" ;
lin tektite_N = mkN "tektite" ;
lin tel_PN = mkPN "Tel";
lin tel_aviv_PN = mkPN "Tel-aviv";
lin telecast_N = mkN "telecast" "telecasts";
lin telecast_V2 = mkV2 (mkV "tele" IrregEng.cast_V);
lin telecaster_N = mkN "telecaster" ;
lin telecommunication_N = mkN "telecommunication" "telecommunications";
lin telecommuting_N = mkN "telecommuting" ;
lin teleconference_N = mkN "teleconference";
lin telefilm_N = mkN "telefilm" ;
lin telegnosis_N = mkN "telegnosis" ;
lin telegnostic_A = mkA "telegnostic" ;
lin telegram_N = mkN "telegram" "telegrams";
lin telegraph_N = mkN "telegraph" "telegraphs";
lin telegraph_V = mkV "telegraph" "telegraphs" "telegraphed" "telegraphed" "telegraphing";
lin telegraph_V2 = mkV2 (mkV "telegraph" "telegraphs" "telegraphed" "telegraphed" "telegraphing");
lin telegraph_line_N = mkN "telegraph-line" "telegraph-lines";
lin telegraph_pole_N = mkN "telegraph-pole" "telegraph-poles";
lin telegraph_post_N = mkN "telegraph-post" "telegraph-posts";
lin telegraph_wire_N = mkN "telegraph-wire" "telegraph-wires";
lin telegrapher_N = mkN "telegrapher" "telegraphers";
lin telegraphese_N = mkN "telegraphese" ;
lin telegraphic_A = compoundA (mkA "telegraphic");
lin telegraphically_Adv = mkAdv "telegraphically";
lin telegraphist_N = mkN "telegraphist" "telegraphists";
lin telegraphy_N = mkN "telegraphy" ;
lin telekinesis_N = mkN "telekinesis" ;
lin telemark_N = mkN "telemark" ;
lin telemarketing_N = mkN "telemarketing" ;
lin telemeter_N = mkN "telemeter" ;
lin telemetered_A = mkA "telemetered" ;
lin telemetry_N = mkN "telemetry" ;
lin telencephalon_N = mkN "telencephalon" ;
lin teleological_A = compoundA (mkA "teleological");
lin teleologist_N = mkN "teleologist" "teleologists";
lin teleology_N = mkN "teleology" "teleologies";
lin telepathic_A = compoundA (mkA "telepathic");
lin telepathist_N = mkN "telepathist" "telepathists";
lin telepathy_N = mkN "telepathy" ;
lin telephone_N = mkN "telephone" "telephones";
lin telephone_V = mkV "telephone" "telephones" "telephoned" "telephoned" "telephoning";
lin telephone_V2 = mkV2 (mkV "telephone" "telephones" "telephoned" "telephoned" "telephoning");
lin telephonic_A = compoundA (mkA "telephonic");
lin telephonistMasc_N = mkN masculine (mkN "telephonist" "telephonists");
lin telephonistFem_N = mkN feminine (mkN "telephonist" "telephonists");
lin telephony_N = mkN "telephony" ;
lin telephoto_N = mkN "telephoto" ;
lin telephotograph_N = mkN "telephotograph" "telephotographs";
lin telephotography_N = mkN "telephotography" ;
lin teleportation_N = mkN "teleportation" ;
lin teleprinter_N = mkN "teleprinter" "teleprinters";
lin teleprompter_N = mkN "teleprompter" "teleprompters";
lin telerobotics_N = mkN "telerobotics" ;
lin telescope_N = mkN "telescope" "telescopes";
lin telescope_V = mkV "telescope" "telescopes" "telescoped" "telescoped" "telescoping";
lin telescope_V2 = mkV2 (mkV "telescope" "telescopes" "telescoped" "telescoped" "telescoping");
lin telescopic_A = compoundA (mkA "telescopic");
lin telescopically_Adv = mkAdv "telescopically";
lin telescopy_N = mkN "telescopy" ;
lin telethermometer_N = mkN "telethermometer" ;
lin teletypewriter_N = mkN "teletypewriter" "teletypewriters";
lin televangelism_N = mkN "televangelism" ;
lin televangelist_N = mkN "televangelist" ;
lin televise_V2 = mkV2 (mkV "televise" "televises" "televised" "televised" "televising");
lin television_N = mkN "television" "televisions";
lin telex_N = mkN "telex" "telexes";
lin telfer_N = mkN "telfer" "telfers";
lin telford_PN = mkPN "Telford";
lin teliospore_N = mkN "teliospore" ;
lin tell_V = IrregEng.tell_V;
lin tell_V2 = mkV2 (IrregEng.tell_V);
lin tell_V2Q = mkV2Q (IrregEng.tell_V) noPrep;
lin tell_V2S = mkV2S (IrregEng.tell_V) noPrep;
lin tell_V2V = mkV2V (IrregEng.tell_V) noPrep to_Prep;
lin tell_V3 = mkV3 (IrregEng.tell_V) noPrep noPrep;
lin tell_VS = mkVS (IrregEng.tell_V);
lin tell_VV = mkVV (IrregEng.tell_V);
lin teller_N = mkN "teller" "tellers";
lin telling_A = compoundA (mkA "telling");
lin telling_N = mkN "telling" ;
lin telltale_N = mkN "telltale" "telltales";
lin tellurian_A = mkA "tellurian" ;
lin tellurian_N = mkN "tellurian" ;
lin telluric_A = mkA "telluric" ;
lin telluride_N = mkN "telluride" ;
lin tellurium_N = mkN "tellurium" ;
lin telly_N = mkN "telly" "tellies";
lin telocentric_A = mkA "telocentric" ;
lin telomerase_N = mkN "telomerase" ;
lin telomere_N = mkN "telomere" ;
lin telophase_N = mkN "telophase" ;
lin telpher_N = mkN "telpher" "telphers";
lin telpherage_N = mkN "telpherage" ;
lin telstar_PN = mkPN "Telstar";
lin temazepam_N = mkN "temazepam" ;
lin temerity_N = mkN "temerity" ;
lin temp_N = mkN "temp" "temps";
lin temper_N = mkN "temper" "tempers";
lin temper_V = mkV "temper" "tempers" "tempered" "tempered" "tempering";
lin temper_V2 = mkV2 (mkV "temper" "tempers" "tempered" "tempered" "tempering");
lin tempera_N = mkN "tempera" ;
lin temperament_N = mkN "temperament" "temperaments";
lin temperamental_A = compoundA (mkA "temperamental");
lin temperance_N = mkN "temperance" ;
lin temperate_A = compoundA (mkA "temperate");
lin temperateness_N = mkN "temperateness" ;
lin temperature_N = mkN "temperature" "temperatures";
lin tempest_N = mkN "tempest" "tempests";
lin tempest_swept_A = compoundA (mkA "tempest-swept");
lin tempest_tossed_A = compoundA (mkA "tempest-tossed");
lin tempestuous_A = compoundA (mkA "tempestuous");
lin tempestuousness_N = mkN "tempestuousness" ;
lin template_N = mkN "template" "templates";
lin temple_N = mkN "temple" "temples";
lin templet_N = mkN "templet" "templets";
lin tempo_N = mkN "tempo" "tempos";
lin temporal_A = compoundA (mkA "temporal");
lin temporality_N = mkN "temporality" ;
lin temporalty_N = mkN "temporalty" ;
lin temporariness_N = mkN "temporariness" ;
lin temporary_A = compoundA (mkA "temporary");
lin temporize_V = mkV "temporize" "temporizes" "temporized" "temporized" "temporizing";
lin temporizer_N = mkN "temporizer" ;
lin tempt_V2 = mkV2 (mkV "tempt" "tempts" "tempted" "tempted" "tempting");
lin tempt_V2V = mkV2V (mkV "tempt") noPrep to_Prep ;
lin temptable_A = mkA "temptable" ;
lin temptation_N = mkN "temptation" "temptations";
lin tempter_N = mkN "tempter" "tempters";
lin temptingly_Adv = mkAdv "temptingly";
lin temptress_N = mkN "temptress" "temptresses";
lin tempura_N = mkN "tempura" ;
lin tenability_N = mkN "tenability" ;
lin tenable_A = compoundA (mkA "tenable");
lin tenacious_A = compoundA (mkA "tenacious");
lin tenaciousness_N = mkN "tenaciousness" ;
lin tenacity_N = mkN "tenacity" ;
lin tenancy_N = mkN "tenancy" "tenancies";
lin tenant_N = mkN "tenant" "tenants";
lin tenant_V2 = mkV2 (mkV "tenant" "tenants" "tenanted" "tenanted" "tenanting");
lin tenantry_N = mkN "tenantry" "tenantries";
lin tenby_PN = mkPN "Tenby";
lin tench_N = mkN "tench" "tench";
lin tend_V = mkV "tend" "tends" "tended" "tended" "tending";
lin tend_V2 = mkV2 (mkV "tend" "tends" "tended" "tended" "tending");
lin tend_VV = mkVV (mkV "tend" "tends" "tended" "tended" "tending");
lin tendency_N = mkN "tendency" "tendencies";
lin tendentious_A = compoundA (mkA "tendentious");
lin tendentiousness_N = mkN "tendentiousness" ;
lin tender_A = mkA "tender" "tenderer";
lin tender_N = mkN "tender" "tenders";
lin tender_V = mkV "tender" "tenders" "tendered" "tendered" "tendering";
lin tender_V2 = mkV2 (mkV "tender" "tenders" "tendered" "tendered" "tendering");
lin tender_V2V = mkV2V (mkV "tender" "tenders" "tendered" "tendered" "tendering") noPrep to_Prep ;
lin tenderfoot_N = mkN "tenderfoot" "tenderfoots";
lin tendergreen_N = mkN "tendergreen" ;
lin tenderhearted_A = compoundA (mkA "tenderhearted");
lin tenderization_N = mkN "tenderization" ;
lin tenderized_A = mkA "tenderized" ;
lin tenderizer_N = mkN "tenderizer" ;
lin tenderloin_N = mkN "tenderloin" ;
lin tenderness_N = mkN "tenderness" ;
lin tendinitis_N = mkN "tendinitis" ;
lin tendinous_A = mkA "tendinous" ;
lin tendon_N = mkN "tendon" "tendons";
lin tendril_N = mkN "tendril" "tendrils";
lin tenebrous_A = mkA "tenebrous" ;
lin tenement_N = mkN "tenement" "tenements";
lin tenement_house_N = mkN "tenement-house" "tenement-houses";
lin tenesmus_N = mkN "tenesmus" ;
lin tenet_N = mkN "tenet" "tenets";
lin tenfold_A = mkA "tenfold" ;
lin tenfold_Adv = mkAdv "tenfold";
lin tenge_N = mkN "tenge" ;
lin tenner_N = mkN "tenner" "tenners";
lin tennessee_PN = mkPN "Tennessee";
lin tennis_N = mkN "tennis" ;
lin tennis_court_N = mkN "tennis-court" "tennis-courts";
lin tennis_elbow_N = mkN "tennis-elbow" ;
lin tenon_N = mkN "tenon" "tenons";
lin tenor_A = mkA "tenor" ;
lin tenor_N = mkN "tenor" "tenors";
lin tenoroon_N = mkN "tenoroon" ;
lin tenosynovitis_N = mkN "tenosynovitis" ;
lin tenpence_N = mkN "tenpence" "tenpences";
lin tenpin_N = mkN "tenpin" "tenpins";
lin tenpins_N = mkN "tenpins" ;
lin tenrec_N = mkN "tenrec" ;
lin tense_A = mkA "tense" "tenser";
lin tense_N = mkN "tense" "tenses";
lin tense_V = mkV "tense" "tenses" "tensed" "tensed" "tensing";
lin tense_V2 = mkV2 (mkV "tense" "tenses" "tensed" "tensed" "tensing");
lin tenseness_N = mkN "tenseness" ;
lin tensile_A = compoundA (mkA "tensile");
lin tensimeter_N = mkN "tensimeter" ;
lin tensiometer_N = mkN "tensiometer" ;
lin tension_N = mkN "tension" "tensions";
lin tensional_A = mkA "tensional" ;
lin tensionless_A = mkA "tensionless" ;
lin tensity_N = mkN "tensity" ;
lin tensor_N = mkN "tensor" ;
lin tent_N = mkN "tent" "tents";
lin tent_peg_N = mkN "tent-peg" "tent-pegs";
lin tentacle_N = mkN "tentacle" "tentacles";
lin tentacled_A = mkA "tentacled" ;
lin tentacular_A = mkA "tentacular" ;
lin tentative_A = compoundA (mkA "tentative");
lin tenter_N = mkN "tenter" ;
lin tenterden_PN = mkPN "Tenterden";
lin tenterhook_N = mkN "tenterhook" ;
lin tenth_N = mkN "tenth" "tenths";
lin tentmaker_N = mkN "tentmaker" ;
lin tentorium_N = mkN "tentorium" ;
lin tenuity_N = mkN "tenuity" ;
lin tenuous_A = compoundA (mkA "tenuous");
lin tenure_N = mkN "tenure" "tenures";
lin tenured_A = mkA "tenured" ;
lin tepal_N = mkN "tepal" ;
lin tepee_N = mkN "tepee" "tepees";
lin tepid_A = compoundA (mkA "tepid");
lin tepidity_N = mkN "tepidity" ;
lin tepidness_N = mkN "tepidness" ;
lin tequila_N = mkN "tequila" ;
lin terabit_N = mkN "terabit" ;
lin terabyte_N = mkN "terabyte" ;
lin teraflop_N = mkN "teraflop" ;
lin terahertz_N = mkN "terahertz" ;
lin teratogen_N = mkN "teratogen" ;
lin teratogenesis_N = mkN "teratogenesis" ;
lin teratogenic_A = mkA "teratogenic" ;
lin teratology_N = mkN "teratology" ;
lin teratoma_N = mkN "teratoma" ;
lin terazosin_N = mkN "terazosin" ;
lin terbinafine_N = mkN "terbinafine" ;
lin terbium_N = mkN "terbium" ;
lin terce_N = mkN "terce" ;
lin tercentenary_N = mkN "tercentenary" "tercentenaries";
lin tercentennial_N = mkN "tercentennial" "tercentennials";
lin terebinth_N = mkN "terebinth" ;
lin teredo_N = mkN "teredo" ;
lin terence_PN = mkPN "Terence";
lin teres_N = mkN "teres" ;
lin teresa_PN = mkPN "Teresa";
lin terete_A = mkA "terete" ;
lin tergiversate_V = mkV "tergiversate" "tergiversates" "tergiversated" "tergiversated" "tergiversating";
lin tergiversation_N = mkN "tergiversation" ;
lin teriyaki_N = mkN "teriyaki" ;
lin term_N = mkN "term" "terms";
lin term_V2 = mkV2 (mkV "term" "terms" "termed" "termed" "terming");
lin term_VS = mkVS (mkV "term");
lin termagant_N = mkN "termagant" "termagants";
lin termer_N = mkN "termer" ;
lin termi_PN = mkPN "Termi";
lin terminable_A = compoundA (mkA "terminable");
lin terminal_A = compoundA (mkA "terminal");
lin terminal_N = mkN "terminal" "terminals";
lin terminate_V = mkV "terminate" "terminates" "terminated" "terminated" "terminating";
lin terminate_V2 = mkV2 (mkV "terminate" "terminates" "terminated" "terminated" "terminating");
lin termination_N = mkN "termination" "terminations";
lin terminative_A = mkA "terminative" ;
lin terminological_A = compoundA (mkA "terminological");
lin terminology_N = mkN "terminology" "terminologies";
lin terminus_N = mkN "terminus" "terminuses";
lin termite_N = mkN "termite" "termites";
lin tern_N = mkN "tern" "terns";
lin ternary_A = mkA "ternary" ;
lin ternate_A = mkA "ternate" ;
lin terpene_N = mkN "terpene" ;
lin terpsichorean_A = compoundA (mkA "terpsichorean");
lin terr_PN = mkPN "Terr";
lin terra_cotta_N = mkN "terra-cotta" ;
lin terra_firma_N = mkN "terra firma" ;
lin terra_incognita_N = mkN "terra incognita" ;
lin terrace_N = mkN "terrace" "terraces";
lin terrace_V2 = mkV2 (mkV "terrace" "terraces" "terraced" "terraced" "terracing");
lin terrain_N = mkN "terrain" ;
lin terrapin_N = mkN "terrapin" "terrapins";
lin terrarium_N = mkN "terrarium" ;
lin terreplein_N = mkN "terreplein" ;
lin terrestrial_A = compoundA (mkA "terrestrial");
lin terrible_A = compoundA (mkA "terrible");
lin terrier_N = mkN "terrier" "terriers";
lin terrific_A = compoundA (mkA "terrific");
lin terrifically_Adv = mkAdv "terrifically";
lin terrify_V2 = mkV2 (mkV "terrify" "terrifies" "terrified" "terrified" "terrifying");
lin terrine_N = mkN "terrine" ;
lin territorial_A = compoundA (mkA "territorial");
lin territorial_N = mkN "territorial" "territorials";
lin territoriality_N = mkN "territoriality" ;
lin territorialization_N = mkN "territorialization" ;
lin territory_N = mkN "territory" "territories";
lin terror_N = mkN "terror" "terrors";
lin terror_stricken_A = compoundA (mkA "terror-stricken");
lin terror_struck_A = compoundA (mkA "terror-struck");
lin terrorism_N = mkN "terrorism" ;
lin terrorist_N = mkN "terrorist" "terrorists";
lin terrorization_N = mkN "terrorization" ;
lin terrorize_V2 = mkV2 (mkV "terrorize" "terrorizes" "terrorized" "terrorized" "terrorizing");
lin terry_N = mkN "terry" ;
lin terry_PN = mkPN "Terry";
lin terse_A = mkA "terse" "terser";
lin terseness_N = mkN "terseness" ;
lin tertian_A = compoundA (mkA "tertian");
lin tertiary_A = compoundA (mkA "tertiary");
lin tertigravida_N = mkN "tertigravida" ;
lin terylene_N = mkN "terylene" ;
lin tesla_N = mkN "tesla" ;
lin tess_PN = mkPN "Tess";
lin tessa_PN = mkPN "Tessa";
lin tessella_N = mkN "tessella" ;
lin tessellated_A = compoundA (mkA "tessellated");
lin tessellation_N = mkN "tessellation" ;
lin tessera_N = mkN "tessera" ;
lin tesseract_N = mkN "tesseract" ;
lin test_N = mkN "test" "tests";
lin test_V2 = mkV2 (mkV "test" "tests" "tested" "tested" "testing");
lin test_drive_N = mkN "test-drive" "test-drives";
lin test_drive_V2 = mkV2 (mkV "test-" IrregEng.drive_V);
lin test_tube_N = mkN "test-tube" "test-tubes";
lin testa_N = mkN "testa" ;
lin testacean_N = mkN "testacean" ;
lin testaceous_A = mkA "testaceous" ;
lin testament_N = mkN "testament" "testaments";
lin testamentary_A = compoundA (mkA "testamentary");
lin testate_A = compoundA (mkA "testate");
lin testate_N = mkN "testate" "testates";
lin testator_N = mkN "testator" "testators";
lin testatrix_N = mkN "testatrix" "testatrixes";
lin testbed_N = mkN "testbed" "testbeds";
lin testcross_N = mkN "testcross" ;
lin testee_N = mkN "testee" ;
lin tester_N = mkN "tester" ;
lin testicle_N = mkN "testicle" "testicles";
lin testicular_A = mkA "testicular" ;
lin testifier_N = mkN "testifier" ;
lin testify_V = mkV "testify" "testifies" "testified" "testified" "testifying";
lin testify_V2 = mkV2 (mkV "testify" "testifies" "testified" "testified" "testifying");
lin testify_VS = mkVS (mkV "testify" "testifies" "testified" "testified" "testifying");
lin testimonial_A = mkA "testimonial" ;
lin testimonial_N = mkN "testimonial" "testimonials";
lin testimony_N = mkN "testimony" "testimonies";
lin testiness_N = mkN "testiness" ;
lin testing_N = mkN "testing" ;
lin testis_N = mkN "testis" "testes" {- FIXME: guessed plural form -};
lin testosterone_N = mkN "testosterone" ;
lin testudo_N = mkN "testudo" ;
lin testy_A = mkA "testy" "testier";
lin tetanic_A = mkA "tetanic" ;
lin tetanus_N = mkN "tetanus" ;
lin tetany_N = mkN "tetany" ;
lin tetartanopia_N = mkN "tetartanopia" ;
lin tetchiness_N = mkN "tetchiness" ;
lin tetchy_A = mkA "tetchy" "tetchier";
lin tete_a_tete_Adv = mkAdv "tête-à-tête";
lin tete_a_tete_N = mkN "tête-à-tête" "tête-à-têtes";
lin teth_N = mkN "teth" ;
lin tether_N = mkN "tether" "tethers";
lin tether_V2 = mkV2 (mkV "tether" "tethers" "tethered" "tethered" "tethering");
lin tetherball_N = mkN "tetherball" ;
lin tetra_N = mkN "tetra" ;
lin tetracaine_N = mkN "tetracaine" ;
lin tetrachlorethylene_N = mkN "tetrachlorethylene" ;
lin tetrachloride_N = mkN "tetrachloride" ;
lin tetracycline_N = mkN "tetracycline" ;
lin tetrafluoroethylene_N = mkN "tetrafluoroethylene" ;
lin tetragonal_A = mkA "tetragonal" ;
lin tetragram_N = mkN "tetragram" ;
lin tetrahalide_N = mkN "tetrahalide" ;
lin tetrahedron_N = mkN "tetrahedron" ;
lin tetrahydrocannabinol_N = mkN "tetrahydrocannabinol" ;
lin tetrahymena_N = mkN "tetrahymena" ;
lin tetralogy_N = mkN "tetralogy" ;
lin tetramerous_A = mkA "tetramerous" ;
lin tetrameter_N = mkN "tetrameter" ;
lin tetrametric_A = mkA "tetrametric" ;
lin tetrapod_N = mkN "tetrapod" ;
lin tetrasaccharide_N = mkN "tetrasaccharide" ;
lin tetraskelion_N = mkN "tetraskelion" ;
lin tetrasporangium_N = mkN "tetrasporangium" ;
lin tetraspore_N = mkN "tetraspore" ;
lin tetravalent_A = mkA "tetravalent" ;
lin tetri_N = mkN "tetri" ;
lin tetrode_N = mkN "tetrode" ;
lin tetrodotoxin_N = mkN "tetrodotoxin" ;
lin tetrose_N = mkN "tetrose" ;
lin tetroxide_N = mkN "tetroxide" ;
lin tetryl_N = mkN "tetryl" ;
lin teuton_N = mkN "teuton" "teutons";
lin teutonic_A = compoundA (mkA "teutonic");
lin tewkesbury_PN = mkPN "Tewkesbury";
lin texan_A = compoundA (mkA "texan");
lin texan_N = mkN "texan" "texans";
lin texas_PN = mkPN "Texas";
lin text_N = mkN "text" "texts";
lin textbook_N = mkN "textbook" "textbooks";
lin textile_A = compoundA (mkA "textile");
lin textile_N = mkN "textile" "textiles";
lin textual_A = compoundA (mkA "textual");
lin texture_N = mkN "texture" "textures";
lin textured_A = compoundA (mkA "textured");
lin thai_A = compoundA (mkA "Thai");
lin thai_N = mkN "thai" "thais";
lin thailand_PN = mkPN "Thailand";
lin thalamocortical_A = mkA "thalamocortical" ;
lin thalamus_N = mkN "thalamus" ;
lin thalassemia_N = mkN "thalassemia" ;
lin thalassic_A = mkA "thalassic" ;
lin thalidomide_N = mkN "thalidomide" ;
lin thallium_N = mkN "thallium" ;
lin thalloid_A = mkA "thalloid" ;
lin thallophyte_N = mkN "thallophyte" ;
lin thallophytic_A = mkA "thallophytic" ;
lin thallus_N = mkN "thallus" ;
lin thalweg_N = mkN "thalweg" ;
lin thame_PN = mkPN "Thame";
lin than_Prep = mkPrep "than";
lin thanatology_N = mkN "thanatology" ;
lin thanatophobia_N = mkN "thanatophobia" ;
lin thanatopsis_N = mkN "thanatopsis" ;
lin thane_N = mkN "thane" "thanes";
lin thaneship_N = mkN "thaneship" ;
lin thank_V2 = mkV2 (mkV "thank" "thanks" "thanked" "thanked" "thanking");
lin thank_offering_N = mkN "thank-offering" "thank-offerings";
lin thankful_A = compoundA (mkA "thankful");
lin thankfulness_N = mkN "thankfulness" ;
lin thankless_A = compoundA (mkA "thankless");
lin thanks_Interj = ss "thanks";
lin thanksgiving_N = mkN "thanksgiving" "thanksgivings";
lin that_Quant = mkQuant "that" "those" ;
lin that_Subj = mkSubj "that";
lin thatch_N = mkN "thatch" ;
lin thatch_V2 = mkV2 (mkV "thatch" "thatches" "thatched" "thatched" "thatching");
lin thatcham_PN = mkPN "Thatcham";
lin thatcher_N = mkN "thatcher" "thatchers";
lin thaumatolatry_N = mkN "thaumatolatry" ;
lin thaw_N = mkN "thaw" "thaws";
lin thaw_V = mkV "thaw" "thaws" "thawed" "thawed" "thawing";
lin thaw_V2 = mkV2 (mkV "thaw" "thaws" "thawed" "thawed" "thawing");
lin theanthropism_N = mkN "theanthropism" ;
lin theatre_N = mkN (variants {"theatre"; "theater"});
lin theatregoer_N = mkN "theatregoer" "theatregoers";
lin theatrical_A = compoundA (mkA "theatrical");
lin theatrical_N = mkN "theatrical" "theatricals";
lin thebe_N = mkN "thebe" ;
lin theca_N = mkN "theca" ;
lin thecodont_N = mkN "thecodont" ;
lin theft_N = mkN "theft" "thefts";
lin theism_N = mkN "theism" ;
lin theist_A = mkA "theist" ;
lin theist_N = mkN "theist" "theists";
lin theistic_A = compoundA (mkA "theistic");
lin theistical_A = compoundA (mkA "theistical");
lin thelarche_N = mkN "thelarche" ;
lin thematic_A = compoundA (mkA "thematic");
lin thematically_Adv = mkAdv "thematically" ;
lin theme_N = mkN "theme" "themes";
lin then_Adv = mkAdv "then";
lin then_N = mkN "then" ;
lin then_Prep = mkPrep "then";
lin thenal_A = mkA "thenal" ;
lin thenar_N = mkN "thenar" ;
lin thence_Adv = mkAdv "thence";
lin thenceforth_Adv = mkAdv "thenceforth";
lin thenceforward_Adv = mkAdv "thenceforward";
lin theo_PN = mkPN "Theo";
lin theocracy_N = mkN "theocracy" "theocracies";
lin theocratic_A = compoundA (mkA "theocratic");
lin theodicy_N = mkN "theodicy" ;
lin theodolite_N = mkN "theodolite" "theodolites";
lin theodore_PN = mkPN "Theodore";
lin theogony_N = mkN "theogony" ;
lin theologian_N = mkN "theologian" "theologians";
lin theological_A = compoundA (mkA "theological");
lin theology_N = mkN "theology" "theologies";
lin theophany_N = mkN "theophany" ;
lin theophylline_N = mkN "theophylline" ;
lin theorem_N = mkN "theorem" "theorems";
lin theoretic_A = compoundA (mkA "theoretic");
lin theoretical_A = compoundA (mkA "theoretical");
lin theoretician_N = mkN "theoretician" "theoreticians";
lin theorist_N = mkN "theorist" "theorists";
lin theorization_N = mkN "theorization" ;
lin theorize_V = mkV "theorize" "theorizes" "theorized" "theorized" "theorizing";
lin theorize_VS = mkVS (mkV "theorize" "theorizes" "theorized" "theorized" "theorizing");
lin theory_N = mkN "theory" "theories";
lin theosophical_A = compoundA (mkA "theosophical");
lin theosophism_N = mkN "theosophism" ;
lin theosophist_N = mkN "theosophist" "theosophists";
lin theosophy_N = mkN "theosophy" ;
lin theoterrorism_N = mkN "theoterrorism" ;
lin therapeutic_A = compoundA (mkA "therapeutic");
lin therapeutical_A = compoundA (mkA "therapeutical");
lin therapeutics_N = mkN "therapeutics" "therapeutics";
lin therapist_N = mkN "therapist" "therapists";
lin therapsid_N = mkN "therapsid" ;
lin therapy_N = mkN "therapy" "therapies";
lin there_Adv = mkAdv "there";
lin thereabout_Adv = mkAdv "thereabout";
lin thereabouts_Adv = mkAdv "thereabouts";
lin thereafter_Adv = mkAdv "thereafter";
lin thereby_Adv = mkAdv "thereby";
lin therefor_Adv = mkAdv "therefor" ;
lin therefore_Adv = mkAdv "therefore";
lin therefrom_Adv = mkAdv "therefrom";
lin therein_Adv = mkAdv "therein";
lin thereinafter_Adv = mkAdv "thereinafter";
lin theremin_N = mkN "theremin" ;
lin thereness_N = mkN "thereness" ;
lin thereof_Adv = mkAdv "thereof";
lin thereon_Adv = mkAdv "thereon";
lin theresa_PN = mkPN "Theresa";
lin thereto_Adv = mkAdv "thereto";
lin theretofore_Adv = mkAdv "theretofore" ;
lin thereunder_Adv = mkAdv "thereunder";
lin thereupon_Adv = mkAdv "thereupon";
lin therewith_Adv = mkAdv "therewith";
lin therewithal_Adv = mkAdv "therewithal";
lin therm_N = mkN "therm" "therms";
lin thermal_A = compoundA (mkA "thermal");
lin thermal_N = mkN "thermal" "thermals";
lin thermalgesia_N = mkN "thermalgesia" ;
lin thermion_N = mkN "thermion" ;
lin thermionic_A = compoundA (mkA "thermionic");
lin thermionics_N = mkN "thermionics" ;
lin thermistor_N = mkN "thermistor" ;
lin thermoacidophile_N = mkN "thermoacidophile" ;
lin thermocautery_N = mkN "thermocautery" ;
lin thermochemistry_N = mkN "thermochemistry" ;
lin thermocoagulation_N = mkN "thermocoagulation" ;
lin thermocouple_N = mkN "thermocouple" ;
lin thermodynamic_A = mkA "thermodynamic" ;
lin thermodynamically_Adv = mkAdv "thermodynamically" ;
lin thermodynamics_N = mkN "thermodynamics" "thermodynamics";
lin thermoelectric_A = mkA "thermoelectric" ;
lin thermoelectricity_N = mkN "thermoelectricity" ;
lin thermogram_N = mkN "thermogram" ;
lin thermograph_N = mkN "thermograph" ;
lin thermography_N = mkN "thermography" ;
lin thermogravimetry_N = mkN "thermogravimetry" ;
lin thermohydrometer_N = mkN "thermohydrometer" ;
lin thermohydrometric_A = mkA "thermohydrometric" ;
lin thermojunction_N = mkN "thermojunction" ;
lin thermolabile_A = mkA "thermolabile" ;
lin thermometer_N = mkN "thermometer" "thermometers";
lin thermometric_A = mkA "thermometric" ;
lin thermometry_N = mkN "thermometry" ;
lin thermonuclear_A = compoundA (mkA "thermonuclear");
lin thermopile_N = mkN "thermopile" ;
lin thermoplastic_A = compoundA (mkA "thermoplastic");
lin thermoplastic_N = mkN "thermoplastic" "thermoplastics";
lin thermoreceptor_N = mkN "thermoreceptor" ;
lin thermos_N = mkN "thermos" "thermoses";
lin thermosetting_A = compoundA (mkA "thermosetting");
lin thermosphere_N = mkN "thermosphere" ;
lin thermostat_N = mkN "thermostat" "thermostats";
lin thermostatic_A = compoundA (mkA "thermostatic");
lin thermostatically_Adv = mkAdv "thermostatically";
lin thermostatics_N = mkN "thermostatics" ;
lin thermotherapy_N = mkN "thermotherapy" ;
lin thermotropism_N = mkN "thermotropism" ;
lin theropod_N = mkN "theropod" ;
lin thesaurus_N = mkN "thesaurus" "thesauruses";
lin thesis_N = mkN "thesis" "theses" {- FIXME: guessed plural form -};
lin thespian_A = compoundA (mkA "thespian");
lin thespian_N = mkN "thespian" "thespians";
lin thessaloniki_PN = mkPN "Thessaloniki";
lin theta_N = mkN "theta" ;
lin thetford_PN = mkPN "Thetford";
lin theurgy_N = mkN "theurgy" ;
lin they_Pron = mkPron "they" "them" "their" "theirs" plural P3 human ;
lin thiabendazole_N = mkN "thiabendazole" ;
lin thiazide_N = mkN "thiazide" ;
lin thiazine_N = mkN "thiazine" ;
lin thick_A = mkA "thick" "thicker";
lin thick_Adv = mkAdv "thick";
lin thick_N = mkN "thick" ;
lin thick_headed_A = compoundA (mkA "thick-headed");
lin thick_set_A = compoundA (mkA "thick-set");
lin thick_skinned_A = compoundA (mkA "thick-skinned");
lin thicken_V = mkV "thicken" "thickens" "thickened" "thickened" "thickening";
lin thicken_V2 = mkV2 (mkV "thicken" "thickens" "thickened" "thickened" "thickening");
lin thickening_N = mkN "thickening" ;
lin thicket_N = mkN "thicket" "thickets";
lin thickhead_N = mkN "thickhead" ;
lin thickness_N = mkN "thickness" "thicknesses";
lin thickset_A = mkA "thickset" ;
lin thickspread_A = mkA "thickspread" ;
lin thief_N = mkN "thief" "thieves" {- FIXME: guessed plural form -};
lin thieve_V = mkV "thieve" "thieves" "thieved" "thieved" "thieving";
lin thieve_V2 = mkV2 (mkV "thieve" "thieves" "thieved" "thieved" "thieving");
lin thievery_N = mkN "thievery" ;
lin thievish_A = compoundA (mkA "thievish");
lin thievishness_N = mkN "thievishness" ;
lin thigh_N = mkN "thigh" "thighs";
lin thighbone_N = mkN "thighbone" "thighbones";
lin thill_N = mkN "thill" ;
lin thimble_N = mkN "thimble" "thimbles";
lin thimbleful_N = mkN "thimbleful" "thimblefuls";
lin thimbleweed_N = mkN "thimbleweed" ;
lin thimerosal_N = mkN "thimerosal" ;
lin thin_A = mkA "thin" "thinner";
lin thin_Adv = mkAdv "thin";
lin thin_V = mkV "thin" "thins" "thinned" "thinned" "thinning";
lin thin_V2 = mkV2 (mkV "thin" "thins" "thinned" "thinned" "thinning");
lin thin_skinned_A = compoundA (mkA "thin-skinned");
lin thine_A = compoundA (mkA "thine");
lin thing_N = mkN "thing" "things";
lin thingmabob_N = mkN "thingmabob" "thingmabobs";
lin thingmajig_N = mkN "thingmajig" "thingmajigs";
lin things_N = mkN "things" ;
lin thingumabob_N = mkN "thingumabob" "thingumabobs";
lin thingumajig_N = mkN "thingumajig" "thingumajigs";
lin thingummy_N = mkN "thingummy" "thingummies";
lin think_N = mkN "think" "thinks";
lin think_V = IrregEng.think_V;
lin think_V2 = mkV2 (IrregEng.think_V);
lin think_V2A = mkV2A (IrregEng.think_V) noPrep;
lin think_VS = mkVS (IrregEng.think_V);
lin think_tank_N = mkN "think-tank" "think-tanks";
lin thinkable_A = compoundA (mkA "thinkable");
lin thinkerMasc_N = mkN masculine (mkN "thinker" "thinkers");
lin thinkerFem_N = mkN feminine (mkN "thinker" "thinkers");
lin thinking_N = mkN "thinking" ;
lin thinness_N = mkN "thinness" ;
lin thiobacillus_N = mkN "thiobacillus" ;
lin thiobacteria_N = mkN "thiobacteria" ;
lin thiocyanate_N = mkN "thiocyanate" ;
lin thioguanine_N = mkN "thioguanine" ;
lin thionville_PN = mkPN "Thionville";
lin thiopental_N = mkN "thiopental" ;
lin thioridazine_N = mkN "thioridazine" ;
lin thiotepa_N = mkN "thiotepa" ;
lin thiothixene_N = mkN "thiothixene" ;
lin thiouracil_N = mkN "thiouracil" ;
lin third_rate_A = compoundA (mkA "third-rate");
lin third_rater_N = mkN "third-rater" "third-raters";
lin thirdhand_A = mkA "thirdhand" ;
lin thirdhand_Adv = mkAdv "thirdhand" ;
lin thirsk_PN = mkPN "Thirsk";
lin thirst_N = mkN "thirst" ;
lin thirst_V2 = mkV2 (mkV "thirst" "thirsts" "thirsted" "thirsted" "thirsting");
lin thirsty_A = mkA "thirsty" "thirstier";
lin this_Quant = mkQuant "this" "these" ;
lin thistle_N = mkN "thistle" "thistles";
lin thistledown_N = mkN "thistledown" ;
lin thistlelike_A = mkA "thistlelike" ;
lin thither_Adv = mkAdv "thither";
lin tho'_Adv = mkAdv "tho'";
lin thole_N = mkN "thole" "tholes";
lin tholepin_N = mkN "tholepin" "tholepins";
lin thomas_PN = mkPN "Thomas";
lin thong_N = mkN "thong" "thongs";
lin thoracocentesis_N = mkN "thoracocentesis" ;
lin thoracotomy_N = mkN "thoracotomy" ;
lin thorax_N = mkN "thorax" "thoraxes";
lin thoriated_A = mkA "thoriated" ;
lin thorite_N = mkN "thorite" ;
lin thorium_N = mkN "thorium" ;
lin thorn_N = mkN "thorn" "thorns";
lin thornbill_N = mkN "thornbill" ;
lin thornbury_PN = mkPN "Thornbury";
lin thorne_PN = mkPN "Thorne";
lin thornless_A = mkA "thornless" ;
lin thorny_A = mkA "thorny" "thornier";
lin thorough_A = compoundA (mkA "thorough");
lin thoroughbred_A = compoundA (mkA "thoroughbred");
lin thoroughbred_N = mkN "thoroughbred" "thoroughbreds";
lin thoroughfare_N = mkN "thoroughfare" "thoroughfares";
lin thoroughgoing_A = compoundA (mkA "thoroughgoing");
lin thoroughness_N = mkN "thoroughness" ;
lin thortveitite_N = mkN "thortveitite" ;
lin though_Adv = mkAdv "though";
lin though_Prep = mkPrep "though";
lin though_Subj = mkSubj "though";
lin thought_N = mkN "thought" "thoughts";
lin thought_reader_N = mkN "thought-reader" "thought-readers";
lin thoughtful_A = compoundA (mkA "thoughtful");
lin thoughtfulness_N = mkN "thoughtfulness" ;
lin thoughtless_A = compoundA (mkA "thoughtless");
lin thoughtlessness_N = mkN "thoughtlessness" ;
lin thousandfold_A = compoundA (mkA "thousandfold");
lin thousandfold_Adv = mkAdv "thousandfold";
lin thraldom_N = mkN "thraldom" ;
lin thrall_N = mkN "thrall" "thralls";
lin thrash_N = mkN "thrash" ;
lin thrash_V = mkV "thrash" "thrashes" "thrashed" "thrashed" "thrashing";
lin thrash_V2 = mkV2 (mkV "thrash" "thrashes" "thrashed" "thrashed" "thrashing");
lin thrasher_N = mkN "thrasher" ;
lin thrashing_N = mkN "thrashing" "thrashings";
lin thread_N = mkN "thread" "threads";
lin thread_V2 = mkV2 (mkV "thread" "threads" "threaded" "threaded" "threading");
lin threadbare_A = compoundA (mkA "threadbare");
lin threadfin_N = mkN "threadfin" ;
lin threadfish_N = mkN "threadfish" ;
lin threadlike_A = compoundA (mkA "threadlike");
lin threat_N = mkN "threat" "threats";
lin threaten_V = mkV "threaten" "threatens" "threatened" "threatened" "threatening";
lin threaten_V2 = mkV2 (mkV "threaten" "threatens" "threatened" "threatened" "threatening");
lin threaten_VS = mkVS (mkV "threaten" "threatens" "threatened" "threatened" "threatening");
lin threaten_VV = mkVV (mkV "threaten" "threatens" "threatened" "threatened" "threatening");
lin threateningly_Adv = mkAdv "threateningly";
lin three_cornered_A = compoundA (mkA "three-cornered");
lin three_d_A = compoundA (mkA "three-d");
lin three_d_N = mkN "three-d" ;
lin three_decker_N = mkN "three-decker" "three-deckers";
lin three_dimensional_A = compoundA (mkA "three-dimensional");
lin three_figure_A = compoundA (mkA "three-figure");
lin three_funnelled_A = compoundA (mkA "three-funnelled");
lin three_lane_A = compoundA (mkA "three-lane");
lin three_legged_A = compoundA (mkA "three-legged");
lin three_piece_A = compoundA (mkA "three-piece");
lin three_ply_A = compoundA (mkA "three-ply");
lin three_quarter_A = compoundA (mkA "three-quarter");
lin three_quarter_N = mkN "three-quarter" "three-quarters";
lin three_score_A = compoundA (mkA "three-score");
lin three_score_N = mkN "three-score" ;
lin three_storey_A = compoundA (mkA "three-storey");
lin three_storeyed_A = compoundA (mkA "three-storeyed");
lin three_wheeled_A = compoundA (mkA "three-wheeled");
lin threefold_A = compoundA (mkA "threefold");
lin threefold_Adv = mkAdv "threefold";
lin threepence_N = mkN "threepence" "threepences";
lin threepenny_A = compoundA (mkA "threepenny");
lin threescore_N = mkN "threescore" ;
lin threesome_N = mkN "threesome" "threesomes";
lin threnody_N = mkN "threnody" "threnodies";
lin threonine_N = mkN "threonine" ;
lin thresh_V = mkV "thresh" "threshes" "threshed" "threshed" "threshing";
lin thresh_V2 = mkV2 (mkV "thresh" "threshes" "threshed" "threshed" "threshing");
lin thresher_N = mkN "thresher" "threshers";
lin threshing_N = mkN "threshing" ;
lin threshing_floor_N = mkN "threshing-floor" "threshing-floors";
lin threshing_machine_N = mkN "threshing-machine" "threshing-machines";
lin threshold_N = mkN "threshold" "thresholds";
lin thrice_Adv = mkAdv "thrice";
lin thrift_N = mkN "thrift" ;
lin thriftless_A = compoundA (mkA "thriftless");
lin thriftlessness_N = mkN "thriftlessness" ;
lin thriftshop_N = mkN "thriftshop" ;
lin thrifty_A = mkA "thrifty" "thriftier";
lin thrill_N = mkN "thrill" "thrills";
lin thrill_V = mkV "thrill" "thrills" "thrilled" "thrilled" "thrilling";
lin thrill_V2 = mkV2 (mkV "thrill" "thrills" "thrilled" "thrilled" "thrilling");
lin thriller_N = mkN "thriller" "thrillers";
lin thrillful_A = mkA "thrillful" ;
lin thrips_N = mkN "thrips" ;
lin thrive_V = mkV "thrive" "thrives" "thrived" "thrived" "thriving";
lin throat_N = mkN "throat" "throats";
lin throated_A = compoundA (mkA "throated");
lin throatwort_N = mkN "throatwort" ;
lin throaty_A = mkA "throaty" "throatier";
lin throb_N = mkN "throb" "throbs";
lin throb_V = mkV "throb" "throbs" "throbbed" "throbbed" "throbbing";
lin throbbing_N = mkN "throbbing" ;
lin throe_N = mkN "throe" "throes";
lin throes_N = mkN "throes" ;
lin thrombasthenia_N = mkN "thrombasthenia" ;
lin thrombectomy_N = mkN "thrombectomy" ;
lin thrombin_N = mkN "thrombin" ;
lin thrombocytopenia_N = mkN "thrombocytopenia" ;
lin thrombocytosis_N = mkN "thrombocytosis" ;
lin thromboembolism_N = mkN "thromboembolism" ;
lin thrombolysis_N = mkN "thrombolysis" ;
lin thrombolytic_N = mkN "thrombolytic" ;
lin thrombophlebitis_N = mkN "thrombophlebitis" ;
lin thromboplastin_N = mkN "thromboplastin" ;
lin thrombosed_A = mkA "thrombosed" ;
lin thrombosis_N = mkN "thrombosis" ;
lin thrombus_N = mkN "thrombus" ;
lin throne_N = mkN "throne" "thrones";
lin throng_N = mkN "throng" "throngs";
lin throng_V = mkV "throng" "throngs" "thronged" "thronged" "thronging";
lin throng_V2 = mkV2 (mkV "throng" "throngs" "thronged" "thronged" "thronging");
lin throstle_N = mkN "throstle" "throstles";
lin throttle_N = mkN "throttle" "throttles";
lin throttle_V = mkV "throttle" "throttles" "throttled" "throttled" "throttling";
lin throttle_V2 = mkV2 (mkV "throttle" "throttles" "throttled" "throttled" "throttling");
lin throttle_valve_N = mkN "throttle-valve" "throttle-valves";
lin through_Adv = mkAdv "through";
lin through_Prep = mkPrep "through";
lin throughout_Adv = mkAdv "throughout";
lin throughout_Prep = mkPrep "throughout";
lin throughput_N = mkN "throughput" "throughputs";
lin throughway_N = mkN "throughway" "throughways";
lin throw_N = mkN "throw" "throws";
lin throw_V = IrregEng.throw_V;
lin throw_V2 = mkV2 (IrregEng.throw_V);
lin throw_in_N = mkN "throw-in" "throw-ins";
lin throwaway_N = mkN "throwaway" "throwaways";
lin throwback_N = mkN "throwback" "throwbacks";
lin thrower_N = mkN "thrower" ;
lin throwster_N = mkN "throwster" ;
lin thrum_N = mkN "thrum" ;
lin thrum_V = mkV "thrum" "thrums" "thrummed" "thrummed" "thrumming";
lin thrum_V2 = mkV2 (mkV "thrum" "thrums" "thrummed" "thrummed" "thrumming");
lin thrush_N = mkN "thrush" "thrushes";
lin thrust_N = mkN "thrust" "thrusts";
lin thrust_V = IrregEng.thrust_V;
lin thrust_V2 = mkV2 (IrregEng.thrust_V);
lin thrusterMasc_N = mkN masculine (mkN "thruster" "thrusters");
lin thrusterFem_N = mkN feminine (mkN "thruster" "thrusters");
lin thud_N = mkN "thud" "thuds";
lin thud_V = mkV "thud" "thuds" "thudded" "thudded" "thudding";
lin thug_N = mkN "thug" "thugs";
lin thuggee_N = mkN "thuggee" ;
lin thuggery_N = mkN "thuggery" ;
lin thulium_N = mkN "thulium" ;
lin thumb_N = mkN "thumb" "thumbs";
lin thumb_V2 = mkV2 (mkV "thumb" "thumbs" "thumbed" "thumbed" "thumbing");
lin thumbhole_N = mkN "thumbhole" ;
lin thumbnail_N = mkN "thumbnail" ;
lin thumbnut_N = mkN "thumbnut" "thumbnuts";
lin thumbprint_N = mkN "thumbprint" ;
lin thumbscrew_N = mkN "thumbscrew" "thumbscrews";
lin thumbstall_N = mkN "thumbstall" "thumbstalls";
lin thumbtack_N = mkN "thumbtack" "thumbtacks";
lin thump_N = mkN "thump" "thumps";
lin thump_V = mkV "thump" "thumps" "thumped" "thumped" "thumping";
lin thump_V2 = mkV2 (mkV "thump" "thumps" "thumped" "thumped" "thumping");
lin thunder_N = mkN "thunder" "thunders";
lin thunder_V = mkV "thunder" "thunders" "thundered" "thundered" "thundering";
lin thunder_V2 = mkV2 (mkV "thunder" "thunders" "thundered" "thundered" "thundering");
lin thunderbird_N = mkN "thunderbird" ;
lin thunderbolt_N = mkN "thunderbolt" "thunderbolts";
lin thunderclap_N = mkN "thunderclap" "thunderclaps";
lin thunderer_N = mkN "thunderer" ;
lin thunderhead_N = mkN "thunderhead" ;
lin thunderous_A = compoundA (mkA "thunderous");
lin thundershower_N = mkN "thundershower" ;
lin thunderstorm_N = mkN "thunderstorm" "thunderstorms";
lin thunderstruck_A = compoundA (mkA "thunderstruck");
lin thundery_A = compoundA (mkA "thundery");
lin thunk_N = mkN "thunk" ;
lin thurcroft_PN = mkPN "Thurcroft";
lin thurible_N = mkN "thurible" "thuribles";
lin thurifer_N = mkN "thurifer" ;
lin thurmaston_PN = mkPN "Thurmaston";
lin thurrock_PN = mkPN "Thurrock";
lin thurs_PN = mkPN "Thurs";
lin thursday_N = mkN "Thursday" "Thursdays";
lin thursday_PN = mkPN "Thursday";
lin thurso_PN = mkPN "Thurso";
lin thus_Adv = mkAdv "thus";
lin thwack_N = mkN "thwack" "thwacks";
lin thwack_V2 = mkV2 (mkV "thwack" "thwacks" "thwacked" "thwacked" "thwacking");
lin thwart_N = mkN "thwart" "thwarts";
lin thwart_V2 = mkV2 (mkV "thwart" "thwarts" "thwarted" "thwarted" "thwarting");
lin thy_A = compoundA (mkA "thy");
lin thylacine_N = mkN "thylacine" ;
lin thyme_N = mkN "thyme" ;
lin thymine_N = mkN "thymine" ;
lin thymol_N = mkN "thymol" ;
lin thymosin_N = mkN "thymosin" ;
lin thyroglobulin_N = mkN "thyroglobulin" ;
lin thyroid_A = mkA "thyroid" ;
lin thyroid_N = mkN "thyroid" "thyroids";
lin thyroidectomy_N = mkN "thyroidectomy" ;
lin thyroiditis_N = mkN "thyroiditis" ;
lin thyronine_N = mkN "thyronine" ;
lin thyroprotein_N = mkN "thyroprotein" ;
lin thyrotoxic_A = mkA "thyrotoxic" ;
lin thyrotropin_N = mkN "thyrotropin" ;
lin thyroxine_N = mkN "thyroxine" ;
lin thyrse_N = mkN "thyrse" ;
lin thyrsopteris_N = mkN "thyrsopteris" ;
lin thysanopter_N = mkN "thysanopter" ;
lin ti_N = mkN "ti" "IRREG";
lin tiara_N = mkN "tiara" "tiaras";
lin tibet_PN = mkPN "Tibet";
lin tibetan_A = compoundA (mkA "Tibetan");
lin tibetan_N = mkN "Tibetan" "Tibetans";
lin tibia_N = mkN "tibia" "tibiae" {- FIXME: guessed plural form -};
lin tibial_A = mkA "tibial" ;
lin tibialis_N = mkN "tibialis" ;
lin tic_N = mkN "tic" "tics";
lin tick_N = mkN "tick" "ticks";
lin tick_V = mkV "tick" "ticks" "ticked" "ticked" "ticking";
lin tick_V2 = mkV2 (mkV "tick" "ticks" "ticked" "ticked" "ticking");
lin tick_tock_N = mkN "tick-tock" "tick-tocks";
lin ticker_N = mkN "ticker" "tickers";
lin ticker_tape_N = mkN "ticker-tape" ;
lin ticket_N = mkN "ticket" "tickets";
lin ticket_V2 = mkV2 (mkV "ticket" "tickets" "ticketed" "ticketed" "ticketing");
lin ticket_collector_N = mkN "ticket-collector" "ticket-collectors";
lin ticking_N = mkN "ticking" ;
lin tickle_N = mkN "tickle" ;
lin tickle_V = mkV "tickle" "tickles" "tickled" "tickled" "tickling";
lin tickle_V2 = mkV2 (mkV "tickle" "tickles" "tickled" "tickled" "tickling");
lin tickler_N = mkN "tickler" "ticklers";
lin ticklish_A = compoundA (mkA "ticklish");
lin ticktack_N = mkN "ticktack" ;
lin ticktacktoe_N = mkN "ticktacktoe" ;
lin ticktock_N = mkN "ticktock" ;
lin tidal_A = compoundA (mkA "tidal");
lin tidbit_N = mkN "tidbit" "tidbits";
lin tiddler_N = mkN "tiddler" "tiddlers";
lin tiddley_A = compoundA (mkA "tiddley");
lin tiddlywinks_N = mkN "tiddlywinks" "tiddlywinks";
lin tide_N = mkN "tide" "tides";
lin tide_V2 = mkV2 (mkV "tide" "tides" "tided" "tided" "tiding");
lin tideland_N = mkN "tideland" ;
lin tidemark_N = mkN "tidemark" "tidemarks";
lin tidewater_N = mkN "tidewater" ;
lin tideway_N = mkN "tideway" "tideways";
lin tidiness_N = mkN "tidiness" ;
lin tidworth_PN = mkPN "Tidworth";
lin tidy_A = mkA "tidy" "tidier";
lin tidy_N = mkN "tidy" "tidies";
lin tidy_V = mkV "tidy" "tidies" "tidied" "tidied" "tidying";
lin tidy_V2 = mkV2 (mkV "tidy" "tidies" "tidied" "tidied" "tidying");
lin tidytips_N = mkN "tidytips" ;
lin tie_N = mkN "tie" "ties";
lin tie_V = mkV "tie" "ties" "tied" "tied" (variants {"tying"; "tieing"});
lin tie_V2 = mkV2 (mkV "tie" "ties" "tied" "tied" (variants {"tying"; "tieing"}));
lin tie_on_A = compoundA (mkA "tie-on");
lin tie_up_N = mkN "tie-up" "tie-ups";
lin tiebreaker_N = mkN "tiebreaker" ;
lin tientsin_PN = mkPN "Tientsin";
lin tier_N = mkN "tier" "tiers";
lin tiercel_N = mkN "tiercel" ;
lin tiered_A = mkA "tiered" ;
lin tiff_N = mkN "tiff" "tiffs";
lin tiger_N = mkN "tiger" "tigers";
lin tiger_lily_N = mkN "tiger-lily" "tiger-lilies";
lin tigerish_A = compoundA (mkA "tigerish");
lin tight_A = mkA "tight" "tighter";
lin tight_Adv = mkAdv "tight";
lin tight_laced_A = compoundA (mkA "tight-laced");
lin tight_lipped_A = compoundA (mkA "tight-lipped");
lin tight_wad_N = mkN "tight-wad" "tight-wads";
lin tighten_V = mkV "tighten" "tightens" "tightened" "tightened" "tightening";
lin tighten_V2 = mkV2 (mkV "tighten" "tightens" "tightened" "tightened" "tightening");
lin tightening_N = mkN "tightening" ;
lin tightness_N = mkN "tightness" ;
lin tightrope_N = mkN "tightrope" "tightropes";
lin tights_N = mkN "tights" ;
lin tiglon_N = mkN "tiglon" ;
lin tigress_N = mkN "tigress" "tigresses";
lin tike_N = mkN "tike" "tikes";
lin til_Prep = mkPrep "'til";
lin tilburg_PN = mkPN "Tilburg";
lin tilbury_PN = mkPN "Tilbury";
lin tilde_N = mkN "tilde" "tildes";
lin tile_N = mkN "tile" "tiles";
lin tile_V2 = mkV2 (mkV "tile" "tiles" "tiled" "tiled" "tiling");
lin tilefish_N = mkN "tilefish" ;
lin tiler_N = mkN "tiler" ;
lin tiling_N = mkN "tiling" ;
lin till_N = mkN "till" "tills";
lin till_Prep = mkPrep "till";
lin till_V2 = mkV2 (mkV "till" "tills" "tilled" "tilled" "tilling");
lin tillage_N = mkN "tillage" ;
lin tiller_N = mkN "tiller" "tillers";
lin tilling_N = mkN "tilling" ;
lin tilt_N = mkN "tilt" "tilts";
lin tilt_V = mkV "tilt" "tilts" "tilted" "tilted" "tilting";
lin tilt_V2 = mkV2 (mkV "tilt" "tilts" "tilted" "tilted" "tilting");
lin tilter_N = mkN "tilter" ;
lin tilth_N = mkN "tilth" "tilths";
lin tiltyard_N = mkN "tiltyard" "tiltyards";
lin tim_PN = mkPN "Tim";
lin timbale_N = mkN "timbale" ;
lin timber_N = mkN "timber" "timbers";
lin timbered_A = compoundA (mkA "timbered");
lin timberman_N = mkN masculine (mkN "timberman");
lin timbre_N = mkN "timbre" "timbres";
lin timbrel_N = mkN "timbrel" "timbrels";
lin time_N = mkN "time" "times";
lin time_V2 = mkV2 (mkV "time" "times" "timed" "timed" "timing");
lin time_ball_N = mkN "time-ball" "time-balls";
lin time_bomb_N = mkN "time-bomb" "time-bombs";
lin time_expired_A = compoundA (mkA "time-expired");
lin time_exposure_N = mkN "time-exposure" "time-exposures";
lin time_fuse_N = mkN "time-fuse" "time-fuses";
lin time_honoured_A = compoundA (mkA "time-honoured");
lin time_lag_N = mkN "time-lag" "time-lags";
lin time_limit_N = mkN "time-limit" "time-limits";
lin time_sheet_N = mkN "time-sheet" "time-sheets";
lin time_signal_N = mkN "time-signal" "time-signals";
lin time_switch_N = mkN "time-switch" "time-switches";
lin timecard_N = mkN "timecard" "timecards";
lin timekeeper_N = mkN "timekeeper" "timekeepers";
lin timekeeping_N = mkN "timekeeping" ;
lin timeless_A = compoundA (mkA "timeless");
lin timeline_N = mkN "timeline" ;
lin timeliness_N = mkN "timeliness" ;
lin timely_A = mkA "timely";
lin timepiece_N = mkN "timepiece" "timepieces";
lin timer_N = mkN "timer" ;
lin times_N = mkN "times" ;
lin timesaving_A = compoundA (mkA "timesaving");
lin timeserver_N = mkN "timeserver" "timeservers";
lin timeserving_A = compoundA (mkA "timeserving");
lin timetable_N = mkN "timetable" "timetables";
lin timework_N = mkN "timework" ;
lin timid_A = compoundA (mkA "timid");
lin timid_N = mkN "timid" ;
lin timidity_N = mkN "timidity" ;
lin timidness_N = mkN "timidness" ;
lin timing_N = mkN "timing" "timings";
lin timmy_PN = mkPN "Timmy";
lin timolol_N = mkN "timolol" ;
lin timorous_A = compoundA (mkA "timorous");
lin timothy_N = mkN "timothy" ;
lin timothy_PN = mkPN "Timothy";
lin timpanist_N = mkN "timpanist" "timpanists";
lin timucu_N = mkN "timucu" ;
lin tin_N = mkN "tin" "tins";
lin tin_V2 = mkV2 (mkV "tin" "tins" "tinned" "tinned" "tinning");
lin tin_opener_N = mkN "tin-opener" "tin-openers";
lin tin_pan_alley_N = mkN "tin pan alley" "tin pan alleys";
lin tin_plate_N = mkN "tin-plate" ;
lin tina_PN = mkPN "Tina";
lin tinamou_N = mkN "tinamou" ;
lin tincture_N = mkN "tincture" "tinctures";
lin tincture_V2 = mkV2 (mkV "tincture" "tinctures" "tinctured" "tinctured" "tincturing");
lin tinder_N = mkN "tinder" ;
lin tinderbox_N = mkN "tinderbox" "tinderboxes";
lin tine_N = mkN "tine" "tines";
lin tinea_N = mkN "tinea" ;
lin tined_A = compoundA (mkA "tined");
lin tineid_N = mkN "tineid" ;
lin tineoid_N = mkN "tineoid" ;
lin tinfoil_N = mkN "tinfoil" ;
lin ting_N = mkN "ting" "tings";
lin ting_V = mkV "ting" "tings" "tinged" "tinged" "tinging";
lin ting_V2 = mkV2 (mkV "ting" "tings" "tinged" "tinged" "tinging");
lin tinge_N = mkN "tinge" "tinges";
lin tinge_V2 = mkV2 (mkV "tinge" "tinges" "tinged" "tinged" "tinging");
lin tingle_N = mkN "tingle" "tingles";
lin tingle_V = mkV "tingle" "tingles" "tingled" "tingled" "tingling";
lin tinker_N = mkN "tinker" "tinkers";
lin tinker_V = mkV "tinker" "tinkers" "tinkered" "tinkered" "tinkering";
lin tinkerer_N = mkN "tinkerer" ;
lin tinkle_N = mkN "tinkle" "IRREG";
lin tinkle_V = mkV "tinkle" "tinkles" "tinkled" "tinkled" "tinkling";
lin tinkle_V2 = mkV2 (mkV "tinkle" "tinkles" "tinkled" "tinkled" "tinkling");
lin tinning_N = mkN "tinning" ;
lin tinnitus_N = mkN "tinnitus" ;
lin tinny_A = mkA "tinny" "tinnier";
lin tinsel_N = mkN "tinsel" ;
lin tinsel_V2 = mkV2 (mkV "tinsel" "tinsels" "tinselled" "tinselled" "tinselling");
lin tinselly_A = compoundA (mkA "tinselly");
lin tinsmith_N = mkN "tinsmith" "tinsmiths";
lin tint_N = mkN "tint" "tints";
lin tint_V2 = mkV2 (mkV "tint" "tints" "tinted" "tinted" "tinting");
lin tintack_N = mkN "tintack" "tintacks";
lin tinter_N = mkN "tinter" ;
lin tinting_N = mkN "tinting" ;
lin tintinnabulation_N = mkN "tintinnabulation" ;
lin tinware_N = mkN "tinware" ;
lin tiny_A = mkA "tiny" "tinier";
lin tip_N = mkN "tip" "tips";
lin tip_V = mkV "tip" "tips" "tipped" "tipped" "tipping";
lin tip_V2 = mkV2 (mkV "tip" "tips" "tipped" "tipped" "tipping");
lin tip_and_run_A = compoundA (mkA "tip-and-run");
lin tip_off_N = mkN "tip-off" "tip-offs";
lin tip_top_A = compoundA (mkA "tip-top");
lin tip_top_Adv = mkAdv "tip-top";
lin tip_up_A = compoundA (mkA "tip-up");
lin tipper_N = mkN "tipper" ;
lin tipperary_PN = mkPN "Tipperary";
lin tippet_N = mkN "tippet" "tippets";
lin tipple_N = mkN "tipple" ;
lin tipple_V = mkV "tipple" "tipples" "tippled" "tippled" "tippling";
lin tipple_V2 = mkV2 (mkV "tipple" "tipples" "tippled" "tippled" "tippling");
lin tippler_N = mkN "tippler" "tipplers";
lin tipstaff_N = mkN "tipstaff" "tipstaffs";
lin tipster_N = mkN "tipster" "tipsters";
lin tipsy_A = compoundA (mkA "tipsy");
lin tiptoe_A = mkA "tiptoe" ;
lin tiptoe_Adv = mkAdv "tiptoe";
lin tiptoe_N = mkN "tiptoe" ;
lin tiptoe_V = mkV "tiptoe" "IRREG" "IRREG" "IRREG" "IRREG";
lin tiptop_N = mkN "tiptop" ;
lin tipu_N = mkN "tipu" ;
lin tirade_N = mkN "tirade" "tirades";
lin tiramisu_N = mkN "tiramisu" ;
lin tire_N = mkN "tire" "tires";
lin tire_V = mkV "tire" "tires" "tired" "tired" "tiring";
lin tire_V2 = mkV2 (mkV "tire" "tires" "tired" "tired" "tiring");
lin tiredly_Adv = mkAdv "tiredly" ;
lin tiredness_N = mkN "tiredness" ;
lin tireless_A = compoundA (mkA "tireless");
lin tiresome_A = compoundA (mkA "tiresome");
lin tiring_Adv = mkAdv "tiring";
lin tiro_N = mkN "tiro" "tiros";
lin tisane_N = mkN "tisane" ;
lin tissue_N = mkN "tissue" "tissues";
lin tit_N = mkN "tit" "tits";
lin titan_N = mkN "titan" "titans";
lin titanic_A = compoundA (mkA "titanic");
lin titanium_N = mkN "titanium" ;
lin titanosaur_N = mkN "titanosaur" ;
lin titbit_N = mkN "titbit" "titbits";
lin titer_N = mkN "titer" ;
lin titfer_N = mkN "titfer" ;
lin tithe_N = mkN "tithe" "tithes";
lin tithe_barn_N = mkN "tithe-barn" "tithe-barns";
lin tither_N = mkN "tither" ;
lin titi_N = mkN "titi" ;
lin titillate_V2 = mkV2 (mkV "titillate" "titillates" "titillated" "titillated" "titillating");
lin titillating_A = mkA "titillating" ;
lin titillation_N = mkN "titillation" "titillations";
lin titivate_V = mkV "titivate" "titivates" "titivated" "titivated" "titivating";
lin titivate_V2 = mkV2 (mkV "titivate" "titivates" "titivated" "titivated" "titivating");
lin titivation_N = mkN "titivation" ;
lin titlark_N = mkN "titlark" "titlarks";
lin title_N = mkN "title" "titles";
lin title_V3 = mkV3 (mkV "title") noPrep noPrep;
lin title_deed_N = mkN "title-deed" "title-deeds";
lin title_page_N = mkN "title-page" "title-pages";
lin title_role_N = mkN "title-role" "title-roles";
lin titled_A = compoundA (mkA "titled");
lin titmouse_N = mkN "titmouse" "titmice" {- FIXME: guessed plural form -};
lin titration_N = mkN "titration" ;
lin titrator_N = mkN "titrator" ;
lin titter_N = mkN "titter" ;
lin titter_V = mkV "titter" "titters" "tittered" "tittered" "tittering";
lin titterer_N = mkN "titterer" ;
lin tittivate_V = mkV "tittivate" "tittivates" "tittivated" "tittivated" "tittivating";
lin tittivate_V2 = mkV2 (mkV "tittivate" "tittivates" "tittivated" "tittivated" "tittivating");
lin tittle_N = mkN "tittle" "IRREG";
lin tittle_tattle_N = mkN "tittle-tattle" ;
lin tittle_tattle_V = mkV "tittle-tattle" "tittle-tattles" "tittle-tattled" "tittle-tattled" "tittle-tattling";
lin titular_A = compoundA (mkA "titular");
lin tiverton_PN = mkPN "Tiverton";
lin tiyin_N = mkN "tiyin" ;
lin tizzy_N = mkN "tizzy" "tizzies";
lin tnt_N = mkN "tnt" ;
lin to_Adv = mkAdv "to";
lin to_Prep = mkPrep "to";
lin to_date_Adv = mkAdv "to date";
lin to_do_N = mkN "to-do" "to-dos";
lin toad_N = mkN "toad" "toads";
lin toad_in_the_hole_N = mkN "toad-in-the-hole" "IRREG";
lin toadfish_N = mkN "toadfish" ;
lin toadflax_N = mkN "toadflax" ;
lin toadstool_N = mkN "toadstool" "toadstools";
lin toady_N = mkN "toady" "toadies";
lin toady_V = mkV "toady" "toadies" "toadied" "toadied" "toadying";
lin toast_N = mkN "toast" "toasts";
lin toast_V = mkV "toast" "toasts" "toasted" "toasted" "toasting";
lin toast_V2 = mkV2 (mkV "toast" "toasts" "toasted" "toasted" "toasting");
lin toaster_N = mkN "toaster" "toasters";
lin toasting_N = mkN "toasting" ;
lin toasting_fork_N = mkN "toasting-fork" "toasting-forks";
lin toastmaster_N = mkN "toastmaster" "toastmasters";
lin toastrack_N = mkN "toastrack" "toastracks";
lin tobacco_N = mkN "tobacco" "tobaccos";
lin tobacconist_N = mkN "tobacconist" "tobacconists";
lin tobago_PN = mkPN "Tobago";
lin tobagonian_A = compoundA (mkA "tobagonian");
lin tobagonian_N = mkN "tobagonian" "tobagonians";
lin toboggan_N = mkN "toboggan" "toboggans";
lin toboggan_V = mkV "toboggan" "toboggans" "tobogganed" "tobogganed" "tobogganing";
lin tobogganing_N = mkN "tobogganing" ;
lin tobogganist_N = mkN "tobogganist" ;
lin tobramycin_N = mkN "tobramycin" ;
lin toby_N = mkN "toby" ;
lin toby_PN = mkPN "Toby";
lin toby_jug_N = mkN "toby-jug" "toby-jugs";
lin tocainide_N = mkN "tocainide" ;
lin toccata_N = mkN "toccata" "toccatas";
lin tocsin_N = mkN "tocsin" "tocsins";
lin tod_A = mkA "tod" ;
lin tod_N = mkN "tod" ;
lin today_Adv = mkAdv "today";
lin today_N = mkN "today" ;
lin toddle_V = mkV "toddle" "toddles" "toddled" "toddled" "toddling";
lin toddler_N = mkN "toddler" "toddlers";
lin toddy_N = mkN "toddy" "toddies";
lin todmorden_PN = mkPN "Todmorden";
lin tody_N = mkN "tody" ;
lin toe_N = mkN "toe" "toes";
lin toe_V2 = mkV2 (mkV "toe" "IRREG" "IRREG" "IRREG" "IRREG");
lin toea_N = mkN "toea" ;
lin toecap_N = mkN "toecap" "toecaps";
lin toed_A = mkA "toed" ;
lin toehold_N = mkN "toehold" "toeholds";
lin toeless_A = mkA "toeless" ;
lin toenail_N = mkN "toenail" "toenails";
lin toetoe_N = mkN "toetoe" ;
lin toff_N = mkN "toff" "toffs";
lin toffee_N = mkN "toffee" "toffees";
lin tog_V2 = mkV2 (mkV "tog" "togs" "togged" "togged" "togging");
lin toga_N = mkN "toga" "togas";
lin together_A = mkA "together" ;
lin together_Adv = mkAdv "together";
lin togetherness_N = mkN "togetherness" ;
lin toggle_N = mkN "toggle" "toggles";
lin togo_PN = mkPN "Togo";
lin togolese_A = compoundA (mkA "togolese");
lin togolese_N = mkN "togolese" "togolese";
lin togs_N = mkN "togs" ;
lin toil_N = mkN "toil" "toils";
lin toil_V = mkV "toil" "toils" "toiled" "toiled" "toiling";
lin toil_V2V = mkV2V (mkV "toil" "toils" "toiled" "toiled" "toiling") noPrep to_Prep ;
lin toil_VV = mkVV (mkV "toil" "toils" "toiled" "toiled" "toiling") ;
lin toiler_N = mkN "toiler" "toilers";
lin toilet_N = mkN "toilet" "toilets";
lin toilet_paper_N = mkN "toilet-paper" "toilet-papers";
lin toilet_powder_N = mkN "toilet-powder" ;
lin toilet_roll_N = mkN "toilet-roll" "toilet-rolls";
lin toilet_table_N = mkN "toilet-table" "toilet-tables";
lin toiletry_N = mkN "toiletry" ;
lin toilsome_A = compoundA (mkA "toilsome");
lin tokamak_N = mkN "tokamak" ;
lin tokay_N = mkN "tokay" ;
lin toke_N = mkN "toke" ;
lin token_N = mkN "token" "tokens";
lin tokyo_PN = mkPN "Tokyo";
lin tolazamide_N = mkN "tolazamide" ;
lin tolazoline_N = mkN "tolazoline" ;
lin tolbutamide_N = mkN "tolbutamide" ;
lin tole_N = mkN "tole" ;
lin tolerable_A = compoundA (mkA "tolerable");
lin tolerance_N = mkN "tolerance" "tolerances";
lin tolerant_A = compoundA (mkA "tolerant");
lin tolerate_V2 = mkV2 (mkV "tolerate" "tolerates" "tolerated" "tolerated" "tolerating");
lin toleration_N = mkN "toleration" ;
lin toll_N = mkN "toll" "tolls";
lin toll_V = mkV "toll" "tolls" "tolled" "tolled" "tolling";
lin toll_V2 = mkV2 (mkV "toll" "tolls" "tolled" "tolled" "tolling");
lin tollbar_N = mkN "tollbar" "tollbars";
lin tollbooth_N = mkN "tollbooth" "tollbooths";
lin toller_N = mkN "toller" ;
lin tollgate_N = mkN "tollgate" "tollgates";
lin tollhouse_N = mkN "tollhouse" "tollhouses";
lin tollkeeper_N = mkN "tollkeeper" ;
lin tolu_N = mkN "tolu" ;
lin toluene_N = mkN "toluene" ;
lin tom_N = mkN "tom" ;
lin tom_PN = mkPN "Tom";
lin tomahawk_N = mkN "tomahawk" "tomahawks";
lin tomahawk_V2 = mkV2 (mkV "tomahawk" "tomahawks" "tomahawked" "tomahawked" "tomahawking");
lin tomalley_N = mkN "tomalley" ;
lin tomatillo_N = mkN "tomatillo" ;
lin tomato_N = mkN "tomato" "tomatoes";
lin tomb_N = mkN "tomb" "tombs";
lin tombac_N = mkN "tombac" ;
lin tombola_N = mkN "tombola" "tombolas";
lin tomboy_N = mkN "tomboy" "tomboys";
lin tombstone_N = mkN "tombstone" "tombstones";
lin tomcat_N = mkN "tomcat" "tomcats";
lin tome_N = mkN "tome" "tomes";
lin tomentose_A = mkA "tomentose" ;
lin tomentum_N = mkN "tomentum" ;
lin tomfool_N = mkN "tomfool" "tomfools";
lin tomfoolery_N = mkN "tomfoolery" "tomfooleries";
lin tommy_PN = mkPN "Tommy";
lin tommy_gun_N = mkN "tommy-gun" "tommy-guns";
lin tommy_rot_N = mkN "tommy-rot" ;
lin tomograph_N = mkN "tomograph" ;
lin tomorrow_Adv = mkAdv "tomorrow";
lin tomorrow_N = mkN "tomorrow" "tomorrows";
lin tomtate_N = mkN "tomtate" ;
lin tomtit_N = mkN "tomtit" "tomtits";
lin tomtom_N = mkN "tomtom" "tomtoms";
lin ton_N = mkN "ton" "tons";
lin ton_V = mkV "ton" "tons" "tonned" "tonned" "tonning";
lin tonal_A = compoundA (mkA "tonal");
lin tonality_N = mkN "tonality" "tonalities";
lin tonbridge_PN = mkPN "Tonbridge";
lin tone_N = mkN "tone" "tones";
lin tone_V = mkV "tone" "tones" "toned" "toned" "toning";
lin tone_V2 = mkV2 (mkV "tone" "tones" "toned" "toned" "toning");
lin tone_deaf_A = compoundA (mkA "tone-deaf");
lin tone_poem_N = mkN "tone-poem" "tone-poems";
lin toneless_A = compoundA (mkA "toneless");
lin toner_N = mkN "toner" ;
lin tonga_PN = mkPN "Tonga";
lin tongan_A = compoundA (mkA "tongan");
lin tongan_N = mkN "tongan" "tongans";
lin tongs_N = mkN "tongs" ;
lin tongue_N = mkN "tongue" "tongues";
lin tongue_in_cheek_A = compoundA (mkA "tongue-in-cheek");
lin tongue_in_cheek_Adv = mkAdv "tongue-in-cheek";
lin tongue_tied_A = compoundA (mkA "tongue-tied");
lin tongue_twister_N = mkN "tongue-twister" "tongue-twisters";
lin tongued_A = compoundA (mkA "tongued");
lin tonguefish_N = mkN "tonguefish" ;
lin tongueflower_N = mkN "tongueflower" ;
lin tongueless_A = mkA "tongueless" ;
lin tonguelike_A = mkA "tonguelike" ;
lin tonic_A = compoundA (mkA "tonic");
lin tonic_N = mkN "tonic" "tonics";
lin tonic_sol_fa_N = mkN "tonic sol-fa" ;
lin tonicity_N = mkN "tonicity" ;
lin tonight_Adv = mkAdv "tonight";
lin tonight_N = mkN "tonight" ;
lin tonnage_N = mkN "tonnage" "tonnages";
lin tonne_N = mkN "tonne" "tonnes";
lin tonometer_N = mkN "tonometer" ;
lin tonometry_N = mkN "tonometry" ;
lin tons_N = mkN "tons" ;
lin tonsil_N = mkN "tonsil" "tonsils";
lin tonsillectomy_N = mkN "tonsillectomy" ;
lin tonsillitis_N = mkN "tonsillitis" ;
lin tonsorial_A = compoundA (mkA "tonsorial");
lin tonsure_N = mkN "tonsure" "tonsures";
lin tonsure_V2 = mkV2 (mkV "tonsure" "tonsures" "tonsured" "tonsured" "tonsuring");
lin tontine_N = mkN "tontine" "tontines";
lin tony_PN = mkPN "Tony";
lin tonyrefail_PN = mkPN "Tonyrefail";
lin too_AdA = mkAdA "too";
lin too_Adv = mkAdv "too";
lin tool_N = mkN "tool" "tools";
lin tool_V2 = mkV2 (mkV "tool" "tools" "tooled" "tooled" "tooling");
lin toolbox_N = mkN "toolbox" ;
lin toolmaker_N = mkN "toolmaker" ;
lin toolshed_N = mkN "toolshed" ;
lin toot_N = mkN "toot" "toots";
lin toot_V = mkV "toot" "toots" "tooted" "tooted" "tooting";
lin toot_V2 = mkV2 (mkV "toot" "toots" "tooted" "tooted" "tooting");
lin tooth_N = mkN "tooth" "teeth";
lin toothache_N = mkN "toothache" ;
lin toothbrush_N = mkN "toothbrush" "toothbrushes";
lin toothed_A = compoundA (mkA "toothed");
lin toothless_A = compoundA (mkA "toothless");
lin toothlike_A = mkA "toothlike" ;
lin toothpaste_N = mkN "toothpaste" "toothpastes";
lin toothpick_N = mkN "toothpick" "toothpicks";
lin toothpowder_N = mkN "toothpowder" ;
lin toothsome_A = compoundA (mkA "toothsome");
lin toothy_A = mkA "toothy" ;
lin tootle_N = mkN "tootle" "tootles";
lin tootle_V = mkV "tootle" "tootles" "tootled" "tootled" "tootling";
lin top_N = mkN "top" "tops";
lin top_V2 = mkV2 (mkV "top" "tops" "topped" "topped" "topping");
lin top_boot_N = mkN "top-boot" "top-boots";
lin top_dress_V2 = mkV2 (mkV "top-dress" "top-dresses" "top-dressed" "top-dressed" "top-dressing");
lin top_dressing_N = mkN "top-dressing" "top-dressings";
lin top_flight_A = compoundA (mkA "top-flight");
lin top_heavy_A = compoundA (mkA "top-heavy");
lin top_hole_A = compoundA (mkA "top-hole");
lin top_ranking_A = compoundA (mkA "top-ranking");
lin topaz_N = mkN "topaz" "topazes";
lin topcoat_N = mkN "topcoat" "topcoats";
lin tope_V = mkV "tope" "topes" "toped" "toped" "toping";
lin tope_V2 = mkV2 (mkV "tope" "topes" "toped" "toped" "toping");
lin toper_N = mkN "toper" "topers";
lin topgallant_A = compoundA (mkA "topgallant");
lin topgallant_N = mkN "topgallant" "topgallants";
lin tophus_N = mkN "tophus" ;
lin topi_N = mkN "topi" "topis";
lin topiary_N = mkN "topiary" ;
lin topic_N = mkN "topic" "topics";
lin topical_A = compoundA (mkA "topical");
lin topicality_N = mkN "topicality" ;
lin topicalization_N = mkN "topicalization" ;
lin topknot_N = mkN "topknot" "topknots";
lin topless_A = compoundA (mkA "topless");
lin topmast_N = mkN "topmast" "topmasts";
lin topminnow_N = mkN "topminnow" ;
lin topmost_A = compoundA (mkA "topmost");
lin topnotch_A = compoundA (mkA "topnotch");
lin topognosia_N = mkN "topognosia" ;
lin topographical_A = compoundA (mkA "topographical");
lin topography_N = mkN "topography" ;
lin topolatry_N = mkN "topolatry" ;
lin topological_A = mkA "topological" ;
lin topology_N = mkN "topology" ;
lin toponymy_N = mkN "toponymy" ;
lin topos_N = mkN "topos" ;
lin topper_N = mkN "topper" "toppers";
lin topping_N = mkN "topping" ;
lin topple_V = mkV "topple" "topples" "toppled" "toppled" "toppling";
lin topple_V2 = mkV2 (mkV "topple" "topples" "toppled" "toppled" "toppling");
lin topsail_N = mkN "topsail" "topsails";
lin topside_N = mkN "topside" ;
lin topsoil_N = mkN "topsoil" ;
lin topspin_N = mkN "topspin" ;
lin topsy_turvy_A = compoundA (mkA "topsy-turvy");
lin topsy_turvy_Adv = mkAdv "topsy-turvy";
lin topsy_turvydom_N = mkN "topsy-turvydom" "topsy-turvydoms";
lin toque_N = mkN "toque" "toques";
lin tor_N = mkN "tor" "tors";
lin torbay_PN = mkPN "Torbay";
lin torch_N = mkN "torch" "torches";
lin torch_V2 = mkV2 (mkV "torch");
lin torch_race_N = mkN "torch-race" "torch-races";
lin torch_singer_N = mkN "torch-singer" "torch-singers";
lin torchbearer_N = mkN "torchbearer" ;
lin torchlight_N = mkN "torchlight" ;
lin toreador_N = mkN "toreador" "toreadors";
lin torero_N = mkN "torero" ;
lin torino_PN = mkPN "Torino";
lin torment_N = mkN "torment" "torments";
lin torment_V2 = mkV2 (mkV "torment" "torments" "tormented" "tormented" "tormenting");
lin tormenter_N = mkN "tormenter" ;
lin tormentor_N = mkN "tormentor" "tormentors";
lin tornado_N = mkN "tornado" "tornadoes";
lin toroid_N = mkN "toroid" ;
lin toroidal_A = mkA "toroidal" ;
lin toronto_PN = mkPN "Toronto";
lin torpedo_N = mkN "torpedo" "torpedoes";
lin torpedo_V2 = mkV2 (mkV "torpedo" "torpedos" "torpedoed" "torpedoed" "torpedoing");
lin torpedo_boat_N = mkN "torpedo-boat" "torpedo-boats";
lin torpedo_tube_N = mkN "torpedo-tube" "torpedo-tubes";
lin torpid_A = compoundA (mkA "torpid");
lin torpidity_N = mkN "torpidity" ;
lin torpidness_N = mkN "torpidness" ;
lin torpor_N = mkN "torpor" "torpors";
lin torque_N = mkN "torque" "torques";
lin torr_N = mkN "torr" ;
lin torrent_N = mkN "torrent" "torrents";
lin torrential_A = compoundA (mkA "torrential");
lin torrid_A = compoundA (mkA "torrid");
lin torridity_N = mkN "torridity" ;
lin torsion_N = mkN "torsion" ;
lin torso_N = mkN "torso" "torsos";
lin tort_N = mkN "tort" "torts";
lin torte_N = mkN "torte" ;
lin tortellini_N = mkN "tortellini" ;
lin torticollis_N = mkN "torticollis" ;
lin tortilla_N = mkN "tortilla" "tortillas";
lin tortious_A = mkA "tortious" ;
lin tortoise_N = mkN "tortoise" "tortoises";
lin tortoiseshell_N = mkN "tortoiseshell" ;
lin tortricid_N = mkN "tortricid" ;
lin tortuosity_N = mkN "tortuosity" ;
lin tortuous_A = compoundA (mkA "tortuous");
lin torture_N = mkN "torture" "tortures";
lin torture_V2 = mkV2 (mkV "torture" "tortures" "tortured" "tortured" "torturing");
lin torturer_N = mkN "torturer" "torturers";
lin torulose_A = mkA "torulose" ;
lin torus_N = mkN "torus" ;
lin tory_N = mkN "tory" "tories";
lin tosh_N = mkN "tosh" "toshes";
lin toss_N = mkN "toss" "tosses";
lin toss_V = mkV "toss" "tosses" "tossed" "tossed" "tossing";
lin toss_V2 = mkV2 (mkV "toss" "tosses" "tossed" "tossed" "tossing");
lin toss_up_N = mkN "toss-up" "toss-ups";
lin tosser_N = mkN "tosser" ;
lin tossup_N = mkN "tossup" ;
lin tostada_N = mkN "tostada" ;
lin tot_N = mkN "tot" "tots";
lin tot_V = mkV "tot" "tots" "totted" "totted" "totting";
lin tot_V2 = mkV2 (mkV "tot" "tots" "totted" "totted" "totting");
lin total_A = compoundA (mkA "total");
lin total_N = mkN "total" "totals";
lin total_V = variants {mkV "total" "totals" "totaled"  "totaled"  "totaling";  -- US
                        mkV "total" "totals" "totalled" "totalled" "totalling"
                       };
lin total_V2 = mkV2 (variants {mkV "total" "totals" "totaled"  "totaled"  "totaling";  -- US
                               mkV "total" "totals" "totalled" "totalled" "totalling"
                              });
lin totalitarian_A = compoundA (mkA "totalitarian");
lin totalitarian_N = mkN "totalitarian" ;
lin totalitarianism_N = mkN "totalitarianism" ;
lin totality_N = mkN "totality" ;
lin totalizator_N = mkN "totalizator" "totalizators";
lin totara_N = mkN "totara" ;
lin tote_N = mkN "tote" "totes";
lin tote_V2 = mkV2 (mkV "tote" "totes" "toted" "toted" "toting");
lin totem_N = mkN "totem" "totems";
lin totem_pole_N = mkN "totem-pole" "totem-poles";
lin totemic_A = mkA "totemic" ;
lin totemism_N = mkN "totemism" ;
lin totemist_N = mkN "totemist" ;
lin totipotency_N = mkN "totipotency" ;
lin totipotent_A = mkA "totipotent" ;
lin totnes_PN = mkPN "Totnes";
lin totter_V = mkV "totter" "totters" "tottered" "tottered" "tottering";
lin tottery_A = compoundA (mkA "tottery");
lin toucan_N = mkN "toucan" "toucans";
lin toucanet_N = mkN "toucanet" ;
lin touch_N = mkN "touch" "touches";
lin touch_V = mkV "touch" "touches" "touched" "touched" "touching";
lin touch_V2 = mkV2 (mkV "touch" "touches" "touched" "touched" "touching");
lin touch_and_go_A = compoundA (mkA "touch-and-go");
lin touch_type_V = mkV "touch-type" "touch-types" "touch-typed" "touch-typed" "touch-typing";
lin touchable_A = compoundA (mkA "touchable");
lin touchback_N = mkN "touchback" ;
lin touchdown_N = mkN "touchdown" "touchdowns";
lin toucher_N = mkN "toucher" ;
lin touchiness_N = mkN "touchiness" ;
lin touching_A = mkA "touching";
lin touchline_N = mkN "touchline" "touchlines";
lin touchstone_N = mkN "touchstone" "touchstones";
lin touchy_A = mkA "touchy" "touchier";
lin tough_A = mkA "tough" "tougher";
lin tough_N = mkN "tough" "toughs";
lin toughen_V = mkV "toughen" "toughens" "toughened" "toughened" "toughening";
lin toughen_V2 = mkV2 (mkV "toughen" "toughens" "toughened" "toughened" "toughening");
lin toughie_N = mkN "toughie" "toughies";
lin toughness_N = mkN "toughness" ;
lin toulon_PN = mkPN "Toulon";
lin toulouse_PN = mkPN "Toulouse";
lin toupee_N = mkN "toupee" "toupees";
lin toupeed_A = mkA "toupeed" ;
lin tour_N = mkN "tour" "tours";
lin tour_V = mkV "tour" "tours" "toured" "toured" "touring";
lin tour_V2 = mkV2 (mkV "tour" "tours" "toured" "toured" "touring");
lin tour_de_force_N = mkN "tour de force" "IRREG";
lin touraco_N = mkN "touraco" ;
lin touring_N = mkN "touring" ;
lin tourism_N = mkN "tourism" ;
lin tourist_N = mkN "tourist" "tourists";
lin touristed_A = mkA "touristed" ;
lin tourmaline_N = mkN "tourmaline" ;
lin tournament_N = mkN "tournament" "tournaments";
lin tournedos_N = mkN "tournedos" ;
lin tourney_N = mkN "tourney" "tourneys";
lin tourniquet_N = mkN "tourniquet" "tourniquets";
lin tours_PN = mkPN "Tours";
lin tourtiere_N = mkN "tourtiere" ;
lin tousle_V2 = mkV2 (mkV "tousle" "tousles" "tousled" "tousled" "tousling");
lin tout_N = mkN "tout" "touts";
lin tout_V = mkV "tout" "touts" "touted" "touted" "touting";
lin tout_V2 = mkV2 (mkV "tout" "touts" "touted" "touted" "touting");
lin tout_ensemble_Adv = mkAdv "tout ensemble";
lin tout_ensemble_N = mkN "tout ensemble" "IRREG";
lin tovarich_N = mkN "tovarich" ;
lin tow_N = mkN "tow" "tows";
lin tow_V2 = mkV2 (mkV "tow" "tows" "towed" "towed" "towing");
lin toward_Prep = mkPrep "toward";
lin towards_Prep = mkPrep "towards";
lin towel_N = mkN "towel" "towels";
lin towel_V2 = mkV2 (mkV "towel" "towels" "towelled" "towelled" "towelling");
lin towel_horse_N = mkN "towel-horse" "towel-horses";
lin towel_rack_N = mkN "towel-rack" "towel-racks";
lin towel_rail_N = mkN "towel-rail" "towel-rails";
lin toweling_N = mkN "toweling" ;
lin towelling_N = mkN "towelling" ;
lin tower_N = mkN "tower" "towers";
lin tower_V = mkV "tower" "towers" "towered" "towered" "towering";
lin tower_block_N = mkN "tower-block" "tower-blocks";
lin tower_hamlets_PN = mkPN "Tower hamlets";
lin towhead_N = mkN "towhead" ;
lin towhee_N = mkN "towhee" ;
lin towing_line_N = mkN "towing-line" "towing-lines";
lin towing_path_N = mkN "towing-path" "towing-paths";
lin towing_rope_N = mkN "towing-rope" "towing-ropes";
lin towline_N = mkN "towline" "towlines";
lin town_N = mkN "town" "towns";
lin town_crier_N = mkN "town-crier" "town-criers";
lin town_gas_N = mkN "town-gas" ;
lin townee_N = mkN "townee" "townees";
lin townie_N = mkN "townie" ;
lin township_N = mkN "township" "townships";
lin townsman_N = mkN masculine (mkN "townsman" "townsmen");
lin towpath_N = mkN "towpath" "towpaths";
lin towrope_N = mkN "towrope" "towropes";
lin toxaemia_N = mkN "toxaemia" ;
lin toxemia_N = mkN "toxemia" ;
lin toxic_A = compoundA (mkA "toxic");
lin toxicity_N = mkN "toxicity" ;
lin toxicognath_N = mkN "toxicognath" ;
lin toxicological_A = mkA "toxicological" ;
lin toxicologist_N = mkN "toxicologist" "toxicologists";
lin toxicology_N = mkN "toxicology" ;
lin toxin_N = mkN "toxin" "toxins";
lin toxoplasmosis_N = mkN "toxoplasmosis" ;
lin toy_N = mkN "toy" "toys";
lin toy_V = mkV "toy" "toys" "toyed" "toyed" "toying";
lin toyon_N = mkN "toyon" ;
lin toyshop_N = mkN "toyshop" "toyshops";
lin trabeated_A = mkA "trabeated" ;
lin trabecula_N = mkN "trabecula" ;
lin trabecular_A = mkA "trabecular" ;
lin trace_N = mkN "trace" "traces";
lin trace_V = mkV "trace" "traces" "traced" "traced" "tracing";
lin trace_V2 = mkV2 (mkV "trace" "traces" "traced" "traced" "tracing");
lin traceable_A = compoundA (mkA "traceable");
lin tracer_N = mkN "tracer" "tracers";
lin tracery_N = mkN "tracery" "traceries";
lin trachea_N = mkN "trachea" "tracheae" {- FIXME: guessed plural form -};
lin tracheal_A = mkA "tracheal" ;
lin tracheid_N = mkN "tracheid" ;
lin tracheitis_N = mkN "tracheitis" ;
lin tracheobronchitis_N = mkN "tracheobronchitis" ;
lin tracheostomy_N = mkN "tracheostomy" ;
lin trachodon_N = mkN "trachodon" ;
lin trachoma_N = mkN "trachoma" ;
lin tracing_N = mkN "tracing" "tracings";
lin tracing_paper_N = mkN "tracing-paper" ;
lin track_N = mkN "track" "tracks";
lin track_V = mkV "track";
lin track_V2 = mkV2 (mkV "track" "tracks" "tracked" "tracked" "tracking");
lin trackball_N = mkN "trackball" ;
lin tracker_N = mkN "tracker" "trackers";
lin trackless_A = compoundA (mkA "trackless");
lin tract_N = mkN "tract" "tracts";
lin tractability_N = mkN "tractability" "tractabilities";
lin tractable_A = compoundA (mkA "tractable");
lin traction_N = mkN "traction" ;
lin traction_engine_N = mkN "traction-engine" "traction-engines";
lin tractive_A = mkA "tractive" ;
lin tractor_N = mkN "tractor" "tractors";
lin tracy_PN = mkPN "Tracy";
lin trad_N = mkN "trad" ;
lin trade_N = mkN "trade" "trades";
lin trade_V = mkV "trade" "trades" "traded" "traded" "trading";
lin trade_V2 = mkV2 (mkV "trade" "trades" "traded" "traded" "trading");
lin trade_in_N = mkN "trade-in" "trade-ins";
lin trade_union_N = mkN "trade-union" "trade-unions";
lin trade_unionism_N = mkN "trade-unionism" ;
lin trade_unionist_N = mkN "trade-unionist" "trade-unionists";
lin trade_wind_N = mkN "trade-wind" "trade-winds";
lin tradecraft_N = mkN "tradecraft" ;
lin trademark_N = mkN "trademark" "trademarks";
lin trademarked_A = mkA "trademarked" ;
lin tradeoff_N = mkN "tradeoff" ;
lin trader_N = mkN "trader" "traders";
lin trades_union_N = mkN "trades-union" "trades-unions";
lin tradesman_N = mkN masculine (mkN "tradesman" "tradesmen");
lin tradespeople_N = mkN "tradespeople" ;
lin trading_N = mkN "trading" ;
lin tradition_N = mkN "tradition" "traditions";
lin traditional_A = compoundA (mkA "traditional");
lin traditionalism_N = mkN "traditionalism" ;
lin traditionalist_N = mkN "traditionalist" "traditionalists";
lin traditionalistic_A = mkA "traditionalistic" ;
lin traduce_V2 = mkV2 (mkV "traduce" "traduces" "traduced" "traduced" "traducing");
lin traducer_N = mkN "traducer" "traducers";
lin traffic_N = mkN "traffic" ;
lin traffic_V = mkV "traffic" "IRREG" "IRREG" "IRREG" "IRREG";
lin trafficator_N = mkN "trafficator" "trafficators";
lin trafficker_N = mkN "trafficker" "traffickers";
lin tragacanth_N = mkN "tragacanth" ;
lin tragedian_N = mkN "tragedian" "tragedians";
lin tragedienne_N = mkN "tragedienne" "tragediennes";
lin tragedy_N = mkN "tragedy" "tragedies";
lin tragic_A = compoundA (mkA "tragic");
lin tragically_Adv = mkAdv "tragically";
lin tragicomedy_N = mkN "tragicomedy" "tragicomedies";
lin tragicomic_A = compoundA (mkA "tragicomic");
lin tragopan_N = mkN "tragopan" ;
lin tragus_N = mkN "tragus" ;
lin trail_N = mkN "trail" "trails";
lin trail_V = mkV "trail" "trails" "trailed" "trailed" "trailing";
lin trail_V2 = mkV2 (mkV "trail" "trails" "trailed" "trailed" "trailing");
lin trailblazer_N = mkN "trailblazer" ;
lin trailer_N = mkN "trailer" "trailers";
lin trailing_N = mkN "trailing" ;
lin train_N = mkN "train" "trains";
lin train_V = mkV "train" "trains" "trained" "trained" "training";
lin train_V2 = mkV2 (mkV "train" "trains" "trained" "trained" "training");
lin train_V2V = mkV2V (mkV "train" "trains" "trained" "trained" "training") noPrep to_Prep ;
lin trainband_N = mkN "trainband" ;
lin trainbandsman_N = mkN masculine (mkN "trainbandsman" "trainbandsmen");
lin trainbearer_N = mkN "trainbearer" "trainbearers";
lin trainee_N = mkN "trainee" "trainees";
lin traineeship_N = mkN "traineeship" ;
lin trainer_N = mkN "trainer" "trainers";
lin training_N = mkN "training" ;
lin training_college_N = mkN "training-college" "training-colleges";
lin training_ship_N = mkN "training-ship" "training-ships";
lin trainload_N = mkN "trainload" "trainloads";
lin trainman_N = mkN masculine (mkN "trainman" "trainmen");
lin traipse_V = mkV "traipse" "traipses" "traipsed" "traipsed" "traipsing";
lin trait_N = mkN "trait" "traits";
lin traitor_N = mkN masculine (mkN "traitor" "traitors");
lin traitorous_A = compoundA (mkA "traitorous");
lin traitress_N = mkN feminine (mkN "traitress" "traitresses");
lin trajectory_N = mkN "trajectory" "trajectories";
lin tralee_PN = mkPN "Tralee";
lin tram_N = mkN "tram" "trams";
lin tram_car_N = mkN "tram-car" "tram-cars";
lin tramcar_N = mkN "tramcar" ;
lin tramline_N = mkN "tramline" "tramlines";
lin trammel_N = mkN "trammel" ;
lin trammel_V2 = mkV2 (mkV "trammel" "trammels" "trammelled" "trammelled" "trammelling");
lin tramontane_A = mkA "tramontane" ;
lin tramontane_N = mkN "tramontane" ;
lin tramp_N = mkN "tramp" "tramps";
lin tramp_V = mkV "tramp" "tramps" "tramped" "tramped" "tramping";
lin tramp_V2 = mkV2 (mkV "tramp" "tramps" "tramped" "tramped" "tramping");
lin tramp_steamer_N = mkN "tramp-steamer" "tramp-steamers";
lin trample_N = mkN "trample" "tramples";
lin trample_V = mkV "trample" "tramples" "trampled" "trampled" "trampling";
lin trample_V2 = mkV2 (mkV "trample" "tramples" "trampled" "trampled" "trampling");
lin trampler_N = mkN "trampler" ;
lin trampoline_N = mkN "trampoline" "trampolines";
lin tramway_N = mkN "tramway" "tramways";
lin trance_N = mkN "trance" "trances";
lin trancelike_A = mkA "trancelike" ;
lin tranche_N = mkN "tranche" ;
lin trandolapril_N = mkN "trandolapril" ;
lin tranent_PN = mkPN "Tranent";
lin tranquil_A = compoundA (mkA "tranquil");
lin tranquility_N = mkN "tranquility" ;
lin tranquilize_V2 = mkV2 (mkV "tranquilize" "tranquilizes" "tranquilized" "tranquilized" "tranquilizing");
lin tranquilizer_N = mkN "tranquilizer" ;
lin tranquillity_N = mkN "tranquillity" ;
lin tranquillize_V2 = mkV2 (mkV "tranquillize" "tranquillizes" "tranquillized" "tranquillized" "tranquillizing");
lin tranquillizer_N = mkN "tranquillizer" "tranquillizers";
lin trans_PN = mkPN "Trans";
lin transact_V2 = mkV2 (mkV "transact" "transacts" "transacted" "transacted" "transacting");
lin transactinide_A = mkA "transactinide" ;
lin transactinide_N = mkN "transactinide" ;
lin transaction_N = mkN "transaction" "transactions";
lin transactor_N = mkN "transactor" ;
lin transalpine_A = compoundA (mkA "transalpine");
lin transalpine_N = mkN "transalpine" "transalpines";
lin transaminase_N = mkN "transaminase" ;
lin transamination_N = mkN "transamination" ;
lin transatlantic_A = compoundA (mkA "transatlantic");
lin transcend_V2 = mkV2 (mkV "transcend" "transcends" "transcended" "transcended" "transcending");
lin transcendence_N = mkN "transcendence" ;
lin transcendency_N = mkN "transcendency" ;
lin transcendent_A = compoundA (mkA "transcendent");
lin transcendental_A = compoundA (mkA "transcendental");
lin transcendentalism_N = mkN "transcendentalism" ;
lin transcendentalist_N = mkN "transcendentalist" "transcendentalists";
lin transcontinental_A = compoundA (mkA "transcontinental");
lin transcribe_V2 = mkV2 (mkV "transcribe" "transcribes" "transcribed" "transcribed" "transcribing");
lin transcriber_N = mkN "transcriber" ;
lin transcript_N = mkN "transcript" "transcripts";
lin transcriptase_N = mkN "transcriptase" ;
lin transcription_N = mkN "transcription" "transcriptions";
lin transcultural_A = mkA "transcultural" ;
lin transdermal_A = mkA "transdermal" ;
lin transducer_N = mkN "transducer" ;
lin transduction_N = mkN "transduction" ;
lin transept_N = mkN "transept" "transepts";
lin transeunt_A = mkA "transeunt" ;
lin transfer_N = mkN "transfer" "transfers";
lin transfer_V = mkV "transfer" "transfers" "transferred" "transferred" "transferring";
lin transfer_V2 = mkV2 (mkV "transfer" "transfers" "transferred" "transferred" "transferring");
lin transferability_N = mkN "transferability" ;
lin transferable_A = compoundA (mkA "transferable");
lin transferase_N = mkN "transferase" ;
lin transferee_N = mkN "transferee" ;
lin transference_N = mkN "transference" "transferences";
lin transferer_N = mkN "transferer" ;
lin transferor_N = mkN "transferor" ;
lin transferrin_N = mkN "transferrin" ;
lin transfiguration_N = mkN "transfiguration" "transfigurations";
lin transfigure_V2 = mkV2 (mkV "transfigure" "transfigures" "transfigured" "transfigured" "transfiguring");
lin transfix_V2 = mkV2 (mkV "transfix" "transfixes" "transfixed" "transfixed" "transfixing");
lin transform_V2 = mkV2 (mkV "transform" "transforms" "transformed" "transformed" "transforming");
lin transformable_A = compoundA (mkA "transformable");
lin transformation_N = mkN "transformation" "transformations";
lin transformer_N = mkN "transformer" "transformers";
lin transfuse_V2 = mkV2 (mkV "transfuse" "transfuses" "transfused" "transfused" "transfusing");
lin transfusion_N = mkN "transfusion" "transfusions";
lin transgender_A = mkA "transgender" ;
lin transgene_N = mkN "transgene" ;
lin transgress_V = mkV "transgress" "transgresses" "transgressed" "transgressed" "transgressing";
lin transgress_V2 = mkV2 (mkV "transgress" "transgresses" "transgressed" "transgressed" "transgressing");
lin transgression_N = mkN "transgression" "transgressions";
lin transgressor_N = mkN "transgressor" "transgressors";
lin transience_N = mkN "transience" ;
lin transiency_N = mkN "transiency" ;
lin transient_A = compoundA (mkA "transient");
lin transient_N = mkN "transient" "transients";
lin transistor_N = mkN "transistor" "transistors";
lin transistorized_A = compoundA (mkA "transistorized");
lin transit_N = mkN "transit" ;
lin transition_N = mkN "transition" "transitions";
lin transitional_A = compoundA (mkA "transitional");
lin transitive_A = compoundA (mkA "transitive");
lin transitivity_N = mkN "transitivity" ;
lin transitory_A = compoundA (mkA "transitory");
lin translatable_A = compoundA (mkA "translatable");
lin translate_V = mkV "translate";
lin translate_V2 = mkV2 (mkV "translate" "translates" "translated" "translated" "translating");
lin translation_N = mkN "translation" "translations";
lin translational_A = mkA "translational" ;
lin translator_N = mkN "translator" "translators";
lin transliterate_V2 = mkV2 (mkV "transliterate" "transliterates" "transliterated" "transliterated" "transliterating");
lin transliteration_N = mkN "transliteration" "transliterations";
lin translocation_N = mkN "translocation" ;
lin translucence_N = mkN "translucence" ;
lin translucency_N = mkN "translucency" ;
lin translucent_A = compoundA (mkA "translucent");
lin translunar_A = mkA "translunar" ;
lin transmigrante_N = mkN "transmigrante" ;
lin transmigration_N = mkN "transmigration" ;
lin transmission_N = mkN "transmission" "transmissions";
lin transmit_V2 = mkV2 (mkV "transmit" "transmits" "transmitted" "transmitted" "transmitting");
lin transmittance_N = mkN "transmittance" ;
lin transmitter_N = mkN "transmitter" "transmitters";
lin transmogrification_N = mkN "transmogrification" "transmogrifications";
lin transmogrify_V2 = mkV2 (mkV "transmogrify" "transmogrifies" "transmogrified" "transmogrified" "transmogrifying");
lin transmundane_A = mkA "transmundane" ;
lin transmutable_A = compoundA (mkA "transmutable");
lin transmutation_N = mkN "transmutation" "transmutations";
lin transmute_V2 = mkV2 (mkV "transmute" "transmutes" "transmuted" "transmuted" "transmuting");
lin transoceanic_A = compoundA (mkA "transoceanic");
lin transom_N = mkN "transom" "transoms";
lin transom_window_N = mkN "transom-window" "transom-windows";
lin transparence_N = mkN "transparence" ;
lin transparency_N = mkN "transparency" "transparencies";
lin transparent_A = compoundA (mkA "transparent");
lin transpiration_N = mkN "transpiration" ;
lin transpire_V = mkV "transpire" "transpires" "transpired" "transpired" "transpiring";
lin transpire_V2 = mkV2 (mkV "transpire" "transpires" "transpired" "transpired" "transpiring");
lin transplacental_A = mkA "transplacental" ;
lin transplant_N = mkN "transplant" "transplants";
lin transplant_V = mkV "transplant" "transplants" "transplanted" "transplanted" "transplanting";
lin transplant_V2 = mkV2 (mkV "transplant" "transplants" "transplanted" "transplanted" "transplanting");
lin transplantable_A = mkA "transplantable" ;
lin transplantation_N = mkN "transplantation" "transplantations";
lin transplanter_N = mkN "transplanter" ;
lin transpolar_A = compoundA (mkA "transpolar");
lin transponder_N = mkN "transponder" ;
lin transport_N = mkN "transport" "transports";
lin transport_V2 = mkV2 (mkV "transport" "transports" "transported" "transported" "transporting");
lin transportable_A = compoundA (mkA "transportable");
lin transportation_N = mkN "transportation" ;
lin transporter_N = mkN "transporter" "transporters";
lin transposable_A = mkA "transposable" ;
lin transpose_N = mkN "transpose" ;
lin transpose_V2 = mkV2 (mkV "transpose" "transposes" "transposed" "transposed" "transposing");
lin transposition_N = mkN "transposition" "transpositions";
lin transposon_N = mkN "transposon" ;
lin transsexual_N = mkN "transsexual" "transsexuals";
lin transsexualism_N = mkN "transsexualism" ;
lin transship_V2 = mkV2 (mkV "transship" "transships" "transshipped" "transshipped" "transshipping");
lin transshipment_N = mkN "transshipment" "transshipments";
lin transubstantiation_N = mkN "transubstantiation" ;
lin transudate_N = mkN "transudate" ;
lin transuranic_A = mkA "transuranic" ;
lin transverse_A = compoundA (mkA "transverse");
lin transvestic_A = mkA "transvestic" ;
lin transvestism_N = mkN "transvestism" ;
lin transvestite_N = mkN "transvestite" "transvestites";
lin tranylcypromine_N = mkN "tranylcypromine" ;
lin trap_N = mkN "trap" "traps";
lin trap_V = mkV "trap";
lin trap_V2 = mkV2 (mkV "trap" "traps" "trapped" "trapped" "trapping");
lin trap_door_N = mkN "trap-door" "trap-doors";
lin trap_shooting_N = mkN "trap-shooting" ;
lin trapeze_N = mkN "trapeze" "trapezes";
lin trapezium_N = mkN "trapezium" "trapeziums";
lin trapezius_N = mkN "trapezius" ;
lin trapezohedron_N = mkN "trapezohedron" ;
lin trapezoid_N = mkN "trapezoid" "trapezoids";
lin trapezoidal_A = mkA "trapezoidal" ;
lin trapper_N = mkN "trapper" "trappers";
lin trappist_N = mkN "trappist" "trappists";
lin trapshooter_N = mkN "trapshooter" ;
lin trash_N = mkN "trash" ;
lin trash_V2 = mkV2 (mkV "trash");
lin trashy_A = mkA "trashy" "trashier";
lin trauma_N = mkN "trauma" "traumas";
lin traumatic_A = compoundA (mkA "traumatic");
lin traumatology_N = mkN "traumatology" ;
lin traumatophobia_N = mkN "traumatophobia" ;
lin travail_N = mkN "travail" "travails";
lin trave_N = mkN "trave" ;
lin travel_N = mkN "travel" "travels";
lin travel_V = mkV "travel" "travels" "traveled" "traveled" "traveling";
lin travel_V2 = mkV2 (mkV "travel" "travels" "traveled" "traveled" "traveling");
lin travel_soiled_A = compoundA (mkA "travel-soiled");
lin travel_stained_A = compoundA (mkA "travel-stained");
lin travel_worn_A = compoundA (mkA "travel-worn");
lin traveler_N = mkN "traveler" ;
lin travelled_A = compoundA (mkA "travelled");
lin traveller_N = mkN human (mkN "traveller" "travellers");
lin travelling_N = mkN "travelling" ;
lin travelogue_N = mkN "travelogue" "travelogues";
lin traversable_A = mkA "traversable" ;
lin traversal_N = mkN "traversal" ;
lin traverse_N = mkN "traverse" "traverses";
lin traverse_V2 = mkV2 (mkV "traverse" "traverses" "traversed" "traversed" "traversing");
lin traverser_N = mkN "traverser" ;
lin travesty_N = mkN "travesty" "travesties";
lin travesty_V2 = mkV2 (mkV "travesty" "travesties" "travestied" "travestied" "travestying");
lin trawl_N = mkN "trawl" "trawls";
lin trawl_V = mkV "trawl" "trawls" "trawled" "trawled" "trawling";
lin trawl_V2 = mkV2 (mkV "trawl" "trawls" "trawled" "trawled" "trawling");
lin trawl_net_N = mkN "trawl-net" "trawl-nets";
lin trawler_N = mkN "trawler" "trawlers";
lin tray_N = mkN "tray" "trays";
lin tray_cloth_N = mkN "tray-cloth" "tray-cloths";
lin trazodone_N = mkN "trazodone" ;
lin treacherous_A = compoundA (mkA "treacherous");
lin treachery_N = mkN "treachery" "treacheries";
lin treacle_N = mkN "treacle" ;
lin treacly_A = compoundA (mkA "treacly");
lin tread_N = mkN "tread" "treads";
lin tread_V = IrregEng.tread_V;
lin tread_V2 = mkV2 (IrregEng.tread_V);
lin treadle_N = mkN "treadle" "treadles";
lin treadle_V = mkV "treadle" "treadles" "treadled" "treadled" "treadling";
lin treadmill_N = mkN "treadmill" "treadmills";
lin treas_N = mkN "treas" ;
lin treason_N = mkN "treason" ;
lin treasonable_A = compoundA (mkA "treasonable");
lin treasonous_A = compoundA (mkA "treasonous");
lin treasure_N = mkN "treasure" "treasures";
lin treasure_V2 = mkV2 (mkV "treasure" "treasures" "treasured" "treasured" "treasuring");
lin treasure_house_N = mkN "treasure-house" "treasure-houses";
lin treasure_trove_N = mkN "treasure-trove" ;
lin treasurer_N = mkN human (mkN "treasurer" "treasurers");
lin treasurership_N = mkN "treasurership" ;
lin treasury_N = mkN "treasury" "treasuries";
lin treat_N = mkN "treat" "treats";
lin treat_V = mkV "treat" "treats" "treated" "treated" "treating";
lin treat_V2 = mkV2 (mkV "treat" "treats" "treated" "treated" "treating");
lin treatise_N = mkN "treatise" "treatises";
lin treatment_N = mkN "treatment" "treatments";
lin treaty_N = mkN "treaty" "treaties";
lin treble_A = compoundA (mkA "treble");
lin treble_N = mkN "treble" "trebles";
lin treble_V = mkV "treble" "trebles" "trebled" "trebled" "trebling";
lin treble_V2 = mkV2 (mkV "treble" "trebles" "trebled" "trebled" "trebling");
lin tredegar_PN = mkPN "Tredegar";
lin tree_N = mkN "tree" "trees";
lin tree_V2 = mkV2 (mkV "tree" "IRREG" "IRREG" "IRREG" "IRREG");
lin tree_fern_N = mkN "tree-fern" "tree-ferns";
lin treehopper_N = mkN "treehopper" ;
lin treeless_A = compoundA (mkA "treeless");
lin treelet_N = mkN "treelet" ;
lin treenail_N = mkN "treenail" ;
lin trefoil_N = mkN "trefoil" "trefoils";
lin trek_N = mkN "trek" "treks";
lin trek_V = mkV "trek" "treks" "trekked" "trekked" "trekking";
lin trekker_N = mkN "trekker" ;
lin trellis_N = mkN "trellis" "trellises";
lin trellis_V2 = mkV2 (mkV "trellis" "trellises" "trellised" "trellised" "trellising");
lin tremble_N = mkN "tremble" "trembles";
lin tremble_V = mkV "tremble" "trembles" "trembled" "trembled" "trembling";
lin trembles_N = mkN "trembles" ;
lin tremendous_A = compoundA (mkA "tremendous");
lin tremolite_N = mkN "tremolite" ;
lin tremolo_N = mkN "tremolo" "tremolos";
lin tremor_N = mkN "tremor" "tremors";
lin tremulous_A = compoundA (mkA "tremulous");
lin trench_N = mkN "trench" "trenches";
lin trench_V2 = mkV2 (mkV "trench" "trenches" "trenched" "trenched" "trenching");
lin trenchancy_N = mkN "trenchancy" ;
lin trenchant_A = compoundA (mkA "trenchant");
lin trencher_N = mkN "trencher" "trenchers";
lin trencherman_N = mkN masculine (mkN "trencherman" "trenchermen");
lin trend_N = mkN "trend" "trends";
lin trend_V = mkV "trend" "trends" "trended" "trended" "trending";
lin trend_setter_N = mkN "trend-setter" "trend-setters";
lin trend_setting_N = mkN "trend-setting" ;
lin trendsetting_A = mkA "trendsetting" ;
lin trendy_A = mkA "trendy" "trendier";
lin trepan_N = mkN "trepan" ;
lin trepan_V2 = mkV2 (mkV "trepan" "trepans" "trepanned" "trepanned" "trepanning");
lin trepang_N = mkN "trepang" ;
lin trephination_N = mkN "trephination" ;
lin trephine_N = mkN "trephine" "trephines";
lin trephine_V2 = mkV2 (mkV "trephine" "trephines" "trephined" "trephined" "trephining");
lin trepidation_N = mkN "trepidation" ;
lin treponema_N = mkN "treponema" ;
lin trespass_N = mkN "trespass" "trespasses";
lin trespass_V = mkV "trespass" "trespasses" "trespassed" "trespassed" "trespassing";
lin trespasser_N = mkN "trespasser" "trespassers";
lin tress_N = mkN "tress" "tresses";
lin trestle_N = mkN "trestle" "trestles";
lin trestle_bridge_N = mkN "trestle-bridge" "trestle-bridges";
lin trestle_table_N = mkN "trestle-table" "trestle-tables";
lin trestlework_N = mkN "trestlework" ;
lin trevor_PN = mkPN "Trevor";
lin trews_N = mkN "trews" ;
lin trey_N = mkN "trey" ;
lin triad_N = mkN "triad" "triads";
lin triage_N = mkN "triage" ;
lin trial_N = mkN "trial" "trials";
lin triamcinolone_N = mkN "triamcinolone" ;
lin triangle_N = mkN "triangle" "triangles";
lin triangular_A = compoundA (mkA "triangular");
lin triangularity_N = mkN "triangularity" ;
lin triangulate_A = mkA "triangulate" ;
lin triangulation_N = mkN "triangulation" ;
lin triazine_N = mkN "triazine" ;
lin triazolam_N = mkN "triazolam" ;
lin tribadism_N = mkN "tribadism" ;
lin tribadistic_A = mkA "tribadistic" ;
lin tribal_A = compoundA (mkA "tribal");
lin tribalism_N = mkN "tribalism" ;
lin tribalization_N = mkN "tribalization" ;
lin tribe_N = mkN "tribe" "tribes";
lin tribesman_N = mkN masculine (mkN "tribesman" "tribesmen");
lin tribologist_N = mkN "tribologist" ;
lin tribology_N = mkN "tribology" ;
lin tribromoethanol_N = mkN "tribromoethanol" ;
lin tribulation_N = mkN "tribulation" "tribulations";
lin tribunal_N = mkN "tribunal" "tribunals";
lin tribune_N = mkN "tribune" "tribunes";
lin tribuneship_N = mkN "tribuneship" ;
lin tributary_A = compoundA (mkA "tributary");
lin tributary_N = mkN "tributary" "tributaries";
lin tribute_N = mkN "tribute" "tributes";
lin tributyrin_N = mkN "tributyrin" ;
lin trice_N = mkN "trice" "trices";
lin trice_V2 = mkV2 (mkV "trice" "trices" "triced" "triced" "tricing");
lin tricentenary_A = mkA "tricentenary" ;
lin triceps_N = mkN "triceps" ;
lin triceratops_N = mkN "triceratops" ;
lin trichina_N = mkN "trichina" ;
lin trichinosis_N = mkN "trichinosis" ;
lin trichion_N = mkN "trichion" ;
lin trichloride_N = mkN "trichloride" ;
lin trichlormethiazide_N = mkN "trichlormethiazide" ;
lin trichloroethylene_N = mkN "trichloroethylene" ;
lin trichodesmium_N = mkN "trichodesmium" ;
lin trichomonad_N = mkN "trichomonad" ;
lin trichomoniasis_N = mkN "trichomoniasis" ;
lin trichotillomania_N = mkN "trichotillomania" ;
lin trichotomy_N = mkN "trichotomy" ;
lin trichroism_N = mkN "trichroism" ;
lin trichromatic_A = mkA "trichromatic" ;
lin trichuriasis_N = mkN "trichuriasis" ;
lin trick_N = mkN "trick" "tricks";
lin trick_V2 = mkV2 (mkV "trick" "tricks" "tricked" "tricked" "tricking");
lin trickery_N = mkN "trickery" ;
lin trickiness_N = mkN "trickiness" ;
lin trickle_N = mkN "trickle" "trickles";
lin trickle_V = mkV "trickle" "trickles" "trickled" "trickled" "trickling";
lin trickle_V2 = mkV2 (mkV "trickle" "trickles" "trickled" "trickled" "trickling");
lin trickster_N = mkN "trickster" "tricksters";
lin tricksy_A = compoundA (mkA "tricksy");
lin tricky_A = mkA "tricky" "trickier";
lin triclinic_A = mkA "triclinic" ;
lin triclinium_N = mkN "triclinium" ;
lin tricolor_N = mkN "tricolor" ;
lin tricolour_N = mkN "tricolour" "tricolours";
lin tricorn_N = mkN "tricorn" ;
lin tricot_N = mkN "tricot" ;
lin tricuspid_A = mkA "tricuspid" ;
lin tricycle_N = mkN "tricycle" "tricycles";
lin tricyclic_N = mkN "tricyclic" ;
lin trident_N = mkN "trident" "tridents";
lin tridymite_N = mkN "tridymite" ;
lin triennial_A = compoundA (mkA "triennial");
lin triennial_N = mkN "triennial" "triennials";
lin trier_N = mkN "trier" "triers";
lin trieste_PN = mkPN "Trieste";
lin trifid_A = mkA "trifid" ;
lin trifle_N = mkN "trifle" "trifles";
lin trifle_V = mkV "trifle" "trifles" "trifled" "trifled" "trifling";
lin trifle_V2 = mkV2 (mkV "trifle" "trifles" "trifled" "trifled" "trifling");
lin trifler_N = mkN "trifler" "triflers";
lin trifoliate_A = mkA "trifoliate" ;
lin trifurcation_N = mkN "trifurcation" ;
lin trigeminal_N = mkN "trigeminal" ;
lin trigger_N = mkN "trigger" "triggers";
lin trigger_V2 = mkV2 (mkV "trigger" "triggers" "triggered" "triggered" "triggering");
lin trigger_happy_A = compoundA (mkA "trigger-happy");
lin triggerfish_N = mkN "triggerfish" ;
lin triglyceride_N = mkN "triglyceride" ;
lin trigon_N = mkN "trigon" ;
lin trigonometric_A = mkA "trigonometric" ;
lin trigonometrician_N = mkN "trigonometrician" ;
lin trigonometry_N = mkN "trigonometry" ;
lin trigram_N = mkN "trigram" ;
lin trihydroxy_A = mkA "trihydroxy" ;
lin triiodothyronine_N = mkN "triiodothyronine" ;
lin trilateral_A = compoundA (mkA "trilateral");
lin trilby_N = mkN "trilby" "trilbies";
lin trilingual_A = mkA "trilingual" ;
lin trill_N = mkN "trill" "trills";
lin trill_V = mkV "trill" "trills" "trilled" "trilled" "trilling";
lin trill_V2 = mkV2 (mkV "trill" "trills" "trilled" "trilled" "trilling");
lin trillion_A = compoundA (mkA "trillion");
lin trillion_N = mkN "trillion" "trillions";
lin trillionth_A = compoundA (mkA "trillionth");
lin trillionth_N = mkN "trillionth" "trillionths";
lin trillium_N = mkN "trillium" ;
lin trilobate_A = mkA "trilobate" ;
lin trilobite_N = mkN "trilobite" ;
lin trilogy_N = mkN "trilogy" "trilogies";
lin trim_A = mkA "trim" "trimmer";
lin trim_N = mkN "trim" ;
lin trim_V = mkV "trim" "trims" "trimmed" "trimmed" "trimming";
lin trim_V2 = mkV2 (mkV "trim" "trims" "trimmed" "trimmed" "trimming");
lin trimaran_N = mkN "trimaran" "trimarans";
lin trimer_N = mkN "trimer" ;
lin trimester_N = mkN "trimester" ;
lin trimipramine_N = mkN "trimipramine" ;
lin trimmer_N = mkN "trimmer" "trimmers";
lin trimming_N = mkN "trimming" "trimmings";
lin trimotored_A = mkA "trimotored" ;
lin tring_PN = mkPN "Tring";
lin trinidad_PN = mkPN "Trinidad";
lin trinidadian_A = compoundA (mkA "trinidadian");
lin trinidadian_N = mkN "trinidadian" "trinidadians";
lin trinitrotoluene_N = mkN "trinitrotoluene" ;
lin trinity_N = mkN "trinity" "trinities";
lin trinket_N = mkN "trinket" "trinkets";
lin trinketry_N = mkN "trinketry" ;
lin trinucleate_A = mkA "trinucleate" ;
lin trio_N = mkN "trio" "trios";
lin triode_N = mkN "triode" ;
lin triolein_N = mkN "triolein" ;
lin triose_N = mkN "triose" ;
lin trioxide_N = mkN "trioxide" ;
lin trip_N = mkN "trip" "trips";
lin trip_V = mkV "trip" "trips" "tripped" "tripped" "tripping";
lin trip_V2 = mkV2 (mkV "trip" "trips" "tripped" "tripped" "tripping");
lin tripalmitin_N = mkN "tripalmitin" ;
lin tripartite_A = compoundA (mkA "tripartite");
lin tripe_N = mkN "tripe" ;
lin triphammer_N = mkN "triphammer" ;
lin triphosphopyridine_N = mkN "triphosphopyridine" ;
lin tripinnate_A = mkA "tripinnate" ;
lin tripinnatifid_A = mkA "tripinnatifid" ;
lin triple_A = compoundA (mkA "triple");
lin triple_N = mkN "triple" ;
lin triple_V = mkV "triple" "triples" "tripled" "tripled" "tripling";
lin triple_V2 = mkV2 (mkV "triple" "triples" "tripled" "tripled" "tripling");
lin triplet_N = mkN "triplet" "triplets";
lin tripletail_N = mkN "tripletail" ;
lin triplex_A = compoundA (mkA "triplex");
lin triplicate_A = compoundA (mkA "triplicate");
lin triplicate_N = mkN "triplicate" "triplicates";
lin triplicate_V2 = mkV2 (mkV "triplicate" "triplicates" "triplicated" "triplicated" "triplicating");
lin triplicity_N = mkN "triplicity" ;
lin tripling_N = mkN "tripling" ;
lin triploid_A = mkA "triploid" ;
lin tripod_N = mkN "tripod" "tripods";
lin tripos_N = mkN "tripos" "triposes";
lin tripper_N = mkN "tripper" "trippers";
lin triptych_N = mkN "triptych" "triptychs";
lin triquetral_N = mkN "triquetral" ;
lin trireme_N = mkN "trireme" "triremes";
lin trisaccharide_N = mkN "trisaccharide" ;
lin trisect_V2 = mkV2 (mkV "trisect" "trisects" "trisected" "trisected" "trisecting");
lin triskaidekaphobia_N = mkN "triskaidekaphobia" ;
lin triskaidekaphobic_A = mkA "triskaidekaphobic" ;
lin triskelion_N = mkN "triskelion" ;
lin trismus_N = mkN "trismus" ;
lin trisomy_N = mkN "trisomy" ;
lin tristearin_N = mkN "tristearin" ;
lin trisyllable_N = mkN "trisyllable" ;
lin tritanopia_N = mkN "tritanopia" ;
lin tritanopic_A = mkA "tritanopic" ;
lin trite_A = compoundA (mkA "trite");
lin triteness_N = mkN "triteness" ;
lin tritheism_N = mkN "tritheism" ;
lin tritheist_N = mkN "tritheist" ;
lin tritium_N = mkN "tritium" ;
lin triton_N = mkN "triton" ;
lin triumph_N = mkN "triumph" "triumphs";
lin triumph_V = mkV "triumph" "triumphs" "triumphed" "triumphed" "triumphing";
lin triumphal_A = compoundA (mkA "triumphal");
lin triumphant_A = compoundA (mkA "triumphant");
lin triumvir_N = mkN "triumvir" "triumvirs";
lin triumvirate_N = mkN "triumvirate" "triumvirates";
lin triune_A = compoundA (mkA "triune");
lin trivalent_A = mkA "trivalent" ;
lin trivet_N = mkN "trivet" "trivets";
lin trivial_A = compoundA (mkA "trivial");
lin triviality_N = mkN "triviality" "trivialities";
lin trivialize_V2 = mkV2 (mkV "trivialize" "trivializes" "trivialized" "trivialized" "trivializing");
lin trivium_N = mkN "trivium" ;
lin trochaic_A = compoundA (mkA "trochaic");
lin trochanter_N = mkN "trochanter" ;
lin trochee_N = mkN "trochee" "trochees";
lin trochlear_N = mkN "trochlear" ;
lin troglodyte_N = mkN "troglodyte" "troglodytes";
lin trogon_N = mkN "trogon" ;
lin troika_N = mkN "troika" "troikas";
lin trojan_A = compoundA (mkA "trojan");
lin trojan_N = mkN "trojan" "trojans";
lin troll_N = mkN "troll" "trolls";
lin troll_V = mkV "troll" "trolls" "trolled" "trolled" "trolling";
lin troll_V2 = mkV2 (mkV "troll" "trolls" "trolled" "trolled" "trolling");
lin trolley_N = mkN "trolley" "trolleys";
lin trolley_car_N = mkN "trolley-car" "trolley-cars";
lin trolleybus_N = mkN "trolleybus" ;
lin trollop_N = mkN "trollop" "trollops";
lin trombiculiasis_N = mkN "trombiculiasis" ;
lin trombiculid_N = mkN "trombiculid" ;
lin trombidiid_N = mkN "trombidiid" ;
lin trombone_N = mkN "trombone" "trombones";
lin trombonist_N = mkN "trombonist" "trombonists";
lin trompillo_N = mkN "trompillo" ;
lin troon_PN = mkPN "Troon";
lin troop_N = mkN "troop" "troops";
lin troop_V = mkV "troop" "troops" "trooped" "trooped" "trooping";
lin troop_V2 = mkV2 (mkV "troop" "troops" "trooped" "trooped" "trooping");
lin troop_carrier_N = mkN "troop-carrier" "troop-carriers";
lin trooper_N = mkN "trooper" "troopers";
lin troopship_N = mkN "troopship" "troopships";
lin trope_N = mkN "trope" "tropes";
lin trophic_A = mkA "trophic" ;
lin trophobiosis_N = mkN "trophobiosis" ;
lin trophoblast_N = mkN "trophoblast" ;
lin trophoblastic_A = mkA "trophoblastic" ;
lin trophotropic_A = mkA "trophotropic" ;
lin trophotropism_N = mkN "trophotropism" ;
lin trophozoite_N = mkN "trophozoite" ;
lin trophy_N = mkN "trophy" "trophies";
lin tropic_N = mkN "tropic" "tropics";
lin tropical_A = compoundA (mkA "tropical");
lin tropism_N = mkN "tropism" ;
lin troponym_N = mkN "troponym" ;
lin troponymy_N = mkN "troponymy" ;
lin tropopause_N = mkN "tropopause" ;
lin troposphere_N = mkN "troposphere" ;
lin trot_N = mkN "trot" "trots";
lin trot_V = mkV "trot" "trots" "trotted" "trotted" "trotting";
lin trot_V2 = mkV2 (mkV "trot" "trots" "trotted" "trotted" "trotting");
lin troth_N = mkN "troth" ;
lin trotter_N = mkN "trotter" "trotters";
lin troubadour_N = mkN "troubadour" "troubadours";
lin trouble_N = mkN "trouble" "troubles";
lin trouble_V = mkV "trouble" "troubles" "troubled" "troubled" "troubling";
lin trouble_V2 = mkV2 (mkV "trouble" "troubles" "troubled" "troubled" "troubling");
lin troublemaker_N = mkN "troublemaker" "troublemakers";
lin troubleshooter_N = mkN "troubleshooter" "troubleshooters";
lin troublesome_A = compoundA (mkA "troublesome");
lin troublesomeness_N = mkN "troublesomeness" ;
lin troublous_A = compoundA (mkA "troublous");
lin trough_N = mkN "trough" "troughs";
lin trough_V = mkV "trough";
lin trounce_V2 = mkV2 (mkV "trounce" "trounces" "trounced" "trounced" "trouncing");
lin trouncing_N = mkN "trouncing" "trouncings";
lin troupe_N = mkN "troupe" "troupes";
lin trouper_N = mkN human (mkN "trouper" "troupers");
lin trouser_N = mkN "trouser" "trousers";
lin trousseau_N = mkN "trousseau" "trousseaus";
lin trout_N = mkN "trout" "trout";
lin trove_N = mkN "trove" "troves";
lin trowbridge_PN = mkPN "Trowbridge";
lin trowel_N = mkN "trowel" "trowels";
lin troy_N = mkN "troy" ;
lin truancy_N = mkN "truancy" "truancies";
lin truant_A = mkA "truant" ;
lin truant_N = mkN "truant" "truants";
lin truce_N = mkN "truce" "truces";
lin truck_N = mkN "truck" "trucks";
lin truckage_N = mkN "truckage" ;
lin truckle_N = mkN "truckle" "truckles";
lin truckle_V = mkV "truckle" "truckles" "truckled" "truckled" "truckling";
lin truckle_bed_N = mkN "truckle-bed" "truckle-beds";
lin truckling_N = mkN "truckling" ;
lin truculence_N = mkN "truculence" ;
lin truculency_N = mkN "truculency" ;
lin truculent_A = compoundA (mkA "truculent");
lin trudge_N = mkN "trudge" "trudges";
lin trudge_V = mkV "trudge" "trudges" "trudged" "trudged" "trudging";
lin trudger_N = mkN "trudger" ;
lin true_A = irregAdv (mkA "true" "truer") "truly";
lin true_N = mkN "true" "trues";
lin true_V2 = mkV2 (mkV "true" "trues" "trued" "trued" "truing");
lin true_blue_A = compoundA (mkA "true-blue");
lin true_blue_N = mkN "true-blue" "true-blues";
lin true_hearted_A = compoundA (mkA "true-hearted");
lin truelove_N = mkN "truelove" "trueloves";
lin trueness_N = mkN "trueness" ;
lin truffle_N = mkN "truffle" "truffles";
lin truism_N = mkN "truism" "truisms";
lin trump_N = mkN "trump" "trumps";
lin trump_V = mkV "trump" "trumps" "trumped" "trumped" "trumping";
lin trump_V2 = mkV2 (mkV "trump" "trumps" "trumped" "trumped" "trumping");
lin trumpery_A = compoundA (mkA "trumpery");
lin trumpet_N = mkN "trumpet" "trumpets";
lin trumpet_V = mkV "trumpet" "trumpets" "trumpeted" "trumpeted" "trumpeting";
lin trumpet_V2 = mkV2 (mkV "trumpet" "trumpets" "trumpeted" "trumpeted" "trumpeting");
lin trumpeter_N = mkN "trumpeter" "trumpeters";
lin trumpetfish_N = mkN "trumpetfish" ;
lin trumpetwood_N = mkN "trumpetwood" ;
lin truncate_A = mkA "truncate" ;
lin truncate_V2 = mkV2 (mkV "truncate" "truncates" "truncated" "truncated" "truncating");
lin truncation_N = mkN "truncation" ;
lin truncheon_N = mkN "truncheon" "truncheons";
lin trundle_N = mkN "trundle" ;
lin trundle_V = mkV "trundle" "trundles" "trundled" "trundled" "trundling";
lin trundle_V2 = mkV2 (mkV "trundle" "trundles" "trundled" "trundled" "trundling");
lin trunk_N = mkN "trunk" "trunks";
lin trunk_call_N = mkN "trunk-call" "trunk-calls";
lin trunk_line_N = mkN "trunk-line" "trunk-lines";
lin trunk_road_N = mkN "trunk-road" "trunk-roads";
lin trunking_N = mkN "trunking" ;
lin truro_PN = mkPN "Truro";
lin truss_N = mkN "truss" "trusses";
lin truss_V2 = mkV2 (mkV "truss" "trusses" "trussed" "trussed" "trussing");
lin trust_N = mkN "trust" "trusts";
lin trust_V = mkV "trust" "trusts" "trusted" "trusted" "trusting";
lin trust_V2 = mkV2 (mkV "trust" "trusts" "trusted" "trusted" "trusting");
lin trust_V2V = mkV2V (mkV "trust" "trusts" "trusted" "trusted" "trusting") noPrep to_Prep ;
lin trust_VS = mkVS (mkV "trust" "trusts" "trusted" "trusted" "trusting");
lin trustbuster_N = mkN "trustbuster" ;
lin trustee_N = mkN "trustee" "trustees";
lin trusteeship_N = mkN "trusteeship" "trusteeships";
lin trustful_A = compoundA (mkA "trustful");
lin trustworthiness_N = mkN "trustworthiness" ;
lin trustworthy_A = compoundA (mkA "trustworthy");
lin trusty_A = mkA "trusty" "trustier";
lin trusty_N = mkN "trusty" ;
lin truth_N = mkN "truth" "truths";
lin truthful_A = compoundA (mkA "truthful");
lin truthfulness_N = mkN "truthfulness" ;
lin try_N = mkN "try" "tries";
lin try_V = mkV "try" "tries" "tried" "tried" "trying";
lin try_V2 = mkV2 (mkV "try" "tries" "tried" "tried" "trying");
lin try_V2V = mkV2V (mkV "try" "tries" "tried" "tried" "trying") noPrep to_Prep;
lin try_VV = mkVV (mkV "try" "tries" "tried" "tried" "trying");
lin try_on_N = mkN "try-on" "try-ons";
lin try_out_N = mkN "try-out" "try-outs";
lin trypsin_N = mkN "trypsin" ;
lin trypsinogen_N = mkN "trypsinogen" ;
lin tryptophan_N = mkN "tryptophan" ;
lin tryst_N = mkN "tryst" "trysts";
lin tsar_N = mkN "tsar" "tsars";
lin tsarina_N = mkN "tsarina" "tsarinas";
lin tsetse_N = mkN "tsetse" "tsetses";
lin tsetse_fly_N = mkN "tsetse-fly" "tsetse-flies";
lin tsinan_PN = mkPN "Tsinan";
lin tsingtao_PN = mkPN "Tsingtao";
lin tsitsihar_PN = mkPN "Tsitsihar";
lin tsoris_N = mkN "tsoris" ;
lin tsunami_N = mkN "tsunami" ;
lin tsuris_N = mkN "tsuris" ;
lin tswana_A = compoundA (mkA "tswana");
lin tswana_N = mkN "tswana" "tswanas";
lin tuatara_N = mkN "tuatara" ;
lin tub_N = mkN "tub" "tubs";
lin tub_thumper_N = mkN "tub-thumper" "tub-thumpers";
lin tuba_N = mkN "tuba" "tubas";
lin tubal_A = mkA "tubal" ;
lin tubby_A = mkA "tubby" "tubbier";
lin tube_N = mkN "tube" "tubes";
lin tube_well_N = mkN "tube-well" "tube-wells";
lin tubed_A = mkA "tubed" ;
lin tubeless_A = compoundA (mkA "tubeless");
lin tubeless_N = mkN "tubeless" ;
lin tuber_N = mkN "tuber" "tubers";
lin tubercle_N = mkN "tubercle" ;
lin tubercular_A = compoundA (mkA "tubercular");
lin tuberculate_A = mkA "tuberculate" ;
lin tuberculin_N = mkN "tuberculin" ;
lin tuberculoid_A = mkA "tuberculoid" ;
lin tuberculosis_N = mkN "tuberculosis" ;
lin tuberculous_A = compoundA (mkA "tuberculous");
lin tuberose_N = mkN "tuberose" ;
lin tuberosity_N = mkN "tuberosity" ;
lin tuberous_A = mkA "tuberous" ;
lin tubful_N = mkN "tubful" "tubfuls";
lin tubing_N = mkN "tubing" ;
lin tubocurarine_N = mkN "tubocurarine" ;
lin tubular_A = compoundA (mkA "tubular");
lin tubule_N = mkN "tubule" ;
lin tuc_N = mkN "tuc" ;
lin tuck_N = mkN "tuck" "tucks";
lin tuck_V = mkV "tuck" "tucks" "tucked" "tucked" "tucking";
lin tuck_V2 = mkV2 (mkV "tuck" "tucks" "tucked" "tucked" "tucking");
lin tuck_in_N = mkN "tuck-in" "tuck-ins";
lin tuck_shop_N = mkN "tuck-shop" "tuck-shops";
lin tucker_N = mkN "tucker" "tuckers";
lin tudung_N = mkN "tudung" ;
lin tues_PN = mkPN "Tues";
lin tuesday_N = mkN "Tuesday" "Tuesdays";
lin tuesday_PN = mkPN "Tuesday";
lin tufa_N = mkN "tufa" ;
lin tuff_N = mkN "tuff" ;
lin tuft_N = mkN "tuft" "tufts";
lin tufted_A = compoundA (mkA "tufted");
lin tug_N = mkN "tug" "tugs";
lin tug_V = mkV "tug" "tugs" "tugged" "tugged" "tugging";
lin tug_V2 = mkV2 (mkV "tug" "tugs" "tugged" "tugged" "tugging");
lin tugboat_N = mkN "tugboat" "tugboats";
lin tugrik_N = mkN "tugrik" ;
lin tuille_N = mkN "tuille" ;
lin tuition_N = mkN "tuition" ;
lin tularemia_N = mkN "tularemia" ;
lin tulip_N = mkN "tulip" "tulips";
lin tulipwood_N = mkN "tulipwood" ;
lin tulle_N = mkN "tulle" ;
lin tullibody_PN = mkPN "Tullibody";
lin tumble_N = mkN "tumble" "tumbles";
lin tumble_V = mkV "tumble" "tumbles" "tumbled" "tumbled" "tumbling";
lin tumble_V2 = mkV2 (mkV "tumble" "tumbles" "tumbled" "tumbled" "tumbling");
lin tumble_down_A = compoundA (mkA "tumble-down");
lin tumblebug_N = mkN "tumblebug" ;
lin tumbler_N = mkN "tumbler" "tumblers";
lin tumbleweed_N = mkN "tumbleweed" ;
lin tumbrel_N = mkN "tumbrel" "tumbrels";
lin tumbril_N = mkN "tumbril" "tumbrils";
lin tumefaction_N = mkN "tumefaction" ;
lin tumescence_N = mkN "tumescence" "tumescences";
lin tumescent_A = compoundA (mkA "tumescent");
lin tumid_A = compoundA (mkA "tumid");
lin tumidity_N = mkN "tumidity" ;
lin tummy_N = mkN "tummy" "tummies";
lin tumor_N = mkN "tumor" ;
lin tumour_N = mkN (variants {"tumour"; "tumor"});
lin tumult_N = mkN "tumult" "tumults";
lin tumultuous_A = compoundA (mkA "tumultuous");
lin tumulus_N = mkN "tumulus" "tumuli";
lin tun_N = mkN "tun" "tuns";
lin tuna_N = mkN "tuna" "tuna";
lin tunaburger_N = mkN "tunaburger" ;
lin tunbridge_wells_PN = mkPN "Tunbridge wells";
lin tundra_N = mkN "tundra" "tundras";
lin tune_N = mkN "tune" "tunes";
lin tune_V = mkV "tune" "tunes" "tuned" "tuned" "tuning";
lin tune_V2 = mkV2 (mkV "tune" "tunes" "tuned" "tuned" "tuning");
lin tuneful_A = compoundA (mkA "tuneful");
lin tunefulness_N = mkN "tunefulness" ;
lin tuneless_A = mkA "tuneless" ;
lin tuner_N = mkN "tuner" "tuners";
lin tung_oil_N = mkN "tung-oil" ;
lin tungstate_N = mkN "tungstate" ;
lin tungsten_N = mkN "tungsten" ;
lin tunic_N = mkN "tunic" "tunics";
lin tunicate_N = mkN "tunicate" ;
lin tuning_N = mkN "tuning" ;
lin tuning_fork_N = mkN "tuning-fork" "tuning-forks";
lin tunis_PN = mkPN "Tunis";
lin tunisia_PN = mkPN "Tunisia";
lin tunisian_A = compoundA (mkA "tunisian");
lin tunisian_N = mkN "tunisian" "tunisians";
lin tunnel_N = mkN "tunnel" "tunnels";
lin tunnel_V = mkV "tunnel" "tunnels" "tunnelled" "tunnelled" "tunnelling";
lin tunnel_V2 = mkV2 (mkV "tunnel" "tunnels" "tunnelled" "tunnelled" "tunnelling");
lin tunny_N = mkN "tunny" "tunny";
lin tup_N = mkN "tup" "tups";
lin tupelo_N = mkN "tupelo" ;
lin tupik_N = mkN "tupik" ;
lin tuppence_N = mkN "tuppence" "tuppences";
lin tuppenny_A = compoundA (mkA "tuppenny");
lin turban_N = mkN "turban" "turbans";
lin turbaned_A = compoundA (mkA "turbaned");
lin turbid_A = compoundA (mkA "turbid");
lin turbidity_N = mkN "turbidity" ;
lin turbidness_N = mkN "turbidness" ;
lin turbinate_A = mkA "turbinate" ;
lin turbine_N = mkN "turbine" "turbines";
lin turbogenerator_N = mkN "turbogenerator" ;
lin turbojet_N = mkN "turbojet" "turbojets";
lin turboprop_N = mkN "turboprop" "turboprops";
lin turbot_N = mkN "turbot" "turbot";
lin turbulence_N = mkN "turbulence" "turbulences";
lin turbulent_A = compoundA (mkA "turbulent");
lin turd_N = mkN "turd" "turds";
lin tureen_N = mkN "tureen" "tureens";
lin turf_N = mkN "turf" "turfs";
lin turf_V2 = mkV2 (mkV "turf" "turfs" "turfed" "turfed" "turfing");
lin turgid_A = compoundA (mkA "turgid");
lin turgidity_N = mkN "turgidity" ;
lin turgor_N = mkN "turgor" ;
lin turin_PN = mkPN "Turin";
lin turk_N = mkN "Turk" "Turks";
lin turkey_N = mkN "Turkey" "Turkeys";
lin turkey_PN = mkPN "Turkey";
lin turkish_A = compoundA (mkA "Turkish");
lin turkish_N = mkN "Turkish" ;
lin turku_PN = mkPN "Turku";
lin turmeric_N = mkN "turmeric" ;
lin turmoil_N = mkN "turmoil" "turmoils";
lin turn_N = mkN "turn" "turns";
lin turn_V = mkV "turn" "turns" "turned" "turned" "turning";
lin turn_V2 = mkV2 (mkV "turn" "turns" "turned" "turned" "turning");
lin turn_V2A = mkV2A (mkV "turn" "turns" "turned" "turned" "turning") noPrep;
lin turn_VA = mkVA (mkV "turn" "turns" "turned" "turned" "turning");
lin turn_off_N = mkN "turn-off" "turn-offs";
lin turn_on_N = mkN "turn-on" "turn-ons";
lin turn_out_N = mkN "turn-out" "turn-outs";
lin turn_round_N = mkN "turn-round" "turn-rounds";
lin turn_up_N = mkN "turn-up" "turn-ups";
lin turnaround_N = mkN "turnaround" ;
lin turnbuckle_N = mkN "turnbuckle" ;
lin turncoat_N = mkN "turncoat" "turncoats";
lin turncock_N = mkN "turncock" "turncocks";
lin turner_N = mkN "turner" "turners";
lin turnery_N = mkN "turnery" ;
lin turning_N = mkN "turning" "turnings";
lin turning_point_N = mkN "turning-point" "turning-points";
lin turnip_N = mkN "turnip" "turnips";
lin turnkey_N = mkN "turnkey" "turnkeys";
lin turnoff_N = mkN "turnoff" ;
lin turnout_N = mkN "turnout" ;
lin turnover_N = mkN "turnover" "turnovers";
lin turnpike_N = mkN "turnpike" "turnpikes";
lin turnspit_N = mkN "turnspit" "turnspits";
lin turnstile_N = mkN "turnstile" "turnstiles";
lin turnstone_N = mkN "turnstone" ;
lin turntable_N = mkN "turntable" "turntables";
lin turnverein_N = mkN "turnverein" ;
lin turpentine_N = mkN "turpentine" ;
lin turpitude_N = mkN "turpitude" ;
lin turps_N = mkN "turps" ;
lin turquoise_N = mkN "turquoise" "turquoises";
lin turreae_N = mkN "turreae" ;
lin turret_N = mkN "turret" "turrets";
lin turtle_N = mkN "turtle" "turtles";
lin turtledove_N = mkN "turtledove" "turtledoves";
lin turtleneck_A = compoundA (mkA "turtleneck");
lin turtleneck_N = mkN "turtleneck" ;
lin turtlenecked_A = compoundA (mkA "turtlenecked");
lin turtler_N = mkN "turtler" ;
lin tushery_N = mkN "tushery" ;
lin tusk_N = mkN "tusk" "tusks";
lin tusked_A = mkA "tusked" ;
lin tusker_N = mkN "tusker" ;
lin tussah_N = mkN "tussah" ;
lin tussle_N = mkN "tussle" "tussles";
lin tussle_V = mkV "tussle" "tussles" "tussled" "tussled" "tussling";
lin tussock_N = mkN "tussock" "tussocks";
lin tut_V2 = mkV2 (mkV "tut" "tuts" "tutted" "tutted" "tutting");
lin tutee_N = mkN "tutee" ;
lin tutelage_N = mkN "tutelage" ;
lin tutelary_A = compoundA (mkA "tutelary");
lin tutor_N = mkN "tutor" "tutors";
lin tutor_V2 = mkV2 (mkV "tutor" "tutors" "tutored" "tutored" "tutoring");
lin tutorial_A = compoundA (mkA "tutorial");
lin tutorial_N = mkN "tutorial" "tutorials";
lin tutorship_N = mkN "tutorship" "tutorships";
lin tutti_frutti_N = mkN "tutti-frutti" "tutti-fruttis";
lin tutu_N = mkN "tutu" "tutus";
lin tuxedo_N = mkN "tuxedo" "tuxedos";
lin tuxedoed_A = mkA "tuxedoed" ;
lin tv_N = mkN "TV" "TVs" ;
lin twaddle_N = mkN "twaddle" ;
lin twaddle_V = mkV "twaddle" "twaddles" "twaddled" "twaddled" "twaddling";
lin twaddler_N = mkN "twaddler" ;
lin twain_N = mkN "twain" "twains";
lin twang_N = mkN "twang" "twangs";
lin twang_V = mkV "twang" "twangs" "twanged" "twanged" "twanging";
lin twang_V2 = mkV2 (mkV "twang" "twangs" "twanged" "twanged" "twanging");
lin twayblade_N = mkN "twayblade" ;
lin tweak_N = mkN "tweak" "tweaks";
lin tweak_V2 = mkV2 (mkV "tweak" "tweaks" "tweaked" "tweaked" "tweaking");
lin twee_A = compoundA (mkA "twee");
lin tweed_N = mkN "tweed" "tweeds";
lin tweediness_N = mkN "tweediness" ;
lin tweedy_A = mkA "tweedy" ;
lin tween_Adv = mkAdv "'tween";
lin tween_decks_Adv = mkAdv "'tween-decks";
lin tweet_N = mkN "tweet" "tweets";
lin tweet_V = mkV "tweet" "tweets" "tweeted" "tweeted" "tweeting";
lin tweeter_N = mkN "tweeter" "tweeters";
lin twelfth_night_N = mkN "twelfth-night" "twelfth-nights";
lin twelfth_night_PN = mkPN "Twelfth-night";
lin twelvemonth_N = mkN "twelvemonth" "twelvemonths";
lin twerp_N = mkN "twerp" "twerps";
lin twice_Adv = mkAdv "twice";
lin twiddle_N = mkN "twiddle" "twiddles";
lin twiddle_V = mkV "twiddle" "twiddles" "twiddled" "twiddled" "twiddling";
lin twiddle_V2 = mkV2 (mkV "twiddle" "twiddles" "twiddled" "twiddled" "twiddling");
lin twiddler_N = mkN "twiddler" ;
lin twiddly_A = compoundA (mkA "twiddly");
lin twig_N = mkN "twig" "twigs";
lin twig_V = mkV "twig" "twigs" "twigged" "twigged" "twigging";
lin twig_V2 = mkV2 (mkV "twig" "twigs" "twigged" "twigged" "twigging");
lin twiggy_A = mkA "twiggy" "twiggier";
lin twilight_N = mkN "twilight" ;
lin twilit_A = compoundA (mkA "twilit");
lin twill_N = mkN "twill" ;
lin twilled_A = compoundA (mkA "twilled");
lin twin_N = mkN human (mkN "twin" "twins");
lin twin_V2 = mkV2 (mkV "twin" "twins" "twinned" "twinned" "twinning");
lin twinberry_N = mkN "twinberry" ;
lin twine_N = mkN "twine" ;
lin twine_V = mkV "twine" "twines" "twined" "twined" "twining";
lin twine_V2 = mkV2 (mkV "twine" "twines" "twined" "twined" "twining");
lin twiner_N = mkN "twiner" ;
lin twinflower_N = mkN "twinflower" ;
lin twinge_N = mkN "twinge" "twinges";
lin twinjet_N = mkN "twinjet" ;
lin twinkle_N = mkN "twinkle" ;
lin twinkle_V = mkV "twinkle" "twinkles" "twinkled" "twinkled" "twinkling";
lin twinkler_N = mkN "twinkler" ;
lin twinkling_N = mkN "twinkling" "IRREG";
lin twins_N = mkN "twins" ;
lin twirl_N = mkN "twirl" "twirls";
lin twirl_V = mkV "twirl" "twirls" "twirled" "twirled" "twirling";
lin twirl_V2 = mkV2 (mkV "twirl" "twirls" "twirled" "twirled" "twirling");
lin twirlingly_Adv = mkAdv "twirlingly" ;
lin twist_N = mkN "twist" "twists";
lin twist_V = mkV "twist" "twists" "twisted" "twisted" "twisting";
lin twist_V2 = mkV2 (mkV "twist" "twists" "twisted" "twisted" "twisting");
lin twister_N = mkN "twister" "twisters";
lin twisty_A = mkA "twisty" "twistier";
lin twit_N = mkN "twit" "twits";
lin twit_V2 = mkV2 (mkV "twit" "twits" "twitted" "twitted" "twitting");
lin twitch_N = mkN "twitch" "twitches";
lin twitch_V = mkV "twitch" "twitches" "twitched" "twitched" "twitching";
lin twitch_V2 = mkV2 (mkV "twitch" "twitches" "twitched" "twitched" "twitching");
lin twitter_N = mkN "twitter" "twitters";
lin twitter_V = mkV "twitter" "twitters" "twittered" "twittered" "twittering";
lin twitterer_N = mkN "twitterer" ;
lin twixt_Prep = mkPrep "twixt";
lin two_a_penny_A = compoundA (mkA "two-a-penny");
lin two_edged_A = compoundA (mkA "two-edged");
lin two_faced_A = compoundA (mkA "two-faced");
lin two_funnelled_A = compoundA (mkA "two-funnelled");
lin two_handed_A = compoundA (mkA "two-handed");
lin two_piece_N = mkN "two-piece" "IRREG";
lin two_ply_A = compoundA (mkA "two-ply");
lin two_seater_N = mkN "two-seater" "two-seaters";
lin two_step_N = mkN "two-step" "two-steps";
lin two_timing_A = compoundA (mkA "two-timing");
lin two_way_A = compoundA (mkA "two-way");
lin twofer_N = mkN "twofer" ;
lin twofold_A = compoundA (mkA "twofold");
lin twofold_Adv = mkAdv "twofold";
lin twopence_N = mkN "twopence" "twopences";
lin twopenny_A = compoundA (mkA "twopenny");
lin twopenny_halfpenny_A = compoundA (mkA "twopenny-halfpenny");
lin tycoon_N = mkN "tycoon" "tycoons";
lin tying_N = mkN "tying" ;
lin tyiyn_N = mkN "tyiyn" ;
lin tyke_N = mkN "tyke" "tykes";
lin tympanic_A = mkA "tympanic" ;
lin tympanist_N = mkN "tympanist" ;
lin tympanites_N = mkN "tympanites" ;
lin tympanitic_A = mkA "tympanitic" ;
lin tympanitis_N = mkN "tympanitis" ;
lin tympanoplasty_N = mkN "tympanoplasty" ;
lin tympanum_N = mkN "tympanum" "tympanums";
lin tyne_PN = mkPN "Tyne";
lin tynemouth_PN = mkPN "Tynemouth";
lin type_N = mkN "type" "types";
lin type_V = mkV "type" "types" "typed" "typed" "typing";
lin type_V2 = mkV2 (mkV "type" "types" "typed" "typed" "typing");
lin typecast_V2 = mkV2 (mkV "type" IrregEng.cast_V);
lin typeface_N = mkN "typeface" "typefaces";
lin typescript_N = mkN "typescript" "typescripts";
lin typesetter_N = mkN "typesetter" "typesetters";
lin typewriter_N = mkN "typewriter" "typewriters";
lin typewritten_A = compoundA (mkA "typewritten");
lin typhoid_N = mkN "typhoid" ;
lin typhoon_N = mkN "typhoon" "typhoons";
lin typhus_N = mkN "typhus" ;
lin typical_1_A = compoundA (mkA "typical");
lin typical_2_A = compoundA (mkA "typical");
lin typical_3_A = compoundA (mkA "typical");
lin typicality_N = mkN "typicality" ;
lin typification_N = mkN "typification" ;
lin typify_V2 = mkV2 (mkV "typify" "typifies" "typified" "typified" "typifying");
lin typing_N = mkN "typing" ;
lin typist_N = mkN "typist" "typists";
lin typographer_N = mkN "typographer" "typographers";
lin typographic_A = compoundA (mkA "typographic");
lin typographically_Adv = mkAdv "typographically";
lin typography_N = mkN "typography" ;
lin typology_N = mkN "typology" ;
lin tyramine_N = mkN "tyramine" ;
lin tyrannical_A = compoundA (mkA "tyrannical");
lin tyrannicide_N = mkN "tyrannicide" ;
lin tyrannid_N = mkN "tyrannid" ;
lin tyrannize_V = mkV "tyrannize" "tyrannizes" "tyrannized" "tyrannized" "tyrannizing";
lin tyrannize_V2 = mkV2 (mkV "tyrannize" "tyrannizes" "tyrannized" "tyrannized" "tyrannizing");
lin tyrannosaur_N = mkN "tyrannosaur" ;
lin tyrannous_A = compoundA (mkA "tyrannous");
lin tyranny_N = mkN "tyranny" "tyrannies";
lin tyrant_N = mkN "tyrant" "tyrants";
lin tyre_N = mkN "tyre" "tyres";
lin tyro_N = mkN "tyro" "tyros";
lin tyrocidine_N = mkN "tyrocidine" ;
lin tyrolean_N = mkN "tyrolean" ;
lin tyrone_PN = mkPN "Tyrone";
lin tyrosine_N = mkN "tyrosine" ;
lin tyrosinemia_N = mkN "tyrosinemia" ;
lin tyrothricin_N = mkN "tyrothricin" ;
lin tzar_N = mkN "tzar" "tzars";
lin tzarina_N = mkN "tzarina" "tzarinas";
lin tzupo_PN = mkPN "Tzupo";
lin u_A = mkA "u" ;
lin u_boat_N = mkN "u-boat" "u-boats";
lin u_turn_N = mkN "u-turn" "u-turns";
lin uakari_N = mkN "uakari" ;
lin ubiety_N = mkN "ubiety" ;
lin ubiquinone_N = mkN "ubiquinone" ;
lin ubiquitous_A = compoundA (mkA "ubiquitous");
lin ubiquity_N = mkN "ubiquity" ;
lin udder_N = mkN "udder" "udders";
lin uddingston_PN = mkPN "Uddingston";
lin udi_PN = mkPN "Udi";
lin udine_PN = mkPN "Udine";
lin ufa_PN = mkPN "Ufa";
lin ufo_N = mkN "UFO" "UFO's" ;
lin uganda_PN = mkPN "Uganda";
lin ugandan_A = compoundA (mkA "ugandan");
lin ugandan_N = mkN "ugandan" "ugandans";
lin uglify_V2 = mkV2 (mkV "uglify" "uglifies" "uglified" "uglified" "uglifying");
lin ugliness_N = mkN "ugliness" ;
lin ugly_A = mkA "ugly" "uglier";
lin uh_Interj = ss "uh";
lin uh_uh_Interj = ss (variants {"uh uh"; "uh-uh"});
lin uh_huh_Interj = ss (variants {"uh huh"; "uh-huh"});
lin uk_PN = mkPN "UK";
lin ukase_N = mkN "ukase" "ukases";
lin uke_N = mkN "uke" ;
lin ukulele_N = mkN "ukulele" "ukuleles";
lin ulalgia_N = mkN "ulalgia" ;
lin ulatrophia_N = mkN "ulatrophia" ;
lin ulcer_N = mkN "ulcer" "ulcers";
lin ulcerate_V = mkV "ulcerate" "ulcerates" "ulcerated" "ulcerated" "ulcerating";
lin ulcerate_V2 = mkV2 (mkV "ulcerate" "ulcerates" "ulcerated" "ulcerated" "ulcerating");
lin ulceration_N = mkN "ulceration" "ulcerations";
lin ulcerative_A = mkA "ulcerative" ;
lin ulcerous_A = compoundA (mkA "ulcerous");
lin ulema_N = mkN "ulema" ;
lin ulemorrhagia_N = mkN "ulemorrhagia" ;
lin ulitis_N = mkN "ulitis" ;
lin ullage_N = mkN "ullage" ;
lin ulna_N = mkN "ulna" "ulnae" {- FIXME: guessed plural form -};
lin ulnar_A = mkA "ulnar" ;
lin ulster_N = mkN "ulster" "ulsters";
lin ulster_PN = mkPN "Ulster";
lin ulterior_A = compoundA (mkA "ulterior");
lin ulteriority_N = mkN "ulteriority" ;
lin ultima_N = mkN "ultima" ;
lin ultimacy_N = mkN "ultimacy" ;
lin ultimate_A = compoundA (mkA "ultimate");
lin ultimate_N = mkN "ultimate" ;
lin ultimatum_N = mkN "ultimatum" "ultimatums";
lin ultimo_A = compoundA (mkA "ultimo");
lin ultra_vires_A = compoundA (mkA "ultra vires");
lin ultra_vires_Adv = mkAdv "ultra vires";
lin ultracentrifugation_N = mkN "ultracentrifugation" ;
lin ultracentrifuge_N = mkN "ultracentrifuge" ;
lin ultraconservative_A = mkA "ultraconservative" ;
lin ultramarine_A = compoundA (mkA "ultramarine");
lin ultramarine_N = mkN "ultramarine" "ultramarines";
lin ultramicroscope_N = mkN "ultramicroscope" ;
lin ultramicroscopic_A = mkA "ultramicroscopic" ;
lin ultramodern_A = mkA "ultramodern" ;
lin ultramontane_A = compoundA (mkA "ultramontane");
lin ultramontane_N = mkN "ultramontane" ;
lin ultramontanism_N = mkN "ultramontanism" ;
lin ultrasonic_A = compoundA (mkA "ultrasonic");
lin ultrasonically_Adv = mkAdv "ultrasonically" ;
lin ultrasound_N = mkN "ultrasound" ;
lin ultraviolet_A = compoundA (mkA "ultraviolet");
lin ultraviolet_N = mkN "ultraviolet" ;
lin ululate_V = mkV "ululate" "ululates" "ululated" "ululated" "ululating";
lin ululation_N = mkN "ululation" "ululations";
lin ulverston_PN = mkPN "Ulverston";
lin umbel_N = mkN "umbel" ;
lin umbellate_A = mkA "umbellate" ;
lin umbellifer_N = mkN "umbellifer" ;
lin umbelliferous_A = mkA "umbelliferous" ;
lin umbelliform_A = mkA "umbelliform" ;
lin umber_A = compoundA (mkA "umber");
lin umber_N = mkN "umber" "umbers";
lin umbilical_A = compoundA (mkA "umbilical");
lin umbilicate_A = mkA "umbilicate" ;
lin umbo_N = mkN "umbo" ;
lin umbra_N = mkN "umbra" ;
lin umbrage_N = mkN "umbrage" ;
lin umbrella_A = mkA "umbrella" ;
lin umbrella_N = mkN "umbrella" "umbrellas";
lin umbrellalike_A = mkA "umbrellalike" ;
lin umbrellawort_N = mkN "umbrellawort" ;
lin umlaut_N = mkN "umlaut" "umlauts";
lin umpirage_N = mkN "umpirage" ;
lin umpire_N = mkN "umpire" "umpires";
lin umpire_V = mkV "umpire" "umpires" "umpired" "umpired" "umpiring";
lin umpire_V2 = mkV2 (mkV "umpire" "umpires" "umpired" "umpired" "umpiring");
lin umpteen_A = compoundA (mkA "umpteen");
lin umpteenth_A = compoundA (mkA "umpteenth");
lin un_N = mkN "un" ;
lin un_come_at_able_A = compoundA (mkA "un-come-at-able");
lin un_get_at_able_A = compoundA (mkA "un-get-at-able");
lin unabashed_A = compoundA (mkA "unabashed");
lin unabated_A = compoundA (mkA "unabated");
lin unable_A = compoundA (mkA "unable");
lin unabridged_A = compoundA (mkA "unabridged");
lin unabused_A = mkA "unabused" ;
lin unaccented_A = mkA "unaccented" ;
lin unacceptability_N = mkN "unacceptability" ;
lin unacceptable_A = compoundA (mkA "unacceptable");
lin unaccommodating_A = compoundA (mkA "unaccommodating");
lin unaccompanied_A = compoundA (mkA "unaccompanied");
lin unaccountable_A = compoundA (mkA "unaccountable");
lin unaccounted_A = compoundA (mkA "unaccounted");
lin unaccredited_A = mkA "unaccredited" ;
lin unaccustomed_A = compoundA (mkA "unaccustomed");
lin unachievable_A = mkA "unachievable" ;
lin unacknowledged_A = compoundA (mkA "unacknowledged");
lin unacquainted_A = compoundA (mkA "unacquainted");
lin unacquisitive_A = mkA "unacquisitive" ;
lin unactable_A = mkA "unactable" ;
lin unadaptability_N = mkN "unadaptability" ;
lin unadaptable_A = mkA "unadaptable" ;
lin unadapted_A = mkA "unadapted" ;
lin unaddicted_A = mkA "unaddicted" ;
lin unaddressed_A = mkA "unaddressed" ;
lin unadjustable_A = mkA "unadjustable" ;
lin unadjusted_A = mkA "unadjusted" ;
lin unadoptable_A = mkA "unadoptable" ;
lin unadorned_A = compoundA (mkA "unadorned");
lin unadulterated_A = compoundA (mkA "unadulterated");
lin unadventurous_A = compoundA (mkA "unadventurous");
lin unadvised_A = compoundA (mkA "unadvised");
lin unaerated_A = mkA "unaerated" ;
lin unaffected_A = compoundA (mkA "unaffected");
lin unaffectedness_N = mkN "unaffectedness" ;
lin unaffecting_A = mkA "unaffecting" ;
lin unaffiliated_A = mkA "unaffiliated" ;
lin unaffixed_A = mkA "unaffixed" ;
lin unafraid_A = compoundA (mkA "unafraid");
lin unaged_A = mkA "unaged" ;
lin unaggressive_A = mkA "unaggressive" ;
lin unagitated_A = mkA "unagitated" ;
lin unaided_A = compoundA (mkA "unaided");
lin unairworthy_A = mkA "unairworthy" ;
lin unalarming_A = mkA "unalarming" ;
lin unalert_A = mkA "unalert" ;
lin unalienable_A = compoundA (mkA "unalienable");
lin unaligned_A = compoundA (mkA "unaligned");
lin unalike_A = mkA "unalike" ;
lin unalloyed_A = compoundA (mkA "unalloyed");
lin unalterability_N = mkN "unalterability" ;
lin unalterable_A = compoundA (mkA "unalterable");
lin unaltered_A = compoundA (mkA "unaltered");
lin unambiguity_N = mkN "unambiguity" ;
lin unambiguous_A = compoundA (mkA "unambiguous");
lin unambitious_A = mkA "unambitious" ;
lin unamended_A = compoundA (mkA "unamended");
lin unanalyzable_A = mkA "unanalyzable" ;
lin unanalyzed_A = mkA "unanalyzed" ;
lin unanimated_A = mkA "unanimated" ;
lin unanimity_N = mkN "unanimity" ;
lin unanimous_A = compoundA (mkA "unanimous");
lin unannounced_A = compoundA (mkA "unannounced");
lin unanswerable_A = compoundA (mkA "unanswerable");
lin unanswered_A = compoundA (mkA "unanswered");
lin unanticipated_A = compoundA (mkA "unanticipated");
lin unapologetic_A = mkA "unapologetic" ;
lin unappareled_A = mkA "unappareled" ;
lin unapparent_A = mkA "unapparent" ;
lin unappealable_A = mkA "unappealable" ;
lin unappealing_A = compoundA (mkA "unappealing");
lin unappendaged_A = mkA "unappendaged" ;
lin unappetizing_A = compoundA (mkA "unappetizing");
lin unappetizingness_N = mkN "unappetizingness" ;
lin unappreciated_A = compoundA (mkA "unappreciated");
lin unappreciative_A = compoundA (mkA "unappreciative");
lin unapprehensive_A = mkA "unapprehensive" ;
lin unapproachability_N = mkN "unapproachability" ;
lin unapproachable_A = compoundA (mkA "unapproachable");
lin unarguable_A = compoundA (mkA "unarguable");
lin unargumentative_A = mkA "unargumentative" ;
lin unarmed_A = compoundA (mkA "unarmed");
lin unarmored_A = mkA "unarmored" ;
lin unarticulated_A = compoundA (mkA "unarticulated");
lin unary_A = mkA "unary" ;
lin unascertainable_A = mkA "unascertainable" ;
lin unashamed_A = compoundA (mkA "unashamed");
lin unasked_A = compoundA (mkA "unasked");
lin unassailable_A = compoundA (mkA "unassailable");
lin unassertive_A = mkA "unassertive" ;
lin unassertiveness_N = mkN "unassertiveness" ;
lin unassigned_A = mkA "unassigned" ;
lin unassisted_A = compoundA (mkA "unassisted");
lin unassuming_A = compoundA (mkA "unassuming");
lin unassured_A = mkA "unassured" ;
lin unasterisked_A = mkA "unasterisked" ;
lin unattached_A = compoundA (mkA "unattached");
lin unattainable_A = compoundA (mkA "unattainable");
lin unattainableness_N = mkN "unattainableness" ;
lin unattended_A = compoundA (mkA "unattended");
lin unattractive_A = compoundA (mkA "unattractive");
lin unattractiveness_N = mkN "unattractiveness" ;
lin unattributable_A = mkA "unattributable" ;
lin unauthorized_A = compoundA (mkA "unauthorized");
lin unavailable_A = compoundA (mkA "unavailable");
lin unavailing_A = compoundA (mkA "unavailing");
lin unavenged_A = mkA "unavenged" ;
lin unavoidable_A = compoundA (mkA "unavoidable");
lin unavowed_A = mkA "unavowed" ;
lin unawakened_A = compoundA (mkA "unawakened");
lin unaware_A = compoundA (mkA "unaware");
lin unaware_of_A2 = mkA2 (compoundA (mkA "unaware")) (mkPrep "of");
lin unawares_Adv = mkAdv "unawares";
lin unawed_A = mkA "unawed" ;
lin unbacked_A = compoundA (mkA "unbacked");
lin unbaffled_A = mkA "unbaffled" ;
lin unbalance_V2 = mkV2 (mkV "unbalance" "unbalances" "unbalanced" "unbalanced" "unbalancing");
lin unbalconied_A = mkA "unbalconied" ;
lin unbanded_A = mkA "unbanded" ;
lin unbaptized_A = mkA "unbaptized" ;
lin unbar_V2 = mkV2 (mkV "unbar" "unbars" "unbarred" "unbarred" "unbarring");
lin unbarreled_A = mkA "unbarreled" ;
lin unbearable_A = compoundA (mkA "unbearable");
lin unbeatable_A = compoundA (mkA "unbeatable");
lin unbeaten_A = compoundA (mkA "unbeaten");
lin unbecoming_A = compoundA (mkA "unbecoming");
lin unbecomingness_N = mkN "unbecomingness" ;
lin unbefitting_A = mkA "unbefitting" ;
lin unbeknown_A = compoundA (mkA "unbeknown");
lin unbeknown_Adv = mkAdv "unbeknown";
lin unbeknownst_A = compoundA (mkA "unbeknownst");
lin unbeknownst_Adv = mkAdv "unbeknownst";
lin unbelief_N = mkN "unbelief" ;
lin unbelievable_A = compoundA (mkA "unbelievable");
lin unbeliever_N = mkN "unbeliever" "unbelievers";
lin unbelieving_A = compoundA (mkA "unbelieving");
lin unbeloved_A = compoundA (mkA "unbeloved");
lin unbelted_A = mkA "unbelted" ;
lin unbend_V = mkV "unbend" "unbends" "unbended" "unbended" "unbending";
lin unbend_V2 = mkV2 (mkV "unbend" "unbends" "unbended" "unbended" "unbending");
lin unbeneficed_A = mkA "unbeneficed" ;
lin unbent_A = mkA "unbent" ;
lin unbiased_A = compoundA (mkA "unbiased");
lin unbiassed_A = compoundA (mkA "unbiassed");
lin unbidden_A = compoundA (mkA "unbidden");
lin unbigoted_A = mkA "unbigoted" ;
lin unbind_V2 = mkV2 (mkV "un" IrregEng.bind_V);
lin unbitter_A = mkA "unbitter" ;
lin unbleached_A = mkA "unbleached" ;
lin unblemished_A = mkA "unblemished" ;
lin unblended_A = mkA "unblended" ;
lin unblessed_A = mkA "unblessed" ;
lin unblinking_A = mkA "unblinking" ;
lin unblock_V2 = mkV2 (mkV "unblock" "unblocks" "unblocked" "unblocked" "unblocking");
lin unblushing_A = compoundA (mkA "unblushing");
lin unbodied_A = mkA "unbodied" ;
lin unbolt_V = mkV "unbolt" "unbolts" "unbolted" "unbolted" "unbolting";
lin unbolt_V2 = mkV2 (mkV "unbolt" "unbolts" "unbolted" "unbolted" "unbolting");
lin unbooked_A = mkA "unbooked" ;
lin unbordered_A = mkA "unbordered" ;
lin unborn_A = compoundA (mkA "unborn");
lin unbosom_V2 = mkV2 (mkV "unbosom" "unbosoms" "unbosomed" "unbosomed" "unbosoming");
lin unbounded_A = compoundA (mkA "unbounded");
lin unbowed_A = compoundA (mkA "unbowed");
lin unbraced_A = mkA "unbraced" ;
lin unbrainwashed_A = mkA "unbrainwashed" ;
lin unbranched_A = mkA "unbranched" ;
lin unbranded_A = mkA "unbranded" ;
lin unbreakable_A = compoundA (mkA "unbreakable");
lin unbreakableness_N = mkN "unbreakableness" ;
lin unbridgeable_A = mkA "unbridgeable" ;
lin unbridled_A = compoundA (mkA "unbridled");
lin unbroken_A = compoundA (mkA "unbroken");
lin unbrushed_A = mkA "unbrushed" ;
lin unbuckle_V2 = mkV2 (mkV "unbuckle" "unbuckles" "unbuckled" "unbuckled" "unbuckling");
lin unburden_V2 = mkV2 (mkV "unburden" "unburdens" "unburdened" "unburdened" "unburdening");
lin unburied_A = compoundA (mkA "unburied");
lin unburnished_A = mkA "unburnished" ;
lin unbutton_V2 = mkV2 (mkV "unbutton" "unbuttons" "unbuttoned" "unbuttoned" "unbuttoning");
lin uncalled_for_A = compoundA (mkA "uncalled-for");
lin uncamphorated_A = mkA "uncamphorated" ;
lin uncanny_A = compoundA (mkA "uncanny");
lin uncapped_A = mkA "uncapped" ;
lin uncared_for_A = compoundA (mkA "uncared-for");
lin uncarpeted_A = compoundA (mkA "uncarpeted");
lin uncarved_A = mkA "uncarved" ;
lin uncastrated_A = mkA "uncastrated" ;
lin uncategorized_A = mkA "uncategorized" ;
lin uncaulked_A = mkA "uncaulked" ;
lin unceasing_A = compoundA (mkA "unceasing");
lin uncensored_A = compoundA (mkA "uncensored");
lin unceremonious_A = compoundA (mkA "unceremonious");
lin unceremoniousness_N = mkN "unceremoniousness" ;
lin uncertain_A = compoundA (mkA "uncertain");
lin uncertainty_N = mkN "uncertainty" "uncertainties";
lin uncertified_A = mkA "uncertified" ;
lin unchain_V2 = mkV2 (mkV "unchain" "unchains" "unchained" "unchained" "unchaining");
lin unchallengeable_A = compoundA (mkA "unchallengeable");
lin unchallenged_A = compoundA (mkA "unchallenged");
lin unchangeable_A = mkA "unchangeable" ;
lin unchanged_A = compoundA (mkA "unchanged");
lin unchanging_A = compoundA (mkA "unchanging");
lin uncharacteristic_A = compoundA (mkA "uncharacteristic");
lin uncharacteristically_Adv = mkAdv "uncharacteristically";
lin uncharged_A = mkA "uncharged" ;
lin uncharitable_A = compoundA (mkA "uncharitable");
lin uncharted_A = compoundA (mkA "uncharted");
lin unchartered_A = mkA "unchartered" ;
lin unchaste_A = mkA "unchaste" ;
lin uncheckable_A = mkA "uncheckable" ;
lin unchecked_A = compoundA (mkA "unchecked");
lin uncheerfulness_N = mkN "uncheerfulness" ;
lin unchivalrously_Adv = mkAdv "unchivalrously";
lin unchristian_A = compoundA (mkA "unchristian");
lin unchristianly_A = mkA "unchristianly" ;
lin uncial_A = mkA "uncial" ;
lin uncial_N = mkN "uncial" ;
lin uncivil_A = compoundA (mkA "uncivil");
lin uncivilized_A = compoundA (mkA "uncivilized");
lin unclaimed_A = compoundA (mkA "unclaimed");
lin unclassifiable_A = mkA "unclassifiable" ;
lin unclassified_A = compoundA (mkA "unclassified");
lin uncle_N = mkN "uncle" "uncles";
lin unclean_A = compoundA (mkA "unclean");
lin uncleanliness_N = mkN "uncleanliness" ;
lin uncleanly_A = mkA "uncleanly" ;
lin unclear_A = compoundA (mkA "unclear");
lin uncleared_A = mkA "uncleared" ;
lin unclearness_N = mkN "unclearness" ;
lin unclipped_A = mkA "unclipped" ;
lin unclogged_A = mkA "unclogged" ;
lin unclothed_A = mkA "unclothed" ;
lin unclouded_A = compoundA (mkA "unclouded");
lin uncluttered_A = compoundA (mkA "uncluttered");
lin unco_A = compoundA (mkA "unco");
lin unco_Adv = mkAdv "unco";
lin unco_operative_A = compoundA (mkA "unco-operative");
lin unco_ordinated_A = compoundA (mkA "unco-ordinated");
lin uncoated_A = mkA "uncoated" ;
lin uncoerced_A = mkA "uncoerced" ;
lin uncoiled_A = mkA "uncoiled" ;
lin uncollected_A = mkA "uncollected" ;
lin uncolored_A = mkA "uncolored" ;
lin uncoloured_A = compoundA (mkA "uncoloured");
lin uncombable_A = mkA "uncombable" ;
lin uncombed_A = mkA "uncombed" ;
lin uncombined_A = mkA "uncombined" ;
lin uncomfortable_A = compoundA (mkA "uncomfortable");
lin uncommercial_A = mkA "uncommercial" ;
lin uncommercialized_A = compoundA (mkA "uncommercialized");
lin uncommitted_A = compoundA (mkA "uncommitted");
lin uncommon_A = compoundA (mkA "uncommon");
lin uncommonness_N = mkN "uncommonness" ;
lin uncommunicative_A = compoundA (mkA "uncommunicative");
lin uncommunicativeness_N = mkN "uncommunicativeness" ;
lin uncompartmented_A = mkA "uncompartmented" ;
lin uncompassionate_A = mkA "uncompassionate" ;
lin uncompensated_A = mkA "uncompensated" ;
lin uncompetitive_A = compoundA (mkA "uncompetitive");
lin uncomplaining_A = compoundA (mkA "uncomplaining");
lin uncompleted_A = compoundA (mkA "uncompleted");
lin uncomplicated_A = compoundA (mkA "uncomplicated");
lin uncomplimentary_A = compoundA (mkA "uncomplimentary");
lin uncompounded_A = mkA "uncompounded" ;
lin uncomprehended_A = mkA "uncomprehended" ;
lin uncomprehending_A = compoundA (mkA "uncomprehending");
lin uncompromising_A = compoundA (mkA "uncompromising");
lin unconcealed_A = compoundA (mkA "unconcealed");
lin unconcern_N = mkN "unconcern" ;
lin unconcerned_A = compoundA (mkA "unconcerned");
lin unconditional_A = compoundA (mkA "unconditional");
lin unconditioned_A = compoundA (mkA "unconditioned");
lin unconfessed_A = mkA "unconfessed" ;
lin unconfessed_N = mkN "unconfessed" ;
lin unconfined_A = compoundA (mkA "unconfined");
lin unconfirmed_A = compoundA (mkA "unconfirmed");
lin unconformable_A = compoundA (mkA "unconformable");
lin uncongenial_A = compoundA (mkA "uncongenial");
lin uncongeniality_N = mkN "uncongeniality" ;
lin unconnected_A = compoundA (mkA "unconnected");
lin unconnectedness_N = mkN "unconnectedness" ;
lin unconquerable_A = mkA "unconquerable" ;
lin unconquered_A = compoundA (mkA "unconquered");
lin unconscientious_A = mkA "unconscientious" ;
lin unconscientiousness_N = mkN "unconscientiousness" ;
lin unconscionable_A = compoundA (mkA "unconscionable");
lin unconscious_A = compoundA (mkA "unconscious");
lin unconscious_N = mkN "unconscious" "unconsciouses";
lin unconsciousness_N = mkN "unconsciousness" ;
lin unconsidered_A = compoundA (mkA "unconsidered");
lin unconsolidated_A = mkA "unconsolidated" ;
lin unconstipated_A = mkA "unconstipated" ;
lin unconstitutional_A = compoundA (mkA "unconstitutional");
lin unconstrained_A = compoundA (mkA "unconstrained");
lin unconstricted_A = mkA "unconstricted" ;
lin unconstructive_A = compoundA (mkA "unconstructive");
lin unconsumed_A = mkA "unconsumed" ;
lin unconsummated_A = compoundA (mkA "unconsummated");
lin uncontaminated_A = compoundA (mkA "uncontaminated");
lin uncontested_A = mkA "uncontested" ;
lin uncontrollable_A = compoundA (mkA "uncontrollable");
lin uncontrolled_A = compoundA (mkA "uncontrolled");
lin uncontroversial_A = compoundA (mkA "uncontroversial");
lin unconventional_A = compoundA (mkA "unconventional");
lin unconventionality_N = mkN "unconventionality" ;
lin unconverted_A = compoundA (mkA "unconverted");
lin unconvinced_A = compoundA (mkA "unconvinced");
lin unconvincing_A = compoundA (mkA "unconvincing");
lin uncooked_A = compoundA (mkA "uncooked");
lin uncool_A = mkA "uncool" ;
lin uncooperative_A = mkA "uncooperative" ;
lin uncoordinated_A = mkA "uncoordinated" ;
lin uncordial_A = mkA "uncordial" ;
lin uncork_V2 = mkV2 (mkV "uncork" "uncorks" "uncorked" "uncorked" "uncorking");
lin uncorrected_A = compoundA (mkA "uncorrected");
lin uncorrelated_A = compoundA (mkA "uncorrelated");
lin uncorroborated_A = compoundA (mkA "uncorroborated");
lin uncorrupted_A = mkA "uncorrupted" ;
lin uncouple_V2 = mkV2 (mkV "uncouple" "uncouples" "uncoupled" "uncoupled" "uncoupling");
lin uncousinly_A = mkA "uncousinly" ;
lin uncouth_A = compoundA (mkA "uncouth");
lin uncouthness_N = mkN "uncouthness" ;
lin uncover_V2 = mkV2 (mkV "uncover" "uncovers" "uncovered" "uncovered" "uncovering");
lin uncrannied_A = mkA "uncrannied" ;
lin uncreative_A = mkA "uncreative" ;
lin uncreativeness_N = mkN "uncreativeness" ;
lin uncritical_A = compoundA (mkA "uncritical");
lin uncropped_A = mkA "uncropped" ;
lin uncross_V2 = mkV2 (mkV "uncross" "uncrosses" "uncrossed" "uncrossed" "uncrossing");
lin uncrowded_A = mkA "uncrowded" ;
lin uncrowned_A = compoundA (mkA "uncrowned");
lin uncrystallized_A = mkA "uncrystallized" ;
lin unction_N = mkN "unction" ;
lin unctuous_A = compoundA (mkA "unctuous");
lin uncultivable_A = mkA "uncultivable" ;
lin uncultivated_A = compoundA (mkA "uncultivated");
lin uncultured_A = compoundA (mkA "uncultured");
lin uncured_A = mkA "uncured" ;
lin uncurl_V = mkV "uncurl" "uncurls" "uncurled" "uncurled" "uncurling";
lin uncurl_V2 = mkV2 (mkV "uncurl" "uncurls" "uncurled" "uncurled" "uncurling");
lin uncurved_A = mkA "uncurved" ;
lin uncus_N = mkN "uncus" ;
lin uncut_A = compoundA (mkA "uncut");
lin undamaged_A = compoundA (mkA "undamaged");
lin undatable_A = mkA "undatable" ;
lin undated_A = compoundA (mkA "undated");
lin undaunted_A = compoundA (mkA "undaunted");
lin undecagon_N = mkN "undecagon" ;
lin undeceive_V2 = mkV2 (mkV "undeceive" "undeceives" "undeceived" "undeceived" "undeceiving");
lin undecided_A = compoundA (mkA "undecided");
lin undeciphered_A = mkA "undeciphered" ;
lin undeclared_A = compoundA (mkA "undeclared");
lin undedicated_A = mkA "undedicated" ;
lin undefeated_A = compoundA (mkA "undefeated");
lin undefended_A = compoundA (mkA "undefended");
lin undeferential_A = compoundA (mkA "undeferential");
lin undefinable_A = compoundA (mkA "undefinable");
lin undefined_A = compoundA (mkA "undefined");
lin undelineated_A = mkA "undelineated" ;
lin undemanding_A = compoundA (mkA "undemanding");
lin undemocratic_A = compoundA (mkA "undemocratic");
lin undemocratically_Adv = mkAdv "undemocratically";
lin undemonstrative_A = compoundA (mkA "undemonstrative");
lin undeniable_A = compoundA (mkA "undeniable");
lin undenominational_A = compoundA (mkA "undenominational");
lin undependability_N = mkN "undependability" ;
lin undependable_A = mkA "undependable" ;
lin undepicted_A = mkA "undepicted" ;
lin under_Adv = mkAdv "under";
lin under_Prep = mkPrep "under";
lin under_the_counter_A = compoundA (mkA "under-the-counter");
lin underachievement_N = mkN "underachievement" ;
lin underachiever_N = mkN "underachiever" ;
lin underact_V = mkV "underact" "underacts" "underacted" "underacted" "underacting";
lin underact_V2 = mkV2 (mkV "underact" "underacts" "underacted" "underacted" "underacting");
lin underage_A = mkA "underage" ;
lin underarm_A = compoundA (mkA "underarm");
lin underarm_Adv = mkAdv "underarm";
lin underbelly_N = mkN "underbelly" "underbellies";
lin underbid_V2 = mkV2 (mkV "under" IrregEng.bid_V);
lin underboss_N = mkN "underboss" ;
lin underbred_A = compoundA (mkA "underbred");
lin underbrush_N = mkN "underbrush" ;
lin undercarriage_N = mkN "undercarriage" "undercarriages";
lin undercharge_N = mkN "undercharge" "undercharges";
lin undercharge_V2 = mkV2 (mkV "undercharge" "undercharges" "undercharged" "undercharged" "undercharging");
lin underclothing_N = mkN "underclothing" ;
lin undercoat_N = mkN "undercoat" "undercoats";
lin undercoated_A = mkA "undercoated" ;
lin undercover_A = compoundA (mkA "undercover");
lin undercurrent_N = mkN "undercurrent" "undercurrents";
lin undercut_N = mkN "undercut" ;
lin undercut_V2 = mkV2 (mkV "under" IrregEng.cut_V);
lin underdeveloped_A = compoundA (mkA "underdeveloped");
lin underdevelopment_N = mkN "underdevelopment" ;
lin underdog_N = mkN "underdog" "underdogs";
lin underdone_A = compoundA (mkA "underdone");
lin underdressed_A = mkA "underdressed" ;
lin undereducated_A = mkA "undereducated" ;
lin underemployed_A = compoundA (mkA "underemployed");
lin underestimate_N = mkN "underestimate" "underestimates";
lin underestimate_V2 = mkV2 (mkV "underestimate" "underestimates" "underestimated" "underestimated" "underestimating");
lin underestimation_N = mkN "underestimation" "underestimations";
lin underevaluation_N = mkN "underevaluation" ;
lin underexpose_V2 = mkV2 (mkV "underexpose" "underexposes" "underexposed" "underexposed" "underexposing");
lin underexposure_N = mkN "underexposure" "underexposures";
lin underfed_A = compoundA (mkA "underfed");
lin underfelt_N = mkN "underfelt" ;
lin underfloor_A = compoundA (mkA "underfloor");
lin underfoot_Adv = mkAdv "underfoot";
lin underfund_V2 = mkV2 (mkV "underfund");
lin undergarment_N = mkN "undergarment" "undergarments";
lin undergo_V2 = mkV2 (mkV "under" IrregEng.go_V);
lin undergraduate_N = mkN "undergraduate" "undergraduates";
lin underground_A = compoundA (mkA "underground");
lin underground_Adv = mkAdv "underground";
lin underground_N = mkN "underground" "undergrounds";
lin undergrowth_N = mkN "undergrowth" ;
lin underhand_A = compoundA (mkA "underhand");
lin underhand_Adv = mkAdv "underhand";
lin underhanded_A = compoundA (mkA "underhanded");
lin underhung_A = compoundA (mkA "underhung");
lin underivative_A = mkA "underivative" ;
lin underived_A = mkA "underived" ;
lin underlay_N = mkN "underlay" ;
lin underlie_V2 = mkV2 (mkV "under" IrregEng.lie_V);
lin underline_N = mkN "underline" "underlines";
lin underline_V2 = mkV2 (mkV "underline" "underlines" "underlined" "underlined" "underlining");
lin underling_N = mkN "underling" "underlings";
lin underlip_N = mkN "underlip" ;
lin underlying_A = mkA "underlying" ;
lin undermanned_A = compoundA (mkA "undermanned");
lin undermentioned_A = compoundA (mkA "undermentioned");
lin undermine_V2 = mkV2 (mkV "undermine" "undermines" "undermined" "undermined" "undermining");
lin underneath_Adv = mkAdv "underneath";
lin underneath_Prep = mkPrep "underneath";
lin undernourished_A = compoundA (mkA "undernourished");
lin undernourishment_N = mkN "undernourishment" ;
lin underpants_N = mkN "underpants" ;
lin underpart_N = mkN "underpart" ;
lin underpass_N = mkN "underpass" "underpasses";
lin underpay_V2 = mkV2 (mkV "under" IrregEng.pay_V);
lin underpayment_N = mkN "underpayment" "underpayments";
lin underperform_V2 = mkV2 (mkV "underperform");
lin underperformer_N = mkN "underperformer" ;
lin underpin_V2 = mkV2 (mkV "underpin" "underpins" "underpinned" "underpinned" "underpinning");
lin underpopulated_A = compoundA (mkA "underpopulated");
lin underprivileged_A = compoundA (mkA "underprivileged");
lin underproduction_N = mkN "underproduction" ;
lin underquote_V2 = mkV2 (mkV "underquote" "underquotes" "underquoted" "underquoted" "underquoting");
lin underrate_V2 = mkV2 (mkV "underrate" "underrates" "underrated" "underrated" "underrating");
lin underscore_N = mkN "underscore" ;
lin underscore_V2 = mkV2 (mkV "underscore" "underscores" "underscored" "underscored" "underscoring");
lin undersea_A = compoundA (mkA "undersea");
lin underseal_N = mkN "underseal" ;
lin undersealed_A = compoundA (mkA "undersealed");
lin undersecretary_N = mkN "undersecretary" "undersecretaries";
lin undersell_V2 = mkV2 (mkV "under" IrregEng.sell_V);
lin underseller_N = mkN "underseller" ;
lin undersexed_A = compoundA (mkA "undersexed");
lin undershoot_V2 = mkV2 (mkV "under" IrregEng.shoot_V);
lin undershrub_N = mkN "undershrub" ;
lin underside_N = mkN "underside" "undersides";
lin undersign_V2 = mkV2 (mkV "undersign" "undersigns" "undersigned" "undersigned" "undersigning");
lin undersize_A = mkA "undersize" ;
lin undersized_A = compoundA (mkA "undersized");
lin underskirt_N = mkN "underskirt" "underskirts";
lin underslung_A = compoundA (mkA "underslung");
lin underspend_V = mkV "under" IrregEng.spend_V;
lin underspend_V2 = mkV2 (mkV "under" IrregEng.spend_V);
lin understaffed_A = compoundA (mkA "understaffed");
lin understand_V = IrregEng.understand_V;
lin understand_V2 = mkV2 (IrregEng.understand_V);
lin understand_V2V = mkV2V (IrregEng.understand_V) noPrep to_Prep ;
lin understand_VS = mkVS (IrregEng.understand_V);
lin understandable_A = compoundA (mkA "understandable");
lin understanding_N = mkN "understanding" "understandings";
lin understate_V2 = mkV2 (mkV "understate" "understates" "understated" "understated" "understating");
lin understatement_N = mkN "understatement" "understatements";
lin understock_V2 = mkV2 (mkV "understock" "understocks" "understocked" "understocked" "understocking");
lin understudy_N = mkN "understudy" "understudies";
lin understudy_V2 = mkV2 (mkV "understudy" "understudies" "understudied" "understudied" "understudying");
lin undersurface_N = mkN "undersurface" "undersurfaces";
lin undertake_V2 = mkV2 (mkV "under" IrregEng.take_V);
lin undertaker_N = mkN "undertaker" "undertakers";
lin undertaking_N = mkN "undertaking" "undertakings";
lin undertide_N = mkN "undertide" ;
lin undertone_N = mkN "undertone" "undertones";
lin undertow_N = mkN "undertow" "undertows";
lin undervaluation_N = mkN "undervaluation" "undervaluations";
lin undervalue_V2 = mkV2 (mkV "undervalue" "undervalues" "undervalued" "undervalued" "undervaluing");
lin underwater_A = compoundA (mkA "underwater");
lin underwear_N = mkN "underwear" ;
lin underweight_A = compoundA (mkA "underweight");
lin underwhelm_V2 = mkV2 (mkV "underwhelm");
lin underwing_N = mkN "underwing" ;
lin underworld_N = mkN "underworld" "underworlds";
lin underwrite_V = mkV "underwrite";
lin underwrite_V2 = mkV2 (mkV "under" IrregEng.write_V);
lin underwriter_N = mkN "underwriter" "underwriters";
lin undescended_A = mkA "undescended" ;
lin undescriptive_A = mkA "undescriptive" ;
lin undeserved_A = compoundA (mkA "undeserved");
lin undeserving_A = compoundA (mkA "undeserving");
lin undesigned_A = compoundA (mkA "undesigned");
lin undesirability_N = mkN "undesirability" ;
lin undesirable_A = compoundA (mkA "undesirable");
lin undesirable_N = mkN "undesirable" "undesirables";
lin undesired_A = mkA "undesired" ;
lin undesirous_A = mkA "undesirous" ;
lin undestroyable_A = mkA "undestroyable" ;
lin undetectable_A = mkA "undetectable" ;
lin undetected_A = compoundA (mkA "undetected");
lin undetermined_A = compoundA (mkA "undetermined");
lin undeterred_A = compoundA (mkA "undeterred");
lin undeveloped_A = compoundA (mkA "undeveloped");
lin undeviating_A = mkA "undeviating" ;
lin undiagnosable_A = mkA "undiagnosable" ;
lin undiagnosed_A = compoundA (mkA "undiagnosed");
lin undies_N = mkN "undies" ;
lin undifferentiated_A = compoundA (mkA "undifferentiated");
lin undigested_A = compoundA (mkA "undigested");
lin undignified_A = compoundA (mkA "undignified");
lin undiluted_A = compoundA (mkA "undiluted");
lin undiminished_A = compoundA (mkA "undiminished");
lin undimmed_A = compoundA (mkA "undimmed");
lin undine_N = mkN "undine" ;
lin undiplomatic_A = compoundA (mkA "undiplomatic");
lin undiplomatically_Adv = mkAdv "undiplomatically";
lin undiscerning_A = mkA "undiscerning" ;
lin undischarged_A = compoundA (mkA "undischarged");
lin undisciplined_A = compoundA (mkA "undisciplined");
lin undisclosed_A = compoundA (mkA "undisclosed");
lin undiscovered_A = compoundA (mkA "undiscovered");
lin undiscriminating_A = compoundA (mkA "undiscriminating");
lin undisguised_A = compoundA (mkA "undisguised");
lin undismayed_A = compoundA (mkA "undismayed");
lin undisputed_A = compoundA (mkA "undisputed");
lin undissolved_A = compoundA (mkA "undissolved");
lin undistinguishable_A = compoundA (mkA "undistinguishable");
lin undistinguished_A = compoundA (mkA "undistinguished");
lin undistorted_A = mkA "undistorted" ;
lin undistributed_A = compoundA (mkA "undistributed");
lin undisturbed_A = compoundA (mkA "undisturbed");
lin undiversified_A = mkA "undiversified" ;
lin undividable_A = mkA "undividable" ;
lin undivided_A = compoundA (mkA "undivided");
lin undo_V2 = mkV2 (mkV "un" IrregEng.do_V);
lin undock_V = mkV "undock" "undocks" "undocked" "undocked" "undocking";
lin undock_V2 = mkV2 (mkV "undock" "undocks" "undocked" "undocked" "undocking");
lin undocumented_A = compoundA (mkA "undocumented");
lin undoer_N = mkN "undoer" ;
lin undogmatic_A = compoundA (mkA "undogmatic");
lin undoing_N = mkN "undoing" "undoings";
lin undomestic_A = mkA "undomestic" ;
lin undomesticated_A = compoundA (mkA "undomesticated");
lin undoubted_A = compoundA (mkA "undoubted");
lin undrained_A = mkA "undrained" ;
lin undramatic_A = compoundA (mkA "undramatic");
lin undramatically_Adv = mkAdv "undramatically";
lin undraped_A = mkA "undraped" ;
lin undrawn_A = mkA "undrawn" ;
lin undreamed_A = compoundA (mkA "undreamed");
lin undreamed_of_A = compoundA (mkA "undreamed-of");
lin undreamt_A = compoundA (mkA "undreamt");
lin undress_N = mkN "undress" ;
lin undress_V = mkV "undress" "undresses" "undressed" "undressed" "undressing";
lin undress_V2 = mkV2 (mkV "undress" "undresses" "undressed" "undressed" "undressing");
lin undried_A = mkA "undried" ;
lin undrinkable_A = compoundA (mkA "undrinkable");
lin undue_A = compoundA (mkA "undue");
lin undulate_A = mkA "undulate" ;
lin undulate_V = mkV "undulate" "undulates" "undulated" "undulated" "undulating";
lin undulation_N = mkN "undulation" "undulations";
lin undulatory_A = mkA "undulatory" ;
lin unduly_Adv = mkAdv "unduly";
lin undutifulness_N = mkN "undutifulness" ;
lin undying_A = compoundA (mkA "undying");
lin undynamic_A = mkA "undynamic" ;
lin uneager_A = mkA "uneager" ;
lin unearned_A = compoundA (mkA "unearned");
lin unearth_V2 = mkV2 (mkV "unearth" "unearths" "unearthed" "unearthed" "unearthing");
lin unearthly_A = compoundA (mkA "unearthly");
lin unease_N = mkN "unease" ;
lin uneasiness_N = mkN "uneasiness" ;
lin uneasy_A = compoundA (mkA "uneasy");
lin uneatable_A = compoundA (mkA "uneatable");
lin uneaten_A = compoundA (mkA "uneaten");
lin uneconomic_A = compoundA (mkA "uneconomic");
lin uneconomical_A = compoundA (mkA "uneconomical");
lin unedifying_A = compoundA (mkA "unedifying");
lin unedited_A = compoundA (mkA "unedited");
lin uneducated_A = compoundA (mkA "uneducated");
lin uneffective_A = compoundA (mkA "uneffective");
lin unelaborated_A = compoundA (mkA "unelaborated");
lin unemotional_A = compoundA (mkA "unemotional");
lin unemotionality_N = mkN "unemotionality" ;
lin unemphatic_A = mkA "unemphatic" ;
lin unemployable_A = compoundA (mkA "unemployable");
lin unemployed_A = compoundA (mkA "unemployed");
lin unemployment_N = mkN "unemployment" ;
lin unenclosed_A = mkA "unenclosed" ;
lin unencouraging_A = mkA "unencouraging" ;
lin unencumbered_A = mkA "unencumbered" ;
lin unended_A = mkA "unended" ;
lin unending_A = compoundA (mkA "unending");
lin unendowed_A = mkA "unendowed" ;
lin unendurable_A = compoundA (mkA "unendurable");
lin unenforceable_A = mkA "unenforceable" ;
lin unenforced_A = mkA "unenforced" ;
lin unengaged_A = mkA "unengaged" ;
lin unenlightened_A = compoundA (mkA "unenlightened");
lin unenlightening_A = mkA "unenlightening" ;
lin unenlightenment_N = mkN "unenlightenment" ;
lin unenlivened_A = mkA "unenlivened" ;
lin unenterprising_A = compoundA (mkA "unenterprising");
lin unenthusiastic_A = compoundA (mkA "unenthusiastic");
lin unenthusiastically_Adv = mkAdv "unenthusiastically";
lin unentitled_A = mkA "unentitled" ;
lin unenviable_A = compoundA (mkA "unenviable");
lin unequal_A = compoundA (mkA "unequal");
lin unequalized_A = mkA "unequalized" ;
lin unequalled_A = compoundA (mkA "unequalled");
lin unequipped_A = compoundA (mkA "unequipped");
lin unequivocal_A = compoundA (mkA "unequivocal");
lin unerect_A = mkA "unerect" ;
lin unerring_A = compoundA (mkA "unerring");
lin unesco_PN = mkPN "Unesco";
lin unestablished_A = mkA "unestablished" ;
lin unethical_A = compoundA (mkA "unethical");
lin uneven_A = compoundA (mkA "uneven");
lin unevenness_N = mkN "unevenness" ;
lin uneventful_A = compoundA (mkA "uneventful");
lin unexacting_A = mkA "unexacting" ;
lin unexampled_A = compoundA (mkA "unexampled");
lin unexceeded_A = compoundA (mkA "unexceeded");
lin unexcelled_A = mkA "unexcelled" ;
lin unexceptionable_A = compoundA (mkA "unexceptionable");
lin unexceptional_A = compoundA (mkA "unexceptional");
lin unexchangeability_N = mkN "unexchangeability" ;
lin unexchangeable_A = mkA "unexchangeable" ;
lin unexcitable_A = mkA "unexcitable" ;
lin unexcited_A = mkA "unexcited" ;
lin unexciting_A = compoundA (mkA "unexciting");
lin unexclusive_A = mkA "unexclusive" ;
lin unexcused_A = mkA "unexcused" ;
lin unexhausted_A = mkA "unexhausted" ;
lin unexpansive_A = mkA "unexpansive" ;
lin unexpected_A = compoundA (mkA "unexpected");
lin unexpectedness_N = mkN "unexpectedness" ;
lin unexpendable_A = mkA "unexpendable" ;
lin unexpired_A = compoundA (mkA "unexpired");
lin unexplained_A = compoundA (mkA "unexplained");
lin unexploited_A = mkA "unexploited" ;
lin unexplored_A = compoundA (mkA "unexplored");
lin unexportable_A = mkA "unexportable" ;
lin unexposed_A = compoundA (mkA "unexposed");
lin unexpressed_A = compoundA (mkA "unexpressed");
lin unexpurgated_A = compoundA (mkA "unexpurgated");
lin unextended_A = mkA "unextended" ;
lin unfaceted_A = mkA "unfaceted" ;
lin unfailing_A = compoundA (mkA "unfailing");
lin unfair_A = compoundA (mkA "unfair");
lin unfairness_N = mkN "unfairness" ;
lin unfaithful_A = compoundA (mkA "unfaithful");
lin unfaithfulness_N = mkN "unfaithfulness" ;
lin unfaltering_A = compoundA (mkA "unfaltering");
lin unfamiliar_A = compoundA (mkA "unfamiliar");
lin unfamiliarity_N = mkN "unfamiliarity" ;
lin unfashionable_A = compoundA (mkA "unfashionable");
lin unfasten_V = mkV "unfasten" "unfastens" "unfastened" "unfastened" "unfastening";
lin unfasten_V2 = mkV2 (mkV "unfasten" "unfastens" "unfastened" "unfastened" "unfastening");
lin unfastidious_A = mkA "unfastidious" ;
lin unfathomable_A = compoundA (mkA "unfathomable");
lin unfathomed_A = compoundA (mkA "unfathomed");
lin unfattened_A = mkA "unfattened" ;
lin unfavorable_A = mkA "unfavorable" ;
lin unfavorableness_N = mkN "unfavorableness" ;
lin unfavourable_A = compoundA (mkA "unfavourable");
lin unfaze_V2 = mkV2 (mkV "unfaze");
lin unfeathered_A = mkA "unfeathered" ;
lin unfed_A = compoundA (mkA "unfed");
lin unfeeling_A = compoundA (mkA "unfeeling");
lin unfeelingness_N = mkN "unfeelingness" ;
lin unfeigned_A = compoundA (mkA "unfeigned");
lin unfeminine_A = mkA "unfeminine" ;
lin unfenced_A = mkA "unfenced" ;
lin unfermented_A = compoundA (mkA "unfermented");
lin unfertilized_A = compoundA (mkA "unfertilized");
lin unfettered_A = compoundA (mkA "unfettered");
lin unfilled_A = mkA "unfilled" ;
lin unfilmed_A = mkA "unfilmed" ;
lin unfinished_A = compoundA (mkA "unfinished");
lin unfirm_A = mkA "unfirm" ;
lin unfit_A = compoundA (mkA "unfit");
lin unfit_V2 = mkV2 (mkV "unfit" "unfits" "unfitted" "unfitted" "unfitting");
lin unfitness_N = mkN "unfitness" ;
lin unfixed_A = mkA "unfixed" ;
lin unflagging_A = compoundA (mkA "unflagging");
lin unflappable_A = compoundA (mkA "unflappable");
lin unflattering_A = mkA "unflattering" ;
lin unflavored_A = mkA "unflavored" ;
lin unfledged_A = compoundA (mkA "unfledged");
lin unflinching_A = compoundA (mkA "unflinching");
lin unflurried_A = compoundA (mkA "unflurried");
lin unfocused_A = mkA "unfocused" ;
lin unfold_V = mkV "unfold" "unfolds" "unfolded" "unfolded" "unfolding";
lin unfold_V2 = mkV2 (mkV "unfold" "unfolds" "unfolded" "unfolded" "unfolding");
lin unfolding_N = mkN "unfolding" ;
lin unforbearing_A = mkA "unforbearing" ;
lin unforced_A = mkA "unforced" ;
lin unforeseeable_A = compoundA (mkA "unforeseeable");
lin unforeseen_A = compoundA (mkA "unforeseen");
lin unforested_A = mkA "unforested" ;
lin unforethoughtful_A = mkA "unforethoughtful" ;
lin unforfeitable_A = mkA "unforfeitable" ;
lin unforgettable_A = compoundA (mkA "unforgettable");
lin unforgivable_A = compoundA (mkA "unforgivable");
lin unforgiving_A = compoundA (mkA "unforgiving");
lin unformed_A = compoundA (mkA "unformed");
lin unforthcoming_A = compoundA (mkA "unforthcoming");
lin unfortunate_A = compoundA (mkA "unfortunate");
lin unfortunate_N = mkN "unfortunate" "unfortunates";
lin unfounded_A = compoundA (mkA "unfounded");
lin unframed_A = compoundA (mkA "unframed");
lin unfree_A = mkA "unfree" ;
lin unfrequented_A = compoundA (mkA "unfrequented");
lin unfretted_A = mkA "unfretted" ;
lin unfriendliness_N = mkN "unfriendliness" ;
lin unfriendly_A = compoundA (mkA "unfriendly");
lin unfrightened_A = mkA "unfrightened" ;
lin unfrock_V2 = mkV2 (mkV "unfrock" "unfrocks" "unfrocked" "unfrocked" "unfrocking");
lin unfrosted_A = mkA "unfrosted" ;
lin unfrozen_A = mkA "unfrozen" ;
lin unfruitful_A = compoundA (mkA "unfruitful");
lin unfueled_A = mkA "unfueled" ;
lin unfulfilled_A = compoundA (mkA "unfulfilled");
lin unfunctional_A = mkA "unfunctional" ;
lin unfunded_A = mkA "unfunded" ;
lin unfunny_A = mkA "unfunny" ;
lin unfurl_V = mkV "unfurl" "unfurls" "unfurled" "unfurled" "unfurling";
lin unfurl_V2 = mkV2 (mkV "unfurl" "unfurls" "unfurled" "unfurled" "unfurling");
lin unfurnished_A = compoundA (mkA "unfurnished");
lin unfurrowed_A = mkA "unfurrowed" ;
lin ungainly_A = compoundA (mkA "ungainly");
lin ungeared_A = mkA "ungeared" ;
lin ungenerous_A = compoundA (mkA "ungenerous");
lin ungentle_A = compoundA (mkA "ungentle");
lin ungentlemanly_A = compoundA (mkA "ungentlemanly");
lin unglazed_A = compoundA (mkA "unglazed");
lin ungodliness_N = mkN "ungodliness" ;
lin ungodly_A = compoundA (mkA "ungodly");
lin ungovernable_A = compoundA (mkA "ungovernable");
lin ungraceful_A = compoundA (mkA "ungraceful");
lin ungracious_A = compoundA (mkA "ungracious");
lin ungraciousness_N = mkN "ungraciousness" ;
lin ungraded_A = mkA "ungraded" ;
lin ungrammatical_A = compoundA (mkA "ungrammatical");
lin ungrasped_A = mkA "ungrasped" ;
lin ungrateful_A = compoundA (mkA "ungrateful");
lin ungratefulness_N = mkN "ungratefulness" ;
lin ungregarious_A = mkA "ungregarious" ;
lin ungroomed_A = mkA "ungroomed" ;
lin ungrudging_A = compoundA (mkA "ungrudging");
lin ungual_A = mkA "ungual" ;
lin unguaranteed_A = mkA "unguaranteed" ;
lin unguarded_A = compoundA (mkA "unguarded");
lin unguent_N = mkN "unguent" "unguents";
lin unguiculate_A = mkA "unguiculate" ;
lin unguiculate_N = mkN "unguiculate" ;
lin unguided_A = mkA "unguided" ;
lin ungulate_A = mkA "ungulate" ;
lin ungulate_N = mkN "ungulate" ;
lin ungummed_A = mkA "ungummed" ;
lin ungusseted_A = mkA "ungusseted" ;
lin unhallowed_A = compoundA (mkA "unhallowed");
lin unhampered_A = compoundA (mkA "unhampered");
lin unhand_V2 = mkV2 (mkV "unhand" "unhands" "unhanded" "unhanded" "unhanding");
lin unhappiness_N = mkN "unhappiness" ;
lin unhappy_A = mkA "unhappy" "unhappier";
lin unharmed_A = compoundA (mkA "unharmed");
lin unhatched_A = mkA "unhatched" ;
lin unheaded_A = mkA "unheaded" ;
lin unhealed_A = compoundA (mkA "unhealed");
lin unhealthful_A = mkA "unhealthful" ;
lin unhealthfulness_N = mkN "unhealthfulness" ;
lin unhealthy_A = compoundA (mkA "unhealthy");
lin unheard_A = compoundA (mkA "unheard");
lin unheard_of_A = compoundA (mkA "unheard-of");
lin unhearing_A = compoundA (mkA "unhearing");
lin unheated_A = compoundA (mkA "unheated");
lin unheeded_A = compoundA (mkA "unheeded");
lin unhelpful_A = compoundA (mkA "unhelpful");
lin unhelpfulness_N = mkN "unhelpfulness" ;
lin unheralded_A = compoundA (mkA "unheralded");
lin unhesitating_A = compoundA (mkA "unhesitating");
lin unhewn_A = mkA "unhewn" ;
lin unhindered_A = compoundA (mkA "unhindered");
lin unhinge_V2 = mkV2 (mkV "unhinge" "unhinges" "unhinged" "unhinged" "unhinging");
lin unhitch_V = mkV "unhitch" "unhitches" "unhitched" "unhitched" "unhitching";
lin unhitch_V2 = mkV2 (mkV "unhitch" "unhitches" "unhitched" "unhitched" "unhitching");
lin unholiness_N = mkN "unholiness" ;
lin unholy_A = compoundA (mkA "unholy");
lin unhomogenized_A = mkA "unhomogenized" ;
lin unhook_V2 = mkV2 (mkV "unhook" "unhooks" "unhooked" "unhooked" "unhooking");
lin unhoped_A = mkA "unhoped" ;
lin unhoped_for_A = compoundA (mkA "unhoped-for");
lin unhorse_V2 = mkV2 (mkV "unhorse" "unhorses" "unhorsed" "unhorsed" "unhorsing");
lin unhurried_A = compoundA (mkA "unhurried");
lin unhurt_A = compoundA (mkA "unhurt");
lin unhygienic_A = compoundA (mkA "unhygienic");
lin unhygienically_Adv = mkAdv "unhygienically";
lin unicameral_A = mkA "unicameral" ;
lin unicef_PN = mkPN "Unicef";
lin unicellular_A = mkA "unicellular" ;
lin unicorn_N = mkN "unicorn" "unicorns";
lin unicuspid_A = mkA "unicuspid" ;
lin unicycle_N = mkN "unicycle" ;
lin unicyclist_N = mkN "unicyclist" ;
lin unidentifiable_A = compoundA (mkA "unidentifiable");
lin unidentified_A = compoundA (mkA "unidentified");
lin unidimensional_A = mkA "unidimensional" ;
lin unidirectional_A = mkA "unidirectional" ;
lin unifacial_A = mkA "unifacial" ;
lin unification_N = mkN "unification" ;
lin unifilar_A = mkA "unifilar" ;
lin unifoliate_A = mkA "unifoliate" ;
lin uniform_A = compoundA (mkA "uniform");
lin uniform_N = mkN "uniform" "uniforms";
lin uniformed_A = compoundA (mkA "uniformed");
lin uniformity_N = mkN "uniformity" ;
lin unify_V2 = mkV2 (mkV "unify" "unifies" "unified" "unified" "unifying");
lin unilateral_A = compoundA (mkA "unilateral");
lin unilateralism_N = mkN "unilateralism" ;
lin unilateralist_A = compoundA (mkA "unilateralist");
lin unilateralist_N = mkN "unilateralist" "unilateralists";
lin unimaginable_A = compoundA (mkA "unimaginable");
lin unimaginative_A = compoundA (mkA "unimaginative");
lin unimodal_A = mkA "unimodal" ;
lin unimpaired_A = compoundA (mkA "unimpaired");
lin unimpassioned_A = mkA "unimpassioned" ;
lin unimpeachable_A = compoundA (mkA "unimpeachable");
lin unimpeded_A = compoundA (mkA "unimpeded");
lin unimportance_N = mkN "unimportance" ;
lin unimportant_A = compoundA (mkA "unimportant");
lin unimposing_A = mkA "unimposing" ;
lin unimpressed_A = compoundA (mkA "unimpressed");
lin unimpressionable_A = mkA "unimpressionable" ;
lin unimpressive_A = compoundA (mkA "unimpressive");
lin unimproved_A = mkA "unimproved" ;
lin unincorporated_A = mkA "unincorporated" ;
lin unindustrialized_A = mkA "unindustrialized" ;
lin uninebriated_A = mkA "uninebriated" ;
lin uninfected_A = mkA "uninfected" ;
lin uninflected_A = mkA "uninflected" ;
lin uninfluenced_A = compoundA (mkA "uninfluenced");
lin uninfluential_A = mkA "uninfluential" ;
lin uninformative_A = compoundA (mkA "uninformative");
lin uninformed_A = compoundA (mkA "uninformed");
lin uninhabitable_A = compoundA (mkA "uninhabitable");
lin uninhabited_A = compoundA (mkA "uninhabited");
lin uninhibited_A = compoundA (mkA "uninhibited");
lin uninitiate_A = mkA "uninitiate" ;
lin uninitiate_N = mkN "uninitiate" ;
lin uninitiated_A = compoundA (mkA "uninitiated");
lin uninjectable_A = mkA "uninjectable" ;
lin uninjured_A = compoundA (mkA "uninjured");
lin uninominal_A = mkA "uninominal" ;
lin uninquiring_A = mkA "uninquiring" ;
lin uninspired_A = compoundA (mkA "uninspired");
lin uninspiring_A = compoundA (mkA "uninspiring");
lin uninstructed_A = mkA "uninstructed" ;
lin uninstructive_A = mkA "uninstructive" ;
lin uninsurability_N = mkN "uninsurability" ;
lin uninsurable_A = mkA "uninsurable" ;
lin uninsured_A = compoundA (mkA "uninsured");
lin unintelligent_A = compoundA (mkA "unintelligent");
lin unintelligibility_N = mkN "unintelligibility" ;
lin unintelligible_A = compoundA (mkA "unintelligible");
lin unintended_A = compoundA (mkA "unintended");
lin unintentional_A = compoundA (mkA "unintentional");
lin uninterested_A = compoundA (mkA "uninterested");
lin uninteresting_A = compoundA (mkA "uninteresting");
lin uninterestingness_N = mkN "uninterestingness" ;
lin uninterrupted_A = compoundA (mkA "uninterrupted");
lin unintrusive_A = mkA "unintrusive" ;
lin uninucleate_A = mkA "uninucleate" ;
lin uninvited_A = compoundA (mkA "uninvited");
lin uninviting_A = compoundA (mkA "uninviting");
lin uninvolved_A = mkA "uninvolved" ;
lin union_A = mkA "union" ;
lin union_N = mkN "union" "unions";
lin unionism_N = mkN "unionism" ;
lin unionist_N = mkN "unionist" "unionists";
lin unionization_N = mkN "unionization" ;
lin uniovular_A = mkA "uniovular" ;
lin uniparous_A = mkA "uniparous" ;
lin unipolar_A = mkA "unipolar" ;
lin unique_A = compoundA (mkA "unique");
lin uniqueness_N = mkN "uniqueness" ;
lin unironed_A = mkA "unironed" ;
lin unisex_A = compoundA (mkA "unisex");
lin unisexual_A = mkA "unisexual" ;
lin unison_N = mkN "unison" ;
lin unit_1_N = mkN "unit" "units";
lin unit_2_N = mkN "unit" "units";
lin unit_3_N = mkN "unit" "units";
lin unit_4_N = mkN "unit" "units";
lin unit_5_N = mkN "unit" "units";
lin unit_6_N = mkN "unit" "units";
lin unit_V2V = mkV2V (mkV "unit") noPrep to_Prep ;
lin unitarian_A = compoundA (mkA "unitarian");
lin unitarian_N = mkN "unitarian" "unitarians";
lin unitarianism_N = mkN "unitarianism" ;
lin unitary_A = compoundA (mkA "unitary");
lin unite_V = mkV "unite" "unites" "united" "united" "uniting";
lin unite_V2 = mkV2 (mkV "unite" "unites" "united" "united" "uniting");
lin unitization_N = mkN "unitization" ;
lin unity_N = mkN "unity" "unities";
lin univ_PN = mkPN "Univ";
lin univalent_A = mkA "univalent" ;
lin univalve_A = mkA "univalve" ;
lin universal_A = compoundA (mkA "universal");
lin universal_N = mkN "universal" ;
lin universalism_N = mkN "universalism" ;
lin universalistic_A = mkA "universalistic" ;
lin universality_N = mkN "universality" ;
lin universe_N = mkN "universe" "universes";
lin university_N = mkN "university" "universities";
lin unjointed_A = mkA "unjointed" ;
lin unjust_A = compoundA (mkA "unjust");
lin unjustifiable_A = compoundA (mkA "unjustifiable");
lin unjustified_A = compoundA (mkA "unjustified");
lin unkempt_A = compoundA (mkA "unkempt");
lin unkind_A = compoundA (mkA "unkind");
lin unkindled_A = mkA "unkindled" ;
lin unkindly_A = mkA "unkindly" ;
lin unkindness_N = mkN "unkindness" ;
lin unkissed_A = compoundA (mkA "unkissed");
lin unknowable_A = compoundA (mkA "unknowable");
lin unknowing_A = compoundA (mkA "unknowing");
lin unknowingness_N = mkN "unknowingness" ;
lin unknown_A = compoundA (mkA "unknown");
lin unknown_N = mkN "unknown" "unknowns";
lin unlabeled_A = mkA "unlabeled" ;
lin unlabelled_A = compoundA (mkA "unlabelled");
lin unlaced_A = mkA "unlaced" ;
lin unladylike_A = compoundA (mkA "unladylike");
lin unlamented_A = compoundA (mkA "unlamented");
lin unlatched_A = compoundA (mkA "unlatched");
lin unlaureled_A = mkA "unlaureled" ;
lin unlawful_A = compoundA (mkA "unlawful");
lin unlawfulness_N = mkN "unlawfulness" ;
lin unleaded_A = mkA "unleaded" ;
lin unlearn_V2 = mkV2 (mkV "unlearn" "unlearns" "unlearned" "unlearned" "unlearning");
lin unleash_V2 = mkV2 (mkV "unleash" "unleashes" "unleashed" "unleashed" "unleashing");
lin unleavened_A = compoundA (mkA "unleavened");
lin unless_Subj = mkSubj "unless";
lin unlettered_A = compoundA (mkA "unlettered");
lin unlicensed_A = compoundA (mkA "unlicensed");
lin unlighted_A = compoundA (mkA "unlighted");
lin unlikable_A = compoundA (mkA "unlikable");
lin unlike_A = compoundA (mkA "unlike");
lin unlike_Prep = mkPrep "unlike";
lin unlikelihood_N = mkN "unlikelihood" ;
lin unlikely_A = compoundA (mkA "unlikely");
lin unlikeness_N = mkN "unlikeness" ;
lin unlimited_A = compoundA (mkA "unlimited");
lin unlined_A = compoundA (mkA "unlined");
lin unlisted_A = compoundA (mkA "unlisted");
lin unlit_A = compoundA (mkA "unlit");
lin unliterary_A = compoundA (mkA "unliterary");
lin unlivable_A = mkA "unlivable" ;
lin unliveried_A = mkA "unliveried" ;
lin unload_V = mkV "unload" "unloads" "unloaded" "unloaded" "unloading";
lin unload_V2 = mkV2 (mkV "unload" "unloads" "unloaded" "unloaded" "unloading");
lin unloading_N = mkN "unloading" ;
lin unlobed_A = mkA "unlobed" ;
lin unlocated_A = compoundA (mkA "unlocated");
lin unlock_V = mkV "unlock" "unlocks" "unlocked" "unlocked" "unlocking";
lin unlock_V2 = mkV2 (mkV "unlock" "unlocks" "unlocked" "unlocked" "unlocking");
lin unlooked_for_A = compoundA (mkA "unlooked-for");
lin unloose_V2 = mkV2 (mkV "unloose" "unlooses" "unloosed" "unloosed" "unloosing");
lin unlovable_A = compoundA (mkA "unlovable");
lin unloved_A = compoundA (mkA "unloved");
lin unlovely_A = compoundA (mkA "unlovely");
lin unloving_A = mkA "unloving" ;
lin unlubricated_A = mkA "unlubricated" ;
lin unlucky_A = compoundA (mkA "unlucky");
lin unmade_A = compoundA (mkA "unmade");
lin unmalicious_A = mkA "unmalicious" ;
lin unmalleability_N = mkN "unmalleability" ;
lin unmalleable_A = mkA "unmalleable" ;
lin unmalted_A = mkA "unmalted" ;
lin unman_V2 = mkV2 (mkV "unman" "unmans" "unmanned" "unmanned" "unmanning");
lin unmanageable_A = compoundA (mkA "unmanageable");
lin unmanfully_Adv = mkAdv "unmanfully" ;
lin unmanly_A = compoundA (mkA "unmanly");
lin unmannered_A = compoundA (mkA "unmannered");
lin unmannerly_A = compoundA (mkA "unmannerly");
lin unmarked_A = compoundA (mkA "unmarked");
lin unmarketable_A = mkA "unmarketable" ;
lin unmarried_A = compoundA (mkA "unmarried");
lin unmask_V = mkV "unmask" "unmasks" "unmasked" "unmasked" "unmasking";
lin unmask_V2 = mkV2 (mkV "unmask" "unmasks" "unmasked" "unmasked" "unmasking");
lin unmatchable_A = compoundA (mkA "unmatchable");
lin unmatched_A = compoundA (mkA "unmatched");
lin unmated_A = mkA "unmated" ;
lin unmeasured_A = mkA "unmeasured" ;
lin unmechanical_A = mkA "unmechanical" ;
lin unmechanized_A = compoundA (mkA "unmechanized");
lin unmedicinal_A = mkA "unmedicinal" ;
lin unmelodious_A = mkA "unmelodious" ;
lin unmelted_A = mkA "unmelted" ;
lin unmemorable_A = compoundA (mkA "unmemorable");
lin unmentionable_A = compoundA (mkA "unmentionable");
lin unmercenary_A = mkA "unmercenary" ;
lin unmerciful_A = compoundA (mkA "unmerciful");
lin unmerited_A = compoundA (mkA "unmerited");
lin unmeritorious_A = mkA "unmeritorious" ;
lin unmethodical_A = mkA "unmethodical" ;
lin unmilitary_A = mkA "unmilitary" ;
lin unmindful_A = compoundA (mkA "unmindful");
lin unmindfulness_N = mkN "unmindfulness" ;
lin unmined_A = mkA "unmined" ;
lin unmingled_A = compoundA (mkA "unmingled");
lin unmistakable_A = compoundA (mkA "unmistakable");
lin unmitigable_A = mkA "unmitigable" ;
lin unmitigated_A = compoundA (mkA "unmitigated");
lin unmixed_A = compoundA (mkA "unmixed");
lin unmoderated_A = mkA "unmoderated" ;
lin unmodernized_A = compoundA (mkA "unmodernized");
lin unmodifiable_A = mkA "unmodifiable" ;
lin unmodified_A = compoundA (mkA "unmodified");
lin unmodulated_A = mkA "unmodulated" ;
lin unmolested_A = compoundA (mkA "unmolested");
lin unmotivated_A = mkA "unmotivated" ;
lin unmotorized_A = mkA "unmotorized" ;
lin unmourned_A = compoundA (mkA "unmourned");
lin unmovable_A = compoundA (mkA "unmovable");
lin unmoved_A = compoundA (mkA "unmoved");
lin unmoving_A = compoundA (mkA "unmoving");
lin unmown_A = mkA "unmown" ;
lin unmusical_A = compoundA (mkA "unmusical");
lin unmyelinated_A = mkA "unmyelinated" ;
lin unnamed_A = compoundA (mkA "unnamed");
lin unnatural_A = compoundA (mkA "unnatural");
lin unnaturalized_A = mkA "unnaturalized" ;
lin unnaturalness_N = mkN "unnaturalness" ;
lin unnavigable_A = mkA "unnavigable" ;
lin unnecessary_A = compoundA (mkA "unnecessary");
lin unneighborliness_N = mkN "unneighborliness" ;
lin unneighborly_A = mkA "unneighborly" ;
lin unnerve_V2 = mkV2 (mkV "unnerve" "unnerves" "unnerved" "unnerved" "unnerving");
lin unneurotic_A = mkA "unneurotic" ;
lin unnotched_A = mkA "unnotched" ;
lin unnoticeable_A = compoundA (mkA "unnoticeable");
lin unnoticeableness_N = mkN "unnoticeableness" ;
lin unnoticed_A = compoundA (mkA "unnoticed");
lin unnourished_A = mkA "unnourished" ;
lin unnumbered_A = compoundA (mkA "unnumbered");
lin unobjectionable_A = compoundA (mkA "unobjectionable");
lin unobjective_A = mkA "unobjective" ;
lin unobligated_A = mkA "unobligated" ;
lin unobservable_A = mkA "unobservable" ;
lin unobservant_A = compoundA (mkA "unobservant");
lin unobserved_A = compoundA (mkA "unobserved");
lin unobstructed_A = mkA "unobstructed" ;
lin unobtainable_A = compoundA (mkA "unobtainable");
lin unobtrusive_A = compoundA (mkA "unobtrusive");
lin unobtrusiveness_N = mkN "unobtrusiveness" ;
lin unobvious_A = compoundA (mkA "unobvious");
lin unoccupied_A = compoundA (mkA "unoccupied");
lin unoffending_A = mkA "unoffending" ;
lin unofficial_A = compoundA (mkA "unofficial");
lin unoiled_A = mkA "unoiled" ;
lin unopen_A = compoundA (mkA "unopen");
lin unopened_A = compoundA (mkA "unopened");
lin unopposable_A = mkA "unopposable" ;
lin unopposed_A = compoundA (mkA "unopposed");
lin unorganized_A = mkA "unorganized" ;
lin unoriented_A = mkA "unoriented" ;
lin unoriginal_A = compoundA (mkA "unoriginal");
lin unoriginality_N = mkN "unoriginality" ;
lin unorthodox_A = compoundA (mkA "unorthodox");
lin unorthodoxy_N = mkN "unorthodoxy" ;
lin unostentatious_A = mkA "unostentatious" ;
lin unowned_A = mkA "unowned" ;
lin unpack_V = mkV "unpack" "unpacks" "unpacked" "unpacked" "unpacking";
lin unpack_V2 = mkV2 (mkV "unpack" "unpacks" "unpacked" "unpacked" "unpacking");
lin unpackaged_A = mkA "unpackaged" ;
lin unpaid_A = compoundA (mkA "unpaid");
lin unpaintable_A = mkA "unpaintable" ;
lin unpainted_A = compoundA (mkA "unpainted");
lin unpalatability_N = mkN "unpalatability" ;
lin unpalatable_A = compoundA (mkA "unpalatable");
lin unparallel_A = mkA "unparallel" ;
lin unparalleled_A = compoundA (mkA "unparalleled");
lin unpardonable_A = compoundA (mkA "unpardonable");
lin unparented_A = mkA "unparented" ;
lin unparliamentary_A = compoundA (mkA "unparliamentary");
lin unpartitioned_A = mkA "unpartitioned" ;
lin unpasteurized_A = mkA "unpasteurized" ;
lin unpatented_A = mkA "unpatented" ;
lin unpatriotic_A = compoundA (mkA "unpatriotic");
lin unpatriotically_Adv = mkAdv "unpatriotically";
lin unpatronized_A = mkA "unpatronized" ;
lin unpaved_A = compoundA (mkA "unpaved");
lin unpeaceable_A = mkA "unpeaceable" ;
lin unpeaceful_A = mkA "unpeaceful" ;
lin unpeopled_A = mkA "unpeopled" ;
lin unperceived_A = mkA "unperceived" ;
lin unperceptive_A = mkA "unperceptive" ;
lin unperceptiveness_N = mkN "unperceptiveness" ;
lin unperformed_A = mkA "unperformed" ;
lin unpermed_A = mkA "unpermed" ;
lin unpermissive_A = mkA "unpermissive" ;
lin unpermissiveness_N = mkN "unpermissiveness" ;
lin unperplexed_A = mkA "unperplexed" ;
lin unpersuadable_A = mkA "unpersuadable" ;
lin unpersuaded_A = compoundA (mkA "unpersuaded");
lin unpersuasive_A = mkA "unpersuasive" ;
lin unpersuasiveness_N = mkN "unpersuasiveness" ;
lin unperturbed_A = compoundA (mkA "unperturbed");
lin unpick_V = mkV "unpick" "unpicks" "unpicked" "unpicked" "unpicking";
lin unpick_V2 = mkV2 (mkV "unpick" "unpicks" "unpicked" "unpicked" "unpicking");
lin unpierced_A = mkA "unpierced" ;
lin unpigmented_A = mkA "unpigmented" ;
lin unpillared_A = mkA "unpillared" ;
lin unplaced_A = compoundA (mkA "unplaced");
lin unplanned_A = compoundA (mkA "unplanned");
lin unplanted_A = mkA "unplanted" ;
lin unplayable_A = compoundA (mkA "unplayable");
lin unplayful_A = mkA "unplayful" ;
lin unpleasant_A = compoundA (mkA "unpleasant");
lin unpleasantness_N = mkN "unpleasantness" "unpleasantnesses";
lin unpleasingness_N = mkN "unpleasingness" ;
lin unplowed_A = mkA "unplowed" ;
lin unplug_V = mkV "unplug" "unplugs" "unplugged" "unplugged" "unplugging";
lin unplug_V2 = mkV2 (mkV "unplug" "unplugs" "unplugged" "unplugged" "unplugging");
lin unplumbed_A = compoundA (mkA "unplumbed");
lin unpointedness_N = mkN "unpointedness" ;
lin unpolished_A = mkA "unpolished" ;
lin unpolluted_A = compoundA (mkA "unpolluted");
lin unpompous_A = compoundA (mkA "unpompous");
lin unpopular_A = compoundA (mkA "unpopular");
lin unpopularity_N = mkN "unpopularity" ;
lin unportable_A = mkA "unportable" ;
lin unposed_A = mkA "unposed" ;
lin unpotted_A = mkA "unpotted" ;
lin unpowered_A = mkA "unpowered" ;
lin unpracticed_A = mkA "unpracticed" ;
lin unpractised_A = compoundA (mkA "unpractised");
lin unprecedented_A = compoundA (mkA "unprecedented");
lin unpredictability_N = mkN "unpredictability" ;
lin unpredictable_A = compoundA (mkA "unpredictable");
lin unpredicted_A = compoundA (mkA "unpredicted");
lin unpredictive_A = mkA "unpredictive" ;
lin unprejudiced_A = compoundA (mkA "unprejudiced");
lin unpremeditated_A = compoundA (mkA "unpremeditated");
lin unprepared_A = compoundA (mkA "unprepared");
lin unprepossessing_A = compoundA (mkA "unprepossessing");
lin unpresidential_A = mkA "unpresidential" ;
lin unpressed_A = mkA "unpressed" ;
lin unpretentious_A = compoundA (mkA "unpretentious");
lin unpretentiousness_N = mkN "unpretentiousness" ;
lin unpreventable_A = mkA "unpreventable" ;
lin unpriestly_A = mkA "unpriestly" ;
lin unprincipled_A = compoundA (mkA "unprincipled");
lin unprintable_A = compoundA (mkA "unprintable");
lin unprocessed_A = mkA "unprocessed" ;
lin unproductive_A = compoundA (mkA "unproductive");
lin unproductiveness_N = mkN "unproductiveness" ;
lin unprofessional_A = compoundA (mkA "unprofessional");
lin unprofitable_A = compoundA (mkA "unprofitable");
lin unprofitableness_N = mkN "unprofitableness" ;
lin unpromising_A = compoundA (mkA "unpromising");
lin unprompted_A = compoundA (mkA "unprompted");
lin unpronounceable_A = compoundA (mkA "unpronounceable");
lin unprophetic_A = mkA "unprophetic" ;
lin unpropitious_A = compoundA (mkA "unpropitious");
lin unprotected_A = compoundA (mkA "unprotected");
lin unprotective_A = mkA "unprotective" ;
lin unprovable_A = mkA "unprovable" ;
lin unproved_A = compoundA (mkA "unproved");
lin unproven_A = compoundA (mkA "unproven");
lin unprovided_A = compoundA (mkA "unprovided");
lin unprovocative_A = mkA "unprovocative" ;
lin unprovoked_A = compoundA (mkA "unprovoked");
lin unpublishable_A = mkA "unpublishable" ;
lin unpublished_A = compoundA (mkA "unpublished");
lin unpunctual_A = mkA "unpunctual" ;
lin unpunished_A = compoundA (mkA "unpunished");
lin unpurified_A = mkA "unpurified" ;
lin unputdownable_A = compoundA (mkA "unputdownable");
lin unqualified_A = compoundA (mkA "unqualified");
lin unquestionable_A = compoundA (mkA "unquestionable");
lin unquestioned_A = compoundA (mkA "unquestioned");
lin unquestioning_A = compoundA (mkA "unquestioning");
lin unquiet_A = compoundA (mkA "unquiet");
lin unquotable_A = compoundA (mkA "unquotable");
lin unquote_Adv = mkAdv "unquote";
lin unratable_A = mkA "unratable" ;
lin unratified_A = mkA "unratified" ;
lin unravel_V = mkV "unravel" "unravels" "unravelled" "unravelled" "unravelling";
lin unravel_V2 = mkV2 (mkV "unravel" "unravels" "unravelled" "unravelled" "unravelling");
lin unreached_A = compoundA (mkA "unreached");
lin unreactive_A = mkA "unreactive" ;
lin unread_A = compoundA (mkA "unread");
lin unreadable_A = compoundA (mkA "unreadable");
lin unready_A = compoundA (mkA "unready");
lin unreal_A = compoundA (mkA "unreal");
lin unrealistic_A = irregAdv (compoundA (mkA "unrealistic")) (variants {"unrealistically"; "unrealisticly"});
lin unreality_N = mkN "unreality" ;
lin unrealized_A = compoundA (mkA "unrealized");
lin unreasonable_A = compoundA (mkA "unreasonable");
lin unreasoning_A = compoundA (mkA "unreasoning");
lin unreassuring_A = mkA "unreassuring" ;
lin unreceptive_A = compoundA (mkA "unreceptive");
lin unreciprocated_A = compoundA (mkA "unreciprocated");
lin unrecognizable_A = compoundA (mkA "unrecognizable");
lin unrecognized_A = compoundA (mkA "unrecognized");
lin unreconciled_A = compoundA (mkA "unreconciled");
lin unreconstructed_A = mkA "unreconstructed" ;
lin unrecorded_A = compoundA (mkA "unrecorded");
lin unrecoverable_A = mkA "unrecoverable" ;
lin unredeemable_A = compoundA (mkA "unredeemable");
lin unreduced_A = mkA "unreduced" ;
lin unrefined_A = compoundA (mkA "unrefined");
lin unreflected_A = mkA "unreflected" ;
lin unreflective_A = compoundA (mkA "unreflective");
lin unreformable_A = mkA "unreformable" ;
lin unreformed_A = mkA "unreformed" ;
lin unrefreshed_A = mkA "unrefreshed" ;
lin unregenerate_A = compoundA (mkA "unregenerate");
lin unregistered_A = compoundA (mkA "unregistered");
lin unregretful_A = mkA "unregretful" ;
lin unregulated_A = mkA "unregulated" ;
lin unrehearsed_A = compoundA (mkA "unrehearsed");
lin unrelated_A = compoundA (mkA "unrelated");
lin unrelatedness_N = mkN "unrelatedness" ;
lin unrelaxed_A = compoundA (mkA "unrelaxed");
lin unreleased_A = mkA "unreleased" ;
lin unrelenting_A = compoundA (mkA "unrelenting");
lin unreliable_A = compoundA (mkA "unreliable");
lin unrelieved_A = compoundA (mkA "unrelieved");
lin unremarkable_A = compoundA (mkA "unremarkable");
lin unremedied_A = mkA "unremedied" ;
lin unremitting_A = compoundA (mkA "unremitting");
lin unremunerative_A = mkA "unremunerative" ;
lin unrenewable_A = mkA "unrenewable" ;
lin unrentable_A = mkA "unrentable" ;
lin unrepaired_A = mkA "unrepaired" ;
lin unrepeatable_A = compoundA (mkA "unrepeatable");
lin unrepentant_A = compoundA (mkA "unrepentant");
lin unreportable_A = mkA "unreportable" ;
lin unreported_A = mkA "unreported" ;
lin unrepresentative_A = compoundA (mkA "unrepresentative");
lin unrepressed_A = mkA "unrepressed" ;
lin unreproducible_A = mkA "unreproducible" ;
lin unrequested_A = compoundA (mkA "unrequested");
lin unrequited_A = compoundA (mkA "unrequited");
lin unresentful_A = mkA "unresentful" ;
lin unreserved_A = compoundA (mkA "unreserved");
lin unresisting_A = compoundA (mkA "unresisting");
lin unresolvable_A = mkA "unresolvable" ;
lin unresolved_A = compoundA (mkA "unresolved");
lin unrespectability_N = mkN "unrespectability" ;
lin unrespectable_A = mkA "unrespectable" ;
lin unresponsive_A = mkA "unresponsive" ;
lin unresponsiveness_N = mkN "unresponsiveness" ;
lin unrest_N = mkN "unrest" ;
lin unrestrained_A = compoundA (mkA "unrestrained");
lin unrestraint_N = mkN "unrestraint" ;
lin unrestricted_A = compoundA (mkA "unrestricted");
lin unrestrictive_A = mkA "unrestrictive" ;
lin unretentive_A = mkA "unretentive" ;
lin unreverberant_A = mkA "unreverberant" ;
lin unrevised_A = compoundA (mkA "unrevised");
lin unrevived_A = mkA "unrevived" ;
lin unrewarded_A = compoundA (mkA "unrewarded");
lin unrewarding_A = compoundA (mkA "unrewarding");
lin unrhetorical_A = mkA "unrhetorical" ;
lin unrhymed_A = mkA "unrhymed" ;
lin unrhythmical_A = compoundA (mkA "unrhythmical");
lin unrifled_A = mkA "unrifled" ;
lin unrigged_A = mkA "unrigged" ;
lin unrighteous_A = compoundA (mkA "unrighteous");
lin unrighteousness_N = mkN "unrighteousness" ;
lin unripe_A = compoundA (mkA "unripe");
lin unripened_A = compoundA (mkA "unripened");
lin unrivalled_A = compoundA (mkA "unrivalled");
lin unroll_V = mkV "unroll" "unrolls" "unrolled" "unrolled" "unrolling";
lin unroll_V2 = mkV2 (mkV "unroll" "unrolls" "unrolled" "unrolled" "unrolling");
lin unromantic_A = compoundA (mkA "unromantic");
lin unromantically_Adv = mkAdv "unromantically";
lin unroofed_A = mkA "unroofed" ;
lin unrouged_A = mkA "unrouged" ;
lin unruffled_A = compoundA (mkA "unruffled");
lin unruliness_N = mkN "unruliness" ;
lin unruly_A = mkA "unruly" "unrulier";
lin unsaddle_V2 = mkV2 (mkV "unsaddle" "unsaddles" "unsaddled" "unsaddled" "unsaddling");
lin unsafe_A = compoundA (mkA "unsafe");
lin unsalable_A = mkA "unsalable" ;
lin unsaleable_A = compoundA (mkA "unsaleable");
lin unsalted_A = compoundA (mkA "unsalted");
lin unsanctioned_A = mkA "unsanctioned" ;
lin unsanitariness_N = mkN "unsanitariness" ;
lin unsanitary_A = mkA "unsanitary" ;
lin unsaponified_A = mkA "unsaponified" ;
lin unsarcastic_A = mkA "unsarcastic" ;
lin unsated_A = mkA "unsated" ;
lin unsatisfactoriness_N = mkN "unsatisfactoriness" ;
lin unsatisfactory_A = compoundA (mkA "unsatisfactory");
lin unsatisfiable_A = mkA "unsatisfiable" ;
lin unsatisfied_A = compoundA (mkA "unsatisfied");
lin unsatisfying_A = compoundA (mkA "unsatisfying");
lin unsaturated_A = compoundA (mkA "unsaturated");
lin unsavory_A = mkA "unsavory" ;
lin unsavoury_A = compoundA (mkA "unsavoury");
lin unsay_V2 = mkV2 (mkV "un" IrregEng.say_V);
lin unscalable_A = mkA "unscalable" ;
lin unscathed_A = compoundA (mkA "unscathed");
lin unscheduled_A = compoundA (mkA "unscheduled");
lin unscholarly_A = mkA "unscholarly" ;
lin unschooled_A = mkA "unschooled" ;
lin unscientific_A = compoundA (mkA "unscientific");
lin unscientifically_Adv = mkAdv "unscientifically";
lin unscramble_V2 = mkV2 (mkV "unscramble" "unscrambles" "unscrambled" "unscrambled" "unscrambling");
lin unscrew_V = mkV "unscrew" "unscrews" "unscrewed" "unscrewed" "unscrewing";
lin unscrew_V2 = mkV2 (mkV "unscrew" "unscrews" "unscrewed" "unscrewed" "unscrewing");
lin unscripted_A = compoundA (mkA "unscripted");
lin unscrupulous_A = compoundA (mkA "unscrupulous");
lin unscrupulousness_N = mkN "unscrupulousness" ;
lin unsealed_A = compoundA (mkA "unsealed");
lin unseamanlike_A = mkA "unseamanlike" ;
lin unseamed_A = mkA "unseamed" ;
lin unseasonable_A = compoundA (mkA "unseasonable");
lin unseasonableness_N = mkN "unseasonableness" ;
lin unseasoned_A = compoundA (mkA "unseasoned");
lin unseat_V2 = mkV2 (mkV "unseat" "unseats" "unseated" "unseated" "unseating");
lin unseaworthy_A = compoundA (mkA "unseaworthy");
lin unsecured_A = compoundA (mkA "unsecured");
lin unseductive_A = mkA "unseductive" ;
lin unseeded_A = compoundA (mkA "unseeded");
lin unseeing_A = compoundA (mkA "unseeing");
lin unseemliness_N = mkN "unseemliness" ;
lin unseemly_A = compoundA (mkA "unseemly");
lin unseen_A = compoundA (mkA "unseen");
lin unseen_N = mkN "unseen" "unseens";
lin unseeyn_A = mkA "unseeyn" ;
lin unsegmented_A = mkA "unsegmented" ;
lin unselected_A = compoundA (mkA "unselected");
lin unselective_A = compoundA (mkA "unselective");
lin unselfconscious_A = compoundA (mkA "unselfconscious");
lin unselfconsciousness_N = mkN "unselfconsciousness" ;
lin unselfish_A = compoundA (mkA "unselfish");
lin unselfishness_N = mkN "unselfishness" ;
lin unsensational_A = mkA "unsensational" ;
lin unsent_A = mkA "unsent" ;
lin unsentimentally_Adv = mkAdv "unsentimentally" ;
lin unserviceable_A = mkA "unserviceable" ;
lin unservile_A = mkA "unservile" ;
lin unsettle_V2 = mkV2 (mkV "unsettle" "unsettles" "unsettled" "unsettled" "unsettling");
lin unsex_V2 = mkV2 (mkV "unsex" "unsexes" "unsexed" "unsexed" "unsexing");
lin unsexy_A = mkA "unsexy" ;
lin unshaded_A = mkA "unshaded" ;
lin unshadowed_A = mkA "unshadowed" ;
lin unshakable_A = compoundA (mkA "unshakable");
lin unshaped_A = mkA "unshaped" ;
lin unshapely_A = mkA "unshapely" ;
lin unshared_A = mkA "unshared" ;
lin unsharpened_A = mkA "unsharpened" ;
lin unshaved_A = compoundA (mkA "unshaved");
lin unshaven_A = compoundA (mkA "unshaven");
lin unsheared_A = mkA "unsheared" ;
lin unsheathe_V2 = mkV2 (mkV "unsheathe" "unsheathes" "unsheathed" "unsheathed" "unsheathing");
lin unshelled_A = mkA "unshelled" ;
lin unshielded_A = compoundA (mkA "unshielded");
lin unshockable_A = mkA "unshockable" ;
lin unshod_A = mkA "unshod" ;
lin unshrinkable_A = compoundA (mkA "unshrinkable");
lin unshrinking_A = compoundA (mkA "unshrinking");
lin unshuttered_A = compoundA (mkA "unshuttered");
lin unsighted_A = compoundA (mkA "unsighted");
lin unsightliness_N = mkN "unsightliness" ;
lin unsightly_A = compoundA (mkA "unsightly");
lin unsigned_A = compoundA (mkA "unsigned");
lin unsilenced_A = compoundA (mkA "unsilenced");
lin unsinkable_A = compoundA (mkA "unsinkable");
lin unsized_A = mkA "unsized" ;
lin unskilled_A = compoundA (mkA "unskilled");
lin unskillfulness_N = mkN "unskillfulness" ;
lin unsleeping_A = mkA "unsleeping" ;
lin unsmiling_A = compoundA (mkA "unsmiling");
lin unsmoothed_A = mkA "unsmoothed" ;
lin unsnarling_N = mkN "unsnarling" ;
lin unsociability_N = mkN "unsociability" ;
lin unsociable_A = compoundA (mkA "unsociable");
lin unsocial_A = compoundA (mkA "unsocial");
lin unsoiled_A = mkA "unsoiled" ;
lin unsold_A = compoundA (mkA "unsold");
lin unsoldierly_A = mkA "unsoldierly" ;
lin unsolicited_A = compoundA (mkA "unsolicited");
lin unsolvability_N = mkN "unsolvability" ;
lin unsolved_A = compoundA (mkA "unsolved");
lin unsophisticated_A = compoundA (mkA "unsophisticated");
lin unsorted_A = mkA "unsorted" ;
lin unsound_A = compoundA (mkA "unsound");
lin unsoundable_A = mkA "unsoundable" ;
lin unsoundness_N = mkN "unsoundness" ;
lin unsoured_A = mkA "unsoured" ;
lin unspaced_A = mkA "unspaced" ;
lin unsparing_A = compoundA (mkA "unsparing");
lin unspeakable_A = compoundA (mkA "unspeakable");
lin unspecialized_A = compoundA (mkA "unspecialized");
lin unspecific_A = compoundA (mkA "unspecific");
lin unspecifically_Adv = mkAdv "unspecifically";
lin unspecified_A = compoundA (mkA "unspecified");
lin unspectacular_A = compoundA (mkA "unspectacular");
lin unspent_A = mkA "unspent" ;
lin unspoiled_A = compoundA (mkA "unspoiled");
lin unspoilt_A = compoundA (mkA "unspoilt");
lin unspoken_A = compoundA (mkA "unspoken");
lin unsporting_A = compoundA (mkA "unsporting");
lin unsportsmanlike_A = compoundA (mkA "unsportsmanlike");
lin unspotted_A = compoundA (mkA "unspotted");
lin unstable_A = compoundA (mkA "unstable");
lin unstaged_A = mkA "unstaged" ;
lin unstained_A = mkA "unstained" ;
lin unstartling_A = compoundA (mkA "unstartling");
lin unstated_A = compoundA (mkA "unstated");
lin unstatesmanlike_A = compoundA (mkA "unstatesmanlike");
lin unsteadiness_N = mkN "unsteadiness" ;
lin unsteady_A = compoundA (mkA "unsteady");
lin unsterilized_A = mkA "unsterilized" ;
lin unstilted_A = mkA "unstilted" ;
lin unstimulating_A = mkA "unstimulating" ;
lin unstintingly_Adv = mkAdv "unstintingly" ;
lin unstirred_A = mkA "unstirred" ;
lin unstoppable_A = compoundA (mkA "unstoppable");
lin unstoppered_A = mkA "unstoppered" ;
lin unstrained_A = compoundA (mkA "unstrained");
lin unstratified_A = mkA "unstratified" ;
lin unstressed_A = compoundA (mkA "unstressed");
lin unstructured_A = compoundA (mkA "unstructured");
lin unstrung_A = compoundA (mkA "unstrung");
lin unstuck_A = compoundA (mkA "unstuck");
lin unstudied_A = compoundA (mkA "unstudied");
lin unstudious_A = mkA "unstudious" ;
lin unsubdued_A = mkA "unsubdued" ;
lin unsubtle_A = compoundA (mkA "unsubtle");
lin unsuccessful_A = compoundA (mkA "unsuccessful");
lin unsugared_A = mkA "unsugared" ;
lin unsuitability_N = mkN "unsuitability" ;
lin unsuitable_A = compoundA (mkA "unsuitable");
lin unsuited_A = compoundA (mkA "unsuited");
lin unsullied_A = compoundA (mkA "unsullied");
lin unsung_A = compoundA (mkA "unsung");
lin unsupervised_A = compoundA (mkA "unsupervised");
lin unsupportable_A = mkA "unsupportable" ;
lin unsupported_A = compoundA (mkA "unsupported");
lin unsupportive_A = mkA "unsupportive" ;
lin unsuppressed_A = mkA "unsuppressed" ;
lin unsure_A = compoundA (mkA "unsure");
lin unsurmountable_A = mkA "unsurmountable" ;
lin unsurpassable_A = mkA "unsurpassable" ;
lin unsurpassed_A = compoundA (mkA "unsurpassed");
lin unsurprised_A = mkA "unsurprised" ;
lin unsurprising_A = mkA "unsurprising" ;
lin unsusceptibility_N = mkN "unsusceptibility" ;
lin unsusceptible_A = mkA "unsusceptible" ;
lin unsuspected_A = compoundA (mkA "unsuspected");
lin unsuspecting_A = compoundA (mkA "unsuspecting");
lin unsuspicious_A = compoundA (mkA "unsuspicious");
lin unswayed_A = compoundA (mkA "unswayed");
lin unsweet_A = mkA "unsweet" ;
lin unsweetened_A = compoundA (mkA "unsweetened");
lin unswept_A = compoundA (mkA "unswept");
lin unswerving_A = compoundA (mkA "unswerving");
lin unsworn_A = mkA "unsworn" ;
lin unsyllabic_A = compoundA (mkA "unsyllabic");
lin unsyllabled_A = mkA "unsyllabled" ;
lin unsymmetric_A = mkA "unsymmetric" ;
lin unsympathetic_A = compoundA (mkA "unsympathetic");
lin unsympathetically_Adv = mkAdv "unsympathetically";
lin unsympathizing_A = mkA "unsympathizing" ;
lin unsystematic_A = compoundA (mkA "unsystematic");
lin unsystematically_Adv = mkAdv "unsystematically";
lin untainted_A = compoundA (mkA "untainted");
lin untalented_A = mkA "untalented" ;
lin untamed_A = compoundA (mkA "untamed");
lin untangled_A = mkA "untangled" ;
lin untanned_A = mkA "untanned" ;
lin untapped_A = compoundA (mkA "untapped");
lin untarnished_A = compoundA (mkA "untarnished");
lin untaxed_A = compoundA (mkA "untaxed");
lin untempered_A = mkA "untempered" ;
lin untenable_A = compoundA (mkA "untenable");
lin untenanted_A = compoundA (mkA "untenanted");
lin untended_A = compoundA (mkA "untended");
lin untested_A = compoundA (mkA "untested");
lin untethered_A = compoundA (mkA "untethered");
lin unthawed_A = mkA "unthawed" ;
lin untheatrical_A = mkA "untheatrical" ;
lin unthematic_A = mkA "unthematic" ;
lin unthinkable_A = compoundA (mkA "unthinkable");
lin unthinking_A = compoundA (mkA "unthinking");
lin unthought_of_A = compoundA (mkA "unthought-of");
lin unthoughtfulness_N = mkN "unthoughtfulness" ;
lin untidiness_N = mkN "untidiness" ;
lin untidy_A = mkA "untidy" "untidier";
lin untie_V = mkV "untie" "IRREG" "IRREG" "IRREG" "IRREG";
lin untie_V2 = mkV2 (mkV "untie" "IRREG" "IRREG" "IRREG" "IRREG");
lin untied_A = mkA "untied" ;
lin until_Prep = mkPrep "until";
lin until_Subj = mkSubj "until";
lin untilled_A = mkA "untilled" ;
lin untimbered_A = mkA "untimbered" ;
lin untimely_A = compoundA (mkA "untimely");
lin untipped_A = mkA "untipped" ;
lin untired_A = mkA "untired" ;
lin untiring_A = compoundA (mkA "untiring");
lin untitled_A = compoundA (mkA "untitled");
lin untoasted_A = mkA "untoasted" ;
lin untold_A = compoundA (mkA "untold");
lin untouchable_A = compoundA (mkA "untouchable");
lin untouchable_N = mkN "untouchable" "untouchables";
lin untouched_A = compoundA (mkA "untouched");
lin untoward_A = compoundA (mkA "untoward");
lin untraceable_A = mkA "untraceable" ;
lin untrained_A = compoundA (mkA "untrained");
lin untrammeled_A = mkA "untrammeled" ;
lin untrammelled_A = compoundA (mkA "untrammelled");
lin untranslatable_A = compoundA (mkA "untranslatable");
lin untraveled_A = mkA "untraveled" ;
lin untraversable_A = mkA "untraversable" ;
lin untraversed_A = mkA "untraversed" ;
lin untreated_A = compoundA (mkA "untreated");
lin untried_A = compoundA (mkA "untried");
lin untrimmed_A = mkA "untrimmed" ;
lin untroubled_A = compoundA (mkA "untroubled");
lin untrue_A = compoundA (mkA "untrue");
lin untruly_Adv = mkAdv "untruly";
lin untrustworthiness_N = mkN "untrustworthiness" ;
lin untrustworthy_A = compoundA (mkA "untrustworthy");
lin untruth_N = mkN "untruth" "untruths";
lin untruthful_A = compoundA (mkA "untruthful");
lin untruthfulness_N = mkN "untruthfulness" ;
lin untucked_A = compoundA (mkA "untucked");
lin untufted_A = mkA "untufted" ;
lin unturned_A = compoundA (mkA "unturned");
lin untutored_A = compoundA (mkA "untutored");
lin untwisted_A = compoundA (mkA "untwisted");
lin untying_N = mkN "untying" ;
lin untypical_A = compoundA (mkA "untypical");
lin ununbium_N = mkN "ununbium" ;
lin ununderstood_A = mkA "ununderstood" ;
lin ununhexium_N = mkN "ununhexium" ;
lin ununpentium_N = mkN "ununpentium" ;
lin ununquadium_N = mkN "ununquadium" ;
lin ununtrium_N = mkN "ununtrium" ;
lin unused_A = compoundA (mkA "unused");
lin unusual_A = compoundA (mkA "unusual");
lin unusualness_N = mkN "unusualness" ;
lin unutterable_A = compoundA (mkA "unutterable");
lin unvaccinated_A = mkA "unvaccinated" ;
lin unvaried_A = compoundA (mkA "unvaried");
lin unvariedness_N = mkN "unvariedness" ;
lin unvarnished_A = compoundA (mkA "unvarnished");
lin unvarying_A = compoundA (mkA "unvarying");
lin unveil_V = mkV "unveil" "unveils" "unveiled" "unveiled" "unveiling";
lin unveil_V2 = mkV2 (mkV "unveil" "unveils" "unveiled" "unveiled" "unveiling");
lin unveiling_N = mkN "unveiling" ;
lin unvented_A = mkA "unvented" ;
lin unventilated_A = mkA "unventilated" ;
lin unverified_A = compoundA (mkA "unverified");
lin unversed_A = compoundA (mkA "unversed");
lin unvigilant_A = compoundA (mkA "unvigilant");
lin unvindictive_A = mkA "unvindictive" ;
lin unvitrified_A = mkA "unvitrified" ;
lin unvoiced_A = compoundA (mkA "unvoiced");
lin unvulcanized_A = mkA "unvulcanized" ;
lin unwanted_A = compoundA (mkA "unwanted");
lin unwariness_N = mkN "unwariness" ;
lin unwarrantably_Adv = mkAdv "unwarrantably";
lin unwarranted_A = compoundA (mkA "unwarranted");
lin unwary_A = compoundA (mkA "unwary");
lin unwashed_A = compoundA (mkA "unwashed");
lin unwavering_A = compoundA (mkA "unwavering");
lin unwaxed_A = mkA "unwaxed" ;
lin unweaned_A = compoundA (mkA "unweaned");
lin unwearable_A = mkA "unwearable" ;
lin unwearied_A = compoundA (mkA "unwearied");
lin unweathered_A = mkA "unweathered" ;
lin unwebbed_A = mkA "unwebbed" ;
lin unwed_A = compoundA (mkA "unwed");
lin unwelcome_A = compoundA (mkA "unwelcome");
lin unwell_A = compoundA (mkA "unwell");
lin unwholesome_A = compoundA (mkA "unwholesome");
lin unwholesomeness_N = mkN "unwholesomeness" ;
lin unwieldiness_N = mkN "unwieldiness" ;
lin unwieldy_A = compoundA (mkA "unwieldy");
lin unwilled_A = mkA "unwilled" ;
lin unwilling_A = compoundA (mkA "unwilling");
lin unwillingness_N = mkN "unwillingness" ;
lin unwind_V = mkV "un" IrregEng.wind_V;
lin unwind_V2 = mkV2 (mkV "un" IrregEng.wind_V);
lin unwise_A = compoundA (mkA "unwise");
lin unwitnessed_A = compoundA (mkA "unwitnessed");
lin unwitting_A = compoundA (mkA "unwitting");
lin unwomanly_A = mkA "unwomanly" ;
lin unwonted_A = compoundA (mkA "unwonted");
lin unwooded_A = mkA "unwooded" ;
lin unworkable_A = compoundA (mkA "unworkable");
lin unworkmanlike_A = compoundA (mkA "unworkmanlike");
lin unworldly_A = compoundA (mkA "unworldly");
lin unworn_A = compoundA (mkA "unworn");
lin unworried_A = compoundA (mkA "unworried");
lin unworthiness_N = mkN "unworthiness" ;
lin unworthy_A = compoundA (mkA "unworthy");
lin unwounded_A = mkA "unwounded" ;
lin unwoven_A = mkA "unwoven" ;
lin unwrap_V = mkV "unwrap" "unwraps" "unwrapped" "unwrapped" "unwrapping";
lin unwrap_V2 = mkV2 (mkV "unwrap" "unwraps" "unwrapped" "unwrapped" "unwrapping");
lin unwrinkled_A = mkA "unwrinkled" ;
lin unwritten_A = compoundA (mkA "unwritten");
lin unyielding_A = compoundA (mkA "unyielding");
lin unzip_V2 = mkV2 (mkV "unzip" "unzips" "unzipped" "unzipped" "unzipping");
lin up_A = mkA "up" ;
lin up_Adv = mkAdv "up";
lin up_Prep = mkPrep "up";
lin up_V = mkV "up" "ups" "upped" "upped" "upping";
lin up_V2 = mkV2 (mkV "up" "ups" "upped" "upped" "upping");
lin up_and_coming_A = compoundA (mkA "up-and-coming");
lin up_beat_N = mkN "up-beat" "up-beats";
lin up_holland_PN = mkPN "Up holland";
lin up_market_A = compoundA (mkA "up-market");
lin up_to_date_A = compoundA (mkA "up-to-date");
lin up_to_the_minute_A = compoundA (mkA "up-to-the-minute");
lin upbeat_N = mkN "upbeat" ;
lin upbound_A = mkA "upbound" ;
lin upbraid_V2 = mkV2 (mkV "upbraid" "upbraids" "upbraided" "upbraided" "upbraiding");
lin upbraider_N = mkN "upbraider" ;
lin upbraiding_N = mkN "upbraiding" "upbraidings";
lin upbringing_N = mkN "upbringing" ;
lin upcast_N = mkN "upcast" ;
lin upcountry_A = compoundA (mkA "upcountry");
lin upcountry_Adv = mkAdv "upcountry";
lin upcurved_A = mkA "upcurved" ;
lin update_N = mkN "update" ;
lin update_V2 = mkV2 (mkV "update" "updates" "updated" "updated" "updating");
lin updating_N = mkN "updating" ;
lin updraft_N = mkN "updraft" ;
lin upended_A = mkA "upended" ;
lin upfield_A = mkA "upfield" ;
lin upfront_A = mkA "upfront" ;
lin upgrade_N = mkN "upgrade" "upgrades";
lin upgrade_V2 = mkV2 (mkV "upgrade" "upgrades" "upgraded" "upgraded" "upgrading");
lin upheaval_N = mkN "upheaval" "upheavals";
lin uphill_A = compoundA (mkA "uphill");
lin uphill_Adv = mkAdv "uphill";
lin uphill_N = mkN "uphill" ;
lin uphold_V2 = mkV2 (IrregEng.uphold_V);
lin upholder_N = mkN "upholder" ;
lin upholster_V2 = mkV2 (mkV "upholster" "upholsters" "upholstered" "upholstered" "upholstering");
lin upholsterer_N = mkN "upholsterer" "upholsterers";
lin upholstery_N = mkN "upholstery" ;
lin upkeep_N = mkN "upkeep" ;
lin upland_A = mkA "upland" ;
lin upland_N = mkN "upland" "uplands";
lin uplift_N = mkN "uplift" ;
lin uplift_V2 = mkV2 (mkV "uplift" "uplifts" "uplifted" "uplifted" "uplifting");
lin uplifting_N = mkN "uplifting" ;
lin uplink_N = mkN "uplink" ;
lin upmarket_A = mkA "upmarket" ;
lin upmost_A = compoundA (mkA "upmost");
lin upon_Prep = mkPrep "upon";
lin upper_A = compoundA (mkA "upper");
lin upper_N = mkN "upper" "uppers";
lin uppercase_A = mkA "uppercase" ;
lin uppercut_N = mkN "uppercut" "uppercuts";
lin uppermost_A = compoundA (mkA "uppermost");
lin uppermost_Adv = mkAdv "uppermost";
lin uppish_A = compoundA (mkA "uppish");
lin uppishness_N = mkN "uppishness" ;
lin uppity_A = compoundA (mkA "uppity");
lin uppityness_N = mkN "uppityness" ;
lin upraised_A = mkA "upraised" ;
lin upright_A = compoundA (mkA "upright");
lin upright_N = mkN "upright" "uprights";
lin uprightness_N = mkN "uprightness" ;
lin uprising_N = mkN "uprising" "uprisings";
lin upriver_Adv = mkAdv "upriver" ;
lin uproar_N = mkN "uproar" "uproars";
lin uproarious_A = compoundA (mkA "uproarious");
lin uproot_V2 = mkV2 (mkV "uproot" "uproots" "uprooted" "uprooted" "uprooting");
lin upscale_A = mkA "upscale" ;
lin upset_N = mkN "upset" "upsets";
lin upset_V = IrregEng.upset_V;
lin upset_V2 = mkV2 (IrregEng.upset_V);
lin upsetter_N = mkN "upsetter" ;
lin upshot_N = mkN "upshot" "upshots";
lin upside_down_Adv = mkAdv "upside-down";
lin upsilon_N = mkN "upsilon" ;
lin upstage_A = compoundA (mkA "upstage");
lin upstage_Adv = mkAdv "upstage";
lin upstage_N = mkN "upstage" ;
lin upstage_V2 = mkV2 (mkV "upstage" "upstages" "upstaged" "upstaged" "upstaging");
lin upstager_N = mkN "upstager" ;
lin upstairs_A = compoundA (mkA "upstairs");
lin upstairs_Adv = mkAdv "upstairs";
lin upstairs_N = mkN "upstairs" ;
lin upstanding_A = compoundA (mkA "upstanding");
lin upstart_A = compoundA (mkA "upstart");
lin upstart_N = mkN "upstart" "upstarts";
lin upstate_Adv = mkAdv "upstate" ;
lin upstream_A = mkA "upstream" ;
lin upstream_Adv = mkAdv "upstream";
lin upstroke_N = mkN "upstroke" ;
lin upsurge_N = mkN "upsurge" "upsurges";
lin uptake_N = mkN "uptake" "uptakes";
lin uptick_N = mkN "uptick" ;
lin uptight_A = compoundA (mkA "uptight");
lin uptime_N = mkN "uptime" ;
lin upton_PN = mkPN "Upton";
lin uptown_A = compoundA (mkA "uptown");
lin uptown_Adv = mkAdv "uptown";
lin uptown_N = mkN "uptown" ;
lin upturn_N = mkN "upturn" "upturns";
lin upturned_A = compoundA (mkA "upturned");
lin upward_A = compoundA (mkA "upward");
lin upward_Adv = mkAdv "upward";
lin upwards_Adv = mkAdv "upwards";
lin upwind_A = mkA "upwind" ;
lin upwind_Adv = mkAdv "upwind" ;
lin uracil_N = mkN "uracil" ;
lin uraninite_N = mkN "uraninite" ;
lin uranium_N = mkN "uranium" ;
lin uranoplasty_N = mkN "uranoplasty" ;
lin uranus_PN = mkPN "Uranus";
lin uranyl_N = mkN "uranyl" ;
lin urate_N = mkN "urate" ;
lin uratemia_N = mkN "uratemia" ;
lin uraturia_N = mkN "uraturia" ;
lin urban_A = compoundA (mkA "urban");
lin urbane_A = compoundA (mkA "urbane");
lin urbanity_N = mkN "urbanity" ;
lin urbanization_N = mkN "urbanization" ;
lin urbanize_V2 = mkV2 (mkV "urbanize" "urbanizes" "urbanized" "urbanized" "urbanizing");
lin urceolate_A = mkA "urceolate" ;
lin urceole_N = mkN "urceole" ;
lin urchin_N = mkN "urchin" "urchins";
lin urdu_A = compoundA (mkA "urdu");
lin urdu_N = mkN "urdu" ;
lin urea_N = mkN "urea" ;
lin urease_N = mkN "urease" ;
lin uremia_N = mkN "uremia" ;
lin ureter_N = mkN "ureter" ;
lin ureteritis_N = mkN "ureteritis" ;
lin ureterocele_N = mkN "ureterocele" ;
lin ureterostenosis_N = mkN "ureterostenosis" ;
lin urethane_N = mkN "urethane" ;
lin urethra_N = mkN "urethra" ;
lin urethral_A = mkA "urethral" ;
lin urethritis_N = mkN "urethritis" ;
lin urethrocele_N = mkN "urethrocele" ;
lin urge_N = mkN "urge" "urges";
lin urge_V2 = mkV2 (mkV "urge" "urges" "urged" "urged" "urging");
lin urge_V2V = mkV2V (mkV "urge") noPrep to_Prep ;
lin urge_VS = mkVS (mkV "urge");
lin urgency_N = mkN "urgency" ;
lin urgent_A = compoundA (mkA "urgent");
lin urging_N = mkN "urging" "urgings";
lin urial_N = mkN "urial" ;
lin uric_A = compoundA (mkA "uric");
lin uricaciduria_N = mkN "uricaciduria" ;
lin uricosuric_A = mkA "uricosuric" ;
lin urinal_N = mkN "urinal" "urinals";
lin urinalysis_N = mkN "urinalysis" ;
lin urinary_A = compoundA (mkA "urinary");
lin urinate_V = mkV "urinate" "urinates" "urinated" "urinated" "urinating";
lin urine_N = mkN "urine" ;
lin urn_N = mkN "urn" "urns";
lin urobilin_N = mkN "urobilin" ;
lin urobilinogen_N = mkN "urobilinogen" ;
lin urocele_N = mkN "urocele" ;
lin urochesia_N = mkN "urochesia" ;
lin urochord_N = mkN "urochord" ;
lin urodele_N = mkN "urodele" ;
lin urodynia_N = mkN "urodynia" ;
lin urogenital_A = mkA "urogenital" ;
lin urolith_N = mkN "urolith" ;
lin urologist_N = mkN "urologist" ;
lin urology_N = mkN "urology" ;
lin uropathy_N = mkN "uropathy" ;
lin uropygium_N = mkN "uropygium" ;
lin ursine_A = mkA "ursine" ;
lin ursinia_N = mkN "ursinia" ;
lin ursula_PN = mkPN "Ursula";
lin urtication_N = mkN "urtication" ;
lin uruguay_PN = mkPN "Uruguay";
lin uruguayan_A = compoundA (mkA "uruguayan");
lin uruguayan_N = mkN "uruguayan" "uruguayans";
lin urumchi_PN = mkPN "Urumchi";
lin us_PN = mkPN "US";
lin usa_PN = mkPN "USA";
lin usable_A = compoundA (mkA "usable");
lin usaf_N = mkN "usaf" ;
lin usage_N = mkN "usage" "usages";
lin usance_N = mkN "usance" ;
lin use_N = mkN "use" "uses";
lin use_V = mkV "use";
lin use_V2 = mkV2 (mkV "use" "uses" "used" "used" "using");
lin use_V2V = mkV2V (mkV "use" "uses" "used" "used" "using") noPrep to_Prep;
lin use_VV = mkVV (mkV "use");
lin useable_A = mkA "useable" ;
lin useful_A = compoundA (mkA "useful");
lin usefulness_N = mkN "usefulness" ;
lin useless_A = compoundA (mkA "useless");
lin uselessness_N = mkN "uselessness" ;
lin userFem_N = mkN feminine (mkN "user" "users");
lin userMasc_N = mkN masculine (mkN "user" "users");
lin ushaw_moor_PN = mkPN "Ushaw moor";
lin usher_N = mkN "usher" "ushers";
lin usher_V2 = mkV2 (mkV "usher" "ushers" "ushered" "ushered" "ushering");
lin usherette_N = mkN "usherette" "usherettes";
lin usn_N = mkN "usn" ;
lin uss_N = mkN "uss" ;
lin ussr_N = mkN "ussr" ;
lin usual_A = compoundA (mkA "usual");
lin usualness_N = mkN "usualness" ;
lin usufruct_N = mkN "usufruct" ;
lin usufructuary_A = mkA "usufructuary" ;
lin usufructuary_N = mkN "usufructuary" ;
lin usurer_N = mkN "usurer" "usurers";
lin usurious_A = compoundA (mkA "usurious");
lin usurp_V2 = mkV2 (mkV "usurp" "usurps" "usurped" "usurped" "usurping");
lin usurpation_N = mkN "usurpation" "usurpations";
lin usurper_N = mkN "usurper" "usurpers";
lin usury_N = mkN "usury" ;
lin utah_PN = mkPN "Utah";
lin utahraptor_N = mkN "utahraptor" ;
lin utensil_N = mkN "utensil" "utensils";
lin uterine_A = compoundA (mkA "uterine");
lin uterus_N = mkN "uterus" "uteruses";
lin utilitarian_A = compoundA (mkA "utilitarian");
lin utilitarian_N = mkN "utilitarian" "utilitarians";
lin utilitarianism_N = mkN "utilitarianism" ;
lin utility_N = mkN "utility" "utilities";
lin utilizable_A = compoundA (mkA "utilizable");
lin utilization_N = mkN "utilization" ;
lin utilize_V2 = mkV2 (mkV "utilize" "utilizes" "utilized" "utilized" "utilizing");
lin utilizer_N = mkN "utilizer" ;
lin utmost_A = compoundA (mkA "utmost");
lin utmost_N = mkN "utmost" "utmosts";
lin utopia_N = mkN "utopia" "utopias";
lin utopian_A = compoundA (mkA "utopian");
lin utrecht_PN = mkPN "Utrecht";
lin utricle_N = mkN "utricle" ;
lin utter_A = compoundA (mkA "utter");
lin utter_V2 = mkV2 (mkV "utter" "utters" "uttered" "uttered" "uttering");
lin utterance_N = mkN "utterance" "utterances";
lin utterer_N = mkN "utterer" ;
lin uttermost_A = compoundA (mkA "uttermost");
lin uttermost_N = mkN "uttermost" "uttermosts";
lin uttoxeter_PN = mkPN "Uttoxeter";
lin uvea_N = mkN "uvea" ;
lin uveal_A = mkA "uveal" ;
lin uveitis_N = mkN "uveitis" ;
lin uvula_N = mkN "uvula" "uvulas";
lin uvular_A = compoundA (mkA "uvular");
lin uvulitis_N = mkN "uvulitis" ;
lin uxor_N = mkN "uxor" ;
lin uxoricide_N = mkN "uxoricide" ;
lin uxorious_A = compoundA (mkA "uxorious");
lin uxoriousness_N = mkN "uxoriousness" ;
lin v_and_a_N = mkN "v and a" ;
lin vac_N = mkN "vac" "vacs";
lin vacancy_N = mkN "vacancy" "vacancies";
lin vacant_A = compoundA (mkA "vacant");
lin vacate_V2 = mkV2 (mkV "vacate" "vacates" "vacated" "vacated" "vacating");
lin vacation_N = mkN "vacation" "vacations";
lin vacation_V = mkV "vacation" "vacations" "vacationed" "vacationed" "vacationing";
lin vacationer_N = mkN "vacationer" ;
lin vacationing_N = mkN "vacationing" ;
lin vacationist_N = mkN "vacationist" "vacationists";
lin vaccinate_V2 = mkV2 (mkV "vaccinate" "vaccinates" "vaccinated" "vaccinated" "vaccinating");
lin vaccination_N = mkN "vaccination" "vaccinations";
lin vaccine_N = mkN "vaccine" "vaccines";
lin vaccinee_N = mkN "vaccinee" ;
lin vaccinia_N = mkN "vaccinia" ;
lin vacillant_A = mkA "vacillant" ;
lin vacillate_V = mkV "vacillate" "vacillates" "vacillated" "vacillated" "vacillating";
lin vacillation_N = mkN "vacillation" "vacillations";
lin vacuity_N = mkN "vacuity" "vacuities";
lin vacuolate_A = mkA "vacuolate" ;
lin vacuole_N = mkN "vacuole" ;
lin vacuolization_N = mkN "vacuolization" ;
lin vacuous_A = compoundA (mkA "vacuous");
lin vacuousness_N = mkN "vacuousness" ;
lin vacuum_N = mkN "vacuum" "vacuums";
lin vacuum_V2 = mkV2 (mkV "vacuum");
lin vade_mecum_N = mkN "vade-mecum" "vade-mecums";
lin vagabond_A = compoundA (mkA "vagabond");
lin vagabond_N = mkN human (mkN "vagabond" "vagabonds");
lin vagal_A = mkA "vagal" ;
lin vagary_N = mkN "vagary" "vagaries";
lin vagile_A = mkA "vagile" ;
lin vagina_N = mkN "vagina" "vaginas";
lin vaginal_A = compoundA (mkA "vaginal");
lin vaginismus_N = mkN "vaginismus" ;
lin vaginitis_N = mkN "vaginitis" ;
lin vagrancy_N = mkN "vagrancy" ;
lin vagrant_A = compoundA (mkA "vagrant");
lin vagrant_N = mkN "vagrant" "vagrants";
lin vague_A = mkA "vague" "vaguer";
lin vagueness_N = mkN "vagueness" ;
lin vagus_N = mkN "vagus" ;
lin vain_A = mkA "vain" "vainer";
lin vainglorious_A = compoundA (mkA "vainglorious");
lin vainglory_N = mkN "vainglory" ;
lin vaisya_N = mkN "vaisya" ;
lin valance_N = mkN "valance" "valances";
lin valdecoxib_N = mkN "valdecoxib" ;
lin vale_N = mkN "vale" "vales";
lin valediction_N = mkN "valediction" "valedictions";
lin valedictorian_N = mkN "valedictorian" ;
lin valedictory_A = compoundA (mkA "valedictory");
lin valence_N = mkN "valence" "valences";
lin valencia_PN = mkPN "Valencia";
lin valenciennes_PN = mkPN "Valenciennes";
lin valency_N = mkN "valency" "valencies";
lin valent_A = mkA "valent" ;
lin valentine_N = mkN "valentine" "valentines";
lin valerian_N = mkN "valerian" ;
lin valet_N = mkN "valet" "valets";
lin valet_V2 = mkV2 (mkV "valet" "valets" "valeted" "valeted" "valeting");
lin valetudinarian_A = compoundA (mkA "valetudinarian");
lin valetudinarian_N = mkN "valetudinarian" "valetudinarians";
lin valgus_N = mkN "valgus" ;
lin valiant_A = compoundA (mkA "valiant");
lin valid_A = compoundA (mkA "valid");
lin validate_V2 = mkV2 (mkV "validate" "validates" "validated" "validated" "validating");
lin validation_N = mkN "validation" ;
lin validity_N = mkN "validity" ;
lin valine_N = mkN "valine" ;
lin valise_N = mkN "valise" "valises";
lin valladolid_PN = mkPN "Valladolid";
lin valley_N = mkN "valley" "valleys";
lin valorous_A = compoundA (mkA "valorous");
lin valour_N = mkN "valour" ;
lin valsartan_N = mkN "valsartan" ;
lin valuable_A = compoundA (mkA "valuable");
lin valuable_N = mkN "valuable" "valuables";
lin valuation_N = mkN "valuation" "valuations";
lin value_N = mkN "value" "values";
lin value_V = mkV "value";
lin value_V2 = mkV2 (mkV "value" "values" "valued" "valued" "valuing");
lin value_added_A = compoundA (mkA "value-added");
lin valueless_A = compoundA (mkA "valueless");
lin valuelessness_N = mkN "valuelessness" ;
lin valuer_N = mkN "valuer" "valuers";
lin valve_N = mkN "valve" "valves";
lin valved_A = mkA "valved" ;
lin valvotomy_N = mkN "valvotomy" ;
lin valvular_A = compoundA (mkA "valvular");
lin valvule_N = mkN "valvule" ;
lin valvulitis_N = mkN "valvulitis" ;
lin vambrace_N = mkN "vambrace" ;
lin vamoose_V = mkV "vamoose" "vamooses" "vamoosed" "vamoosed" "vamoosing";
lin vamp_N = mkN "vamp" "vamps";
lin vamp_V = mkV "vamp" "vamps" "vamped" "vamped" "vamping";
lin vamp_V2 = mkV2 (mkV "vamp" "vamps" "vamped" "vamped" "vamping");
lin vampire_N = mkN "vampire" "vampires";
lin vampirism_N = mkN "vampirism" ;
lin van_N = mkN "van" "vans";
lin vanadate_N = mkN "vanadate" ;
lin vanadinite_N = mkN "vanadinite" ;
lin vanadium_N = mkN "vanadium" ;
lin vancomycin_N = mkN "vancomycin" ;
lin vancouver_PN = mkPN "Vancouver";
lin vanda_N = mkN "vanda" ;
lin vandal_N = mkN "vandal" "vandals";
lin vandalism_N = mkN "vandalism" ;
lin vane_N = mkN "vane" "vanes";
lin vanessa_PN = mkPN "Vanessa";
lin vanguard_N = mkN "vanguard" "vanguards";
lin vanilla_A = mkA "vanilla" ;
lin vanilla_N = mkN "vanilla" "vanillas";
lin vanillin_N = mkN "vanillin" ;
lin vanish_V = mkV "vanish" "vanishes" "vanished" "vanished" "vanishing";
lin vanished_A = mkA "vanished" ;
lin vanisher_N = mkN "vanisher" ;
lin vanishing_N = mkN "vanishing" ;
lin vanishingly_Adv = mkAdv "vanishingly" ;
lin vanity_N = mkN "vanity" "vanities";
lin vanquish_V2 = mkV2 (mkV "vanquish" "vanquishes" "vanquished" "vanquished" "vanquishing");
lin vantage_N = mkN "vantage" "vantages";
lin vantage_point_N = mkN "vantage-point" "vantage-points";
lin vapid_A = compoundA (mkA "vapid");
lin vapidity_N = mkN "vapidity" ;
lin vapidness_N = mkN "vapidness" ;
lin vapor_N = mkN "vapor" ;
lin vaporific_A = mkA "vaporific" ;
lin vaporization_N = mkN "vaporization" "vaporizations";
lin vaporize_V = mkV "vaporize" "vaporizes" "vaporized" "vaporized" "vaporizing";
lin vaporize_V2 = mkV2 (mkV "vaporize" "vaporizes" "vaporized" "vaporized" "vaporizing");
lin vaporizer_N = mkN "vaporizer" ;
lin vaporous_A = compoundA (mkA "vaporous");
lin vapour_N = mkN "vapour" "vapours";
lin vapour_bath_N = mkN "vapour-bath" "vapour-baths";
lin vaquero_N = mkN "vaquero" ;
lin vaquita_N = mkN "vaquita" ;
lin vara_N = mkN "vara" ;
lin varanasi_PN = mkPN "Varanasi";
lin vardenafil_N = mkN "vardenafil" ;
lin variability_N = mkN "variability" ;
lin variable_A = compoundA (mkA "variable");
lin variable_N = mkN "variable" "variables";
lin variableness_N = mkN "variableness" ;
lin variance_N = mkN "variance" "variances";
lin variant_A = compoundA (mkA "variant");
lin variant_N = mkN "variant" "variants";
lin variation_N = mkN "variation" "variations";
lin varicelliform_A = mkA "varicelliform" ;
lin varicocele_N = mkN "varicocele" ;
lin varicolored_A = mkA "varicolored" ;
lin varicoloured_A = compoundA (mkA "varicoloured");
lin varicose_A = compoundA (mkA "varicose");
lin varicosis_N = mkN "varicosis" ;
lin varicosity_N = mkN "varicosity" ;
lin variedness_N = mkN "variedness" ;
lin variegated_A = compoundA (mkA "variegated");
lin variegation_N = mkN "variegation" "variegations";
lin varietal_N = mkN "varietal" ;
lin variety_N = mkN "variety" "varieties";
lin variform_A = compoundA (mkA "variform");
lin variolar_A = mkA "variolar" ;
lin variolation_N = mkN "variolation" ;
lin variometer_N = mkN "variometer" ;
lin variorum_A = compoundA (mkA "variorum");
lin variorum_N = mkN "variorum" ;
lin various_A = compoundA (mkA "various");
lin varix_N = mkN "varix" ;
lin varlet_N = mkN "varlet" "varlets";
lin varmint_N = mkN "varmint" ;
lin varna_N = mkN "varna" ;
lin varnish_N = mkN "varnish" "varnishes";
lin varnish_V2 = mkV2 (mkV "varnish" "varnishes" "varnished" "varnished" "varnishing");
lin varnisher_N = mkN "varnisher" ;
lin varsity_N = mkN "varsity" "varsities";
lin varus_N = mkN "varus" ;
lin vary_V = mkV "vary" "varies" "varied" "varied" "varying";
lin vary_V2 = mkV2 (mkV "vary" "varies" "varied" "varied" "varying");
lin vascular_A = compoundA (mkA "vascular");
lin vascularity_N = mkN "vascularity" ;
lin vascularization_N = mkN "vascularization" ;
lin vasculitis_N = mkN "vasculitis" ;
lin vase_N = mkN "vase" "vases";
lin vasectomy_N = mkN "vasectomy" "vasectomies";
lin vaseline_N = mkN "vaseline" ;
lin vasoconstriction_N = mkN "vasoconstriction" ;
lin vasoconstrictor_N = mkN "vasoconstrictor" ;
lin vasodilation_N = mkN "vasodilation" ;
lin vasodilator_N = mkN "vasodilator" ;
lin vasomotor_A = mkA "vasomotor" ;
lin vasopressin_N = mkN "vasopressin" ;
lin vasopressor_N = mkN "vasopressor" ;
lin vasotomy_N = mkN "vasotomy" ;
lin vasovasostomy_N = mkN "vasovasostomy" ;
lin vasovesiculitis_N = mkN "vasovesiculitis" ;
lin vassal_N = mkN "vassal" "vassals";
lin vassalage_N = mkN "vassalage" ;
lin vast_A = compoundA (mkA "vast");
lin vasteras_PN = mkPN "Vasteras";
lin vastness_N = mkN "vastness" ;
lin vat_N = mkN "vat" ;
lin vatican_N = mkN "vatican" "vaticans";
lin vaudeville_N = mkN "vaudeville" ;
lin vaudevillian_N = mkN "vaudevillian" ;
lin vault_N = mkN "vault" "vaults";
lin vault_V = mkV "vault" "vaults" "vaulted" "vaulted" "vaulting";
lin vault_V2 = mkV2 (mkV "vault" "vaults" "vaulted" "vaulted" "vaulting");
lin vaulter_N = mkN "vaulter" "vaulters";
lin vaulting_N = mkN "vaulting" ;
lin vaulting_horse_N = mkN "vaulting-horse" "vaulting-horses";
lin vaunt_N = mkN "vaunt" "vaunts";
lin vaunt_V = mkV "vaunt" "vaunts" "vaunted" "vaunted" "vaunting";
lin vaunt_V2 = mkV2 (mkV "vaunt" "vaunts" "vaunted" "vaunted" "vaunting");
lin vaunter_N = mkN "vaunter" "vaunters";
lin vauntingly_Adv = mkAdv "vauntingly";
lin vc_N = mkN "vc" ;
lin vd_N = mkN "vd" ;
lin veal_N = mkN "veal" ;
lin vector_N = mkN "vector" "vectors";
lin vedalia_N = mkN "vedalia" ;
lin veer_V = mkV "veer" "veers" "veered" "veered" "veering";
lin veery_N = mkN "veery" ;
lin vegan_N = mkN "vegan" ;
lin vegetable_A = compoundA (mkA "vegetable");
lin vegetable_N = mkN "vegetable" "vegetables";
lin vegetal_A = mkA "vegetal" ;
lin vegetarianMasc_N = mkN masculine (mkN "vegetarian" "vegetarians");
lin vegetarianFem_N = mkN feminine (mkN "vegetarian" "vegetarians");
lin vegetarianism_N = mkN "vegetarianism" ;
lin vegetate_V = mkV "vegetate" "vegetates" "vegetated" "vegetated" "vegetating";
lin vegetation_N = mkN "vegetation" ;
lin vegetative_A = mkA "vegetative" ;
lin vehemence_N = mkN "vehemence" ;
lin vehement_A = compoundA (mkA "vehement");
lin vehicle_N = mkN "vehicle" "vehicles";
lin vehicular_A = compoundA (mkA "vehicular");
lin veil_N = mkN "veil" "veils";
lin veil_V2 = mkV2 (mkV "veil" "veils" "veiled" "veiled" "veiling");
lin veiling_N = mkN "veiling" ;
lin vein_N = mkN "vein" "veins";
lin veinal_A = mkA "veinal" ;
lin veined_A = compoundA (mkA "veined");
lin velar_A = mkA "velar" ;
lin velar_N = mkN "velar" ;
lin veld_N = mkN "veld" ;
lin velleity_N = mkN "velleity" ;
lin vellum_N = mkN "vellum" ;
lin velocipede_N = mkN "velocipede" "velocipedes";
lin velociraptor_N = mkN "velociraptor" ;
lin velocity_N = mkN "velocity" "velocities";
lin velodrome_N = mkN "velodrome" ;
lin velour_N = mkN "velour" ;
lin veloute_N = mkN "veloute" ;
lin velvet_A = mkA "velvet" ;
lin velvet_N = mkN "velvet" ;
lin velveteen_N = mkN "velveteen" ;
lin velvetleaf_N = mkN "velvetleaf" ;
lin velvety_A = compoundA (mkA "velvety");
lin venal_A = compoundA (mkA "venal");
lin venality_N = mkN "venality" ;
lin venation_N = mkN "venation" ;
lin vend_V2 = mkV2 (mkV "vend" "vends" "vended" "vended" "vending");
lin vendee_N = mkN "vendee" "vendees";
lin vender_N = mkN "vender" "venders";
lin vendetta_N = mkN "vendetta" "vendettas";
lin vending_N = mkN "vending" ;
lin vendor_N = mkN human (mkN "vendor" "vendors");
lin veneer_N = mkN "veneer" "veneers";
lin veneer_V2 = mkV2 (mkV "veneer" "veneers" "veneered" "veneered" "veneering");
lin veneering_N = mkN "veneering" ;
lin venerability_N = mkN "venerability" ;
lin venerable_A = compoundA (mkA "venerable");
lin venerate_V2 = mkV2 (mkV "venerate" "venerates" "venerated" "venerated" "venerating");
lin veneration_N = mkN "veneration" "venerations";
lin venerator_N = mkN "venerator" ;
lin venereal_A = compoundA (mkA "venereal");
lin venereologistMasc_N = mkN masculine (mkN "venereologist");
lin venereologistFem_N = mkN feminine (mkN "venereologist");
lin venereology_N = mkN "venereology";
lin venesection_N = mkN "venesection" ;
lin venetian_A = compoundA (mkA "venetian");
lin venezia_PN = mkPN "Venezia";
lin venezuela_PN = mkPN "Venezuela";
lin venezuelan_A = compoundA (mkA "venezuelan");
lin venezuelan_N = mkN "venezuelan" "venezuelans";
lin vengeance_N = mkN "vengeance" ;
lin vengeful_A = compoundA (mkA "vengeful");
lin venial_A = compoundA (mkA "venial");
lin venice_PN = mkPN "Venice";
lin venipuncture_N = mkN "venipuncture" ;
lin venison_N = mkN "venison" ;
lin venogram_N = mkN "venogram" ;
lin venography_N = mkN "venography" ;
lin venom_N = mkN "venom" ;
lin venomed_A = compoundA (mkA "venomed");
lin venomous_A = compoundA (mkA "venomous");
lin venous_A = compoundA (mkA "venous");
lin vent_N = mkN "vent" "vents";
lin vent_V2 = mkV2 (mkV "vent" "vents" "vented" "vented" "venting");
lin vent_hole_N = mkN "vent-hole" "vent-holes";
lin venter_N = mkN "venter" ;
lin ventilate_V2 = mkV2 (mkV "ventilate" "ventilates" "ventilated" "ventilated" "ventilating");
lin ventilation_N = mkN "ventilation" ;
lin ventilator_N = mkN "ventilator" "ventilators";
lin ventilatory_A = mkA "ventilatory" ;
lin ventnor_PN = mkPN "Ventnor";
lin ventral_A = compoundA (mkA "ventral");
lin ventricle_N = mkN "ventricle" "ventricles";
lin ventricose_A = mkA "ventricose" ;
lin ventricular_A = compoundA (mkA "ventricular");
lin ventriloquism_N = mkN "ventriloquism" ;
lin ventriloquist_N = mkN "ventriloquist" "ventriloquists";
lin venture_N = mkN "venture" "ventures";
lin venture_V = mkV "venture" "ventures" "ventured" "ventured" "venturing";
lin venture_V2 = mkV2 (mkV "venture" "ventures" "ventured" "ventured" "venturing");
lin venture_VS = mkVS (mkV "venture" "ventures" "ventured" "ventured" "venturing");
lin venturer_N = mkN "venturer" ;
lin venturesome_A = compoundA (mkA "venturesome");
lin venturi_N = mkN "venturi" ;
lin venturous_A = compoundA (mkA "venturous");
lin venue_N = mkN "venue" "venues";
lin venule_N = mkN "venule" ;
lin venus_PN = mkPN "Venus";
lin vera_PN = mkPN "Vera";
lin veracious_A = compoundA (mkA "veracious");
lin veracity_N = mkN "veracity" ;
lin veranda_N = mkN "veranda" "verandas";
lin verandah_N = mkN "verandah" "verandahs";
lin verapamil_N = mkN "verapamil" ;
lin verb_N = mkN "verb" "verbs";
lin verbal_A = compoundA (mkA "verbal");
lin verbalization_N = mkN "verbalization" ;
lin verbalize_V2 = mkV2 (mkV "verbalize" "verbalizes" "verbalized" "verbalized" "verbalizing");
lin verbatim_A = compoundA (mkA "verbatim");
lin verbatim_Adv = mkAdv "verbatim";
lin verbena_N = mkN "verbena" "verbenas";
lin verbiage_N = mkN "verbiage" ;
lin verbolatry_N = mkN "verbolatry" ;
lin verbose_A = compoundA (mkA "verbose");
lin verboseness_N = mkN "verboseness" ;
lin verbosity_N = mkN "verbosity" ;
lin verdancy_N = mkN "verdancy" ;
lin verdant_A = compoundA (mkA "verdant");
lin verdict_N = mkN "verdict" "verdicts";
lin verdigris_N = mkN "verdigris" ;
lin verdin_N = mkN "verdin" ;
lin verdure_N = mkN "verdure" ;
lin verey_A = compoundA (mkA "verey");
lin verge_N = mkN "verge" "verges";
lin verge_V = mkV "verge" "verges" "verged" "verged" "verging";
lin verger_N = mkN "verger" "vergers";
lin veridical_A = mkA "veridical" ;
lin verifiable_A = compoundA (mkA "verifiable");
lin verification_N = mkN "verification" "verifications";
lin verify_V2 = mkV2 (mkV "verify" "verifies" "verified" "verified" "verifying");
lin verily_Adv = mkAdv "verily" ;
lin verisimilar_A = mkA "verisimilar" ;
lin verisimilitude_N = mkN "verisimilitude" "verisimilitudes";
lin veritable_A = compoundA (mkA "veritable");
lin verity_N = mkN "verity" "verities";
lin vermicelli_N = mkN "vermicelli" ;
lin vermicide_N = mkN "vermicide" ;
lin vermicular_A = mkA "vermicular" ;
lin vermiculate_A = mkA "vermiculate" ;
lin vermiculation_N = mkN "vermiculation" ;
lin vermiculite_N = mkN "vermiculite" ;
lin vermiform_A = compoundA (mkA "vermiform");
lin vermifuge_N = mkN "vermifuge" ;
lin vermilion_A = compoundA (mkA "vermilion");
lin vermilion_N = mkN "vermilion" "vermilions";
lin vermin_N = mkN "vermin" ;
lin verminous_A = compoundA (mkA "verminous");
lin vermis_N = mkN "vermis" ;
lin vermont_PN = mkPN "Vermont";
lin vermouth_N = mkN "vermouth" "vermouths";
lin vernacular_A = compoundA (mkA "vernacular");
lin vernacular_N = mkN "vernacular" "vernaculars";
lin vernal_A = compoundA (mkA "vernal");
lin vernation_N = mkN "vernation" ;
lin vernix_N = mkN "vernix" ;
lin vernon_PN = mkPN "Vernon";
lin verona_PN = mkPN "Verona";
lin veronica_N = mkN "veronica" "veronicas";
lin veronica_PN = mkPN "Veronica";
lin verruca_N = mkN "verruca" "verrucas";
lin verrucose_A = mkA "verrucose" ;
lin versatile_A = compoundA (mkA "versatile");
lin versatility_N = mkN "versatility" ;
lin verse_N = mkN "verse" "verses";
lin versed_A = compoundA (mkA "versed");
lin versicle_N = mkN "versicle" ;
lin versification_N = mkN "versification" ;
lin versifier_N = mkN "versifier" "versifiers";
lin versify_V = mkV "versify" "versifies" "versified" "versified" "versifying";
lin versify_V2 = mkV2 (mkV "versify" "versifies" "versified" "versified" "versifying");
lin version_N = mkN "version" "versions";
lin verso_N = mkN "verso" "versos";
lin verst_N = mkN "verst" ;
lin versus_Prep = mkPrep "versus";
lin vertebra_N = mkN "vertebra" "vertebrae" {- FIXME: guessed plural form -};
lin vertebral_A = mkA "vertebral" ;
lin vertebrate_A = compoundA (mkA "vertebrate");
lin vertebrate_N = mkN "vertebrate" "vertebrates";
lin vertex_N = mkN "vertex" "vertices" {- FIXME: guessed plural form -};
lin vertical_A = compoundA (mkA "vertical");
lin vertical_N = mkN "vertical" "verticals";
lin verticality_N = mkN "verticality" ;
lin verticil_N = mkN "verticil" ;
lin verticillate_A = mkA "verticillate" ;
lin verticilliosis_N = mkN "verticilliosis" ;
lin verticillium_N = mkN "verticillium" ;
lin vertiginous_A = compoundA (mkA "vertiginous");
lin vertigo_N = mkN "vertigo" ;
lin verve_N = mkN "verve" ;
lin vervet_N = mkN "vervet" ;
lin very_AdA = mkAdA "very" ;
lin vesical_A = mkA "vesical" ;
lin vesicant_N = mkN "vesicant" ;
lin vesicatory_A = mkA "vesicatory" ;
lin vesicle_N = mkN "vesicle" "vesicles";
lin vesicular_A = compoundA (mkA "vesicular");
lin vesiculation_N = mkN "vesiculation" ;
lin vesiculitis_N = mkN "vesiculitis" ;
lin vesiculovirus_N = mkN "vesiculovirus" ;
lin vesper_N = mkN "vesper" ;
lin vespers_N = mkN "vespers" ;
lin vespid_N = mkN "vespid" ;
lin vessel_N = mkN "vessel" "vessels";
lin vest_N = mkN "vest" "vests";
lin vest_V = mkV "vest" "vests" "vested" "vested" "vesting";
lin vest_V2 = mkV2 (mkV "vest" "vests" "vested" "vested" "vesting");
lin vestal_A = compoundA (mkA "vestal");
lin vestal_N = mkN "vestal" "vestals";
lin vestiary_A = mkA "vestiary" ;
lin vestibular_A = mkA "vestibular" ;
lin vestibule_N = mkN "vestibule" "vestibules";
lin vestige_N = mkN "vestige" "vestiges";
lin vestigial_A = compoundA (mkA "vestigial");
lin vestiture_N = mkN "vestiture" ;
lin vestment_N = mkN "vestment" "vestments";
lin vestmental_A = mkA "vestmental" ;
lin vestmented_A = mkA "vestmented" ;
lin vestry_N = mkN "vestry" "vestries";
lin vestryman_N = mkN masculine (mkN "vestryman" "vestrymen");
lin vestrywoman_N = mkN feminine (mkN "vestrywoman" "vestrywomen");
lin vesture_N = mkN "vesture" "vestures";
lin vesture_V2 = mkV2 (mkV "vesture" "vestures" "vestured" "vestured" "vesturing");
lin vesuvianite_N = mkN "vesuvianite" ;
lin vet_N = mkN "vet" "vets";
lin vet_V2 = mkV2 (mkV "vet" "vets" "vetted" "vetted" "vetting");
lin vetch_N = mkN "vetch" "vetches";
lin vetchling_N = mkN "vetchling" ;
lin veteran_N = mkN "veteran" "veterans";
lin veterinarian_N = mkN "veterinarian" ;
lin veterinary_A = compoundA (mkA "veterinary");
lin veto_N = mkN "veto" "vetoes";
lin veto_V = mkV "veto";
lin veto_V2 = mkV2 (mkV "veto" "vetos" "vetoed" "vetoed" "vetoing");
lin vex_V2 = mkV2 (mkV "vex" "vexes" "vexed" "vexed" "vexing");
lin vex_V2V = mkV2V (mkV "vex") noPrep to_Prep ;
lin vexation_N = mkN "vexation" "vexations";
lin vexatious_A = compoundA (mkA "vexatious");
lin vhf_PN = mkPN "Vhf";
lin via_Prep = mkPrep "via";
lin via_media_N = mkN "via media" "via mediae" {- FIXME: guessed plural form -};
lin viability_N = mkN "viability" ;
lin viable_A = compoundA (mkA "viable");
lin viaduct_N = mkN "viaduct" "viaducts";
lin vial_N = mkN "vial" "vials";
lin viand_N = mkN "viand" ;
lin viatical_A = mkA "viatical" ;
lin viatication_N = mkN "viatication" ;
lin vibist_N = mkN "vibist" ;
lin vibrant_A = compoundA (mkA "vibrant");
lin vibraphone_N = mkN "vibraphone" "vibraphones";
lin vibrate_V = mkV "vibrate" "vibrates" "vibrated" "vibrated" "vibrating";
lin vibrate_V2 = mkV2 (mkV "vibrate" "vibrates" "vibrated" "vibrated" "vibrating");
lin vibration_N = mkN "vibration" "vibrations";
lin vibrational_A = mkA "vibrational" ;
lin vibrato_N = mkN "vibrato" "vibratos";
lin vibrator_N = mkN "vibrator" "vibrators";
lin vibratory_A = mkA "vibratory" ;
lin vibrio_N = mkN "vibrio" ;
lin vibrionic_A = mkA "vibrionic" ;
lin vic_PN = mkPN "Vic";
lin vicar_N = mkN "vicar" "vicars";
lin vicarage_N = mkN "vicarage" "vicarages";
lin vicarial_A = mkA "vicarial" ;
lin vicariate_N = mkN "vicariate" ;
lin vicarious_A = compoundA (mkA "vicarious");
lin vice_N = mkN "vice" "vices";
lin vice_versa_Adv = mkAdv "vice versa";
lin vicegerent_N = mkN "vicegerent" ;
lin vicenary_A = mkA "vicenary" ;
lin vicennial_A = mkA "vicennial" ;
lin vicenza_PN = mkPN "Vicenza";
lin viceregal_A = compoundA (mkA "viceregal");
lin vicereine_N = mkN "vicereine" "vicereines";
lin viceroy_N = mkN "viceroy" "viceroys";
lin viceroyalty_N = mkN "viceroyalty" ;
lin viceroyship_N = mkN "viceroyship" ;
lin vichyssoise_N = mkN "vichyssoise" ;
lin vicinal_A = mkA "vicinal" ;
lin vicinity_N = mkN "vicinity" "vicinities";
lin vicious_A = compoundA (mkA "vicious");
lin viciousness_N = mkN "viciousness" ;
lin vicissitude_N = mkN "vicissitude" "vicissitudes";
lin vicky_PN = mkPN "Vicky";
lin victim_N = mkN "victim" "victims";
lin victimization_N = mkN "victimization" "victimizations";
lin victimize_V2 = mkV2 (mkV "victimize" "victimizes" "victimized" "victimized" "victimizing");
lin victimizer_N = mkN "victimizer" ;
lin victor_N = mkN "victor" "victors";
lin victor_PN = mkPN "Victor";
lin victoria_N = mkN "victoria" "victorias";
lin victoria_PN = mkPN "Victoria";
lin victorian_A = compoundA (mkA "victorian");
lin victorian_N = mkN "victorian" "victorians";
lin victoriana_N = mkN "victoriana" ;
lin victorious_A = compoundA (mkA "victorious");
lin victory_N = mkN "victory" "victories";
lin victual_N = mkN "victual" "victuals";
lin victual_V = mkV "victual" "victuals" "victualled" "victualled" "victualling";
lin victual_V2 = mkV2 (mkV "victual" "victuals" "victualled" "victualled" "victualling");
lin victualer_N = mkN "victualer" ;
lin victualler_N = mkN "victualler" "victuallers";
lin vicuna_N = mkN "vicuña" "vicuñas";
lin videlicet_Adv = mkAdv "videlicet";
lin video_N = mkN "video" "videos";
lin videocassette_N = mkN "videocassette" ;
lin videodisk_N = mkN "videodisk" ;
lin videotape_N = mkN "videotape" "videotapes";
lin videotape_V2 = mkV2 (mkV "videotape" "videotapes" "videotaped" "videotaped" "videotaping");
lin vie_V = mkV "vie" "IRREG" "IRREG" "IRREG" "IRREG";
lin vienna_PN = mkPN "Vienna";
lin vietnam_PN = mkPN "Vietnam";
lin vietnamese_A = compoundA (mkA "Vietnamese");
lin vietnamese_N = mkN "Vietnamese" "Vietnamese";
lin view_N = mkN "view" "views";
lin view_V2 = mkV2 (mkV "view" "views" "viewed" "viewed" "viewing");
lin viewable_A = mkA "viewable" ;
lin viewer_N = mkN "viewer" "viewers";
lin viewfinder_N = mkN "viewfinder" "viewfinders";
lin viewgraph_N = mkN "viewgraph" ;
lin viewless_A = compoundA (mkA "viewless");
lin viewpark_PN = mkPN "Viewpark";
lin viewpoint_N = mkN "viewpoint" "viewpoints";
lin vigesimal_A = mkA "vigesimal" ;
lin vigil_N = mkN "vigil" "vigils";
lin vigilance_N = mkN "vigilance" ;
lin vigilant_A = compoundA (mkA "vigilant");
lin vigilante_N = mkN "vigilante" "vigilantes";
lin vigilantism_N = mkN "vigilantism" ;
lin vignette_N = mkN "vignette" "vignettes";
lin vigo_PN = mkPN "Vigo";
lin vigor_N = mkN "vigor" ;
lin vigorous_A = compoundA (mkA "vigorous");
lin vigour_N = mkN "vigour" ;
lin viking_N = mkN "viking" "vikings";
lin vile_A = mkA "vile" "viler";
lin vileness_N = mkN "vileness" ;
lin vilification_N = mkN "vilification" "vilifications";
lin vilify_V2 = mkV2 (mkV "vilify" "vilifies" "vilified" "vilified" "vilifying");
lin villa_N = mkN "villa" "villas";
lin village_N = mkN "village" "villages";
lin villager_N = mkN "villager" "villagers";
lin villain_N = mkN human (mkN "villain" "villains");
lin villainess_N = mkN "villainess" "villainesss";
lin villainous_A = compoundA (mkA "villainous");
lin villainy_N = mkN "villainy" "villainies";
lin villein_N = mkN "villein" "villeins";
lin villeinage_N = mkN "villeinage" ;
lin villus_N = mkN "villus" ;
lin vim_N = mkN "vim" ;
lin vinaceous_A = mkA "vinaceous" ;
lin vinaigrette_N = mkN "vinaigrette" ;
lin vinblastine_N = mkN "vinblastine" ;
lin vince_PN = mkPN "Vince";
lin vincent_PN = mkPN "Vincent";
lin vincristine_N = mkN "vincristine" ;
lin vindicate_V2 = mkV2 (mkV "vindicate" "vindicates" "vindicated" "vindicated" "vindicating");
lin vindication_N = mkN "vindication" "vindications";
lin vindictive_A = compoundA (mkA "vindictive");
lin vindictiveness_N = mkN "vindictiveness" ;
lin vine_N = mkN "vine" "vines";
lin vinegar_N = mkN "vinegar" "vinegars";
lin vinegariness_N = mkN "vinegariness" ;
lin vinegarroon_N = mkN "vinegarroon" ;
lin vinegary_A = compoundA (mkA "vinegary");
lin vinery_N = mkN "vinery" "vineries";
lin vineyard_N = mkN "vineyard" "vineyards";
lin vinifera_N = mkN "vinifera" ;
lin vinification_N = mkN "vinification" ;
lin vino_N = mkN "vino" "vinoes";
lin vinous_A = compoundA (mkA "vinous");
lin vintage_N = mkN "vintage" "vintages";
lin vintager_N = mkN "vintager" ;
lin vintner_N = mkN "vintner" "vintners";
lin vinyl_N = mkN "vinyl" "vinyls";
lin viol_N = mkN "viol" "viols";
lin viola_N = mkN "viola" "violas";
lin viola_PN = mkPN "Viola";
lin violable_A = mkA "violable" ;
lin violate_V2 = mkV2 (mkV "violate" "violates" "violated" "violated" "violating");
lin violation_N = mkN "violation" "violations";
lin violator_N = mkN "violator" ;
lin violence_N = mkN "violence" ;
lin violent_A = compoundA (mkA "violent");
lin violet_N = mkN "violet" "violets";
lin violet_PN = mkPN "Violet";
lin violin_N = mkN "violin" "violins";
lin violinistMasc_N = mkN masculine (mkN "violinist" "violinists");
lin violinistFem_N = mkN feminine (mkN "violinist" "violinists");
lin violistMasc_N = mkN masculine (mkN "violist");
lin violistFem_N = mkN feminine (mkN "violist");
lin viomycin_N = mkN "viomycin" ;
lin vip_N = mkN "vip" "vips" ;
lin viper_N = mkN "viper" "vipers";
lin virago_N = mkN "virago" "viragos";
lin viral_A = mkA "viral" ;
lin viremia_N = mkN "viremia" ;
lin vireo_N = mkN "vireo" ;
lin virga_N = mkN "virga" ;
lin virgin_A = compoundA (mkA "virgin");
lin virgin_N = mkN "virgin" "virgins";
lin virginal_A = compoundA (mkA "virginal");
lin virginal_N = mkN "virginal" "virginals";
lin virginia_N = mkN "virginia" ;
lin virginia_PN = mkPN "Virginia";
lin virginia_water_PN = mkPN "Virginia water";
lin virginity_N = mkN "virginity" ;
lin virgo_PN = mkPN "Virgo";
lin virgule_N = mkN "virgule" "virgules";
lin viricidal_A = mkA "viricidal" ;
lin viricide_N = mkN "viricide" ;
lin virile_A = compoundA (mkA "virile");
lin virilism_N = mkN "virilism" ;
lin virility_N = mkN "virility" ;
lin virino_N = mkN "virino" ;
lin virion_N = mkN "virion" ;
lin viroid_N = mkN "viroid" ;
lin virological_A = mkA "virological" ;
lin virologist_N = mkN "virologist" ;
lin virology_N = mkN "virology" ;
lin virtu_N = mkN "virtu" ;
lin virtual_A = compoundA (mkA "virtual");
lin virtue_N = mkN "virtue" "virtues";
lin virtuosity_N = mkN "virtuosity" ;
lin virtuoso_N = mkN "virtuoso" "virtuosos";
lin virtuous_A = compoundA (mkA "virtuous");
lin virulence_N = mkN "virulence" ;
lin virulent_A = compoundA (mkA "virulent");
lin virus_N = mkN "virus" "viruses";
lin vis_a_vis_Adv = mkAdv "vis-à-vis";
lin visa_N = mkN "visa" "visas";
lin visa_V2 = mkV2 (mkV "visa" "visas" "visaed" "visaed" "visaing");
lin visage_N = mkN "visage" "visages";
lin visaged_A = compoundA (mkA "visaged");
lin viscacha_N = mkN "viscacha" ;
lin viscera_N = mkN "viscera" ;
lin visceral_A = compoundA (mkA "visceral");
lin viscid_A = compoundA (mkA "viscid");
lin viscoelastic_A = mkA "viscoelastic" ;
lin viscometer_N = mkN "viscometer" ;
lin viscometric_A = mkA "viscometric" ;
lin viscometry_N = mkN "viscometry" ;
lin viscosity_N = mkN "viscosity" ;
lin viscount_N = mkN "viscount" "viscounts";
lin viscountcy_N = mkN "viscountcy" "viscountcies";
lin viscountess_N = mkN "viscountess" "viscountesses";
lin viscounty_N = mkN "viscounty" ;
lin viscous_A = compoundA (mkA "viscous");
lin vise_N = mkN "vise" ;
lin viselike_A = mkA "viselike" ;
lin visibility_N = mkN "visibility" ;
lin visible_A = compoundA (mkA "visible");
lin vision_N = mkN "vision" "visions";
lin visionary_A = compoundA (mkA "visionary");
lin visionary_N = mkN "visionary" "visionaries";
lin visit_N = mkN "visit" "visits";
lin visit_V = mkV "visit" "visits" "visited" "visited" "visiting";
lin visit_V2 = mkV2 (mkV "visit" "visits" "visited" "visited" "visiting");
lin visit_V2V = mkV2V (mkV "visit" "visits" "visited" "visited" "visiting") noPrep to_Prep;
lin visitant_N = mkN "visitant" "visitants";
lin visitation_N = mkN "visitation" "visitations";
lin visiting_N = mkN "visiting" ;
lin visitor_N = mkN "visitor" "visitors";
lin visor_N = mkN "visor" "visors";
lin visored_A = mkA "visored" ;
lin vista_N = mkN "vista" "vistas";
lin visual_A = compoundA (mkA "visual");
lin visualization_N = mkN "visualization" "visualizations";
lin visualize_V2 = mkV2 (mkV "visualize" "visualizes" "visualized" "visualized" "visualizing");
lin visualizer_N = mkN "visualizer" ;
lin vital_A = compoundA (mkA "vital");
lin vitalism_N = mkN "vitalism" ;
lin vitalist_N = mkN "vitalist" "vitalists";
lin vitality_N = mkN "vitality" ;
lin vitalization_N = mkN "vitalization" ;
lin vitalize_V2 = mkV2 (mkV "vitalize" "vitalizes" "vitalized" "vitalized" "vitalizing");
lin vitalness_N = mkN "vitalness" ;
lin vitamin_N = mkN "vitamin" "vitamins";
lin vitiate_V2 = mkV2 (mkV "vitiate" "vitiates" "vitiated" "vitiated" "vitiating");
lin vitiation_N = mkN "vitiation" ;
lin viticulture_N = mkN "viticulture" ;
lin viticulturist_N = mkN "viticulturist" ;
lin vitiliginous_A = mkA "vitiliginous" ;
lin vitiligo_N = mkN "vitiligo" ;
lin vitoria_PN = mkPN "Vitoria";
lin vitrectomy_N = mkN "vitrectomy" ;
lin vitreous_A = compoundA (mkA "vitreous");
lin vitrification_N = mkN "vitrification" ;
lin vitrify_V = mkV "vitrify" "vitrifies" "vitrified" "vitrified" "vitrifying";
lin vitrify_V2 = mkV2 (mkV "vitrify" "vitrifies" "vitrified" "vitrified" "vitrifying");
lin vitriol_N = mkN "vitriol" ;
lin vitriolic_A = compoundA (mkA "vitriolic");
lin vituperate_V2 = mkV2 (mkV "vituperate" "vituperates" "vituperated" "vituperated" "vituperating");
lin vituperation_N = mkN "vituperation" ;
lin vituperative_A = compoundA (mkA "vituperative");
lin viv_PN = mkPN "Viv";
lin viva_N = mkN "viva" "vivas";
lin viva_voce_A = compoundA (mkA "viva voce");
lin viva_voce_Adv = mkAdv "viva voce";
lin viva_voce_N = mkN "viva voce" "viva voces";
lin vivace_A = mkA "vivace" ;
lin vivace_Adv = mkAdv "vivace";
lin vivacious_A = compoundA (mkA "vivacious");
lin vivacity_N = mkN "vivacity" ;
lin vivarium_N = mkN "vivarium" ;
lin viverrine_N = mkN "viverrine" ;
lin vivian_PN = mkPN "Vivian";
lin vivid_A = compoundA (mkA "vivid");
lin vividness_N = mkN "vividness" ;
lin vivien_PN = mkPN "Vivien";
lin vivienne_PN = mkPN "Vivienne";
lin vivification_N = mkN "vivification" ;
lin viviparous_A = compoundA (mkA "viviparous");
lin vivisect_V2 = mkV2 (mkV "vivisect" "vivisects" "vivisected" "vivisected" "vivisecting");
lin vivisection_N = mkN "vivisection" "vivisections";
lin vivisectionist_N = mkN "vivisectionist" "vivisectionists";
lin vixen_N = mkN "vixen" "vixens";
lin vixenish_A = compoundA (mkA "vixenish");
lin viz_PN = mkPN "Viz";
lin vizier_N = mkN "vizier" "viziers";
lin viziership_N = mkN "viziership" ;
lin vizsla_N = mkN "vizsla" ;
lin vocable_N = mkN "vocable" ;
lin vocabulary_N = mkN "vocabulary" "vocabularies";
lin vocal_A = compoundA (mkA "vocal");
lin vocalic_A = mkA "vocalic" ;
lin vocalist_N = mkN "vocalist" "vocalists";
lin vocalize_V2 = mkV2 (mkV "vocalize" "vocalizes" "vocalized" "vocalized" "vocalizing");
lin vocation_N = mkN "vocation" "vocations";
lin vocational_A = compoundA (mkA "vocational");
lin vocative_A = compoundA (mkA "vocative");
lin vocative_N = mkN "vocative" "vocatives";
lin vociferate_V = mkV "vociferate" "vociferates" "vociferated" "vociferated" "vociferating";
lin vociferate_V2 = mkV2 (mkV "vociferate" "vociferates" "vociferated" "vociferated" "vociferating");
lin vociferation_N = mkN "vociferation" ;
lin vociferator_N = mkN "vociferator" ;
lin vociferous_A = compoundA (mkA "vociferous");
lin vodka_N = mkN "vodka" "vodkas";
lin vogue_N = mkN "vogue" "vogues";
lin voice_N = mkN "voice" "voices";
lin voice_V2 = mkV2 (mkV "voice" "voices" "voiced" "voiced" "voicing");
lin voiceless_A = compoundA (mkA "voiceless");
lin voicelessness_N = mkN "voicelessness" ;
lin voiceprint_N = mkN "voiceprint" ;
lin voicer_N = mkN "voicer" ;
lin voicing_N = mkN "voicing" ;
lin void_A = compoundA (mkA "void");
lin void_N = mkN "void" "voids";
lin void_V2 = mkV2 (mkV "void" "voids" "voided" "voided" "voiding");
lin voider_N = mkN "voider" ;
lin voile_N = mkN "voile" ;
lin vol_N = mkN "vol" "vols" ;
lin volatile_A = compoundA (mkA "volatile");
lin volatile_N = mkN "volatile" ;
lin volatility_N = mkN "volatility" "volatilities";
lin volcanic_A = compoundA (mkA "volcanic");
lin volcanically_Adv = mkAdv "volcanically" ;
lin volcanism_N = mkN "volcanism" ;
lin volcano_N = mkN "volcano" "volcanos";
lin volcanology_N = mkN "volcanology" ;
lin vole_N = mkN "vole" "voles";
lin volgograd_PN = mkPN "Volgograd";
lin volition_N = mkN "volition" ;
lin volitional_A = compoundA (mkA "volitional");
lin volley_N = mkN "volley" "volleys";
lin volley_V = mkV "volley" "volleys" "volleyed" "volleyed" "volleying";
lin volley_V2 = mkV2 (mkV "volley" "volleys" "volleyed" "volleyed" "volleying");
lin volleyball_N = mkN "volleyball" "volleyballs";
lin volt_N = mkN "volt" "volts";
lin voltage_N = mkN "voltage" "voltages";
lin voltaic_A = mkA "voltaic" ;
lin volte_face_N = mkN "volte-face" "IRREG";
lin voltmeter_N = mkN "voltmeter" ;
lin volubility_N = mkN "volubility" ;
lin voluble_A = compoundA (mkA "voluble");
lin volume_N = mkN "volume" "volumes";
lin volumed_A = mkA "volumed" ;
lin volumeter_N = mkN "volumeter" ;
lin volumetric_A = mkA "volumetric" ;
lin volumetrically_Adv = mkAdv "volumetrically" ;
lin voluminous_A = compoundA (mkA "voluminous");
lin voluntary_A = compoundA (mkA "voluntary");
lin voluntary_N = mkN "voluntary" "voluntaries";
lin volunteerMasc_N = mkN masculine (mkN "volunteer" "volunteers");
lin volunteerFem_N = mkN feminine (mkN "volunteer" "volunteers");
lin volunteer_V = mkV "volunteer" "volunteers" "volunteered" "volunteered" "volunteering";
lin volunteer_V2 = mkV2 (mkV "volunteer" "volunteers" "volunteered" "volunteered" "volunteering");
lin volunteer_V2V = mkV2V (mkV "volunteer" "volunteers" "volunteered" "volunteered" "volunteering") noPrep to_Prep ;
lin volunteer_VS = mkVS (mkV "volunteer" "volunteers" "volunteered" "volunteered" "volunteering");
lin voluptuary_N = mkN "voluptuary" "voluptuaries";
lin voluptuous_A = compoundA (mkA "voluptuous");
lin voluptuousness_N = mkN "voluptuousness" ;
lin volute_N = mkN "volute" "volutes";
lin voluted_A = compoundA (mkA "voluted");
lin volution_N = mkN "volution" ;
lin volva_N = mkN "volva" ;
lin volvulus_N = mkN "volvulus" ;
lin vomer_N = mkN "vomer" ;
lin vomit_N = mkN "vomit" ;
lin vomit_V = mkV "vomit" "vomits" "vomited" "vomited" "vomiting";
lin vomit_V2 = mkV2 (mkV "vomit" "vomits" "vomited" "vomited" "vomiting");
lin vomiter_N = mkN "vomiter" ;
lin vomitory_N = mkN "vomitory" ;
lin voodoo_N = mkN "voodoo" ;
lin voodooism_N = mkN "voodooism" ;
lin voracious_A = compoundA (mkA "voracious");
lin voracity_N = mkN "voracity" ;
lin voronezh_PN = mkPN "Voronezh";
lin vortex_N = mkN "vortex" "vortexes";
lin vorticella_N = mkN "vorticella" ;
lin votary_N = mkN "votary" "votaries";
lin vote_N = mkN "vote" "votes";
lin vote_V = mkV "vote" "votes" "voted" "voted" "voting";
lin vote_V2 = mkV2 (mkV "vote" "votes" "voted" "voted" "voting");
lin vote_V3 = mkV3 (mkV "vote" "votes" "voted" "voted" "voting");
lin vote_VV = mkVV (mkV "vote" "votes" "voted" "voted" "voting");
lin voteless_A = compoundA (mkA "voteless");
lin voter_N = mkN "voter" "voters";
lin votive_A = compoundA (mkA "votive");
lin vouch_V = mkV "vouch" "vouches" "vouched" "vouched" "vouching";
lin vouchee_N = mkN "vouchee" ;
lin voucher_N = mkN "voucher" "vouchers";
lin vouchsafe_V2 = mkV2 (mkV "vouchsafe" "vouchsafes" "vouchsafed" "vouchsafed" "vouchsafing");
lin vouge_N = mkN "vouge" ;
lin voussoir_N = mkN "voussoir" ;
lin vow_N = mkN "vow" "vows";
lin vow_V2 = mkV2 (mkV "vow" "vows" "vowed" "vowed" "vowing");
lin vow_VS = mkVS (mkV "vow");
lin vow_VV = mkVV (mkV "vow");
lin vowel_N = mkN "vowel" "vowels";
lin vowellike_A = mkA "vowellike" ;
lin vower_N = mkN "vower" ;
lin vox_N = mkN "vox" "IRREG";
lin vox_populi_N = mkN "vox populi" "IRREG";
lin voyage_N = mkN "voyage" "voyages";
lin voyage_V = mkV "voyage" "voyages" "voyaged" "voyaged" "voyaging";
lin voyager_N = mkN "voyager" "voyagers";
lin voyeur_N = mkN "voyeur" "voyeurs";
lin voyeurism_N = mkN "voyeurism" ;
lin voyeuristic_A = compoundA (mkA "voyeuristic");
lin voyeuristically_Adv = mkAdv "voyeuristically";
lin vp_N = mkN "vp" ;
lin vroom_N = mkN "vroom" ;
lin vs_PN = mkPN "Vs";
lin vs_Prep = mkPrep "vs.";
lin vso_PN = mkPN "Vso";
lin vulcanite_N = mkN "vulcanite" ;
lin vulcanization_N = mkN "vulcanization" "vulcanizations";
lin vulcanize_V2 = mkV2 (mkV "vulcanize" "vulcanizes" "vulcanized" "vulcanized" "vulcanizing");
lin vulcanizer_N = mkN "vulcanizer" ;
lin vulgar_A = compoundA (mkA "vulgar");
lin vulgarian_N = mkN "vulgarian" "vulgarians";
lin vulgarism_N = mkN "vulgarism" "vulgarisms";
lin vulgarity_N = mkN "vulgarity" "vulgarities";
lin vulgarization_N = mkN "vulgarization" ;
lin vulgarize_V2 = mkV2 (mkV "vulgarize" "vulgarizes" "vulgarized" "vulgarized" "vulgarizing");
lin vulgarizer_N = mkN "vulgarizer" ;
lin vulgate_N = mkN "vulgate" "vulgates";
lin vulnerability_N = mkN "vulnerability" "vulnerabilities";
lin vulnerable_A = compoundA (mkA "vulnerable");
lin vulpine_A = compoundA (mkA "vulpine");
lin vulture_N = mkN "vulture" "vultures";
lin vulva_N = mkN "vulva" "vulvas";
lin vulvar_A = mkA "vulvar" ;
lin vulvectomy_N = mkN "vulvectomy" ;
lin vulvitis_N = mkN "vulvitis" ;
lin vulvovaginitis_N = mkN "vulvovaginitis" ;
lin wad_N = mkN "wad" "wads";
lin wad_V2 = mkV2 (mkV "wad" "wads" "wadded" "wadded" "wadding");
lin wad_VS = mkVS (mkV "wad");
lin wadding_N = mkN "wadding" ;
lin waddle_N = mkN "waddle" "IRREG";
lin waddle_V = mkV "waddle" "waddles" "waddled" "waddled" "waddling";
lin waddler_N = mkN "waddler" ;
lin wade_V = mkV "wade" "wades" "waded" "waded" "wading";
lin wade_V2 = mkV2 (mkV "wade" "wades" "waded" "waded" "wading");
lin wader_N = mkN "wader" "waders";
lin waders_N = mkN "waders" ;
lin wadi_N = mkN "wadi" "wadis";
lin wading_N = mkN "wading" ;
lin wafer_N = mkN "wafer" "wafers";
lin waffle_N = mkN "waffle" "waffles";
lin waffle_V = mkV "waffle" "waffles" "waffled" "waffled" "waffling";
lin waffle_V2 = mkV2 (mkV "waffle" "waffles" "waffled" "waffled" "waffling");
lin waffler_N = mkN "waffler" ;
lin waft_N = mkN "waft" "wafts";
lin waft_V2 = mkV2 (mkV "waft" "wafts" "wafted" "wafted" "wafting");
lin wag_N = mkN "wag" "wags";
lin wag_V = mkV "wag" "wags" "wagged" "wagged" "wagging";
lin wag_V2 = mkV2 (mkV "wag" "wags" "wagged" "wagged" "wagging");
lin wage_N = mkN "wage" "wages";
lin wage_V2 = mkV2 (mkV "wage" "wages" "waged" "waged" "waging");
lin wage_claim_N = mkN "wage-claim" "wage-claims";
lin wage_earner_N = mkN "wage-earner" "wage-earners";
lin wage_freeze_N = mkN "wage-freeze" "wage-freezes";
lin wager_N = mkN "wager" "wagers";
lin wager_V = mkV "wager" "wagers" "wagered" "wagered" "wagering";
lin wager_V2 = mkV2 (mkV "wager" "wagers" "wagered" "wagered" "wagering");
lin wages_N = mkN "wages" ;
lin waggery_N = mkN "waggery" "waggeries";
lin waggish_A = compoundA (mkA "waggish");
lin waggishness_N = mkN "waggishness" ;
lin waggle_V = mkV "waggle" "waggles" "waggled" "waggled" "waggling";
lin waggle_V2 = mkV2 (mkV "waggle" "waggles" "waggled" "waggled" "waggling");
lin waggon_N = mkN "waggon" "waggons";
lin waggoner_N = mkN "waggoner" "waggoners";
lin wagon_N = mkN "wagon" ;
lin wagon_lit_N = mkN "wagon-lit" "IRREG";
lin wagoner_N = mkN "wagoner" ;
lin wagonwright_N = mkN "wagonwright" ;
lin wagtail_N = mkN "wagtail" "wagtails";
lin wahoo_N = mkN "wahoo" ;
lin waif_N = mkN "waif" "waifs";
lin wail_N = mkN "wail" "wails";
lin wail_V = mkV "wail" "wails" "wailed" "wailed" "wailing";
lin wail_V2 = mkV2 (mkV "wail" "wails" "wailed" "wailed" "wailing");
lin wailer_N = mkN "wailer" ;
lin wailing_N = mkN "wailing" ;
lin wain_N = mkN "wain" "wains";
lin wainscot_N = mkN "wainscot" "wainscots";
lin wainscoted_A = compoundA (mkA "wainscoted");
lin wainscoting_N = mkN "wainscoting" ;
lin waist_N = mkN "waist" "waists";
lin waist_deep_A = compoundA (mkA "waist-deep");
lin waist_deep_Adv = mkAdv "waist-deep";
lin waist_high_A = compoundA (mkA "waist-high");
lin waist_high_Adv = mkAdv "waist-high";
lin waistband_N = mkN "waistband" "waistbands";
lin waistcoat_N = mkN "waistcoat" "waistcoats";
lin waistline_N = mkN "waistline" "waistlines";
lin wait_N = mkN "wait" "waits";
lin wait_V = mkV "wait" "waits" "waited" "waited" "waiting";
lin wait_V2 = mkV2 (mkV "wait" "waits" "waited" "waited" "waiting");
lin wait_VV = mkVV (mkV "wait" "waits" "waited" "waited" "waiting");
lin waiter_N = mkN masculine (mkN "waiter" "waiters");
lin waiting_list_N = mkN "waiting-list" "waiting-lists";
lin waiting_room_N = mkN "waiting-room" "waiting-rooms";
lin waitress_N = mkN feminine (mkN "waitress" "waitresses");
lin waive_V2 = mkV2 (mkV "waive" "waives" "waived" "waived" "waiving");
lin waiver_N = mkN "waiver" "waivers";
lin waiver_V = mkV "waiver";
lin wake_N = mkN "wake" "wakes";
lin wake_V = mkV "wake" "wakes" "waked" "waked" "waking";
lin wake_V2 = mkV2 (mkV "wake" "wakes" "waked" "waked" "waking");
lin wakefield_PN = mkPN "Wakefield";
lin wakeful_A = compoundA (mkA "wakeful");
lin wakefulness_N = mkN "wakefulness" ;
lin waken_V = mkV "waken" "wakens" "wakened" "wakened" "wakening";
lin waken_V2 = mkV2 (mkV "waken" "wakens" "wakened" "wakened" "wakening");
lin waker_N = mkN "waker" ;
lin waking_N = mkN "waking" ;
lin wale_N = mkN "wale" "wales";
lin wales_PN = mkPN "Wales";
lin walk_N = mkN "walk" "walks";
lin walk_V = mkV "walk" "walks" "walked" "walked" "walking";
lin walk_V2 = mkV2 (mkV "walk" "walks" "walked" "walked" "walking");
lin walkabout_N = mkN "walkabout" "walkabouts";
lin walkaway_N = mkN "walkaway" "walkaways";
lin walker_N = mkN "walker" "walkers";
lin walkie_talkie_N = mkN "walkie-talkie" "walkie-talkies";
lin walking_N = mkN "walking" ;
lin walkout_N = mkN "walkout" "walkouts";
lin walkover_N = mkN "walkover" "walkovers";
lin wall_N = mkN "wall" "walls";
lin wall_V2 = mkV2 (mkV "wall" "walls" "walled" "walled" "walling");
lin wall_eyed_A = compoundA (mkA "wall-eyed");
lin wall_painting_N = mkN "wall-painting" "wall-paintings";
lin wall_street_PN = mkPN "Wall street";
lin wallaby_N = mkN "wallaby" "wallabies";
lin wallace_PN = mkPN "Wallace";
lin wallah_N = mkN "wallah" "wallahs";
lin wallasey_PN = mkPN "Wallasey";
lin wallboard_N = mkN "wallboard" ;
lin wallet_N = mkN "wallet" "wallets";
lin walleye_N = mkN "walleye" ;
lin walleyed_A = mkA "walleyed" ;
lin wallflower_N = mkN "wallflower" "wallflowers";
lin wallingford_PN = mkPN "Wallingford";
lin wallop_N = mkN "wallop" "wallops";
lin wallop_V2 = mkV2 (mkV "wallop" "wallops" "walloped" "walloped" "walloping");
lin walloper_N = mkN "walloper" ;
lin walloping_A = compoundA (mkA "walloping");
lin wallow_N = mkN "wallow" "wallows";
lin wallow_V = mkV "wallow" "wallows" "wallowed" "wallowed" "wallowing";
lin wallpaper_N = mkN "wallpaper" ;
lin wallpaperer_N = mkN "wallpaperer" ;
lin wallsend_PN = mkPN "Wallsend";
lin wally_N = mkN "wally" ;
lin wally_PN = mkPN "Wally";
lin walnut_N = mkN "walnut" "walnuts";
lin walrus_N = mkN "walrus" "walruses";
lin walsall_PN = mkPN "Walsall";
lin walsham_PN = mkPN "Walsham";
lin walter_PN = mkPN "Walter";
lin waltham_forest_PN = mkPN "Waltham forest";
lin walton_PN = mkPN "Walton";
lin waltz_N = mkN "waltz" "waltzes";
lin waltz_V = mkV "waltz" "waltzes" "waltzed" "waltzed" "waltzing";
lin waltz_V2 = mkV2 (mkV "waltz" "waltzes" "waltzed" "waltzed" "waltzing");
lin waltzer_N = mkN "waltzer" ;
lin wampum_N = mkN "wampum" ;
lin wan_A = mkA "wan" "wanner";
lin wand_N = mkN "wand" "wands";
lin wander_V = mkV "wander" "wanders" "wandered" "wandered" "wandering";
lin wander_V2 = mkV2 (mkV "wander" "wanders" "wandered" "wandered" "wandering");
lin wanderer_N = mkN "wanderer" "wanderers";
lin wandering_N = mkN "wandering" ;
lin wanderlust_N = mkN "wanderlust" ;
lin wandflower_N = mkN "wandflower" ;
lin wandsworth_PN = mkPN "Wandsworth";
lin wane_N = mkN "wane" "wanes";
lin wane_V = mkV "wane" "wanes" "waned" "waned" "waning";
lin wangle_N = mkN "wangle" "wangles";
lin wangle_V2 = mkV2 (mkV "wangle" "wangles" "wangled" "wangled" "wangling");
lin waning_N = mkN "waning" ;
lin wank_N = mkN "wank" "wanks";
lin wank_V = mkV "wank" "wanks" "wanked" "wanked" "wanking";
lin wanness_N = mkN "wanness" ;
lin want_N = mkN "want";
lin want_V = mkV "want";
lin want_V2 = mkV2 (mkV "want");
lin want_V2V = mkV2V (mkV "want") noPrep to_Prep ;
lin want_VS = mkVS (mkV "want");
lin want_VV = mkVV (mkV "want");
lin want_ad_N = mkN "want-ad" "want-ads";
lin wantage_PN = mkPN "Wantage";
lin wanter_N = mkN "wanter" ;
lin wanton_A = compoundA (mkA "wanton");
lin wanton_N = mkN "wanton" "wantons";
lin wanton_V = mkV "wanton" "wantons" "wantoned" "wantoned" "wantoning";
lin wantonness_N = mkN "wantonness" ;
lin wapiti_N = mkN "wapiti" ;
lin war_N = mkN "war" "wars";
lin war_V = mkV "war" "wars" "warred" "warred" "warring";
lin war_baby_N = mkN "war-baby" "war-babies";
lin war_bride_N = mkN "war-bride" "war-brides";
lin war_cloud_N = mkN "war-cloud" "war-clouds";
lin war_cry_N = mkN "war-cry" "war-cries";
lin war_dance_N = mkN "war-dance" "war-dances";
lin war_god_N = mkN "war-god" "war-gods";
lin war_torn_A = compoundA (mkA "war-torn");
lin war_widow_N = mkN "war-widow" "war-widows";
lin waratah_N = mkN "waratah" ;
lin warble_N = mkN "warble" "warbles";
lin warble_V = mkV "warble" "warbles" "warbled" "warbled" "warbling";
lin warble_V2 = mkV2 (mkV "warble" "warbles" "warbled" "warbled" "warbling");
lin warbler_N = mkN "warbler" "warblers";
lin ward_N = mkN "ward" "wards";
lin ward_V2 = mkV2 (mkV "ward" "wards" "warded" "warded" "warding");
lin warden_N = mkN "warden" "wardens";
lin wardenship_N = mkN "wardenship" ;
lin warder_N = mkN "warder" "warders";
lin wardership_N = mkN "wardership" ;
lin wardress_N = mkN "wardress" "wardresses";
lin wardrobe_N = mkN "wardrobe" "wardrobes";
lin wardroom_N = mkN "wardroom" "wardrooms";
lin ware_N = mkN "ware" "wares";
lin ware_PN = mkPN "Ware";
lin ware_V2 = mkV2 (mkV "ware" "wares" "wared" "wared" "waring");
lin warehouse_N = mkN "warehouse" "warehouses";
lin warehouser_N = mkN "warehouser" ;
lin warehousing_N = mkN "warehousing" ;
lin warfare_N = mkN "warfare" ;
lin warfarin_N = mkN "warfarin" ;
lin warhead_N = mkN "warhead" "warheads";
lin warhorse_N = mkN "warhorse" "warhorses";
lin wariness_N = mkN "wariness" ;
lin warley_PN = mkPN "Warley";
lin warlike_A = compoundA (mkA "warlike");
lin warlock_N = mkN "warlock" ;
lin warlord_N = mkN "warlord" "warlords";
lin warm_A = mkA "warm" "warmer";
lin warm_V = mkV "warm" "warms" "warmed" "warmed" "warming";
lin warm_V2 = mkV2 (mkV "warm" "warms" "warmed" "warmed" "warming");
lin warm_blooded_A = compoundA (mkA "warm-blooded");
lin warm_hearted_A = compoundA (mkA "warm-hearted");
lin warmer_N = mkN "warmer" "warmers";
lin warmhearted_A = mkA "warmhearted" ;
lin warmheartedness_N = mkN "warmheartedness" ;
lin warming_pan_N = mkN "warming-pan" "warming-pans";
lin warminster_PN = mkPN "Warminster";
lin warmonger_N = mkN "warmonger" "warmongers";
lin warmongering_N = mkN "warmongering" ;
lin warmth_N = mkN "warmth" ;
lin warn_V = mkV "warn";
lin warn_V2 = mkV2 (mkV "warn" "warns" "warned" "warned" "warning");
lin warn_V2V = mkV2V (mkV "warn" "warns" "warned" "warned" "warning") noPrep to_Prep;
lin warn_VS = mkVS (mkV "warn");
lin warner_N = mkN "warner" ;
lin warning_N = mkN "warning" "warnings";
lin warp_N = mkN "warp" "warps";
lin warp_V = mkV "warp" "warps" "warped" "warped" "warping";
lin warp_V2 = mkV2 (mkV "warp" "warps" "warped" "warped" "warping");
lin warpaint_N = mkN "warpaint" ;
lin warpath_N = mkN "warpath" "warpaths";
lin warplane_N = mkN "warplane" ;
lin warrant_N = mkN "warrant" "warrants";
lin warrant_V2 = mkV2 (mkV "warrant" "warrants" "warranted" "warranted" "warranting");
lin warrant_VS = mkVS (mkV "warrant");
lin warrantee_N = mkN "warrantee" "warrantees";
lin warrantor_N = mkN "warrantor" "warrantors";
lin warranty_N = mkN "warranty" "warranties";
lin warren_N = mkN "warren" "warrens";
lin warrener_N = mkN "warrener" ;
lin warrigal_N = mkN "warrigal" ;
lin warrington_PN = mkPN "Warrington";
lin warrior_N = mkN "warrior" "warriors";
lin warsaw_PN = mkPN "Warsaw";
lin warship_N = mkN "warship" "warships";
lin warsop_PN = mkPN "Warsop";
lin wart_N = mkN "wart" "warts";
lin warthog_N = mkN "warthog" "warthogs";
lin wartime_N = mkN "wartime" ;
lin warwick_PN = mkPN "Warwick";
lin warwickshire_PN = mkPN "Warwickshire";
lin wary_A = mkA "wary" "warier";
lin wasabi_N = mkN "wasabi" ;
lin wash_N = mkN "wash" "washes";
lin wash_V = mkV "wash" "washes" "washed" "washed" "washing";
lin wash_V2 = mkV2 (mkV "wash" "washes" "washed" "washed" "washing");
lin wash_drawing_N = mkN "wash-drawing" "wash-drawings";
lin wash_hand_basin_N = mkN "wash-hand-basin" "wash-hand-basins";
lin wash_hand_stand_N = mkN "wash-hand-stand" "wash-hand-stands";
lin wash_house_N = mkN "wash-house" "wash-houses";
lin wash_leather_N = mkN "wash-leather" "wash-leathers";
lin washable_A = compoundA (mkA "washable");
lin washbasin_N = mkN "washbasin" "washbasins";
lin washboard_N = mkN "washboard" "washboards";
lin washbowl_N = mkN "washbowl" "washbowls";
lin washcloth_N = mkN "washcloth" "washcloths";
lin washday_N = mkN "washday" "washdays";
lin washer_N = mkN "washer" "washers";
lin washerman_N = mkN masculine (variants {mkN "washerman" "washermen"; mkN "washman" "washmen"});
lin washerwoman_N = mkN feminine (variants {mkN "washerwoman" "washerwomen"; mkN "washwoman" "washwomen"});
lin washhouse_N = mkN "washhouse" ;
lin washing_N = mkN "washing" ;
lin washing_day_N = mkN "washing-day" "washing-days";
lin washing_machine_N = mkN "washing-machine" "washing-machines";
lin washing_up_N = mkN "washing-up" "washing-ups";
lin washington_PN = mkPN "Washington";
lin washington_dc_PN = mkPN "Washington dc";
lin washout_N = mkN "washout" "washouts";
lin washroom_N = mkN "washroom" "washrooms";
lin washstand_N = mkN "washstand" "washstands";
lin washtub_N = mkN "washtub" "washtubs";
lin washup_N = mkN "washup" ;
lin washy_A = compoundA (mkA "washy");
lin wasp_N = mkN "wasp" "wasps";
lin wasp_waisted_A = compoundA (mkA "wasp-waisted");
lin waspish_A = compoundA (mkA "waspish");
lin wassail_N = mkN "wassail" "wassails";
lin wassailer_N = mkN "wassailer" ;
lin wastage_N = mkN "wastage" ;
lin waste_A = compoundA (mkA "waste");
lin waste_N = mkN "waste" "wastes";
lin waste_V = mkV "waste" "wastes" "wasted" "wasted" "wasting";
lin waste_V2 = mkV2 (mkV "waste" "wastes" "wasted" "wasted" "wasting");
lin waste_paper_basket_N = mkN "waste-paper-basket" "waste-paper-baskets";
lin waste_pipe_N = mkN "waste-pipe" "waste-pipes";
lin wastebasket_N = mkN "wastebasket" "wastebaskets";
lin wastebin_N = mkN "wastebin" "wastebins";
lin wasteful_A = compoundA (mkA "wasteful");
lin wasteland_N = mkN "wasteland" "wastelands";
lin waster_N = mkN "waster" "wasters";
lin wastrel_N = mkN "wastrel" "wastrels";
lin watch_N = mkN "watch" "watches";
lin watch_V = mkV "watch" "watches" "watched" "watched" "watching";
lin watch_V2 = mkV2 (mkV "watch" "watches" "watched" "watched" "watching");
lin watch_V2V = mkV2V (mkV "watch" "watches" "watched" "watched" "watching") noPrep to_Prep ;
lin watch_VS = mkVS (mkV "watch" "watches" "watched" "watched" "watching");
lin watch_chain_N = mkN "watch-chain" "watch-chains";
lin watch_glass_N = mkN "watch-glass" "watch-glasses";
lin watch_guard_N = mkN "watch-guard" "watch-guards";
lin watch_key_N = mkN "watch-key" "watch-keys";
lin watchband_N = mkN "watchband" ;
lin watchdog_N = mkN "watchdog" "watchdogs";
lin watcherMasc_N = mkN masculine (mkN "watcher" "watchers");
lin watcherFem_N = mkN feminine (mkN "watcher" "watchers");
lin watchful_A = compoundA (mkA "watchful");
lin watchfulness_N = mkN "watchfulness" ;
lin watchmaker_N = mkN "watchmaker" "watchmakers";
lin watchman_N = mkN masculine (mkN "watchman" "watchmen");
lin watchtower_N = mkN "watchtower" "watchtowers";
lin watchword_N = mkN "watchword" "watchwords";
lin water_N = mkN "water" "waters";
lin water_V = mkV "water" "waters" "watered" "watered" "watering";
lin water_V2 = mkV2 (mkV "water" "waters" "watered" "watered" "watering");
lin water_biscuit_N = mkN "water-biscuit" "water-biscuits";
lin water_blister_N = mkN "water-blister" "water-blisters";
lin water_bottle_N = mkN "water-bottle" "water-bottles";
lin water_buffalo_N = mkN "water-buffalo" "water-buffalos";
lin water_butt_N = mkN "water-butt" "water-butts";
lin water_cart_N = mkN "water-cart" "water-carts";
lin water_closet_N = mkN "water-closet" "water-closets";
lin water_finder_N = mkN "water-finder" "water-finders";
lin water_glass_N = mkN "water-glass" ;
lin water_hole_N = mkN "water-hole" "water-holes";
lin water_ice_N = mkN "water-ice" "water-ices";
lin water_jacket_N = mkN "water-jacket" "water-jackets";
lin water_level_N = mkN "water-level" "water-levels";
lin water_lily_N = mkN "water-lily" "water-lilies";
lin water_line_N = mkN "water-line" "water-lines";
lin water_main_N = mkN "water-main" "water-mains";
lin water_nymph_N = mkN "water-nymph" "water-nymphs";
lin water_polo_N = mkN "water-polo" ;
lin water_power_N = mkN "water-power" ;
lin water_rat_N = mkN "water-rat" "water-rats";
lin water_rate_N = mkN "water-rate" "water-rates";
lin water_skiing_N = mkN "water-skiing" ;
lin water_skin_N = mkN "water-skin" "water-skins";
lin water_softener_N = mkN "water-softener" "water-softeners";
lin water_spaniel_N = mkN "water-spaniel" "water-spaniels";
lin water_supply_N = mkN "water-supply" "water-supplies";
lin water_tower_N = mkN "water-tower" "water-towers";
lin water_vole_N = mkN "water-vole" "water-voles";
lin water_waggon_N = mkN "water-waggon" "water-waggons";
lin water_wagon_N = mkN "water-wagon" "water-wagons";
lin water_wheel_N = mkN "water-wheel" "water-wheels";
lin water_worn_A = compoundA (mkA "water-worn");
lin waterbird_N = mkN "waterbird" "waterbirds";
lin waterborne_A = compoundA (mkA "waterborne");
lin waterbuck_N = mkN "waterbuck" ;
lin watercannon_N = mkN "watercannon" "watercannons";
lin waterchute_N = mkN "waterchute" "waterchutes";
lin watercolor_N = mkN "watercolor" ;
lin watercolorist_N = mkN "watercolorist" ;
lin watercolour_N = mkN "watercolour" "watercolours";
lin watercolourist_N = mkN "watercolourist" "watercolourists";
lin watercourse_N = mkN "watercourse" "watercourses";
lin watercraft_N = mkN "watercraft" ;
lin watercress_N = mkN "watercress" ;
lin waterdog_N = mkN "waterdog" ;
lin waterer_N = mkN "waterer" ;
lin waterfall_N = mkN "waterfall" "waterfalls";
lin waterford_PN = mkPN "Waterford";
lin waterfowl_N = mkN "waterfowl" "waterfowls";
lin waterfront_N = mkN "waterfront" "waterfronts";
lin waterhen_N = mkN "waterhen" "waterhens";
lin waterhyacinth_N = mkN "waterhyacinth" "waterhyacinths";
lin wateriness_N = mkN "wateriness" ;
lin watering_N = mkN "watering" ;
lin watering_can_N = mkN "watering-can" "watering-cans";
lin watering_cart_N = mkN "watering-cart" "watering-carts";
lin waterleaf_N = mkN "waterleaf" ;
lin waterless_A = compoundA (mkA "waterless");
lin waterline_N = mkN "waterline" ;
lin waterlogged_A = compoundA (mkA "waterlogged");
lin waterloo_N = mkN "waterloo" ;
lin waterloo_PN = mkPN "Waterloo";
lin waterman_N = mkN masculine (mkN "waterman" "watermen");
lin watermark_N = mkN "watermark" "watermarks";
lin watermeal_N = mkN "watermeal" ;
lin watermelon_N = mkN "watermelon" "watermelons";
lin watermill_N = mkN "watermill" "watermills";
lin waterpower_N = mkN "waterpower" ;
lin waterproof_A = compoundA (mkA "waterproof");
lin waterproof_N = mkN "waterproof" "waterproofs";
lin waterproof_V2 = mkV2 (mkV "waterproof" "waterproofs" "waterproofed" "waterproofed" "waterproofing");
lin waterproofing_N = mkN "waterproofing" ;
lin watershed_N = mkN "watershed" "watersheds";
lin waterside_N = mkN "waterside" "watersides";
lin waterskin_N = mkN "waterskin" ;
lin waterspout_N = mkN "waterspout" "waterspouts";
lin watertable_N = mkN "watertable" "watertables";
lin watertight_A = compoundA (mkA "watertight");
lin waterway_N = mkN "waterway" "waterways";
lin waterweed_N = mkN "waterweed" ;
lin waterwheel_N = mkN "waterwheel" ;
lin waterworks_N = mkN "waterworks" "waterworks";
lin waterworn_A = mkA "waterworn" ;
lin watery_A = mkA "watery" "waterier";
lin watford_PN = mkPN "Watford";
lin watt_N = mkN "watt" "watts";
lin wattage_N = mkN "wattage" "wattages";
lin wattle_N = mkN "wattle" "wattles";
lin wattmeter_N = mkN "wattmeter" ;
lin wave_N = mkN "wave" "waves";
lin wave_V = mkV "wave" "waves" "waved" "waved" "waving";
lin wave_V2 = mkV2 (mkV "wave" "waves" "waved" "waved" "waving");
lin waveguide_N = mkN "waveguide" ;
lin wavelength_N = mkN "wavelength" "wavelengths";
lin waver_N = mkN "waver" ;
lin waver_V = mkV "waver" "wavers" "wavered" "wavered" "wavering";
lin waverer_N = mkN "waverer" "waverers";
lin waviness_N = mkN "waviness" ;
lin wavy_A = mkA "wavy" "wavier";
lin waw_N = mkN "waw" ;
lin wax_N = mkN "wax" "waxes";
lin wax_V = mkV "wax" "waxes" "waxed" "waxed" "waxing";
lin wax_V2 = mkV2 (mkV "wax" "waxes" "waxed" "waxed" "waxing");
lin wax_chandler_N = mkN "wax-chandler" "wax-chandlers";
lin wax_paper_N = mkN "wax-paper" "wax-papers";
lin waxen_A = compoundA (mkA "waxen");
lin waxflower_N = mkN "waxflower" ;
lin waxiness_N = mkN "waxiness" ;
lin waxing_N = mkN "waxing" ;
lin waxmallow_N = mkN "waxmallow" ;
lin waxwing_N = mkN "waxwing" ;
lin waxwork_N = mkN "waxwork" "waxworks";
lin waxy_A = mkA "waxy" "waxier";
lin waxycap_N = mkN "waxycap" ;
lin way_Adv = mkAdv "way";
lin way_N = mkN "way" "ways";
lin way_out_A = compoundA (mkA "way-out");
lin waybill_N = mkN "waybill" "waybills";
lin wayfarer_N = mkN "wayfarer" "wayfarers";
lin wayfaring_A = compoundA (mkA "wayfaring");
lin wayfaring_N = mkN "wayfaring" ;
lin waylay_V2 = mkV2 (mkV "way" IrregEng.lay_V);
lin wayne_PN = mkPN "Wayne";
lin ways_N = mkN "ways" ;
lin wayside_N = mkN "wayside" "waysides";
lin wayward_A = compoundA (mkA "wayward");
lin wc_N = mkN "WC" "WCs" ;
lin we_Pron = mkPron "we" "us" "our" "ours" plural P1 human ;
lin weak_A = mkA "weak" "weaker";
lin weak_kneed_A = compoundA (mkA "weak-kneed");
lin weaken_V = mkV "weaken" "weakens" "weakened" "weakened" "weakening";
lin weaken_V2 = mkV2 (mkV "weaken" "weakens" "weakened" "weakened" "weakening");
lin weakener_N = mkN "weakener" ;
lin weakening_N = mkN "weakening" ;
lin weakfish_N = mkN "weakfish" ;
lin weakling_N = mkN "weakling" "weaklings";
lin weakly_A = mkA "weakly" "weaklier";
lin weakness_N = mkN "weakness" "weaknesses";
lin weal_N = mkN "weal" "weals";
lin weald_N = mkN "weald" "wealds";
lin wealth_N = mkN "wealth" ;
lin wealthy_A = mkA "wealthy" "wealthier";
lin wean_V2 = mkV2 (mkV "wean" "weans" "weaned" "weaned" "weaning");
lin weaning_N = mkN "weaning" ;
lin weapon_N = mkN "weapon" "weapons";
lin weaponless_A = compoundA (mkA "weaponless");
lin weaponry_N = mkN "weaponry" ;
lin wear_N = mkN "wear" ;
lin wear_PN = mkPN "Wear";
lin wear_V = IrregEng.wear_V;
lin wear_V2 = mkV2 (IrregEng.wear_V);
lin wearable_A = compoundA (mkA "wearable");
lin wearer_N = mkN "wearer" "wearers";
lin weariness_N = mkN "weariness" ;
lin wearisome_A = compoundA (mkA "wearisome");
lin weary_A = mkA "weary" "wearier";
lin weary_V = mkV "weary" "wearies" "wearied" "wearied" "wearying";
lin weary_V2 = mkV2 (mkV "weary" "wearies" "wearied" "wearied" "wearying");
lin weasel_N = mkN "weasel" "weasels";
lin weather_N = mkN "weather" "weathers";
lin weather_V = mkV "weather" "weathers" "weathered" "weathered" "weathering";
lin weather_V2 = mkV2 (mkV "weather" "weathers" "weathered" "weathered" "weathering");
lin weather_beaten_A = compoundA (mkA "weather-beaten");
lin weather_bound_A = compoundA (mkA "weather-bound");
lin weather_bureau_N = mkN "weather-bureau" "weather-bureaus";
lin weather_chart_N = mkN "weather-chart" "weather-charts";
lin weather_glass_N = mkN "weather-glass" "weather-glasses";
lin weather_map_N = mkN "weather-map" "weather-maps";
lin weather_ship_N = mkN "weather-ship" "weather-ships";
lin weather_station_N = mkN "weather-station" "weather-stations";
lin weather_vane_N = mkN "weather-vane" "weather-vanes";
lin weatherboarding_N = mkN "weatherboarding" ;
lin weathercock_N = mkN "weathercock" "weathercocks";
lin weatherglass_N = mkN "weatherglass" ;
lin weatherliness_N = mkN "weatherliness" ;
lin weatherly_A = mkA "weatherly" ;
lin weatherman_N = mkN masculine (mkN "weatherman" "weathermen");
lin weatherproof_A = compoundA (mkA "weatherproof");
lin weathervane_N = mkN "weathervane" ;
lin weave_N = mkN "weave" "weaves";
lin weave_V = IrregEng.weave_V;
lin weave_V2 = mkV2 (IrregEng.weave_V);
lin weaver_N = mkN "weaver" "weavers";
lin weaverbird_N = mkN "weaverbird" "weaverbirds";
lin weaving_N = mkN "weaving" ;
lin web_N = mkN "web" "webs";
lin web_footed_A = compoundA (mkA "web-footed");
lin web_toed_A = compoundA (mkA "web-toed");
lin webbed_A = compoundA (mkA "webbed");
lin webbing_N = mkN "webbing" ;
lin webcam_N = mkN "webcam" ;
lin weber_N = mkN "weber" ;
lin webfoot_N = mkN "webfoot" ;
lin webmaster_N = mkN "webmaster" ;
lin webworm_N = mkN "webworm" ;
lin wed_A = mkA "wed";
lin wed_PN = mkPN "Wed";
lin wed_V = mkV "wed" "weds" "wedded" "wedded" "wedding";
lin wed_V2 = mkV2 (mkV "wed" "weds" "wedded" "wedded" "wedding");
lin wedding_N = mkN "wedding" "weddings";
lin wedding_cake_N = mkN "wedding-cake" "wedding-cakes";
lin wedding_ring_N = mkN "wedding-ring" "wedding-rings";
lin wedge_N = mkN "wedge" "wedges";
lin wedge_V = mkV "wedge" "wedges" "wedged" "wedged" "wedging";
lin wedge_V2 = mkV2 (mkV "wedge" "wedges" "wedged" "wedged" "wedging");
lin wedgie_N = mkN "wedgie" ;
lin wedlock_N = mkN "wedlock" ;
lin wednesday_N = mkN "Wednesday" "Wednesdays";
lin wednesday_PN = mkPN "Wednesday";
lin wee_A = compoundA (mkA "wee");
lin wee_N = mkN "wee" "wees";
lin wee_V = mkV "wee" "wees" "weed" "weed" "weeing";
lin wee_wee_N = mkN "wee-wee" "wee-wees";
lin weed_N = mkN "weed" "weeds";
lin weed_V = mkV "weed" "weeds" "weeded" "weeded" "weeding";
lin weed_V2 = mkV2 (mkV "weed" "weeds" "weeded" "weeded" "weeding");
lin weeder_N = mkN "weeder" ;
lin weedkiller_N = mkN "weedkiller" "weedkillers";
lin weedless_A = mkA "weedless" ;
lin weeds_N = mkN "weeds" ;
lin weedy_A = mkA "weedy" "weedier";
lin week_N = mkN "week" "weeks";
lin weekday_N = mkN "weekday" "weekdays";
lin weekend_N = mkN "weekend" "weekends";
lin weekend_V = mkV "weekend" "weekends" "weekended" "weekended" "weekending";
lin weekender_N = mkN "weekender" "weekenders";
lin weeklong_A = mkA "weeklong" ;
lin weekly_A = compoundA (mkA "weekly");
lin weekly_Adv = mkAdv "weekly";
lin weekly_N = mkN "weekly" "weeklies";
lin weeknight_N = mkN "weeknight" ;
lin weeny_A = mkA "weeny" "weenier";
lin weep_V = IrregEng.weep_V;
lin weep_V2 = mkV2 (IrregEng.weep_V);
lin weeper_N = mkN "weeper" ;
lin weepiness_N = mkN "weepiness" ;
lin weepy_A = mkA "weepy" ;
lin weevil_N = mkN "weevil" "weevils";
lin weft_N = mkN "weft" "wefts";
lin weigela_N = mkN "weigela" ;
lin weigh_V = mkV "weigh" "weighs" "weighed" "weighed" "weighing";
lin weigh_V2 = mkV2 (mkV "weigh" "weighs" "weighed" "weighed" "weighing");
lin weighbridge_N = mkN "weighbridge" "weighbridges";
lin weigher_N = mkN "weigher" ;
lin weighing_machine_N = mkN "weighing-machine" "weighing-machines";
lin weight_N = mkN "weight" "weights";
lin weight_V2 = mkV2 (mkV "weight" "weights" "weighted" "weighted" "weighting");
lin weightiness_N = mkN "weightiness" ;
lin weightless_A = compoundA (mkA "weightless");
lin weightlessness_N = mkN "weightlessness" ;
lin weightlift_N = mkN "weightlift" ;
lin weightlifter_N = mkN "weightlifter" ;
lin weightlifting_N = mkN "weightlifting" ;
lin weighty_A = mkA "weighty" "weightier";
lin weir_N = mkN "weir" "weirs";
lin weird_A = mkA "weird" "weirder";
lin weirdie_N = mkN "weirdie" "weirdies";
lin weirdness_N = mkN "weirdness" ;
lin weka_N = mkN "weka" ;
lin welcher_N = mkN "welcher" ;
lin welcome_A = compoundA (mkA "welcome");
lin welcome_N = mkN "welcome" "welcomes";
lin welcome_V2 = mkV2 (mkV "welcome" "welcomes" "welcomed" "welcomed" "welcoming");
lin welcoming_A = mkA "welcoming" ;
lin weld_N = mkN "weld" "welds";
lin weld_V = mkV "weld" "welds" "welded" "welded" "welding";
lin weld_V2 = mkV2 (mkV "weld" "welds" "welded" "welded" "welding");
lin welder_N = mkN "welder" "welders";
lin welding_N = mkN "welding" ;
lin weldment_N = mkN "weldment" ;
lin welfare_N = mkN "welfare" ;
lin welfarist_A = mkA "welfarist" ;
lin welkin_N = mkN "welkin" "IRREG";
lin well_A = compoundA (mkA "well");
lin well_Interj = ss "well";
lin well_N = mkN "well" "wells";
lin well_V = mkV "well" "wells" "welled" "welled" "welling";
lin well_adjusted_A = compoundA (mkA "well-adjusted");
lin well_advised_A = compoundA (mkA "well-advised");
lin well_appointed_A = compoundA (mkA "well-appointed");
lin well_balanced_A = compoundA (mkA "well-balanced");
lin well_behaved_A = compoundA (mkA "well-behaved");
lin well_being_N = mkN "well-being" ;
lin well_born_A = compoundA (mkA "well-born");
lin well_bred_A = compoundA (mkA "well-bred");
lin well_conducted_A = compoundA (mkA "well-conducted");
lin well_connected_A = compoundA (mkA "well-connected");
lin well_disposed_A = compoundA (mkA "well-disposed");
lin well_doer_N = mkN "well-doer" "well-doers";
lin well_doing_N = mkN "well-doing" ;
lin well_favoured_A = compoundA (mkA "well-favoured");
lin well_found_A = compoundA (mkA "well-found");
lin well_founded_A = compoundA (mkA "well-founded");
lin well_groomed_A = compoundA (mkA "well-groomed");
lin well_grounded_A = compoundA (mkA "well-grounded");
lin well_heeled_A = compoundA (mkA "well-heeled");
lin well_informed_A = compoundA (mkA "well-informed");
lin well_intentioned_A = compoundA (mkA "well-intentioned");
lin well_knit_A = compoundA (mkA "well-knit");
lin well_known_A = compoundA (mkA "well-known");
lin well_lined_A = compoundA (mkA "well-lined");
lin well_marked_A = compoundA (mkA "well-marked");
lin well_meaning_A = compoundA (mkA "well-meaning");
lin well_meant_A = compoundA (mkA "well-meant");
lin well_nigh_Adv = mkAdv "well-nigh";
lin well_read_A = compoundA (mkA "well-read");
lin well_rounded_A = compoundA (mkA "well-rounded");
lin well_set_A = compoundA (mkA "well-set");
lin well_shaven_A = compoundA (mkA "well-shaven");
lin well_spoken_A = compoundA (mkA "well-spoken");
lin well_timed_A = compoundA (mkA "well-timed");
lin well_to_do_A = compoundA (mkA "well-to-do");
lin well_tried_A = compoundA (mkA "well-tried");
lin well_turned_A = compoundA (mkA "well-turned");
lin well_water_N = mkN "well-water" ;
lin well_wisher_N = mkN "well-wisher" "well-wishers";
lin well_worn_A = compoundA (mkA "well-worn");
lin wellbeing_N = mkN "wellbeing" ;
lin wellborn_A = mkA "wellborn" ;
lin wellerism_N = mkN "wellerism" ;
lin wellhead_N = mkN "wellhead" "wellheads";
lin wellingborough_PN = mkPN "Wellingborough";
lin wellington_N = mkN "wellington" "wellingtons";
lin wellington_PN = mkPN "Wellington";
lin wells_PN = mkPN "Wells";
lin welsh_A = compoundA (mkA "welsh");
lin welsh_N = mkN "welsh" ;
lin welsh_V = mkV "welsh" "welshes" "welshed" "welshed" "welshing";
lin welsher_N = mkN "welsher" "welshers";
lin welshman_N = mkN masculine (mkN "welshman" "welshmen");
lin welshpool_PN = mkPN "Welshpool";
lin welt_N = mkN "welt" "welts";
lin welter_A = compoundA (mkA "welter");
lin welter_N = mkN "welter" "IRREG";
lin welter_V = mkV "welter" "welters" "weltered" "weltered" "weltering";
lin welterweight_N = mkN "welterweight" "welterweights";
lin welwitschia_N = mkN "welwitschia" ;
lin welwyn_PN = mkPN "Welwyn";
lin welwyn_garden_city_PN = mkPN "Welwyn garden city";
lin wen_N = mkN "wen" "wens";
lin wench_N = mkN "wench" "wenches";
lin wench_V = mkV "wench" "wenches" "wenched" "wenched" "wenching";
lin wencher_N = mkN "wencher" ;
lin wend_V2 = mkV2 (mkV "wend" "wends" "wended" "wended" "wending");
lin wendover_PN = mkPN "Wendover";
lin wendy_PN = mkPN "Wendy";
lin werewolf_N = mkN "werewolf" "werewolves" {- FIXME: guessed plural form -};
lin wesleyan_A = compoundA (mkA "wesleyan");
lin wesleyan_N = mkN "wesleyan" "wesleyans";
lin west_A = mkA "West";
lin west_Adv = mkAdv "West";
lin west_N = mkN "West";
lin west_bromwich_PN = mkPN "West bromwich";
lin west_country_A = compoundA (mkA "west-country");
lin west_end_A = compoundA (mkA "west-end");
lin westbound_A = mkA "westbound" ;
lin westbury_PN = mkPN "Westbury";
lin westerly_A = compoundA (mkA "westerly");
lin westerly_Adv = mkAdv "westerly";
lin western_A = compoundA (mkA "Western");
lin western_N = mkN "western" "westerns";
lin westerner_N = mkN "westerner" "westerners";
lin westernization_N = mkN "westernization" ;
lin westernize_V2 = mkV2 (mkV "westernize" "westernizes" "westernized" "westernized" "westernizing");
lin westernmost_A = compoundA (mkA "westernmost");
lin westhoughton_PN = mkPN "Westhoughton";
lin westmeath_PN = mkPN "Westmeath";
lin westminster_PN = mkPN "Westminster";
lin westmoreland_PN = mkPN "Westmoreland";
lin weston_super_mare_PN = mkPN "Weston-super-mare";
lin westside_A = mkA "westside" ;
lin westward_A = compoundA (mkA "westward");
lin westward_Adv = mkAdv "westward";
lin westwards_Adv = mkAdv "westwards";
lin wet_A = mkA "wet" "wetter";
lin wet_N = mkN "wet" ;
lin wet_V2 = mkV2 (mkV "wet" "wets" "wetted" "wetted" "wetting");
lin wet_nurse_N = mkN "wet-nurse" "wet-nurses";
lin wether_N = mkN "wether" "wethers";
lin wetherby_PN = mkPN "Wetherby";
lin wetland_N = mkN "wetland" ;
lin wetness_N = mkN "wetness" ;
lin wetter_N = mkN "wetter" ;
lin wetting_N = mkN "wetting" "wettings";
lin wexford_PN = mkPN "Wexford";
lin weymouth_PN = mkPN "Weymouth";
lin whack_N = mkN "whack" "whacks";
lin whack_V2 = mkV2 (mkV "whack" "whacks" "whacked" "whacked" "whacking");
lin whacker_N = mkN "whacker" "whackers";
lin whacking_Adv = mkAdv "whacking";
lin whacking_N = mkN "whacking" "whackings";
lin whale_N = mkN "whale" "whales";
lin whale_V = mkV "whale" "whales" "whaled" "whaled" "whaling";
lin whaleboat_N = mkN "whaleboat" ;
lin whalebone_N = mkN "whalebone" ;
lin whaler_N = mkN "whaler" "whalers";
lin whaley_bridge_PN = mkPN "Whaley bridge";
lin whaling_gun_N = mkN "whaling-gun" "whaling-guns";
lin whammy_N = mkN "whammy" ;
lin whang_Adv = mkAdv "whang";
lin whang_N = mkN "whang" "whangs";
lin whang_V2 = mkV2 (mkV "whang" "whangs" "whanged" "whanged" "whanging");
lin wharf_N = mkN "wharf" "wharfs";
lin wharfage_N = mkN "wharfage" ;
lin whatPl_IP = mkIP "what" "what" "what's" plural ;
lin whatSg_IP = mkIP "what" "what" "what's" singular ;
lin what_for_N = mkN "what-for" ;
lin whate'er_A = compoundA (mkA "whate'er");
lin whatever_A = compoundA (mkA "whatever");
lin whatnot_N = mkN "whatnot" ;
lin whatsoe'er_A = compoundA (mkA "whatsoe'er");
lin whatsoever_A = compoundA (mkA "whatsoever");
lin wheat_N = mkN "wheat" ;
lin wheatear_N = mkN "wheatear" ;
lin wheaten_A = compoundA (mkA "wheaten");
lin wheatfield_N = mkN "wheatfield" ;
lin wheatflake_N = mkN "wheatflake" ;
lin wheatgrass_N = mkN "wheatgrass" ;
lin wheatley_hill_PN = mkPN "Wheatley hill";
lin wheatworm_N = mkN "wheatworm" ;
lin wheedle_V2 = mkV2 (mkV "wheedle" "wheedles" "wheedled" "wheedled" "wheedling");
lin wheedler_N = mkN "wheedler" ;
lin wheel_N = mkN "wheel" "wheels";
lin wheel_V = mkV "wheel" "wheels" "wheeled" "wheeled" "wheeling";
lin wheel_V2 = mkV2 (mkV "wheel" "wheels" "wheeled" "wheeled" "wheeling");
lin wheelbarrow_N = mkN "wheelbarrow" "wheelbarrows";
lin wheelbase_N = mkN "wheelbase" "wheelbases";
lin wheelchair_N = mkN "wheelchair" "wheelchairs";
lin wheeler_N = mkN "wheeler" ;
lin wheelhouse_N = mkN "wheelhouse" "IRREG";
lin wheeling_N = mkN "wheeling" ;
lin wheelless_A = mkA "wheelless" ;
lin wheelwork_N = mkN "wheelwork" ;
lin wheelwright_N = mkN "wheelwright" "wheelwrights";
lin wheeze_N = mkN "wheeze" "wheezes";
lin wheeze_V = mkV "wheeze" "wheezes" "wheezed" "wheezed" "wheezing";
lin wheeze_V2 = mkV2 (mkV "wheeze" "wheezes" "wheezed" "wheezed" "wheezing");
lin wheeziness_N = mkN "wheeziness" ;
lin wheezy_A = mkA "wheezy" "wheezier";
lin whelk_N = mkN "whelk" "whelks";
lin whelp_N = mkN "whelp" "whelps";
lin whelp_V = mkV "whelp" "whelps" "whelped" "whelped" "whelping";
lin when_IAdv = {s="when"};
lin when_Subj = mkSubj "when";
lin whence_Adv = mkAdv "whence";
lin whencesoever_A = compoundA (mkA "whencesoever");
lin whenever_Adv = mkAdv "whenever";
lin where_IAdv = {s="where"};
lin where_Subj = mkSubj "where";
lin whereabouts_Adv = mkAdv "whereabouts";
lin whereabouts_N = mkN "whereabouts" ;
lin whereas_Prep = mkPrep "whereas";
lin whereat_Adv = mkAdv "whereat";
lin whereby_Adv = mkAdv "whereby";
lin wherefore_Adv = mkAdv "wherefore";
lin wherein_IAdv = {s="wherein"};
lin wherein_Subj = mkSubj "wherein";
lin whereof_Adv = mkAdv "whereof";
lin whereon_Adv = mkAdv "whereon";
lin wheresoever_Adv = mkAdv "wheresoever";
lin whereto_Adv = mkAdv "whereto";
lin whereunto_Adv = mkAdv "whereunto";
lin whereupon_Adv = mkAdv "whereupon";
lin wherever_Adv = mkAdv "wherever";
lin wherewith_Adv = mkAdv "wherewith";
lin wherewithal_Adv = mkAdv "wherewithal";
lin wherewithal_N = mkN "wherewithal" ;
lin wherry_N = mkN "wherry" "wherries";
lin whet_V2 = mkV2 (mkV "whet" "whets" "whetted" "whetted" "whetting");
lin whether_Prep = mkPrep "whether";
lin whetstone_N = mkN "whetstone" "whetstones";
lin whey_N = mkN "whey" ;
lin which_IQuant = {s = \\_ => "which"} ;
lin whichever_A = compoundA (mkA "whichever");
lin whichsoever_A = compoundA (mkA "whichsoever");
lin whiff_N = mkN "whiff" "whiffs";
lin whiffer_N = mkN "whiffer" ;
lin whiffletree_N = mkN "whiffletree" ;
lin whig_N = mkN "whig" "whigs";
lin while_N = mkN "while" "whiles";
lin while_Subj = mkSubj "while";
lin while_V2 = mkV2 (mkV "while" "whiles" "whiled" "whiled" "whiling");
lin whilst_Subj = mkSubj "whilst";
lin whim_N = mkN "whim" "whims";
lin whimper_N = mkN "whimper" "whimpers";
lin whimper_V = mkV "whimper" "whimpers" "whimpered" "whimpered" "whimpering";
lin whimper_V2 = mkV2 (mkV "whimper" "whimpers" "whimpered" "whimpered" "whimpering");
lin whimsey_N = mkN "whimsey" "whimseys";
lin whimsical_A = compoundA (mkA "whimsical");
lin whimsicality_N = mkN "whimsicality" "whimsicalities";
lin whimsy_N = mkN "whimsy" "whimsies";
lin whin_N = mkN "whin" ;
lin whinchat_N = mkN "whinchat" ;
lin whine_N = mkN "whine" "whines";
lin whine_V = mkV "whine" "whines" "whined" "whined" "whining";
lin whine_V2 = mkV2 (mkV "whine" "whines" "whined" "whined" "whining");
lin whiner_N = mkN "whiner" "whiners";
lin whinny_N = mkN "whinny" "whinnies";
lin whinny_V = mkV "whinny" "whinnies" "whinnied" "whinnied" "whinnying";
lin whinstone_N = mkN "whinstone" ;
lin whip_N = mkN "whip" "whips";
lin whip_V = mkV "whip" "whips" "whipped" "whipped" "whipping";
lin whip_V2 = mkV2 (mkV "whip" "whips" "whipped" "whipped" "whipping");
lin whip_round_N = mkN "whip-round" "whip-rounds";
lin whipcord_N = mkN "whipcord" ;
lin whiplash_N = mkN "whiplash" ;
lin whipper_in_N = mkN "whipper-in" "IRREG";
lin whippersnapper_N = mkN "whippersnapper" "whippersnappers";
lin whippet_N = mkN "whippet" "whippets";
lin whipping_N = mkN "whipping" "whippings";
lin whipping_boy_N = mkN "whipping-boy" "whipping-boys";
lin whipping_post_N = mkN "whipping-post" "whipping-posts";
lin whipping_top_N = mkN "whipping-top" "whipping-tops";
lin whippoorwill_N = mkN "whippoorwill" "whippoorwills";
lin whippy_A = mkA "whippy" "whippier";
lin whipsaw_V2 = mkV2 (mkV "whipsaw");
lin whipstitch_N = mkN "whipstitch" ;
lin whiptail_N = mkN "whiptail" ;
lin whir_N = mkN "whir" "IRREG";
lin whir_V = mkV "whir" "whirs" "whirred" "whirred" "whirring";
lin whirl_N = mkN "whirl" "IRREG";
lin whirl_V = mkV "whirl" "whirls" "whirled" "whirled" "whirling";
lin whirl_V2 = mkV2 (mkV "whirl" "whirls" "whirled" "whirled" "whirling");
lin whirler_N = mkN "whirler" ;
lin whirligig_N = mkN "whirligig" "whirligigs";
lin whirlpool_N = mkN "whirlpool" "whirlpools";
lin whirlwind_N = mkN "whirlwind" "whirlwinds";
lin whirr_N = mkN "whirr" "IRREG";
lin whirr_V = mkV "whirr" "whirrs" "whirred" "whirred" "whirring";
lin whisk_N = mkN "whisk" "whisks";
lin whisk_V = mkV "whisk" "whisks" "whisked" "whisked" "whisking";
lin whisk_V2 = mkV2 (mkV "whisk" "whisks" "whisked" "whisked" "whisking");
lin whisker_N = mkN "whisker" "whiskers";
lin whiskered_A = compoundA (mkA "whiskered");
lin whiskey_N = mkN "whiskey" "whiskeys";
lin whisky_N = mkN "whisky" "whiskies";
lin whisper_N = mkN "whisper" "whispers";
lin whisper_V = mkV "whisper" "whispers" "whispered" "whispered" "whispering";
lin whisper_V2 = mkV2 (mkV "whisper" "whispers" "whispered" "whispered" "whispering");
lin whisperer_N = mkN "whisperer" "whisperers";
lin whispering_N = mkN "whispering" "whisperings";
lin whispering_gallery_N = mkN "whispering-gallery" "whispering-galleries";
lin whist_N = mkN "whist" ;
lin whist_drive_N = mkN "whist-drive" "whist-drives";
lin whistle_N = mkN "whistle" "whistles";
lin whistle_V = mkV "whistle" "whistles" "whistled" "whistled" "whistling";
lin whistle_V2 = mkV2 (mkV "whistle" "whistles" "whistled" "whistled" "whistling");
lin whistle_stop_N = mkN "whistle-stop" "whistle-stops";
lin whistler_N = mkN "whistler" ;
lin whistling_N = mkN "whistling" ;
lin whit_N = mkN "whit" "whits";
lin whitburn_PN = mkPN "Whitburn";
lin whitby_PN = mkPN "Whitby";
lin whitchurch_PN = mkPN "Whitchurch";
lin white_A = mkA "white" "whiter";
lin white_N = mkN "white" "whites";
lin white_collar_A = compoundA (mkA "white-collar");
lin white_hot_A = compoundA (mkA "white-hot");
lin white_lipped_A = compoundA (mkA "white-lipped");
lin white_livered_A = compoundA (mkA "white-livered");
lin whitebait_N = mkN "whitebait" ;
lin whitecap_N = mkN "whitecap" ;
lin whitecup_N = mkN "whitecup" ;
lin whiteface_N = mkN "whiteface" ;
lin whitefish_N = mkN "whitefish" ;
lin whitefly_N = mkN "whitefly" ;
lin whitehall_PN = mkPN "Whitehall";
lin whitehaven_PN = mkPN "Whitehaven";
lin whitehead_N = mkN "whitehead" ;
lin whitelash_N = mkN "whitelash" ;
lin whiten_V = mkV "whiten" "whitens" "whitened" "whitened" "whitening";
lin whiten_V2 = mkV2 (mkV "whiten" "whitens" "whitened" "whitened" "whitening");
lin whiteness_N = mkN "whiteness" ;
lin whitening_N = mkN "whitening" ;
lin whiteout_N = mkN "whiteout" ;
lin whitethorn_N = mkN "whitethorn" "whitethorns";
lin whitewash_N = mkN "whitewash" ;
lin whitewash_V2 = mkV2 (mkV "whitewash" "whitewashes" "whitewashed" "whitewashed" "whitewashing");
lin whitey_N = mkN "whitey" ;
lin whither_Adv = mkAdv "whither";
lin whithersoever_Adv = mkAdv "whithersoever";
lin whiting_N = mkN "whiting" "whiting";
lin whitish_A = compoundA (mkA "whitish");
lin whitley_bay_PN = mkPN "Whitley bay";
lin whitlow_N = mkN "whitlow" "whitlows";
lin whitlowwort_N = mkN "whitlowwort" ;
lin whitstable_PN = mkPN "Whitstable";
lin whitsun_N = mkN "whitsun" "whitsuns";
lin whitsun_PN = mkPN "Whitsun";
lin whitsuntide_N = mkN "whitsuntide" "whitsuntides";
lin whitsuntide_PN = mkPN "Whitsuntide";
lin whittle_V = mkV "whittle" "whittles" "whittled" "whittled" "whittling";
lin whittle_V2 = mkV2 (mkV "whittle" "whittles" "whittled" "whittled" "whittling");
lin whittle_le_woods_PN = mkPN "Whittle-le-woods";
lin whittler_N = mkN "whittler" ;
lin whittlesey_PN = mkPN "Whittlesey";
lin whitworth_PN = mkPN "Whitworth";
lin whiz_N = mkN "whiz" ;
lin whiz_V = mkV "whiz" "IRREG" "IRREG" "IRREG" "IRREG";
lin whizbang_N = mkN "whizbang" ;
lin whizz_kid_N = mkN "whizz-kid" "whizz-kids";
lin whoPl_IP = mkIP "who" "whom" "whose" plural ;
lin whoSg_IP = mkIP "who" "whom" "whose" singular ;
lin who_N = mkN "who" ;
lin whodunit_N = mkN "whodunit" "whodunits";
lin whole_A = compoundA (mkA "whole");
lin whole_N = mkN "whole" "wholes";
lin whole_wheat_N = mkN "whole-wheat" ;
lin wholehearted_A = compoundA (mkA "wholehearted");
lin wholeheartedness_N = mkN "wholeheartedness" ;
lin wholemeal_N = mkN "wholemeal" ;
lin wholeness_N = mkN "wholeness" ;
lin wholesale_A = compoundA (mkA "wholesale");
lin wholesale_Adv = mkAdv "wholesale";
lin wholesale_N = mkN "wholesale" ;
lin wholesale_V2 = mkV2 (mkV "wholesale");
lin wholesaler_N = mkN "wholesaler" "wholesalers";
lin wholesome_A = compoundA (mkA "wholesome");
lin wholesomeness_N = mkN "wholesomeness" ;
lin wholly_Adv = mkAdv "wholly";
lin whoop_N = mkN "whoop" "whoops";
lin whoop_V = mkV "whoop" "whoops" "whooped" "whooped" "whooping";
lin whoop_V2 = mkV2 (mkV "whoop" "whoops" "whooped" "whooped" "whooping");
lin whoopee_Interj = ss "whoopee";
lin whooper_N = mkN "whooper" ;
lin whooping_cough_N = mkN "whooping-cough" ;
lin whop_V2 = mkV2 (mkV "whop" "whops" "whopped" "whopped" "whopping");
lin whopper_N = mkN "whopper" "whoppers";
lin whopping_A = compoundA (mkA "whopping");
lin whopping_Adv = mkAdv "whopping";
lin whore_N = mkN "whore" "whores";
lin whorehouse_N = mkN "whorehouse" ;
lin whoremaster_N = mkN "whoremaster" ;
lin whoremonger_N = mkN "whoremonger" "whoremongers";
lin whorl_N = mkN "whorl" "whorls";
lin whorled_A = compoundA (mkA "whorled");
lin why_IAdv = {s="why"};
lin why_N = mkN "why" "whys";
lin whydah_N = mkN "whydah" ;
lin wi_N = mkN "wi" ;
lin wick_N = mkN "wick" "wicks";
lin wick_PN = mkPN "Wick";
lin wicked_A = compoundA (mkA "wicked");
lin wickedness_N = mkN "wickedness" ;
lin wicker_N = mkN "wicker" ;
lin wickerwork_N = mkN "wickerwork" ;
lin wicket_N = mkN "wicket" "wickets";
lin wicket_door_N = mkN "wicket-door" "wicket-doors";
lin wicket_gate_N = mkN "wicket-gate" "wicket-gates";
lin wicket_keeper_N = mkN "wicket-keeper" "wicket-keepers";
lin wickford_PN = mkPN "Wickford";
lin wickiup_N = mkN "wickiup" ;
lin wicklow_PN = mkPN "Wicklow";
lin wide_A = mkA "wide" "wider";
lin wide_Adv = mkAdv "wide";
lin wide_awake_A = compoundA (mkA "wide-awake");
lin widen_V = mkV "widen" "widens" "widened" "widened" "widening";
lin widen_V2 = mkV2 (mkV "widen" "widens" "widened" "widened" "widening");
lin wideness_N = mkN "wideness" ;
lin widening_N = mkN "widening" ;
lin widespread_A = compoundA (mkA "widespread");
lin widgeon_N = mkN "widgeon" "widgeons";
lin widnes_PN = mkPN "Widnes";
lin widow_N = mkN "widow" "widows";
lin widowed_A = compoundA (mkA "widowed");
lin widower_N = mkN "widower" "widowers";
lin widowhood_N = mkN "widowhood" ;
lin width_N = mkN "width" "widths";
lin wield_V2 = mkV2 (mkV "wield" "wields" "wielded" "wielded" "wielding");
lin wieldy_A = mkA "wieldy" ;
lin wiesbaden_PN = mkPN "Wiesbaden";
lin wiesenboden_N = mkN "wiesenboden" ;
lin wife_N = mkN feminine (mkN "wife" "wives");
lin wifelike_A = compoundA (mkA "wifelike");
lin wifely_A = mkA "wifely" "wifelier";
lin wig_N = mkN "wig" "wigs";
lin wigan_PN = mkPN "Wigan";
lin wigged_A = compoundA (mkA "wigged");
lin wigging_N = mkN "wigging" "wiggings";
lin wiggle_N = mkN "wiggle" "wiggles";
lin wiggle_V = mkV "wiggle" "wiggles" "wiggled" "wiggled" "wiggling";
lin wiggle_V2 = mkV2 (mkV "wiggle" "wiggles" "wiggled" "wiggled" "wiggling");
lin wiggler_N = mkN "wiggler" ;
lin wiggliness_N = mkN "wiggliness" ;
lin wiggly_A = mkA "wiggly" ;
lin wight_N = mkN "wight" "wights";
lin wight_PN = mkPN "Wight";
lin wigless_A = mkA "wigless" ;
lin wigmaker_N = mkN "wigmaker" ;
lin wigwam_N = mkN "wigwam" "wigwams";
lin wild_A = mkA "wild" "wilder";
lin wild_Adv = mkAdv "wild";
lin wild_N = mkN "wild" ;
lin wildcat_A = compoundA (mkA "wildcat");
lin wildcat_N = mkN "wildcat" ;
lin wildcatter_N = mkN "wildcatter" ;
lin wildebeest_N = mkN "wildebeest" "wildebeests";
lin wilderness_N = mkN "wilderness" "wildernesses";
lin wildfire_N = mkN "wildfire" ;
lin wildflower_N = mkN "wildflower" ;
lin wildfowl_N = mkN "wildfowl" ;
lin wilding_N = mkN "wilding" ;
lin wildlife_N = mkN "wildlife" ;
lin wildness_N = mkN "wildness" ;
lin wile_N = mkN "wile" "wiles";
lin wilf_PN = mkPN "Wilf";
lin wilfrid_PN = mkPN "Wilfrid";
lin wilful_A = compoundA (mkA "wilful");
lin wilfulness_N = mkN "wilfulness" ;
lin wilhelmshaven_PN = mkPN "Wilhelmshaven";
lin will_N = mkN "will" "wills";
lin will_PN = mkPN "Will";
lin will_V = mkV "will" "wills" "willed" "willed" "willing";
lin will_V2 = mkV2 (mkV "will" "wills" "willed" "willed" "willing");
lin will_o'_the_wisp_N = mkN "will-o'-the-wisp" "will-o'-the-wisps";
lin willet_N = mkN "willet" ;
lin willful_A = compoundA (mkA "willful");
lin william_PN = mkPN "William";
lin willie_PN = mkPN "Willie";
lin willies_N = mkN "willies" ;
lin willing_A = mkA "willing" ;
lin willingness_N = mkN "willingness" ;
lin willington_PN = mkPN "Willington";
lin willow_N = mkN feminine (mkN "willow" "willows");
lin willow_pattern_N = mkN "willow-pattern" ;
lin willow_tree_N = mkN "willow-tree" "willow-trees";
lin willowherb_N = mkN "willowherb" ;
lin willowware_N = mkN "willowware" ;
lin willowy_A = compoundA (mkA "willowy");
lin willpower_N = mkN "willpower" ;
lin willy_PN = mkPN "Willy";
lin willy_nilly_Adv = mkAdv "willy-nilly";
lin wilmslow_PN = mkPN "Wilmslow";
lin wilt_N = mkN "wilt" ;
lin wilt_V = mkV "wilt" "wilts" "wilted" "wilted" "wilting";
lin wilt_V2 = mkV2 (mkV "wilt" "wilts" "wilted" "wilted" "wilting");
lin wilton_N = mkN "wilton" "wiltons";
lin wiltshire_PN = mkPN "Wiltshire";
lin wily_A = mkA "wily" "wilier";
lin wimbourne_PN = mkPN "Wimbourne";
lin wimbourne_minster_PN = mkPN "Wimbourne minster";
lin wimp_N = mkN "wimp" ;
lin wimpish_A = mkA "wimpish" ;
lin wimple_N = mkN "wimple" "wimples";
lin win_N = mkN "win" "wins";
lin win_V = IrregEng.win_V;
lin win_V2 = mkV2 (IrregEng.win_V);
lin wince_N = mkN "wince" "winces";
lin wince_V2 = mkV2 (mkV "wince" "winces" "winced" "winced" "wincing");
lin wincey_N = mkN "wincey" ;
lin winceyette_N = mkN "winceyette" ;
lin winch_N = mkN "winch" "winches";
lin winch_V2 = mkV2 (mkV "winch" "winches" "winched" "winched" "winching");
lin winchester_PN = mkPN "Winchester";
lin wind_N = mkN "wind" "winds";
lin wind_V = IrregEng.wind_V;
lin wind_V2 = mkV2 (mkV "wind" "winds" "winded" "winded" "winding");
lin wind_gauge_N = mkN "wind-gauge" "wind-gauges";
lin wind_tunnel_N = mkN "wind-tunnel" "wind-tunnels";
lin windage_N = mkN "windage" ;
lin windbag_N = mkN "windbag" "windbags";
lin windblown_A = compoundA (mkA "windblown");
lin windbreak_N = mkN "windbreak" "windbreaks";
lin windbreaker_N = mkN "windbreaker" "windbreakers";
lin windburn_N = mkN "windburn" ;
lin windburned_A = mkA "windburned" ;
lin windcheater_N = mkN "windcheater" "windcheaters";
lin winder_N = mkN "winder" ;
lin windermere_PN = mkPN "Windermere";
lin windfall_N = mkN "windfall" "windfalls";
lin windflower_N = mkN "windflower" "windflowers";
lin windiness_N = mkN "windiness" ;
lin winding_sheet_N = mkN "winding-sheet" "winding-sheets";
lin windjammer_N = mkN "windjammer" "windjammers";
lin windlass_N = mkN "windlass" "windlasses";
lin windless_A = compoundA (mkA "windless");
lin windmill_N = mkN "windmill" "windmills";
lin window_N = mkN "window" "windows";
lin window_box_N = mkN "window-box" "window-boxes";
lin window_dressing_N = mkN "window-dressing" ;
lin windowpane_N = mkN "windowpane" "windowpanes";
lin windowsill_N = mkN "windowsill" "windowsills";
lin windpipe_N = mkN "windpipe" "windpipes";
lin windscreen_N = mkN "windscreen" "windscreens";
lin windscreen_wiper_N = mkN "windscreen-wiper" "windscreen-wipers";
lin windshield_N = mkN "windshield" "windshields";
lin windsock_N = mkN "windsock" "windsocks";
lin windsor_PN = mkPN "Windsor";
lin windstorm_N = mkN "windstorm" ;
lin windswept_A = compoundA (mkA "windswept");
lin windward_A = compoundA (mkA "windward");
lin windward_Adv = mkAdv "windward" ;
lin windward_N = mkN "windward" ;
lin windy_A = mkA "windy" "windier";
lin wine_N = mkN "wine" "wines";
lin wine_V2 = mkV2 (mkV "wine" "wines" "wined" "wined" "wining");
lin wineberry_N = mkN "wineberry" ;
lin wineglass_N = mkN "wineglass" "wineglasses";
lin winemaking_N = mkN "winemaking" ;
lin winepress_N = mkN "winepress" "winepresses";
lin winery_N = mkN "winery" ;
lin wineskin_N = mkN "wineskin" "wineskins";
lin wing_N = mkN "wing" "wings";
lin wing_V = mkV "wing" "wings" "winged" "winged" "winging";
lin wing_V2 = mkV2 (mkV "wing" "wings" "winged" "winged" "winging");
lin wing_commander_N = mkN "wing-commander" "wing-commanders";
lin wing_nut_N = mkN "wing-nut" "wing-nuts";
lin wing_screw_N = mkN "wing-screw" "wing-screws";
lin wingate_PN = mkPN "Wingate";
lin wingback_N = mkN "wingback" ;
lin winger_N = mkN "winger" "wingers";
lin wingless_A = compoundA (mkA "wingless");
lin winglike_A = mkA "winglike" ;
lin wingman_N = mkN masculine (mkN "wingman" "wingmen");
lin wings_N = mkN "wings" ;
lin wingspan_N = mkN "wingspan" "wingspans";
lin wingspread_N = mkN "wingspread" "wingspreads";
lin wingstem_N = mkN "wingstem" ;
lin winifred_PN = mkPN "Winifred";
lin wink_N = mkN "wink" "winks";
lin wink_V = mkV "wink" "winks" "winked" "winked" "winking";
lin wink_V2 = mkV2 (mkV "wink" "winks" "winked" "winked" "winking");
lin winker_N = mkN "winker" ;
lin winkle_N = mkN "winkle" "winkles";
lin winkle_V2 = mkV2 (mkV "winkle" "winkles" "winkled" "winkled" "winkling");
lin winless_A = mkA "winless" ;
lin winner_N = mkN "winner" "winners";
lin winnie_PN = mkPN "Winnie";
lin winning_N = mkN "winning" ;
lin winning_post_N = mkN "winning-post" "winning-posts";
lin winnings_N = mkN "winnings" ;
lin winnipeg_PN = mkPN "Winnipeg";
lin winnow_N = mkN "winnow" ;
lin winnow_V2 = mkV2 (mkV "winnow" "winnows" "winnowed" "winnowed" "winnowing");
lin winsford_PN = mkPN "Winsford";
lin winsome_A = compoundA (mkA "winsome");
lin winsomeness_N = mkN "winsomeness" ;
lin winter_N = mkN "winter" "winters";
lin winter_V = mkV "winter" "winters" "wintered" "wintered" "wintering";
lin wintergreen_N = mkN "wintergreen" ;
lin wintery_A = mkA "wintery" "winterier";
lin wintry_A = mkA "wintry" "wintrier";
lin winy_A = mkA "winy" ;
lin wipe_N = mkN "wipe" "wipes";
lin wipe_V = mkV "wipe" "wipes" "wiped" "wiped" "wiping";
lin wipe_V2 = mkV2 (mkV "wipe" "wipes" "wiped" "wiped" "wiping");
lin wipeout_N = mkN "wipeout" ;
lin wiper_N = mkN "wiper" "wipers";
lin wire_N = mkN "wire" "wires";
lin wire_V = mkV "wire" "wires" "wired" "wired" "wiring";
lin wire_V2 = mkV2 (mkV "wire" "wires" "wired" "wired" "wiring");
lin wire_haired_A = compoundA (mkA "wire-haired");
lin wirehair_N = mkN "wirehair" ;
lin wireless_A = compoundA (mkA "wireless");
lin wireless_N = mkN "wireless" "wirelesses";
lin wireman_N = mkN masculine (mkN "wireman" "wiremen");
lin wirepuller_N = mkN "wirepuller" "wirepullers";
lin wirer_N = mkN "wirer" ;
lin wiretap_N = mkN "wiretap" ;
lin wirework_N = mkN "wirework" ;
lin wireworm_N = mkN "wireworm" "wireworms";
lin wiriness_N = mkN "wiriness" ;
lin wiring_N = mkN "wiring" ;
lin wiry_A = mkA "wiry" "wirier";
lin wisbech_PN = mkPN "Wisbech";
lin wisconsin_PN = mkPN "Wisconsin";
lin wisdom_N = mkN "wisdom" ;
lin wisdom_tooth_N = mkN "wisdom-tooth" "wisdom-teeth";
lin wise_A = mkA "wise" "wiser";
lin wise_N = mkN "wise" "IRREG";
lin wiseacre_N = mkN "wiseacre" "wiseacres";
lin wisecrack_N = mkN "wisecrack" "wisecracks";
lin wisecrack_V = mkV "wisecrack" "wisecracks" "wisecracked" "wisecracked" "wisecracking";
lin wisent_N = mkN "wisent" ;
lin wish_N = mkN "wish" "wishes";
lin wish_V = mkV "wish" "wishes" "wished" "wished" "wishing";
lin wish_V2 = mkV2 (mkV "wish" "wishes" "wished" "wished" "wishing");
lin wish_V2V = mkV2V (mkV "wish" "wishes" "wished" "wished" "wishing") noPrep to_Prep ;
lin wish_VS = mkVS (mkV "wish" "wishes" "wished" "wished" "wishing");
lin wish_VV = mkVV (mkV "wish" "wishes" "wished" "wished" "wishing");
lin wishbone_N = mkN "wishbone" "wishbones";
lin wishful_A = compoundA (mkA "wishful");
lin wishfulness_N = mkN "wishfulness" ;
lin wishing_cap_N = mkN "wishing-cap" "wishing-caps";
lin wishy_washy_A = compoundA (mkA "wishy-washy");
lin wisp_N = mkN "wisp" "wisps";
lin wisplike_A = mkA "wisplike" ;
lin wispy_A = mkA "wispy" "wispier";
lin wisteria_N = mkN "wisteria" "wisterias";
lin wistful_A = compoundA (mkA "wistful");
lin wistfulness_N = mkN "wistfulness" ;
lin wit_N = mkN "wit" "wits";
lin witch_N = mkN "witch" "witches";
lin witch_doctor_N = mkN "witch-doctor" "witch-doctors";
lin witch_elm_N = mkN "witch-elm" "witch-elms";
lin witch_hazel_N = mkN "witch-hazel" "witch-hazels";
lin witch_hunt_N = mkN "witch-hunt" "witch-hunts";
lin witchcraft_N = mkN "witchcraft" ;
lin witchery_N = mkN "witchery" ;
lin witchgrass_N = mkN "witchgrass" ;
lin witching_A = compoundA (mkA "witching");
lin witching_N = mkN "witching" ;
lin witchlike_A = mkA "witchlike" ;
lin with_Prep = mkPrep "with";
lin withal_Adv = mkAdv "withal";
lin witham_PN = mkPN "Witham";
lin withdraw_V = mkV "with" IrregEng.draw_V;
lin withdraw_V2 = mkV2 (mkV "with" IrregEng.draw_V);
lin withdrawal_N = mkN "withdrawal" "withdrawals";
lin withdrawer_N = mkN "withdrawer" ;
lin withe_N = mkN "withe" "withes";
lin wither_V = mkV "wither" "withers" "withered" "withered" "withering";
lin wither_V2 = mkV2 (mkV "wither" "withers" "withered" "withered" "withering");
lin witheringly_Adv = mkAdv "witheringly";
lin withernsea_PN = mkPN "Withernsea";
lin withers_N = mkN "withers" ;
lin withhold_V2 = mkV2 (IrregEng.withhold_V);
lin withholder_N = mkN "withholder" ;
lin withholding_N = mkN "withholding" ;
lin within_Prep = mkPrep "within";
lin without_Prep = mkPrep "without";
lin withstand_V2 = mkV2 (IrregEng.withstand_V);
lin withstander_N = mkN "withstander" ;
lin withy_N = mkN "withy" "withies";
lin witless_A = compoundA (mkA "witless");
lin witness_N = mkN "witness" "witnesses";
lin witness_V = mkV "witness" "witnesses" "witnessed" "witnessed" "witnessing";
lin witness_V2 = mkV2 (mkV "witness" "witnesses" "witnessed" "witnessed" "witnessing");
lin witness_box_N = mkN "witness-box" "witness-boxes";
lin witness_stand_N = mkN "witness-stand" "witness-stands";
lin witney_PN = mkPN "Witney";
lin wits_N = mkN "wits" ;
lin witticism_N = mkN "witticism" "witticisms";
lin witting_A = mkA "witting" ;
lin wittol_N = mkN "wittol" ;
lin witty_A = mkA "witty" "wittier";
lin wive_V = mkV "wive" "wives" "wived" "wived" "wiving";
lin wive_V2 = mkV2 (mkV "wive" "wives" "wived" "wived" "wiving");
lin wizard_A = compoundA (mkA "wizard");
lin wizard_N = mkN human (mkN "wizard" "wizards");
lin wizardry_N = mkN "wizardry" ;
lin wizened_A = compoundA (mkA "wizened");
lin wk_N = mkN "wk" "wk";
lin woad_N = mkN "woad" ;
lin wobble_N = mkN "wobble" ;
lin wobble_V = mkV "wobble" "wobbles" "wobbled" "wobbled" "wobbling";
lin wobble_V2 = mkV2 (mkV "wobble" "wobbles" "wobbled" "wobbled" "wobbling");
lin wobbler_N = mkN "wobbler" "wobblers";
lin wobbly_A = mkA "wobbly" "wobblier";
lin woburn_PN = mkPN "Woburn";
lin woe_N = mkN "woe" "woes";
lin woebegone_A = compoundA (mkA "woebegone");
lin woeful_A = compoundA (mkA "woeful");
lin wog_N = mkN "wog" ;
lin wok_N = mkN "wok" ;
lin wokingham_PN = mkPN "Wokingham";
lin wold_N = mkN "wold" "wolds";
lin wolf's_bane_N = mkN "wolf's-bane" ;
lin wolf_N = mkN "wolf" "wolves" {- FIXME: guessed plural form -};
lin wolf_V2 = mkV2 (mkV "wolf" "wolfs" "wolfed" "wolfed" "wolfing");
lin wolf_cub_N = mkN "wolf-cub" "wolf-cubs";
lin wolffish_N = mkN "wolffish" ;
lin wolfhound_N = mkN "wolfhound" "wolfhounds";
lin wolfish_A = compoundA (mkA "wolfish");
lin wolflike_A = mkA "wolflike" ;
lin wolfram_N = mkN "wolfram" ;
lin wolframite_N = mkN "wolframite" ;
lin wolfsbane_N = mkN "wolfsbane" ;
lin wollastonite_N = mkN "wollastonite" ;
lin wolverhampton_PN = mkPN "Wolverhampton";
lin wolverine_N = mkN "wolverine" ;
lin wolverton_PN = mkPN "Wolverton";
lin woman_N = mkN feminine (mkN "woman" "women");
lin womanhood_N = mkN "womanhood" ;
lin womanish_A = compoundA (mkA "womanish");
lin womanize_V = mkV "womanize" "womanizes" "womanized" "womanized" "womanizing";
lin womanizer_N = mkN "womanizer" "womanizers";
lin womankind_N = mkN "womankind" ;
lin womanlike_A = compoundA (mkA "womanlike");
lin womanliness_N = mkN "womanliness" ;
lin womanly_A = mkA "womanly" "womanlier";
lin womb_N = mkN "womb" "wombs";
lin wombat_N = mkN "wombat" "wombats";
lin wombourne_PN = mkPN "Wombourne";
lin wonder_N = mkN "wonder" "wonders";
lin wonder_V = mkV "wonder" "wonders" "wondered" "wondered" "wondering";
lin wonder_V2 = mkV2 (mkV "wonder" "wonders" "wondered" "wondered" "wondering");
lin wonder_VQ = mkVQ (mkV "wonder" "wonders" "wondered" "wondered" "wondering");
lin wonder_struck_A = compoundA (mkA "wonder-struck");
lin wonderer_N = mkN "wonderer" ;
lin wonderful_A = compoundA (mkA "wonderful");
lin wonderingly_Adv = mkAdv "wonderingly";
lin wonderland_N = mkN "wonderland" "wonderlands";
lin wonderment_N = mkN "wonderment" ;
lin wonderworking_A = mkA "wonderworking" ;
lin wondrous_A = compoundA (mkA "wondrous");
lin wondrous_Adv = mkAdv "wondrous";
lin wonky_A = compoundA (mkA "wonky");
lin wont_A = compoundA (mkA "wont");
lin wont_N = mkN "wont" ;
lin wonted_A = compoundA (mkA "wonted");
lin woo_V2 = mkV2 (mkV "woo" "woos" "wooed" "wooed" "wooing");
lin wood_N = mkN "wood" "woods";
lin wood_block_N = mkN "wood-block" "wood-blocks";
lin wood_pulp_N = mkN "wood-pulp" ;
lin woodbine_N = mkN "woodbine" "woodbines";
lin woodborer_N = mkN "woodborer" ;
lin woodbridge_PN = mkPN "Woodbridge";
lin woodcarver_N = mkN "woodcarver" ;
lin woodcarving_N = mkN "woodcarving" ;
lin woodcock_N = mkN "woodcock" "woodcocks";
lin woodcraft_N = mkN "woodcraft" "woodcrafts";
lin woodcut_N = mkN "woodcut" "woodcuts";
lin woodcutter_N = mkN "woodcutter" "woodcutters";
lin wooded_A = compoundA (mkA "wooded");
lin wooden_A = compoundA (mkA "wooden");
lin woodenheaded_A = compoundA (mkA "woodenheaded");
lin woodenness_N = mkN "woodenness" ;
lin woodenware_N = mkN "woodenware" ;
lin woodhewer_N = mkN "woodhewer" ;
lin woodiness_N = mkN "woodiness" ;
lin woodland_N = mkN "woodland" "woodlands";
lin woodlouse_N = mkN "woodlouse" "woodlice";
lin woodman_N = mkN masculine (mkN "woodman" "woodmen");
lin woodpecker_N = mkN "woodpecker" "woodpeckers";
lin woodpile_N = mkN "woodpile" "woodpiles";
lin woodruff_N = mkN "woodruff" ;
lin woodscrew_N = mkN "woodscrew" ;
lin woodshed_N = mkN "woodshed" "woodsheds";
lin woodsia_N = mkN "woodsia" ;
lin woodsman_N = mkN masculine (mkN "woodsman" "woodsmen");
lin woodsy_A = mkA "woodsy" ;
lin woodwaxen_N = mkN "woodwaxen" ;
lin woodwind_N = mkN "woodwind" ;
lin woodwork_N = mkN "woodwork" ;
lin woodworker_N = mkN human (mkN "woodworker");
lin woodworm_N = mkN "woodworm" ;
lin woody_A = mkA "woody" "woodier";
lin wooer_N = mkN "wooer" "wooers";
lin woof_N = mkN "woof" "woofs";
lin woofer_N = mkN "woofer" "woofers";
lin wool_N = mkN "wool" "wools";
lin woolen_A = compoundA (mkA "woolen");
lin woolgathering_A = compoundA (mkA "woolgathering");
lin woolgathering_N = mkN "woolgathering" ;
lin woollen_A = compoundA (mkA "woollen");
lin woolly_A = mkA "woolly" "woollier";
lin wooly_A = mkA "wooly" "woolier";
lin wooly_N = mkN "wooly" "woolies";
lin wootton_bassett_PN = mkPN "Wootton bassett";
lin wop_N = mkN "wop" ;
lin worcester_PN = mkPN "Worcester";
lin word_N = mkN "word" "words";
lin word_V2 = mkV2 (mkV "word" "words" "worded" "worded" "wording");
lin word_division_N = mkN "word-division" ;
lin word_painter_N = mkN "word-painter" "word-painters";
lin word_perfect_A = compoundA (mkA "word-perfect");
lin word_picture_N = mkN "word-picture" "word-pictures";
lin word_splitting_N = mkN "word-splitting" ;
lin wordbook_N = mkN "wordbook" "wordbooks";
lin wordiness_N = mkN "wordiness" ;
lin wording_N = mkN "wording" "IRREG";
lin wordless_A = compoundA (mkA "wordless");
lin wordmonger_N = mkN "wordmonger" ;
lin wordnet_N = mkN "wordnet" ;
lin words_N = mkN "words" ;
lin wordsmith_N = mkN "wordsmith" ;
lin wordy_A = mkA "wordy" "wordier";
lin work_N = mkN "work" "works";
lin work_V = mkV "work" "works" "worked" "worked" "working";
lin work_V2 = mkV2 (mkV "work" "works" "worked" "worked" "working");
lin work_VV = mkVV (mkV "work" "works" "worked" "worked" "working");
lin work_in_N = mkN "work-in" "work-ins";
lin work_out_N = mkN "work-out" "work-outs";
lin work_study_N = mkN "work-study" "work-studies";
lin workable_A = compoundA (mkA "workable");
lin workaday_A = compoundA (mkA "workaday");
lin workaholic_N = mkN "workaholic" ;
lin workaholism_N = mkN "workaholism" ;
lin workbag_N = mkN "workbag" "workbags";
lin workbasket_N = mkN "workbasket" "workbaskets";
lin workbench_N = mkN "workbench" "workbenches";
lin workboard_N = mkN "workboard" ;
lin workbook_N = mkN "workbook" "workbooks";
lin workbox_N = mkN "workbox" "workboxes";
lin workday_N = mkN "workday" "workdays";
lin worker_N = mkN human (mkN "worker" "workers");
lin workhorse_N = mkN "workhorse" ;
lin workhouse_N = mkN "workhouse" "IRREG";
lin working_N = mkN "working" "workings";
lin working_class_A = compoundA (mkA "working-class");
lin working_out_N = mkN "working-out" ;
lin workington_PN = mkPN "Workington";
lin workload_N = mkN "workload" ;
lin workman_N = mkN masculine (mkN "workman" "workmen");
lin workmanlike_A = compoundA (mkA "workmanlike");
lin workmanship_N = mkN "workmanship" ;
lin workmate_N = mkN "workmate" "workmates";
lin workpiece_N = mkN "workpiece" ;
lin workplace_N = mkN "workplace" ;
lin workroom_N = mkN "workroom" "workrooms";
lin works_N = mkN "works" ;
lin worksheet_N = mkN "worksheet" ;
lin workshop_N = mkN "workshop" "workshops";
lin workshy_A = compoundA (mkA "workshy");
lin worksop_PN = mkPN "Worksop";
lin workspace_N = mkN "workspace" ;
lin workstation_N = mkN "workstation" ;
lin worktable_N = mkN "worktable" "worktables";
lin workwear_N = mkN "workwear" ;
lin workweek_N = mkN "workweek" ;
lin world_N = mkN "world" "worlds";
lin world_weary_A = compoundA (mkA "world-weary");
lin worldliness_N = mkN "worldliness" ;
lin worldling_N = mkN "worldling" ;
lin worldly_A = mkA "worldly" "worldlier";
lin worldwide_A = compoundA (mkA "worldwide");
lin worm_N = mkN "worm" "worms";
lin worm_V2 = mkV2 (mkV "worm" "worms" "wormed" "wormed" "worming");
lin worm_eaten_A = compoundA (mkA "worm-eaten");
lin worm_gear_N = mkN "worm-gear" "worm-gears";
lin wormcast_N = mkN "wormcast" "wormcasts";
lin wormhole_N = mkN "wormhole" "wormholes";
lin wormwood_N = mkN "wormwood" ;
lin wormy_A = mkA "wormy" "wormier";
lin worriedly_Adv = mkAdv "worriedly" ;
lin worrier_N = mkN "worrier" ;
lin worrisome_A = compoundA (mkA "worrisome");
lin worry_N = mkN "worry" "worries";
lin worry_V = mkV "worry" "worries" "worried" "worried" "worrying";
lin worry_V2 = mkV2 (mkV "worry" "worries" "worried" "worried" "worrying");
lin worry_VS = mkVS (mkV "worry" "worries" "worried" "worried" "worrying");
lin worrying_N = mkN "worrying" ;
lin worryingly_Adv = mkAdv "worryingly" ;
lin worse_A = mkA "worse" ;
lin worse_Adv = mkAdv "worse";
lin worse_N = mkN "worse" ;
lin worsen_V = mkV "worsen" "worsens" "worsened" "worsened" "worsening";
lin worsen_V2 = mkV2 (mkV "worsen" "worsens" "worsened" "worsened" "worsening");
lin worsening_N = mkN "worsening" ;
lin worship_N = mkN "worship" ;
lin worship_V = mkV "worship" "worships" "worshipped" "worshipped" "worshipping";
lin worship_V2 = mkV2 (mkV "worship" "worships" "worshipped" "worshipped" "worshipping");
lin worshiper_N = mkN human (mkN "worshiper");
lin worshipful_A = compoundA (mkA "worshipful");
lin worshipper_N = mkN human (mkN "worshipper" "worshippers");
lin worst_A = mkA "worst" ;
lin worst_Adv = mkAdv "worst";
lin worst_N = mkN "worst" ;
lin worst_V2 = mkV2 (mkV "worst" "worsts" "worsted" "worsted" "worsting");
lin worsted_N = mkN "worsted" ;
lin wort_N = mkN "wort" ;
lin worth_A = compoundA (mkA "worth");
lin worth_N = mkN "worth" ;
lin worth_Prep = mkPrep "worth";
lin worthiness_N = mkN "worthiness" ;
lin worthing_PN = mkPN "Worthing";
lin worthless_A = compoundA (mkA "worthless");
lin worthlessness_N = mkN "worthlessness" ;
lin worthwhile_A = compoundA (mkA "worthwhile");
lin worthwhileness_N = mkN "worthwhileness" ;
lin worthy_A = mkA "worthy" "worthier";
lin worthy_N = mkN "worthy" "worthies";
lin would_be_A = compoundA (mkA "would-be");
lin wound_N = mkN "wound" "wounds";
lin wound_V2 = mkV2 (mkV "wound" "wounds" "wounded" "wounded" "wounding");
lin wounded_N = mkN "wounded" ;
lin woven_A = mkA "woven" ;
lin wow_Interj = ss "wow";
lin wow_N = mkN "wow" "wows";
lin wpb_N = mkN "wpb" ;
lin wpm_N = mkN "wpm" "wpm";
lin wrac_N = mkN "wrac" ;
lin wrack_N = mkN "wrack" ;
lin wrack_V2 = mkV2 (mkV "wrack");
lin wraf_N = mkN "wraf" ;
lin wraith_N = mkN "wraith" "wraiths";
lin wrangle_N = mkN "wrangle" "wrangles";
lin wrangle_V = mkV "wrangle" "wrangles" "wrangled" "wrangled" "wrangling";
lin wrangler_N = mkN "wrangler" ;
lin wrap_N = mkN "wrap" "wraps";
lin wrap_V = mkV "wrap" "wraps" "wrapped" "wrapped" "wrapping";
lin wrap_V2 = mkV2 (mkV "wrap" "wraps" "wrapped" "wrapped" "wrapping");
lin wraparound_N = mkN "wraparound" ;
lin wrapper_N = mkN "wrapper" "wrappers";
lin wrapping_N = mkN "wrapping" "wrappings";
lin wrasse_N = mkN "wrasse" ;
lin wrath_N = mkN "wrath" ;
lin wrathful_A = compoundA (mkA "wrathful");
lin wreak_V2 = mkV2 (mkV "wreak" "wreaks" "wreaked" "wreaked" "wreaking");
lin wreath_N = mkN "wreath" "wreaths";
lin wreathe_V = mkV "wreathe" "wreathes" "wreathed" "wreathed" "wreathing";
lin wreathe_V2 = mkV2 (mkV "wreathe" "wreathes" "wreathed" "wreathed" "wreathing");
lin wreck_N = mkN "wreck" "wrecks";
lin wreck_V2 = mkV2 (mkV "wreck" "wrecks" "wrecked" "wrecked" "wrecking");
lin wreckage_N = mkN "wreckage" ;
lin wrecker_N = mkN "wrecker" "wreckers";
lin wren_N = mkN "wren" "wrens";
lin wrench_N = mkN "wrench" "wrenches";
lin wrench_V2 = mkV2 (mkV "wrench" "wrenches" "wrenched" "wrenched" "wrenching");
lin wrest_V2 = mkV2 (mkV "wrest" "wrests" "wrested" "wrested" "wresting");
lin wrester_N = mkN "wrester" ;
lin wrestle_N = mkN "wrestle" "wrestles";
lin wrestle_V = mkV "wrestle" "wrestles" "wrestled" "wrestled" "wrestling";
lin wrestle_V2 = mkV2 (mkV "wrestle" "wrestles" "wrestled" "wrestled" "wrestling");
lin wrestler_N = mkN "wrestler" "wrestlers";
lin wrestling_N = mkN "wrestling" ;
lin wretch_N = mkN "wretch" "wretches";
lin wretched_A = compoundA (mkA "wretched");
lin wretchedness_N = mkN "wretchedness" ;
lin wrexham_PN = mkPN "Wrexham";
lin wrick_N = mkN "wrick" "wricks";
lin wrick_V2 = mkV2 (mkV "wrick" "wricks" "wricked" "wricked" "wricking");
lin wriggle_N = mkN "wriggle" "wriggles";
lin wriggle_V = mkV "wriggle" "wriggles" "wriggled" "wriggled" "wriggling";
lin wriggle_V2 = mkV2 (mkV "wriggle" "wriggles" "wriggled" "wriggled" "wriggling");
lin wriggler_N = mkN "wriggler" "wrigglers";
lin wright_N = mkN "wright" "wrights";
lin wring_N = mkN "wring" "wrings";
lin wring_V2 = mkV2 (IrregEng.wring_V);
lin wringer_N = mkN "wringer" "wringers";
lin wrinkle_N = mkN "wrinkle" "wrinkles";
lin wrinkle_V = mkV "wrinkle" "wrinkles" "wrinkled" "wrinkled" "wrinkling";
lin wrinkle_V2 = mkV2 (mkV "wrinkle" "wrinkles" "wrinkled" "wrinkled" "wrinkling");
lin wrinkly_A = mkA "wrinkly" "wrinklier";
lin wrist_N = mkN "wrist" "wrists";
lin wristband_N = mkN "wristband" "wristbands";
lin wristlet_N = mkN "wristlet" "wristlets";
lin wristwatch_N = mkN "wristwatch" "wristwatches";
lin writ_N = mkN "writ" "writs";
lin writ_large_A = compoundA (mkA "writ large");
lin write_V = IrregEng.write_V;
lin write_V2 = mkV2 (IrregEng.write_V);
lin write_VS = mkVS (IrregEng.write_V);
lin write_VV = mkVV (IrregEng.write_V);
lin write_off_N = mkN "write-off" "write-offs";
lin write_up_N = mkN "write-up" "write-ups";
lin writer_N = mkN "writer" "writers";
lin writhe_V = mkV "writhe" "writhes" "writhed" "writhed" "writhing";
lin writing_N = mkN "writing" "writings";
lin writing_desk_N = mkN "writing-desk" "writing-desks";
lin writing_ink_N = mkN "writing-ink" "writing-inks";
lin writing_paper_N = mkN "writing-paper" ;
lin writtle_PN = mkPN "Writtle";
lin wrns_N = mkN "wrns" ;
lin wroclaw_PN = mkPN "Wroclaw";
lin wrong_A = compoundA (mkA "wrong");
lin wrong_Adv = mkAdv "wrong";
lin wrong_N = mkN "wrong" "wrongs";
lin wrong_V2 = mkV2 (mkV "wrong" "wrongs" "wronged" "wronged" "wronging");
lin wrong_headed_A = compoundA (mkA "wrong-headed");
lin wrongdoer_N = mkN "wrongdoer" "wrongdoers";
lin wrongdoing_N = mkN "wrongdoing" "wrongdoings";
lin wrongful_A = compoundA (mkA "wrongful");
lin wrongheaded_A = mkA "wrongheaded" ;
lin wrongness_N = mkN "wrongness" ;
lin wroth_A = compoundA (mkA "wroth");
lin wroughton_PN = mkPN "Wroughton";
lin wry_A = mkA "wry" "wrier";
lin wryly_Adv = mkAdv "wryly" ;
lin wrymouth_N = mkN "wrymouth" ;
lin wryneck_N = mkN "wryneck" ;
lin wt_N = mkN "wt" ;
lin wuhan_PN = mkPN "Wuhan";
lin wulfenite_N = mkN "wulfenite" ;
lin wuppertal_PN = mkPN "Wuppertal";
lin wurtzite_N = mkN "wurtzite" ;
lin wurzburg_PN = mkPN "Wurzburg";
lin wusih_PN = mkPN "Wusih";
lin wycombe_PN = mkPN "Wycombe";
lin wymondham_PN = mkPN "Wymondham";
lin wyoming_PN = mkPN "Wyoming";
lin wythall_PN = mkPN "Wythall";
lin wyvern_N = mkN "wyvern" ;
lin x_ray_N = mkN "x-ray" "x-rays";
lin x_ray_V2 = mkV2 (mkV "x-ray" "x-rays" "x-rayed" "x-rayed" "x-raying");
lin xanthate_N = mkN "xanthate" ;
lin xanthelasma_N = mkN "xanthelasma" ;
lin xanthine_N = mkN "xanthine" ;
lin xanthoma_N = mkN "xanthoma" ;
lin xanthomatosis_N = mkN "xanthomatosis" ;
lin xanthomonad_N = mkN "xanthomonad" ;
lin xanthophyll_N = mkN "xanthophyll" ;
lin xanthopsia_N = mkN "xanthopsia" ;
lin xanthosis_N = mkN "xanthosis" ;
lin xenogeneic_A = mkA "xenogeneic" ;
lin xenolith_N = mkN "xenolith" ;
lin xenon_N = mkN "xenon" ;
lin xenophobia_N = mkN "xenophobia" ;
lin xenophobic_A = mkA "xenophobic" ;
lin xenotime_N = mkN "xenotime" ;
lin xenotransplant_N = mkN "xenotransplant" ;
lin xeranthemum_N = mkN "xeranthemum" ;
lin xeric_A = mkA "xeric" ;
lin xeroderma_N = mkN "xeroderma" ;
lin xerographic_A = mkA "xerographic" ;
lin xerography_N = mkN "xerography" ;
lin xerophthalmia_N = mkN "xerophthalmia" ;
lin xerophytic_A = mkA "xerophytic" ;
lin xeroradiography_N = mkN "xeroradiography" ;
lin xerostomia_N = mkN "xerostomia" ;
lin xerox_N = mkN "xerox" "xeroxes";
lin xerox_V2 = mkV2 (mkV "xerox" "xeroxes" "xeroxed" "xeroxed" "xeroxing");
lin xi_N = mkN "xi" ;
lin xmas_N = mkN "xmas" "xmases";
lin xmas_PN = mkPN "Xmas";
lin xylem_N = mkN "xylem" ;
lin xylene_N = mkN "xylene" ;
lin xylophone_N = mkN "xylophone" "xylophones";
lin xylophonist_N = mkN "xylophonist" ;
lin xylosma_N = mkN "xylosma" ;
lin yacca_N = mkN "yacca" ;
lin yacht_N = mkN "yacht" "yachts";
lin yacht_V = mkV "yacht" "yachts" "yachted" "yachted" "yachting";
lin yacht_club_N = mkN "yacht-club" "yacht-clubs";
lin yachting_N = mkN "yachting" ;
lin yachtsman_N = mkN masculine (mkN "yachtsman" "yachtsmen");
lin yagi_N = mkN "yagi" ;
lin yahoo_N = mkN "yahoo" "yahoos";
lin yak_N = mkN "yak" "yaks";
lin yakuza_N = mkN "yakuza" ;
lin yam_N = mkN "yam" "yams";
lin yammer_V = mkV "yammer" "yammers" "yammered" "yammered" "yammering";
lin yang_N = mkN "yang" ;
lin yank_N = mkN "yank" "yanks";
lin yank_V2 = mkV2 (mkV "yank" "yanks" "yanked" "yanked" "yanking");
lin yankee_N = mkN "yankee" "yankees";
lin yanker_N = mkN "yanker" ;
lin yap_N = mkN "yap" "yaps";
lin yap_V = mkV "yap" "yaps" "yapped" "yapped" "yapping";
lin yard_N = mkN "yard" "yards";
lin yard_measure_N = mkN "yard-measure" "yard-measures";
lin yardage_N = mkN "yardage" ;
lin yardarm_N = mkN "yardarm" "yardarms";
lin yarder_N = mkN "yarder" ;
lin yardgrass_N = mkN "yardgrass" ;
lin yardie_N = mkN "yardie" ;
lin yardman_N = mkN "yardman" ;
lin yardmaster_N = mkN "yardmaster" ;
lin yardstick_N = mkN "yardstick" "yardsticks";
lin yarmouth_PN = mkPN "Yarmouth";
lin yarmulke_N = mkN "yarmulke" ;
lin yarn_N = mkN "yarn" "yarns";
lin yarn_V = mkV "yarn" "yarns" "yarned" "yarned" "yarning";
lin yaroslavi_PN = mkPN "Yaroslavi";
lin yarrow_N = mkN "yarrow" ;
lin yashmak_N = mkN "yashmak" "yashmaks";
lin yataghan_N = mkN "yataghan" ;
lin yate_PN = mkPN "Yate";
lin yateley_PN = mkPN "Yateley";
lin yautia_N = mkN "yautia" ;
lin yaw_N = mkN "yaw" "yaws";
lin yaw_V = mkV "yaw" "yaws" "yawed" "yawed" "yawing";
lin yawl_N = mkN "yawl" "yawls";
lin yawn_N = mkN "yawn" "yawns";
lin yawn_V = mkV "yawn" "yawns" "yawned" "yawned" "yawning";
lin yawner_N = mkN "yawner" ;
lin yaws_N = mkN "yaws" ;
lin yea_Adv = mkAdv "yea";
lin yea_N = mkN "yea" "yeas";
lin yeah_Interj = ss "yeah";
lin year_N = mkN "year" "years";
lin yearbook_N = mkN "yearbook" "yearbooks";
lin yearling_N = mkN "yearling" "yearlings";
lin yearlong_A = compoundA (mkA "yearlong");
lin yearly_A = compoundA (mkA "yearly");
lin yearly_Adv = mkAdv "yearly";
lin yearn_V = mkV "yearn" "yearns" "yearned" "yearned" "yearning";
lin yearning_N = mkN "yearning" "yearnings";
lin yearningly_Adv = mkAdv "yearningly";
lin yeast_N = mkN "yeast" ;
lin yeasty_A = mkA "yeasty" "yeastier";
lin yell_N = mkN "yell" "yells";
lin yell_V = mkV "yell" "yells" "yelled" "yelled" "yelling";
lin yell_V2 = mkV2 (mkV "yell" "yells" "yelled" "yelled" "yelling");
lin yelling_N = mkN "yelling" ;
lin yellow_A = mkA "yellow" "yellower";
lin yellow_N = mkN "yellow" "yellows";
lin yellow_V = mkV "yellow" "yellows" "yellowed" "yellowed" "yellowing";
lin yellow_V2 = mkV2 (mkV "yellow" "yellows" "yellowed" "yellowed" "yellowing");
lin yellow_bellied_A = compoundA (mkA "yellow-bellied");
lin yellow_flag_N = mkN "yellow-flag" "yellow-flags";
lin yellowcake_N = mkN "yellowcake" ;
lin yellowfin_N = mkN "yellowfin" ;
lin yellowhammer_N = mkN "yellowhammer" ;
lin yellowish_A = compoundA (mkA "yellowish");
lin yellowlegs_N = mkN "yellowlegs" ;
lin yellowness_N = mkN "yellowness" ;
lin yellowtail_N = mkN "yellowtail" ;
lin yellowthroat_N = mkN "yellowthroat" ;
lin yellowwood_N = mkN "yellowwood" ;
lin yelp_V = mkV "yelp" "yelps" "yelped" "yelped" "yelping";
lin yemen_PN = mkPN "Yemen";
lin yemeni_A = compoundA (mkA "yemeni");
lin yemeni_N = mkN "yemeni" "yemenis";
lin yen_N = mkN "yen" "yen";
lin yen_V = mkV "yen" "yens" "yenned" "yenned" "yenning";
lin yenta_N = mkN "yenta" ;
lin yeoman_N = mkN masculine (mkN "yeoman" "yeomen");
lin yeomanry_N = mkN "yeomanry" "yeomanries";
lin yeovil_PN = mkPN "Yeovil";
lin yerevan_PN = mkPN "Yerevan";
lin yes_Interj = ss "yes";
lin yeshiva_N = mkN "yeshiva" ;
lin yesterday_Adv = mkAdv "yesterday";
lin yesterday_N = mkN "yesterday" "yesterdays";
lin yet_AdV = mkAdV "yet";
lin yet_Adv = mkAdv "yet";
lin yeti_N = mkN "yeti" "yetis";
lin yew_N = mkN "yew" "yews";
lin yew_tree_N = mkN "yew-tree" "yew-trees";
lin yha_N = mkN "yha" ;
lin yiddish_N = mkN "yiddish" ;
lin yield_N = mkN "yield" "yields";
lin yield_V = mkV "yield" "yields" "yielded" "yielded" "yielding";
lin yield_V2 = mkV2 (mkV "yield" "yields" "yielded" "yielded" "yielding");
lin yin_N = mkN "yin" ;
lin yip_N = mkN "yip" ;
lin yips_N = mkN "yips" ;
lin ylem_N = mkN "ylem" ;
lin ymca_N = mkN "ymca" ;
lin yo_yo_N = mkN "yo-yo" "yo-yos";
lin yob_N = mkN "yob" "yobs";
lin yobibit_N = mkN "yobibit" ;
lin yobo_N = mkN "yobo" "yobos";
lin yodel_N = mkN "yodel" "yodels";
lin yodel_V = mkV "yodel" "yodels" "yodelled" "yodelled" "yodelling";
lin yodel_V2 = mkV2 (mkV "yodel" "yodels" "yodelled" "yodelled" "yodelling");
lin yodeling_N = mkN "yodeling" ;
lin yodeller_N = mkN "yodeller" "yodellers";
lin yodh_N = mkN "yodh" ;
lin yoga_N = mkN "yoga" ;
lin yoghourt_N = mkN (variants {"yoghourt"; "yoghurt"; "yogurt"});
lin yogi_N = mkN "yogi" "yogis";
lin yogistic_A = mkA "yogistic";
lin yoke_N = mkN "yoke" "yokes";
lin yoke_V = mkV "yoke" "yokes" "yoked" "yoked" "yoking";
lin yoke_V2 = mkV2 (mkV "yoke" "yokes" "yoked" "yoked" "yoking");
lin yokel_N = mkN "yokel" "yokels";
lin yokohama_PN = mkPN "Yokohama";
lin yolk_N = mkN "yolk" "yolks";
lin yon_A = compoundA (mkA "yon");
lin yon_Adv = mkAdv "yon";
lin yonder_A = compoundA (mkA "yonder");
lin yonder_Adv = mkAdv "yonder";
lin yore_N = mkN "yore" ;
lin york_PN = mkPN "York";
lin yorkley_PN = mkPN "Yorkley";
lin yorkshire_PN = mkPN "Yorkshire";
lin yottabit_N = mkN "yottabit" ;
lin yottabyte_N = mkN "yottabyte" ;
lin youPl_Pron = mkPron "you" "you" "your" "yours" plural P2 human ;
lin youSg_Pron = mkPron "you" "you" "your" "yours" singular P2 human ;
lin young_A = mkA "young" "younger";
lin young_N = mkN "young" ;
lin younger_A = mkA "younger" ;
lin youngish_A = compoundA (mkA "youngish");
lin youngness_N = mkN "youngness" ;
lin youngster_N = mkN "youngster" "youngsters";
lin youth_N = mkN "youth" "youths";
lin youthful_A = compoundA (mkA "youthful");
lin youthfulness_N = mkN "youthfulness" ;
lin yowl_V = mkV "yowl" "yowls" "yowled" "yowled" "yowling";
lin yr_N = mkN "yr" ;
lin ystradgynlais_PN = mkPN "Ystradgynlais";
lin ytterbium_N = mkN "ytterbium" ;
lin yttrium_N = mkN "yttrium" ;
lin yuan_N = mkN "yuan" ;
lin yucca_N = mkN "yucca" ;
lin yugoslav_A = compoundA (mkA "yugoslav");
lin yugoslav_N = mkN "yugoslav" "yugoslavs";
lin yugoslavia_PN = mkPN "Yugoslavia";
lin yugoslavian_A = compoundA (mkA "yugoslavian");
lin yugoslavian_N = mkN "yugoslavian" "yugoslavians";
lin yukon_PN = mkPN "Yukon";
lin yule_N = mkN "yule" ;
lin yule_log_N = mkN "yule-log" "yule-logs";
lin yuletide_N = mkN "yuletide" "yuletides";
lin yuppie_N = mkN "yuppie" ;
lin yurt_N = mkN "yurt" ;
lin yvonne_PN = mkPN "Yvonne";
lin ywca_N = mkN "ywca" ;
lin zabaglione_N = mkN "zabaglione" ;
lin zagreb_PN = mkPN "Zagreb";
lin zaire_N = mkN "zaire" ;
lin zaire_PN = mkPN "Zaire";
lin zairean_A = compoundA (mkA "zairean");
lin zairean_N = mkN "zairean" "zaireans";
lin zakat_N = mkN "zakat" ;
lin zambia_PN = mkPN "Zambia";
lin zambian_A = compoundA (mkA "zambian");
lin zambian_N = mkN "zambian" "zambians";
lin zamia_N = mkN "zamia" ;
lin zany_A = mkA "zany" "zanier";
lin zany_N = mkN "zany" "zanies";
lin zap_N = mkN "zap" ;
lin zap_V2 = mkV2 (mkV "zap" "zaps" "zapped" "zapped" "zapping");
lin zaporozhye_PN = mkPN "Zaporozhye";
lin zapper_N = mkN "zapper" ;
lin zaragoza_PN = mkPN "Zaragoza";
lin zarf_N = mkN "zarf" ;
lin zayin_N = mkN "zayin" ;
lin zeal_N = mkN "zeal" ;
lin zealand_PN = mkPN "Zealand";
lin zealander_A = compoundA (mkA "zealander");
lin zealander_N = mkN "zealander" "zealanders";
lin zealotMasc_N = mkN masculine (mkN "zealot" "zealots");
lin zealotFem_N = mkN feminine (mkN "zealot" "zealots");
lin zealotry_N = mkN "zealotry" ;
lin zealous_A = compoundA (mkA "zealous");
lin zeaxanthin_N = mkN "zeaxanthin" ;
lin zebibit_N = mkN "zebibit" ;
lin zebra_N = mkN "zebra" "zebras";
lin zebrawood_N = mkN "zebrawood" ;
lin zebu_N = mkN "zebu" "zebus";
lin zee_N = mkN "zee" "zees";
lin zen_N = mkN "zen" ;
lin zenith_N = mkN "zenith" "zeniths";
lin zenithal_A = compoundA (mkA "zenithal");
lin zeolite_N = mkN "zeolite" ;
lin zephyr_N = mkN "zephyr" "zephyrs";
lin zeppelin_N = mkN "zeppelin" "zeppelins";
lin zero_A = mkA "zero" ;
lin zero_N = mkN "zero" "zeros";
lin zero_V = mkV "zero" "zeros" "zeroed" "zeroed" "zeroing";
lin zeroth_A = mkA "zeroth" ;
lin zest_N = mkN "zest" ;
lin zestful_A = compoundA (mkA "zestful");
lin zeta_N = mkN "zeta" ;
lin zettabit_N = mkN "zettabit" ;
lin zettabyte_N = mkN "zettabyte" ;
lin zeugma_N = mkN "zeugma" ;
lin zidovudine_N = mkN "zidovudine" ;
lin ziggurat_N = mkN "ziggurat" ;
lin zigzag_A = mkA "zigzag" ;
lin zigzag_Adv = mkAdv "zigzag";
lin zigzag_N = mkN "zigzag" "zigzags";
lin zigzag_V = mkV "zigzag" "zigzags" "zigzagged" "zigzagged" "zigzagging";
lin zill_N = mkN "zill" ;
lin zillion_A = mkA "zillion" ;
lin zimbabwe_PN = mkPN "Zimbabwe";
lin zimbabwean_A = compoundA (mkA "Zimbabwean");
lin zimbabwean_N = mkN "Zimbabwean" "Zimbabweans";
lin zinc_N = mkN "zinc" ;
lin zinfandel_N = mkN "zinfandel" ;
lin zing_N = mkN "zing" ;
lin zinger_N = mkN "zinger" ;
lin zinkenite_N = mkN "zinkenite" ;
lin zinnia_N = mkN "zinnia" "zinnias";
lin zinnwaldite_N = mkN "zinnwaldite" ;
lin zion_N = mkN "zion" "zions";
lin zionism_N = mkN "zionism" ;
lin zionist_A = compoundA (mkA "zionist");
lin zionist_N = mkN "zionist" "zionists";
lin zip_N = mkN "zip" "zips";
lin zip_V2 = mkV2 (mkV "zip" "zips" "zipped" "zipped" "zipping");
lin zip_code_N = mkN "zip code" "zip codes";
lin zip_fastener_N = mkN "zip-fastener" "zip-fasteners";
lin zipper_N = mkN "zipper" "zippers";
lin zircon_N = mkN "zircon" ;
lin zirconium_N = mkN "zirconium" ;
lin zither_N = mkN "zither" "zithers";
lin ziti_N = mkN "ziti" ;
lin zizz_N = mkN "zizz" ;
lin zloty_N = mkN "zloty" "zlotys";
lin zoanthropy_N = mkN "zoanthropy" ;
lin zodiac_N = mkN "zodiac" "zodiacs";
lin zodiacal_A = mkA "zodiacal" ;
lin zoe_PN = mkPN "Zoe";
lin zoic_A = mkA "zoic" ;
lin zombie_N = mkN (variants {"zombi"; "zombie"});
lin zonal_A = compoundA (mkA "zonal");
lin zone_N = mkN "zone" "zones";
lin zone_V2 = mkV2 (mkV "zone" "zones" "zoned" "zoned" "zoning");
lin zoning_N = mkN "zoning" ;
lin zonule_N = mkN "zonule" ;
lin zoo_N = mkN "zoo" "zoos";
lin zooid_N = mkN "zooid" ;
lin zoolatry_N = mkN "zoolatry" ;
lin zoological_A = compoundA (mkA "zoological");
lin zoologist_N = mkN human (mkN "zoologist" "zoologists");
lin zoology_N = mkN "zoology" ;
lin zoom_N = mkN "zoom" ;
lin zoom_V = mkV "zoom" "zooms" "zoomed" "zoomed" "zooming";
lin zoomastigote_N = mkN "zoomastigote" ;
lin zoomorphism_N = mkN "zoomorphism" ;
lin zoonosis_N = mkN "zoonosis" ;
lin zoonotic_A = mkA "zoonotic" ;
lin zoophilia_N = mkN "zoophilia" ;
lin zoophobia_N = mkN "zoophobia" ;
lin zoophyte_N = mkN "zoophyte" "zoophytes";
lin zooplankton_N = mkN "zooplankton" ;
lin zoopsia_N = mkN "zoopsia" ;
lin zoospore_N = mkN "zoospore" ;
lin zoot_suit_N = mkN "zoot suit" "zoot suits";
lin zoril_N = mkN "zoril" ;
lin zoysia_N = mkN "zoysia" ;
lin zucchini_N = mkN "zucchini" "zucchini";
lin zurich_PN = mkPN "Zurich";
lin zwieback_N = mkN "zwieback" ;
lin zydeco_N = mkN "zydeco" ;
lin zygodactyl_A = mkA "zygodactyl" ;
lin zygoma_N = mkN "zygoma" ;
lin zygomatic_A = mkA "zygomatic" ;
lin zygomorphic_A = mkA "zygomorphic" ;
lin zygospore_N = mkN "zygospore" ;
lin zygote_N = mkN "zygote" ;
lin zygotene_N = mkN "zygotene" ;
lin zygotic_A = mkA "zygotic" ;
lin zymase_N = mkN "zymase" ;
lin zymoid_A = mkA "zymoid" ;
lin zymology_N = mkN "zymology" ;
lin zymosis_N = mkN "zymosis" ;
lin zymotic_A = mkA "zymotic" ;



lin absent_Prep = mkPrep "absent";
lin anenst_Prep = mkPrep "anenst";
lin apropos_Prep = mkPrep "apropos";
lin apud_Prep = mkPrep "apud";
lin aside_from_Prep = mkPrep "aside from";
lin athwart_Prep = mkPrep "athwart";
lin forenenst_Prep = mkPrep "forenenst";
lin mid_Prep = mkPrep "mid";
lin midst_Prep = mkPrep "midst";
lin modulo_Prep = mkPrep "modulo";
lin pace_Prep = mkPrep "pace";
lin pro_Prep = mkPrep "pro";
lin qua_Prep = mkPrep "qua";
lin round_Prep = mkPrep "round";
lin sans_Prep = mkPrep "sans";
lin times_Prep = mkPrep "times";
lin unto_Prep = mkPrep "unto";
lin vice_Prep = mkPrep "vice";
lin ahead_of_Prep = mkPrep "ahead of";
lin apart_from_Prep = mkPrep "apart from";
lin as_for_Prep = mkPrep "as for";
lin as_of_Prep = mkPrep "as of";
lin as_per_Prep = mkPrep "as per";
lin as_regards_Prep = mkPrep "as regards";
lin aside_from_Prep = mkPrep "aside from";
lin back_to_Prep = mkPrep "back to";
lin close_to_Prep = mkPrep "close to";
lin due_to_Prep = mkPrep "due to";
lin except_for_Prep = mkPrep "except for";
lin far_from_Prep = mkPrep "far from";
lin inside_of_Prep = mkPrep "inside of";
lin left_of_Prep = mkPrep "left of";
lin near_to_Prep = mkPrep "near to";
lin next_to_Prep = mkPrep "next to";
lin out_from_Prep = mkPrep "out from";
lin out_of_Prep = mkPrep "out of";
lin outside_of_Prep = mkPrep "outside of";
lin owing_to_Prep = mkPrep "owing to";
lin prior_to_Prep = mkPrep "prior to";
lin pursuant_to_Prep = mkPrep "pursuant to";
lin rather_than_Prep = mkPrep "rather than";
lin rather_than_Conj = mkConj "rather than";
lin regardless_of_Prep = mkPrep "regardless of";
lin right_of_Prep = mkPrep "right of";
lin thanks_to_Prep = mkPrep "thanks to";
lin that_of_Prep = mkPrep "that of";
lin up_to_Prep = mkPrep "up to";
lin where_as_Prep = mkPrep "where as";
lin as_opposed_to_Prep = mkPrep "as opposed to";
lin at_the_behest_of_Prep = mkPrep "at the behest of";
lin by_means_of_Prep = mkPrep "by means of";
lin by_virtue_of_Prep = mkPrep "by virtue of";
lin for_the_sake_of_Prep = mkPrep "for the sake of";
lin in_accordance_with_Prep = mkPrep "in accordance with";
lin in_addition_to_Prep = mkPrep "in addition to";
lin in_case_of_Prep = mkPrep "in case of";
lin in_front_of_Prep = mkPrep "in front of";
lin in_lieu_of_Prep = mkPrep "in lieu of";
lin in_order_to_Prep = mkPrep "in order to";
lin in_place_of_Prep = mkPrep "in place of";
lin in_point_of_Prep = mkPrep "in point of";
lin in_spite_of_Prep = mkPrep "in spite of";
lin on_account_of_Prep = mkPrep "on account of";
lin on_behalf_of_Prep = mkPrep "on behalf of";
lin on_top_of_Prep = mkPrep "on top of";
lin with_regard_to_Prep = mkPrep "with regard to";
lin with_respect_to_Prep = mkPrep "with respect to";
lin with_a_view_to_Prep = mkPrep "with a view to";
lin anti_Prep = mkPrep "anti";
lin apud_Prep = mkPrep "apud";
lin behither_Prep = mkPrep "behither";
lin betwixen_Prep = mkPrep "betwixen";
lin chez_Prep = mkPrep "chez";
lin contra_Prep = mkPrep "contra";
lin cum_Prep = mkPrep "cum";
lin ere_Prep = mkPrep "ere";
lin forby_Prep = mkPrep "forby";
lin fornenst_Prep = mkPrep "fornenst";
lin fornent_Prep = mkPrep "fornent";
lin froward_Prep = mkPrep (variants {"froward"; "frowards"; "fromward"});
lin outwith_Prep = mkPrep "outwith";
lin overthwart_Prep = mkPrep "overthwart";
lin pro_Prep = mkPrep "pro";
lin qua_Prep = mkPrep "qua";
lin re_Prep = mkPrep (variants {"re"; "in re"});
lin sans_Prep = mkPrep "sans";
lin unto_Prep = mkPrep "unto";
lin vis_a_vis_Prep = mkPrep (variants {"vis-à-vis"; "vis-a-vis"});


lin abide_by_V2 = prepV2 (mkV "abide") (mkPrep "by");
lin account_for_V2 = prepV2 (mkV "account") (mkPrep "for");
lin ache_for_V2 = prepV2 (mkV "ache") (mkPrep "for");
lin act_on_V2 = prepV2 (mkV "act") (mkPrep "on");
lin act_out_V2 = mkV2 (partV (mkV "act") "out");
lin act_up_V = partV (mkV "act") "up";
lin act_upon_V2 = prepV2 (mkV "act") (mkPrep "upon");
lin add_in_V = partV (mkV "add") "in";
lin add_on_V2 = mkV2 (partV (mkV "add") "on");
lin add_up_V = partV (mkV "add") "up";
lin add_up_V2 = mkV2 (partV (mkV "add") "up");
lin add_up_to_V2 = prepV2 (partV (mkV "add") "up") (mkPrep "to");
lin agree_on_V = partV (mkV "agree") "on";
lin agree_with_V2 = prepV2 (mkV "agree") (mkPrep "with");
lin aim_at_V2 = prepV2 (mkV "aim") (mkPrep "at");
lin allow_for_V2 = prepV2 (mkV "allow") (mkPrep "for");
lin allow_of_V2 = prepV2 (mkV "allow") (mkPrep "of");
lin angle_for_V2 = prepV2 (mkV "angle") (mkPrep "for");
lin answer_back_V2 = mkV2 (partV (mkV "answer") "back");
lin answer_for_V2 = prepV2 (mkV "answer") (mkPrep "for");
lin argue_down_V2 = mkV2 (partV (mkV "argue") "down");
lin argue_out_V2 = mkV2 (partV (mkV "argue") "out");
lin ask_about_V2 = prepV2 (mkV "ask") (mkPrep "about");
lin ask_after_V2 = prepV2 (mkV "ask") (mkPrep "after");
lin ask_around_V = partV (mkV "ask") "around";
lin ask_around_V2 = mkV2 (partV (mkV "ask") "around");
lin ask_for_V2 = prepV2 (mkV "ask") (mkPrep "for");
lin ask_in_V2 = mkV2 (partV (mkV "ask") "in");
lin ask_out_V2 = mkV2 (partV (mkV "ask") "out");
lin ask_over_V2 = mkV2 (partV (mkV "ask") "over");
lin ask_round_V2 = mkV2 (partV (mkV "ask") "round");
lin auction_off_V2 = mkV2 (partV (mkV "auction") "off");
lin back_away_V = partV (mkV "back") "away";
lin back_down_V = partV (mkV "back") "down";
lin back_into_V3 = mkV3 (mkV "back") noPrep (mkPrep "into");
lin back_off_V = partV (mkV "back") "off";
lin back_out_V = partV (mkV "back") "out";
lin back_out_of_V2 = prepV2 (partV (mkV "back") "out") (mkPrep "of");
lin back_out_of_V3 = mkV3 (mkV "back") noPrep (mkPrep "out of");
lin back_up_V = partV (mkV "back") "up";
lin back_up_V2 = mkV2 (partV (mkV "back") "up");
lin bag_out_V2 = mkV2 (partV (mkV "bag") "out");
lin bail_out_V = partV (mkV "bail") "out";
lin bail_out_V2 = mkV2 (partV (mkV "bail") "out");
lin bail_out_of_V3 = mkV3 (partV (mkV "bail") "out") noPrep (mkPrep "of");
lin bail_out_on_V2 = prepV2 (partV (mkV "bail") "out") (mkPrep "on");
lin bail_up_V = partV (mkV "bail") "up";
lin ball_up_V2 = mkV2 (partV (mkV "ball") "up");
lin balls_up_V2 = mkV2 (partV (mkV "balls") "up");
lin bang_about_V = partV (mkV "bang") "about";
lin bang_around_V = partV (mkV "bang") "around";
lin bang_on_V = partV (mkV "bang") "on";
lin bang_on_about_V2 = prepV2 (partV (mkV "bang") "on") (mkPrep "about");
lin bang_out_V2 = mkV2 (partV (mkV "bang") "out");
lin bang_up_V2 = mkV2 (partV (mkV "bang") "up");
lin bank_on_V2 = prepV2 (mkV "bank") (mkPrep "on");
lin bargain_down_V2 = mkV2 (partV (mkV "bargain") "down");
lin bargain_for_V2 = prepV2 (mkV "bargain") (mkPrep "for");
lin bargain_on_V2 = prepV2 (mkV "bargain") (mkPrep "on");
lin barge_in_V = partV (mkV "barge") "in";
lin barge_into_V2 = prepV2 (mkV "barge") (mkPrep "into");
lin bash_about_V2 = mkV2 (partV (mkV "bash") "about");
lin bash_in_V2 = mkV2 (partV (mkV "bash") "in");
lin bash_out_V2 = mkV2 (partV (mkV "bash") "out");
lin bash_up_V2 = mkV2 (partV (mkV "bash") "up");
lin bat_in_V = partV (mkV "bat") "in";
lin bawl_out_V2 = mkV2 (partV (mkV "bawl") "out");
lin bear_down_on_V2 = prepV2 (partV IrregEng.bear_V "down") (mkPrep "on");
lin bear_on_V2 = prepV2 IrregEng.bear_V (mkPrep "on");
lin bear_out_V2 = mkV2 (partV IrregEng.bear_V "out");
lin bear_up_V = partV IrregEng.bear_V "up";
lin bear_up_under_V2 = prepV2 (partV IrregEng.bear_V "up") (mkPrep "under");
lin bear_with_V2 = prepV2 IrregEng.bear_V (mkPrep "with");
lin beat_back_V = partV (mkV "beat") "back";
lin beat_down_V = partV IrregEng.beat_V "down";
lin beat_down_V2 = mkV2 (partV IrregEng.beat_V "down");
lin beat_out_V2 = mkV2 (partV IrregEng.beat_V "out");
lin beat_up_V2 = mkV2 (partV IrregEng.beat_V "up");
lin beaver_away_V = partV (mkV "beaver") "away";
lin beaver_away_at_V2 = prepV2 (partV (mkV "beaver") "away") (mkPrep "at");
lin bed_down_V = partV (mkV "bed") "down";
lin bed_out_V2 = mkV2 (partV (mkV "bed") "out");
lin beef_up_V2 = mkV2 (partV (mkV "beef") "up");
lin begin_with_V = partV (mkV "begin") "with";
lin belong_to_V2 = prepV2 (mkV "belong") (mkPrep "to");
lin belong_with_V2 = prepV2 (mkV "belong") (mkPrep "with");
lin belt_out_V2 = mkV2 (partV (mkV "belt") "out");
lin belt_up_V = partV (mkV "belt") "up";
lin bend_down_V = partV IrregEng.bend_V "down";
lin bend_over_V = partV IrregEng.bend_V "over";
lin bend_over_backwards_V = partV IrregEng.bend_V "over backwards";
lin bid_up_V = partV (mkV "bid") "up";
lin big_up_V2 = mkV2 (partV (mkV "big") "up");
lin bitch_up_V2 = mkV2 (partV (mkV "bitch") "up");
lin black_out_V = partV (mkV "black") "out";
lin blank_out_V = partV (mkV "blank") "out";
lin blank_out_V2 = mkV2 (partV (mkV "blank") "out");
lin blare_out_V = partV (mkV "blare") "out";
lin blast_away_V = partV (mkV "blast") "away";
lin blast_off_V = partV (mkV "blast") "off";
lin blaze_away_V = partV (mkV "blaze") "away";
lin bleed_off_V = partV (mkV "bleed") "off";
lin bliss_out_V = partV (mkV "bliss") "out";
lin block_in_V2 = mkV2 (partV (mkV "block") "in");
lin block_off_V2 = mkV2 (partV (mkV "block") "off");
lin block_out_V2 = mkV2 (partV (mkV "block") "out");
lin block_up_V2 = mkV2 (partV (mkV "block") "up");
lin blot_out_V = partV (mkV "blot") "out";
lin blow_away_V = partV (mkV "blow") "away";
lin blow_away_V2 = mkV2 (partV (mkV "blow") "away");
lin blow_down_V2 = mkV2 (partV (mkV "blow") "down");
lin blow_in_V = partV IrregEng.blow_V "in";
lin blow_off_V = partV IrregEng.blow_V "off";
lin blow_off_V2 = mkV2 (partV IrregEng.blow_V "off");
lin blow_out_V2 = mkV2 (partV IrregEng.blow_V "out");
lin blow_over_V = partV IrregEng.blow_V "over";
lin blow_up_V = partV IrregEng.blow_V "up";
lin blow_up_V2 = mkV2 (partV IrregEng.blow_V "up");
lin blurt_out_V2 = mkV2 (partV (mkV "blurt") "out");
lin board_out_V2 = mkV2 (partV (mkV "board") "out");
lin board_up_V2 = mkV2 (partV (mkV "board") "up");
lin bog_down_V = partV (mkV "bog") "down";
lin bog_in_V = partV (mkV "bog") "in";
lin bog_into_V2 = prepV2 (mkV "bog") (mkPrep "into");
lin bog_off_V = partV (mkV "bog") "off";
lin boil_down_V2 = mkV2 (partV (mkV "boil") "down");
lin boil_down_to_V2 = prepV2 (partV (mkV "boil") "down") (mkPrep "to");
lin boil_over_V = partV (mkV "boil") "over";
lin boil_up_V = partV (mkV "boil") "up";
lin boil_up_V2 = mkV2 (partV (mkV "boil") "up");
lin bolster_up_V2 = mkV2 (partV (mkV "bolster") "up");
lin bone_up_V = partV (mkV "bone") "up";
lin bone_up_on_V2 = prepV2 (partV (mkV "bone") "up") (mkPrep "on");
lin book_in_V2 = mkV2 (partV (mkV "book") "in");
lin book_into_V2 = mkV2 (partV (mkV "book") "into");
lin book_out_V = partV (mkV "book") "out";
lin book_up_V = partV (mkV "book") "up";
lin boot_up_V2 = mkV2 (partV (mkV "boot") "up");
lin border_on_V2 = prepV2 (mkV "border") (mkPrep "on");
lin boss_about_V2 = mkV2 (partV (mkV "boss") "about");
lin boss_around_V2 = mkV2 (partV (mkV "boss") "around");
lin botch_up_V2 = mkV2 (partV (mkV "botch") "up");
lin bottle_away_V = partV (mkV "bottle") "away";
lin bottle_out_V = partV (mkV "bottle") "out";
lin bottle_up_V2 = mkV2 (partV (mkV "bottle") "up");
lin bottom_out_V = partV (mkV "bottom") "out";
lin bounce_back_V = partV (mkV "bounce") "back";
lin bounce_into_V2 = mkV2 (partV (mkV "bounce") "into");
lin bounce_off_V2 = mkV2 (partV (mkV "bounce") "off");
lin bowl_out_V2 = mkV2 (partV (mkV "bowl") "out");
lin bowl_over_V2 = mkV2 (partV (mkV "bowl") "over");
lin box_in_V2 = mkV2 (partV (mkV "box") "in");
lin box_up_V2 = mkV2 (partV (mkV "box") "up");
lin brace_up_V = partV (mkV "brace") "up";
lin branch_out_V = partV (mkV "branch") "out";
lin break_apart_V = partV (mkV "break") "apart";
lin break_away_V = partV IrregEng.break_V "away";
lin break_down_V = partV IrregEng.break_V "down";
lin break_down_V2 = mkV2 (partV IrregEng.break_V "down");
lin break_in_V = partV IrregEng.break_V "in";
lin break_in_V2 = mkV2 (partV IrregEng.break_V "in");
lin break_in_on_V2 = prepV2 (partV IrregEng.break_V "in") (mkPrep "on");
lin break_into_V2 = prepV2 IrregEng.break_V (mkPrep "into");
lin break_off_V2 = mkV2 (partV IrregEng.break_V "off");
lin break_out_V = partV IrregEng.break_V "out";
lin break_out_V2 = prepV2 IrregEng.break_V (mkPrep "out");
lin break_out_in_V2 = prepV2 (partV IrregEng.break_V "out") (mkPrep "in");
lin break_out_of_V2 = prepV2 (partV IrregEng.break_V "out") (mkPrep "of");
lin break_through_V2 = prepV2 IrregEng.break_V (mkPrep "through");
lin break_up_V = partV IrregEng.break_V "up";
lin break_up_V2 = mkV2 (partV IrregEng.break_V "up");
lin breeze_along_V = partV (mkV "breeze") "along";
lin breeze_in_V = partV (mkV "breeze") "in";
lin breeze_into_V2 = prepV2 (mkV "breeze") (mkPrep "into");
lin breeze_through_V2 = prepV2 (mkV "breeze") (mkPrep "through");
lin brick_in_V2 = mkV2 (partV (mkV "brick") "in");
lin brick_up_V2 = mkV2 (partV (mkV "brick") "up");
lin brighten_up_V = partV (mkV "brighten") "up";
lin brighten_up_V2 = mkV2 (partV (mkV "brighten") "up");
lin bring_about_V2 = mkV2 (partV IrregEng.bring_V "about");
lin bring_along_V2 = mkV2 (partV IrregEng.bring_V "along");
lin bring_around_V2 = mkV2 (partV IrregEng.bring_V "around");
lin bring_away_V2 = mkV2 (partV IrregEng.bring_V "away");
lin bring_back_V2 = mkV2 (partV IrregEng.bring_V "back");
lin bring_down_V2 = mkV2 (partV IrregEng.bring_V "down");
lin bring_forth_V = partV IrregEng.bring_V "forth";
lin bring_forth_V2 = mkV2 (partV IrregEng.bring_V "forth");
lin bring_forward_V2 = mkV2 (partV IrregEng.bring_V "forward");
lin bring_in_V2 = mkV2 (partV IrregEng.bring_V "in");
lin bring_off_V2 = mkV2 (partV IrregEng.bring_V "off");
lin bring_on_V2 = mkV2 (partV IrregEng.bring_V "on");
lin bring_out_V2 = mkV2 (partV IrregEng.bring_V "out");
lin bring_out_in_V3 = mkV3 IrregEng.bring_V noPrep (mkPrep "out in");
lin bring_over_V2 = mkV2 (partV IrregEng.bring_V "over");
lin bring_round_V2 = mkV2 (partV IrregEng.bring_V "round");
lin bring_to_V2 = mkV2 (partV IrregEng.bring_V "to");
lin bring_up_V2 = mkV2 (partV IrregEng.bring_V "up");
lin brush_aside_V = partV (mkV "brush") "aside";
lin brush_off_V2 = mkV2 (partV (mkV "brush") "off");
lin brush_up_V2 = mkV2 (partV (mkV "brush") "up");
lin bubble_over_V = partV (mkV "bubble") "over";
lin buck_up_V2 = mkV2 (partV (mkV "buck") "up");
lin bucket_down_V = partV (mkV "bucket") "down";
lin buckle_down_V = partV (mkV "buckle") "down";
lin buckle_under_V = partV (mkV "buckle") "under";
lin buckle_up_V = partV (mkV "buckle") "up";
lin budge_up_V = partV (mkV "budge") "up";
lin buff_up_V2 = mkV2 (partV (mkV "buff") "up");
lin buff_up_on_V2 = prepV2 (partV (mkV "buff") "up") (mkPrep "on");
lin bug_off_V = partV (mkV "bug") "off";
lin bug_out_V = partV (mkV "bug") "out";
lin build_up_V2 = mkV2 (partV IrregEng.build_V "up");
lin bulk_out_V2 = mkV2 (partV (mkV "bulk") "out");
lin bulk_up_V = partV (mkV "bulk") "up";
lin bump_into_V2 = prepV2 (mkV "bump") (mkPrep "into");
lin bump_off_V2 = mkV2 (partV (mkV "bump") "off");
lin bump_up_V2 = mkV2 (partV (mkV "bump") "up");
lin bundle_off_V2 = mkV2 (partV (mkV "bundle") "off");
lin bundle_out_V2 = mkV2 (partV (mkV "bundle") "out");
lin bundle_up_V = partV (mkV "bundle") "up";
lin bundle_up_V2 = mkV2 (partV (mkV "bundle") "up");
lin bunk_off_V = partV (mkV "bunk") "off";
lin buoy_up_V2 = mkV2 (partV (mkV "buoy") "up");
lin burn_down_V = partV IrregEng.burn_V "down";
lin burn_down_V2 = mkV2 (partV IrregEng.burn_V "down");
lin burn_off_V2 = mkV2 (partV IrregEng.burn_V "off");
lin burn_out_V = partV IrregEng.burn_V "out";
lin burn_up_V = partV IrregEng.burn_V "up";
lin burn_up_V2 = mkV2 (partV IrregEng.burn_V "up");
lin burst_into_V2 = prepV2 IrregEng.burst_V (mkPrep "into");
lin bust_up_V = partV (mkV "bust") "up";
lin butt_in_V = partV (mkV "butt") "in";
lin butt_out_V = partV (mkV "butt") "out";
lin butter_up_V2 = mkV2 (partV (mkV "butter") "up");
lin buy_back_V2 = mkV2 (partV (mkV "buy") "back");
lin buy_in_V2 = mkV2 (partV IrregEng.buy_V "in");
lin buy_into_V2 = prepV2 IrregEng.buy_V (mkPrep "into");
lin buy_off_V2 = mkV2 (partV IrregEng.buy_V "off");
lin buy_out_V2 = mkV2 (partV IrregEng.buy_V "out");
lin buy_up_V2 = mkV2 (partV IrregEng.buy_V "up");
lin buzz_around_V2 = prepV2 (mkV "buzz") (mkPrep "around");
lin buzz_off_V = partV (mkV "buzz") "off";
lin call_after_V2 = prepV2 (mkV "call") (mkPrep "after");
lin call_around_V = partV (mkV "call") "around";
lin call_back_V2 = mkV2 (partV (mkV "call") "back");
lin call_for_V2V = mkV2V (mkV "call") (mkPrep "for") (mkPrep "to");
lin call_forth_V2 = mkV2 (partV (mkV "call") "forth");
lin call_in_V = partV (mkV "call") "in";
lin call_in_V2 = mkV2 (partV (mkV "call") "in");
lin call_off_V2 = mkV2 (partV (mkV "call") "off");
lin call_on_V = partV (mkV "call") "on";
lin call_on_V2 = mkV2 (partV (mkV "call") "on");
lin call_out_V2 = mkV2 (partV (mkV "call") "out");
lin call_over_V = partV (mkV "call") "over";
lin call_round_V = partV (mkV "call") "round";
lin call_up_V2 = mkV2 (partV (mkV "call") "up");
lin calm_down_V2 = mkV2 (partV (mkV "calm") "down");
lin calme_down_V = partV (mkV "calme") "down";
lin camp_out_V = partV (mkV "camp") "out";
lin cancel_out_V2 = mkV2 (partV (mkV "cancel") "out");
lin cap_off_V2 = mkV2 (partV (mkV "cap") "off");
lin care_for_V2 = prepV2 (mkV "care") (mkPrep "for");
lin carried_away_V = partV (mkV "carried") "away";
lin carry_forward_V2 = mkV2 (partV (mkV "carry") "forward");
lin carry_off_V2 = mkV2 (partV (mkV "carry") "off");
lin carry_on_V = partV (mkV "carry") "on";
lin carry_on_V2 = mkV2 (partV (mkV "carry") "on");
lin carry_on_about_V2 = prepV2 (partV (mkV "carry") "on") (mkPrep "about");
lin carry_on_with_V2 = prepV2 (partV (mkV "carry") "on") (mkPrep "with");
lin carry_out_V = partV (mkV "carry") "out";
lin carry_out_V2 = mkV2 (partV (mkV "carry") "out");
lin carry_over_V2 = mkV2 (partV (mkV "carry") "over");
lin carry_through_V2 = mkV2 (partV (mkV "carry") "through");
lin cart_off_V2 = mkV2 (partV (mkV "cart") "off");
lin cart_out_V = partV (mkV "cart") "out";
lin carve_out_V2 = mkV2 (partV (mkV "carve") "out");
lin carve_up_V2 = mkV2 (partV (mkV "carve") "up");
lin cash_in_V2 = mkV2 (partV (mkV "cash") "in");
lin cash_in_on_V2 = prepV2 (partV (mkV "cash") "in") (mkPrep "on");
lin cash_out_V2 = mkV2 (partV (mkV "cash") "out");
lin cash_up_V = partV (mkV "cash") "up";
lin cast_about_for_V2 = prepV2 (partV IrregEng.cast_V "about") (mkPrep "for");
lin cast_around_V = partV (mkV "cast") "around";
lin cast_around_for_V2 = prepV2 (partV IrregEng.cast_V "around") (mkPrep "for");
lin cast_aside_V2 = mkV2 (partV IrregEng.cast_V "aside");
lin cast_off_V = partV IrregEng.cast_V "off";
lin cast_off_V2 = mkV2 (partV IrregEng.cast_V "off");
lin cast_out_V2 = mkV2 (partV IrregEng.cast_V "out");
lin cast_round_for_V2 = prepV2 (partV IrregEng.cast_V "round") (mkPrep "for");
lin cast_up_V2 = mkV2 (partV IrregEng.cast_V "up");
lin catch_at_V2 = prepV2 IrregEng.catch_V (mkPrep "at");
lin catch_on_V = partV IrregEng.catch_V "on";
lin catch_out_V2 = mkV2 (partV IrregEng.catch_V "out");
lin catch_up_V = partV IrregEng.catch_V "up";
lin catch_up_V2 = mkV2 (partV IrregEng.catch_V "up");
lin catch_up_in_V2 = prepV2 (partV IrregEng.catch_V "up") (mkPrep "in");
lin catch_up_on_V2 = prepV2 (partV IrregEng.catch_V "up") (mkPrep "on");
lin catch_up_with_V2 = prepV2 (partV IrregEng.catch_V "up") (mkPrep "with");
lin cater_for_V2 = prepV2 (mkV "cater") (mkPrep "for");
lin cater_to_V2 = prepV2 (mkV "cater") (mkPrep "to");
lin cave_in_V = partV (mkV "cave") "in";
lin chalk_out_V2 = mkV2 (partV (mkV "chalk") "out");
lin chalk_up_V2 = mkV2 (partV (mkV "chalk") "up");
lin chalk_up_to_V3 = mkV3 (mkV "chalk") noPrep (mkPrep "up to");
lin chance_upon_V2 = prepV2 (mkV "chance") (mkPrep "upon");
lin change_over_V2 = mkV2 (partV (mkV "change") "over");
lin charge_off_V = partV (mkV "charge") "off";
lin charge_up_V2 = mkV2 (partV (mkV "charge") "up");
lin charge_with_V3 = mkV3 (mkV "charge") noPrep (mkPrep "with");
lin chase_down_V2 = mkV2 (partV (mkV "chase") "down");
lin chase_off_V2 = mkV2 (partV (mkV "chase") "off");
lin chase_up_V2 = mkV2 (partV (mkV "chase") "up");
lin chat_up_V2 = mkV2 (partV (mkV "chat") "up");
lin cheat_on_V2 = prepV2 (mkV "cheat") (mkPrep "on");
lin cheat_out_of_V3 = mkV3 (mkV "cheat") noPrep (mkPrep "out of");
lin check_back_V = partV (mkV "check") "back";
lin check_by_V2 = prepV2 (mkV "check") (mkPrep "by");
lin check_for_V2 = prepV2 (mkV "check") (mkPrep "for");
lin check_in_V = partV (mkV "check") "in";
lin check_in_V2 = mkV2 (partV (mkV "check") "in");
lin check_into_V2 = prepV2 (mkV "check") (mkPrep "into");
lin check_off_V2 = mkV2 (partV (mkV "check") "off");
lin check_on_V2 = prepV2 (mkV "check") (mkPrep "on");
lin check_out_V = partV (mkV "check") "out";
lin check_out_V2 = mkV2 (partV (mkV "check") "out");
lin check_out_of_V2 = prepV2 (partV (mkV "check") "out") (mkPrep "of");
lin check_over_V2 = mkV2 (partV (mkV "check") "over");
lin check_through_V2 = mkV2 (partV (mkV "check") "through");
lin check_up_on_V2 = prepV2 (partV (mkV "check") "up") (mkPrep "on");
lin check_with_V2 = prepV2 (mkV "check") (mkPrep "with");
lin cheer_on_V2 = mkV2 (partV (mkV "cheer") "on");
lin cheer_up_V = partV (mkV "cheer") "up";
lin cheer_up_V2 = mkV2 (partV (mkV "cheer") "up");
lin chew_off_V2 = mkV2 (partV (mkV "chew") "off");
lin chew_on_V2 = prepV2 (mkV "chew") (mkPrep "on");
lin chew_out_V2 = mkV2 (partV (mkV "chew") "out");
lin chew_over_V2 = mkV2 (partV (mkV "chew") "over");
lin chew_up_V2 = mkV2 (partV (mkV "chew") "up");
lin chicken_out_V = partV (mkV "chicken") "out";
lin chill_out_V = partV (mkV "chill") "out";
lin chime_in_V = partV (mkV "chime") "in";
lin chip_away_V = partV (mkV "chip") "away";
lin chip_away_at_V2 = prepV2 (partV (mkV "chip") "away") (mkPrep "at");
lin chip_in_V = partV (mkV "chip") "in";
lin choke_off_V2 = mkV2 (partV (mkV "choke") "off");
lin choke_out_V2 = mkV2 (partV (mkV "choke") "out");
lin choke_up_V = partV (mkV "choke") "up";
lin choke_up_V2 = mkV2 (partV (mkV "choke") "up");
lin choose_up_V = partV IrregEng.choose_V "up";
lin choose_up_V2 = mkV2 (partV IrregEng.choose_V "up");
lin chop_down_V2 = mkV2 (partV (mkV "chop") "down");
lin chop_off_V = partV (mkV "chop") "off";
lin chop_out_V = partV (mkV "chop") "out";
lin chop_up_V2 = mkV2 (partV (mkV "chop") "up");
lin chow_down_V = partV (mkV "chow") "down";
lin chow_down_on_V2 = prepV2 (partV (mkV "chow") "down") (mkPrep "on");
lin chuck_away_V2 = mkV2 (partV (mkV "chuck") "away");
lin chuck_in_V2 = mkV2 (partV (mkV "chuck") "in");
lin chuck_out_V2 = mkV2 (partV (mkV "chuck") "out");
lin chuck_up_V = partV (mkV "chuck") "up";
lin chuck_up_V2 = mkV2 (partV (mkV "chuck") "up");
lin churn_out_V2 = mkV2 (partV (mkV "churn") "out");
lin clag_up_V2 = mkV2 (partV (mkV "clag") "up");
lin clam_up_V = partV (mkV "clam") "up";
lin clamp_down_V = partV (mkV "clamp") "down";
lin clamp_down_on_V2 = prepV2 (partV (mkV "clamp") "down") (mkPrep "on");
lin clank_in_V = partV (mkV "clank") "in";
lin claw_back_V2 = mkV2 (partV (mkV "claw") "back");
lin clean_out_V = partV (mkV "clean") "out";
lin clean_out_V2 = mkV2 (partV (mkV "clean") "out");
lin clean_up_V = partV (mkV "clean") "up";
lin clean_up_V2 = mkV2 (partV (mkV "clean") "up");
lin clear_away_V = partV (mkV "clear") "away";
lin clear_away_V2 = mkV2 (partV (mkV "clear") "away");
lin clear_off_V = partV (mkV "clear") "off";
lin clear_out_V = partV (mkV "clear") "out";
lin clear_out_V2 = mkV2 (partV (mkV "clear") "out");
lin clear_up_V = partV (mkV "clear") "up";
lin clear_up_V2 = mkV2 (partV (mkV "clear") "up");
lin click_through_V2 = prepV2 (mkV "click") (mkPrep "through");
lin climb_down_V = partV (mkV "climb") "down";
lin cling_on_V = partV IrregEng.cling_V "on";
lin cling_on_to_V2 = prepV2 (partV IrregEng.cling_V "on") (mkPrep "to");
lin cling_to_V2 = prepV2 IrregEng.cling_V (mkPrep "to");
lin clog_up_V2 = mkV2 (partV (mkV "clog") "up");
lin close_down_V = partV (mkV "close") "down";
lin close_down_V2 = mkV2 (partV (mkV "close") "down");
lin close_in_V = partV (mkV "close") "in";
lin close_in_on_V2 = prepV2 (partV (mkV "close") "in") (mkPrep "on");
lin close_in_upon_V2 = prepV2 (partV (mkV "close") "in") (mkPrep "upon");
lin close_off_V2 = mkV2 (partV (mkV "close") "off");
lin close_on_V2 = prepV2 (mkV "close") (mkPrep "on");
lin close_out_V2 = mkV2 (partV (mkV "close") "out");
lin close_up_V = partV (mkV "close") "up";
lin close_up_V2 = mkV2 (partV (mkV "close") "up");
lin cloud_over_V = partV (mkV "cloud") "over";
lin clown_about_V = partV (mkV "clown") "about";
lin clown_around_V = partV (mkV "clown") "around";
lin clutch_on_V = partV (mkV "clutch") "on";
lin coast_along_V = partV (mkV "coast") "along";
lin cobble_together_V2 = mkV2 (partV (mkV "cobble") "together");
lin cock_up_V2 = mkV2 (partV (mkV "cock") "up");
lin colour_up_V = partV (mkV "colour") "up";
lin come_about_V = partV IrregEng.come_V "about";
lin come_across_V = partV IrregEng.come_V "across";
lin come_across_V2 = prepV2 IrregEng.come_V (mkPrep "across");
lin come_along_V = partV IrregEng.come_V "along";
lin come_along_with_V2 = prepV2 (partV IrregEng.come_V "along") (mkPrep "with");
lin come_apart_V = partV IrregEng.come_V "apart";
lin come_around_V = partV IrregEng.come_V "around";
lin come_around_to_V2 = prepV2 (partV IrregEng.come_V "around") (mkPrep "to");
lin come_away_V = partV IrregEng.come_V "away";
lin come_back_V = partV IrregEng.come_V "back";
lin come_before_V2 = prepV2 IrregEng.come_V (mkPrep "before");
lin come_by_V = partV IrregEng.come_V "by";
lin come_by_V2 = prepV2 IrregEng.come_V (mkPrep "by");
lin come_down_V = partV IrregEng.come_V "down";
lin come_down_on_V2 = prepV2 (partV IrregEng.come_V "down") (mkPrep "on");
lin come_down_upon_V2 = prepV2 (partV IrregEng.come_V "down") (mkPrep "upon");
lin come_down_with_V2 = prepV2 (partV IrregEng.come_V "down") (mkPrep "with");
lin come_forth_V = partV IrregEng.come_V "forth";
lin come_forth_with_V2 = prepV2 (partV IrregEng.come_V "forth") (mkPrep "with");
lin come_forward_V = partV (mkV "come") "forward";
lin come_from_V2 = prepV2 IrregEng.come_V (mkPrep "from");
lin come_in_V = partV IrregEng.come_V "in";
lin come_in_V2 = prepV2 IrregEng.come_V (mkPrep "in");
lin come_in_for_V2 = prepV2 (partV IrregEng.come_V "in") (mkPrep "for");
lin come_into_V2 = prepV2 IrregEng.come_V (mkPrep "into");
lin come_into_use_V = partV IrregEng.come_V "into use";
lin come_off_V = partV IrregEng.come_V "off";
lin come_off_V2 = prepV2 IrregEng.come_V (mkPrep "off");
lin come_off_it_V = partV IrregEng.come_V "off it";
lin come_on_V = partV IrregEng.come_V "on";
lin come_out_V = partV IrregEng.come_V "out";
lin come_out_in_V2 = prepV2 (partV IrregEng.come_V "out") (mkPrep "in");
lin come_out_of_V2 = prepV2 (partV IrregEng.come_V "out") (mkPrep "of");
lin come_out_with_V2 = prepV2 (partV IrregEng.come_V "out") (mkPrep "with");
lin come_over_V = partV IrregEng.come_V "over";
lin come_over_V2 = prepV2 IrregEng.come_V (mkPrep "over");
lin come_round_V = partV IrregEng.come_V "round";
lin come_through_V = partV IrregEng.come_V "through";
lin come_through_with_V2 = prepV2 (partV IrregEng.come_V "through") (mkPrep "with");
lin come_to_V = partV IrregEng.come_V "to";
lin come_to_V2 = prepV2 IrregEng.come_V (mkPrep "to");
lin come_up_V = partV IrregEng.come_V "up";
lin come_up_against_V2 = prepV2 (partV IrregEng.come_V "up") (mkPrep "against");
lin come_up_to_V2 = prepV2 (partV IrregEng.come_V "up") (mkPrep "to");
lin come_up_with_V2 = prepV2 (partV IrregEng.come_V "up") (mkPrep "with");
lin come_upon_V2 = prepV2 IrregEng.come_V (mkPrep "upon");
lin come_with_V2 = prepV2 IrregEng.come_V (mkPrep "with");
lin conjure_up_V2 = mkV2 (partV (mkV "conjure") "up");
lin conk_out_V = partV (mkV "conk") "out";
lin continue_on_V = partV (mkV "continue") "on";
lin contract_in_V = partV (mkV "contract") "in";
lin contract_out_V2 = mkV2 (partV (mkV "contract") "out");
lin contract_out_of_V2 = prepV2 (partV (mkV "contract") "out") (mkPrep "of");
lin cool_down_V = partV (mkV "cool") "down";
lin cool_down_V2 = mkV2 (partV (mkV "cool") "down");
lin cool_off_V = partV (mkV "cool") "off";
lin coop_up_V2 = mkV2 (partV (mkV "coop") "up");
lin cop_it_V = partV (mkV "cop") "it";
lin cop_off_V = partV (mkV "cop") "off";
lin cop_off_V2 = prepV2 (mkV "cop") (mkPrep "off");
lin cop_out_V = partV (mkV "cop") "out";
lin cost_up_V2 = mkV2 (partV IrregEng.cost_V "up");
lin cotton_on_V = partV (mkV "cotton") "on";
lin cough_up_V2 = mkV2 (partV (mkV "cough") "up");
lin count_against_V2 = prepV2 (mkV "count") (mkPrep "against");
lin count_among_V2 = mkV2 (partV (mkV "count") "among");
lin count_down_V2 = mkV2 (partV (mkV "count") "down");
lin count_for_V2 = prepV2 (mkV "count") (mkPrep "for");
lin count_in_V2 = mkV2 (partV (mkV "count") "in");
lin count_off_V2 = mkV2 (partV (mkV "count") "off");
lin count_on_V2 = prepV2 (mkV "count") (mkPrep "on");
lin count_out_V2 = mkV2 (partV (mkV "count") "out");
lin count_towards_V2 = prepV2 (mkV "count") (mkPrep "towards");
lin count_up_V2 = mkV2 (partV (mkV "count") "up");
lin count_upon_V2 = prepV2 (mkV "count") (mkPrep "upon");
lin cover_for_V2 = prepV2 (mkV "cover") (mkPrep "for");
lin cover_up_V2 = mkV2 (partV (mkV "cover") "up");
lin cozy_up_V = partV (mkV "cozy") "up";
lin cozy_up_to_V2 = prepV2 (partV (mkV "cozy") "up") (mkPrep "to");
lin crack_down_V = partV (mkV "crack") "down";
lin crack_down_on_V2 = prepV2 (partV (mkV "crack") "down") (mkPrep "on");
lin crack_on_V = partV (mkV "crack") "on";
lin crack_up_V = partV (mkV "crack") "up";
lin crack_up_V2 = mkV2 (partV (mkV "crack") "up");
lin crack_up_at_V2 = prepV2 (partV (mkV "crack") "up") (mkPrep "at");
lin cram_in_V = partV (mkV "cram") "in";
lin crank_out_V = partV (mkV "crank") "out";
lin crank_up_V2 = mkV2 (partV (mkV "crank") "up");
lin crash_out_V = partV (mkV "crash") "out";
lin cream_off_V2 = mkV2 (partV (mkV "cream") "off");
lin creep_in_V = partV IrregEng.creep_V "in";
lin creep_into_V2 = prepV2 IrregEng.creep_V (mkPrep "into");
lin creep_out_V2 = mkV2 (partV IrregEng.creep_V "out");
lin creep_out_on_V2 = prepV2 (partV IrregEng.creep_V "out") (mkPrep "on");
lin creep_over_V2 = prepV2 IrregEng.creep_V (mkPrep "over");
lin creep_up_V = partV (mkV "creep") "up";
lin creep_up_on_V2 = prepV2 (partV (mkV "creep") "up") (mkPrep "on");
lin crop_up_V = partV (mkV "crop") "up";
lin cross_off_V2 = mkV2 (partV (mkV "cross") "off");
lin cross_out_V2 = mkV2 (partV (mkV "cross") "out");
lin cross_up_V2 = mkV2 (partV (mkV "cross") "up");
lin cruise_through_V2 = prepV2 (mkV "cruise") (mkPrep "through");
lin crumb_down_V = partV (mkV "crumb") "down";
lin cry_off_V2 = mkV2 (partV (mkV "cry") "off");
lin cry_out_V = partV (mkV "cry") "out";
lin curl_up_V = partV (mkV "curl") "up";
lin cut_across_V2 = prepV2 IrregEng.cut_V (mkPrep "across");
lin cut_back_V2 = mkV2 (partV IrregEng.cut_V "back");
lin cut_back_on_V2 = prepV2 (partV IrregEng.cut_V "back") (mkPrep "on");
lin cut_down_V = partV IrregEng.cut_V "down";
lin cut_down_V2 = mkV2 (partV IrregEng.cut_V "down");
lin cut_down_on_V2 = prepV2 (partV IrregEng.cut_V "down") (mkPrep "on");
lin cut_in_V = partV IrregEng.cut_V "in";
lin cut_in_V2 = mkV2 (partV IrregEng.cut_V "in");
lin cut_in_on_V2 = prepV2 (partV IrregEng.cut_V "in") (mkPrep "on");
lin cut_it_out_V2 = mkV2 (partV IrregEng.cut_V "it out");
lin cut_off_V = partV (mkV "cut") "off";
lin cut_off_V2 = mkV2 (partV IrregEng.cut_V "off");
lin cut_out_V = partV IrregEng.cut_V "out";
lin cut_out_V2 = mkV2 (partV IrregEng.cut_V "out");
lin cut_out_on_V2 = prepV2 (partV IrregEng.cut_V "out") (mkPrep "on");
lin cut_up_V = partV (mkV "cut") "up";
lin cut_up_V2 = mkV2 (partV IrregEng.cut_V "up");
lin damp_down_V2 = mkV2 (partV (mkV "damp") "down");
lin damp_off_V = partV (mkV "damp") "off";
lin dash_down_V2 = mkV2 (partV (mkV "dash") "down");
lin dash_off_V = partV (mkV "dash") "off";
lin dash_off_V2 = mkV2 (partV (mkV "dash") "off");
lin dawn_on_V2 = prepV2 (mkV "dawn") (mkPrep "on");
lin decide_on_V2 = prepV2 (mkV "decide") (mkPrep "on");
lin decide_upon_V2 = prepV2 (mkV "decide") (mkPrep "upon");
lin deck_out_V = partV (mkV "deck") "out";
lin die_away_V = partV (mkV "die") "away";
lin die_back_V = partV (mkV "die") "back";
lin die_down_V = partV (mkV "die") "down";
lin die_for_V2 = prepV2 (mkV "die") (mkPrep "for");
lin die_off_V = partV (mkV "die") "off";
lin die_out_V = partV (mkV "die") "out";
lin dig_in_V = partV IrregEng.dig_V "in";
lin dig_into_V2 = prepV2 IrregEng.dig_V (mkPrep "into");
lin dig_out_V2 = mkV2 (partV IrregEng.dig_V "out");
lin dig_up_V2 = mkV2 (partV IrregEng.dig_V "up");
lin dine_out_V = partV (mkV "dine") "out";
lin dine_out_on_V2 = prepV2 (partV (mkV "dine") "out") (mkPrep "on");
lin dip_in_V2 = mkV2 (partV (mkV "dip") "in");
lin dip_into_V2 = prepV2 (mkV "dip") (mkPrep "into");
lin dip_out_V = partV (mkV "dip") "out";
lin disagree_with_V2 = prepV2 (mkV "disagree") (mkPrep "with");
lin dish_out_V2 = mkV2 (partV (mkV "dish") "out");
lin dish_up_V2 = mkV2 (partV (mkV "dish") "up");
lin dive_in_V = partV IrregEng.dive_V "in";
lin dive_into_V2 = prepV2 IrregEng.dive_V (mkPrep "into");
lin divide_up_V2 = mkV2 (partV (mkV "divide") "up");
lin divvy_out_V2 = mkV2 (partV (mkV "divvy") "out");
lin divvy_up_V2 = mkV2 (partV (mkV "divvy") "up");
lin dob_in_V2 = mkV2 (partV (mkV "dob") "in");
lin dole_out_V2 = mkV2 (partV (mkV "dole") "out");
lin doss_about_V = partV (mkV "doss") "about";
lin doss_around_V = partV (mkV "doss") "around";
lin doss_down_V = partV (mkV "doss") "down";
lin double_as_V2 = prepV2 (mkV "double") (mkPrep "as");
lin double_back_V = partV (mkV "double") "back";
lin double_over_V = partV (mkV "double") "over";
lin double_up_V = partV (mkV "double") "up";
lin double_up_as_V2 = prepV2 (partV (mkV "double") "up") (mkPrep "as");
lin doze_off_V = partV (mkV "doze") "off";
lin drag_down_V = partV (mkV "drag") "down";
lin drag_in_V = partV (mkV "drag") "in";
lin drag_on_V = partV (mkV "drag") "on";
lin draw_back_V2 = mkV2 (partV IrregEng.draw_V "back");
lin draw_down_V2 = mkV2 (partV IrregEng.draw_V "down");
lin draw_even_V = partV IrregEng.draw_V "even";
lin draw_in_V = partV IrregEng.draw_V "in";
lin draw_into_V2 = prepV2 IrregEng.draw_V (mkPrep "into");
lin draw_off_V = partV (mkV "draw") "off";
lin draw_on_V = partV IrregEng.draw_V "on";
lin draw_on_V2 = prepV2 IrregEng.draw_V (mkPrep "on");
lin draw_out_V2 = mkV2 (partV IrregEng.draw_V "out");
lin draw_up_V = partV IrregEng.draw_V "up";
lin draw_up_V2 = mkV2 (partV IrregEng.draw_V "up");
lin dream_of_V2 = prepV2 IrregEng.dream_V (mkPrep "of");
lin dream_up_V2 = mkV2 (partV IrregEng.dream_V "up");
lin dredge_up_V2 = mkV2 (partV (mkV "dredge") "up");
lin dress_down_V = partV (mkV "dress") "down";
lin dress_down_V2 = mkV2 (partV (mkV "dress") "down");
lin dress_up_V = partV (mkV "dress") "up";
lin dress_up_V2 = mkV2 (partV (mkV "dress") "up");
lin drift_apart_V = partV (mkV "drift") "apart";
lin drift_off_V = partV (mkV "drift") "off";
lin drill_down_V = partV (mkV "drill") "down";
lin drill_down_through_V2 = prepV2 (partV (mkV "drill") "down") (mkPrep "through");
lin drill_into_V3 = mkV3 (mkV "drill") noPrep (mkPrep "into");
lin drink_up_V2 = mkV2 (partV IrregEng.drink_V "up");
lin drive_away_V2 = mkV2 (partV IrregEng.drive_V "away");
lin drive_back_V2 = mkV2 (partV IrregEng.drive_V "back");
lin drive_by_V = partV IrregEng.drive_V "by";
lin drive_down_V = partV (mkV "drive") "down";
lin drive_off_V = partV IrregEng.drive_V "off";
lin drive_out_V2 = mkV2 (partV IrregEng.drive_V "out");
lin drive_up_V = partV IrregEng.drive_V "up";
lin drive_up_V2 = mkV2 (partV IrregEng.drive_V "up");
lin drone_on_V = partV (mkV "drone") "on";
lin drop_around_V = partV (mkV "drop") "around";
lin drop_around_V2 = mkV2 (partV (mkV "drop") "around");
lin drop_away_V = partV (mkV "drop") "away";
lin drop_back_V = partV (mkV "drop") "back";
lin drop_by_V = partV (mkV "drop") "by";
lin drop_in_V = partV (mkV "drop") "in";
lin drop_in_on_V2 = prepV2 (partV (mkV "drop") "in") (mkPrep "on");
lin drop_off_V = partV (mkV "drop") "off";
lin drop_off_V2 = mkV2 (partV (mkV "drop") "off");
lin drop_out_V = partV (mkV "drop") "out";
lin drop_out_of_V2 = prepV2 (partV (mkV "drop") "out") (mkPrep "of");
lin drop_over_V = partV (mkV "drop") "over";
lin drop_round_V = partV (mkV "drop") "round";
lin drop_round_V2 = mkV2 (partV (mkV "drop") "round");
lin drop_someone_in_it_V2 = mkV2 (partV (mkV "drop") "in it");
lin drop_through_V = partV (mkV "drop") "through";
lin drown_in_V2 = mkV2 (partV (mkV "drown") "in");
lin drown_out_V2 = mkV2 (partV (mkV "drown") "out");
lin drum_into_V2 = mkV2 (partV (mkV "drum") "into");
lin drum_out_V2 = mkV2 (partV (mkV "drum") "out");
lin drum_up_V2 = prepV2 (mkV "drum") (mkPrep "up");
lin dry_off_V2 = mkV2 (partV (mkV "dry") "off");
lin dry_out_V = partV (mkV "dry") "out";
lin dry_out_V2 = mkV2 (partV (mkV "dry") "out");
lin dry_up_V = partV (mkV "dry") "up";
lin dry_up_V2 = mkV2 (partV (mkV "dry") "up");
lin duck_out_of_V2 = prepV2 (partV (mkV "duck") "out") (mkPrep "of");
lin duff_up_V2 = mkV2 (partV (mkV "duff") "up");
lin dug_out_V = partV (mkV "dug") "out";
lin dumb_down_V2 = mkV2 (partV (mkV "dumb") "down");
lin dump_on_V2 = prepV2 (mkV "dump") (mkPrep "on");
lin dust_off_V = partV (mkV "dust") "off";
lin dwell_on_V2 = prepV2 (mkV "dwell") (mkPrep "on");
lin dwell_upon_V2 = prepV2 (mkV "dwell") (mkPrep "upon");
lin ease_off_V2 = prepV2 (mkV "ease") (mkPrep "off");
lin ease_up_V = partV (mkV "ease") "up";
lin eat_away_V = partV IrregEng.eat_V "away";
lin eat_away_V2 = mkV2 (partV IrregEng.eat_V "away");
lin eat_in_V = partV IrregEng.eat_V "in";
lin eat_into_V2 = prepV2 IrregEng.eat_V (mkPrep "into");
lin eat_out_V = partV IrregEng.eat_V "out";
lin eat_up_V2 = mkV2 (partV IrregEng.eat_V "up");
lin ebb_away_V = partV (mkV "ebb") "away";
lin edge_out_V2 = mkV2 (partV (mkV "edge") "out");
lin edge_up_V = partV (mkV "edge") "up";
lin egg_on_V2 = mkV2 (partV (mkV "egg") "on");
lin eke_out_V2 = mkV2 (partV (mkV "eke") "out");
lin embark_on_V2 = prepV2 (mkV "embark") (mkPrep "on");
lin embark_upon_V2 = prepV2 (mkV "embark") (mkPrep "upon");
lin empty_out_V2 = mkV2 (partV (mkV "empty") "out");
lin end_in_V2 = prepV2 (mkV "end") (mkPrep "in");
lin end_up_V2 = prepV2 (mkV "end") (mkPrep "up");
lin end_up_with_V2 = prepV2 (partV (mkV "end") "up") (mkPrep "with");
lin enter_for_V2 = prepV2 (mkV "enter") (mkPrep "for");
lin enter_into_V2 = prepV2 (mkV "enter") (mkPrep "into");
lin even_out_V = partV (mkV "even") "out";
lin explain_away_V = partV (mkV "explain") "away";
lin eye_up_V2 = mkV2 (partV (mkV "eye") "up");
lin face_off_V2 = mkV2 (partV (mkV "face") "off");
lin face_up_to_V2 = prepV2 (partV (mkV "face") "up") (mkPrep "to");
lin factor_in_V = partV (mkV "factor") "in";
lin faff_about_V = partV (mkV "faff") "about";
lin faff_around_V = partV (mkV "faff") "around";
lin fall_about_V = partV IrregEng.fall_V "about";
lin fall_apart_V = partV IrregEng.fall_V "apart";
lin fall_back_V = partV IrregEng.fall_V "back";
lin fall_back_on_V2 = prepV2 (partV IrregEng.fall_V "back") (mkPrep "on");
lin fall_behind_V = partV IrregEng.fall_V "behind";
lin fall_behind_in_V2 = prepV2 (partV IrregEng.fall_V "behind") (mkPrep "in");
lin fall_down_V = partV IrregEng.fall_V "down";
lin fall_for_V2 = prepV2 IrregEng.fall_V (mkPrep "for");
lin fall_in_V = partV IrregEng.fall_V "in";
lin fall_into_V2 = prepV2 IrregEng.fall_V (mkPrep "into");
lin fall_off_V = partV IrregEng.fall_V "off";
lin fall_out_V = partV IrregEng.fall_V "out";
lin fall_out_with_V2 = prepV2 (partV IrregEng.fall_V "out") (mkPrep "with");
lin fall_over_V = partV IrregEng.fall_V "over";
lin fall_through_V = partV IrregEng.fall_V "through";
lin fall_under_V2 = prepV2 IrregEng.fall_V (mkPrep "under");
lin farm_out_V2 = mkV2 (partV (mkV "farm") "out");
lin fart_about_V = partV (mkV "fart") "about";
lin fart_around_V = partV (mkV "fart") "around";
lin fasten_down_V2 = mkV2 (partV (mkV "fasten") "down");
lin fasten_on_V2 = prepV2 (mkV "fasten") (mkPrep "on");
lin fasten_onto_V2 = prepV2 (mkV "fasten") (mkPrep "onto");
lin fasten_up_V2 = mkV2 (partV (mkV "fasten") "up");
lin fathom_out_V2 = mkV2 (partV (mkV "fathom") "out");
lin fatten_up_V2 = mkV2 (partV (mkV "fatten") "up");
lin fawn_on_V2 = prepV2 (mkV "fawn") (mkPrep "on");
lin fawn_over_V2 = prepV2 (mkV "fawn") (mkPrep "over");
lin fed_up_V = partV (mkV "fed") "up";
lin feed_off_V2 = prepV2 IrregEng.feed_V (mkPrep "off");
lin feed_on_V2 = mkV2 (partV IrregEng.feed_V "on");
lin feed_up_V2 = mkV2 (partV IrregEng.feed_V "up");
lin feel_out_V = partV (mkV "feel") "out";
lin feel_up_V2 = mkV2 (partV IrregEng.feel_V "up");
lin feel_up_to_V2 = prepV2 (partV IrregEng.feel_V "up") (mkPrep "to");
lin fell_apart_V = partV (mkV "fell") "apart";
lin fell_off_V = partV (mkV "fell") "off";
lin fell_through_V = partV (mkV "fell") "through";
lin fence_in_V2 = mkV2 (partV (mkV "fence") "in");
lin fence_off_V2 = mkV2 (partV (mkV "fence") "off");
lin fend_for_V2 = prepV2 (mkV "fend") (mkPrep "for");
lin fend_off_V2 = mkV2 (partV (mkV "fend") "off");
lin ferret_out_V2 = mkV2 (partV (mkV "ferret") "out");
lin fess_up_V = partV (mkV "fess") "up";
lin fess_up_V2 = mkV2 (partV (mkV "fess") "up");
lin fess_up_to_V2 = prepV2 (partV (mkV "fess") "up") (mkPrep "to");
lin fiddle_about_V = partV (mkV "fiddle") "about";
lin fiddle_around_V = partV (mkV "fiddle") "around";
lin fiddle_away_V2 = mkV2 (partV (mkV "fiddle") "away");
lin fight_back_V = partV IrregEng.fight_V "back";
lin fight_back_V2 = mkV2 (partV IrregEng.fight_V "back");
lin fight_it_out_V2 = mkV2 (partV IrregEng.fight_V "it out");
lin fight_off_V2 = mkV2 (partV IrregEng.fight_V "off");
lin figure_on_V2 = mkV2 (partV (mkV "figure") "on");
lin figure_out_V2 = mkV2 (partV (mkV "figure") "out");
lin figure_up_V2 = mkV2 (partV (mkV "figure") "up");
lin file_away_V2 = mkV2 (partV (mkV "file") "away");
lin file_for_V2 = prepV2 (mkV "file") (mkPrep "for");
lin fill_in_V = partV (mkV "fill") "in";
lin fill_in_V2 = mkV2 (partV (mkV "fill") "in");
lin fill_in_for_V2 = prepV2 (partV (mkV "fill") "in") (mkPrep "for");
lin fill_in_on_V3 = mkV3 (mkV "fill") noPrep (mkPrep "in on");
lin fill_out_V = partV (mkV "fill") "out";
lin fill_out_V2 = mkV2 (partV (mkV "fill") "out");
lin fill_up_V2 = mkV2 (partV (mkV "fill") "up");
lin filter_in_V = partV (mkV "filter") "in";
lin filter_out_V2 = mkV2 (partV (mkV "filter") "out");
lin find_out_V = partV IrregEng.find_V "out";
lin find_out_V2 = mkV2 (partV IrregEng.find_V "out");
lin finish_off_V2 = mkV2 (partV (mkV "finish") "off");
lin finish_up_V = partV (mkV "finish") "up";
lin finish_up_with_V2 = prepV2 (partV (mkV "finish") "up") (mkPrep "with");
lin finish_with_V2 = prepV2 (mkV "finish") (mkPrep "with");
lin fink_on_V2 = prepV2 (mkV "fink") (mkPrep "on");
lin fink_out_V = partV (mkV "fink") "out";
lin fire_away_V = partV (mkV "fire") "away";
lin fire_back_V = partV (mkV "fire") "back";
lin fire_off_V2 = mkV2 (partV (mkV "fire") "off");
lin fire_up_V = partV (mkV "fire") "up";
lin fire_up_V2 = mkV2 (partV (mkV "fire") "up");
lin firm_up_V2 = mkV2 (partV (mkV "firm") "up");
lin fish_for_V2 = prepV2 (mkV "fish") (mkPrep "for");
lin fish_out_V2 = mkV2 (partV (mkV "fish") "out");
lin fit_in_V = partV IrregEng.fit_V "in";
lin fit_in_V2 = mkV2 (partV IrregEng.fit_V "in");
lin fit_in_with_V2 = prepV2 (partV IrregEng.fit_V "in") (mkPrep "with");
lin fit_into_V2 = prepV2 IrregEng.fit_V (mkPrep "into");
lin fit_out_V2 = mkV2 (partV IrregEng.fit_V "out");
lin fit_out_with_V2 = mkV2 (partV IrregEng.fit_V "out with");
lin fit_up_V2 = mkV2 (partV IrregEng.fit_V "up");
lin fix_up_V2 = mkV2 (partV (mkV "fix") "up");
lin fizzle_out_V = partV (mkV "fizzle") "out";
lin flag_down_V2 = mkV2 (partV (mkV "flag") "down");
lin flag_up_V2 = mkV2 (partV (mkV "flag") "up");
lin flake_out_V = partV (mkV "flake") "out";
lin flame_out_V = partV (mkV "flame") "out";
lin flame_up_V = partV (mkV "flame") "up";
lin flare_out_V = partV (mkV "flare") "out";
lin flare_up_V = partV (mkV "flare") "up";
lin flesh_out_V2 = mkV2 (partV (mkV "flesh") "out");
lin flick_over_V = partV (mkV "flick") "over";
lin flick_through_V2 = prepV2 (mkV "flick") (mkPrep "through");
lin flip_off_V2 = mkV2 (partV (mkV "flip") "off");
lin flip_out_V = partV (mkV "flip") "out";
lin flip_through_V2 = prepV2 (mkV "flip") (mkPrep "through");
lin flog_off_V2 = mkV2 (partV (mkV "flog") "off");
lin floor_it_V = partV (mkV "floor") "it";
lin flounce_off_V = partV (mkV "flounce") "off";
lin flounce_out_V = partV (mkV "flounce") "out";
lin fluff_out_V2 = mkV2 (partV (mkV "fluff") "out");
lin fluff_up_V2 = mkV2 (partV (mkV "fluff") "up");
lin flush_out_V = partV (mkV "flush") "out";
lin fly_about_V = partV IrregEng.fly_V "about";
lin fly_around_V = partV IrregEng.fly_V "around";
lin fly_at_V2 = prepV2 IrregEng.fly_V (mkPrep "at");
lin fly_by_V = partV IrregEng.fly_V "by";
lin fly_into_V2 = prepV2 IrregEng.fly_V (mkPrep "into");
lin fly_out_V = partV (mkV "fly") "out";
lin fob_off_V2 = mkV2 (partV (mkV "fob") "off");
lin fob_off_on_V3 = mkV3 (partV (mkV "fob") "off") noPrep (mkPrep "on");
lin fob_off_onto_V3 = mkV3 (partV (mkV "fob") "off") noPrep (mkPrep "onto");
lin fob_off_with_V3 = mkV3 (partV (mkV "fob") "off") noPrep (mkPrep "with");
lin focus_on_V2 = prepV2 (mkV "focus") (mkPrep "on");
lin fold_up_V2 = mkV2 (partV (mkV "fold") "up");
lin follow_on_V = partV (mkV "follow") "on";
lin follow_on_from_V2 = prepV2 (partV (mkV "follow") "on") (mkPrep "from");
lin follow_through_V = partV (mkV "follow") "through";
lin follow_up_V2 = mkV2 (partV (mkV "follow") "up");
lin fool_about_V = partV (mkV "fool") "about";
lin fool_around_V = partV (mkV "fool") "around";
lin fool_with_V2 = prepV2 (mkV "fool") (mkPrep "with");
lin force_out_V = partV (mkV "force") "out";
lin forge_ahead_V = partV (mkV "forge") "ahead";
lin fork_out_V = partV (mkV "fork") "out";
lin fork_over_V = partV (mkV "fork") "over";
lin freak_out_V2 = mkV2 (partV (mkV "freak") "out");
lin free_up_V2 = mkV2 (partV (mkV "free") "up");
lin freeze_out_V2 = mkV2 (partV IrregEng.freeze_V "out");
lin freeze_over_V = partV (mkV "freeze") "over";
lin freeze_up_V = partV (mkV "freeze") "up";
lin freshen_up_V = partV (mkV "freshen") "up";
lin freshen_up_V2 = mkV2 (partV (mkV "freshen") "up");
lin frighten_away_V2 = mkV2 (partV (mkV "frighten") "away");
lin frighten_off_V2 = mkV2 (partV (mkV "frighten") "off");
lin fritter_away_V = partV (mkV "fritter") "away";
lin front_for_V2 = prepV2 (mkV "front") (mkPrep "for");
lin front_off_V2 = mkV2 (partV (mkV "front") "off");
lin front_onto_V2 = prepV2 (mkV "front") (mkPrep "onto");
lin front_out_V2 = mkV2 (partV (mkV "front") "out");
lin front_up_V = partV (mkV "front") "up";
lin front_up_V2 = mkV2 (partV (mkV "front") "up");
lin frown_on_V2 = prepV2 (mkV "frown") (mkPrep "on");
lin fudge_over_V = partV (mkV "fudge") "over";
lin fuel_up_V = partV (mkV "fuel") "up";
lin gad_about_V = partV (mkV "gad") "about";
lin gad_around_V = partV (mkV "gad") "around";
lin gag_for_V2 = prepV2 (mkV "gag") (mkPrep "for");
lin gain_back_V = partV (mkV "gain") "back";
lin gang_up_V = partV (mkV "gang") "up";
lin gang_up_against_V2 = prepV2 (partV (mkV "gang") "up") (mkPrep "against");
lin gang_up_on_V2 = prepV2 (partV (mkV "gang") "up") (mkPrep "on");
lin gear_to_V2 = prepV2 (mkV "gear") (mkPrep "to");
lin gear_towards_V2 = prepV2 (mkV "gear") (mkPrep "towards");
lin gear_up_V = partV (mkV "gear") "up";
lin geek_out_V = partV (mkV "geek") "out";
lin get_about_V = partV IrregEng.get_V "about";
lin get_above_V2 = prepV2 IrregEng.get_V (mkPrep "above");
lin get_across_V = partV (mkV "get") "across";
lin get_across_V2 = prepV2 IrregEng.get_V (mkPrep "across");
lin get_across_to_V2 = prepV2 (partV (mkV "get") "across") (mkPrep "to");
lin get_after_V2 = prepV2 IrregEng.get_V (mkPrep "after");
lin get_ahead_V = partV IrregEng.get_V "ahead";
lin get_ahead_of_V2 = prepV2 (partV IrregEng.get_V "ahead") (mkPrep "of");
lin get_along_V = partV IrregEng.get_V "along";
lin get_along_in_V2 = prepV2 (partV IrregEng.get_V "along") (mkPrep "in");
lin get_along_with_V2 = prepV2 (partV IrregEng.get_V "along") (mkPrep "with");
lin get_around_V = partV IrregEng.get_V "around";
lin get_around_V2 = prepV2 IrregEng.get_V (mkPrep "around");
lin get_around_to_V2 = prepV2 (partV IrregEng.get_V "around") (mkPrep "to");
lin get_at_V2 = prepV2 IrregEng.get_V (mkPrep "at");
lin get_away_V = partV IrregEng.get_V "away";
lin get_away_from_V2 = prepV2 (partV IrregEng.get_V "away") (mkPrep "from");
lin get_away_with_V2 = prepV2 (partV IrregEng.get_V "away") (mkPrep "with");
lin get_back_V = partV IrregEng.get_V "back";
lin get_back_V2 = mkV2 (partV IrregEng.get_V "back");
lin get_back_at_V2 = prepV2 (partV IrregEng.get_V "back") (mkPrep "at");
lin get_back_into_V2 = prepV2 (partV IrregEng.get_V "back") (mkPrep "into");
lin get_back_to_V2 = prepV2 (partV IrregEng.get_V "back") (mkPrep "to");
lin get_back_together_V = partV IrregEng.get_V "back together";
lin get_behind_V2 = prepV2 IrregEng.get_V (mkPrep "behind");
lin get_behind_with_V2 = prepV2 (partV IrregEng.get_V "behind") (mkPrep "with");
lin get_by_V = partV IrregEng.get_V "by";
lin get_by_V2 = mkV2 (partV IrregEng.get_V "by");
lin get_by_on_V2 = prepV2 (partV IrregEng.get_V "by") (mkPrep "on");
lin get_by_with_V2 = prepV2 (partV IrregEng.get_V "by") (mkPrep "with");
lin get_down_V = partV IrregEng.get_V "down";
lin get_down_V2 = mkV2 (partV IrregEng.get_V "down");
lin get_down_on_V2 = prepV2 (partV IrregEng.get_V "down") (mkPrep "on");
lin get_down_to_V2 = prepV2 (partV IrregEng.get_V "down") (mkPrep "to");
lin get_even_V = partV (mkV "get") "even";
lin get_in_V = partV IrregEng.get_V "in";
lin get_in_V2 = mkV2 (partV IrregEng.get_V "in");
lin get_in_on_V2 = prepV2 (partV IrregEng.get_V "in") (mkPrep "on");
lin get_in_with_V2 = prepV2 (partV IrregEng.get_V "in") (mkPrep "with");
lin get_into_V2 = prepV2 IrregEng.get_V (mkPrep "into");
lin get_it_V = partV IrregEng.get_V "it";
lin get_it_off_V = partV IrregEng.get_V "it off";
lin get_it_off_with_V2 = prepV2 (partV IrregEng.get_V "it off") (mkPrep "with");
lin get_it_on_V = partV IrregEng.get_V "it on";
lin get_it_on_with_V2 = prepV2 (partV IrregEng.get_V "it on") (mkPrep "with");
lin get_it_together_V = partV IrregEng.get_V "it together";
lin get_it_up_V = partV IrregEng.get_V "it up";
lin get_off_V = partV IrregEng.get_V "off";
lin get_off_V2 = mkV2 (partV IrregEng.get_V "off");
lin get_off_it_V2 = mkV2 (partV IrregEng.get_V "off it");
lin get_off_on_V2 = prepV2 (partV IrregEng.get_V "off") (mkPrep "on");
lin get_off_with_V2 = prepV2 (partV IrregEng.get_V "off") (mkPrep "with");
lin get_on_1_V2 = mkV2 (partV IrregEng.get_V "on");
lin get_on_2_V2 = prepV2 IrregEng.get_V (mkPrep "on");
lin get_on_V = partV IrregEng.get_V "on";
lin get_on_at_V2 = prepV2 (partV IrregEng.get_V "on") (mkPrep "at");
lin get_on_for_V2 = prepV2 (partV IrregEng.get_V "on") (mkPrep "for");
lin get_on_to_V2 = prepV2 (partV IrregEng.get_V "on") (mkPrep "to");
lin get_on_with_V2 = prepV2 (partV IrregEng.get_V "on") (mkPrep "with");
lin get_onto_V2 = prepV2 IrregEng.get_V (mkPrep "onto");
lin get_out_V = partV IrregEng.get_V "out";
lin get_out_V2 = mkV2 (partV IrregEng.get_V "out");
lin get_out_of_V2 = prepV2 (partV IrregEng.get_V "out") (mkPrep "of");
lin get_over_V = partV IrregEng.get_V "over";
lin get_over_V2 = mkV2 (partV IrregEng.get_V "over");
lin get_over_with_V2 = mkV2 (partV IrregEng.get_V "over with");
lin get_round_V = partV IrregEng.get_V "round";
lin get_round_V2 = mkV2 (partV IrregEng.get_V (variants {"round"; "around"}));
lin get_round_to_V2 = prepV2 (partV IrregEng.get_V (variants {"round"; "around"})) (mkPrep "to");
lin get_through_V = partV IrregEng.get_V "through";
lin get_through_V2 = mkV2 (partV IrregEng.get_V "through");
lin get_through_V3 = mkV3 IrregEng.get_V noPrep (mkPrep "through");
lin get_through_to_V2 = prepV2 (partV IrregEng.get_V "through") (mkPrep "to");
lin get_to_V2 = prepV2 IrregEng.get_V (mkPrep "to");
lin get_together_V = partV IrregEng.get_V "together";
lin get_up_V = partV IrregEng.get_V "up";
lin get_up_V2 = mkV2 (partV IrregEng.get_V "up");
lin get_up_to_V2 = prepV2 (partV IrregEng.get_V "up") (mkPrep "to");
lin ghost_away_V2 = mkV2 (partV (mkV "ghost") "away");
lin gin_up_V2 = mkV2 (partV (mkV "gin") "up");
lin ginger_up_V2 = mkV2 (partV (mkV "ginger") "up");
lin give_away_V = partV (mkV "give") "away";
lin give_away_V2 = mkV2 (partV IrregEng.give_V "away");
lin give_back_V2 = mkV2 (partV IrregEng.give_V "back");
lin give_in_V = partV IrregEng.give_V "in";
lin give_in_V2 = mkV2 (partV IrregEng.give_V "in");
lin give_in_to_V2 = prepV2 (partV IrregEng.give_V "in") (mkPrep "to");
lin give_it_to_V2 = prepV2 (partV IrregEng.give_V "it") (mkPrep "to");
lin give_it_up_for_V2 = prepV2 (partV IrregEng.give_V "it up") (mkPrep "for");
lin give_it_up_to_V2 = prepV2 (partV IrregEng.give_V "it up") (mkPrep "to");
lin give_of_V2 = prepV2 IrregEng.give_V (mkPrep "of");
lin give_off_V = partV IrregEng.give_V "off";
lin give_off_V2 = prepV2 IrregEng.give_V (mkPrep "off");
lin give_onto_V2 = prepV2 IrregEng.give_V (mkPrep "onto");
lin give_out_V = partV IrregEng.give_V "out";
lin give_out_V2 = mkV2 (partV IrregEng.give_V "out");
lin give_over_V = partV IrregEng.give_V "over";
lin give_over_V2 = mkV2 (partV IrregEng.give_V "over");
lin give_over_to_V3 = mkV3 IrregEng.give_V noPrep (mkPrep "over to");
lin give_up_V = partV IrregEng.give_V "up";
lin give_up_V2 = mkV2 (partV IrregEng.give_V "up");
lin give_up_on_V2 = prepV2 (partV IrregEng.give_V "up") (mkPrep "on");
lin give_up_to_V2 = prepV2 (partV IrregEng.give_V "up") (mkPrep "to");
lin give_way_V = partV IrregEng.give_V "way";
lin give_way_to_V2 = prepV2 (partV IrregEng.give_V "way") (mkPrep "to");
lin give_yourself_up_V = partV (reflV IrregEng.give_V) "up";
lin give_yourself_up_to_V2 = prepV2 (partV (reflV IrregEng.give_V) "up") (mkPrep "to");
lin gloss_over_V2 = prepV2 (mkV "gloss") (mkPrep "over");
lin glue_down_V = partV (mkV "glue") "down";
lin gnaw_at_V2 = prepV2 (mkV "gnaw") (mkPrep "at");
lin gnaw_away_at_V2 = prepV2 (partV (mkV "gnaw") "away") (mkPrep "at");
lin go_about_V = partV IrregEng.go_V "about";
lin go_about_V2 = prepV2 IrregEng.go_V (mkPrep "about");
lin go_across_V = partV IrregEng.go_V "across";
lin go_after_V2 = prepV2 IrregEng.go_V (mkPrep "after");
lin go_against_V2 = prepV2 IrregEng.go_V (mkPrep "against");
lin go_ahead_V = partV IrregEng.go_V "ahead";
lin go_ahead_with_V2 = prepV2 (partV IrregEng.go_V "ahead") (mkPrep "with");
lin go_along_V = partV (mkV "go") "along";
lin go_along_with_V2 = prepV2 (partV (mkV "go") "along") (mkPrep "with");
lin go_around_V = partV IrregEng.go_V "around";
lin go_at_V2 = prepV2 IrregEng.go_V (mkPrep "at");
lin go_away_V = partV IrregEng.go_V "away";
lin go_back_V = partV IrregEng.go_V "back";
lin go_back_V2 = mkV2 (partV IrregEng.go_V "back");
lin go_back_on_V2 = prepV2 (partV IrregEng.go_V "back") (mkPrep "on");
lin go_before_V = partV IrregEng.go_V "before";
lin go_below_V = partV IrregEng.go_V "below";
lin go_by_V = partV IrregEng.go_V "by";
lin go_by_V2 = prepV2 IrregEng.go_V (mkPrep "by");
lin go_down_V = partV IrregEng.go_V "down";
lin go_down_on_V2 = prepV2 (partV IrregEng.go_V "down") (mkPrep "on");
lin go_down_to_V2 = prepV2 (partV IrregEng.go_V "down") (mkPrep "to");
lin go_down_with_V2 = prepV2 (partV IrregEng.go_V "down") (mkPrep "with");
lin go_for_V = partV IrregEng.go_V "for";
lin go_for_V2 = prepV2 IrregEng.go_V (mkPrep "for");
lin go_for_it_V = partV IrregEng.go_V "for it";
lin go_forth_V = partV IrregEng.go_V "forth";
lin go_forward_V = partV IrregEng.go_V "forward";
lin go_in_V = partV IrregEng.go_V "in";
lin go_in_for_V2 = prepV2 (partV IrregEng.go_V "in") (mkPrep "for");
lin go_in_with_V2 = prepV2 (partV IrregEng.go_V "in") (mkPrep "with");
lin go_into_V2 = prepV2 IrregEng.go_V (mkPrep "into");
lin go_it_V = partV IrregEng.go_V "it";
lin go_it_alone_V = partV IrregEng.go_V "it alone";
lin go_off_V = partV IrregEng.go_V "off";
lin go_off_V2 = mkV2 (partV IrregEng.go_V "off");
lin go_off_with_V2 = prepV2 (partV IrregEng.go_V "off") (mkPrep "with");
lin go_on_V = partV IrregEng.go_V "on";
lin go_on_V2 = mkV2 (partV IrregEng.go_V "on");
lin go_on_about_V2 = prepV2 (partV IrregEng.go_V "on") (mkPrep "about");
lin go_on_at_V2 = prepV2 (partV IrregEng.go_V "on") (mkPrep "at");
lin go_on_to_V2 = prepV2 (partV IrregEng.go_V "on") (mkPrep "to");
lin go_on_with_V2 = prepV2 (partV IrregEng.go_V "on") (mkPrep "with");
lin go_one_V = partV IrregEng.go_V "one";
lin go_out_V = partV IrregEng.go_V "out";
lin go_out_for_V2 = prepV2 (partV IrregEng.go_V "out") (mkPrep "for");
lin go_out_to_V2 = prepV2 (partV IrregEng.go_V "out") (mkPrep "to");
lin go_out_with_V2 = prepV2 (partV IrregEng.go_V "out") (mkPrep "with");
lin go_over_V = partV IrregEng.go_V "over";
lin go_over_V2 = mkV2 (partV IrregEng.go_V "over");
lin go_over_to_V2 = prepV2 (partV IrregEng.go_V "over") (mkPrep "to");
lin go_past_V2 = prepV2 IrregEng.go_V (mkPrep "past");
lin go_round_V = partV IrregEng.go_V "round";
lin go_through_V = partV IrregEng.go_V "through";
lin go_through_V2 = mkV2 (partV IrregEng.go_V "through");
lin go_through_with_V2 = prepV2 (partV IrregEng.go_V "through") (mkPrep "with");
lin go_to_V2 = prepV2 IrregEng.go_V (mkPrep "to");
lin go_together_V = partV IrregEng.go_V "together";
lin go_towards_V2 = prepV2 IrregEng.go_V (mkPrep "towards");
lin go_under_V = partV IrregEng.go_V "under";
lin go_up_V = partV IrregEng.go_V "up";
lin go_up_to_V2 = prepV2 (partV IrregEng.go_V "up") (mkPrep "to");
lin go_with_V2 = prepV2 IrregEng.go_V (mkPrep "with");
lin go_without_V2 = prepV2 IrregEng.go_V (mkPrep "without");
lin goof_around_V = partV (mkV "goof") "around";
lin goof_off_V = partV (mkV "goof") "off";
lin goof_up_V2 = mkV2 (partV (mkV "goof") "up");
lin grasp_at_V2 = prepV2 (mkV "grasp") (mkPrep "at");
lin grass_on_V2 = prepV2 (mkV "grass") (mkPrep "on");
lin grass_up_V2 = mkV2 (partV (mkV "grass") "up");
lin grey_out_V2 = mkV2 (partV (mkV "grey") "out");
lin grind_away_V = partV IrregEng.grind_V "away";
lin grind_down_V2 = mkV2 (partV IrregEng.grind_V "down");
lin grind_into_V2 = mkV2 (partV IrregEng.grind_V "into");
lin grind_on_V = partV IrregEng.grind_V "on";
lin grind_out_V2 = mkV2 (partV IrregEng.grind_V "out");
lin grind_up_V2 = mkV2 (partV IrregEng.grind_V "up");
lin grow_apart_V = partV IrregEng.grow_V "apart";
lin grow_away_from_V2 = prepV2 (partV IrregEng.grow_V "away") (mkPrep "from");
lin grow_back_V = partV IrregEng.grow_V "back";
lin grow_from_V2 = prepV2 IrregEng.grow_V (mkPrep "from");
lin grow_into_V2 = prepV2 IrregEng.grow_V (mkPrep "into");
lin grow_on_V2 = prepV2 IrregEng.grow_V (mkPrep "on");
lin grow_out_V = partV IrregEng.grow_V "out";
lin grow_out_of_V2 = prepV2 (partV IrregEng.grow_V "out") (mkPrep "of");
lin grow_to_V = partV IrregEng.grow_V "to";
lin grow_together_V = partV IrregEng.grow_V "together";
lin grow_under_V = partV IrregEng.grow_V "under";
lin grow_up_V = partV IrregEng.grow_V "up";
lin grow_up_on_V2 = prepV2 (partV IrregEng.grow_V "up") (mkPrep "on");
lin grow_upon_V2 = prepV2 IrregEng.grow_V (mkPrep "upon");
lin gun_for_V2 = prepV2 (mkV "gun") (mkPrep "for");
lin gussy_up_V2 = mkV2 (partV (mkV "gussy") "up");
lin hack_around_V = partV (mkV "hack") "around";
lin hack_away_V = partV (mkV "hack") "away";
lin hack_into_V2 = prepV2 (mkV "hack") (mkPrep "into");
lin hack_off_V2 = mkV2 (partV (mkV "hack") "off");
lin hack_up_V2 = mkV2 (partV (mkV "hack") "up");
lin ham_up_V2 = mkV2 (partV (mkV "ham") "up");
lin hammer_away_at_V2 = prepV2 (partV (mkV "hammer") "away") (mkPrep "at");
lin hammer_into_V2 = mkV2 (partV (mkV "hammer") "into");
lin hammer_out_V2 = mkV2 (partV (mkV "hammer") "out");
lin hand_back_V2 = mkV2 (partV (mkV "hand") "back");
lin hand_down_V2 = mkV2 (partV (mkV "hand") "down");
lin hand_in_V2 = mkV2 (partV (mkV "hand") "in");
lin hand_on_V2 = mkV2 (partV (mkV "hand") "on");
lin hand_out_V2 = mkV2 (partV (mkV "hand") "out");
lin hand_over_V2 = mkV2 (partV (mkV "hand") "over");
lin hang_about_V = partV IrregEng.hang_V "about";
lin hang_around_V = partV IrregEng.hang_V "around";
lin hang_around_V2 = prepV2 IrregEng.hang_V (mkPrep "around");
lin hang_back_V = partV IrregEng.hang_V "back";
lin hang_back_from_V2 = prepV2 (partV IrregEng.hang_V "back") (mkPrep "from");
lin hang_in_there_V = partV IrregEng.hang_V "in there";
lin hang_it_up_V = partV IrregEng.hang_V "it up";
lin hang_on_V = partV IrregEng.hang_V "on";
lin hang_onto_V2 = prepV2 IrregEng.hang_V (mkPrep "onto");
lin hang_out_V = partV IrregEng.hang_V "out";
lin hang_out_V2 = mkV2 (partV IrregEng.hang_V "out");
lin hang_out_for_V2 = prepV2 (partV IrregEng.hang_V "out") (mkPrep "for");
lin hang_over_V2 = prepV2 IrregEng.hang_V (mkPrep "over");
lin hang_together_V = partV IrregEng.hang_V "together";
lin hang_up_V = partV IrregEng.hang_V "up";
lin hang_up_V2 = mkV2 (partV IrregEng.hang_V "up");
lin hang_up_on_V2 = prepV2 (partV IrregEng.hang_V "up") (mkPrep "on");
lin hang_with_V2 = prepV2 IrregEng.hang_V (mkPrep "with");
lin hanker_after_V2 = prepV2 (mkV "hanker") (mkPrep "after");
lin hanker_for_V2 = prepV2 (mkV "hanker") (mkPrep "for");
lin harp_on_V = partV (mkV "harp") "on";
lin hash_out_V = partV (mkV "hash") "out";
lin hate_on_V2 = prepV2 (mkV "hate") (mkPrep "on");
lin haul_out_V2 = mkV2 (partV (mkV "haul") "out");
lin have_against_V2 = mkV2 (partV IrregEng.have_V "against");
lin have_around_V2 = mkV2 (partV IrregEng.have_V "around");
lin have_down_as_V3 = mkV3 IrregEng.have_V noPrep (mkPrep "down as");
lin have_in_V2 = mkV2 (partV IrregEng.have_V "in");
lin have_it_away_V = partV IrregEng.have_V "it away";
lin have_it_in_for_V2 = prepV2 (partV IrregEng.have_V "it in") (mkPrep "for");
lin have_it_off_V = partV IrregEng.have_V "it off";
lin have_it_out_with_V2 = prepV2 (partV IrregEng.have_V "it out") (mkPrep "with");
lin have_off_V2 = mkV2 (partV IrregEng.have_V "off");
lin have_on_V = partV IrregEng.have_V "on";
lin have_on_V2 = mkV2 (partV IrregEng.have_V "on");
lin have_over_V2 = mkV2 (partV IrregEng.have_V "over");
lin have_round_V2 = mkV2 (partV IrregEng.have_V "round");
lin have_up_V2 = mkV2 (partV IrregEng.have_V "up");
lin head_for_V2 = prepV2 (mkV "head") (mkPrep "for");
lin head_off_V = partV (mkV "head") "off";
lin head_off_V2 = mkV2 (partV (mkV "head") "off");
lin head_out_V = partV (mkV "head") "out";
lin head_up_V2 = mkV2 (partV (mkV "head") "up");
lin hear_about_V2 = prepV2 IrregEng.have_V (mkPrep "about");
lin hear_from_V2 = prepV2 IrregEng.hear_V (mkPrep "from");
lin hear_of_V2 = prepV2 IrregEng.hear_V (mkPrep "of");
lin hear_of_V3 = mkV3 IrregEng.hear_V noPrep (mkPrep "of");
lin hear_out_V2 = mkV2 (partV IrregEng.hear_V "out");
lin heat_up_V2 = mkV2 (partV (mkV "heat") "up");
lin heave_out_V = partV (mkV "heave") "out";
lin help_out_V2 = mkV2 (partV (mkV "help") "out");
lin hide_away_V = partV IrregEng.hide_V "away";
lin hide_away_V2 = mkV2 (partV IrregEng.hide_V "away");
lin hide_out_V = partV IrregEng.hide_V "out";
lin hinge_on_V2 = prepV2 (mkV "hinge") (mkPrep "on");
lin hinge_upon_V2 = prepV2 (mkV "hinge") (mkPrep "upon");
lin hit_back_V2 = prepV2 IrregEng.hit_V (mkPrep "back");
lin hit_for_V3 = mkV3 IrregEng.hit_V noPrep (mkPrep "for");
lin hit_it_off_V = partV IrregEng.hit_V "it off";
lin hit_it_off_with_V2 = prepV2 (partV IrregEng.hit_V "it off") (mkPrep "with");
lin hit_on_V2 = prepV2 IrregEng.hit_V (mkPrep "on");
lin hit_out_at_V2 = prepV2 (partV IrregEng.hit_V "out") (mkPrep "at");
lin hit_up_V = partV IrregEng.hit_V "up";
lin hit_up_V2 = mkV2 (partV IrregEng.hit_V "up");
lin hit_up_on_V2 = prepV2 (partV IrregEng.hit_V "up") (mkPrep "on");
lin hit_upon_V2 = prepV2 IrregEng.hit_V (mkPrep "upon");
lin hit_with_V3 = mkV3 IrregEng.hit_V noPrep (mkPrep "with");
lin hive_off_V2 = mkV2 (partV (mkV "hive") "off");
lin hold_against_V3 = mkV3 IrregEng.hold_V noPrep (mkPrep "against");
lin hold_back_V = partV IrregEng.hold_V "back";
lin hold_back_V2 = mkV2 (partV IrregEng.hold_V "back");
lin hold_back_from_V2 = prepV2 (partV IrregEng.hold_V "back") (mkPrep "from");
lin hold_down_V2 = mkV2 (partV IrregEng.hold_V "down");
lin hold_forth_V = partV IrregEng.hold_V "forth";
lin hold_off_V = partV IrregEng.hold_V "off";
lin hold_off_V2 = mkV2 (partV IrregEng.hold_V "off");
lin hold_off_on_V2 = prepV2 (partV IrregEng.hold_V "off") (mkPrep "on");
lin hold_on_V = partV IrregEng.hold_V "on";
lin hold_on_to_V2 = prepV2 (partV IrregEng.hold_V "on") (mkPrep "to");
lin hold_onto_V = partV IrregEng.hold_V "onto";
lin hold_onto_V2 = prepV2 IrregEng.hold_V (mkPrep "onto");
lin hold_out_V = partV IrregEng.hold_V "out";
lin hold_out_V2 = mkV2 (partV IrregEng.hold_V "out");
lin hold_out_against_V2 = prepV2 (partV IrregEng.hold_V "out") (mkPrep "against");
lin hold_out_for_V2 = prepV2 (partV IrregEng.hold_V "out") (mkPrep "for");
lin hold_out_on_V2 = prepV2 (partV IrregEng.hold_V "out") (mkPrep "on");
lin hold_over_V2 = mkV2 (partV IrregEng.hold_V "over");
lin hold_together_V = partV IrregEng.hold_V "together";
lin hold_up_V2 = mkV2 (partV IrregEng.hold_V "up");
lin hold_with_V2 = prepV2 IrregEng.hold_V (mkPrep "with");
lin hole_up_V = partV (mkV "hole") "up";
lin home_in_on_V2 = prepV2 (partV (mkV "home") "in") (mkPrep "on");
lin hone_in_on_V2 = prepV2 (partV (mkV "hone") "in") (mkPrep "on");
lin hook_into_V2 = prepV2 (mkV "hook") (mkPrep "into");
lin hook_up_V = partV (mkV "hook") "up";
lin hook_up_V2 = mkV2 (partV (mkV "hook") "up");
lin hook_up_to_V2 = prepV2 (partV (mkV "hook") "up") (mkPrep "to");
lin hoon_around_V = partV (mkV "hoon") "around";
lin horse_around_V = partV (mkV "horse") "around";
lin hose_down_V2 = mkV2 (partV (mkV "hose") "down");
lin hound_out_V2 = mkV2 (partV (mkV "hound") "out");
lin hover_around_V = partV (mkV "hover") "around";
lin hung_on_V = partV (mkV "hung") "on";
lin hung_out_V = partV (mkV "hung") "out";
lin hunker_down_V = partV (mkV "hunker") "down";
lin hunt_down_V2 = mkV2 (partV (mkV "hunt") "down");
lin hunt_out_V2 = mkV2 (partV (mkV "hunt") "out");
lin hunt_up_V2 = mkV2 (partV (mkV "hunt") "up");
lin hush_up_V2 = mkV2 (partV (mkV "hush") "up");
lin inch_up_V = partV (mkV "inch") "up";
lin invite_in_V = partV (mkV "invite") "in";
lin iron_out_V = partV (mkV "iron") "out";
lin iron_out_V2 = mkV2 (partV (mkV "iron") "out");
lin issue_forth_V = partV (mkV "issue") "forth";
lin jabber_away_V = partV (mkV "jabber") "away";
lin jack_around_V2 = mkV2 (partV (mkV "jack") "around");
lin jack_in_V2 = mkV2 (partV (mkV "jack") "in");
lin jack_up_V = partV (mkV "jack") "up";
lin jack_up_V2 = mkV2 (partV (mkV "jack") "up");
lin jam_on_V2 = mkV2 (partV (mkV "jam") "on");
lin jaw_away_V = partV (mkV "jaw") "away";
lin jazz_up_V2 = mkV2 (partV (mkV "jazz") "up");
lin jerk_around_V = partV (mkV "jerk") "around";
lin jerk_around_V2 = mkV2 (partV (mkV "jerk") "around");
lin jerk_off_V = partV (mkV "jerk") "off";
lin jet_off_V = partV (mkV "jet") "off";
lin join_up_V = partV (mkV "join") "up";
lin joke_around_V = partV (mkV "joke") "around";
lin jot_down_V2 = mkV2 (partV (mkV "jot") "down");
lin juice_up_V2 = mkV2 (partV (mkV "juice") "up");
lin jump_at_V2 = prepV2 (mkV "jump") (mkPrep "at");
lin jump_in_V = partV (mkV "jump") "in";
lin jump_on_V2 = prepV2 (mkV "jump") (mkPrep "on");
lin jump_to_V2 = prepV2 (mkV "jump") (mkPrep "to");
lin keel_over_V = partV (mkV "keel") "over";
lin keep_around_V2 = mkV2 (partV IrregEng.keep_V "around");
lin keep_at_V2 = prepV2 IrregEng.keep_V (mkPrep "at");
lin keep_away_V2 = mkV2 (partV IrregEng.keep_V "away");
lin keep_back_V = partV IrregEng.keep_V "back";
lin keep_back_V2 = mkV2 (partV IrregEng.keep_V "back");
lin keep_down_V2 = mkV2 (partV IrregEng.keep_V "down");
lin keep_from_V2 = prepV2 IrregEng.keep_V (mkPrep "from");
lin keep_in_V2 = mkV2 (partV IrregEng.keep_V "in");
lin keep_off_V2 = mkV2 (partV IrregEng.keep_V "off");
lin keep_on_V = partV IrregEng.keep_V "on";
lin keep_on_V2 = prepV2 IrregEng.keep_V (mkPrep "on");
lin keep_out_V = partV (mkV "keep") "out";
lin keep_out_V2 = mkV2 (partV IrregEng.keep_V "out");
lin keep_over_V2 = mkV2 (partV IrregEng.keep_V "over");
lin keep_to_V2 = prepV2 IrregEng.keep_V (mkPrep "to");
lin keep_up_V = partV IrregEng.keep_V "up";
lin keep_up_V2 = mkV2 (partV IrregEng.keep_V "up");
lin keep_up_at_V2 = prepV2 (partV IrregEng.keep_V "up") (mkPrep "at");
lin keep_up_with_V2 = prepV2 (partV IrregEng.keep_V "up") (mkPrep "with");
lin key_down_V = partV (mkV "key") "down";
lin key_in_V2 = mkV2 (partV (mkV "key") "in");
lin key_in_on_V2 = prepV2 (partV (mkV "key") "in") (mkPrep "on");
lin key_on_V2 = prepV2 (mkV "key") (mkPrep "on");
lin key_to_V2 = prepV2 (mkV "key") (mkPrep "to");
lin key_up_V2 = mkV2 (partV (mkV "key") "up");
lin kick_about_V2 = mkV2 (partV (mkV "kick") "about");
lin kick_around_V2 = mkV2 (partV (mkV "kick") "around");
lin kick_around_with_V2 = prepV2 (partV (mkV "kick") "around") (mkPrep "with");
lin kick_back_V = partV (mkV "kick") "back";
lin kick_back_V2 = mkV2 (partV (mkV "kick") "back");
lin kick_down_V2 = mkV2 (partV (mkV "kick") "down");
lin kick_in_V = partV (mkV "kick") "in";
lin kick_in_V2 = mkV2 (partV (mkV "kick") "in");
lin kick_off_V = partV (mkV "kick") "off";
lin kick_off_V2 = mkV2 (partV (mkV "kick") "off");
lin kick_out_V2 = mkV2 (partV (mkV "kick") "out");
lin kick_through_V = partV (mkV "kick") "through";
lin kick_up_V = partV (mkV "kick") "up";
lin kill_off_V2 = mkV2 (partV (mkV "kill") "off");
lin kip_down_V = partV (mkV "kip") "down";
lin kip_down_on_V2 = prepV2 (partV (mkV "kip") "down") (mkPrep "on");
lin kiss_off_V = partV (mkV "kiss") "off";
lin kiss_off_V2 = mkV2 (partV (mkV "kiss") "off");
lin kiss_up_to_V2 = prepV2 (partV (mkV "kiss") "up") (mkPrep "to");
lin knock_about_V2 = mkV2 (partV (mkV "knock") "about");
lin knock_around_V2 = mkV2 (partV (mkV "knock") "around");
lin knock_back_V2 = mkV2 (partV (mkV "knock") "back");
lin knock_down_V2 = mkV2 (partV (mkV "knock") "down");
lin knock_it_off_V2 = mkV2 (partV (mkV "knock") "it off");
lin knock_off_V = partV (mkV "knock") "off";
lin knock_off_V2 = mkV2 (partV (mkV "knock") "off");
lin knock_out_V = partV (mkV "knock") "out";
lin knock_out_V2 = mkV2 (partV (mkV "knock") "out");
lin knock_over_V = partV (mkV "knock") "over";
lin knock_together_V2 = mkV2 (partV (mkV "knock") "together");
lin knock_up_V = partV (mkV "knock") "up";
lin knock_up_V2 = mkV2 (partV (mkV "knock") "up");
lin knuckle_down_V = partV (mkV "knuckle") "down";
lin knuckle_under_V = partV (mkV "knuckle") "under";
lin land_in_V2 = mkV2 (partV (mkV "land") "in");
lin land_up_in_V2 = prepV2 (partV (mkV "land") "up") (mkPrep "in");
lin land_with_V3 = mkV3 (mkV "land") noPrep (mkPrep "with");
lin lap_up_V2 = mkV2 (partV (mkV "lap") "up");
lin large_it_up_V2 = mkV2 (partV (mkV "large") "it up");
lin lark_about_V = partV (mkV "lark") "about";
lin lark_around_V = partV (mkV "lark") "around";
lin lark_it_up_V = partV (mkV "lark") "it up";
lin lash_down_V = partV (mkV "lash") "down";
lin lash_down_V2 = mkV2 (partV (mkV "lash") "down");
lin lash_into_V2 = prepV2 (mkV "lash") (mkPrep "into");
lin lash_out_V = partV (mkV "lash") "out";
lin lash_out_against_V2 = prepV2 (partV (mkV "lash") "out") (mkPrep "against");
lin lash_out_at_V2 = prepV2 (partV (mkV "lash") "out") (mkPrep "at");
lin lash_out_on_V2 = mkV2 (partV (mkV "lash") "out") (mkPrep "on");
lin latch_on_V = partV (mkV "latch") "on";
lin latch_on_to_V2 = prepV2 (partV (mkV "latch") "on") (mkPrep "to");
lin latch_onto_V2 = prepV2 (mkV "latch") (mkPrep "onto");
lin laugh_off_V2 = mkV2 (partV (mkV "laugh") "off");
lin lay_away_V2 = prepV2 IrregEng.lay_V (mkPrep "away");
lin lay_down_V = partV (mkV "lay") "down";
lin lay_down_V2 = mkV2 (partV IrregEng.lay_V "down");
lin lay_in_on_V2 = prepV2 (partV IrregEng.lay_V "in") (mkPrep "on");
lin lay_into_V2 = prepV2 IrregEng.lay_V (mkPrep "into");
lin lay_off_V2 = mkV2 (partV IrregEng.lay_V "off");
lin lay_on_V2 = mkV2 (partV IrregEng.lay_V "on");
lin lay_out_V2 = mkV2 (partV IrregEng.lay_V "out");
lin lead_on_V2 = mkV2 (partV IrregEng.lead_V "on");
lin lead_to_V2 = prepV2 IrregEng.lead_V (mkPrep "to");
lin lead_up_V = partV (mkV "lead") "up";
lin leak_out_V2 = mkV2 (partV (mkV "leak") "out");
lin lean_on_V2 = prepV2 (mkV "lean") (mkPrep "on");
lin leap_at_V2 = prepV2 IrregEng.leap_V (mkPrep "at");
lin leap_on_V2 = prepV2 IrregEng.leap_V (mkPrep "on");
lin leap_out_V = partV (mkV "leap") "out";
lin leap_out_at_V2 = prepV2 (partV IrregEng.leap_V "out") (mkPrep "at");
lin leap_upon_V2 = prepV2 IrregEng.leap_V (mkPrep "upon");
lin leave_behind_V = partV (mkV "leave") "behind";
lin leave_off_V = partV (mkV "leave") "off";
lin leave_on_V2 = mkV2 (partV IrregEng.leave_V "on");
lin leave_open_V = partV (mkV "leave") "open";
lin leave_out_V2 = mkV2 (partV IrregEng.leave_V "out");
lin leave_over_V = partV (mkV "leave") "over";
lin let_down_V2 = mkV2 (partV IrregEng.let_V "down");
lin let_in_V2 = mkV2 (partV IrregEng.let_V "in");
lin let_off_V2 = mkV2 (partV IrregEng.let_V "off");
lin let_on_V = partV IrregEng.let_V "on";
lin let_out_V2 = mkV2 (partV IrregEng.let_V "out");
lin let_up_V = partV IrregEng.let_V "up";
lin level_off_V = partV (mkV "level") "off";
lin level_out_V = partV (mkV "level") "out";
lin lie_around_V = partV IrregEng.lie_V "around";
lin lie_back_V = partV (mkV "lie") "back";
lin lie_down_V = partV IrregEng.lie_V "down";
lin lie_down_on_V2 = prepV2 (partV IrregEng.lie_V "down") (mkPrep "on");
lin lie_with_V2 = prepV2 IrregEng.lie_V (mkPrep "with");
lin lift_off_V = partV (mkV "lift") "off";
lin light_out_V = partV IrregEng.light_V "out";
lin light_up_V = partV (mkV "light") "up";
lin light_up_V2 = mkV2 (partV IrregEng.light_V "up");
lin lighten_up_V2 = mkV2 (partV (mkV "lighten") "up");
lin limber_up_V = partV (mkV "limber") "up";
lin limber_up_for_V2 = prepV2 (partV (mkV "limber") "up") (mkPrep "for");
lin line_up_V = partV (mkV "line") "up";
lin line_up_V2 = mkV2 (partV (mkV "line") "up");
lin link_up_V2 = mkV2 (partV (mkV "link") "up");
lin link_up_with_V2 = prepV2 (partV (mkV "link") "up") (mkPrep "with");
lin listen_in_V = partV (mkV "listen") "in";
lin listen_out_for_V2 = prepV2 (partV (mkV "listen") "out") (mkPrep "for");
lin listen_up_V = partV (mkV "listen") "up";
lin live_by_V2 = prepV2 (mkV "live") (mkPrep "by");
lin live_down_V2 = mkV2 (partV (mkV "live") "down");
lin live_for_V2 = prepV2 (mkV "live") (mkPrep "for");
lin live_in_V = partV (mkV "live") "in";
lin live_it_up_V2 = mkV2 (partV (mkV "live") "it up");
lin live_off_V2 = prepV2 (mkV "live") (mkPrep "off");
lin live_on_V = partV (mkV "live") "on";
lin live_on_V2 = prepV2 (mkV "live") (mkPrep "on");
lin live_out_V = partV (mkV "live") "out";
lin live_out_V2 = mkV2 (partV (mkV "live") "out");
lin live_through_V2 = prepV2 (mkV "live") (mkPrep "through");
lin live_together_V = partV (mkV "live") "together";
lin live_up_V = partV (mkV "live") "up";
lin live_up_to_V2 = prepV2 (partV (mkV "live") "up") (mkPrep "to");
lin live_with_V2 = prepV2 (mkV "live") (mkPrep "with");
lin load_down_V = partV (mkV "load") "down";
lin load_up_V = partV (mkV "load") "up";
lin load_up_V2 = mkV2 (partV (mkV "load") "up");
lin load_up_on_V2 = prepV2 (partV (mkV "load") "up") (mkPrep "on");
lin loan_out_V = partV (mkV "loan") "out";
lin lock_away_V2 = mkV2 (partV (mkV "lock") "away");
lin lock_down_V2 = mkV2 (partV (mkV "lock") "down");
lin lock_in_V2 = mkV2 (partV (mkV "lock") "in");
lin lock_onto_V2 = prepV2 (mkV "lock") (mkPrep "onto");
lin lock_out_V2 = mkV2 (partV (mkV "lock") "out");
lin lock_up_V2 = mkV2 (partV (mkV "lock") "up");
lin lock_yourself_away_V = partV (reflV (mkV "lock")) "away";
lin log_in_V = partV (mkV "log") "in";
lin log_into_V2 = prepV2 (mkV "log") (mkPrep "into");
lin log_off_V2 = prepV2 (mkV "log") (mkPrep "off");
lin log_on_V2 = prepV2 (mkV "log") (mkPrep "on");
lin log_out_V = partV (mkV "log") "out";
lin look_down_on_V2 = prepV2 (partV (mkV "look") "down") (mkPrep "on");
lin look_forward_V = partV (mkV "look") "forward";
lin look_in_V2 = prepV2 (mkV "look") (mkPrep "in");
lin look_in_on_V2 = prepV2 (partV (mkV "look") "in") (mkPrep "on");
lin look_on_as_V3 = mkV3 (mkV "look") (mkPrep "on") (mkPrep "as");
lin look_out_V = partV (mkV "look") "out";
lin look_out_for_V2 = prepV2 (partV (mkV "look") "out") (mkPrep "for");
lin look_over_V2 = mkV2 (partV (mkV "look") "over");
lin look_round_V2 = prepV2 (mkV "look") (mkPrep "round");
lin look_through_V2 = prepV2 (mkV "look") (mkPrep "through");
lin look_up_V2 = mkV2 (partV (mkV "look") "up");
lin look_up_to_V2 = prepV2 (partV (mkV "look") "up") (mkPrep "to");
lin loosen_up_V = partV (mkV "loosen") "up";
lin lord_it_over_V2 = prepV2 (partV (mkV "lord") "it") (mkPrep "over");
lin lose_out_V = partV IrregEng.lose_V "out";
lin lose_out_on_V2 = prepV2 (partV IrregEng.lose_V "out") (mkPrep "on");
lin lose_out_to_V2 = prepV2 (partV IrregEng.lose_V "out") (mkPrep "to");
lin lose_up_V = partV (mkV "lose") "up";
lin luck_into_V2 = prepV2 (mkV "luck") (mkPrep "into");
lin luck_out_V = partV (mkV "luck") "out";
lin lug_around_V = partV (mkV "lug") "around";
lin lure_away_V = partV (mkV "lure") "away";
lin lust_after_V2 = prepV2 (mkV "lust") (mkPrep "after");
lin magic_away_V2 = mkV2 (partV (mkV "magic") "away");
lin make_after_V = partV IrregEng.make_V "after";
lin make_away_with_V2 = prepV2 (partV IrregEng.make_V "away") (mkPrep "with");
lin make_do_with_V2 = prepV2 (partV IrregEng.make_V "do") (mkPrep "with");
lin make_for_V2 = prepV2 IrregEng.make_V (mkPrep "for");
lin make_into_V2 = prepV2 IrregEng.make_V (mkPrep "into");
lin make_it_V = partV IrregEng.make_V "it";
lin make_it_up_to_V2 = prepV2 (partV IrregEng.make_V "it up") (mkPrep "to");
lin make_of_V3 = mkV3 IrregEng.make_V noPrep (mkPrep "of");
lin make_off_V = partV IrregEng.make_V "off";
lin make_off_with_V2 = prepV2 (partV IrregEng.make_V "off") (mkPrep "with");
lin make_out_V = partV IrregEng.make_V "out";
lin make_out_V2 = mkV2 (partV IrregEng.make_V "out");
lin make_out_with_V2 = prepV2 (partV IrregEng.make_V "out") (mkPrep "with");
lin make_over_V2 = mkV2 (partV IrregEng.make_V "over");
lin make_towards_V2 = prepV2 IrregEng.make_V (mkPrep "towards");
lin make_up_V = partV IrregEng.make_V "up";
lin make_up_V2 = mkV2 (partV IrregEng.make_V "up");
lin make_up_for_V2 = prepV2 (partV IrregEng.make_V "up") (mkPrep "for");
lin make_up_to_V2 = prepV2 (partV IrregEng.make_V "up") (mkPrep "to");
lin make_with_V2 = prepV2 IrregEng.make_V (mkPrep "with");
lin man_down_V = partV (mkV "man") "down";
lin man_up_V = partV (mkV "man") "up";
lin map_out_V = partV (mkV "map") "out";
lin mark_down_V2 = mkV2 (partV (mkV "mark") "down");
lin mark_down_as_V3 = mkV3 (mkV "mark") noPrep (mkPrep "down as");
lin mark_off_V2 = mkV2 (partV (mkV "mark") "off");
lin mark_out_V2 = mkV2 (partV (mkV "mark") "out");
lin mark_out_for_V3 = mkV3 (mkV "mark") noPrep (mkPrep "out for");
lin mark_out_from_V3 = mkV3 (mkV "mark") noPrep (mkPrep "out from");
lin mark_up_V2 = mkV2 (partV (mkV "mark") "up");
lin marke_up_V = partV (mkV "marke") "up";
lin marry_in_V = partV (mkV "marry") "in";
lin marry_out_V = partV (mkV "marry") "out";
lin mash_up_V2 = mkV2 (partV (mkV "mash") "up");
lin match_up_V = partV (mkV "match") "up";
lin max_out_V2 = mkV2 (partV (mkV "max") "out");
lin measure_against_V3 = mkV3 (mkV "measure") noPrep (mkPrep "against");
lin measure_off_V2 = mkV2 (partV (mkV "measure") "off");
lin measure_out_V2 = mkV2 (partV (mkV "measure") "out");
lin measure_up_V = partV (mkV "measure") "up";
lin measure_up_V2 = mkV2 (partV (mkV "measure") "up");
lin measure_up_to_V2 = prepV2 (partV (mkV "measure") "up") (mkPrep "to");
lin meet_up_V = partV (mkV "meet") "up";
lin meet_with_V2 = prepV2 IrregEng.meet_V (mkPrep "with");
lin melt_down_V2 = mkV2 (partV (mkV "melt") "down");
lin mess_about_V = partV (mkV "mess") "about";
lin mess_about_V2 = mkV2 (partV (mkV "mess") "about");
lin mess_about_with_V2 = prepV2 (partV (mkV "mess") "about") (mkPrep "with");
lin mess_around_V = partV (mkV "mess") "around";
lin mess_around_V2 = mkV2 (partV (mkV "mess") "around");
lin mess_around_with_V2 = prepV2 (partV (mkV "mess") "around") (mkPrep "with");
lin mess_over_V2 = mkV2 (partV (mkV "mess") "over");
lin mess_up_V2 = mkV2 (partV (mkV "mess") "up");
lin mess_with_V2 = prepV2 (mkV "mess") (mkPrep "with");
lin met_out_V = partV (mkV "met") "out";
lin mete_out_V2 = mkV2 (partV (mkV "mete") "out");
lin mill_around_V = partV (mkV "mill") "around";
lin miss_out_V = partV (mkV "miss") "out";
lin miss_out_V2 = mkV2 (partV (mkV "miss") "out");
lin miss_out_on_V2 = prepV2 (partV (mkV "miss") "out") (mkPrep "on");
lin mix_up_V2 = mkV2 (partV (mkV "mix") "up");
lin mock_up_V2 = mkV2 (partV (mkV "mock") "up");
lin moggy_off_V = partV (mkV "moggy") "off";
lin monkey_around_V = partV (mkV "monkey") "around";
lin mooch_about_V = partV (mkV "mooch") "about";
lin mooch_around_V = partV (mkV "mooch") "around";
lin mop_up_V2 = mkV2 (partV (mkV "mop") "up");
lin mope_about_V = partV (mkV "mope") "about";
lin mope_around_V = partV (mkV "mope") "around";
lin mount_up_V = partV (mkV "mount") "up";
lin mouth_off_V = partV (mkV "mouth") "off";
lin move_ahead_V = partV (mkV "move") "ahead";
lin move_along_V = partV (mkV "move") "along";
lin move_away_V = partV (mkV "move") "away";
lin move_away_from_V2 = prepV2 (partV (mkV "move") "away") (mkPrep "from");
lin move_down_V2 = mkV2 (partV (mkV "move") "down");
lin move_in_V = partV (mkV "move") "in";
lin move_in_on_V2 = prepV2 (partV (mkV "move") "in") (mkPrep "on");
lin move_into_V2 = prepV2 (mkV "move") (mkPrep "into");
lin move_on_V = partV (mkV "move") "on";
lin move_on_V2 = mkV2 (partV (mkV "move") "on");
lin move_out_V = partV (mkV "move") "out";
lin move_out_V2 = mkV2 (partV (mkV "move") "out");
lin move_towards_V2 = prepV2 (mkV "move") (mkPrep "towards");
lin move_up_V = partV (mkV "move") "up";
lin move_up_V2 = mkV2 (partV (mkV "move") "up");
lin muddle_along_V = partV (mkV "muddle") "along";
lin muddle_through_V = partV (mkV "muddle") "through";
lin muddle_up_V2 = mkV2 (partV (mkV "muddle") "up");
lin mug_up_V = partV (mkV "mug") "up";
lin mug_up_on_V2 = prepV2 (partV (mkV "mug") "up") (mkPrep "on");
lin mule_over_V = partV (mkV "mule") "over";
lin mull_over_V2 = mkV2 (partV (mkV "mull") "over");
lin muscle_in_V = partV (mkV "muscle") "in";
lin muscle_in_on_V2 = prepV2 (partV (mkV "muscle") "in") (mkPrep "on");
lin muscle_into_V2 = prepV2 (mkV "muscle") (mkPrep "into");
lin muscle_out_V2 = mkV2 (partV (mkV "muscle") "out");
lin naff_off_V = partV (mkV "naff") "off";
lin nag_at_V2 = prepV2 (mkV "nag") (mkPrep "at");
lin nail_down_V2 = mkV2 (partV (mkV "nail") "down");
lin name_after_V3 = mkV3 (mkV "name") noPrep (mkPrep "after");
lin narrow_down_V2 = mkV2 (partV (mkV "narrow") "down");
lin nerd_out_V = partV (mkV "nerd") "out";
lin net_out_V = partV (mkV "net") "out";
lin nip_off_V = partV (mkV "nip") "off";
lin nip_out_V = partV (mkV "nip") "out";
lin nod_off_V = partV (mkV "nod") "off";
lin nod_through_V2 = mkV2 (partV (mkV "nod") "through");
lin nose_about_V = partV (mkV "nose") "about";
lin nose_around_V = partV (mkV "nose") "around";
lin nose_around_V2 = prepV2 (mkV "nose") (mkPrep "around");
lin nose_out_V2 = mkV2 (partV (mkV "nose") "out");
lin note_down_V2 = mkV2 (partV (mkV "note") "down");
lin nut_out_V2 = mkV2 (partV (mkV "nut") "out");
lin occur_to_V2 = prepV2 (mkV "occur") (mkPrep "to");
lin offer_up_V = partV (mkV "offer") "up";
lin open_up_V = partV (mkV "open") "up";
lin open_up_V2 = mkV2 (partV (mkV "open") "up");
lin operate_on_V2 = prepV2 (mkV "operate") (mkPrep "on");
lin opt_for_V2 = prepV2 (mkV "opt") (mkPrep "for");
lin opt_in_V = partV (mkV "opt") "in";
lin opt_into_V2 = prepV2 (mkV "opt") (mkPrep "into");
lin opt_out_V2 = prepV2 (mkV "opt") (mkPrep "out");
lin owe_to_V3 = mkV3 (mkV "owe") noPrep (mkPrep "to");
lin own_up_V = partV (mkV "own") "up";
lin pack_away_V2 = mkV2 (partV (mkV "pack") "away");
lin pack_in_V = partV (mkV "pack") "in";
lin pack_in_V2 = mkV2 (partV (mkV "pack") "in");
lin pack_it_in_V = partV (mkV "pack") "it in";
lin pack_off_V2 = mkV2 (partV (mkV "pack") "off");
lin pack_out_V2 = mkV2 (partV (mkV "pack") "out");
lin pack_up_V = partV (mkV "pack") "up";
lin pack_up_V2 = mkV2 (partV (mkV "pack") "up");
lin pad_down_V = partV (mkV "pad") "down";
lin pad_out_V2 = mkV2 (partV (mkV "pad") "out");
lin pair_off_V = partV (mkV "pair") "off";
lin pair_off_V2 = mkV2 (partV (mkV "pair") "off");
lin pair_off_with_V2 = prepV2 (partV (mkV "pair") "off") (mkPrep "with");
lin pair_up_V = partV (mkV "pair") "up";
lin pal_about_V = partV (mkV "pal") "about";
lin pal_around_V = partV (mkV "pal") "around";
lin pal_up_V = partV (mkV "pal") "up";
lin palm_off_V = partV (mkV "palm") "off";
lin palm_off_V2 = mkV2 (partV (mkV "palm") "off");
lin pan_out_V = partV (mkV "pan") "out";
lin paper_over_V2 = prepV2 (mkV "paper") (mkPrep "over");
lin par_down_V = partV (mkV "par") "down";
lin parcel_out_V = partV (mkV "parcel") "out";
lin pare_back_V2 = mkV2 (partV (mkV "pare") "back");
lin pare_down_V2 = mkV2 (partV (mkV "pare") "down");
lin part_with_V2 = prepV2 (mkV "part") (mkPrep "with");
lin pass_around_V2 = mkV2 (partV (mkV "pass") "around");
lin pass_as_V2 = prepV2 (mkV "pass") (mkPrep "as");
lin pass_away_V = partV (mkV "pass") "away";
lin pass_back_V2 = mkV2 (partV (mkV "pass") "back");
lin pass_by_V = partV (mkV "pass") "by";
lin pass_by_V2 = mkV2 (partV (mkV "pass") "by");
lin pass_down_V2 = mkV2 (partV (mkV "pass") "down");
lin pass_for_V2 = prepV2 (mkV "pass") (mkPrep "for");
lin pass_off_V = partV (mkV "pass") "off";
lin pass_off_V2 = mkV2 (partV (mkV "pass") "off");
lin pass_on_V = partV (mkV "pass") "on";
lin pass_on_V2 = mkV2 (partV (mkV "pass") "on");
lin pass_on_to_V2 = prepV2 (partV (mkV "pass") "on") (mkPrep "to");
lin pass_out_V = partV (mkV "pass") "out";
lin pass_out_V2 = mkV2 (partV (mkV "pass") "out");
lin pass_over_V = partV (mkV "pass") "over";
lin pass_over_V2 = mkV2 (partV (mkV "pass") "over");
lin pass_round_V2 = mkV2 (partV (mkV "pass") "round");
lin pass_through_V2 = prepV2 (mkV "pass") (mkPrep "through");
lin pass_to_V2 = prepV2 (mkV "pass") (mkPrep "to");
lin pass_up_V2 = mkV2 (partV (mkV "pass") "up");
lin pat_down_V2 = mkV2 (partV (mkV "pat") "down");
lin patch_together_V2 = mkV2 (partV (mkV "patch") "together");
lin patch_up_V2 = mkV2 (partV (mkV "patch") "up");
lin pay_back_V = partV (mkV "pay") "back";
lin pay_back_V2 = mkV2 (partV IrregEng.pay_V "back");
lin pay_down_V2 = mkV2 (partV IrregEng.pay_V "down");
lin pay_for_V3 = mkV3 IrregEng.pay_V noPrep (mkPrep "for");
lin pay_into_V3 = mkV3 IrregEng.pay_V noPrep (mkPrep "into");
lin pay_off_V = partV IrregEng.pay_V "off";
lin pay_off_V2 = mkV2 (partV IrregEng.pay_V "off");
lin pay_out_V = partV (mkV "pay") "out";
lin pay_up_V = partV (mkV "pay") "up";
lin peck_at_V2 = prepV2 (mkV "peck") (mkPrep "at");
lin peel_away_V = partV (mkV "peel") "away";
lin peel_away_from_V2 = prepV2 (partV (mkV "peel") "away") (mkPrep "from");
lin peel_off_V = partV (mkV "peel") "off";
lin peel_off_from_V2 = prepV2 (partV (mkV "peel") "off") (mkPrep "from");
lin peel_out_V = partV (mkV "peel") "out";
lin peg_away_V = partV (mkV "peg") "away";
lin peg_down_V2 = mkV2 (partV (mkV "peg") "down");
lin peg_it_V = partV (mkV "peg") "it";
lin peg_out_V = partV (mkV "peg") "out";
lin peg_out_V2 = mkV2 (partV (mkV "peg") "out");
lin pencil_in_V2 = mkV2 (partV (mkV "pencil") "in");
lin pep_up_V2 = mkV2 (partV (mkV "pep") "up");
lin perk_up_V2 = mkV2 (partV (mkV "perk") "up");
lin peter_out_V = partV (mkV "peter") "out";
lin phase_in_V2 = mkV2 (partV (mkV "phase") "in");
lin phase_out_V2 = mkV2 (partV (mkV "phase") "out");
lin pick_at_V2 = prepV2 (mkV "pick") (mkPrep "at");
lin pick_away_V = partV (mkV "pick") "away";
lin pick_off_V2 = mkV2 (partV (mkV "pick") "off");
lin pick_on_V2 = prepV2 (mkV "pick") (mkPrep "on");
lin pick_out_V2 = mkV2 (partV (mkV "pick") "out");
lin pick_through_V2 = prepV2 (mkV "pick") (mkPrep "through");
lin pick_up_V = partV (mkV "pick") "up";
lin pick_up_V2 = mkV2 (partV (mkV "pick") "up");
lin pick_up_after_V2 = prepV2 (partV (mkV "pick") "up") (mkPrep "after");
lin pick_up_on_V2 = prepV2 (partV (mkV "pick") "up") (mkPrep "on");
lin pick_yourself_up_V = partV (reflV (mkV "pick")) "up";
lin pig_off_V = partV (mkV "pig") "off";
lin pig_out_V = partV (mkV "pig") "out";
lin pile_in_V = partV (mkV "pile") "in";
lin pile_into_V2 = prepV2 (mkV "pile") (mkPrep "into");
lin pile_on_V2 = mkV2 (partV (mkV "pile") "on");
lin pile_out_V = partV (mkV "pile") "out";
lin pile_up_V = partV (mkV "pile") "up";
lin pile_up_V2 = mkV2 (partV (mkV "pile") "up");
lin pin_down_V2 = mkV2 (partV (mkV "pin") "down");
lin pin_on_V3 = mkV3 (mkV "pin") noPrep (mkPrep "on");
lin pin_up_V2 = mkV2 (partV (mkV "pin") "up");
lin pine_away_V = partV (mkV "pine") "away";
lin pipe_down_V = partV (mkV "pipe") "down";
lin pipe_in_V = partV (mkV "pipe") "in";
lin pipe_up_V = partV (mkV "pipe") "up";
lin pit_against_V3 = mkV3 (mkV "pit") noPrep (mkPrep "against");
lin pit_out_V = partV (mkV "pit") "out";
lin pitch_for_V2 = prepV2 (mkV "pitch") (mkPrep "for");
lin pitch_in_V = partV (mkV "pitch") "in";
lin pitch_into_V2 = prepV2 (mkV "pitch") (mkPrep "into");
lin plant_out_V2 = mkV2 (partV (mkV "plant") "out");
lin plate_up_V = partV (mkV "plate") "up";
lin play_along_V = partV (mkV "play") "along";
lin play_around_V = partV (mkV "play") "around";
lin play_at_V2 = prepV2 (mkV "play") (mkPrep "at");
lin play_away_V = partV (mkV "play") "away";
lin play_back_V2 = mkV2 (partV (mkV "play") "back");
lin play_down_V2 = mkV2 (partV (mkV "play") "down");
lin play_off_V = partV (mkV "play") "off";
lin play_off_V2 = mkV2 (partV (mkV "play") "off");
lin play_on_V = partV (mkV "play") "on";
lin play_on_V2 = prepV2 (mkV "play") (mkPrep "on");
lin play_out_V = partV (mkV "play") "out";
lin play_out_V2 = mkV2 (partV (mkV "play") "out");
lin play_up_V = partV (mkV "play") "up";
lin play_up_V2 = mkV2 (partV (mkV "play") "up");
lin play_up_to_V2 = prepV2 (mkV "play") (mkPrep "up to");
lin play_upon_V2 = prepV2 (mkV "play") (mkPrep "upon");
lin play_with_V2 = prepV2 (mkV "play") (mkPrep "with");
lin plead_out_V = partV IrregEng.plead_V "out";
lin plot_out_V = partV (mkV "plot") "out";
lin plough_back_V2 = mkV2 (partV (mkV "plough") "back");
lin plough_into_V2 = prepV2 (mkV "plough") (mkPrep "into");
lin plough_on_V = partV (mkV "plough") "on";
lin plough_through_V2 = prepV2 (mkV "plough") (mkPrep "through");
lin plough_up_V2 = mkV2 (partV (mkV "plough") "up");
lin plow_back_V2 = mkV2 (partV (mkV "plow") "back");
lin plow_into_V2 = prepV2 (mkV "plow") (mkPrep "into");
lin plow_on_V = partV (mkV "plow") "on";
lin plow_through_V2 = prepV2 (mkV "plow") (mkPrep "through");
lin plow_up_V2 = mkV2 (partV (mkV "plow") "up");
lin pluck_at_V2 = prepV2 (mkV "pluck") (mkPrep "at");
lin pluck_up_V2 = mkV2 (partV (mkV "pluck") "up");
lin plug_in_V2 = mkV2 (partV (mkV "plug") "in");
lin plump_down_V = partV (mkV "plump") "down";
lin plump_for_V2 = prepV2 (mkV "plump") (mkPrep "for");
lin plump_up_V2 = mkV2 (partV (mkV "plump") "up");
lin plump_yourself_down_V = partV (reflV (mkV "plump")) "down";
lin plunge_in_V = partV (mkV "plunge") "in";
lin point_out_V2 = mkV2 (partV (mkV "point") "out");
lin point_out_VS = mkVS (partV (mkV "point") "out");
lin point_up_V = partV (mkV "point") "up";
lin poke_about_V = partV (mkV "poke") "about";
lin poke_around_V = partV (mkV "poke") "around";
lin polish_off_V2 = mkV2 (partV (mkV "polish") "off");
lin polish_up_V2 = mkV2 (partV (mkV "polish") "up");
lin pony_up_V2 = mkV2 (partV (mkV "pony") "up");
lin poop_out_V = partV (mkV "poop") "out";
lin poop_out_on_V2 = prepV2 (partV (mkV "poop") "out") (mkPrep "on");
lin pootle_along_V = partV (mkV "pootle") "along";
lin pop_in_V = partV (mkV "pop") "in";
lin pop_off_V = partV (mkV "pop") "off";
lin pop_out_V = partV (mkV "pop") "out";
lin pop_up_V = partV (mkV "pop") "up";
lin pore_over_V2 = prepV2 (mkV "pore") (mkPrep "over");
lin potter_about_V = partV (mkV "potter") "about";
lin potter_around_V = partV (mkV "potter") "around";
lin pour_down_V = partV (mkV "pour") "down";
lin pour_forth_V = partV (mkV "pour") "forth";
lin pour_in_V2 = mkV2 (partV (mkV "pour") "in");
lin pour_out_V = partV (mkV "pour") "out";
lin power_down_V2 = mkV2 (partV (mkV "power") "down");
lin power_off_V2 = mkV2 (partV (mkV "power") "off");
lin power_up_V2 = mkV2 (partV (mkV "power") "up");
lin prattle_on_V = partV (mkV "prattle") "on";
lin press_ahead_V = partV (mkV "press") "ahead";
lin press_for_V2 = prepV2 (mkV "press") (mkPrep "for");
lin press_forward_with_V2 = prepV2 (partV (mkV "press") "forward") (mkPrep "with");
lin press_into_V2 = prepV2 (mkV "press") (mkPrep "into");
lin press_on_V = partV (mkV "press") "on";
lin press_upon_V2 = prepV2 (mkV "press") (mkPrep "upon");
lin prey_on_V2 = prepV2 (mkV "prey") (mkPrep "on");
lin prey_upon_V2 = prepV2 (mkV "prey") (mkPrep "upon");
lin price_in_V2 = mkV2 (partV (mkV "price") "in");
lin price_up_V2 = mkV2 (partV (mkV "price") "up");
lin print_out_V2 = mkV2 (partV (mkV "print") "out");
lin prop_up_V2 = mkV2 (partV (mkV "prop") "up");
lin psych_out_V2 = mkV2 (partV (mkV "psych") "out");
lin psych_up_V2 = mkV2 (partV (mkV "psych") "up");
lin pucker_up_V = partV (mkV "pucker") "up";
lin pucker_up_V2 = mkV2 (partV (mkV "pucker") "up");
lin pull_ahead_V = partV (mkV "pull") "ahead";
lin pull_apart_V2 = mkV2 (partV (mkV "pull") "apart");
lin pull_away_V = partV (mkV "pull") "away";
lin pull_back_V = partV (mkV "pull") "back";
lin pull_back_V2 = mkV2 (partV (mkV "pull") "back");
lin pull_down_V = partV (mkV "pull") "down";
lin pull_down_V2 = mkV2 (partV (mkV "pull") "down");
lin pull_for_V2 = prepV2 (mkV "pull") (mkPrep "for");
lin pull_in_V = partV (mkV "pull") "in";
lin pull_in_V2 = mkV2 (partV (mkV "pull") "in");
lin pull_off_V = partV (mkV "pull") "off";
lin pull_off_V2 = mkV2 (partV (mkV "pull") "off");
lin pull_on_V2 = mkV2 (partV (mkV "pull") "on");
lin pull_out_V = partV (mkV "pull") "out";
lin pull_out_V2 = mkV2 (partV (mkV "pull") "out");
lin pull_over_V2 = mkV2 (partV (mkV "pull") "over");
lin pull_through_V = partV (mkV "pull") "through";
lin pull_to_V2 = mkV2 (partV (mkV "pull") "to");
lin pull_together_V = partV (mkV "pull") "together";
lin pull_up_V = partV (mkV "pull") "up";
lin pull_up_V2 = mkV2 (partV (mkV "pull") "up");
lin pull_yourself_together_V = partV (reflV (mkV "pull")) "together";
lin pump_in_V = partV (mkV "pump") "in";
lin pump_out_V = partV (mkV "pump") "out";
lin pump_up_V = partV (mkV "pump") "up";
lin push_ahead_V = partV (mkV "push") "ahead";
lin push_around_V = partV (mkV "push") "around";
lin push_back_V = partV (mkV "push") "back";
lin push_in_V2 = prepV2 (mkV "push") (mkPrep "in");
lin push_through_V = partV (mkV "push") "through";
lin push_up_V2 = mkV2 (partV (mkV "push") "up");
lin put_across_V = partV IrregEng.put_V "across";
lin put_across_V2 = mkV2 (partV IrregEng.put_V "across");
lin put_aside_V = partV IrregEng.put_V "aside";
lin put_away_V = partV IrregEng.put_V "away";
lin put_away_V2 = mkV2 (partV IrregEng.put_V "away");
lin put_back_V2 = mkV2 (partV IrregEng.put_V "back");
lin put_by_V2 = mkV2 (partV IrregEng.put_V "by");
lin put_down_V = partV IrregEng.put_V "down";
lin put_down_V2 = mkV2 (partV IrregEng.put_V "down");
lin put_down_for_V3 = mkV3 (partV IrregEng.put_V "down") noPrep (mkPrep "for");
lin put_down_to_V3 = mkV3 (partV IrregEng.put_V "down") noPrep (mkPrep "to");
lin put_forth_V = partV IrregEng.put_V "forth";
lin put_in_V = partV IrregEng.put_V "in";
lin put_in_V2 = mkV2 (partV IrregEng.put_V "in");
lin put_in_for_V2 = prepV2 (partV IrregEng.put_V "in") (mkPrep "for");
lin put_off_V = partV IrregEng.put_V "off";
lin put_off_V2 = mkV2 (partV IrregEng.put_V "off");
lin put_on_V = partV IrregEng.put_V "on";
lin put_on_V2 = mkV2 (partV IrregEng.put_V "on");
lin put_out_V = partV IrregEng.put_V "out";
lin put_out_V2 = mkV2 (partV IrregEng.put_V "out");
lin put_over_V2 = mkV2 (partV IrregEng.put_V "over");
lin put_through_V2 = mkV2 (partV IrregEng.put_V "through");
lin put_together_V2 = mkV2 (partV IrregEng.put_V "together");
lin put_towards_V2 = mkV2 (partV IrregEng.put_V "towards");
lin put_up_V = partV IrregEng.put_V "up";
lin put_up_V2 = mkV2 (partV IrregEng.put_V "up");
lin put_up_V2V = mkV2V (partV IrregEng.put_V "up") noPrep (mkPrep "to");
lin put_up_with_V2 = prepV2 (partV IrregEng.put_V "up") (mkPrep "with");
lin put_upon_V = partV IrregEng.put_V "upon";
lin quarrel_out_V = partV (mkV "quarrel") "out";
lin quarrel_with_V2 = prepV2 (mkV "quarrel") (mkPrep "with");
lin queer_up_V2 = mkV2 (partV (mkV "queer") "up");
lin quiet_down_V2 = mkV2 (partV (mkV "quiet") "down");
lin quieten_down_V2 = mkV2 (partV (mkV "quieten") "down");
lin quit_on_V2 = prepV2 IrregEng.quit_V (mkPrep "on");
lin race_off_V = partV (mkV "race") "off";
lin rack_in_V = partV (mkV "rack") "in";
lin rack_off_V = partV (mkV "rack") "off";
lin rack_out_V = partV (mkV "rack") "out";
lin rack_up_V2 = mkV2 (partV (mkV "rack") "up");
lin rain_down_on_V2 = prepV2 (partV (mkV "rain") "down") (mkPrep "on");
lin rain_off_V = partV (mkV "rain") "off";
lin rain_out_V = partV (mkV "rain") "out";
lin rake_in_V2 = mkV2 (partV (mkV "rake") "in");
lin rake_it_in_V2 = mkV2 (partV (mkV "rake") "it in");
lin rake_off_V2 = mkV2 (partV (mkV "rake") "off");
lin rake_over_V2 = mkV2 (partV (mkV "rake") "over");
lin rake_up_V2 = mkV2 (partV (mkV "rake") "up");
lin ramble_on_V = partV (mkV "ramble") "on";
lin ramp_up_V2 = mkV2 (partV (mkV "ramp") "up");
lin rang_up_V = partV (mkV "rang") "up";
lin rap_out_V2 = mkV2 (partV (mkV "rap") "out");
lin rat_on_V2 = prepV2 (mkV "rat") (mkPrep "on");
lin rat_out_V2 = mkV2 (partV (mkV "rat") "out");
lin rat_through_V2 = prepV2 (mkV "rat") (mkPrep "through");
lin ratchet_up_V2 = mkV2 (partV (mkV "ratchet") "up");
lin rattle_off_V2 = mkV2 (partV (mkV "rattle") "off");
lin reach_out_V = partV (mkV "reach") "out";
lin reach_out_for_V2 = prepV2 (partV (mkV "reach") "out") (mkPrep "for");
lin reach_out_to_V2 = prepV2 (partV (mkV "reach") "out") (mkPrep "to");
lin read_off_V2 = mkV2 (partV IrregEng.read_V "off");
lin read_out_V2 = mkV2 (partV IrregEng.read_V "out");
lin read_up_on_V2 = prepV2 (partV IrregEng.read_V "up") (mkPrep "on");
lin reason_out_V2 = mkV2 (partV (mkV "reason") "out");
lin reckon_on_V2 = prepV2 (mkV "reckon") (mkPrep "on");
lin reel_in_V2 = mkV2 (partV (mkV "reel") "in");
lin reel_off_V2 = mkV2 (partV (mkV "reel") "off");
lin reel_out_V2 = mkV2 (partV (mkV "reel") "out");
lin rein_in_V2 = mkV2 (partV (mkV "rein") "in");
lin rely_on_V = partV (mkV "rely") "on";
lin rent_out_V2 = mkV2 (partV (mkV "rent") "out");
lin report_in_V = partV (mkV "report") "in";
lin ride_off_V = partV IrregEng.ride_V "off";
lin ride_on_V2 = prepV2 IrregEng.ride_V (mkPrep "on");
lin ride_out_V2 = mkV2 (partV IrregEng.ride_V "out");
lin ride_up_V = partV IrregEng.ride_V "up";
lin rigg_up_V = partV (mkV "rigg") "up";
lin ring_back_V2 = mkV2 (partV IrregEng.ring_V "back");
lin ring_in_V = partV IrregEng.ring_V "in";
lin ring_off_V = partV IrregEng.ring_V "off";
lin ring_out_V = partV IrregEng.ring_V "out";
lin ring_round_V = partV IrregEng.ring_V "round";
lin ring_up_V = partV (mkV "ring") "up";
lin ring_up_V2 = mkV2 (partV IrregEng.ring_V "up");
lin ring_with_V2 = prepV2 IrregEng.ring_V (mkPrep "with");
lin rip_off_V2 = mkV2 (partV (mkV "rip") "off");
lin rip_out_V = partV (mkV "rip") "out";
lin roll_back_V = partV (mkV "roll") "back";
lin roll_back_V2 = prepV2 (mkV "roll") (mkPrep "back");
lin roll_by_V = partV (mkV "roll") "by";
lin roll_down_V = partV (mkV "roll") "down";
lin roll_in_V = partV (mkV "roll") "in";
lin roll_on_V = partV (mkV "roll") "on";
lin roll_on_V2 = prepV2 (mkV "roll") (mkPrep "on");
lin roll_out_V2 = mkV2 (partV (mkV "roll") "out");
lin roll_over_V = partV (mkV "roll") "over";
lin roll_up_V = partV (mkV "roll") "up";
lin romp_in_V = partV (mkV "romp") "in";
lin romp_through_V2 = prepV2 (mkV "romp") (mkPrep "through");
lin room_in_V2 = mkV2 (partV (mkV "room") "in");
lin root_about_V = partV (mkV "root") "about";
lin root_around_V2 = prepV2 (mkV "root") (mkPrep "around");
lin root_for_V2 = prepV2 (mkV "root") (mkPrep "for");
lin root_out_V2 = mkV2 (partV (mkV "root") "out");
lin root_up_V2 = mkV2 (partV (mkV "root") "up");
lin rope_in_V2 = mkV2 (partV (mkV "rope") "in");
lin rope_into_V2 = prepV2 (mkV "rope") (mkPrep "into");
lin rope_off_V2 = mkV2 (partV (mkV "rope") "off");
lin rough_up_V2 = mkV2 (partV (mkV "rough") "up");
lin round_off_V2 = mkV2 (partV (mkV "round") "off");
lin round_out_V = partV (mkV "round") "out";
lin round_up_V = partV (mkV "round") "up";
lin row_back_V = partV (mkV "row") "back";
lin rub_along_V = partV (mkV "rub") "along";
lin rub_down_V2 = mkV2 (partV (mkV "rub") "down");
lin rub_in_V2 = mkV2 (partV (mkV "rub") "in");
lin rub_it_in_V2 = mkV2 (partV (mkV "rub") "it in");
lin rub_off_on_V2 = prepV2 (partV (mkV "rub") "off") (mkPrep "on");
lin rub_out_V2 = mkV2 (partV (mkV "rub") "out");
lin rub_up_against_V2 = prepV2 (partV (mkV "rub") "up") (mkPrep "against");
lin rub_up_on_V2 = prepV2 (partV (mkV "rub") "up") (mkPrep "on");
lin rule_out_V2 = mkV2 (partV (mkV "rule") "out");
lin run_across_V2 = prepV2 IrregEng.run_V (mkPrep "across");
lin run_after_V2 = prepV2 IrregEng.run_V (mkPrep "after");
lin run_against_V2 = prepV2 IrregEng.run_V (mkPrep "against");
lin run_along_V = partV IrregEng.run_V "along";
lin run_around_V = partV IrregEng.run_V "around";
lin run_away_V = partV IrregEng.run_V "away";
lin run_away_from_V2 = prepV2 (partV IrregEng.run_V "away") (mkPrep "from");
lin run_down_V = partV IrregEng.run_V "down";
lin run_down_V2 = mkV2 (partV IrregEng.run_V "down");
lin run_for_V2 = prepV2 IrregEng.run_V (mkPrep "for");
lin run_in_V = partV IrregEng.run_V "in";
lin run_in_V2 = mkV2 (partV IrregEng.run_V "in");
lin run_into_V2 = prepV2 IrregEng.run_V (mkPrep "into");
lin run_off_V = partV IrregEng.run_V "off";
lin run_off_V2 = mkV2 (partV IrregEng.run_V "off");
lin run_on_V2 = prepV2 IrregEng.run_V (mkPrep "on");
lin run_out_V = partV (mkV "run") "out";
lin run_out_of_V2 = prepV2 (partV (mkV "run") "out") (mkPrep "of");
lin run_over_V = partV IrregEng.run_V "over";
lin run_over_V2 = mkV2 (partV IrregEng.run_V "over");
lin run_through_V2 = prepV2 IrregEng.run_V (mkPrep "through");
lin run_to_V2 = prepV2 IrregEng.run_V (mkPrep "to");
lin run_up_V = partV IrregEng.run_V "up";
lin run_up_V2 = mkV2 (partV IrregEng.run_V "up");
lin run_up_against_V2 = prepV2 (partV IrregEng.run_V "up") (mkPrep "against");
lin run_up_on_V2 = prepV2 (partV IrregEng.run_V "up") (mkPrep "on");
lin run_with_V2 = prepV2 IrregEng.run_V (mkPrep "with");
lin rush_away_V = partV (mkV "rush") "away";
lin rush_into_V2 = prepV2 (mkV "rush") (mkPrep "into");
lin rush_off_V = partV (mkV "rush") "off";
lin rush_out_V2 = mkV2 (partV (mkV "rush") "out");
lin rustle_up_V2 = mkV2 (partV (mkV "rustle") "up");
lin saddle_up_V2 = mkV2 (partV (mkV "saddle") "up");
lin saddle_with_V3 = mkV3 (mkV "saddle") noPrep (mkPrep "with");
lin sag_off_V2 = prepV2 (mkV "sag") (mkPrep "off");
lin sail_into_V2 = prepV2 (mkV "sail") (mkPrep "into");
lin sail_through_V2 = prepV2 (mkV "sail") (mkPrep "through");
lin sally_forth_V = partV (mkV "sally") "forth";
lin sally_out_V = partV (mkV "sally") "out";
lin salt_away_V2 = mkV2 (partV (mkV "salt") "away");
lin sat_down_V = partV (mkV "sat") "down";
lin sat_in_V = partV (mkV "sat") "in";
lin save_on_V2 = prepV2 (mkV "save") (mkPrep "on");
lin save_up_V2 = mkV2 (partV (mkV "save") "up");
lin saw_off_V2 = mkV2 (partV IrregEng.saw_V "off");
lin saw_up_V2 = mkV2 (partV IrregEng.saw_V "up");
lin scale_back_V2 = mkV2 (partV (mkV "scale") "back");
lin scale_down_V2 = mkV2 (partV (mkV "scale") "down");
lin scale_up_V2 = mkV2 (partV (mkV "scale") "up");
lin scare_away_V2 = mkV2 (partV (mkV "scare") "away");
lin scare_off_V2 = mkV2 (partV (mkV "scare") "off");
lin scarf_up_V = partV (mkV "scarf") "up";
lin scoop_up_V = partV (mkV "scoop") "up";
lin scout_about_V = partV (mkV "scout") "about";
lin scout_around_V = partV (mkV "scout") "around";
lin scout_out_V2 = mkV2 (partV (mkV "scout") "out");
lin scout_round_V = partV (mkV "scout") "round";
lin scout_up_V2 = mkV2 (partV (mkV "scout") "up");
lin scrape_along_V = partV (mkV "scrape") "along";
lin scrape_by_V = partV (mkV "scrape") "by";
lin scrape_in_V = partV (mkV "scrape") "in";
lin scrape_into_V2 = prepV2 (mkV "scrape") (mkPrep "into");
lin scrape_through_V2 = prepV2 (mkV "scrape") (mkPrep "through");
lin scrape_together_V2 = mkV2 (partV (mkV "scrape") "together");
lin scrape_up_V2 = mkV2 (partV (mkV "scrape") "up");
lin scratch_out_V = partV (mkV "scratch") "out";
lin screen_off_V2 = mkV2 (partV (mkV "screen") "off");
lin screen_out_V2 = mkV2 (partV (mkV "screen") "out");
lin screw_around_V = partV (mkV "screw") "around";
lin screw_over_V2 = mkV2 (partV (mkV "screw") "over");
lin screw_up_V2 = mkV2 (partV (mkV "screw") "up");
lin see_about_V2 = prepV2 IrregEng.see_V (mkPrep "about");
lin see_into_V3 = mkV3 IrregEng.see_V noPrep (mkPrep "into");
lin see_off_V2 = mkV2 (partV IrregEng.see_V "off");
lin see_out_V2 = mkV2 (partV IrregEng.see_V "out");
lin see_through_V2 = mkV2 (partV IrregEng.see_V "through");
lin see_to_V2 = prepV2 IrregEng.see_V (mkPrep "to");
lin seek_out_V2 = mkV2 (partV (mkV "seek") "out");
lin seize_up_V = partV (mkV "seize") "up";
lin sell_back_V = partV (mkV "sell") "back";
lin sell_off_V2 = mkV2 (partV IrregEng.sell_V "off");
lin sell_on_V2 = mkV2 (partV IrregEng.sell_V "on");
lin sell_out_V = partV IrregEng.sell_V "out";
lin sell_out_V2 = mkV2 (partV IrregEng.sell_V "out");
lin sell_up_V2 = mkV2 (partV IrregEng.sell_V "up");
lin send_back_V2 = mkV2 (partV IrregEng.send_V "back");
lin send_for_V2 = prepV2 IrregEng.send_V (mkPrep "for");
lin send_in_V = partV IrregEng.send_V "in";
lin send_in_V2 = mkV2 (partV IrregEng.send_V "in");
lin send_off_V2 = mkV2 (partV IrregEng.send_V "off");
lin send_off_for_V2 = prepV2 (partV IrregEng.send_V "off") (mkPrep "for");
lin send_out_V2 = mkV2 (partV IrregEng.send_V "out");
lin send_out_for_V2 = prepV2 (partV IrregEng.send_V "out") (mkPrep "for");
lin send_up_V2 = mkV2 (partV IrregEng.send_V "up");
lin set_about_V2 = prepV2 IrregEng.set_V (mkPrep "about");
lin set_apart_V2 = mkV2 (partV IrregEng.set_V "apart");
lin set_aside_V2 = mkV2 (partV IrregEng.set_V "aside");
lin set_back_V = partV (mkV "set") "back";
lin set_back_V2 = mkV2 (partV IrregEng.set_V "back");
lin set_forth_V = partV IrregEng.set_V "forth";
lin set_forth_V2 = mkV2 (partV IrregEng.set_V "forth");
lin set_in_V = partV IrregEng.set_V "in";
lin set_off_V = partV IrregEng.set_V "off";
lin set_off_V2 = mkV2 (partV IrregEng.set_V "off");
lin set_on_V2 = prepV2 IrregEng.set_V (mkPrep "on");
lin set_out_V = partV IrregEng.set_V "out";
lin set_out_V2 = mkV2 (partV IrregEng.set_V "out");
lin set_to_V = partV IrregEng.set_V "to";
lin set_up_V = partV (mkV "set") "up";
lin set_up_V2 = mkV2 (partV IrregEng.set_V "up");
lin set_upon_V2 = prepV2 IrregEng.set_V (mkPrep "upon");
lin settle_back_V = partV (mkV "settle") "back";
lin settle_down_V = partV (mkV "settle") "down";
lin settle_for_V2 = prepV2 (mkV "settle") (mkPrep "for");
lin settle_in_V = partV (mkV "settle") "in";
lin settle_on_V2 = prepV2 (mkV "settle") (mkPrep "on");
lin settle_up_V = partV (mkV "settle") "up";
lin sex_up_V2 = mkV2 (partV (mkV "sex") "up");
lin shack_up_V = partV (mkV "shack") "up";
lin shade_in_V2 = mkV2 (partV (mkV "shade") "in");
lin shake_down_V2 = mkV2 (partV IrregEng.shake_V "down");
lin shake_off_V2 = mkV2 (partV IrregEng.shake_V "off");
lin shake_out_V2 = mkV2 (partV IrregEng.shake_V "out");
lin shake_up_V2 = mkV2 (partV IrregEng.shake_V "up");
lin shape_up_V = partV (mkV "shape") "up";
lin share_out_V = partV (mkV "share") "out";
lin shave_away_V = partV (mkV "shave") "away";
lin shave_off_V2 = mkV2 (partV IrregEng.shave_V "off");
lin shell_out_V2 = mkV2 (partV (mkV "shell") "out");
lin ship_in_V = partV (mkV "ship") "in";
lin ship_off_V2 = mkV2 (partV (mkV "ship") "off");
lin ship_out_V = partV (mkV "ship") "out";
lin ship_out_V2 = mkV2 (partV (mkV "ship") "out");
lin shoot_away_V = partV IrregEng.shoot_V "away";
lin shoot_back_V = partV IrregEng.shoot_V "back";
lin shoot_for_V2 = prepV2 IrregEng.shoot_V (mkPrep "for");
lin shoot_off_V = partV IrregEng.shoot_V "off";
lin shoot_out_V = partV IrregEng.shoot_V "out";
lin shoot_up_V = partV IrregEng.shoot_V "up";
lin shoot_up_V2 = mkV2 (partV IrregEng.shoot_V "up");
lin shop_around_V = partV (mkV "shop") "around";
lin shore_up_V2 = mkV2 (partV (mkV "shore") "up");
lin short_out_V = partV (mkV "short") "out";
lin shot_down_V = partV (mkV "shot") "down";
lin shout_down_V2 = mkV2 (partV (mkV "shout") "down");
lin shout_out_V2 = mkV2 (partV (mkV "shout") "out");
lin shove_through_V = partV (mkV "shove") "through";
lin show_around_V2 = mkV2 (partV IrregEng.show_V "around");
lin show_in_V2 = mkV2 (partV IrregEng.show_V "in");
lin show_off_V = partV IrregEng.show_V "off";
lin show_off_V2 = mkV2 (partV IrregEng.show_V "off");
lin show_out_V2 = mkV2 (partV IrregEng.show_V "out");
lin show_over_V3 = mkV3 IrregEng.show_V noPrep (mkPrep "over");
lin show_round_V2 = mkV2 (partV IrregEng.show_V "round");
lin show_through_V = partV IrregEng.show_V "through";
lin show_up_V = partV IrregEng.show_V "up";
lin show_up_V2 = mkV2 (partV IrregEng.show_V "up");
lin shrug_off_V2 = mkV2 (partV (mkV "shrug") "off");
lin shut_away_V2 = mkV2 (partV IrregEng.shut_V "away");
lin shut_down_V2 = mkV2 (partV IrregEng.shut_V "down");
lin shut_in_V2 = mkV2 (partV IrregEng.shut_V "in");
lin shut_off_V = partV (mkV "shut") "off";
lin shut_off_V2 = mkV2 (partV IrregEng.shut_V "off");
lin shut_out_V2 = mkV2 (partV IrregEng.shut_V "out");
lin shut_out_of_V2 = prepV2 (partV IrregEng.shut_V "out") (mkPrep "of");
lin shut_up_V2 = mkV2 (partV IrregEng.shut_V "up");
lin shut_yourself_away_V = partV (reflV IrregEng.shut_V) "away";
lin shy_away_V = partV (mkV "shy") "away";
lin shy_away_from_V2 = prepV2 (partV (mkV "shy") "away") (mkPrep "from");
lin side_with_V2 = prepV2 (mkV "side") (mkPrep "with");
lin sidle_up_to_V2 = prepV2 (partV (mkV "sidle") "up") (mkPrep "to");
lin sift_through_V2 = prepV2 (mkV "sift") (mkPrep "through");
lin sign_away_V2 = mkV2 (partV (mkV "sign") "away");
lin sign_for_V3 = mkV3 (mkV "sign") noPrep (mkPrep "for");
lin sign_in_V = partV (mkV "sign") "in";
lin sign_in_V2 = mkV2 (partV (mkV "sign") "in");
lin sign_into_V2 = prepV2 (mkV "sign") (mkPrep "into");
lin sign_off_V = partV (mkV "sign") "off";
lin sign_off_V2 = mkV2 (partV (mkV "sign") "off");
lin sign_off_on_V2 = prepV2 (partV (mkV "sign") "off") (mkPrep "on");
lin sign_on_V = partV (mkV "sign") "on";
lin sign_on_V2 = mkV2 (partV (mkV "sign") "on");
lin sign_on_with_V2 = prepV2 (partV (mkV "sign") "on") (mkPrep "with");
lin sign_out_V = partV (mkV "sign") "out";
lin sign_out_V2 = mkV2 (partV (mkV "sign") "out");
lin sign_out_of_V2 = prepV2 (partV (mkV "sign") "out") (mkPrep "of");
lin sign_up_V = partV (mkV "sign") "up";
lin sign_with_V2 = prepV2 (mkV "sign") (mkPrep "with");
lin silt_up_V = partV (mkV "silt") "up";
lin simmer_down_V = partV (mkV "simmer") "down";
lin sing_along_V = partV IrregEng.sing_V "along";
lin sing_out_V = partV IrregEng.sing_V "out";
lin sing_up_V = partV IrregEng.sing_V "up";
lin single_out_V2 = mkV2 (partV (mkV "single") "out");
lin sink_in_V = partV IrregEng.sink_V "in";
lin siphone_off_V = partV (mkV "siphone") "off";
lin sit_about_V = partV IrregEng.sit_V "about";
lin sit_around_V = partV IrregEng.sit_V "around";
lin sit_back_V = partV IrregEng.sit_V "back";
lin sit_by_V = partV IrregEng.sit_V "by";
lin sit_down_V2 = mkV2 (partV IrregEng.sit_V "down");
lin sit_for_V2 = prepV2 IrregEng.sit_V (mkPrep "for");
lin sit_in_V2 = mkV2 (partV IrregEng.sit_V "in");
lin sit_in_for_V2 = prepV2 (partV IrregEng.sit_V "in") (mkPrep "for");
lin sit_in_on_V2 = prepV2 (partV IrregEng.sit_V "in") (mkPrep "on");
lin sit_on_V2 = prepV2 IrregEng.sit_V (mkPrep "on");
lin sit_out_V2 = mkV2 (partV IrregEng.sit_V "out");
lin sit_over_V2 = prepV2 IrregEng.sit_V (mkPrep "over");
lin sit_through_V2 = prepV2 IrregEng.sit_V (mkPrep "through");
lin sit_up_V = partV (mkV "sit") "up";
lin sit_with_V2 = prepV2 IrregEng.sit_V (mkPrep "with");
lin size_up_V2 = mkV2 (partV (mkV "size") "up");
lin skin_up_V = partV (mkV "skin") "up";
lin skin_up_V2 = mkV2 (partV (mkV "skin") "up");
lin skip_off_V = partV (mkV "skip") "off";
lin skive_off_V = partV (mkV "skive") "off";
lin slack_off_V = partV (mkV "slack") "off";
lin slacken_off_V = partV (mkV "slacken") "off";
lin slag_off_V2 = mkV2 (partV (mkV "slag") "off");
lin slant_toward_V2 = prepV2 (mkV "slant") (mkPrep "toward");
lin sleep_in_V = partV IrregEng.sleep_V "in";
lin sleep_off_V2 = mkV2 (partV IrregEng.sleep_V "off");
lin sleep_on_V2 = prepV2 IrregEng.sleep_V (mkPrep "on");
lin sleep_over_V = partV IrregEng.sleep_V "over";
lin sleep_through_V2 = prepV2 IrregEng.sleep_V (mkPrep "through");
lin slice_off_V2 = mkV2 (partV (mkV "slice") "off");
lin slice_up_V2 = mkV2 (partV (mkV "slice") "up");
lin slip_away_V = partV (mkV "slip") "away";
lin slip_by_V = partV (mkV "slip") "by";
lin slip_down_V = partV (mkV "slip") "down";
lin slip_in_V2 = mkV2 (partV (mkV "slip") "in");
lin slip_into_V2 = prepV2 (mkV "slip") (mkPrep "into");
lin slip_off_V = partV (mkV "slip") "off";
lin slip_off_V2 = mkV2 (partV (mkV "slip") "off");
lin slip_off_to_V2 = prepV2 (partV (mkV "slip") "off") (mkPrep "to");
lin slip_on_V2 = mkV2 (partV (mkV "slip") "on");
lin slip_out_V = partV (mkV "slip") "out";
lin slip_up_V = partV (mkV "slip") "up";
lin slob_about_V = partV (mkV "slob") "about";
lin slob_around_V = partV (mkV "slob") "around";
lin slope_off_V = partV (mkV "slope") "off";
lin slough_off_V2 = mkV2 (partV (mkV "slough") "off");
lin slow_down_V = partV (mkV "slow") "down";
lin slow_down_V2 = mkV2 (partV (mkV "slow") "down");
lin slow_up_V2 = mkV2 (partV (mkV "slow") "up");
lin slug_it_out_V2 = mkV2 (partV (mkV "slug") "it out");
lin smack_of_V2 = prepV2 (mkV "smack") (mkPrep "of");
lin smash_down_V2 = mkV2 (partV (mkV "smash") "down");
lin smash_in_V2 = mkV2 (partV (mkV "smash") "in");
lin smash_up_V2 = mkV2 (partV (mkV "smash") "up");
lin smoke_out_V2 = mkV2 (partV (mkV "smoke") "out");
lin smooth_out_V = partV (mkV "smooth") "out";
lin smuggle_out_V = partV (mkV "smuggle") "out";
lin snaffle_up_V2 = mkV2 (partV (mkV "snaffle") "up");
lin snap_back_V = partV (mkV "snap") "back";
lin snap_off_V2 = mkV2 (partV (mkV "snap") "off");
lin snap_out_of_V2 = prepV2 (partV (mkV "snap") "out") (mkPrep "of");
lin snap_to_it_V2 = mkV2 (partV (mkV "snap") "to it");
lin snap_up_V2 = mkV2 (partV (mkV "snap") "up");
lin snarl_up_V2 = mkV2 (partV (mkV "snarl") "up");
lin sneak_out_V = partV (mkV "sneak") "out";
lin sneak_up_on_V2 = prepV2 (partV (mkV "sneak") "up") (mkPrep "on");
lin sniff_around_V2 = prepV2 (mkV "sniff") (mkPrep "around");
lin sniff_at_V2 = prepV2 (mkV "sniff") (mkPrep "at");
lin sniff_out_V2 = mkV2 (partV (mkV "sniff") "out");
lin snitch_on_V2 = prepV2 (mkV "snitch") (mkPrep "on");
lin snuff_out_V2 = prepV2 (mkV "snuff") (mkPrep "out");
lin soak_off_V = partV (mkV "soak") "off";
lin soak_up_V = partV (mkV "soak") "up";
lin sober_up_V2 = prepV2 (mkV "sober") (mkPrep "up");
lin soften_up_V2 = mkV2 (partV (mkV "soften") "up");
lin soldier_on_V = partV (mkV "soldier") "on";
lin sort_out_V2 = mkV2 (partV (mkV "sort") "out");
lin sound_off_V = partV (mkV "sound") "off";
lin sound_out_V2 = mkV2 (partV (mkV "sound") "out");
lin spaff_away_V2 = mkV2 (partV (mkV "spaff") "away");
lin spark_off_V2 = mkV2 (partV (mkV "spark") "off");
lin spark_up_V2 = mkV2 (partV (mkV "spark") "up");
lin speak_out_V = partV IrregEng.speak_V "out";
lin speak_up_V = partV IrregEng.speak_V "up";
lin speed_along_V = partV (mkV "speed") "along";
lin speed_up_V2 = mkV2 (partV (mkV "speed") "up");
lin spell_out_V2 = mkV2 (partV (mkV "spell") "out");
lin spew_out_V2 = mkV2 (partV (mkV "spew") "out");
lin spew_up_V = partV (mkV "spew") "up";
lin spill_out_V = partV IrregEng.spill_V "out";
lin spill_over_V = partV IrregEng.spill_V "over";
lin spin_off_V2 = mkV2 (partV IrregEng.spin_V "off");
lin spin_out_V = partV IrregEng.spin_V "out";
lin spin_out_V2 = mkV2 (partV IrregEng.spin_V "out");
lin spirit_away_V2 = mkV2 (partV (mkV "spirit") "away");
lin spirit_off_V2 = mkV2 (partV (mkV "spirit") "off");
lin spit_it_out_V2 = mkV2 (partV IrregEng.spit_V "it out");
lin spit_out_V2 = mkV2 (partV IrregEng.spit_V "out");
lin splash_down_V = partV (mkV "splash") "down";
lin splash_out_V = partV (mkV "splash") "out";
lin splash_out_on_V2 = prepV2 (partV (mkV "splash") "out") (mkPrep "on");
lin split_up_V = partV IrregEng.split_V "up";
lin split_up_V2 = mkV2 (partV IrregEng.split_V "up");
lin spoil_for_V2 = prepV2 (mkV "spoil") (mkPrep "for");
lin sponge_down_V2 = mkV2 (partV (mkV "sponge") "down");
lin sponge_off_V2 = prepV2 (mkV "sponge") (mkPrep "off");
lin sponge_on_V2 = prepV2 (mkV "sponge") (mkPrep "on");
lin spread_out_V2 = mkV2 (partV (mkV "spread") "out");
lin spring_back_V = partV IrregEng.spring_V "back";
lin spring_for_V2 = prepV2 IrregEng.spring_V (mkPrep "for");
lin spring_from_V2 = prepV2 IrregEng.spring_V (mkPrep "from");
lin spring_on_V3 = mkV3 IrregEng.spring_V noPrep (mkPrep "on");
lin spring_up_V = partV IrregEng.spring_V "up";
lin sprout_up_V = partV (mkV "sprout") "up";
lin spruce_up_V2 = mkV2 (partV (mkV "spruce") "up");
lin spur_on_V2 = mkV2 (partV (mkV "spur") "on");
lin square_away_V2 = mkV2 (partV (mkV "square") "away");
lin square_off_V = partV (mkV "square") "off";
lin square_off_against_V3 = mkV3 (partV (mkV "square") "off") noPrep (mkPrep "against");
lin square_up_V = partV (mkV "square") "up";
lin square_up_to_V2 = prepV2 (partV (mkV "square") "up") (mkPrep "to");
lin square_with_V2 = prepV2 (mkV "square") (mkPrep "with");
lin squeeze_in_V2 = mkV2 (partV (mkV "squeeze") "in");
lin squeeze_out_V2 = mkV2 (partV (mkV "squeeze") "out");
lin squeeze_up_V = partV (mkV "squeeze") "up";
lin stack_up_V = partV (mkV "stack") "up";
lin stack_up_V2 = mkV2 (partV (mkV "stack") "up");
lin stack_up_against_V2 = prepV2 (partV (mkV "stack") "up") (mkPrep "against");
lin staff_up_V2 = mkV2 (partV (mkV "staff") "up");
lin stamp_out_V2 = mkV2 (partV (mkV "stamp") "out");
lin stand_about_V = partV IrregEng.stand_V "about";
lin stand_around_V = partV IrregEng.stand_V "around";
lin stand_aside_V = partV IrregEng.stand_V "aside";
lin stand_back_V = partV IrregEng.stand_V "back";
lin stand_by_V = partV IrregEng.stand_V "by";
lin stand_by_V2 = prepV2 IrregEng.stand_V (mkPrep "by");
lin stand_down_V = partV IrregEng.stand_V "down";
lin stand_for_V2 = prepV2 IrregEng.stand_V (mkPrep "for");
lin stand_in_for_V2 = prepV2 (partV IrregEng.stand_V "in") (mkPrep "for");
lin stand_out_V = partV IrregEng.stand_V "out";
lin stand_up_V = partV IrregEng.stand_V "up";
lin stand_up_V2 = mkV2 (partV IrregEng.stand_V "up");
lin stand_up_for_V2 = prepV2 (partV IrregEng.stand_V "up") (mkPrep "for");
lin stand_up_to_V2 = prepV2 (partV IrregEng.stand_V "up") (mkPrep "to");
lin stare_down_V2 = mkV2 (partV (mkV "stare") "down");
lin start_off_V = partV (mkV "start") "off";
lin start_off_V2 = mkV2 (partV (mkV "start") "off");
lin start_off_on_V2 = prepV2 (partV (mkV "start") "off") (mkPrep "on");
lin start_on_V2 = prepV2 (mkV "start") (mkPrep "on");
lin start_on_at_V2 = prepV2 (partV (mkV "start") "on") (mkPrep "at");
lin start_out_V = partV (mkV "start") "out";
lin start_out_as_V2 = prepV2 (partV (mkV "start") "out") (mkPrep "as");
lin start_out_to_V2 = prepV2 (partV (mkV "start") "out") (mkPrep "to");
lin start_over_V = partV (mkV "start") "over";
lin start_up_V = partV (mkV "start") "up";
lin start_up_V2 = mkV2 (partV (mkV "start") "up");
lin stash_away_V2 = mkV2 (partV (mkV "stash") "away");
lin stave_in_V2 = mkV2 (partV (mkV "stave") "in");
lin stave_off_V2 = mkV2 (partV (mkV "stave") "off");
lin stay_away_V = partV (mkV "stay") "away";
lin stay_away_from_V2 = prepV2 (partV (mkV "stay") "away") (mkPrep "from");
lin stay_in_V = partV (mkV "stay") "in";
lin stay_on_V = partV (mkV "stay") "on";
lin stay_out_V = partV (mkV "stay") "out";
lin stay_over_V = partV (mkV "stay") "over";
lin stay_up_V = partV (mkV "stay") "up";
lin steal_away_V = partV IrregEng.steal_V "away";
lin steal_out_V = partV IrregEng.steal_V "out";
lin steal_over_V2 = prepV2 IrregEng.steal_V (mkPrep "over");
lin steal_up_V = partV IrregEng.steal_V "up";
lin steal_up_on_V2 = prepV2 (partV IrregEng.steal_V "up") (mkPrep "on");
lin steer_clear_of_V2 = prepV2 (partV (mkV "steer") "clear") (mkPrep "of");
lin stem_from_V2 = prepV2 (mkV "stem") (mkPrep "from");
lin step_aside_V = partV (mkV "step") "aside";
lin step_back_V = partV (mkV "step") "back";
lin step_down_V = partV (mkV "step") "down";
lin step_down_V2 = mkV2 (partV (mkV "step") "down");
lin step_forward_V = partV (mkV "step") "forward";
lin step_in_V = partV (mkV "step") "in";
lin step_on_it_V2 = mkV2 (partV (mkV "step") "on it");
lin step_out_V = partV (mkV "step") "out";
lin step_to_V2 = prepV2 (mkV "step") (mkPrep "to");
lin step_up_V2 = mkV2 (partV (mkV "step") "up");
lin stick_around_V = partV IrregEng.stick_V "around";
lin stick_at_V2 = prepV2 IrregEng.stick_V (mkPrep "at");
lin stick_by_V2 = prepV2 IrregEng.stick_V (mkPrep "by");
lin stick_down_V2 = mkV2 (partV IrregEng.stick_V "down");
lin stick_it_to_V2 = mkV2 (partV IrregEng.stick_V "it") (mkPrep "to");
lin stick_out_V = partV IrregEng.stick_V "out";
lin stick_out_V2 = mkV2 (partV IrregEng.stick_V "out");
lin stick_out_for_V2 = prepV2 (partV IrregEng.stick_V "out") (mkPrep "for");
lin stick_to_V2 = prepV2 IrregEng.stick_V (mkPrep "to");
lin stick_together_V = partV IrregEng.stick_V "together";
lin stick_up_V = partV IrregEng.stick_V "up";
lin stick_up_V2 = mkV2 (partV IrregEng.stick_V "up");
lin stick_up_for_V2 = prepV2 (partV IrregEng.stick_V "up") (mkPrep "for");
lin stick_with_V2 = prepV2 IrregEng.stick_V (mkPrep "with");
lin stiffen_up_V = partV (mkV "stiffen") "up";
lin stiffen_up_V2 = mkV2 (partV (mkV "stiffen") "up");
lin stir_up_V2 = mkV2 (partV (mkV "stir") "up");
lin stitch_up_V2 = mkV2 (partV (mkV "stitch") "up");
lin stock_up_V = partV (mkV "stock") "up";
lin stomp_off_V = partV (mkV "stomp") "off";
lin stomp_on_V2 = prepV2 (mkV "stomp") (mkPrep "on");
lin stop_around_V = partV (mkV "stop") "around";
lin stop_back_V = partV (mkV "stop") "back";
lin stop_behind_V = partV (mkV "stop") "behind";
lin stop_by_V2 = prepV2 (mkV "stop") (mkPrep "by");
lin stop_in_V = partV (mkV "stop") "in";
lin stop_off_V = partV (mkV "stop") "off";
lin stop_out_V = partV (mkV "stop") "out";
lin stop_over_V = partV (mkV "stop") "over";
lin stop_up_V = partV (mkV "stop") "up";
lin stop_up_V2 = mkV2 (partV (mkV "stop") "up");
lin storm_off_V = partV (mkV "storm") "off";
lin storm_out_V = partV (mkV "storm") "out";
lin stow_away_V = partV (mkV "stow") "away";
lin straighten_out_V2 = mkV2 (partV (mkV "straighten") "out");
lin straighten_up_V = partV (mkV "straighten") "up";
lin straighten_up_V2 = mkV2 (partV (mkV "straighten") "up");
lin stretch_out_V = partV (mkV "stretch") "out";
lin strike_back_V = partV IrregEng.strike_V "back";
lin strike_down_V = partV (mkV "strike") "down";
lin strike_down_V2 = mkV2 (partV IrregEng.strike_V "down");
lin strike_off_V2 = mkV2 (partV IrregEng.strike_V "off");
lin strike_on_V2 = prepV2 IrregEng.strike_V (mkPrep "on");
lin strike_out_V = partV IrregEng.strike_V "out";
lin strike_out_V2 = mkV2 (partV IrregEng.strike_V "out");
lin strike_up_V = partV IrregEng.strike_V "up";
lin strike_up_V2 = mkV2 (partV IrregEng.strike_V "up");
lin strike_upon_V2 = prepV2 IrregEng.strike_V (mkPrep "upon");
lin string_along_V = partV IrregEng.string_V "along";
lin string_along_V2 = mkV2 (partV IrregEng.string_V "along");
lin string_out_V2 = mkV2 (partV IrregEng.string_V "out");
lin string_together_V2 = mkV2 (partV IrregEng.string_V "together");
lin string_up_V2 = mkV2 (partV IrregEng.string_V "up");
lin struggle_back_V = partV (mkV "struggle") "back";
lin stub_out_V2 = mkV2 (partV (mkV "stub") "out");
lin stuck_by_V = partV (mkV "stuck") "by";
lin stuff_up_V2 = mkV2 (partV (mkV "stuff") "up");
lin stumble_across_V2 = prepV2 (mkV "stumble") (mkPrep "across");
lin stumble_upon_V2 = prepV2 (mkV "stumble") (mkPrep "upon");
lin stump_up_V2 = prepV2 (mkV "stump") (mkPrep "up");
lin suck_in_V2 = mkV2 (partV (mkV "suck") "in");
lin suck_into_V2 = prepV2 (mkV "suck") (mkPrep "into");
lin suck_up_V = partV (mkV "suck") "up";
lin suck_up_to_V2 = prepV2 (partV (mkV "suck") "up") (mkPrep "to");
lin suit_up_V = partV (mkV "suit") "up";
lin sum_up_V2 = mkV2 (partV (mkV "sum") "up");
lin summon_up_V2 = mkV2 (partV (mkV "summon") "up");
lin surge_on_V = partV (mkV "surge") "on";
lin suss_out_V2 = mkV2 (partV (mkV "suss") "out");
lin swallow_up_V = partV (mkV "swallow") "up";
lin swan_about_V = partV (mkV "swan") "about";
lin swan_around_V = partV (mkV "swan") "around";
lin swan_in_V = partV (mkV "swan") "in";
lin swan_off_V = partV (mkV "swan") "off";
lin swear_by_V2 = prepV2 IrregEng.swear_V (mkPrep "by");
lin swear_down_V = partV IrregEng.swear_V "down";
lin swear_off_V = partV (mkV "swear") "off";
lin sweat_out_V = partV (mkV "sweat") "out";
lin sweep_through_V2 = prepV2 IrregEng.sweep_V (mkPrep "through");
lin swing_around_V = partV (mkV "swing") "around";
lin swing_at_V2 = prepV2 (mkV "swing") (mkPrep "at");
lin swing_by_V = partV (mkV "swing") "by";
lin swing_round_V = partV (mkV "swing") "round";
lin switch_off_V2 = mkV2 (partV (mkV "switch") "off");
lin switch_on_V2 = mkV2 (partV (mkV "switch") "on");
lin swore_off_V = partV (mkV "swore") "off";
lin syphon_off_V2 = mkV2 (partV (mkV "syphon") "off");
lin tack_down_V = partV (mkV "tack") "down";
lin tack_on_V2 = mkV2 (partV (mkV "tack") "on");
lin tack_onto_V3 = mkV3 (mkV "tack") noPrep (mkPrep "onto");
lin tag_along_V = partV (mkV "tag") "along";
lin tag_on_V2 = mkV2 (partV (mkV "tag") "on");
lin tag_onto_V3 = mkV3 (mkV "tag") noPrep (mkPrep "onto");
lin tag_with_V2 = prepV2 (mkV "tag") (mkPrep "with");
lin tail_away_V = partV (mkV "tail") "away";
lin tail_back_V = partV (mkV "tail") "back";
lin tail_off_V = partV (mkV "tail") "off";
lin take_after_V2 = prepV2 IrregEng.take_V (mkPrep "after");
lin take_apart_V2 = mkV2 (partV IrregEng.take_V "apart");
lin take_aside_V2 = mkV2 (partV IrregEng.take_V "aside");
lin take_away_V2 = mkV2 (partV IrregEng.take_V "away");
lin take_back_V = partV (mkV "take") "back";
lin take_back_V2 = mkV2 (partV IrregEng.take_V "back");
lin take_down_V2 = mkV2 (partV IrregEng.take_V "down");
lin take_for_V2 = mkV2 (partV IrregEng.take_V "for");
lin take_in_V = partV (mkV "take") "in";
lin take_in_V2 = mkV2 (partV IrregEng.take_V "in");
lin take_it_V2 = prepV2 IrregEng.take_V (mkPrep "it");
lin take_it_out_on_V2 = prepV2 (partV IrregEng.take_V "it out") (mkPrep "on");
lin take_it_upon_yourself_V = partV IrregEng.take_V "it upon yourself";
lin take_off_V = partV IrregEng.take_V "off";
lin take_off_V2 = mkV2 (partV IrregEng.take_V "off");
lin take_on_V = partV (mkV "take") "on";
lin take_on_V2 = mkV2 (partV IrregEng.take_V "on");
lin take_out_V = partV (mkV "take") "out";
lin take_out_V2 = mkV2 (partV IrregEng.take_V "out");
lin take_over_V = partV IrregEng.take_V "over";
lin take_over_V2 = mkV2 (partV IrregEng.take_V "over");
lin take_through_V2 = mkV2 (partV IrregEng.take_V "through");
lin take_to_V2 = prepV2 IrregEng.take_V (mkPrep "to");
lin take_up_V = partV (mkV "take") "up";
lin take_up_V2 = mkV2 (partV IrregEng.take_V "up");
lin talk_around_V2 = prepV2 (mkV "talk") (mkPrep "around");
lin talk_at_V2 = prepV2 (mkV "talk") (mkPrep "at");
lin talk_back_V = partV (mkV "talk") "back";
lin talk_back_to_V2 = prepV2 (partV (mkV "talk") "back") (mkPrep "to");
lin talk_down_V2 = mkV2 (partV (mkV "talk") "down");
lin talk_down_to_V2 = prepV2 (partV (mkV "talk") "down") (mkPrep "to");
lin talk_into_V3 = mkV3 (mkV "talk") noPrep (mkPrep "into");
lin talk_out_V2 = mkV2 (partV (mkV "talk") "out");
lin talk_out_of_V3 = mkV3 (mkV "talk") noPrep (mkPrep "out of");
lin talk_over_V2 = mkV2 (partV (mkV "talk") "over");
lin talk_round_V2 = prepV2 (mkV "talk") (mkPrep "round");
lin talk_through_V3 = mkV3 (mkV "talk") noPrep (mkPrep "through");
lin talk_up_V2 = mkV2 (partV (mkV "talk") "up");
lin talk_yourself_out_V = partV (reflV (mkV "talk")) "out";
lin tap_for_V3 = mkV3 (mkV "tap") noPrep (mkPrep "for");
lin tap_into_V2 = prepV2 (mkV "tap") (mkPrep "into");
lin tap_off_with_V2 = prepV2 (partV (mkV "tap") "off") (mkPrep "with");
lin tap_out_V2 = mkV2 (partV (mkV "tap") "out");
lin tap_up_V2 = mkV2 (partV (mkV "tap") "up");
lin taper_off_V = partV (mkV "taper") "off";
lin team_up_V = partV (mkV "team") "up";
lin tear_apart_V2 = mkV2 (partV IrregEng.tear_V "apart");
lin tear_at_V2 = prepV2 IrregEng.tear_V (mkPrep "at");
lin tear_away_V2 = mkV2 (partV IrregEng.tear_V "away");
lin tear_down_V2 = mkV2 (partV IrregEng.tear_V "down");
lin tear_into_V2 = prepV2 IrregEng.tear_V (mkPrep "into");
lin tear_off_V = partV IrregEng.tear_V "off";
lin tear_off_V2 = mkV2 (partV IrregEng.tear_V "off");
lin tear_out_V = partV IrregEng.tear_V "out";
lin tear_up_V = partV IrregEng.tear_V "up";
lin tear_up_V2 = mkV2 (partV IrregEng.tear_V "up");
lin tee_off_V = partV (mkV "tee") "off";
lin tee_off_V2 = mkV2 (partV (mkV "tee") "off");
lin tee_off_on_V2 = prepV2 (partV (mkV "tee") "off") (mkPrep "on");
lin tee_up_V = partV (mkV "tee") "up";
lin tell_apart_V2 = mkV2 (partV IrregEng.tell_V "apart");
lin tell_off_V2 = mkV2 (partV IrregEng.tell_V "off");
lin tell_on_V2 = prepV2 IrregEng.tell_V (mkPrep "on");
lin text_out_V = partV (mkV "text") "out";
lin think_over_V2 = mkV2 (partV IrregEng.think_V "over");
lin think_through_V2 = mkV2 (partV IrregEng.think_V "through");
lin think_up_V2 = mkV2 (partV IrregEng.think_V "up");
lin throw_away_V2 = mkV2 (partV IrregEng.throw_V "away");
lin throw_in_V = partV (mkV "throw") "in";
lin throw_in_V2 = mkV2 (partV IrregEng.throw_V "in");
lin throw_off_V = partV IrregEng.throw_V "off";
lin throw_off_V2 = mkV2 (partV IrregEng.throw_V "off");
lin throw_on_V2 = mkV2 (partV IrregEng.throw_V "on");
lin throw_out_V2 = mkV2 (partV IrregEng.throw_V "out");
lin throw_over_V2 = mkV2 (partV IrregEng.throw_V "over");
lin throw_together_V2 = mkV2 (partV IrregEng.throw_V "together");
lin throw_up_V = partV IrregEng.throw_V "up";
lin throw_up_V2 = mkV2 (partV IrregEng.throw_V "up");
lin throw_yourself_at_V2 = prepV2 (reflV IrregEng.throw_V) (mkPrep "at");
lin throw_yourself_into_V2 = prepV2 (reflV IrregEng.throw_V) (mkPrep "into");
lin thrust_open_V = partV (mkV "thrust") "open";
lin tick_along_V = partV (mkV "tick") "along";
lin tick_away_V = partV (mkV "tick") "away";
lin tick_by_V = partV (mkV "tick") "by";
lin tick_off_V = partV (mkV "tick") "off";
lin tick_off_V2 = mkV2 (partV (mkV "tick") "off");
lin tick_over_V = partV (mkV "tick") "over";
lin tide_over_V2 = mkV2 (partV (mkV "tide") "over");
lin tidy_up_V2 = mkV2 (partV (mkV "tidy") "up");
lin tie_back_V2 = mkV2 (partV (mkV "tie") "back");
lin tie_down_V2 = mkV2 (partV (mkV "tie") "down");
lin tie_in_V = partV (mkV "tie") "in";
lin tie_in_V2 = prepV2 (mkV "tie") (mkPrep "in");
lin tie_in_with_V2 = prepV2 (partV (mkV "tie") "in") (mkPrep "with");
lin tie_up_V2 = mkV2 (partV (mkV "tie") "up");
lin tighten_up_V2 = mkV2 (partV (mkV "tighten") "up");
lin time_out_V = partV (mkV "time") "out";
lin time_out_V2 = mkV2 (partV (mkV "time") "out");
lin tip_off_V2 = mkV2 (partV (mkV "tip") "off");
lin tip_over_V2 = mkV2 (partV (mkV "tip") "over");
lin tire_of_V2 = prepV2 (mkV "tire") (mkPrep "of");
lin tire_out_V2 = mkV2 (partV (mkV "tire") "out");
lin toddle_off_V = partV (mkV "toddle") "off";
lin tone_down_V2 = mkV2 (partV (mkV "tone") "down");
lin tool_up_V2 = mkV2 (partV (mkV "tool") "up");
lin tootle_off_V = partV (mkV "tootle") "off";
lin top_off_V2 = mkV2 (partV (mkV "top") "off");
lin top_out_V = partV (mkV "top") "out";
lin top_up_V2 = mkV2 (partV (mkV "top") "up");
lin tore_up_V = partV (mkV "tore") "up";
lin toss_about_V2 = mkV2 (partV (mkV "toss") "about");
lin toss_around_V2 = mkV2 (partV (mkV "toss") "around");
lin toss_back_V2 = mkV2 (partV (mkV "toss") "back");
lin toss_down_V2 = mkV2 (partV (mkV "toss") "down");
lin toss_for_V2 = prepV2 (mkV "toss") (mkPrep "for");
lin toss_off_V2 = mkV2 (partV (mkV "toss") "off");
lin toss_out_V = partV (mkV "toss") "out";
lin toss_up_V = partV (mkV "toss") "up";
lin tot_up_V = partV (mkV "tot") "up";
lin touch_down_V = partV (mkV "touch") "down";
lin touch_for_V3 = mkV3 (mkV "touch") noPrep (mkPrep "for");
lin touch_off_V2 = mkV2 (partV (mkV "touch") "off");
lin touch_on_V2 = prepV2 (mkV "touch") (mkPrep "on");
lin touch_up_V2 = mkV2 (partV (mkV "touch") "up");
lin touch_upon_V2 = prepV2 (mkV "touch") (mkPrep "upon");
lin tow_away_V2 = mkV2 (partV (mkV "tow") "away");
lin toy_at_V2 = prepV2 (mkV "toy") (mkPrep "at");
lin toy_over_V2 = prepV2 (mkV "toy") (mkPrep "over");
lin toy_with_V2 = prepV2 (mkV "toy") (mkPrep "with");
lin track_down_V2 = mkV2 (partV (mkV "track") "down");
lin trade_away_V = partV (mkV "trade") "away";
lin trade_down_V = partV (mkV "trade") "down";
lin trade_in_V2 = mkV2 (partV (mkV "trade") "in");
lin trade_off_V2 = mkV2 (partV (mkV "trade") "off");
lin trade_on_V2 = prepV2 (mkV "trade") (mkPrep "on");
lin trade_up_V = partV (mkV "trade") "up";
lin trade_upon_V2 = prepV2 (mkV "trade") (mkPrep "upon");
lin train_up_V2 = mkV2 (partV (mkV "train") "up");
lin trek_over_V = partV (mkV "trek") "over";
lin trickle_down_V = partV (mkV "trickle") "down";
lin trip_out_V = partV (mkV "trip") "out";
lin trip_over_V = partV (mkV "trip") "over";
lin trip_over_V2 = prepV2 (mkV "trip") (mkPrep "over");
lin trip_up_V = partV (mkV "trip") "up";
lin trot_off_V = partV (mkV "trot") "off";
lin trot_off_to_V2 = prepV2 (partV (mkV "trot") "off") (mkPrep "to");
lin trot_out_V2 = mkV2 (partV (mkV "trot") "out");
lin trough_out_V = partV (mkV "trough") "out";
lin trump_up_V = partV (mkV "trump") "up";
lin try_back_V = partV (mkV "try") "back";
lin try_for_V2 = prepV2 (mkV "try") (mkPrep "for");
lin try_it_on_V = partV (mkV "try") "it on";
lin try_on_V2 = mkV2 (partV (mkV "try") "on");
lin try_out_V = partV (mkV "try") "out";
lin try_out_V2 = mkV2 (partV (mkV "try") "out");
lin try_out_for_V2 = prepV2 (partV (mkV "try") "out") (mkPrep "for");
lin tuck_away_V2 = mkV2 (partV (mkV "tuck") "away");
lin tuck_in_V = partV (mkV "tuck") "in";
lin tuck_in_V2 = mkV2 (partV (mkV "tuck") "in");
lin tuck_into_V2 = prepV2 (mkV "tuck") (mkPrep "into");
lin tuck_up_V2 = mkV2 (partV (mkV "tuck") "up");
lin tune_in_V = partV (mkV "tune") "in";
lin tune_in_to_V2 = prepV2 (partV (mkV "tune") "in") (mkPrep "to");
lin tune_out_V2 = mkV2 (partV (mkV "tune") "out");
lin tune_up_V2 = mkV2 (partV (mkV "tune") "up");
lin turn_against_V2 = prepV2 (mkV "turn") (mkPrep "against");
lin turn_around_V2 = mkV2 (partV (mkV "turn") "around");
lin turn_away_V = partV (mkV "turn") "away";
lin turn_away_V2 = mkV2 (partV (mkV "turn") "away");
lin turn_back_V = partV (mkV "turn") "back";
lin turn_down_V2 = mkV2 (partV (mkV "turn") "down");
lin turn_in_V = partV (mkV "turn") "in";
lin turn_in_V2 = mkV2 (partV (mkV "turn") "in");
lin turn_into_V2 = prepV2 (mkV "turn") (mkPrep "into");
lin turn_off_V2 = mkV2 (partV (mkV "turn") "off");
lin turn_on_V = partV (mkV "turn") "on";
lin turn_on_V2 = mkV2 (partV (mkV "turn") "on");
lin turn_out_V = partV (mkV "turn") "out";
lin turn_out_V2 = mkV2 (partV (mkV "turn") "out");
lin turn_over_V = partV (mkV "turn") "over";
lin turn_over_V2 = mkV2 (partV (mkV "turn") "over");
lin turn_to_V2 = prepV2 (mkV "turn") (mkPrep "to");
lin turn_up_V = partV (mkV "turn") "up";
lin turn_up_V2 = mkV2 (partV (mkV "turn") "up");
lin twist_together_V = partV (mkV "twist") "together";
lin type_in_V2 = mkV2 (partV (mkV "type") "in");
lin type_out_V2 = mkV2 (partV (mkV "type") "out");
lin type_up_V2 = mkV2 (partV (mkV "type") "up");
lin urge_on_V2 = mkV2 (partV (mkV "urge") "on");
lin urge_upon_V2 = mkV2 (partV (mkV "urge") "upon");
lin use_up_V = partV (mkV "use") "up";
lin use_up_V2 = mkV2 (partV (mkV "use") "up");
lin usher_in_V2 = mkV2 (partV (mkV "usher") "in");
lin vacuum_up_V2 = mkV2 (partV (mkV "vacuum") "up");
lin vamp_up_V2 = mkV2 (partV (mkV "vamp") "up");
lin veer_away_from_V2 = prepV2 (partV (mkV "veer") "away") (mkPrep "from");
lin veer_off_V = partV (mkV "veer") "off";
lin veg_out_V = partV (mkV "veg") "out";
lin venture_forth_V = partV (mkV "venture") "forth";
lin vote_down_V = partV (mkV "vote") "down";
lin wade_in_V = partV (mkV "wade") "in";
lin wade_into_V2 = prepV2 (mkV "wade") (mkPrep "into");
lin wade_through_V2 = prepV2 (mkV "wade") (mkPrep "through");
lin wait_about_V = partV (mkV "wait") "about";
lin wait_around_V = partV (mkV "wait") "around";
lin wait_behind_V = partV (mkV "wait") "behind";
lin wait_in_V = partV (mkV "wait") "in";
lin wait_on_V2 = prepV2 (mkV "wait") (mkPrep "on");
lin wait_out_V2 = mkV2 (partV (mkV "wait") "out");
lin wait_up_V = partV (mkV "wait") "up";
lin wait_up_for_V2 = prepV2 (partV (mkV "wait") "up") (mkPrep "for");
lin wait_upon_V2 = prepV2 (mkV "wait") (mkPrep "upon");
lin wake_up_V = partV (mkV "wake") "up";
lin wake_up_V2 = mkV2 (partV (mkV "wake") "up");
lin walk_away_from_V2 = prepV2 (partV (mkV "walk") "away") (mkPrep "from");
lin walk_away_with_V2 = prepV2 (partV (mkV "walk") "away") (mkPrep "with");
lin walk_back_from_V2 = prepV2 (partV (mkV "walk") "back") (mkPrep "from");
lin walk_by_V = partV (mkV "walk") "by";
lin walk_in_V = partV (mkV "walk") "in";
lin walk_in_on_V2 = prepV2 (partV (mkV "walk") "in") (mkPrep "on");
lin walk_into_V2 = prepV2 (mkV "walk") (mkPrep "into");
lin walk_off_V2 = mkV2 (partV (mkV "walk") "off");
lin walk_off_with_V2 = prepV2 (partV (mkV "walk") "off") (mkPrep "with");
lin walk_on_V = partV (mkV "walk") "on";
lin walk_out_V = partV (mkV "walk") "out";
lin walk_out_on_V2 = prepV2 (partV (mkV "walk") "out") (mkPrep "on");
lin walk_through_V3 = mkV3 (mkV "walk") noPrep (mkPrep "through");
lin walk_up_V = partV (mkV "walk") "up";
lin wall_off_V = partV (mkV "wall") "off";
lin waltz_through_V2 = prepV2 (mkV "waltz") (mkPrep "through");
lin wander_off_V = partV (mkV "wander") "off";
lin want_in_V = partV (mkV "want") "in";
lin want_out_V = partV (mkV "want") "out";
lin ward_off_V = partV (mkV "ward") "off";
lin warm_up_V = partV (mkV "warm") "up";
lin wash_away_V2 = mkV2 (partV (mkV "wash") "away");
lin wash_down_V2 = mkV2 (partV (mkV "wash") "down");
lin wash_out_V2 = mkV2 (partV (mkV "wash") "out");
lin wash_over_V2 = prepV2 (mkV "wash") (mkPrep "over");
lin wash_up_V = partV (mkV "wash") "up";
lin wash_up_V2 = mkV2 (partV (mkV "wash") "up");
lin waste_away_V = partV (mkV "waste") "away";
lin watch_out_V = partV (mkV "watch") "out";
lin watch_out_for_V2 = prepV2 (partV (mkV "watch") "out") (mkPrep "for");
lin watch_over_V2 = prepV2 (mkV "watch") (mkPrep "over");
lin water_down_V2 = mkV2 (partV (mkV "water") "down");
lin wave_aside_V2 = mkV2 (partV (mkV "wave") "aside");
lin wave_away_V = partV (mkV "wave") "away";
lin wave_down_V2 = mkV2 (partV (mkV "wave") "down");
lin wave_off_V2 = mkV2 (partV (mkV "wave") "off");
lin wave_on_V2 = mkV2 (partV (mkV "wave") "on");
lin wean_off_V2 = mkV2 (partV (mkV "wean") "off");
lin wear_away_V2 = mkV2 (partV IrregEng.wear_V "away");
lin wear_down_V2 = mkV2 (partV IrregEng.wear_V "down");
lin wear_off_V = partV IrregEng.wear_V "off";
lin wear_out_V = partV (mkV "wear") "out";
lin wear_out_V2 = mkV2 (partV IrregEng.wear_V "out");
lin weed_out_V2 = mkV2 (partV (mkV "weed") "out");
lin weigh_down_on_V2 = prepV2 (partV (mkV "weigh") "down") (mkPrep "on");
lin weigh_in_V = partV (mkV "weigh") "in";
lin weigh_in_on_V2 = prepV2 (partV (mkV "weigh") "in") (mkPrep "on");
lin weigh_on_V2 = prepV2 (mkV "weigh") (mkPrep "on");
lin weigh_out_V2 = mkV2 (partV (mkV "weigh") "out");
lin weigh_up_V2 = mkV2 (partV (mkV "weigh") "up");
lin weird_out_V2 = mkV2 (partV (mkV "weird") "out");
lin well_up_V = partV (mkV "well") "up";
lin whack_off_V = partV (mkV "whack") "off";
lin wheel_around_V = partV (mkV "wheel") "around";
lin wheel_out_V2 = mkV2 (partV (mkV "wheel") "out");
lin wheel_round_V = partV (mkV "wheel") "round";
lin wheel_up_V = partV (mkV "wheel") "up";
lin while_away_V2 = mkV2 (partV (mkV "while") "away");
lin whip_into_V2 = prepV2 (mkV "whip") (mkPrep "into");
lin whip_out_V2 = mkV2 (partV (mkV "whip") "out");
lin whip_out_of_V2 = prepV2 (partV (mkV "whip") "out") (mkPrep "of");
lin whip_through_V2 = prepV2 (mkV "whip") (mkPrep "through");
lin whip_up_V2 = mkV2 (partV (mkV "whip") "up");
lin whisk_away_V2 = mkV2 (partV (mkV "whisk") "away");
lin white_out_V2 = mkV2 (partV (mkV "white") "out");
lin wig_out_V = partV (mkV "wig") "out";
lin wiggle_out_V = partV (mkV "wiggle") "out";
lin wiggle_out_of_V2 = prepV2 (partV (mkV "wiggle") "out") (mkPrep "of");
lin wimp_out_V = partV (mkV "wimp") "out";
lin win_back_V = partV (mkV "win") "back";
lin win_down_V = partV (mkV "win") "down";
lin win_over_V = partV (mkV "win") "over";
lin win_up_V = partV (mkV "win") "up";
lin wind_down_V = partV IrregEng.wind_V "down";
lin wind_down_V2 = mkV2 (partV IrregEng.wind_V "down");
lin wind_on_V = partV IrregEng.wind_V "on";
lin wind_up_V = partV (mkV "wind") "up";
lin wind_up_V2 = mkV2 (partV IrregEng.wind_V "up");
lin winkle_out_V2 = mkV2 (partV (mkV "winkle") "out");
lin wipe_out_V = partV (mkV "wipe") "out";
lin wipe_out_V2 = mkV2 (partV (mkV "wipe") "out");
lin wire_up_V2 = mkV2 (partV (mkV "wire") "up");
lin wise_up_V = partV (mkV "wise") "up";
lin word_up_V2 = mkV2 (partV (mkV "word") "up");
lin work_off_V2 = mkV2 (partV (mkV "work") "off");
lin work_on_V2 = prepV2 (mkV "work") (mkPrep "on");
lin work_out_V = partV (mkV "work") "out";
lin work_out_V2 = mkV2 (partV (mkV "work") "out");
lin work_over_V2 = mkV2 (partV (mkV "work") "over");
lin work_through_V2 = prepV2 (mkV "work") (mkPrep "through");
lin work_together_V = partV (mkV "work") "together";
lin work_up_V = partV (mkV "work") "up";
lin wound_up_V = partV (mkV "wound") "up";
lin wrap_around_V2 = mkV2 (partV (mkV "wrap") (variants {"around"; "round"}));
lin wrap_up_V = partV (mkV "wrap") "up";
lin wrap_up_V2 = mkV2 (partV (mkV "wrap") "up");
lin wriggle_out_of_V2 = prepV2 (partV (mkV "wriggle") "out") (mkPrep "of");
lin write_down_V2 = mkV2 (partV IrregEng.write_V "down");
lin write_in_V = partV IrregEng.write_V "in";
lin write_off_V2 = mkV2 (partV IrregEng.write_V "off");
lin write_out_V2 = mkV2 (partV IrregEng.write_V "out");
lin write_up_V2 = mkV2 (partV IrregEng.write_V "up");
lin yack_on_V = partV (mkV "yack") "on";
lin yak_on_V = partV (mkV "yak") "on";
lin yak_on_about_V2 = prepV2 (partV (mkV "yak") "on") (mkPrep "about");
lin yammer_on_V = partV (mkV "yammer") "on";
lin yammer_on_about_V2 = prepV2 (partV (mkV "yammer") "on") (mkPrep "about");
lin yank_out_V = partV (mkV "yank") "out";
lin yell_out_V = partV (mkV "yell") "out";
lin yield_to_V2 = prepV2 (mkV "yield") (mkPrep "to");
lin yield_up_V = partV (mkV "yield") "up";
lin zero_in_V = partV (mkV "zero") "in";
lin zero_in_on_V2 = prepV2 (partV (mkV "zero") "in") (mkPrep "on");
lin zero_out_V2 = mkV2 (partV (mkV "zero") "out");
lin zip_around_V2 = prepV2 (mkV "zip") (mkPrep "around");
lin zip_by_V2 = prepV2 (mkV "zip") (mkPrep "by");
lin zip_it_V = partV (mkV "zip") "it";
lin zip_through_V = partV (mkV "zip") "through";
lin zip_up_V = partV (mkV "zip") "up";
lin zone_in_V = partV (mkV "zone") "in";
lin zone_in_on_V2 = prepV2 (partV (mkV "zone") "in") (mkPrep "on");
lin zone_out_V = partV (mkV "zone") "out";
lin zonk_out_V = partV (mkV "zonk") "out";
lin zoom_in_V = partV (mkV "zoom") "in";
lin zoom_in_on_V2 = prepV2 (partV (mkV "zoom") "in") (mkPrep "on");
lin zoom_off_V = partV (mkV "zoom") "off";
lin zoom_out_V = partV (mkV "zoom") "out";

lin author_V = mkVerb "author" "authors" "authored" "authored" "authoring";
}
