stages:
  - test
  - build
  - deploy

image: registry.gitlab.com/tokenmill/nlg/accelerated-text/demo-test-env:latest

test:preact_demo:
  script:
    - make test
  stage: test

job:npm_audit:
  only:
    - schedules
  script:
    - make npm-audit

lexical-analysis:code-linter:
  image: registry.gitlab.com/tokenmill/nlg/accelerated-text/pytest:latest
  stage: test
  when: on_success
  script:
    - flake8 lexical-analyser/api
    - flake8 lexical-analyser/core

deploy-app:
  stage: deploy
  when: on_success
  only:
    - master
  script:
    - make deploy-app

unit-test-nlg-api:
  stage: test
  image: clojure:openjdk-8-lein-alpine
  when: always
  script:
    - cd nlg-api
    - lein do clean, test

integration-test-nlg-api:
  stage: test
  image: clojure:openjdk-8-lein-alpine
  when: manual
  script:
    - cd nlg-api
    - lein do clean, test :all

build-nlg-api:
  stage: build
  image: clojure:openjdk-8-lein-alpine
  when: on_success
  script:
    - cd nlg-api
    - lein do clean, uberjar
  artifacts:
    paths:
      - nlg-api/target/uberjar/nlg-api-0.1.0-SNAPSHOT-standalone.jar
    expire_in: 1 week

deploy-nlg-api:
  stage: deploy
  image: registry.gitlab.com/tokenmill/commons/aws:1
  when: on_success
  only:
    - master
  dependencies:
    - build-nlg-api
  script:
    - cd nlg-api
    - export S3_BUCKET_NAME=nlg-api
    - export STACK_NAME=nlg-api
    - aws cloudformation package --template-file sam.yaml --output-template-file output-sam.yaml --s3-bucket $S3_BUCKET_NAME
    - aws cloudformation deploy --template-file output-sam.yaml --stack-name $STACK_NAME --capabilities CAPABILITY_IAM
