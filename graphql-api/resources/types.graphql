### Enums

enum Usage {
    YES
    NO
    DONT_CARE
}

enum PartOfSpeech {
    ADJECTIVE
    NOUN
    VERB
}

### User

type Organization {
    id:             ID!
    name:           String!
}

type User {
    id:             ID!
    fullName:       String!
    email:          String
    organization:   Organization!
}

### Dictionary

type Phrase {
    id:             ID!
    text:           String!
}

type Synonyms {
    rootPhrase:     Phrase!
    phrases:        [ Phrase! ]!
}

type ReaderFlag {
    id:             ID!
    name:           String!
}

type ReaderFlagUsage {
    id:             ID!
    flag:           ReaderFlag!
    usage:          Usage!
}

type PhraseUsageModel {
    id:             ID!
    phrase:         String!
    defaultUsage:   Usage!
    readerUsage:    [ ReaderFlagUsage! ]!
}

type DictionaryItem {
    id:             ID!
    name:           String!
    partOfSpeech:   PartOfSpeech
    usageModels:    [ PhraseUsageModel! ]!
}

### Lexicon

type LexiconItem {
    id:             ID!
    createdAt:      String
    key:            String!
    synonyms:       [ String! ]!
    updatedAt:      String
}

type Lexicon {
    items:          [ LexiconItem! ]!
    limit:          Int!
    offset:         Int!
    totalCount:     Int!
}

### Queries

type Mutation {

    updatePhraseUsageModelDefault(
        id:           ID!
        defaultUsage: Usage!
    ):  PhraseUsageModel!

    updateReaderFlagUsage(
        id:           ID!
        usage:        Usage!
    ):  ReaderFlagUsage!
}

type Query {

    me:               User!

    dictionary:       [ DictionaryItem! ]!

    dictionaryItem(
        id:           ID!
    ):  DictionaryItem

    readerFlags:      [ ReaderFlag! ]!

    searchPhrases(
        query:        String,
        partOfSpeech: PartOfSpeech,
    ):  [ Phrase! ]!

    searchSynonyms(
        query:        String,
        partOfSpeech: PartOfSpeech,
    ):  [ Synonyms! ]!

    searchLexicon(
        query:        String
        limit:        Int
        offset:       Int
    ):  Lexicon!

    synonyms(
        phraseId:     ID!
    ):  Synonyms!

}

schema {
  query:          Query
}
